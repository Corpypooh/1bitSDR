
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.11.2.446

// ldbanno -n Verilog -o FPGASDR_impl1_mapvo.vo -w -neg -gui -msgset C:/Users/user/lattice/1BitADCFPGASDR/promote.xml FPGASDR_impl1_map.ncd 
// Netlist created on Sun Apr 05 20:40:27 2020
// Netlist written on Sun Apr 05 20:40:41 2020
// Design is for device LCMXO2-7000HE
// Design is for package TQFP144
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module top ( i_Rx_Serial, o_Tx_Serial, o_Rx_DV, o_Rx_Byte, MYLED, XIn, XOut, 
             RFIn, DiffOut, PWMOut, sinGen, sin_out, CIC_out_clkSin );
  input  i_Rx_Serial, XIn, RFIn;
  output o_Tx_Serial, o_Rx_DV;
  output [7:0] o_Rx_Byte;
  output [7:0] MYLED;
  output XOut, DiffOut, PWMOut, sinGen, sin_out, CIC_out_clkSin;
  wire   LOCosine_12, \Mixer1/n11216 , \Mixer1/MixerOutCos_11_N_249_11 , 
         LOCosine_11, LOCosine_10, \Mixer1/n11215 , 
         \Mixer1/MixerOutCos_11_N_249_9 , \Mixer1/MixerOutCos_11_N_249_10 , 
         LOCosine_9, LOCosine_8, \Mixer1/n11214 , 
         \Mixer1/MixerOutCos_11_N_249_7 , \Mixer1/MixerOutCos_11_N_249_8 , 
         LOCosine_7, LOCosine_6, \Mixer1/n11213 , 
         \Mixer1/MixerOutCos_11_N_249_5 , \Mixer1/MixerOutCos_11_N_249_6 , 
         LOCosine_5, LOCosine_4, \Mixer1/n11212 , 
         \Mixer1/MixerOutCos_11_N_249_3 , \Mixer1/MixerOutCos_11_N_249_4 , 
         LOCosine_3, LOCosine_2, \Mixer1/n11211 , 
         \Mixer1/MixerOutCos_11_N_249_1 , \Mixer1/MixerOutCos_11_N_249_2 , 
         LOCosine_1, \Mixer1/MixerOutCos_11_N_249_0 , LOSine_12, 
         \Mixer1/n11196 , \Mixer1/MixerOutSin_11_N_235_11 , LOSine_11, 
         LOSine_10, \Mixer1/n11195 , \Mixer1/MixerOutSin_11_N_235_9 , 
         \Mixer1/MixerOutSin_11_N_235_10 , LOSine_9, LOSine_8, \Mixer1/n11194 , 
         \Mixer1/MixerOutSin_11_N_235_7 , \Mixer1/MixerOutSin_11_N_235_8 , 
         LOSine_7, LOSine_6, \Mixer1/n11193 , \Mixer1/MixerOutSin_11_N_235_5 , 
         \Mixer1/MixerOutSin_11_N_235_6 , LOSine_5, LOSine_4, \Mixer1/n11192 , 
         \Mixer1/MixerOutSin_11_N_235_3 , \Mixer1/MixerOutSin_11_N_235_4 , 
         LOSine_3, LOSine_2, \Mixer1/n11191 , \Mixer1/MixerOutSin_11_N_235_1 , 
         \Mixer1/MixerOutSin_11_N_235_2 , LOSine_1, 
         \Mixer1/MixerOutSin_11_N_235_0 , \PWM1/counter_9 , \PWM1/DataInReg_9 , 
         \PWM1/PWMOut_N_1868 , osc_clk, \PWM1/n11114 , PWMOut_c, 
         \PWM1/counter_8 , \PWM1/DataInReg_8 , \PWM1/counter_7 , 
         \PWM1/DataInReg_7 , \PWM1/n11113 , \PWM1/counter_6 , 
         \PWM1/DataInReg_6 , \PWM1/counter_5 , \PWM1/DataInReg_5 , 
         \PWM1/n11112 , \PWM1/counter_4 , \PWM1/DataInReg_4 , \PWM1/counter_3 , 
         \PWM1/DataInReg_3 , \PWM1/n11111 , \PWM1/counter_2 , 
         \PWM1/DataInReg_2 , \PWM1/counter_1 , \PWM1/DataInReg_1 , 
         \PWM1/n11110 , \PWM1/counter_0 , \PWM1/DataInReg_0 , \PWM1/n46 , 
         \PWM1/n11616 , \PWM1/n47 , \PWM1/n48 , \PWM1/n11615 , \PWM1/n49 , 
         \PWM1/n50 , \PWM1/n11614 , \PWM1/n51 , \PWM1/n52 , \PWM1/n11613 , 
         \PWM1/n53 , \PWM1/n54 , \PWM1/n11612 , \PWM1/n55 , 
         \uart_tx1/r_Clock_Count_15 , \uart_tx1/n70 , \uart_tx1/r_SM_Main_2 , 
         \uart_tx1/n8364 , \uart_tx1/UartClk[2] , \uart_tx1/n12242 , 
         \uart_tx1/r_Clock_Count_14 , \uart_tx1/r_Clock_Count_13 , 
         \uart_tx1/n71 , \uart_tx1/n72 , \uart_tx1/n12241 , 
         \uart_tx1/r_Clock_Count_12 , \uart_tx1/r_Clock_Count_11 , 
         \uart_tx1/n73 , \uart_tx1/n74 , \uart_tx1/n12240 , 
         \uart_tx1/r_Clock_Count_10 , \uart_tx1/r_Clock_Count_9 , 
         \uart_tx1/n75 , \uart_tx1/n76 , \uart_tx1/n12239 , 
         \uart_tx1/r_Clock_Count_8 , \uart_tx1/r_Clock_Count_7 , 
         \uart_tx1/n77 , \uart_tx1/n78 , \uart_tx1/n12238 , 
         \uart_tx1/r_Clock_Count_6 , \uart_tx1/r_Clock_Count_5 , 
         \uart_tx1/n79 , \uart_tx1/n80 , \uart_tx1/n12237 , 
         \uart_tx1/r_Clock_Count_4 , \uart_tx1/r_Clock_Count_3 , 
         \uart_tx1/n81 , \uart_tx1/n82 , \uart_tx1/n12236 , 
         \uart_tx1/r_Clock_Count_2 , \uart_tx1/r_Clock_Count_1 , 
         \uart_tx1/n83 , \uart_tx1/n84 , \uart_tx1/n12235 , \uart_tx1/n16 , 
         \uart_tx1/n85 , \uart_tx1/n2 , \uart_tx1/n18 , \uart_tx1/n19 , 
         \uart_tx1/n11625 , \uart_tx1/n3_adj_2613 , \uart_tx1/n20 , 
         phase_inc_carrGen_63, n2217, n9004, phase_inc_carrGen_62, n2218, 
         n2875, n2876, osc_clk_enable_1457, n12219, phase_inc_carrGen_61, 
         n2219, phase_inc_carrGen_60, n2220, n2877, n2878, n12218, 
         phase_inc_carrGen_59, n2221, phase_inc_carrGen_58, n2222, n2879, 
         n2880, n12217, phase_inc_carrGen_57, n2223, phase_inc_carrGen_56, 
         n2224, n2881, n2882, n12216, phase_inc_carrGen_55, n2225, 
         phase_inc_carrGen_54, n2226, n2883, n2884, n12215, 
         phase_inc_carrGen_53, n2227, phase_inc_carrGen_52, n2228, n2885, 
         n2886, n12214, phase_inc_carrGen_51, n2229, phase_inc_carrGen_50, 
         n2230, o_Rx_Byte_c_4, n2887, n2888, n12213, phase_inc_carrGen_49, 
         n2231, phase_inc_carrGen_48, n2232, n2889, n2890, n12212, 
         phase_inc_carrGen_47, n2233, phase_inc_carrGen_46, n2234, n2891, 
         n2892, n12211, phase_inc_carrGen_45, n2235, phase_inc_carrGen_44, 
         n2236, n2893, n2894, n12210, \SinCos1/rom_addr0_r , phase_accum_56, 
         \SinCos1/rom_addr0_r_n , \SinCos1/co0 , \SinCos1/rom_addr0_r_2 , 
         \SinCos1/rom_addr0_r_1 , phase_accum_58, \SinCos1/rom_addr0_r_n_1 , 
         \SinCos1/rom_addr0_r_n_2 , \SinCos1/co1 , \SinCos1/rom_addr0_r_4 , 
         \SinCos1/rom_addr0_r_3 , phase_accum_60, \SinCos1/rom_addr0_r_n_3 , 
         \SinCos1/rom_addr0_r_n_4 , \SinCos1/co2 , \SinCos1/rom_addr0_r_5 , 
         \SinCos1/rom_addr0_r_n_5 , \SinCos1/rom_dout_2 , \SinCos1/rom_dout_1 , 
         \SinCos1/co0_1 , \SinCos1/rom_dout_s_n_1 , \SinCos1/rom_dout_s_n_2 , 
         \SinCos1/co1_1 , \SinCos1/rom_dout_4 , \SinCos1/rom_dout_3 , 
         \SinCos1/rom_dout_s_n_3 , \SinCos1/rom_dout_s_n_4 , \SinCos1/co2_1 , 
         \SinCos1/rom_dout_6 , \SinCos1/rom_dout_5 , \SinCos1/rom_dout_s_n_5 , 
         \SinCos1/rom_dout_s_n_6 , \SinCos1/co3 , \SinCos1/rom_dout_8 , 
         \SinCos1/rom_dout_7 , \SinCos1/rom_dout_s_n_7 , 
         \SinCos1/rom_dout_s_n_8 , \SinCos1/co4 , \SinCos1/rom_dout_10 , 
         \SinCos1/rom_dout_9 , \SinCos1/rom_dout_s_n_9 , 
         \SinCos1/rom_dout_s_n_10 , \SinCos1/co5 , \SinCos1/rom_dout_12 , 
         \SinCos1/rom_dout_11 , \SinCos1/rom_dout_s_n_11 , 
         \SinCos1/rom_dout_s_n_12 , \SinCos1/rom_dout_13 , \SinCos1/co0_2 , 
         \SinCos1/rom_dout_15 , \SinCos1/rom_dout_14 , 
         \SinCos1/rom_dout_c_n_1 , \SinCos1/rom_dout_c_n_2 , \SinCos1/co1_2 , 
         \SinCos1/rom_dout_17 , \SinCos1/rom_dout_16 , 
         \SinCos1/rom_dout_c_n_3 , \SinCos1/rom_dout_c_n_4 , \SinCos1/co2_2 , 
         \SinCos1/rom_dout_19 , \SinCos1/rom_dout_18 , 
         \SinCos1/rom_dout_c_n_5 , \SinCos1/rom_dout_c_n_6 , \SinCos1/co3_1 , 
         \SinCos1/rom_dout_21 , \SinCos1/rom_dout_20 , 
         \SinCos1/rom_dout_c_n_7 , \SinCos1/rom_dout_c_n_8 , \SinCos1/co4_1 , 
         \SinCos1/rom_dout_23 , \SinCos1/rom_dout_22 , 
         \SinCos1/rom_dout_c_n_9 , \SinCos1/rom_dout_c_n_10 , \SinCos1/co5_1 , 
         \SinCos1/rom_dout_25 , \SinCos1/rom_dout_24 , 
         \SinCos1/rom_dout_c_n_11 , \SinCos1/rom_dout_c_n_12 , 
         \SinCos1/rom_dout , phase_inc_carrGen_43, n2237, phase_inc_carrGen_42, 
         n2238, n2895, n2896, n12209, phase_inc_carrGen_41, n2239, 
         phase_inc_carrGen_40, n2240, n2897, n2898, n12208, 
         phase_inc_carrGen_39, n2241, phase_inc_carrGen_38, n2242, n2899, 
         n2900, n12207, phase_inc_carrGen_37, n2243, phase_inc_carrGen_36, 
         n2244, n2901, n2902, n12206, phase_inc_carrGen_35, n2245, 
         phase_inc_carrGen_34, n2246, n2903, n2904, n12205, 
         phase_inc_carrGen_33, n2247, phase_inc_carrGen_32, n2248, n2905, 
         n2906, n12204, phase_inc_carrGen_31, n2249, phase_inc_carrGen_30, 
         n2250, n2907, n2908, n12203, phase_inc_carrGen_29, n2251, 
         phase_inc_carrGen_28, n2252, n2909, n2910, n12202, 
         phase_inc_carrGen_27, n2253, phase_inc_carrGen_26, n2254, n2911, 
         n2912, n12201, phase_inc_carrGen_25, n2255, phase_inc_carrGen_24, 
         n2256, n2913, n2914, n12200, phase_inc_carrGen_23, n2257, 
         phase_inc_carrGen_22, n2258, n2915, n2916, n12199, 
         phase_inc_carrGen_21, n2259, phase_inc_carrGen_20, n2260, n2917, 
         n2918, n12198, phase_inc_carrGen_19, n2261, phase_inc_carrGen_18, 
         n2262, n2919, n2920, n12197, phase_inc_carrGen_17, n2263, 
         phase_inc_carrGen_16, n2264, n2921, n2922, n12196, 
         phase_inc_carrGen_15, n2265, phase_inc_carrGen_14, n2266, n2923, 
         n2924, n12195, phase_inc_carrGen_13, n2267, phase_inc_carrGen_12, 
         n2268, n2925, n2926, n12194, phase_inc_carrGen_11, n2269, 
         phase_inc_carrGen_10, n2270, n2927, n2928, n12193, 
         phase_inc_carrGen_9, n2271, phase_inc_carrGen_8, n2272, n2929, n2930, 
         n12192, phase_inc_carrGen_7, n2273, phase_inc_carrGen_6, n2274, n2931, 
         n2932, n12191, phase_inc_carrGen_5, n2275, phase_inc_carrGen_4, n2276, 
         n2933, n2934, n12190, phase_inc_carrGen_3, n2277, phase_inc_carrGen_2, 
         n2803, n2936, osc_clk_enable_1396, n12189, n2935, n12897, n13061, 
         n11611, n880, n11610, n882, n881, n11609, n884, n883, n11608, n886, 
         n885, n11607, n888, n887, n11606, n890, n889, n11605, n892, n891, 
         n11604, n894, n893, n11603, n896, n895, n11602, n898, n897, n11601, 
         n900, n899, n11600, n902, n901, n11599, n904, n903, n11598, n906, 
         n905, n11597, n908, n907, n11596, n910, n909, n11595, n912, n911, 
         n11594, n914, n913, n11593, n916, n915, n11592, n918, n917, n11591, 
         n920, n919, n11590, n922, n921, n11589, n924, n923, n11588, n926, 
         n925, n11587, n928, n927, n11586, n930, n929, n11585, n932, n931, 
         n11584, n934, n933, n11583, n936, n935, n11582, n938, n937, n11581, 
         n940, n939, n941, n11579, n944, n943, n11578, n946, n945, n11577, 
         n948, n947, n11576, n950, n949, n11575, n952, n951, n11574, n954, 
         n953, n11573, n956, n955, n11572, n958, n957, n11571, n960, n959, 
         n11570, n962, n961, n11569, n964, n963, n11568, n966, n965, n11567, 
         n968, n967, n11566, n970, n969, n11565, n972, n971, n11564, n974, 
         n973, n11563, n976, n975, n11562, n978, n977, n11561, n980, n979, 
         n11560, n982, n981, n11559, n984, n983, n11558, n986, n985, n11557, 
         n988, n987, n11556, n990, n989, n11555, n992, n991, n11554, n994, 
         n993, n11553, n996, n995, n11552, n998, n997, n11551, n1000, n999, 
         n11550, n1002, n1001, n1003, \CIC1Sin/d1_59 , \CIC1Sin/n4204 , 
         \CIC1Sin/n4190 , \CIC1Sin/d2_59 , \CIC1Sin/d1_58 , \CIC1Sin/n4205 , 
         \CIC1Sin/d2_58 , \CIC1Sin/d2_71_N_489_59 , \CIC1Sin/d2_71_N_489_58 , 
         \CIC1Sin/n12089 , \CIC1Sin/n12090 , \CIC1Sin/d6_63 , \CIC1Sin/n5568 , 
         \CIC1Sin/n5558 , \CIC1Sin/d_d6_63 , \CIC1Sin/d6_62 , \CIC1Sin/n5569 , 
         \CIC1Sin/d_d6_62 , \CIC1Sin/d7_71_N_1530_63 , 
         \CIC1Sin/d7_71_N_1530_62 , \CIC1Sin/osc_clk_enable_346 , 
         \CIC1Sin/n11723 , \CIC1Sin/d7_62 , \CIC1Sin/d7_63 , \CIC1Sin/n11724 , 
         \CIC1Sin/d1_57 , \CIC1Sin/n4206 , \CIC1Sin/d2_57 , \CIC1Sin/d1_56 , 
         \CIC1Sin/n4207 , \CIC1Sin/d2_56 , \CIC1Sin/d2_71_N_489_57 , 
         \CIC1Sin/d2_71_N_489_56 , \CIC1Sin/n12088 , \CIC1Sin/d1_55 , 
         \CIC1Sin/n4208 , \CIC1Sin/d2_55 , \CIC1Sin/d1_54 , \CIC1Sin/n4209 , 
         \CIC1Sin/d2_54 , \CIC1Sin/d2_71_N_489_55 , \CIC1Sin/d2_71_N_489_54 , 
         \CIC1Sin/n12087 , \CIC1Sin/d1_53 , \CIC1Sin/n4210 , \CIC1Sin/d2_53 , 
         \CIC1Sin/d1_52 , \CIC1Sin/n4211 , \CIC1Sin/d2_52 , 
         \CIC1Sin/d2_71_N_489_53 , \CIC1Sin/d2_71_N_489_52 , \CIC1Sin/n12086 , 
         \CIC1Sin/d1_51 , \CIC1Sin/n4212 , \CIC1Sin/d2_51 , \CIC1Sin/d1_50 , 
         \CIC1Sin/n4213 , \CIC1Sin/d2_50 , \CIC1Sin/d2_71_N_489_51 , 
         \CIC1Sin/d2_71_N_489_50 , \CIC1Sin/n12085 , \CIC1Sin/d1_49 , 
         \CIC1Sin/n4214 , \CIC1Sin/d2_49 , \CIC1Sin/d1_48 , \CIC1Sin/n4215 , 
         \CIC1Sin/d2_48 , \CIC1Sin/d2_71_N_489_49 , \CIC1Sin/d2_71_N_489_48 , 
         \CIC1Sin/n12084 , \CIC1Sin/d1_47 , \CIC1Sin/n4216 , \CIC1Sin/d2_47 , 
         \CIC1Sin/d1_46 , \CIC1Sin/n4217 , \CIC1Sin/d2_46 , 
         \CIC1Sin/d2_71_N_489_47 , \CIC1Sin/d2_71_N_489_46 , \CIC1Sin/n12083 , 
         \CIC1Sin/d1_45 , \CIC1Sin/n4218 , \CIC1Sin/d2_45 , \CIC1Sin/d1_44 , 
         \CIC1Sin/n4219 , \CIC1Sin/d2_44 , \CIC1Sin/d2_71_N_489_45 , 
         \CIC1Sin/d2_71_N_489_44 , \CIC1Sin/n12082 , \CIC1Sin/d1_43 , 
         \CIC1Sin/n4220 , \CIC1Sin/d2_43 , \CIC1Sin/d1_42 , \CIC1Sin/n4221 , 
         \CIC1Sin/d2_42 , \CIC1Sin/d2_71_N_489_43 , \CIC1Sin/d2_71_N_489_42 , 
         \CIC1Sin/n12081 , \CIC1Sin/d1_41 , \CIC1Sin/n4222 , \CIC1Sin/d2_41 , 
         \CIC1Sin/d1_40 , \CIC1Sin/n4223 , \CIC1Sin/d2_40 , 
         \CIC1Sin/d2_71_N_489_41 , \CIC1Sin/d2_71_N_489_40 , \CIC1Sin/n12080 , 
         \CIC1Sin/d1_39 , \CIC1Sin/n4224 , \CIC1Sin/d2_39 , \CIC1Sin/d1_38 , 
         \CIC1Sin/n4225 , \CIC1Sin/d2_38 , \CIC1Sin/d2_71_N_489_39 , 
         \CIC1Sin/d2_71_N_489_38 , \CIC1Sin/n12079 , \CIC1Sin/d1_37 , 
         \CIC1Sin/n4226 , \CIC1Sin/d2_37 , \CIC1Sin/d1_36 , \CIC1Sin/n4227 , 
         \CIC1Sin/d2_36 , \CIC1Sin/d2_71_N_489_37 , \CIC1Sin/d2_71_N_489_36 , 
         \CIC1Sin/n12078 , \CIC1Sin/d3_71 , \CIC1Sin/d2_71 , \CIC1Sin/d3_70 , 
         \CIC1Sin/d2_70 , \CIC1Sin/n12073 , \CIC1Sin/n4345 , \CIC1Sin/n4344 , 
         \CIC1Sin/d3_69 , \CIC1Sin/d2_69 , \CIC1Sin/d3_68 , \CIC1Sin/d2_68 , 
         \CIC1Sin/n12072 , \CIC1Sin/n4347 , \CIC1Sin/n4346 , \CIC1Sin/d6_69 , 
         \CIC1Sin/n5562 , \CIC1Sin/d_d6_69 , \CIC1Sin/d6_68 , \CIC1Sin/n5563 , 
         \CIC1Sin/d_d6_68 , \CIC1Sin/d7_71_N_1530_69 , 
         \CIC1Sin/d7_71_N_1530_68 , \CIC1Sin/n11726 , \CIC1Sin/d7_68 , 
         \CIC1Sin/d7_69 , \CIC1Sin/n11727 , \CIC1Sin/d6_61 , \CIC1Sin/n5570 , 
         \CIC1Sin/d_d6_61 , \CIC1Sin/d6_60 , \CIC1Sin/n5571 , 
         \CIC1Sin/d_d6_60 , \CIC1Sin/d7_71_N_1530_61 , 
         \CIC1Sin/d7_71_N_1530_60 , \CIC1Sin/n11722 , \CIC1Sin/d7_60 , 
         \CIC1Sin/d7_61 , \CIC1Sin/d6_59 , \CIC1Sin/n5572 , \CIC1Sin/d_d6_59 , 
         \CIC1Sin/d6_58 , \CIC1Sin/n5573 , \CIC1Sin/d_d6_58 , 
         \CIC1Sin/d7_71_N_1530_59 , \CIC1Sin/d7_71_N_1530_58 , 
         \CIC1Sin/n11721 , \CIC1Sin/d7_58 , \CIC1Sin/d7_59 , \CIC1Sin/d6_57 , 
         \CIC1Sin/n5574 , \CIC1Sin/d_d6_57 , \CIC1Sin/d6_56 , \CIC1Sin/n5575 , 
         \CIC1Sin/d_d6_56 , \CIC1Sin/d7_71_N_1530_57 , 
         \CIC1Sin/d7_71_N_1530_56 , \CIC1Sin/n11720 , \CIC1Sin/d7_56 , 
         \CIC1Sin/d7_57 , \CIC1Sin/d6_55 , \CIC1Sin/n5576 , \CIC1Sin/d_d6_55 , 
         \CIC1Sin/d6_54 , \CIC1Sin/n5577 , \CIC1Sin/d_d6_54 , 
         \CIC1Sin/d7_71_N_1530_55 , \CIC1Sin/d7_71_N_1530_54 , 
         \CIC1Sin/n11719 , \CIC1Sin/d7_54 , \CIC1Sin/d7_55 , \CIC1Sin/d6_53 , 
         \CIC1Sin/n5578 , \CIC1Sin/d_d6_53 , \CIC1Sin/d6_52 , \CIC1Sin/n5579 , 
         \CIC1Sin/d_d6_52 , \CIC1Sin/d7_71_N_1530_53 , 
         \CIC1Sin/d7_71_N_1530_52 , \CIC1Sin/n11718 , \CIC1Sin/d7_52 , 
         \CIC1Sin/d7_53 , \CIC1Sin/d6_51 , \CIC1Sin/n5580 , \CIC1Sin/d_d6_51 , 
         \CIC1Sin/d6_50 , \CIC1Sin/n5581 , \CIC1Sin/d_d6_50 , 
         \CIC1Sin/d7_71_N_1530_51 , \CIC1Sin/d7_71_N_1530_50 , 
         \CIC1Sin/n11717 , \CIC1Sin/d7_50 , \CIC1Sin/d7_51 , \CIC1Sin/d6_49 , 
         \CIC1Sin/n5582 , \CIC1Sin/d_d6_49 , \CIC1Sin/d6_48 , \CIC1Sin/n5583 , 
         \CIC1Sin/d_d6_48 , \CIC1Sin/d7_71_N_1530_49 , 
         \CIC1Sin/d7_71_N_1530_48 , \CIC1Sin/n11716 , \CIC1Sin/d7_48 , 
         \CIC1Sin/d7_49 , \CIC1Sin/d6_47 , \CIC1Sin/n5584 , \CIC1Sin/d_d6_47 , 
         \CIC1Sin/d6_46 , \CIC1Sin/n5585 , \CIC1Sin/d_d6_46 , 
         \CIC1Sin/d7_71_N_1530_47 , \CIC1Sin/d7_71_N_1530_46 , 
         \CIC1Sin/n11715 , \CIC1Sin/d7_46 , \CIC1Sin/d7_47 , \CIC1Sin/d6_45 , 
         \CIC1Sin/n5586 , \CIC1Sin/d_d6_45 , \CIC1Sin/d6_44 , \CIC1Sin/n5587 , 
         \CIC1Sin/d_d6_44 , \CIC1Sin/d7_71_N_1530_45 , 
         \CIC1Sin/d7_71_N_1530_44 , \CIC1Sin/n11714 , \CIC1Sin/d7_44 , 
         \CIC1Sin/d7_45 , \CIC1Sin/d6_43 , \CIC1Sin/n5588 , \CIC1Sin/d_d6_43 , 
         \CIC1Sin/d6_42 , \CIC1Sin/n5589 , \CIC1Sin/d_d6_42 , 
         \CIC1Sin/d7_71_N_1530_43 , \CIC1Sin/d7_71_N_1530_42 , 
         \CIC1Sin/n11713 , \CIC1Sin/d7_42 , \CIC1Sin/d7_43 , \CIC1Sin/d6_41 , 
         \CIC1Sin/n5590 , \CIC1Sin/d_d6_41 , \CIC1Sin/d6_40 , \CIC1Sin/n5591 , 
         \CIC1Sin/d_d6_40 , \CIC1Sin/d7_71_N_1530_41 , 
         \CIC1Sin/d7_71_N_1530_40 , \CIC1Sin/n11712 , \CIC1Sin/d7_40 , 
         \CIC1Sin/d7_41 , \CIC1Sin/d6_39 , \CIC1Sin/n5592 , \CIC1Sin/d_d6_39 , 
         \CIC1Sin/d6_38 , \CIC1Sin/n5593 , \CIC1Sin/d_d6_38 , 
         \CIC1Sin/d7_71_N_1530_39 , \CIC1Sin/d7_71_N_1530_38 , 
         \CIC1Sin/n11711 , \CIC1Sin/d7_38 , \CIC1Sin/d7_39 , \CIC1Sin/d6_37 , 
         \CIC1Sin/n5594 , \CIC1Sin/d_d6_37 , \CIC1Sin/d6_36 , \CIC1Sin/n5595 , 
         \CIC1Sin/d_d6_36 , \CIC1Sin/d7_71_N_1530_37 , 
         \CIC1Sin/d7_71_N_1530_36 , \CIC1Sin/n11710 , \CIC1Sin/d7_36 , 
         \CIC1Sin/d7_37 , \CIC1Sin/d_d7_71 , \CIC1Sin/d7_71 , \CIC1Sin/n11706 , 
         \CIC1Sin/n5712 , \CIC1Sin/d_d7_70 , \CIC1Sin/d7_70 , 
         \CIC1Sin/d_d7_69 , \CIC1Sin/n11705 , \CIC1Sin/n5714 , \CIC1Sin/n5713 , 
         \CIC1Sin/d_d7_68 , \CIC1Sin/d_d7_67 , \CIC1Sin/d7_67 , 
         \CIC1Sin/n11704 , \CIC1Sin/n5716 , \CIC1Sin/n5715 , \CIC1Sin/d_d7_66 , 
         \CIC1Sin/d7_66 , \CIC1Sin/d_d7_65 , \CIC1Sin/d7_65 , \CIC1Sin/n11703 , 
         \CIC1Sin/n5718 , \CIC1Sin/n5717 , \CIC1Sin/d_d7_64 , \CIC1Sin/d7_64 , 
         \CIC1Sin/d_d7_63 , \CIC1Sin/n11702 , \CIC1Sin/n5720 , \CIC1Sin/n5719 , 
         \CIC1Sin/d_d7_62 , \CIC1Sin/d_d7_61 , \CIC1Sin/n11701 , 
         \CIC1Sin/n5722 , \CIC1Sin/n5721 , \CIC1Sin/d_d7_60 , 
         \CIC1Sin/d_d7_59 , \CIC1Sin/n11700 , \CIC1Sin/n5724 , \CIC1Sin/n5723 , 
         \CIC1Sin/d_d7_58 , \CIC1Sin/d_d7_57 , \CIC1Sin/n11699 , 
         \CIC1Sin/n5726 , \CIC1Sin/n5725 , \CIC1Sin/d_d7_56 , 
         \CIC1Sin/d_d7_55 , \CIC1Sin/n11698 , \CIC1Sin/n5728 , \CIC1Sin/n5727 , 
         \CIC1Sin/d_d7_54 , \CIC1Sin/d_d7_53 , \CIC1Sin/n11697 , 
         \CIC1Sin/n5730 , \CIC1Sin/n5729 , \CIC1Sin/d3_67 , \CIC1Sin/d2_67 , 
         \CIC1Sin/d3_66 , \CIC1Sin/d2_66 , \CIC1Sin/n12071 , \CIC1Sin/n4349 , 
         \CIC1Sin/n4348 , \CIC1Sin/d_d7_52 , \CIC1Sin/d_d7_51 , 
         \CIC1Sin/n11696 , \CIC1Sin/n5732 , \CIC1Sin/n5731 , \CIC1Sin/d_d7_50 , 
         \CIC1Sin/d_d7_49 , \CIC1Sin/n11695 , \CIC1Sin/n5734 , \CIC1Sin/n5733 , 
         \CIC1Sin/d_d7_48 , \CIC1Sin/d_d7_47 , \CIC1Sin/n11694 , 
         \CIC1Sin/n5736 , \CIC1Sin/n5735 , \CIC1Sin/d_d7_46 , 
         \CIC1Sin/d_d7_45 , \CIC1Sin/n11693 , \CIC1Sin/n5738 , \CIC1Sin/n5737 , 
         \CIC1Sin/d_d7_44 , \CIC1Sin/d_d7_43 , \CIC1Sin/n11692 , 
         \CIC1Sin/n5740 , \CIC1Sin/n5739 , \CIC1Sin/d_d7_42 , 
         \CIC1Sin/d_d7_41 , \CIC1Sin/n11691 , \CIC1Sin/n5742 , \CIC1Sin/n5741 , 
         \CIC1Sin/d3_65 , \CIC1Sin/d2_65 , \CIC1Sin/d3_64 , \CIC1Sin/d2_64 , 
         \CIC1Sin/n12070 , \CIC1Sin/n4351 , \CIC1Sin/n4350 , \CIC1Sin/n12261 , 
         \CIC1Sin/n4038 , \CIC1Sin/d6_67 , \CIC1Sin/n5564 , \CIC1Sin/d_d6_67 , 
         \CIC1Sin/d6_66 , \CIC1Sin/n5565 , \CIC1Sin/d_d6_66 , 
         \CIC1Sin/d7_71_N_1530_67 , \CIC1Sin/d7_71_N_1530_66 , 
         \CIC1Sin/n11725 , \CIC1Sin/d1_35 , MixerOutSin_11, \CIC1Sin/d1_34 , 
         \CIC1Sin/d1_71_N_417_35 , \CIC1Sin/d1_71_N_417_34 , \CIC1Sin/n12260 , 
         \CIC1Sin/d1_33 , \CIC1Sin/d1_32 , \CIC1Sin/d1_71_N_417_33 , 
         \CIC1Sin/d1_71_N_417_32 , \CIC1Sin/n12259 , \CIC1Sin/d_d6_71 , 
         \CIC1Sin/d6_71 , \CIC1Sin/n11746 , \CIC1Sin/n5560 , \CIC1Sin/d_d6_70 , 
         \CIC1Sin/d6_70 , \CIC1Sin/n11745 , \CIC1Sin/n5561 , \CIC1Sin/n11744 , 
         \CIC1Sin/d_d6_65 , \CIC1Sin/d6_65 , \CIC1Sin/n11743 , \CIC1Sin/n5566 , 
         \CIC1Sin/d_d6_64 , \CIC1Sin/d6_64 , \CIC1Sin/n11742 , \CIC1Sin/n5567 , 
         \CIC1Sin/n11741 , \CIC1Sin/n11740 , \CIC1Sin/n11739 , 
         \CIC1Sin/n11738 , \CIC1Sin/n11737 , \CIC1Sin/n11736 , 
         \CIC1Sin/n11735 , \CIC1Sin/n11734 , \CIC1Sin/n11733 , 
         \CIC1Sin/n11732 , \CIC1Sin/n11731 , \CIC1Sin/n11730 , 
         \CIC1Sin/n11729 , \CIC1Sin/d3_63 , \CIC1Sin/d2_63 , \CIC1Sin/d3_62 , 
         \CIC1Sin/d2_62 , \CIC1Sin/n12069 , \CIC1Sin/n4353 , \CIC1Sin/n4352 , 
         \CIC1Sin/d3_61 , \CIC1Sin/d2_61 , \CIC1Sin/d3_60 , \CIC1Sin/d2_60 , 
         \CIC1Sin/n12068 , \CIC1Sin/n4355 , \CIC1Sin/n4354 , \CIC1Sin/d3_59 , 
         \CIC1Sin/d3_58 , \CIC1Sin/n12067 , \CIC1Sin/n4357 , \CIC1Sin/n4356 , 
         \CIC1Sin/d3_57 , \CIC1Sin/d3_56 , \CIC1Sin/n12066 , \CIC1Sin/n4359 , 
         \CIC1Sin/n4358 , \CIC1Sin/d3_55 , \CIC1Sin/d3_54 , \CIC1Sin/n12065 , 
         \CIC1Sin/n4361 , \CIC1Sin/n4360 , \CIC1Sin/d3_53 , \CIC1Sin/d3_52 , 
         \CIC1Sin/n12064 , \CIC1Sin/n4363 , \CIC1Sin/n4362 , \CIC1Sin/d3_51 , 
         \CIC1Sin/d3_50 , \CIC1Sin/n12063 , \CIC1Sin/n4365 , \CIC1Sin/n4364 , 
         \CIC1Sin/d3_49 , \CIC1Sin/d3_48 , \CIC1Sin/n12062 , \CIC1Sin/n4367 , 
         \CIC1Sin/n4366 , \CIC1Sin/d3_47 , \CIC1Sin/d3_46 , \CIC1Sin/n12061 , 
         \CIC1Sin/n4369 , \CIC1Sin/n4368 , \CIC1Sin/d3_45 , \CIC1Sin/d3_44 , 
         \CIC1Sin/n12060 , \CIC1Sin/n4371 , \CIC1Sin/n4370 , \CIC1Sin/d3_43 , 
         \CIC1Sin/d3_42 , \CIC1Sin/n12059 , \CIC1Sin/n4373 , \CIC1Sin/n4372 , 
         \CIC1Sin/d3_41 , \CIC1Sin/d3_40 , \CIC1Sin/n12058 , \CIC1Sin/n4375 , 
         \CIC1Sin/n4374 , \CIC1Sin/d3_39 , \CIC1Sin/d3_38 , \CIC1Sin/n12057 , 
         \CIC1Sin/n4377 , \CIC1Sin/n4376 , \CIC1Sin/d3_37 , \CIC1Sin/d3_36 , 
         \CIC1Sin/n4378 , \CIC1Sin/n4342 , \CIC1Sin/d3_71_N_561_71 , 
         \CIC1Sin/d3_71_N_561_70 , \CIC1Sin/n12054 , \CIC1Sin/d3_71_N_561_69 , 
         \CIC1Sin/d3_71_N_561_68 , \CIC1Sin/n12053 , \CIC1Sin/d3_71_N_561_67 , 
         \CIC1Sin/d3_71_N_561_66 , \CIC1Sin/n12052 , \CIC1Sin/d3_71_N_561_65 , 
         \CIC1Sin/d3_71_N_561_64 , \CIC1Sin/n12051 , \CIC1Sin/d3_71_N_561_63 , 
         \CIC1Sin/d3_71_N_561_62 , \CIC1Sin/n12050 , \CIC1Sin/d3_71_N_561_61 , 
         \CIC1Sin/d3_71_N_561_60 , \CIC1Sin/n12049 , \CIC1Sin/d3_71_N_561_59 , 
         \CIC1Sin/d3_71_N_561_58 , \CIC1Sin/n12048 , \CIC1Sin/d3_71_N_561_57 , 
         \CIC1Sin/d3_71_N_561_56 , \CIC1Sin/n12047 , \CIC1Sin/d3_71_N_561_55 , 
         \CIC1Sin/d3_71_N_561_54 , \CIC1Sin/n12046 , \CIC1Sin/d3_71_N_561_53 , 
         \CIC1Sin/d3_71_N_561_52 , \CIC1Sin/n12045 , \CIC1Sin/d3_71_N_561_51 , 
         \CIC1Sin/d3_71_N_561_50 , \CIC1Sin/n12044 , \CIC1Sin/d3_71_N_561_49 , 
         \CIC1Sin/d3_71_N_561_48 , \CIC1Sin/n12043 , \CIC1Sin/d1_31 , 
         \CIC1Sin/d1_30 , \CIC1Sin/d1_71_N_417_31 , \CIC1Sin/d1_71_N_417_30 , 
         \CIC1Sin/n12258 , \CIC1Sin/d1_29 , \CIC1Sin/d1_28 , 
         \CIC1Sin/d1_71_N_417_29 , \CIC1Sin/d1_71_N_417_28 , \CIC1Sin/n12257 , 
         \CIC1Sin/d1_27 , \CIC1Sin/d1_26 , \CIC1Sin/d1_71_N_417_27 , 
         \CIC1Sin/d1_71_N_417_26 , \CIC1Sin/n12256 , \CIC1Sin/d_d9_71 , 
         \CIC1Sin/d9_71 , \CIC1Sin/n11408 , \CIC1Sin/n6320 , \CIC1Sin/d_d9_70 , 
         \CIC1Sin/d9_70 , \CIC1Sin/d_d9_69 , \CIC1Sin/d9_69 , \CIC1Sin/n11407 , 
         \CIC1Sin/n6322 , \CIC1Sin/n6321 , \CIC1Sin/d_d9_68 , \CIC1Sin/d9_68 , 
         \CIC1Sin/d_d9_67 , \CIC1Sin/d9_67 , \CIC1Sin/n11406 , \CIC1Sin/n6324 , 
         \CIC1Sin/n6323 , \CIC1Sin/d_d9_66 , \CIC1Sin/d9_66 , 
         \CIC1Sin/d_d9_65 , \CIC1Sin/d9_65 , \CIC1Sin/n11405 , \CIC1Sin/n6326 , 
         \CIC1Sin/n6325 , \CIC1Sin/d_d9_64 , \CIC1Sin/d9_64 , 
         \CIC1Sin/d_d9_63 , \CIC1Sin/d9_63 , \CIC1Sin/n11404 , \CIC1Sin/n6328 , 
         \CIC1Sin/n6327 , \CIC1Sin/d_d9_62 , \CIC1Sin/d9_62 , 
         \CIC1Sin/d_d9_61 , \CIC1Sin/d9_61 , \CIC1Sin/n11403 , \CIC1Sin/n6330 , 
         \CIC1Sin/n6329 , \CIC1Sin/d_d9_60 , \CIC1Sin/d9_60 , 
         \CIC1Sin/d_d9_59 , \CIC1Sin/d9_59 , \CIC1Sin/n11402 , \CIC1Sin/n6332 , 
         \CIC1Sin/n6331 , \CIC1Sin/d_d9_58 , \CIC1Sin/d9_58 , 
         \CIC1Sin/d_d9_57 , \CIC1Sin/d9_57 , \CIC1Sin/n11401 , \CIC1Sin/n6334 , 
         \CIC1Sin/n6333 , \CIC1Sin/d_d9_56 , \CIC1Sin/d9_56 , 
         \CIC1Sin/d_d9_55 , \CIC1Sin/d9_55 , \CIC1Sin/n11400 , 
         \CIC1Sin/d_d9_54 , \CIC1Sin/d9_54 , \CIC1Sin/d_d9_53 , 
         \CIC1Sin/d9_53 , \CIC1Sin/n11399 , \CIC1Sin/d_d9_52 , \CIC1Sin/d9_52 , 
         \CIC1Sin/d_d9_51 , \CIC1Sin/d9_51 , \CIC1Sin/n11398 , 
         \CIC1Sin/d_d9_50 , \CIC1Sin/d9_50 , \CIC1Sin/d_d9_49 , 
         \CIC1Sin/d9_49 , \CIC1Sin/n11397 , \CIC1Sin/d_d9_48 , \CIC1Sin/d9_48 , 
         \CIC1Sin/d_d9_47 , \CIC1Sin/d9_47 , \CIC1Sin/n11396 , 
         \CIC1Sin/d_d9_46 , \CIC1Sin/d9_46 , \CIC1Sin/d_d9_45 , 
         \CIC1Sin/d9_45 , \CIC1Sin/n11395 , \CIC1Sin/d_d9_44 , \CIC1Sin/d9_44 , 
         \CIC1Sin/d_d9_43 , \CIC1Sin/d9_43 , \CIC1Sin/n11394 , 
         \CIC1Sin/d_d9_42 , \CIC1Sin/d9_42 , \CIC1Sin/d_d9_41 , 
         \CIC1Sin/d9_41 , \CIC1Sin/n11393 , \CIC1Sin/d_d9_40 , \CIC1Sin/d9_40 , 
         \CIC1Sin/d_d9_39 , \CIC1Sin/d9_39 , \CIC1Sin/n11392 , 
         \CIC1Sin/d_d9_38 , \CIC1Sin/d9_38 , \CIC1Sin/d_d9_37 , 
         \CIC1Sin/d9_37 , \CIC1Sin/n11391 , \CIC1Sin/d_d9_36 , \CIC1Sin/d9_36 , 
         \CIC1Sin/n11390 , \CIC1Sin/n6358 , \CIC1Sin/n11389 , \CIC1Sin/n6360 , 
         \CIC1Sin/n6359 , \CIC1Sin/n11388 , \CIC1Sin/n6362 , \CIC1Sin/n6361 , 
         \CIC1Sin/n11387 , \CIC1Sin/n6364 , \CIC1Sin/n6363 , \CIC1Sin/n11386 , 
         \CIC1Sin/n6366 , \CIC1Sin/n6365 , \CIC1Sin/n11385 , \CIC1Sin/n6368 , 
         \CIC1Sin/n6367 , \CIC1Sin/n11384 , \CIC1Sin/n6370 , \CIC1Sin/n6369 , 
         \CIC1Sin/n11383 , \CIC1Sin/n6372 , \CIC1Sin/n6371 , \CIC1Sin/n11382 , 
         \CIC1Sin/n11381 , \CIC1Sin/n11380 , \CIC1Sin/n11379 , 
         \CIC1Sin/n11378 , \CIC1Sin/n11377 , \CIC1Sin/n11376 , 
         \CIC1Sin/n11375 , \CIC1Sin/n11374 , \CIC1Sin/n11373 , 
         \CIC1Sin/d_d8_71 , \CIC1Sin/d8_71 , \CIC1Sin/n11372 , \CIC1Sin/n6472 , 
         \CIC1Sin/d_d8_70 , \CIC1Sin/d8_70 , \CIC1Sin/d_d8_69 , 
         \CIC1Sin/d8_69 , \CIC1Sin/n11371 , \CIC1Sin/n6474 , \CIC1Sin/n6473 , 
         \CIC1Sin/d_d8_68 , \CIC1Sin/d8_68 , \CIC1Sin/d_d8_67 , 
         \CIC1Sin/d8_67 , \CIC1Sin/n11370 , \CIC1Sin/n6476 , \CIC1Sin/n6475 , 
         \CIC1Sin/d_d8_66 , \CIC1Sin/d8_66 , \CIC1Sin/d_d8_65 , 
         \CIC1Sin/d8_65 , \CIC1Sin/n11369 , \CIC1Sin/n6478 , \CIC1Sin/n6477 , 
         \CIC1Sin/d_d8_64 , \CIC1Sin/d8_64 , \CIC1Sin/d_d8_63 , 
         \CIC1Sin/d8_63 , \CIC1Sin/n11368 , \CIC1Sin/n6480 , \CIC1Sin/n6479 , 
         \CIC1Sin/d_d8_62 , \CIC1Sin/d8_62 , \CIC1Sin/d_d8_61 , 
         \CIC1Sin/d8_61 , \CIC1Sin/n11367 , \CIC1Sin/n6482 , \CIC1Sin/n6481 , 
         \CIC1Sin/d_d8_60 , \CIC1Sin/d8_60 , \CIC1Sin/d_d8_59 , 
         \CIC1Sin/d8_59 , \CIC1Sin/n11366 , \CIC1Sin/n6484 , \CIC1Sin/n6483 , 
         \CIC1Sin/d_d8_58 , \CIC1Sin/d8_58 , \CIC1Sin/d_d8_57 , 
         \CIC1Sin/d8_57 , \CIC1Sin/n11365 , \CIC1Sin/n6486 , \CIC1Sin/n6485 , 
         \CIC1Sin/d_d8_56 , \CIC1Sin/d8_56 , \CIC1Sin/d_d8_55 , 
         \CIC1Sin/d8_55 , \CIC1Sin/n11364 , \CIC1Sin/n6488 , \CIC1Sin/n6487 , 
         \CIC1Sin/d_d8_54 , \CIC1Sin/d8_54 , \CIC1Sin/d_d8_53 , 
         \CIC1Sin/d8_53 , \CIC1Sin/n11363 , \CIC1Sin/n6490 , \CIC1Sin/n6489 , 
         \CIC1Sin/d_d8_52 , \CIC1Sin/d8_52 , \CIC1Sin/d_d8_51 , 
         \CIC1Sin/d8_51 , \CIC1Sin/n11362 , \CIC1Sin/n6492 , \CIC1Sin/n6491 , 
         \CIC1Sin/d_d8_50 , \CIC1Sin/d8_50 , \CIC1Sin/d_d8_49 , 
         \CIC1Sin/d8_49 , \CIC1Sin/n11361 , \CIC1Sin/n6494 , \CIC1Sin/n6493 , 
         \CIC1Sin/d_d8_48 , \CIC1Sin/d8_48 , \CIC1Sin/d_d8_47 , 
         \CIC1Sin/d8_47 , \CIC1Sin/n11360 , \CIC1Sin/n6496 , \CIC1Sin/n6495 , 
         \CIC1Sin/d_d8_46 , \CIC1Sin/d8_46 , \CIC1Sin/d_d8_45 , 
         \CIC1Sin/d8_45 , \CIC1Sin/n11359 , \CIC1Sin/n6498 , \CIC1Sin/n6497 , 
         \CIC1Sin/d_d8_44 , \CIC1Sin/d8_44 , \CIC1Sin/d_d8_43 , 
         \CIC1Sin/d8_43 , \CIC1Sin/n11358 , \CIC1Sin/n6500 , \CIC1Sin/n6499 , 
         \CIC1Sin/d_d8_42 , \CIC1Sin/d8_42 , \CIC1Sin/d_d8_41 , 
         \CIC1Sin/d8_41 , \CIC1Sin/n11357 , \CIC1Sin/n6502 , \CIC1Sin/n6501 , 
         \CIC1Sin/d3_71_N_561_47 , \CIC1Sin/d3_71_N_561_46 , \CIC1Sin/n12042 , 
         \CIC1Sin/d1_25 , \CIC1Sin/d1_24 , \CIC1Sin/d1_71_N_417_25 , 
         \CIC1Sin/d1_71_N_417_24 , \CIC1Sin/n12255 , \CIC1Sin/d_d7_40 , 
         \CIC1Sin/d_d7_39 , \CIC1Sin/n11690 , \CIC1Sin/n5744 , \CIC1Sin/n5743 , 
         \CIC1Sin/d1_23 , \CIC1Sin/d1_22 , \CIC1Sin/d1_71_N_417_23 , 
         \CIC1Sin/d1_71_N_417_22 , \CIC1Sin/n12254 , \CIC1Sin/d1_21 , 
         \CIC1Sin/d1_20 , \CIC1Sin/d1_71_N_417_21 , \CIC1Sin/d1_71_N_417_20 , 
         \CIC1Sin/n12253 , \CIC1Sin/d1_19 , \CIC1Sin/d1_18 , 
         \CIC1Sin/d1_71_N_417_19 , \CIC1Sin/d1_71_N_417_18 , \CIC1Sin/n12252 , 
         \CIC1Sin/d1_17 , \CIC1Sin/d1_16 , \CIC1Sin/d1_71_N_417_17 , 
         \CIC1Sin/d1_71_N_417_16 , \CIC1Sin/n12251 , \CIC1Sin/d1_15 , 
         \CIC1Sin/d1_14 , \CIC1Sin/d1_71_N_417_15 , \CIC1Sin/d1_71_N_417_14 , 
         \CIC1Sin/n12250 , \CIC1Sin/d1_13 , \CIC1Sin/d1_12 , 
         \CIC1Sin/d1_71_N_417_13 , \CIC1Sin/d1_71_N_417_12 , \CIC1Sin/n12249 , 
         \CIC1Sin/d1_11 , \CIC1Sin/d1_10 , MixerOutSin_10, 
         \CIC1Sin/d1_71_N_417_11 , \CIC1Sin/d1_71_N_417_10 , \CIC1Sin/n12248 , 
         \CIC1Sin/d3_71_N_561_45 , \CIC1Sin/d3_71_N_561_44 , \CIC1Sin/n12041 , 
         \CIC1Sin/d3_71_N_561_43 , \CIC1Sin/d3_71_N_561_42 , \CIC1Sin/n12040 , 
         \CIC1Sin/d3_71_N_561_41 , \CIC1Sin/d3_71_N_561_40 , \CIC1Sin/n12039 , 
         \CIC1Sin/d3_71_N_561_39 , \CIC1Sin/d3_71_N_561_38 , \CIC1Sin/n12038 , 
         \CIC1Sin/n4379 , \CIC1Sin/d3_71_N_561_37 , \CIC1Sin/d3_71_N_561_36 , 
         \CIC1Sin/n12037 , \CIC1Sin/d4_71 , \CIC1Sin/d4_70 , \CIC1Sin/n12032 , 
         \CIC1Sin/n4497 , \CIC1Sin/n4496 , \CIC1Sin/d4_69 , \CIC1Sin/d4_68 , 
         \CIC1Sin/n12031 , \CIC1Sin/n4499 , \CIC1Sin/n4498 , \CIC1Sin/d1_9 , 
         MixerOutSin_9, \CIC1Sin/d1_8 , MixerOutSin_8, \CIC1Sin/d1_71_N_417_9 , 
         \CIC1Sin/d1_71_N_417_8 , \CIC1Sin/n12247 , \CIC1Sin/d1_7 , 
         MixerOutSin_7, \CIC1Sin/d1_6 , MixerOutSin_6, \CIC1Sin/d1_71_N_417_7 , 
         \CIC1Sin/d1_71_N_417_6 , \CIC1Sin/n12246 , \CIC1Sin/d1_5 , 
         MixerOutSin_5, \CIC1Sin/d1_4 , MixerOutSin_4, \CIC1Sin/d1_71_N_417_5 , 
         \CIC1Sin/d1_71_N_417_4 , \CIC1Sin/n12245 , \CIC1Sin/d1_3 , 
         MixerOutSin_3, \CIC1Sin/d1_2 , MixerOutSin_2, \CIC1Sin/d1_71_N_417_3 , 
         \CIC1Sin/d1_71_N_417_2 , \CIC1Sin/n12244 , \CIC1Sin/d4_67 , 
         \CIC1Sin/d4_66 , \CIC1Sin/n12030 , \CIC1Sin/n4501 , \CIC1Sin/n4500 , 
         \CIC1Sin/d1_1 , MixerOutSin_1, \CIC1Sin/d1_0 , MixerOutSin_0, 
         \CIC1Sin/d1_71_N_417_1 , \CIC1Sin/d_d7_38 , \CIC1Sin/d_d7_37 , 
         \CIC1Sin/n11689 , \CIC1Sin/n5746 , \CIC1Sin/n5745 , \CIC1Sin/d_d7_36 , 
         \CIC1Sin/n5747 , \CIC1Sin/d4_65 , \CIC1Sin/d4_64 , \CIC1Sin/n12029 , 
         \CIC1Sin/n4503 , \CIC1Sin/n4502 , \CIC1Sin/n5710 , 
         \CIC1Sin/d8_71_N_1602_71 , \CIC1Sin/d8_71_N_1602_70 , 
         \CIC1Sin/osc_clk_enable_496 , \CIC1Sin/n11687 , 
         \CIC1Sin/d8_71_N_1602_69 , \CIC1Sin/d8_71_N_1602_68 , 
         \CIC1Sin/n11686 , \CIC1Sin/d8_71_N_1602_67 , 
         \CIC1Sin/d8_71_N_1602_66 , \CIC1Sin/n11685 , \CIC1Sin/d4_63 , 
         \CIC1Sin/d4_62 , \CIC1Sin/n12028 , \CIC1Sin/n4505 , \CIC1Sin/n4504 , 
         \CIC1Sin/d4_61 , \CIC1Sin/d4_60 , \CIC1Sin/n12027 , \CIC1Sin/n4507 , 
         \CIC1Sin/n4506 , \CIC1Sin/d4_59 , \CIC1Sin/d4_58 , \CIC1Sin/n12026 , 
         \CIC1Sin/n4509 , \CIC1Sin/n4508 , \CIC1Sin/d4_57 , \CIC1Sin/d4_56 , 
         \CIC1Sin/n12025 , \CIC1Sin/n4511 , \CIC1Sin/n4510 , \CIC1Sin/d4_55 , 
         \CIC1Sin/d4_54 , \CIC1Sin/n12024 , \CIC1Sin/n4513 , \CIC1Sin/n4512 , 
         \CIC1Sin/d4_53 , \CIC1Sin/d4_52 , \CIC1Sin/n12023 , \CIC1Sin/n4515 , 
         \CIC1Sin/n4514 , \CIC1Sin/d4_51 , \CIC1Sin/d4_50 , \CIC1Sin/n12022 , 
         \CIC1Sin/n4517 , \CIC1Sin/n4516 , \CIC1Sin/d4_49 , \CIC1Sin/d4_48 , 
         \CIC1Sin/n12021 , \CIC1Sin/n4519 , \CIC1Sin/n4518 , \CIC1Sin/d4_47 , 
         \CIC1Sin/d4_46 , \CIC1Sin/n12020 , \CIC1Sin/n4521 , \CIC1Sin/n4520 , 
         \CIC1Sin/d8_71_N_1602_65 , \CIC1Sin/d8_71_N_1602_64 , 
         \CIC1Sin/n11684 , \CIC1Sin/d8_71_N_1602_63 , 
         \CIC1Sin/d8_71_N_1602_62 , \CIC1Sin/n11683 , 
         \CIC1Sin/d8_71_N_1602_61 , \CIC1Sin/d8_71_N_1602_60 , 
         \CIC1Sin/n11682 , \CIC1Sin/d4_45 , \CIC1Sin/d4_44 , \CIC1Sin/n12019 , 
         \CIC1Sin/n4523 , \CIC1Sin/n4522 , \CIC1Sin/d8_71_N_1602_59 , 
         \CIC1Sin/d8_71_N_1602_58 , \CIC1Sin/n11681 , \CIC1Sin/d_d8_40 , 
         \CIC1Sin/d8_40 , \CIC1Sin/d_d8_39 , \CIC1Sin/d8_39 , \CIC1Sin/n11356 , 
         \CIC1Sin/n6504 , \CIC1Sin/n6503 , \CIC1Sin/d_d8_38 , \CIC1Sin/d8_38 , 
         \CIC1Sin/d_d8_37 , \CIC1Sin/d8_37 , \CIC1Sin/n11355 , \CIC1Sin/n6506 , 
         \CIC1Sin/n6505 , \CIC1Sin/d_d8_36 , \CIC1Sin/d8_36 , \CIC1Sin/n6507 , 
         \CIC1Sin/n6470 , \CIC1Sin/d9_71_N_1674_71 , \CIC1Sin/d9_71_N_1674_70 , 
         \CIC1Sin/osc_clk_enable_646 , \CIC1Sin/n11353 , 
         \CIC1Sin/d9_71_N_1674_69 , \CIC1Sin/d9_71_N_1674_68 , 
         \CIC1Sin/n11352 , \CIC1Sin/d9_71_N_1674_67 , 
         \CIC1Sin/d9_71_N_1674_66 , \CIC1Sin/n11351 , 
         \CIC1Sin/d9_71_N_1674_65 , \CIC1Sin/d9_71_N_1674_64 , 
         \CIC1Sin/n11350 , \CIC1Sin/d9_71_N_1674_63 , 
         \CIC1Sin/d9_71_N_1674_62 , \CIC1Sin/n11349 , 
         \CIC1Sin/d9_71_N_1674_61 , \CIC1Sin/d9_71_N_1674_60 , 
         \CIC1Sin/n11348 , \CIC1Sin/d9_71_N_1674_59 , 
         \CIC1Sin/d9_71_N_1674_58 , \CIC1Sin/n11347 , 
         \CIC1Sin/d9_71_N_1674_57 , \CIC1Sin/d9_71_N_1674_56 , 
         \CIC1Sin/n11346 , \CIC1Sin/d9_71_N_1674_55 , 
         \CIC1Sin/d9_71_N_1674_54 , \CIC1Sin/n11345 , 
         \CIC1Sin/d9_71_N_1674_53 , \CIC1Sin/d9_71_N_1674_52 , 
         \CIC1Sin/n11344 , \CIC1Sin/d9_71_N_1674_51 , 
         \CIC1Sin/d9_71_N_1674_50 , \CIC1Sin/n11343 , 
         \CIC1Sin/d9_71_N_1674_49 , \CIC1Sin/d9_71_N_1674_48 , 
         \CIC1Sin/n11342 , \CIC1Sin/d9_71_N_1674_47 , 
         \CIC1Sin/d9_71_N_1674_46 , \CIC1Sin/n11341 , 
         \CIC1Sin/d9_71_N_1674_45 , \CIC1Sin/d9_71_N_1674_44 , 
         \CIC1Sin/n11340 , \CIC1Sin/d9_71_N_1674_43 , 
         \CIC1Sin/d9_71_N_1674_42 , \CIC1Sin/osc_clk_enable_596 , 
         \CIC1Sin/n11339 , \CIC1Sin/d9_71_N_1674_41 , 
         \CIC1Sin/d9_71_N_1674_40 , \CIC1Sin/n11338 , 
         \CIC1Sin/d9_71_N_1674_39 , \CIC1Sin/d9_71_N_1674_38 , 
         \CIC1Sin/n11337 , \CIC1Sin/d9_71_N_1674_37 , 
         \CIC1Sin/d9_71_N_1674_36 , \CIC1Sin/n11336 , \CIC1Sin/d_d_tmp_71 , 
         \CIC1Sin/d_tmp_71 , \CIC1Sin/n11256 , \CIC1Sin/n6928 , 
         \CIC1Sin/d_d_tmp_70 , \CIC1Sin/d_tmp_70 , \CIC1Sin/d_d_tmp_69 , 
         \CIC1Sin/d_tmp_69 , \CIC1Sin/n11255 , \CIC1Sin/n6930 , 
         \CIC1Sin/n6929 , \CIC1Sin/d_d_tmp_68 , \CIC1Sin/d_tmp_68 , 
         \CIC1Sin/d_d_tmp_67 , \CIC1Sin/d_tmp_67 , \CIC1Sin/n11254 , 
         \CIC1Sin/n6932 , \CIC1Sin/n6931 , \CIC1Sin/d_d_tmp_66 , 
         \CIC1Sin/d_tmp_66 , \CIC1Sin/d_d_tmp_65 , \CIC1Sin/d_tmp_65 , 
         \CIC1Sin/n11253 , \CIC1Sin/n6934 , \CIC1Sin/n6933 , 
         \CIC1Sin/d_d_tmp_64 , \CIC1Sin/d_tmp_64 , \CIC1Sin/d_d_tmp_63 , 
         \CIC1Sin/d_tmp_63 , \CIC1Sin/n11252 , \CIC1Sin/n6936 , 
         \CIC1Sin/n6935 , \CIC1Sin/d_d_tmp_62 , \CIC1Sin/d_tmp_62 , 
         \CIC1Sin/d_d_tmp_61 , \CIC1Sin/d_tmp_61 , \CIC1Sin/n11251 , 
         \CIC1Sin/n6938 , \CIC1Sin/n6937 , \CIC1Sin/d_d_tmp_60 , 
         \CIC1Sin/d_tmp_60 , \CIC1Sin/d_d_tmp_59 , \CIC1Sin/d_tmp_59 , 
         \CIC1Sin/n11250 , \CIC1Sin/n6940 , \CIC1Sin/n6939 , 
         \CIC1Sin/d_d_tmp_58 , \CIC1Sin/d_tmp_58 , \CIC1Sin/d_d_tmp_57 , 
         \CIC1Sin/d_tmp_57 , \CIC1Sin/n11249 , \CIC1Sin/n6942 , 
         \CIC1Sin/n6941 , \CIC1Sin/d_d_tmp_56 , \CIC1Sin/d_tmp_56 , 
         \CIC1Sin/d_d_tmp_55 , \CIC1Sin/d_tmp_55 , \CIC1Sin/n11248 , 
         \CIC1Sin/n6944 , \CIC1Sin/n6943 , \CIC1Sin/d_d_tmp_54 , 
         \CIC1Sin/d_tmp_54 , \CIC1Sin/d_d_tmp_53 , \CIC1Sin/d_tmp_53 , 
         \CIC1Sin/n11247 , \CIC1Sin/n6946 , \CIC1Sin/n6945 , 
         \CIC1Sin/d_d_tmp_52 , \CIC1Sin/d_tmp_52 , \CIC1Sin/d_d_tmp_51 , 
         \CIC1Sin/d_tmp_51 , \CIC1Sin/n11246 , \CIC1Sin/n6948 , 
         \CIC1Sin/n6947 , \CIC1Sin/d_d_tmp_50 , \CIC1Sin/d_tmp_50 , 
         \CIC1Sin/d_d_tmp_49 , \CIC1Sin/d_tmp_49 , \CIC1Sin/n11245 , 
         \CIC1Sin/n6950 , \CIC1Sin/n6949 , \CIC1Sin/d_d_tmp_48 , 
         \CIC1Sin/d_tmp_48 , \CIC1Sin/d_d_tmp_47 , \CIC1Sin/d_tmp_47 , 
         \CIC1Sin/n11244 , \CIC1Sin/n6952 , \CIC1Sin/n6951 , 
         \CIC1Sin/d_d_tmp_46 , \CIC1Sin/d_tmp_46 , \CIC1Sin/d_d_tmp_45 , 
         \CIC1Sin/d_tmp_45 , \CIC1Sin/n11243 , \CIC1Sin/n6954 , 
         \CIC1Sin/n6953 , \CIC1Sin/d_d_tmp_44 , \CIC1Sin/d_tmp_44 , 
         \CIC1Sin/d_d_tmp_43 , \CIC1Sin/d_tmp_43 , \CIC1Sin/n11242 , 
         \CIC1Sin/n6956 , \CIC1Sin/n6955 , \CIC1Sin/d_d_tmp_42 , 
         \CIC1Sin/d_tmp_42 , \CIC1Sin/d_d_tmp_41 , \CIC1Sin/d_tmp_41 , 
         \CIC1Sin/n11241 , \CIC1Sin/n6958 , \CIC1Sin/n6957 , 
         \CIC1Sin/d_d_tmp_40 , \CIC1Sin/d_tmp_40 , \CIC1Sin/d_d_tmp_39 , 
         \CIC1Sin/d_tmp_39 , \CIC1Sin/n11240 , \CIC1Sin/n6960 , 
         \CIC1Sin/n6959 , \CIC1Sin/d_d_tmp_38 , \CIC1Sin/d_tmp_38 , 
         \CIC1Sin/d_d_tmp_37 , \CIC1Sin/d_tmp_37 , \CIC1Sin/n11239 , 
         \CIC1Sin/n6962 , \CIC1Sin/n6961 , \CIC1Sin/d_d_tmp_36 , 
         \CIC1Sin/d_tmp_36 , \CIC1Sin/n6963 , \CIC1Sin/n6926 , 
         \CIC1Sin/d6_71_N_1458_71 , \CIC1Sin/d6_71_N_1458_70 , 
         \CIC1Sin/osc_clk_enable_246 , \CIC1Sin/n11237 , 
         \CIC1Sin/d6_71_N_1458_69 , \CIC1Sin/d6_71_N_1458_68 , 
         \CIC1Sin/osc_clk_enable_196 , \CIC1Sin/n11236 , 
         \CIC1Sin/d6_71_N_1458_67 , \CIC1Sin/d6_71_N_1458_66 , 
         \CIC1Sin/n11235 , \CIC1Sin/d6_71_N_1458_65 , 
         \CIC1Sin/d6_71_N_1458_64 , \CIC1Sin/n11234 , 
         \CIC1Sin/d6_71_N_1458_63 , \CIC1Sin/d6_71_N_1458_62 , 
         \CIC1Sin/n11233 , \CIC1Sin/d6_71_N_1458_61 , 
         \CIC1Sin/d6_71_N_1458_60 , \CIC1Sin/n11232 , 
         \CIC1Sin/d6_71_N_1458_59 , \CIC1Sin/d6_71_N_1458_58 , 
         \CIC1Sin/n11231 , \CIC1Sin/d6_71_N_1458_57 , 
         \CIC1Sin/d6_71_N_1458_56 , \CIC1Sin/n11230 , 
         \CIC1Sin/d6_71_N_1458_55 , \CIC1Sin/d6_71_N_1458_54 , 
         \CIC1Sin/n11229 , \CIC1Sin/d6_71_N_1458_53 , 
         \CIC1Sin/d6_71_N_1458_52 , \CIC1Sin/n11228 , 
         \CIC1Sin/d6_71_N_1458_51 , \CIC1Sin/d6_71_N_1458_50 , 
         \CIC1Sin/n11227 , \CIC1Sin/d6_71_N_1458_49 , 
         \CIC1Sin/d6_71_N_1458_48 , \CIC1Sin/n11226 , 
         \CIC1Sin/d6_71_N_1458_47 , \CIC1Sin/d6_71_N_1458_46 , 
         \CIC1Sin/n11225 , \CIC1Sin/d6_71_N_1458_45 , 
         \CIC1Sin/d6_71_N_1458_44 , \CIC1Sin/n11224 , 
         \CIC1Sin/d6_71_N_1458_43 , \CIC1Sin/d6_71_N_1458_42 , 
         \CIC1Sin/n11223 , \CIC1Sin/d6_71_N_1458_41 , 
         \CIC1Sin/d6_71_N_1458_40 , \CIC1Sin/n11222 , 
         \CIC1Sin/d6_71_N_1458_39 , \CIC1Sin/d6_71_N_1458_38 , 
         \CIC1Sin/n11221 , \CIC1Sin/d6_71_N_1458_37 , 
         \CIC1Sin/d6_71_N_1458_36 , \CIC1Sin/n11220 , \CIC1Sin/n4078 , 
         \CIC1Sin/d1_71 , \CIC1Sin/n4079 , \CIC1Sin/d1_70 , 
         \CIC1Sin/d1_71_N_417_71 , \CIC1Sin/d1_71_N_417_70 , \CIC1Sin/n11189 , 
         \CIC1Sin/n4080 , \CIC1Sin/d1_69 , \CIC1Sin/n4081 , \CIC1Sin/d1_68 , 
         \CIC1Sin/d1_71_N_417_69 , \CIC1Sin/d1_71_N_417_68 , \CIC1Sin/n11188 , 
         \CIC1Sin/n4082 , \CIC1Sin/d1_67 , \CIC1Sin/n4083 , \CIC1Sin/d1_66 , 
         \CIC1Sin/d1_71_N_417_67 , \CIC1Sin/d1_71_N_417_66 , \CIC1Sin/n11187 , 
         \CIC1Sin/n4084 , \CIC1Sin/d1_65 , \CIC1Sin/n4085 , \CIC1Sin/d1_64 , 
         \CIC1Sin/d1_71_N_417_65 , \CIC1Sin/d1_71_N_417_64 , \CIC1Sin/n11186 , 
         \CIC1Sin/n4086 , \CIC1Sin/d1_63 , \CIC1Sin/n4087 , \CIC1Sin/d1_62 , 
         \CIC1Sin/d1_71_N_417_63 , \CIC1Sin/d1_71_N_417_62 , \CIC1Sin/n11185 , 
         \CIC1Sin/n4088 , \CIC1Sin/d1_61 , \CIC1Sin/n4089 , \CIC1Sin/d1_60 , 
         \CIC1Sin/d1_71_N_417_61 , \CIC1Sin/d1_71_N_417_60 , \CIC1Sin/n11184 , 
         \CIC1Sin/d7_71_N_1530_71 , \CIC1Sin/d7_71_N_1530_70 , \CIC1Sin/d4_43 , 
         \CIC1Sin/d4_42 , \CIC1Sin/n12018 , \CIC1Sin/n4525 , \CIC1Sin/n4524 , 
         \CIC1Sin/d4_41 , \CIC1Sin/d4_40 , \CIC1Sin/n12017 , \CIC1Sin/n4527 , 
         \CIC1Sin/n4526 , \CIC1Sin/d4_39 , \CIC1Sin/d4_38 , \CIC1Sin/n12016 , 
         \CIC1Sin/n4529 , \CIC1Sin/n4528 , \CIC1Sin/d4_37 , \CIC1Sin/d4_36 , 
         \CIC1Sin/n4530 , \CIC1Sin/n4494 , \CIC1Sin/d4_71_N_633_71 , 
         \CIC1Sin/d4_71_N_633_70 , \CIC1Sin/n12013 , \CIC1Sin/d4_71_N_633_69 , 
         \CIC1Sin/d4_71_N_633_68 , \CIC1Sin/n12012 , \CIC1Sin/d4_71_N_633_67 , 
         \CIC1Sin/d4_71_N_633_66 , \CIC1Sin/n12011 , \CIC1Sin/d4_71_N_633_65 , 
         \CIC1Sin/d4_71_N_633_64 , \CIC1Sin/n12010 , \CIC1Sin/d4_71_N_633_63 , 
         \CIC1Sin/d4_71_N_633_62 , \CIC1Sin/n12009 , \CIC1Sin/d4_71_N_633_61 , 
         \CIC1Sin/d4_71_N_633_60 , \CIC1Sin/n12008 , \CIC1Sin/d4_71_N_633_59 , 
         \CIC1Sin/d4_71_N_633_58 , \CIC1Sin/n12007 , \CIC1Sin/d4_71_N_633_57 , 
         \CIC1Sin/d4_71_N_633_56 , \CIC1Sin/n12006 , \CIC1Sin/d4_71_N_633_55 , 
         \CIC1Sin/d4_71_N_633_54 , \CIC1Sin/n12005 , \CIC1Sin/d4_71_N_633_53 , 
         \CIC1Sin/d4_71_N_633_52 , \CIC1Sin/n12004 , \CIC1Sin/d8_71_N_1602_57 , 
         \CIC1Sin/d8_71_N_1602_56 , \CIC1Sin/n11680 , 
         \CIC1Sin/d8_71_N_1602_55 , \CIC1Sin/d8_71_N_1602_54 , 
         \CIC1Sin/n11679 , \CIC1Sin/d8_71_N_1602_53 , 
         \CIC1Sin/d8_71_N_1602_52 , \CIC1Sin/n11678 , 
         \CIC1Sin/d8_71_N_1602_51 , \CIC1Sin/d8_71_N_1602_50 , 
         \CIC1Sin/n11677 , \CIC1Sin/d8_71_N_1602_49 , 
         \CIC1Sin/d8_71_N_1602_48 , \CIC1Sin/n11676 , 
         \CIC1Sin/d8_71_N_1602_47 , \CIC1Sin/d8_71_N_1602_46 , 
         \CIC1Sin/n11675 , \CIC1Sin/d8_71_N_1602_45 , 
         \CIC1Sin/d8_71_N_1602_44 , \CIC1Sin/n11674 , 
         \CIC1Sin/d8_71_N_1602_43 , \CIC1Sin/d8_71_N_1602_42 , 
         \CIC1Sin/n11673 , \CIC1Sin/d8_71_N_1602_41 , 
         \CIC1Sin/d8_71_N_1602_40 , \CIC1Sin/n11672 , 
         \CIC1Sin/d8_71_N_1602_39 , \CIC1Sin/d8_71_N_1602_38 , 
         \CIC1Sin/n11671 , \CIC1Sin/d8_71_N_1602_37 , 
         \CIC1Sin/d8_71_N_1602_36 , \CIC1Sin/n11670 , \CIC1Sin/n4090 , 
         \CIC1Sin/n4091 , \CIC1Sin/d1_71_N_417_59 , \CIC1Sin/d1_71_N_417_58 , 
         \CIC1Sin/n11183 , \CIC1Sin/n4092 , \CIC1Sin/n4093 , 
         \CIC1Sin/d1_71_N_417_57 , \CIC1Sin/d1_71_N_417_56 , \CIC1Sin/n11182 , 
         \CIC1Sin/n4094 , \CIC1Sin/n4095 , \CIC1Sin/d1_71_N_417_55 , 
         \CIC1Sin/d1_71_N_417_54 , \CIC1Sin/n11181 , \CIC1Sin/n4096 , 
         \CIC1Sin/n4097 , \CIC1Sin/d1_71_N_417_53 , \CIC1Sin/d1_71_N_417_52 , 
         \CIC1Sin/n11180 , \CIC1Sin/n4098 , \CIC1Sin/n4099 , 
         \CIC1Sin/d1_71_N_417_51 , \CIC1Sin/d1_71_N_417_50 , \CIC1Sin/n11179 , 
         \CIC1Sin/n4100 , \CIC1Sin/n4101 , \CIC1Sin/d1_71_N_417_49 , 
         \CIC1Sin/d1_71_N_417_48 , \CIC1Sin/n11178 , \CIC1Sin/n4102 , 
         \CIC1Sin/n4103 , \CIC1Sin/d1_71_N_417_47 , \CIC1Sin/d1_71_N_417_46 , 
         \CIC1Sin/n11177 , \CIC1Sin/n4104 , \CIC1Sin/n4105 , 
         \CIC1Sin/d1_71_N_417_45 , \CIC1Sin/d1_71_N_417_44 , \CIC1Sin/n11176 , 
         \CIC1Sin/n4106 , \CIC1Sin/n4107 , \CIC1Sin/d1_71_N_417_43 , 
         \CIC1Sin/d1_71_N_417_42 , \CIC1Sin/n11175 , \CIC1Sin/n4108 , 
         \CIC1Sin/n4109 , \CIC1Sin/d1_71_N_417_41 , \CIC1Sin/d1_71_N_417_40 , 
         \CIC1Sin/n11174 , \CIC1Sin/n4110 , \CIC1Sin/n4111 , 
         \CIC1Sin/d1_71_N_417_39 , \CIC1Sin/d1_71_N_417_38 , \CIC1Sin/n11173 , 
         \CIC1Sin/n4112 , \CIC1Sin/n12116 , \CIC1Sin/d1_71_N_417_37 , 
         \CIC1Sin/d1_71_N_417_36 , \CIC1Sin/n11172 , \CIC1Sin/d_d_tmp_35 , 
         \CIC1Sin/d_tmp_35 , \CIC1Sin/d6_71_N_1458_35 , \CIC1Sin/n11168 , 
         \CIC1Sin/d6_35 , \CIC1Sin/d_d_tmp_34 , \CIC1Sin/d_tmp_34 , 
         \CIC1Sin/d_d_tmp_33 , \CIC1Sin/d_tmp_33 , \CIC1Sin/d6_71_N_1458_34 , 
         \CIC1Sin/d6_71_N_1458_33 , \CIC1Sin/n11167 , \CIC1Sin/d6_33 , 
         \CIC1Sin/d6_34 , \CIC1Sin/d_d_tmp_32 , \CIC1Sin/d_tmp_32 , 
         \CIC1Sin/d_d_tmp_31 , \CIC1Sin/d_tmp_31 , \CIC1Sin/d6_71_N_1458_32 , 
         \CIC1Sin/d6_71_N_1458_31 , \CIC1Sin/n11166 , \CIC1Sin/d6_31 , 
         \CIC1Sin/d6_32 , \CIC1Sin/d_d_tmp_30 , \CIC1Sin/d_tmp_30 , 
         \CIC1Sin/d_d_tmp_29 , \CIC1Sin/d_tmp_29 , \CIC1Sin/d6_71_N_1458_30 , 
         \CIC1Sin/d6_71_N_1458_29 , \CIC1Sin/n11165 , \CIC1Sin/d6_29 , 
         \CIC1Sin/d6_30 , \CIC1Sin/d_d_tmp_28 , \CIC1Sin/d_tmp_28 , 
         \CIC1Sin/d_d_tmp_27 , \CIC1Sin/d_tmp_27 , \CIC1Sin/d6_71_N_1458_28 , 
         \CIC1Sin/d6_71_N_1458_27 , \CIC1Sin/n11164 , \CIC1Sin/d6_27 , 
         \CIC1Sin/d6_28 , \CIC1Sin/d_d_tmp_26 , \CIC1Sin/d_tmp_26 , 
         \CIC1Sin/d_d_tmp_25 , \CIC1Sin/d_tmp_25 , \CIC1Sin/d6_71_N_1458_26 , 
         \CIC1Sin/d6_71_N_1458_25 , \CIC1Sin/n11163 , \CIC1Sin/d6_25 , 
         \CIC1Sin/d6_26 , \CIC1Sin/d_d_tmp_24 , \CIC1Sin/d_tmp_24 , 
         \CIC1Sin/d_d_tmp_23 , \CIC1Sin/d_tmp_23 , \CIC1Sin/d6_71_N_1458_24 , 
         \CIC1Sin/d6_71_N_1458_23 , \CIC1Sin/n11162 , \CIC1Sin/d6_23 , 
         \CIC1Sin/d6_24 , \CIC1Sin/d_d_tmp_22 , \CIC1Sin/d_tmp_22 , 
         \CIC1Sin/d_d_tmp_21 , \CIC1Sin/d_tmp_21 , \CIC1Sin/d6_71_N_1458_22 , 
         \CIC1Sin/d6_71_N_1458_21 , \CIC1Sin/n11161 , \CIC1Sin/d6_21 , 
         \CIC1Sin/d6_22 , \CIC1Sin/d_d_tmp_20 , \CIC1Sin/d_tmp_20 , 
         \CIC1Sin/d_d_tmp_19 , \CIC1Sin/d_tmp_19 , \CIC1Sin/d6_71_N_1458_19 , 
         \CIC1Sin/osc_clk_enable_146 , \CIC1Sin/n11160 , \CIC1Sin/d6_19 , 
         \CIC1Sin/d6_71_N_1458_20 , \CIC1Sin/d_d_tmp_18 , \CIC1Sin/d_tmp_18 , 
         \CIC1Sin/d_d_tmp_17 , \CIC1Sin/d_tmp_17 , \CIC1Sin/d6_71_N_1458_18 , 
         \CIC1Sin/d6_71_N_1458_17 , \CIC1Sin/n11159 , \CIC1Sin/d6_17 , 
         \CIC1Sin/d6_18 , \CIC1Sin/d_d_tmp_16 , \CIC1Sin/d_tmp_16 , 
         \CIC1Sin/d_d_tmp_15 , \CIC1Sin/d_tmp_15 , \CIC1Sin/d6_71_N_1458_16 , 
         \CIC1Sin/d6_71_N_1458_15 , \CIC1Sin/n11158 , \CIC1Sin/d6_15 , 
         \CIC1Sin/d6_16 , \CIC1Sin/d_d_tmp_14 , \CIC1Sin/d_tmp_14 , 
         \CIC1Sin/d_d_tmp_13 , \CIC1Sin/d_tmp_13 , \CIC1Sin/d6_71_N_1458_14 , 
         \CIC1Sin/d6_71_N_1458_13 , \CIC1Sin/n11157 , \CIC1Sin/d6_13 , 
         \CIC1Sin/d6_14 , \CIC1Sin/d_d_tmp_12 , \CIC1Sin/d_tmp_12 , 
         \CIC1Sin/d_d_tmp_11 , \CIC1Sin/d_tmp_11 , \CIC1Sin/d6_71_N_1458_12 , 
         \CIC1Sin/d6_71_N_1458_11 , \CIC1Sin/n11156 , \CIC1Sin/d6_11 , 
         \CIC1Sin/d6_12 , \CIC1Sin/d_d_tmp_10 , \CIC1Sin/d_tmp_10 , 
         \CIC1Sin/d_d_tmp_9 , \CIC1Sin/d_tmp_9 , \CIC1Sin/d6_71_N_1458_10 , 
         \CIC1Sin/d6_71_N_1458_9 , \CIC1Sin/n11155 , \CIC1Sin/d6_9 , 
         \CIC1Sin/d6_10 , \CIC1Sin/d_d_tmp_8 , \CIC1Sin/d_tmp_8 , 
         \CIC1Sin/d_d_tmp_7 , \CIC1Sin/d_tmp_7 , \CIC1Sin/d6_71_N_1458_8 , 
         \CIC1Sin/d6_71_N_1458_7 , \CIC1Sin/n11154 , \CIC1Sin/d6_7 , 
         \CIC1Sin/d6_8 , \CIC1Sin/d_d_tmp_6 , \CIC1Sin/d_tmp_6 , 
         \CIC1Sin/d_d_tmp_5 , \CIC1Sin/d_tmp_5 , \CIC1Sin/d6_71_N_1458_6 , 
         \CIC1Sin/d6_71_N_1458_5 , \CIC1Sin/n11153 , \CIC1Sin/d6_5 , 
         \CIC1Sin/d6_6 , \CIC1Sin/d_d_tmp_4 , \CIC1Sin/d_tmp_4 , 
         \CIC1Sin/d_d_tmp_3 , \CIC1Sin/d_tmp_3 , \CIC1Sin/d6_71_N_1458_4 , 
         \CIC1Sin/d6_71_N_1458_3 , \CIC1Sin/n11152 , \CIC1Sin/d6_3 , 
         \CIC1Sin/d6_4 , \CIC1Sin/d_d_tmp_2 , \CIC1Sin/d_tmp_2 , 
         \CIC1Sin/d_d_tmp_1 , \CIC1Sin/d_tmp_1 , \CIC1Sin/d6_71_N_1458_2 , 
         \CIC1Sin/d6_71_N_1458_1 , \CIC1Sin/n11151 , \CIC1Sin/d6_1 , 
         \CIC1Sin/d6_2 , \CIC1Sin/d_d_tmp_0 , \CIC1Sin/d_tmp_0 , 
         \CIC1Sin/d6_71_N_1458_0 , \CIC1Sin/osc_clk_enable_1395 , 
         \CIC1Sin/d6_0 , \CIC1Sin/d_d8_35 , \CIC1Sin/d8_35 , 
         \CIC1Sin/d9_71_N_1674_35 , \CIC1Sin/n11109 , \CIC1Sin/d9_35 , 
         \CIC1Sin/d_d8_34 , \CIC1Sin/d8_34 , \CIC1Sin/d_d8_33 , 
         \CIC1Sin/d8_33 , \CIC1Sin/d9_71_N_1674_34 , \CIC1Sin/d9_71_N_1674_33 , 
         \CIC1Sin/n11108 , \CIC1Sin/d9_33 , \CIC1Sin/d9_34 , \CIC1Sin/d_d8_32 , 
         \CIC1Sin/d8_32 , \CIC1Sin/d_d8_31 , \CIC1Sin/d8_31 , 
         \CIC1Sin/d9_71_N_1674_32 , \CIC1Sin/d9_71_N_1674_31 , 
         \CIC1Sin/n11107 , \CIC1Sin/d9_31 , \CIC1Sin/d9_32 , \CIC1Sin/d_d8_30 , 
         \CIC1Sin/d8_30 , \CIC1Sin/d_d8_29 , \CIC1Sin/d8_29 , 
         \CIC1Sin/d9_71_N_1674_30 , \CIC1Sin/d9_71_N_1674_29 , 
         \CIC1Sin/n11106 , \CIC1Sin/d9_29 , \CIC1Sin/d9_30 , \CIC1Sin/d_d8_28 , 
         \CIC1Sin/d8_28 , \CIC1Sin/d_d8_27 , \CIC1Sin/d8_27 , 
         \CIC1Sin/d9_71_N_1674_28 , \CIC1Sin/d9_71_N_1674_27 , 
         \CIC1Sin/n11105 , \CIC1Sin/d9_27 , \CIC1Sin/d9_28 , \CIC1Sin/d_d8_26 , 
         \CIC1Sin/d8_26 , \CIC1Sin/d_d8_25 , \CIC1Sin/d8_25 , 
         \CIC1Sin/d9_71_N_1674_26 , \CIC1Sin/d9_71_N_1674_25 , 
         \CIC1Sin/n11104 , \CIC1Sin/d9_25 , \CIC1Sin/d9_26 , \CIC1Sin/d_d8_24 , 
         \CIC1Sin/d8_24 , \CIC1Sin/d_d8_23 , \CIC1Sin/d8_23 , 
         \CIC1Sin/d9_71_N_1674_24 , \CIC1Sin/d9_71_N_1674_23 , 
         \CIC1Sin/n11103 , \CIC1Sin/d9_23 , \CIC1Sin/d9_24 , \CIC1Sin/d_d8_22 , 
         \CIC1Sin/d8_22 , \CIC1Sin/d_d8_21 , \CIC1Sin/d8_21 , 
         \CIC1Sin/d9_71_N_1674_22 , \CIC1Sin/d9_71_N_1674_21 , 
         \CIC1Sin/n11102 , \CIC1Sin/d9_21 , \CIC1Sin/d9_22 , \CIC1Sin/d_d8_20 , 
         \CIC1Sin/d8_20 , \CIC1Sin/d_d8_19 , \CIC1Sin/d8_19 , 
         \CIC1Sin/d9_71_N_1674_20 , \CIC1Sin/d9_71_N_1674_19 , 
         \CIC1Sin/n11101 , \CIC1Sin/d9_19 , \CIC1Sin/d9_20 , \CIC1Sin/d_d8_18 , 
         \CIC1Sin/d8_18 , \CIC1Sin/d_d8_17 , \CIC1Sin/d8_17 , 
         \CIC1Sin/d9_71_N_1674_18 , \CIC1Sin/d9_71_N_1674_17 , 
         \CIC1Sin/n11100 , \CIC1Sin/d9_17 , \CIC1Sin/d9_18 , \CIC1Sin/d_d8_16 , 
         \CIC1Sin/d8_16 , \CIC1Sin/d_d8_15 , \CIC1Sin/d8_15 , 
         \CIC1Sin/d9_71_N_1674_16 , \CIC1Sin/d9_71_N_1674_15 , 
         \CIC1Sin/n11099 , \CIC1Sin/d9_15 , \CIC1Sin/d9_16 , \CIC1Sin/d_d8_14 , 
         \CIC1Sin/d8_14 , \CIC1Sin/d_d8_13 , \CIC1Sin/d8_13 , 
         \CIC1Sin/d9_71_N_1674_14 , \CIC1Sin/d9_71_N_1674_13 , 
         \CIC1Sin/n11098 , \CIC1Sin/d9_13 , \CIC1Sin/d9_14 , \CIC1Sin/d_d8_12 , 
         \CIC1Sin/d8_12 , \CIC1Sin/d_d8_11 , \CIC1Sin/d8_11 , 
         \CIC1Sin/d9_71_N_1674_12 , \CIC1Sin/d9_71_N_1674_11 , 
         \CIC1Sin/n11097 , \CIC1Sin/d9_11 , \CIC1Sin/d9_12 , \CIC1Sin/d_d8_10 , 
         \CIC1Sin/d8_10 , \CIC1Sin/d_d8_9 , \CIC1Sin/d8_9 , 
         \CIC1Sin/d9_71_N_1674_10 , \CIC1Sin/d9_71_N_1674_9 , \CIC1Sin/n11096 , 
         \CIC1Sin/d9_9 , \CIC1Sin/d9_10 , \CIC1Sin/d_d8_8 , \CIC1Sin/d8_8 , 
         \CIC1Sin/d_d8_7 , \CIC1Sin/d8_7 , \CIC1Sin/d9_71_N_1674_8 , 
         \CIC1Sin/d9_71_N_1674_7 , \CIC1Sin/n11095 , \CIC1Sin/d9_7 , 
         \CIC1Sin/d9_8 , \CIC1Sin/d_d8_6 , \CIC1Sin/d8_6 , \CIC1Sin/d_d8_5 , 
         \CIC1Sin/d8_5 , \CIC1Sin/d9_71_N_1674_6 , \CIC1Sin/d9_71_N_1674_5 , 
         \CIC1Sin/n11094 , \CIC1Sin/d9_5 , \CIC1Sin/d9_6 , \CIC1Sin/d_d8_4 , 
         \CIC1Sin/d8_4 , \CIC1Sin/d_d8_3 , \CIC1Sin/d8_3 , 
         \CIC1Sin/d9_71_N_1674_4 , \CIC1Sin/d9_71_N_1674_3 , \CIC1Sin/n11093 , 
         \CIC1Sin/d9_3 , \CIC1Sin/d9_4 , \CIC1Sin/d_d8_2 , \CIC1Sin/d8_2 , 
         \CIC1Sin/d_d8_1 , \CIC1Sin/d8_1 , \CIC1Sin/d9_71_N_1674_2 , 
         \CIC1Sin/d9_71_N_1674_1 , \CIC1Sin/n11092 , \CIC1Sin/d9_1 , 
         \CIC1Sin/d9_2 , \CIC1Sin/d_d8_0 , \CIC1Sin/d8_0 , 
         \CIC1Sin/d9_71_N_1674_0 , \CIC1Sin/d9_0 , \CIC1Sin/d_d9_35 , 
         \CIC1Sin/n11091 , \CIC1Sin/n6318 , \CIC1Sin/d_d9_34 , 
         \CIC1Sin/d_d9_33 , \CIC1Sin/n11090 , \CIC1Sin/d_d9_32 , 
         \CIC1Sin/d_d9_31 , \CIC1Sin/n11089 , \CIC1Sin/d_d9_30 , 
         \CIC1Sin/d_d9_29 , \CIC1Sin/n11088 , \CIC1Sin/d_d9_28 , 
         \CIC1Sin/d_d9_27 , \CIC1Sin/n11087 , \CIC1Sin/d_d9_26 , 
         \CIC1Sin/d_d9_25 , \CIC1Sin/n11086 , \CIC1Sin/d_d9_24 , 
         \CIC1Sin/d_d9_23 , \CIC1Sin/n11085 , \CIC1Sin/d_d9_22 , 
         \CIC1Sin/d_d9_21 , \CIC1Sin/n11084 , \CIC1Sin/d_d9_20 , 
         \CIC1Sin/d_d9_19 , \CIC1Sin/n11083 , \CIC1Sin/d_d9_18 , 
         \CIC1Sin/d_d9_17 , \CIC1Sin/n11082 , \CIC1Sin/d_d9_16 , 
         \CIC1Sin/d_d9_15 , \CIC1Sin/n11081 , \CIC1Sin/d_d9_14 , 
         \CIC1Sin/d_d9_13 , \CIC1Sin/n11080 , \CIC1Sin/d_d9_12 , 
         \CIC1Sin/d_d9_11 , \CIC1Sin/n11079 , \CIC1Sin/d_d9_10 , 
         \CIC1Sin/d_d9_9 , \CIC1Sin/n11078 , \CIC1Sin/d_d9_8 , 
         \CIC1Sin/d_d9_7 , \CIC1Sin/n11077 , \CIC1Sin/d_d9_6 , 
         \CIC1Sin/d_d9_5 , \CIC1Sin/n11076 , \CIC1Sin/d_d9_4 , 
         \CIC1Sin/d_d9_3 , \CIC1Sin/n11075 , \CIC1Sin/d_d9_2 , 
         \CIC1Sin/d_d9_1 , \CIC1Sin/n11074 , \CIC1Sin/d_d9_0 , 
         \CIC1Sin/d_d7_35 , \CIC1Sin/d7_35 , \CIC1Sin/d8_71_N_1602_35 , 
         \CIC1Sin/osc_clk_enable_446 , \CIC1Sin/n11019 , \CIC1Sin/d_d7_34 , 
         \CIC1Sin/d7_34 , \CIC1Sin/d_d7_33 , \CIC1Sin/d7_33 , 
         \CIC1Sin/d8_71_N_1602_34 , \CIC1Sin/d8_71_N_1602_33 , 
         \CIC1Sin/n11018 , \CIC1Sin/d_d7_32 , \CIC1Sin/d7_32 , 
         \CIC1Sin/d_d7_31 , \CIC1Sin/d7_31 , \CIC1Sin/d8_71_N_1602_32 , 
         \CIC1Sin/d8_71_N_1602_31 , \CIC1Sin/n11017 , \CIC1Sin/d_d7_30 , 
         \CIC1Sin/d7_30 , \CIC1Sin/d_d7_29 , \CIC1Sin/d7_29 , 
         \CIC1Sin/d8_71_N_1602_30 , \CIC1Sin/d8_71_N_1602_29 , 
         \CIC1Sin/n11016 , \CIC1Sin/d_d7_28 , \CIC1Sin/d7_28 , 
         \CIC1Sin/d_d7_27 , \CIC1Sin/d7_27 , \CIC1Sin/d8_71_N_1602_28 , 
         \CIC1Sin/d8_71_N_1602_27 , \CIC1Sin/n11015 , \CIC1Sin/d_d7_26 , 
         \CIC1Sin/d7_26 , \CIC1Sin/d_d7_25 , \CIC1Sin/d7_25 , 
         \CIC1Sin/d8_71_N_1602_26 , \CIC1Sin/d8_71_N_1602_25 , 
         \CIC1Sin/n11014 , \CIC1Sin/d_d7_24 , \CIC1Sin/d7_24 , 
         \CIC1Sin/d_d7_23 , \CIC1Sin/d7_23 , \CIC1Sin/d8_71_N_1602_24 , 
         \CIC1Sin/d8_71_N_1602_23 , \CIC1Sin/n11013 , \CIC1Sin/d_d7_22 , 
         \CIC1Sin/d7_22 , \CIC1Sin/d_d7_21 , \CIC1Sin/d7_21 , 
         \CIC1Sin/d8_71_N_1602_22 , \CIC1Sin/d8_71_N_1602_21 , 
         \CIC1Sin/n11012 , \CIC1Sin/d_d7_20 , \CIC1Sin/d7_20 , 
         \CIC1Sin/d_d7_19 , \CIC1Sin/d7_19 , \CIC1Sin/d8_71_N_1602_20 , 
         \CIC1Sin/d8_71_N_1602_19 , \CIC1Sin/n11011 , \CIC1Sin/d_d7_18 , 
         \CIC1Sin/d7_18 , \CIC1Sin/d_d7_17 , \CIC1Sin/d7_17 , 
         \CIC1Sin/d8_71_N_1602_18 , \CIC1Sin/d8_71_N_1602_17 , 
         \CIC1Sin/n11010 , \CIC1Sin/d_d7_16 , \CIC1Sin/d7_16 , 
         \CIC1Sin/d_d7_15 , \CIC1Sin/d7_15 , \CIC1Sin/d8_71_N_1602_16 , 
         \CIC1Sin/d8_71_N_1602_15 , \CIC1Sin/n11009 , \CIC1Sin/d_d7_14 , 
         \CIC1Sin/d7_14 , \CIC1Sin/d_d7_13 , \CIC1Sin/d7_13 , 
         \CIC1Sin/d8_71_N_1602_14 , \CIC1Sin/d8_71_N_1602_13 , 
         \CIC1Sin/n11008 , \CIC1Sin/d_d7_12 , \CIC1Sin/d7_12 , 
         \CIC1Sin/d_d7_11 , \CIC1Sin/d7_11 , \CIC1Sin/d8_71_N_1602_12 , 
         \CIC1Sin/d8_71_N_1602_11 , \CIC1Sin/n11007 , \CIC1Sin/d_d7_10 , 
         \CIC1Sin/d7_10 , \CIC1Sin/d_d7_9 , \CIC1Sin/d7_9 , 
         \CIC1Sin/d8_71_N_1602_10 , \CIC1Sin/d8_71_N_1602_9 , \CIC1Sin/n11006 , 
         \CIC1Sin/d_d7_8 , \CIC1Sin/d7_8 , \CIC1Sin/d_d7_7 , \CIC1Sin/d7_7 , 
         \CIC1Sin/d8_71_N_1602_8 , \CIC1Sin/d8_71_N_1602_7 , \CIC1Sin/n11005 , 
         \CIC1Sin/d_d7_6 , \CIC1Sin/d7_6 , \CIC1Sin/d_d7_5 , \CIC1Sin/d7_5 , 
         \CIC1Sin/d8_71_N_1602_6 , \CIC1Sin/d8_71_N_1602_5 , \CIC1Sin/n11004 , 
         \CIC1Sin/d_d7_4 , \CIC1Sin/d7_4 , \CIC1Sin/d_d7_3 , \CIC1Sin/d7_3 , 
         \CIC1Sin/d8_71_N_1602_4 , \CIC1Sin/d8_71_N_1602_3 , \CIC1Sin/n11003 , 
         \CIC1Sin/d_d7_2 , \CIC1Sin/d7_2 , \CIC1Sin/d_d7_1 , \CIC1Sin/d7_1 , 
         \CIC1Sin/d8_71_N_1602_2 , \CIC1Sin/d8_71_N_1602_1 , \CIC1Sin/n11002 , 
         \CIC1Sin/d_d7_0 , \CIC1Sin/d7_0 , \CIC1Sin/d8_71_N_1602_0 , 
         \CIC1Sin/d_d6_35 , \CIC1Sin/d7_71_N_1530_35 , \CIC1Sin/n10980 , 
         \CIC1Sin/d_d6_34 , \CIC1Sin/d_d6_33 , \CIC1Sin/d7_71_N_1530_34 , 
         \CIC1Sin/d7_71_N_1530_33 , \CIC1Sin/n10979 , \CIC1Sin/d_d6_32 , 
         \CIC1Sin/d_d6_31 , \CIC1Sin/d7_71_N_1530_32 , 
         \CIC1Sin/d7_71_N_1530_31 , \CIC1Sin/n10978 , \CIC1Sin/d_d6_30 , 
         \CIC1Sin/d_d6_29 , \CIC1Sin/d7_71_N_1530_30 , 
         \CIC1Sin/d7_71_N_1530_29 , \CIC1Sin/n10977 , \CIC1Sin/d_d6_28 , 
         \CIC1Sin/d_d6_27 , \CIC1Sin/d7_71_N_1530_27 , 
         \CIC1Sin/osc_clk_enable_296 , \CIC1Sin/n10976 , 
         \CIC1Sin/d7_71_N_1530_28 , \CIC1Sin/d_d6_26 , \CIC1Sin/d_d6_25 , 
         \CIC1Sin/d7_71_N_1530_26 , \CIC1Sin/d7_71_N_1530_25 , 
         \CIC1Sin/n10975 , \CIC1Sin/d_d6_24 , \CIC1Sin/d_d6_23 , 
         \CIC1Sin/d7_71_N_1530_24 , \CIC1Sin/d7_71_N_1530_23 , 
         \CIC1Sin/n10974 , \CIC1Sin/d_d6_22 , \CIC1Sin/d_d6_21 , 
         \CIC1Sin/d7_71_N_1530_22 , \CIC1Sin/d7_71_N_1530_21 , 
         \CIC1Sin/n10973 , \CIC1Sin/d_d6_20 , \CIC1Sin/d6_20 , 
         \CIC1Sin/d_d6_19 , \CIC1Sin/d7_71_N_1530_20 , 
         \CIC1Sin/d7_71_N_1530_19 , \CIC1Sin/n10972 , \CIC1Sin/d_d6_18 , 
         \CIC1Sin/d_d6_17 , \CIC1Sin/d7_71_N_1530_18 , 
         \CIC1Sin/d7_71_N_1530_17 , \CIC1Sin/n10971 , \CIC1Sin/d_d6_16 , 
         \CIC1Sin/d_d6_15 , \CIC1Sin/d7_71_N_1530_16 , 
         \CIC1Sin/d7_71_N_1530_15 , \CIC1Sin/n10970 , \CIC1Sin/d_d6_14 , 
         \CIC1Sin/d_d6_13 , \CIC1Sin/d7_71_N_1530_14 , 
         \CIC1Sin/d7_71_N_1530_13 , \CIC1Sin/n10969 , \CIC1Sin/d_d6_12 , 
         \CIC1Sin/d_d6_11 , \CIC1Sin/d7_71_N_1530_12 , 
         \CIC1Sin/d7_71_N_1530_11 , \CIC1Sin/n10968 , \CIC1Sin/d_d6_10 , 
         \CIC1Sin/d_d6_9 , \CIC1Sin/d7_71_N_1530_10 , \CIC1Sin/d7_71_N_1530_9 , 
         \CIC1Sin/n10967 , \CIC1Sin/d_d6_8 , \CIC1Sin/d_d6_7 , 
         \CIC1Sin/d7_71_N_1530_8 , \CIC1Sin/d7_71_N_1530_7 , \CIC1Sin/n10966 , 
         \CIC1Sin/d_d6_6 , \CIC1Sin/d_d6_5 , \CIC1Sin/d7_71_N_1530_6 , 
         \CIC1Sin/d7_71_N_1530_5 , \CIC1Sin/n10965 , \CIC1Sin/d_d6_4 , 
         \CIC1Sin/d_d6_3 , \CIC1Sin/d7_71_N_1530_4 , \CIC1Sin/d7_71_N_1530_3 , 
         \CIC1Sin/n10964 , \CIC1Sin/d_d6_2 , \CIC1Sin/d_d6_1 , 
         \CIC1Sin/d7_71_N_1530_2 , \CIC1Sin/d7_71_N_1530_1 , \CIC1Sin/n10963 , 
         \CIC1Sin/d_d6_0 , \CIC1Sin/d7_71_N_1530_0 , \CIC1Sin/count_15 , 
         \CIC1Sin/n376 , \CIC1Sin/n8367 , \CIC1Sin/n10886 , \CIC1Sin/count_14 , 
         \CIC1Sin/count_13 , \CIC1Sin/n377 , \CIC1Sin/n378 , \CIC1Sin/n10885 , 
         \CIC1Sin/count_12 , \CIC1Sin/count_11 , \CIC1Sin/n379 , 
         \CIC1Sin/n10884 , \CIC1Sin/n380 , \CIC1Sin/count_10 , 
         \CIC1Sin/count_9 , \CIC1Sin/n381 , \CIC1Sin/n382 , \CIC1Sin/n10883 , 
         \CIC1Sin/count_8 , \CIC1Sin/count_7 , \CIC1Sin/n383 , \CIC1Sin/n384 , 
         \CIC1Sin/n10882 , \CIC1Sin/count_6 , \CIC1Sin/count_5 , 
         \CIC1Sin/n385 , \CIC1Sin/n386 , \CIC1Sin/n10881 , \CIC1Sin/count_4 , 
         \CIC1Sin/count_3 , \CIC1Sin/n387 , \CIC1Sin/n388 , \CIC1Sin/n10880 , 
         \CIC1Sin/count_2 , \CIC1Sin/count_1 , \CIC1Sin/n389 , \CIC1Sin/n390 , 
         \CIC1Sin/n10879 , \CIC1Sin/count_0 , \CIC1Sin/n391 , \CIC1Sin/n10859 , 
         \CIC1Sin/n4646 , \CIC1Sin/d5_35 , \CIC1Sin/d4_35 , \CIC1Sin/d5_34 , 
         \CIC1Sin/d4_34 , \CIC1Sin/d5_71_N_705_35 , \CIC1Sin/d5_71_N_705_34 , 
         \CIC1Sin/n10858 , \CIC1Sin/d5_33 , \CIC1Sin/d4_33 , \CIC1Sin/d5_32 , 
         \CIC1Sin/d4_32 , \CIC1Sin/d5_71_N_705_33 , \CIC1Sin/d5_71_N_705_32 , 
         \CIC1Sin/n10857 , \CIC1Sin/d5_31 , \CIC1Sin/d4_31 , \CIC1Sin/d5_30 , 
         \CIC1Sin/d4_30 , \CIC1Sin/d5_71_N_705_31 , \CIC1Sin/d5_71_N_705_30 , 
         \CIC1Sin/n10856 , \CIC1Sin/d5_29 , \CIC1Sin/d4_29 , \CIC1Sin/d5_28 , 
         \CIC1Sin/d4_28 , \CIC1Sin/d5_71_N_705_29 , \CIC1Sin/d5_71_N_705_28 , 
         \CIC1Sin/n10855 , \CIC1Sin/d5_27 , \CIC1Sin/d4_27 , \CIC1Sin/d5_26 , 
         \CIC1Sin/d4_26 , \CIC1Sin/d5_71_N_705_27 , \CIC1Sin/d5_71_N_705_26 , 
         \CIC1Sin/n10854 , \CIC1Sin/d5_25 , \CIC1Sin/d4_25 , \CIC1Sin/d5_24 , 
         \CIC1Sin/d4_24 , \CIC1Sin/d5_71_N_705_25 , \CIC1Sin/d5_71_N_705_24 , 
         \CIC1Sin/n10853 , \CIC1Sin/d5_23 , \CIC1Sin/d4_23 , \CIC1Sin/d5_22 , 
         \CIC1Sin/d4_22 , \CIC1Sin/d5_71_N_705_23 , \CIC1Sin/d5_71_N_705_22 , 
         \CIC1Sin/n10852 , \CIC1Sin/d5_21 , \CIC1Sin/d4_21 , \CIC1Sin/d5_20 , 
         \CIC1Sin/d4_20 , \CIC1Sin/d5_71_N_705_21 , \CIC1Sin/d5_71_N_705_20 , 
         \CIC1Sin/n10851 , \CIC1Sin/d5_19 , \CIC1Sin/d4_19 , \CIC1Sin/d5_18 , 
         \CIC1Sin/d4_18 , \CIC1Sin/d5_71_N_705_19 , \CIC1Sin/d5_71_N_705_18 , 
         \CIC1Sin/n10850 , \CIC1Sin/d5_17 , \CIC1Sin/d4_17 , \CIC1Sin/d5_16 , 
         \CIC1Sin/d4_16 , \CIC1Sin/d5_71_N_705_17 , \CIC1Sin/d5_71_N_705_16 , 
         \CIC1Sin/n10849 , \CIC1Sin/d5_15 , \CIC1Sin/d4_15 , \CIC1Sin/d5_14 , 
         \CIC1Sin/d4_14 , \CIC1Sin/d5_71_N_705_15 , \CIC1Sin/d5_71_N_705_14 , 
         \CIC1Sin/n10848 , \CIC1Sin/d5_13 , \CIC1Sin/d4_13 , \CIC1Sin/d5_12 , 
         \CIC1Sin/d4_12 , \CIC1Sin/d5_71_N_705_13 , \CIC1Sin/d5_71_N_705_12 , 
         \CIC1Sin/n10847 , \CIC1Sin/d5_11 , \CIC1Sin/d4_11 , \CIC1Sin/d5_10 , 
         \CIC1Sin/d4_10 , \CIC1Sin/d5_71_N_705_11 , \CIC1Sin/d5_71_N_705_10 , 
         \CIC1Sin/n10846 , \CIC1Sin/d5_9 , \CIC1Sin/d4_9 , \CIC1Sin/d5_8 , 
         \CIC1Sin/d4_8 , \CIC1Sin/d5_71_N_705_9 , \CIC1Sin/d5_71_N_705_8 , 
         \CIC1Sin/n10845 , \CIC1Sin/d5_7 , \CIC1Sin/d4_7 , \CIC1Sin/d5_6 , 
         \CIC1Sin/d4_6 , \CIC1Sin/d5_71_N_705_7 , \CIC1Sin/d5_71_N_705_6 , 
         \CIC1Sin/n10844 , \CIC1Sin/d5_5 , \CIC1Sin/d4_5 , \CIC1Sin/d5_4 , 
         \CIC1Sin/d4_4 , \CIC1Sin/d5_71_N_705_5 , \CIC1Sin/d5_71_N_705_4 , 
         \CIC1Sin/n10843 , \CIC1Sin/d5_3 , \CIC1Sin/d4_3 , \CIC1Sin/d5_2 , 
         \CIC1Sin/d4_2 , \CIC1Sin/d5_71_N_705_3 , \CIC1Sin/d5_71_N_705_2 , 
         \CIC1Sin/n10842 , \CIC1Sin/d5_1 , \CIC1Sin/d4_1 , \CIC1Sin/d5_0 , 
         \CIC1Sin/d4_0 , \CIC1Sin/d5_71_N_705_1 , \CIC1Sin/n10840 , 
         \CIC1Sin/d3_35 , \CIC1Sin/d3_34 , \CIC1Sin/d4_71_N_633_35 , 
         \CIC1Sin/d4_71_N_633_34 , \CIC1Sin/n10839 , \CIC1Sin/d3_33 , 
         \CIC1Sin/d3_32 , \CIC1Sin/d4_71_N_633_33 , \CIC1Sin/d4_71_N_633_32 , 
         \CIC1Sin/n10838 , \CIC1Sin/d3_31 , \CIC1Sin/d3_30 , 
         \CIC1Sin/d4_71_N_633_31 , \CIC1Sin/d4_71_N_633_30 , \CIC1Sin/n10837 , 
         \CIC1Sin/d3_29 , \CIC1Sin/d3_28 , \CIC1Sin/d4_71_N_633_29 , 
         \CIC1Sin/d4_71_N_633_28 , \CIC1Sin/n10836 , \CIC1Sin/d3_27 , 
         \CIC1Sin/d3_26 , \CIC1Sin/d4_71_N_633_27 , \CIC1Sin/d4_71_N_633_26 , 
         \CIC1Sin/n10835 , \CIC1Sin/d3_25 , \CIC1Sin/d3_24 , 
         \CIC1Sin/d4_71_N_633_25 , \CIC1Sin/d4_71_N_633_24 , \CIC1Sin/n10834 , 
         \CIC1Sin/d3_23 , \CIC1Sin/d3_22 , \CIC1Sin/d4_71_N_633_23 , 
         \CIC1Sin/d4_71_N_633_22 , \CIC1Sin/n10833 , \CIC1Sin/d3_21 , 
         \CIC1Sin/d3_20 , \CIC1Sin/d4_71_N_633_21 , \CIC1Sin/d4_71_N_633_20 , 
         \CIC1Sin/n10832 , \CIC1Sin/d3_19 , \CIC1Sin/d3_18 , 
         \CIC1Sin/d4_71_N_633_19 , \CIC1Sin/d4_71_N_633_18 , \CIC1Sin/n10831 , 
         \CIC1Sin/d3_17 , \CIC1Sin/d3_16 , \CIC1Sin/d4_71_N_633_17 , 
         \CIC1Sin/d4_71_N_633_16 , \CIC1Sin/n10830 , \CIC1Sin/d3_15 , 
         \CIC1Sin/d3_14 , \CIC1Sin/d4_71_N_633_15 , \CIC1Sin/d4_71_N_633_14 , 
         \CIC1Sin/n10829 , \CIC1Sin/d3_13 , \CIC1Sin/d3_12 , 
         \CIC1Sin/d4_71_N_633_13 , \CIC1Sin/d4_71_N_633_12 , \CIC1Sin/n10828 , 
         \CIC1Sin/d3_11 , \CIC1Sin/d3_10 , \CIC1Sin/d4_71_N_633_11 , 
         \CIC1Sin/d4_71_N_633_10 , \CIC1Sin/n10827 , \CIC1Sin/d3_9 , 
         \CIC1Sin/d3_8 , \CIC1Sin/d4_71_N_633_9 , \CIC1Sin/d4_71_N_633_8 , 
         \CIC1Sin/n10826 , \CIC1Sin/d3_7 , \CIC1Sin/d3_6 , 
         \CIC1Sin/d4_71_N_633_7 , \CIC1Sin/d4_71_N_633_6 , \CIC1Sin/n10825 , 
         \CIC1Sin/d3_5 , \CIC1Sin/d3_4 , \CIC1Sin/d4_71_N_633_5 , 
         \CIC1Sin/d4_71_N_633_4 , \CIC1Sin/n10824 , \CIC1Sin/d3_3 , 
         \CIC1Sin/d3_2 , \CIC1Sin/d4_71_N_633_3 , \CIC1Sin/d4_71_N_633_2 , 
         \CIC1Sin/n10823 , \CIC1Sin/d3_1 , \CIC1Sin/d3_0 , 
         \CIC1Sin/d4_71_N_633_1 , \CIC1Sin/n10821 , \CIC1Sin/d2_35 , 
         \CIC1Sin/d2_34 , \CIC1Sin/d3_71_N_561_35 , \CIC1Sin/d3_71_N_561_34 , 
         \CIC1Sin/n10820 , \CIC1Sin/d2_33 , \CIC1Sin/d2_32 , 
         \CIC1Sin/d3_71_N_561_33 , \CIC1Sin/d3_71_N_561_32 , \CIC1Sin/n10819 , 
         \CIC1Sin/d2_31 , \CIC1Sin/d2_30 , \CIC1Sin/d3_71_N_561_31 , 
         \CIC1Sin/d3_71_N_561_30 , \CIC1Sin/n10818 , \CIC1Sin/d2_29 , 
         \CIC1Sin/d2_28 , \CIC1Sin/d3_71_N_561_29 , \CIC1Sin/d3_71_N_561_28 , 
         \CIC1Sin/n10817 , \CIC1Sin/d2_27 , \CIC1Sin/d2_26 , 
         \CIC1Sin/d3_71_N_561_27 , \CIC1Sin/d3_71_N_561_26 , \CIC1Sin/n10816 , 
         \CIC1Sin/d2_25 , \CIC1Sin/d2_24 , \CIC1Sin/d3_71_N_561_25 , 
         \CIC1Sin/d3_71_N_561_24 , \CIC1Sin/n10815 , \CIC1Sin/d2_23 , 
         \CIC1Sin/d2_22 , \CIC1Sin/d3_71_N_561_23 , \CIC1Sin/d3_71_N_561_22 , 
         \CIC1Sin/n10814 , \CIC1Sin/d2_21 , \CIC1Sin/d2_20 , 
         \CIC1Sin/d3_71_N_561_21 , \CIC1Sin/d3_71_N_561_20 , \CIC1Sin/n10813 , 
         \CIC1Sin/d2_19 , \CIC1Sin/d2_18 , \CIC1Sin/d3_71_N_561_19 , 
         \CIC1Sin/d3_71_N_561_18 , \CIC1Sin/n10812 , \CIC1Sin/d2_17 , 
         \CIC1Sin/d2_16 , \CIC1Sin/d3_71_N_561_17 , \CIC1Sin/d3_71_N_561_16 , 
         \CIC1Sin/n10811 , \CIC1Sin/d2_15 , \CIC1Sin/d2_14 , 
         \CIC1Sin/d3_71_N_561_15 , \CIC1Sin/d3_71_N_561_14 , \CIC1Sin/n10810 , 
         \CIC1Sin/d2_13 , \CIC1Sin/d2_12 , \CIC1Sin/d3_71_N_561_13 , 
         \CIC1Sin/d3_71_N_561_12 , \CIC1Sin/n10809 , \CIC1Sin/d2_11 , 
         \CIC1Sin/d2_10 , \CIC1Sin/d3_71_N_561_11 , \CIC1Sin/d3_71_N_561_10 , 
         \CIC1Sin/n10808 , \CIC1Sin/d2_9 , \CIC1Sin/d2_8 , 
         \CIC1Sin/d3_71_N_561_9 , \CIC1Sin/d3_71_N_561_8 , \CIC1Sin/n10807 , 
         \CIC1Sin/d2_7 , \CIC1Sin/d2_6 , \CIC1Sin/d3_71_N_561_7 , 
         \CIC1Sin/d3_71_N_561_6 , \CIC1Sin/n10806 , \CIC1Sin/d2_5 , 
         \CIC1Sin/d2_4 , \CIC1Sin/d3_71_N_561_5 , \CIC1Sin/d3_71_N_561_4 , 
         \CIC1Sin/n10805 , \CIC1Sin/d2_3 , \CIC1Sin/d2_2 , 
         \CIC1Sin/d3_71_N_561_3 , \CIC1Sin/d3_71_N_561_2 , \CIC1Sin/n10804 , 
         \CIC1Sin/d2_1 , \CIC1Sin/d2_0 , \CIC1Sin/d3_71_N_561_1 , 
         \CIC1Sin/n10802 , \CIC1Sin/d2_71_N_489_35 , \CIC1Sin/d2_71_N_489_34 , 
         \CIC1Sin/n10801 , \CIC1Sin/d2_71_N_489_33 , \CIC1Sin/d2_71_N_489_32 , 
         \CIC1Sin/n10800 , \CIC1Sin/d2_71_N_489_31 , \CIC1Sin/d2_71_N_489_30 , 
         \CIC1Sin/n10799 , \CIC1Sin/d2_71_N_489_29 , \CIC1Sin/d2_71_N_489_28 , 
         \CIC1Sin/n10798 , \CIC1Sin/d2_71_N_489_27 , \CIC1Sin/d2_71_N_489_26 , 
         \CIC1Sin/n10797 , \CIC1Sin/d2_71_N_489_25 , \CIC1Sin/d2_71_N_489_24 , 
         \CIC1Sin/n10796 , \CIC1Sin/d2_71_N_489_23 , \CIC1Sin/d2_71_N_489_22 , 
         \CIC1Sin/n10795 , \CIC1Sin/d2_71_N_489_21 , \CIC1Sin/d2_71_N_489_20 , 
         \CIC1Sin/n10794 , \CIC1Sin/d2_71_N_489_19 , \CIC1Sin/d2_71_N_489_18 , 
         \CIC1Sin/n10793 , \CIC1Sin/d2_71_N_489_17 , \CIC1Sin/d2_71_N_489_16 , 
         \CIC1Sin/n10792 , \CIC1Sin/d2_71_N_489_15 , \CIC1Sin/d2_71_N_489_14 , 
         \CIC1Sin/n10791 , \CIC1Sin/d2_71_N_489_13 , \CIC1Sin/d2_71_N_489_12 , 
         \CIC1Sin/n10790 , \CIC1Sin/d2_71_N_489_11 , \CIC1Sin/d2_71_N_489_10 , 
         \CIC1Sin/n10789 , \CIC1Sin/d2_71_N_489_9 , \CIC1Sin/d2_71_N_489_8 , 
         \CIC1Sin/n10788 , \CIC1Sin/d2_71_N_489_7 , \CIC1Sin/d2_71_N_489_6 , 
         \CIC1Sin/n10787 , \CIC1Sin/d2_71_N_489_5 , \CIC1Sin/d2_71_N_489_4 , 
         \CIC1Sin/n10786 , \CIC1Sin/d2_71_N_489_3 , \CIC1Sin/d2_71_N_489_2 , 
         \CIC1Sin/n10785 , \CIC1Sin/d2_71_N_489_1 , \CIC1Sin/d4_71_N_633_51 , 
         \CIC1Sin/d4_71_N_633_50 , \CIC1Sin/n12003 , \CIC1Sin/d4_71_N_633_49 , 
         \CIC1Sin/d4_71_N_633_48 , \CIC1Sin/n12002 , \CIC1Sin/d4_71_N_633_47 , 
         \CIC1Sin/d4_71_N_633_46 , \CIC1Sin/n12001 , \CIC1Sin/d4_71_N_633_45 , 
         \CIC1Sin/d4_71_N_633_44 , \CIC1Sin/n12000 , \CIC1Sin/d4_71_N_633_43 , 
         \CIC1Sin/d4_71_N_633_42 , \CIC1Sin/n11999 , \CIC1Sin/d4_71_N_633_41 , 
         \CIC1Sin/d4_71_N_633_40 , \CIC1Sin/n11998 , \CIC1Sin/d4_71_N_633_39 , 
         \CIC1Sin/d4_71_N_633_38 , \CIC1Sin/n11997 , \CIC1Sin/n4531 , 
         \CIC1Sin/d4_71_N_633_37 , \CIC1Sin/d4_71_N_633_36 , \CIC1Sin/n11996 , 
         \CIC1Sin/d5_71 , \CIC1Sin/d5_70 , \CIC1Sin/n11991 , \CIC1Sin/n4649 , 
         \CIC1Sin/n4648 , \CIC1Sin/d5_69 , \CIC1Sin/d5_68 , \CIC1Sin/n11990 , 
         \CIC1Sin/n4651 , \CIC1Sin/n4650 , \CIC1Sin/d5_67 , \CIC1Sin/d5_66 , 
         \CIC1Sin/n11989 , \CIC1Sin/n4653 , \CIC1Sin/n4652 , \CIC1Sin/d5_65 , 
         \CIC1Sin/d5_64 , \CIC1Sin/n11988 , \CIC1Sin/n4655 , \CIC1Sin/n4654 , 
         \CIC1Sin/d5_63 , \CIC1Sin/d5_62 , \CIC1Sin/n11987 , \CIC1Sin/n4657 , 
         \CIC1Sin/n4656 , \CIC1Sin/d5_61 , \CIC1Sin/d5_60 , \CIC1Sin/n11986 , 
         \CIC1Sin/n4659 , \CIC1Sin/n4658 , \CIC1Sin/d5_59 , \CIC1Sin/d5_58 , 
         \CIC1Sin/n11985 , \CIC1Sin/n4661 , \CIC1Sin/n4660 , \CIC1Sin/d5_57 , 
         \CIC1Sin/d5_56 , \CIC1Sin/n11984 , \CIC1Sin/n4663 , \CIC1Sin/n4662 , 
         \CIC1Sin/d5_55 , \CIC1Sin/d5_54 , \CIC1Sin/n11983 , \CIC1Sin/n4665 , 
         \CIC1Sin/n4664 , \CIC1Sin/d5_53 , \CIC1Sin/d5_52 , \CIC1Sin/n11982 , 
         \CIC1Sin/n4667 , \CIC1Sin/n4666 , \CIC1Sin/d5_51 , \CIC1Sin/d5_50 , 
         \CIC1Sin/n11981 , \CIC1Sin/n4669 , \CIC1Sin/n4668 , \CIC1Sin/n12134 , 
         \CIC1Sin/n12133 , \CIC1Sin/n12132 , \CIC1Sin/n12131 , 
         \CIC1Sin/n12130 , \CIC1Sin/n12129 , \CIC1Sin/n12128 , 
         \CIC1Sin/n12127 , \CIC1Sin/n12126 , \CIC1Sin/n12125 , 
         \CIC1Sin/n12124 , \CIC1Sin/n12123 , \CIC1Sin/n12122 , \CIC1Sin/d5_49 , 
         \CIC1Sin/d5_48 , \CIC1Sin/n11980 , \CIC1Sin/n4671 , \CIC1Sin/n4670 , 
         \CIC1Sin/n12121 , \CIC1Sin/n12120 , \CIC1Sin/n12119 , \CIC1Sin/d5_47 , 
         \CIC1Sin/d5_46 , \CIC1Sin/n11979 , \CIC1Sin/n4673 , \CIC1Sin/n4672 , 
         \CIC1Sin/n12118 , \CIC1Sin/d5_45 , \CIC1Sin/d5_44 , \CIC1Sin/n11978 , 
         \CIC1Sin/n4675 , \CIC1Sin/n4674 , \CIC1Sin/n12114 , \CIC1Sin/n4193 , 
         \CIC1Sin/n4192 , \CIC1Sin/n12113 , \CIC1Sin/n4195 , \CIC1Sin/n4194 , 
         \CIC1Sin/d5_43 , \CIC1Sin/d5_42 , \CIC1Sin/n11977 , \CIC1Sin/n4677 , 
         \CIC1Sin/n4676 , \CIC1Sin/n12112 , \CIC1Sin/n4197 , \CIC1Sin/n4196 , 
         \CIC1Sin/n12111 , \CIC1Sin/n4199 , \CIC1Sin/n4198 , \CIC1Sin/n12110 , 
         \CIC1Sin/n4201 , \CIC1Sin/n4200 , \CIC1Sin/n12109 , \CIC1Sin/n4203 , 
         \CIC1Sin/n4202 , \CIC1Sin/n12108 , \CIC1Sin/n12107 , \CIC1Sin/n12106 , 
         \CIC1Sin/n12105 , \CIC1Sin/n12104 , \CIC1Sin/n12103 , 
         \CIC1Sin/n12102 , \CIC1Sin/n12101 , \CIC1Sin/n12100 , 
         \CIC1Sin/n12099 , \CIC1Sin/d5_41 , \CIC1Sin/d5_40 , \CIC1Sin/n11976 , 
         \CIC1Sin/n4679 , \CIC1Sin/n4678 , \CIC1Sin/n12098 , 
         \CIC1Sin/d2_71_N_489_71 , \CIC1Sin/d2_71_N_489_70 , \CIC1Sin/n12095 , 
         \CIC1Sin/d7_71_N_1530_65 , \CIC1Sin/d7_71_N_1530_64 , 
         \CIC1Sin/d2_71_N_489_69 , \CIC1Sin/d2_71_N_489_68 , \CIC1Sin/n12094 , 
         \CIC1Sin/d5_39 , \CIC1Sin/d5_38 , \CIC1Sin/n11975 , \CIC1Sin/n4681 , 
         \CIC1Sin/n4680 , \CIC1Sin/d2_71_N_489_67 , \CIC1Sin/d2_71_N_489_66 , 
         \CIC1Sin/n12093 , \CIC1Sin/d5_37 , \CIC1Sin/d5_36 , \CIC1Sin/n4682 , 
         \CIC1Sin/d5_71_N_705_71 , \CIC1Sin/d5_71_N_705_70 , \CIC1Sin/n11972 , 
         \CIC1Sin/d5_71_N_705_69 , \CIC1Sin/d5_71_N_705_68 , \CIC1Sin/n11971 , 
         \CIC1Sin/d5_71_N_705_67 , \CIC1Sin/d5_71_N_705_66 , \CIC1Sin/n11970 , 
         \CIC1Sin/d5_71_N_705_65 , \CIC1Sin/d5_71_N_705_64 , \CIC1Sin/n11969 , 
         \CIC1Sin/d5_71_N_705_63 , \CIC1Sin/d5_71_N_705_62 , \CIC1Sin/n11968 , 
         \CIC1Sin/d5_71_N_705_61 , \CIC1Sin/d5_71_N_705_60 , \CIC1Sin/n11967 , 
         \CIC1Sin/d5_71_N_705_59 , \CIC1Sin/d5_71_N_705_58 , \CIC1Sin/n11966 , 
         \CIC1Sin/d5_71_N_705_57 , \CIC1Sin/d5_71_N_705_56 , \CIC1Sin/n11965 , 
         \CIC1Sin/d5_71_N_705_55 , \CIC1Sin/d5_71_N_705_54 , \CIC1Sin/n11964 , 
         \CIC1Sin/d2_71_N_489_65 , \CIC1Sin/d2_71_N_489_64 , \CIC1Sin/n12092 , 
         \CIC1Sin/d5_71_N_705_53 , \CIC1Sin/d5_71_N_705_52 , \CIC1Sin/n11963 , 
         \CIC1Sin/d5_71_N_705_51 , \CIC1Sin/d5_71_N_705_50 , \CIC1Sin/n11962 , 
         \CIC1Sin/d5_71_N_705_49 , \CIC1Sin/d5_71_N_705_48 , \CIC1Sin/n11961 , 
         \CIC1Sin/d5_71_N_705_47 , \CIC1Sin/d5_71_N_705_46 , \CIC1Sin/n11960 , 
         \CIC1Sin/d5_71_N_705_45 , \CIC1Sin/d5_71_N_705_44 , \CIC1Sin/n11959 , 
         \CIC1Sin/d5_71_N_705_43 , \CIC1Sin/d5_71_N_705_42 , \CIC1Sin/n11958 , 
         \CIC1Sin/d5_71_N_705_41 , \CIC1Sin/d5_71_N_705_40 , \CIC1Sin/n11957 , 
         \CIC1Sin/d5_71_N_705_39 , \CIC1Sin/d5_71_N_705_38 , \CIC1Sin/n11956 , 
         \CIC1Sin/n4683 , \CIC1Sin/d5_71_N_705_37 , \CIC1Sin/d5_71_N_705_36 , 
         \CIC1Sin/n11955 , \CIC1Sin/d2_71_N_489_63 , \CIC1Sin/d2_71_N_489_62 , 
         \CIC1Sin/n12091 , \CIC1Sin/d2_71_N_489_61 , \CIC1Sin/d2_71_N_489_60 , 
         phase_inc_carrGen1_63, phase_accum_63, phase_inc_carrGen1_62, 
         phase_accum_62, \ncoGen/phase_accum_63_N_145_63 , 
         \ncoGen/phase_accum_63_N_145_62 , \ncoGen/n10782 , 
         phase_inc_carrGen1_61, phase_accum_61, phase_inc_carrGen1_60, 
         \ncoGen/phase_accum_63_N_145_61 , \ncoGen/phase_accum_63_N_145_60 , 
         \ncoGen/n10781 , phase_inc_carrGen1_59, phase_accum_59, 
         phase_inc_carrGen1_58, \ncoGen/phase_accum_63_N_145_59 , 
         \ncoGen/phase_accum_63_N_145_58 , \ncoGen/n10780 , 
         phase_inc_carrGen1_57, phase_accum_57, phase_inc_carrGen1_56, 
         \ncoGen/phase_accum_63_N_145_57 , \ncoGen/phase_accum_63_N_145_56 , 
         \ncoGen/n10779 , phase_inc_carrGen1_55, \ncoGen/phase_accum_55 , 
         phase_inc_carrGen1_54, \ncoGen/phase_accum_54 , 
         \ncoGen/phase_accum_63_N_145_55 , \ncoGen/phase_accum_63_N_145_54 , 
         \ncoGen/n10778 , phase_inc_carrGen1_53, \ncoGen/phase_accum_53 , 
         phase_inc_carrGen1_52, \ncoGen/phase_accum_52 , 
         \ncoGen/phase_accum_63_N_145_53 , \ncoGen/phase_accum_63_N_145_52 , 
         \ncoGen/n10777 , phase_inc_carrGen1_51, \ncoGen/phase_accum_51 , 
         phase_inc_carrGen1_50, \ncoGen/phase_accum_50 , 
         \ncoGen/phase_accum_63_N_145_51 , \ncoGen/phase_accum_63_N_145_50 , 
         \ncoGen/n10776 , phase_inc_carrGen1_49, \ncoGen/phase_accum_49 , 
         phase_inc_carrGen1_48, \ncoGen/phase_accum_48 , 
         \ncoGen/phase_accum_63_N_145_49 , \ncoGen/phase_accum_63_N_145_48 , 
         \ncoGen/n10775 , phase_inc_carrGen1_47, \ncoGen/phase_accum_47 , 
         phase_inc_carrGen1_46, \ncoGen/phase_accum_46 , 
         \ncoGen/phase_accum_63_N_145_47 , \ncoGen/phase_accum_63_N_145_46 , 
         \ncoGen/n10774 , phase_inc_carrGen1_45, \ncoGen/phase_accum_45 , 
         phase_inc_carrGen1_44, \ncoGen/phase_accum_44 , 
         \ncoGen/phase_accum_63_N_145_45 , \ncoGen/phase_accum_63_N_145_44 , 
         \ncoGen/n10773 , phase_inc_carrGen1_43, \ncoGen/phase_accum_43 , 
         phase_inc_carrGen1_42, \ncoGen/phase_accum_42 , 
         \ncoGen/phase_accum_63_N_145_43 , \ncoGen/phase_accum_63_N_145_42 , 
         \ncoGen/n10772 , phase_inc_carrGen1_41, \ncoGen/phase_accum_41 , 
         phase_inc_carrGen1_40, \ncoGen/phase_accum_40 , 
         \ncoGen/phase_accum_63_N_145_41 , \ncoGen/phase_accum_63_N_145_40 , 
         \ncoGen/n10771 , phase_inc_carrGen1_39, \ncoGen/phase_accum_39 , 
         phase_inc_carrGen1_38, \ncoGen/phase_accum_38 , 
         \ncoGen/phase_accum_63_N_145_39 , \ncoGen/phase_accum_63_N_145_38 , 
         \ncoGen/n10770 , phase_inc_carrGen1_37, \ncoGen/phase_accum_37 , 
         phase_inc_carrGen1_36, \ncoGen/phase_accum_36 , 
         \ncoGen/phase_accum_63_N_145_37 , \ncoGen/phase_accum_63_N_145_36 , 
         \ncoGen/n10769 , phase_inc_carrGen1_35, \ncoGen/phase_accum_35 , 
         phase_inc_carrGen1_34, \ncoGen/phase_accum_34 , 
         \ncoGen/phase_accum_63_N_145_35 , \ncoGen/phase_accum_63_N_145_34 , 
         \ncoGen/n10768 , phase_inc_carrGen1_33, \ncoGen/phase_accum_33 , 
         phase_inc_carrGen1_32, \ncoGen/phase_accum_32 , 
         \ncoGen/phase_accum_63_N_145_33 , \ncoGen/phase_accum_63_N_145_32 , 
         \ncoGen/n10767 , phase_inc_carrGen1_31, \ncoGen/phase_accum_31 , 
         phase_inc_carrGen1_30, \ncoGen/phase_accum_30 , 
         \ncoGen/phase_accum_63_N_145_31 , \ncoGen/phase_accum_63_N_145_30 , 
         \ncoGen/n10766 , phase_inc_carrGen1_29, \ncoGen/phase_accum_29 , 
         phase_inc_carrGen1_28, \ncoGen/phase_accum_28 , 
         \ncoGen/phase_accum_63_N_145_29 , \ncoGen/phase_accum_63_N_145_28 , 
         \ncoGen/n10765 , phase_inc_carrGen1_27, \ncoGen/phase_accum_27 , 
         phase_inc_carrGen1_26, \ncoGen/phase_accum_26 , 
         \ncoGen/phase_accum_63_N_145_27 , \ncoGen/phase_accum_63_N_145_26 , 
         \ncoGen/n10764 , phase_inc_carrGen1_25, \ncoGen/phase_accum_25 , 
         phase_inc_carrGen1_24, \ncoGen/phase_accum_24 , 
         \ncoGen/phase_accum_63_N_145_25 , \ncoGen/phase_accum_63_N_145_24 , 
         \ncoGen/n10763 , phase_inc_carrGen1_23, \ncoGen/phase_accum_23 , 
         phase_inc_carrGen1_22, \ncoGen/phase_accum_22 , 
         \ncoGen/phase_accum_63_N_145_23 , \ncoGen/phase_accum_63_N_145_22 , 
         \ncoGen/n10762 , phase_inc_carrGen1_21, \ncoGen/phase_accum_21 , 
         phase_inc_carrGen1_20, \ncoGen/phase_accum_20 , 
         \ncoGen/phase_accum_63_N_145_21 , \ncoGen/phase_accum_63_N_145_20 , 
         \ncoGen/n10761 , phase_inc_carrGen1_19, \ncoGen/phase_accum_19 , 
         phase_inc_carrGen1_18, \ncoGen/phase_accum_18 , 
         \ncoGen/phase_accum_63_N_145_19 , \ncoGen/phase_accum_63_N_145_18 , 
         \ncoGen/n10760 , phase_inc_carrGen1_17, \ncoGen/phase_accum_17 , 
         phase_inc_carrGen1_16, \ncoGen/phase_accum_16 , 
         \ncoGen/phase_accum_63_N_145_17 , \ncoGen/phase_accum_63_N_145_16 , 
         \ncoGen/n10759 , phase_inc_carrGen1_15, \ncoGen/phase_accum_15 , 
         phase_inc_carrGen1_14, \ncoGen/phase_accum_14 , 
         \ncoGen/phase_accum_63_N_145_15 , \ncoGen/phase_accum_63_N_145_14 , 
         \ncoGen/n10758 , phase_inc_carrGen1_13, \ncoGen/phase_accum_13 , 
         phase_inc_carrGen1_12, \ncoGen/phase_accum_12 , 
         \ncoGen/phase_accum_63_N_145_13 , \ncoGen/phase_accum_63_N_145_12 , 
         \ncoGen/n10757 , phase_inc_carrGen1_11, \ncoGen/phase_accum_11 , 
         phase_inc_carrGen1_10, \ncoGen/phase_accum_10 , 
         \ncoGen/phase_accum_63_N_145_11 , \ncoGen/phase_accum_63_N_145_10 , 
         \ncoGen/n10756 , phase_inc_carrGen1_9, \ncoGen/phase_accum_9 , 
         phase_inc_carrGen1_8, \ncoGen/phase_accum_8 , 
         \ncoGen/phase_accum_63_N_145_9 , \ncoGen/phase_accum_63_N_145_8 , 
         \ncoGen/n10755 , phase_inc_carrGen1_7, \ncoGen/phase_accum_7 , 
         phase_inc_carrGen1_6, \ncoGen/phase_accum_6 , 
         \ncoGen/phase_accum_63_N_145_7 , \ncoGen/phase_accum_63_N_145_6 , 
         \ncoGen/n10754 , phase_inc_carrGen1_5, \ncoGen/phase_accum_5 , 
         phase_inc_carrGen1_4, \ncoGen/phase_accum_4 , 
         \ncoGen/phase_accum_63_N_145_5 , \ncoGen/phase_accum_63_N_145_4 , 
         \ncoGen/n10753 , phase_inc_carrGen1_3, \ncoGen/phase_accum_3 , 
         phase_inc_carrGen1_2, \ncoGen/phase_accum_2 , 
         \ncoGen/phase_accum_63_N_145_3 , \ncoGen/phase_accum_63_N_145_2 , 
         \ncoGen/n10752 , phase_inc_carrGen1_1, \ncoGen/phase_accum_1 , 
         phase_inc_carrGen1_0, \ncoGen/phase_accum_0 , 
         \ncoGen/phase_accum_63_N_145_1 , \CIC1Cos/d2_63 , \CIC1Cos/n5112 , 
         \CIC1Cos/n5102 , \CIC1Cos/d3_63 , \CIC1Cos/d2_62 , \CIC1Cos/n5113 , 
         \CIC1Cos/d3_62 , \CIC1Cos/d3_71_N_561_63 , \CIC1Cos/d3_71_N_561_62 , 
         \CIC1Cos/n11845 , \CIC1Cos/n11846 , \CIC1Cos/d2_57 , \CIC1Cos/n5118 , 
         \CIC1Cos/d3_57 , \CIC1Cos/d2_56 , \CIC1Cos/n5119 , \CIC1Cos/d3_56 , 
         \CIC1Cos/d3_71_N_561_57 , \CIC1Cos/d3_71_N_561_56 , \CIC1Cos/n11842 , 
         \CIC1Cos/n11843 , \CIC1Cos/d2_51 , \CIC1Cos/n5124 , \CIC1Cos/d3_51 , 
         \CIC1Cos/d2_50 , \CIC1Cos/n5125 , \CIC1Cos/d3_50 , 
         \CIC1Cos/d3_71_N_561_51 , \CIC1Cos/d3_71_N_561_50 , \CIC1Cos/n11839 , 
         \CIC1Cos/n11840 , \CIC1Cos/d2_55 , \CIC1Cos/n5120 , \CIC1Cos/d3_55 , 
         \CIC1Cos/d2_54 , \CIC1Cos/n5121 , \CIC1Cos/d3_54 , 
         \CIC1Cos/d3_71_N_561_55 , \CIC1Cos/d3_71_N_561_54 , \CIC1Cos/n11841 , 
         \CIC1Cos/d2_61 , \CIC1Cos/n5114 , \CIC1Cos/d3_61 , \CIC1Cos/d2_60 , 
         \CIC1Cos/n5115 , \CIC1Cos/d3_60 , \CIC1Cos/d3_71_N_561_61 , 
         \CIC1Cos/d3_71_N_561_60 , \CIC1Cos/n11844 , \CIC1Cos/d2_53 , 
         \CIC1Cos/n5122 , \CIC1Cos/d3_53 , \CIC1Cos/d2_52 , \CIC1Cos/n5123 , 
         \CIC1Cos/d3_52 , \CIC1Cos/d3_71_N_561_53 , \CIC1Cos/d3_71_N_561_52 , 
         \CIC1Cos/d2_39 , \CIC1Cos/d1_39 , \CIC1Cos/d2_38 , \CIC1Cos/d1_38 , 
         \CIC1Cos/n11893 , \CIC1Cos/n4985 , \CIC1Cos/n4984 , \CIC1Cos/n11894 , 
         \CIC1Cos/d2_37 , \CIC1Cos/d1_37 , \CIC1Cos/d2_36 , \CIC1Cos/d1_36 , 
         \CIC1Cos/n4986 , \CIC1Cos/d1_67 , \CIC1Cos/n4956 , \CIC1Cos/n4950 , 
         \CIC1Cos/d2_67 , \CIC1Cos/d1_66 , \CIC1Cos/n4957 , \CIC1Cos/d2_66 , 
         \CIC1Cos/d2_71_N_489_67 , \CIC1Cos/d2_71_N_489_66 , \CIC1Cos/n11888 , 
         \CIC1Cos/n11889 , \CIC1Cos/d1_63 , \CIC1Cos/n4960 , \CIC1Cos/d1_62 , 
         \CIC1Cos/n4961 , \CIC1Cos/d2_71_N_489_63 , \CIC1Cos/d2_71_N_489_62 , 
         \CIC1Cos/n11886 , \CIC1Cos/n11887 , \CIC1Cos/d1_61 , \CIC1Cos/n4962 , 
         \CIC1Cos/d1_60 , \CIC1Cos/n4963 , \CIC1Cos/d2_71_N_489_61 , 
         \CIC1Cos/d2_71_N_489_60 , \CIC1Cos/n11885 , \CIC1Cos/d1_59 , 
         \CIC1Cos/n4964 , \CIC1Cos/d2_59 , \CIC1Cos/d1_58 , \CIC1Cos/n4965 , 
         \CIC1Cos/d2_58 , \CIC1Cos/d2_71_N_489_59 , \CIC1Cos/d2_71_N_489_58 , 
         \CIC1Cos/n11884 , \CIC1Cos/d1_57 , \CIC1Cos/n4966 , \CIC1Cos/d1_56 , 
         \CIC1Cos/n4967 , \CIC1Cos/d2_71_N_489_57 , \CIC1Cos/d2_71_N_489_56 , 
         \CIC1Cos/n11883 , \CIC1Cos/n5116 , \CIC1Cos/d3_59 , \CIC1Cos/n5117 , 
         \CIC1Cos/d3_58 , \CIC1Cos/d3_71_N_561_59 , \CIC1Cos/d3_71_N_561_58 , 
         \CIC1Cos/d1_55 , \CIC1Cos/n4968 , \CIC1Cos/d1_54 , \CIC1Cos/n4969 , 
         \CIC1Cos/d2_71_N_489_55 , \CIC1Cos/d2_71_N_489_54 , \CIC1Cos/n11882 , 
         \CIC1Cos/d1_53 , \CIC1Cos/n4970 , \CIC1Cos/d1_52 , \CIC1Cos/n4971 , 
         \CIC1Cos/d2_71_N_489_53 , \CIC1Cos/d2_71_N_489_52 , \CIC1Cos/n11881 , 
         \CIC1Cos/d1_51 , \CIC1Cos/n4972 , \CIC1Cos/d1_50 , \CIC1Cos/n4973 , 
         \CIC1Cos/d2_71_N_489_51 , \CIC1Cos/d2_71_N_489_50 , \CIC1Cos/n11880 , 
         \CIC1Cos/d2_47 , \CIC1Cos/n5128 , \CIC1Cos/d3_47 , \CIC1Cos/d2_46 , 
         \CIC1Cos/n5129 , \CIC1Cos/d3_46 , \CIC1Cos/d3_71_N_561_47 , 
         \CIC1Cos/d3_71_N_561_46 , \CIC1Cos/n11837 , \CIC1Cos/n11838 , 
         \CIC1Cos/d1_71 , \CIC1Cos/n4952 , \CIC1Cos/d2_71 , \CIC1Cos/d1_70 , 
         \CIC1Cos/n4953 , \CIC1Cos/d2_70 , \CIC1Cos/d2_71_N_489_71 , 
         \CIC1Cos/d2_71_N_489_70 , \CIC1Cos/n11890 , \CIC1Cos/d1_69 , 
         \CIC1Cos/n4954 , \CIC1Cos/d2_69 , \CIC1Cos/d1_68 , \CIC1Cos/n4955 , 
         \CIC1Cos/d2_68 , \CIC1Cos/d2_71_N_489_69 , \CIC1Cos/d2_71_N_489_68 , 
         \CIC1Cos/d1_65 , \CIC1Cos/n4958 , \CIC1Cos/d2_65 , \CIC1Cos/d1_64 , 
         \CIC1Cos/n4959 , \CIC1Cos/d2_64 , \CIC1Cos/d2_71_N_489_65 , 
         \CIC1Cos/d2_71_N_489_64 , \CIC1Cos/n5136 , \CIC1Cos/d3_39 , 
         \CIC1Cos/n5137 , \CIC1Cos/d3_38 , \CIC1Cos/d3_71_N_561_39 , 
         \CIC1Cos/d3_71_N_561_38 , \CIC1Cos/n11833 , \CIC1Cos/n11834 , 
         \CIC1Cos/d4_67 , \CIC1Cos/d3_67 , \CIC1Cos/d4_66 , \CIC1Cos/d3_66 , 
         \CIC1Cos/n11825 , \CIC1Cos/n5261 , \CIC1Cos/n5260 , \CIC1Cos/n11826 , 
         \CIC1Cos/d3_45 , \CIC1Cos/n5282 , \CIC1Cos/n5254 , \CIC1Cos/d4_45 , 
         \CIC1Cos/d3_44 , \CIC1Cos/n5283 , \CIC1Cos/d4_44 , 
         \CIC1Cos/d4_71_N_633_45 , \CIC1Cos/d4_71_N_633_44 , \CIC1Cos/n11795 , 
         \CIC1Cos/n11796 , \CIC1Cos/d4_65 , \CIC1Cos/d3_65 , \CIC1Cos/d4_64 , 
         \CIC1Cos/d3_64 , \CIC1Cos/n11824 , \CIC1Cos/n5263 , \CIC1Cos/n5262 , 
         \CIC1Cos/n5138 , \CIC1Cos/d3_37 , \CIC1Cos/n5139 , \CIC1Cos/d3_36 , 
         \CIC1Cos/d3_71_N_561_37 , \CIC1Cos/d3_71_N_561_36 , \CIC1Cos/n11832 , 
         \CIC1Cos/d_d_tmp_46 , \CIC1Cos/d_tmp_46 , \CIC1Cos/d_d_tmp_45 , 
         \CIC1Cos/d_tmp_45 , \CIC1Cos/n11435 , \CIC1Cos/n6194 , 
         \CIC1Cos/n6193 , \CIC1Cos/n11436 , \CIC1Cos/d4_63 , \CIC1Cos/d4_62 , 
         \CIC1Cos/n11823 , \CIC1Cos/n5265 , \CIC1Cos/n5264 , \CIC1Cos/d2_45 , 
         \CIC1Cos/n5130 , \CIC1Cos/d2_44 , \CIC1Cos/n5131 , 
         \CIC1Cos/d3_71_N_561_45 , \CIC1Cos/d3_71_N_561_44 , \CIC1Cos/n11836 , 
         \CIC1Cos/d4_59 , \CIC1Cos/d4_58 , \CIC1Cos/n11821 , \CIC1Cos/n5269 , 
         \CIC1Cos/n5268 , \CIC1Cos/n11822 , \CIC1Cos/d4_57 , \CIC1Cos/d4_56 , 
         \CIC1Cos/n11820 , \CIC1Cos/n5271 , \CIC1Cos/n5270 , \CIC1Cos/d4_55 , 
         \CIC1Cos/d4_54 , \CIC1Cos/n11819 , \CIC1Cos/n5273 , \CIC1Cos/n5272 , 
         \CIC1Cos/d4_53 , \CIC1Cos/d4_52 , \CIC1Cos/n11818 , \CIC1Cos/n5275 , 
         \CIC1Cos/n5274 , \CIC1Cos/d4_47 , \CIC1Cos/d4_46 , \CIC1Cos/n11815 , 
         \CIC1Cos/n5281 , \CIC1Cos/n5280 , \CIC1Cos/n11816 , \CIC1Cos/d4_41 , 
         \CIC1Cos/d3_41 , \CIC1Cos/d4_40 , \CIC1Cos/d3_40 , \CIC1Cos/n11812 , 
         \CIC1Cos/n5287 , \CIC1Cos/n5286 , \CIC1Cos/n11813 , \CIC1Cos/d3_43 , 
         \CIC1Cos/n5284 , \CIC1Cos/d4_43 , \CIC1Cos/d3_42 , \CIC1Cos/n5285 , 
         \CIC1Cos/d4_42 , \CIC1Cos/d4_71_N_633_43 , \CIC1Cos/d4_71_N_633_42 , 
         \CIC1Cos/n11794 , \CIC1Cos/n11814 , \CIC1Cos/d4_51 , \CIC1Cos/d4_50 , 
         \CIC1Cos/n11817 , \CIC1Cos/n5277 , \CIC1Cos/n5276 , \CIC1Cos/d4_39 , 
         \CIC1Cos/d4_38 , \CIC1Cos/n11811 , \CIC1Cos/n5289 , \CIC1Cos/n5288 , 
         \CIC1Cos/d4_49 , \CIC1Cos/d3_49 , \CIC1Cos/d4_48 , \CIC1Cos/d3_48 , 
         \CIC1Cos/n5279 , \CIC1Cos/n5278 , \CIC1Cos/d4_71_N_633_41 , 
         \CIC1Cos/d4_71_N_633_40 , \CIC1Cos/n11793 , \CIC1Cos/d4_61 , 
         \CIC1Cos/d4_60 , \CIC1Cos/n5267 , \CIC1Cos/n5266 , \CIC1Cos/d4_71 , 
         \CIC1Cos/d3_71 , \CIC1Cos/d4_70 , \CIC1Cos/d3_70 , \CIC1Cos/n11827 , 
         \CIC1Cos/n5257 , \CIC1Cos/n5256 , \CIC1Cos/d4_71_N_633_39 , 
         \CIC1Cos/d4_71_N_633_38 , \CIC1Cos/n11792 , \CIC1Cos/d2_43 , 
         \CIC1Cos/n5132 , \CIC1Cos/d2_42 , \CIC1Cos/n5133 , 
         \CIC1Cos/d3_71_N_561_43 , \CIC1Cos/d3_71_N_561_42 , \CIC1Cos/n11835 , 
         \CIC1Cos/d_d_tmp_44 , \CIC1Cos/d_tmp_44 , \CIC1Cos/d_d_tmp_43 , 
         \CIC1Cos/d_tmp_43 , \CIC1Cos/n11434 , \CIC1Cos/n6196 , 
         \CIC1Cos/n6195 , \CIC1Cos/d_d_tmp_42 , \CIC1Cos/d_tmp_42 , 
         \CIC1Cos/d_d_tmp_41 , \CIC1Cos/d_tmp_41 , \CIC1Cos/n11433 , 
         \CIC1Cos/n6198 , \CIC1Cos/n6197 , \CIC1Cos/d4_69 , \CIC1Cos/d3_69 , 
         \CIC1Cos/d4_68 , \CIC1Cos/d3_68 , \CIC1Cos/n5259 , \CIC1Cos/n5258 , 
         \CIC1Cos/d2_41 , \CIC1Cos/n5134 , \CIC1Cos/d2_40 , \CIC1Cos/n5135 , 
         \CIC1Cos/d3_71_N_561_41 , \CIC1Cos/d3_71_N_561_40 , 
         \CIC1Cos/d_d_tmp_40 , \CIC1Cos/d_tmp_40 , \CIC1Cos/d_d_tmp_39 , 
         \CIC1Cos/d_tmp_39 , \CIC1Cos/n11432 , \CIC1Cos/n6200 , 
         \CIC1Cos/n6199 , \CIC1Cos/d_d_tmp_38 , \CIC1Cos/d_tmp_38 , 
         \CIC1Cos/d_d_tmp_37 , \CIC1Cos/d_tmp_37 , \CIC1Cos/n11431 , 
         \CIC1Cos/n6202 , \CIC1Cos/n6201 , \CIC1Cos/d4_37 , \CIC1Cos/d4_36 , 
         \CIC1Cos/n5290 , \CIC1Cos/n5291 , \CIC1Cos/d4_71_N_633_37 , 
         \CIC1Cos/d4_71_N_633_36 , \CIC1Cos/n11791 , \CIC1Cos/d5_71 , 
         \CIC1Cos/d5_70 , \CIC1Cos/n11786 , \CIC1Cos/n5409 , \CIC1Cos/n5408 , 
         \CIC1Cos/d5_69 , \CIC1Cos/d5_68 , \CIC1Cos/n11785 , \CIC1Cos/n5411 , 
         \CIC1Cos/n5410 , \CIC1Cos/d4_71_N_633_65 , \CIC1Cos/d4_71_N_633_64 , 
         \CIC1Cos/n11805 , \CIC1Cos/n11806 , \CIC1Cos/d4_71_N_633_53 , 
         \CIC1Cos/d4_71_N_633_52 , \CIC1Cos/n11799 , \CIC1Cos/n11800 , 
         \CIC1Cos/d5_67 , \CIC1Cos/d5_66 , \CIC1Cos/n11784 , \CIC1Cos/n5413 , 
         \CIC1Cos/n5412 , \CIC1Cos/d4_71_N_633_51 , \CIC1Cos/d4_71_N_633_50 , 
         \CIC1Cos/n11798 , \CIC1Cos/d4_71_N_633_63 , \CIC1Cos/d4_71_N_633_62 , 
         \CIC1Cos/n11804 , \CIC1Cos/d4_71_N_633_49 , \CIC1Cos/d4_71_N_633_48 , 
         \CIC1Cos/n11797 , \CIC1Cos/d4_71_N_633_61 , \CIC1Cos/d4_71_N_633_60 , 
         \CIC1Cos/n11803 , \CIC1Cos/d4_71_N_633_71 , \CIC1Cos/d4_71_N_633_70 , 
         \CIC1Cos/n11808 , \CIC1Cos/d4_71_N_633_59 , \CIC1Cos/d4_71_N_633_58 , 
         \CIC1Cos/n11802 , \CIC1Cos/d4_71_N_633_47 , \CIC1Cos/d4_71_N_633_46 , 
         \CIC1Cos/d4_71_N_633_57 , \CIC1Cos/d4_71_N_633_56 , \CIC1Cos/n11801 , 
         \CIC1Cos/d4_71_N_633_69 , \CIC1Cos/d4_71_N_633_68 , \CIC1Cos/n11807 , 
         \CIC1Cos/d4_71_N_633_55 , \CIC1Cos/d4_71_N_633_54 , 
         \CIC1Cos/d4_71_N_633_67 , \CIC1Cos/d4_71_N_633_66 , \CIC1Cos/d1_49 , 
         \CIC1Cos/n4974 , \CIC1Cos/d2_49 , \CIC1Cos/d1_48 , \CIC1Cos/n4975 , 
         \CIC1Cos/d2_48 , \CIC1Cos/d2_71_N_489_49 , \CIC1Cos/d2_71_N_489_48 , 
         \CIC1Cos/n11879 , \CIC1Cos/d1_47 , \CIC1Cos/n4976 , \CIC1Cos/d1_46 , 
         \CIC1Cos/n4977 , \CIC1Cos/d2_71_N_489_47 , \CIC1Cos/d2_71_N_489_46 , 
         \CIC1Cos/n11878 , \CIC1Cos/d5_65 , \CIC1Cos/d5_64 , \CIC1Cos/n11783 , 
         \CIC1Cos/n5415 , \CIC1Cos/n5414 , \CIC1Cos/d1_45 , \CIC1Cos/n4978 , 
         \CIC1Cos/d1_44 , \CIC1Cos/n4979 , \CIC1Cos/d2_71_N_489_45 , 
         \CIC1Cos/d2_71_N_489_44 , \CIC1Cos/n11877 , \CIC1Cos/n5126 , 
         \CIC1Cos/n5127 , \CIC1Cos/d3_71_N_561_49 , \CIC1Cos/d3_71_N_561_48 , 
         \CIC1Cos/d1_41 , \CIC1Cos/n4982 , \CIC1Cos/d1_40 , \CIC1Cos/n4983 , 
         \CIC1Cos/d2_71_N_489_41 , \CIC1Cos/d2_71_N_489_40 , \CIC1Cos/n11875 , 
         \CIC1Cos/n11876 , \CIC1Cos/n4987 , \CIC1Cos/d2_71_N_489_37 , 
         \CIC1Cos/d2_71_N_489_36 , \CIC1Cos/n11873 , \CIC1Cos/n11874 , 
         \CIC1Cos/d_d_tmp_36 , \CIC1Cos/d_tmp_36 , \CIC1Cos/n6203 , 
         \CIC1Cos/d_tmp_71 , \CIC1Cos/n6168 , \CIC1Cos/n6166 , 
         \CIC1Cos/d_d_tmp_71 , \CIC1Cos/d_tmp_70 , \CIC1Cos/n6169 , 
         \CIC1Cos/d_d_tmp_70 , \CIC1Cos/d6_71_N_1458_71 , 
         \CIC1Cos/d6_71_N_1458_70 , \CIC1Cos/osc_clk_enable_933 , 
         \CIC1Cos/n11429 , \CIC1Cos/d6_70 , \CIC1Cos/d6_71 , 
         \CIC1Cos/d_tmp_69 , \CIC1Cos/n6170 , \CIC1Cos/d_d_tmp_69 , 
         \CIC1Cos/d_tmp_68 , \CIC1Cos/n6171 , \CIC1Cos/d_d_tmp_68 , 
         \CIC1Cos/d6_71_N_1458_69 , \CIC1Cos/d6_71_N_1458_68 , 
         \CIC1Cos/osc_clk_enable_883 , \CIC1Cos/n11428 , \CIC1Cos/d6_68 , 
         \CIC1Cos/d6_69 , \CIC1Cos/d_tmp_67 , \CIC1Cos/n6172 , 
         \CIC1Cos/d_d_tmp_67 , \CIC1Cos/d_tmp_66 , \CIC1Cos/n6173 , 
         \CIC1Cos/d_d_tmp_66 , \CIC1Cos/d6_71_N_1458_67 , 
         \CIC1Cos/d6_71_N_1458_66 , \CIC1Cos/n11427 , \CIC1Cos/d6_66 , 
         \CIC1Cos/d6_67 , \CIC1Cos/d_tmp_65 , \CIC1Cos/n6174 , 
         \CIC1Cos/d_d_tmp_65 , \CIC1Cos/d_tmp_64 , \CIC1Cos/n6175 , 
         \CIC1Cos/d_d_tmp_64 , \CIC1Cos/d6_71_N_1458_65 , 
         \CIC1Cos/d6_71_N_1458_64 , \CIC1Cos/n11426 , \CIC1Cos/d6_64 , 
         \CIC1Cos/d6_65 , \CIC1Cos/d_tmp_63 , \CIC1Cos/n6176 , 
         \CIC1Cos/d_d_tmp_63 , \CIC1Cos/d_tmp_62 , \CIC1Cos/n6177 , 
         \CIC1Cos/d_d_tmp_62 , \CIC1Cos/d6_71_N_1458_63 , 
         \CIC1Cos/d6_71_N_1458_62 , \CIC1Cos/n11425 , \CIC1Cos/d6_62 , 
         \CIC1Cos/d6_63 , \CIC1Cos/d_tmp_61 , \CIC1Cos/n6178 , 
         \CIC1Cos/d_d_tmp_61 , \CIC1Cos/d_tmp_60 , \CIC1Cos/n6179 , 
         \CIC1Cos/d_d_tmp_60 , \CIC1Cos/d6_71_N_1458_61 , 
         \CIC1Cos/d6_71_N_1458_60 , \CIC1Cos/n11424 , \CIC1Cos/d6_60 , 
         \CIC1Cos/d6_61 , \CIC1Cos/d_tmp_59 , \CIC1Cos/n6180 , 
         \CIC1Cos/d_d_tmp_59 , \CIC1Cos/d_tmp_58 , \CIC1Cos/n6181 , 
         \CIC1Cos/d_d_tmp_58 , \CIC1Cos/d6_71_N_1458_59 , 
         \CIC1Cos/d6_71_N_1458_58 , \CIC1Cos/n11423 , \CIC1Cos/d6_58 , 
         \CIC1Cos/d6_59 , \CIC1Cos/d_tmp_57 , \CIC1Cos/n6182 , 
         \CIC1Cos/d_d_tmp_57 , \CIC1Cos/d_tmp_56 , \CIC1Cos/n6183 , 
         \CIC1Cos/d_d_tmp_56 , \CIC1Cos/d6_71_N_1458_57 , 
         \CIC1Cos/d6_71_N_1458_56 , \CIC1Cos/n11422 , \CIC1Cos/d6_56 , 
         \CIC1Cos/d6_57 , \CIC1Cos/d_tmp_55 , \CIC1Cos/n6184 , 
         \CIC1Cos/d_d_tmp_55 , \CIC1Cos/d_tmp_54 , \CIC1Cos/n6185 , 
         \CIC1Cos/d_d_tmp_54 , \CIC1Cos/d6_71_N_1458_55 , 
         \CIC1Cos/d6_71_N_1458_54 , \CIC1Cos/n11421 , \CIC1Cos/d6_54 , 
         \CIC1Cos/d6_55 , \CIC1Cos/d_tmp_53 , \CIC1Cos/n6186 , 
         \CIC1Cos/d_d_tmp_53 , \CIC1Cos/d_tmp_52 , \CIC1Cos/n6187 , 
         \CIC1Cos/d_d_tmp_52 , \CIC1Cos/d6_71_N_1458_53 , 
         \CIC1Cos/d6_71_N_1458_52 , \CIC1Cos/n11420 , \CIC1Cos/d6_52 , 
         \CIC1Cos/d6_53 , \CIC1Cos/d_tmp_51 , \CIC1Cos/n6188 , 
         \CIC1Cos/d_d_tmp_51 , \CIC1Cos/d_tmp_50 , \CIC1Cos/n6189 , 
         \CIC1Cos/d_d_tmp_50 , \CIC1Cos/d6_71_N_1458_51 , 
         \CIC1Cos/d6_71_N_1458_50 , \CIC1Cos/n11419 , \CIC1Cos/d6_50 , 
         \CIC1Cos/d6_51 , \CIC1Cos/d5_63 , \CIC1Cos/d5_62 , \CIC1Cos/n11782 , 
         \CIC1Cos/n5417 , \CIC1Cos/n5416 , \CIC1Cos/d5_61 , \CIC1Cos/d5_60 , 
         \CIC1Cos/n11781 , \CIC1Cos/n5419 , \CIC1Cos/n5418 , \CIC1Cos/d5_59 , 
         \CIC1Cos/d5_58 , \CIC1Cos/n11780 , \CIC1Cos/n5421 , \CIC1Cos/n5420 , 
         \CIC1Cos/d5_57 , \CIC1Cos/d5_56 , \CIC1Cos/n11779 , \CIC1Cos/n5423 , 
         \CIC1Cos/n5422 , \CIC1Cos/d5_55 , \CIC1Cos/d5_54 , \CIC1Cos/n11778 , 
         \CIC1Cos/n5425 , \CIC1Cos/n5424 , \CIC1Cos/d5_53 , \CIC1Cos/d5_52 , 
         \CIC1Cos/n11777 , \CIC1Cos/n5427 , \CIC1Cos/n5426 , \CIC1Cos/d5_51 , 
         \CIC1Cos/d5_50 , \CIC1Cos/n11776 , \CIC1Cos/n5429 , \CIC1Cos/n5428 , 
         \CIC1Cos/d2_71_N_489_39 , \CIC1Cos/d2_71_N_489_38 , \CIC1Cos/d1_43 , 
         \CIC1Cos/n4980 , \CIC1Cos/d1_42 , \CIC1Cos/n4981 , 
         \CIC1Cos/d2_71_N_489_43 , \CIC1Cos/d2_71_N_489_42 , \CIC1Cos/n11903 , 
         \CIC1Cos/n11904 , \CIC1Cos/n11902 , \CIC1Cos/n11901 , \CIC1Cos/d5_49 , 
         \CIC1Cos/d5_48 , \CIC1Cos/n11775 , \CIC1Cos/n5431 , \CIC1Cos/n5430 , 
         \CIC1Cos/d5_47 , \CIC1Cos/d5_46 , \CIC1Cos/n11774 , \CIC1Cos/n5433 , 
         \CIC1Cos/n5432 , \CIC1Cos/d5_45 , \CIC1Cos/d5_44 , \CIC1Cos/n11773 , 
         \CIC1Cos/n5435 , \CIC1Cos/n5434 , \CIC1Cos/d5_43 , \CIC1Cos/d5_42 , 
         \CIC1Cos/n11772 , \CIC1Cos/n5437 , \CIC1Cos/n5436 , \CIC1Cos/d5_41 , 
         \CIC1Cos/d5_40 , \CIC1Cos/n11771 , \CIC1Cos/n5439 , \CIC1Cos/n5438 , 
         \CIC1Cos/d5_39 , \CIC1Cos/d5_38 , \CIC1Cos/n11770 , \CIC1Cos/n5441 , 
         \CIC1Cos/n5440 , \CIC1Cos/d5_37 , \CIC1Cos/d5_36 , \CIC1Cos/n5442 , 
         \CIC1Cos/n5406 , \CIC1Cos/d5_71_N_705_71 , \CIC1Cos/d5_71_N_705_70 , 
         \CIC1Cos/n11767 , \CIC1Cos/d5_71_N_705_69 , \CIC1Cos/d5_71_N_705_68 , 
         \CIC1Cos/n11766 , \CIC1Cos/d5_71_N_705_67 , \CIC1Cos/d5_71_N_705_66 , 
         \CIC1Cos/n11765 , \CIC1Cos/d5_71_N_705_65 , \CIC1Cos/d5_71_N_705_64 , 
         \CIC1Cos/n11764 , \CIC1Cos/d5_71_N_705_63 , \CIC1Cos/d5_71_N_705_62 , 
         \CIC1Cos/n11763 , \CIC1Cos/d5_71_N_705_61 , \CIC1Cos/d5_71_N_705_60 , 
         \CIC1Cos/n11762 , \CIC1Cos/d5_71_N_705_59 , \CIC1Cos/d5_71_N_705_58 , 
         \CIC1Cos/n11761 , \CIC1Cos/d5_71_N_705_57 , \CIC1Cos/d5_71_N_705_56 , 
         \CIC1Cos/n11760 , \CIC1Cos/d5_71_N_705_55 , \CIC1Cos/d5_71_N_705_54 , 
         \CIC1Cos/n11759 , \CIC1Cos/d5_71_N_705_53 , \CIC1Cos/d5_71_N_705_52 , 
         \CIC1Cos/n11758 , \CIC1Cos/d5_71_N_705_51 , \CIC1Cos/d5_71_N_705_50 , 
         \CIC1Cos/n11757 , \CIC1Cos/d5_71_N_705_49 , \CIC1Cos/d5_71_N_705_48 , 
         \CIC1Cos/n11756 , \CIC1Cos/d5_71_N_705_47 , \CIC1Cos/d5_71_N_705_46 , 
         \CIC1Cos/n11755 , \CIC1Cos/d5_71_N_705_45 , \CIC1Cos/d5_71_N_705_44 , 
         \CIC1Cos/n11754 , \CIC1Cos/d5_71_N_705_43 , \CIC1Cos/d5_71_N_705_42 , 
         \CIC1Cos/n11753 , \CIC1Cos/d5_71_N_705_41 , \CIC1Cos/d5_71_N_705_40 , 
         \CIC1Cos/n11752 , \CIC1Cos/d5_71_N_705_39 , \CIC1Cos/d5_71_N_705_38 , 
         \CIC1Cos/n11751 , \CIC1Cos/n5443 , \CIC1Cos/d5_71_N_705_37 , 
         \CIC1Cos/d5_71_N_705_36 , \CIC1Cos/n11750 , \CIC1Cos/d_tmp_49 , 
         \CIC1Cos/n6190 , \CIC1Cos/d_d_tmp_49 , \CIC1Cos/d_tmp_48 , 
         \CIC1Cos/n6191 , \CIC1Cos/d_d_tmp_48 , \CIC1Cos/d6_71_N_1458_49 , 
         \CIC1Cos/d6_71_N_1458_48 , \CIC1Cos/n11418 , \CIC1Cos/d6_48 , 
         \CIC1Cos/d6_49 , \CIC1Cos/d_tmp_47 , \CIC1Cos/n6192 , 
         \CIC1Cos/d_d_tmp_47 , \CIC1Cos/d6_71_N_1458_47 , 
         \CIC1Cos/d6_71_N_1458_46 , \CIC1Cos/n11417 , \CIC1Cos/d6_46 , 
         \CIC1Cos/d6_47 , \CIC1Cos/d6_71_N_1458_45 , \CIC1Cos/d6_71_N_1458_44 , 
         \CIC1Cos/n11416 , \CIC1Cos/d6_44 , \CIC1Cos/d6_45 , 
         \CIC1Cos/d6_71_N_1458_43 , \CIC1Cos/d6_71_N_1458_42 , 
         \CIC1Cos/n11415 , \CIC1Cos/d6_42 , \CIC1Cos/d6_43 , 
         \CIC1Cos/d6_71_N_1458_41 , \CIC1Cos/d6_71_N_1458_40 , 
         \CIC1Cos/n11414 , \CIC1Cos/d6_40 , \CIC1Cos/d6_41 , 
         \CIC1Cos/d6_71_N_1458_39 , \CIC1Cos/d6_71_N_1458_38 , 
         \CIC1Cos/n11413 , \CIC1Cos/d6_38 , \CIC1Cos/d6_39 , 
         \CIC1Cos/d6_71_N_1458_37 , \CIC1Cos/d6_71_N_1458_36 , 
         \CIC1Cos/n11412 , \CIC1Cos/d6_36 , \CIC1Cos/d6_37 , \CIC1Cos/d_d8_71 , 
         \CIC1Cos/d8_71 , \CIC1Cos/n11332 , \CIC1Cos/n6624 , \CIC1Cos/d_d8_70 , 
         \CIC1Cos/d8_70 , \CIC1Cos/d_d8_69 , \CIC1Cos/d8_69 , \CIC1Cos/n11331 , 
         \CIC1Cos/n6626 , \CIC1Cos/n6625 , \CIC1Cos/d_d8_68 , \CIC1Cos/d8_68 , 
         \CIC1Cos/d_d8_67 , \CIC1Cos/d8_67 , \CIC1Cos/n11330 , \CIC1Cos/n6628 , 
         \CIC1Cos/n6627 , \CIC1Cos/d_d8_66 , \CIC1Cos/d8_66 , 
         \CIC1Cos/d_d8_65 , \CIC1Cos/d8_65 , \CIC1Cos/n11329 , \CIC1Cos/n6630 , 
         \CIC1Cos/n6629 , \CIC1Cos/d_d8_64 , \CIC1Cos/d8_64 , 
         \CIC1Cos/d_d8_63 , \CIC1Cos/d8_63 , \CIC1Cos/n11328 , \CIC1Cos/n6632 , 
         \CIC1Cos/n6631 , \CIC1Cos/d_d8_62 , \CIC1Cos/d8_62 , 
         \CIC1Cos/d_d8_61 , \CIC1Cos/d8_61 , \CIC1Cos/n11327 , \CIC1Cos/n6634 , 
         \CIC1Cos/n6633 , \CIC1Cos/d_d8_60 , \CIC1Cos/d8_60 , 
         \CIC1Cos/d_d8_59 , \CIC1Cos/d8_59 , \CIC1Cos/n11326 , \CIC1Cos/n6636 , 
         \CIC1Cos/n6635 , \CIC1Cos/d_d8_58 , \CIC1Cos/d8_58 , 
         \CIC1Cos/d_d8_57 , \CIC1Cos/d8_57 , \CIC1Cos/n11325 , \CIC1Cos/n6638 , 
         \CIC1Cos/n6637 , \CIC1Cos/d_d8_56 , \CIC1Cos/d8_56 , 
         \CIC1Cos/d_d8_55 , \CIC1Cos/d8_55 , \CIC1Cos/n11324 , \CIC1Cos/n6640 , 
         \CIC1Cos/n6639 , \CIC1Cos/d_d8_54 , \CIC1Cos/d8_54 , 
         \CIC1Cos/d_d8_53 , \CIC1Cos/d8_53 , \CIC1Cos/n11323 , \CIC1Cos/n6642 , 
         \CIC1Cos/n6641 , \CIC1Cos/d_d8_52 , \CIC1Cos/d8_52 , 
         \CIC1Cos/d_d8_51 , \CIC1Cos/d8_51 , \CIC1Cos/n11322 , \CIC1Cos/n6644 , 
         \CIC1Cos/n6643 , \CIC1Cos/d_d8_50 , \CIC1Cos/d8_50 , 
         \CIC1Cos/d_d8_49 , \CIC1Cos/d8_49 , \CIC1Cos/n11321 , \CIC1Cos/n6646 , 
         \CIC1Cos/n6645 , \CIC1Cos/d_d8_48 , \CIC1Cos/d8_48 , 
         \CIC1Cos/d_d8_47 , \CIC1Cos/d8_47 , \CIC1Cos/n11320 , \CIC1Cos/n6648 , 
         \CIC1Cos/n6647 , \CIC1Cos/d_d8_46 , \CIC1Cos/d8_46 , 
         \CIC1Cos/d_d8_45 , \CIC1Cos/d8_45 , \CIC1Cos/n11319 , \CIC1Cos/n6650 , 
         \CIC1Cos/n6649 , \CIC1Cos/d_d8_44 , \CIC1Cos/d8_44 , 
         \CIC1Cos/d_d8_43 , \CIC1Cos/d8_43 , \CIC1Cos/n11318 , \CIC1Cos/n6652 , 
         \CIC1Cos/n6651 , \CIC1Cos/d_d8_42 , \CIC1Cos/d8_42 , 
         \CIC1Cos/d_d8_41 , \CIC1Cos/d8_41 , \CIC1Cos/n11317 , \CIC1Cos/n6654 , 
         \CIC1Cos/n6653 , \CIC1Cos/d_d8_40 , \CIC1Cos/d8_40 , 
         \CIC1Cos/d_d8_39 , \CIC1Cos/d8_39 , \CIC1Cos/n11316 , \CIC1Cos/n6656 , 
         \CIC1Cos/n6655 , \CIC1Cos/d_d8_38 , \CIC1Cos/d8_38 , 
         \CIC1Cos/d_d8_37 , \CIC1Cos/d8_37 , \CIC1Cos/n11315 , \CIC1Cos/n6658 , 
         \CIC1Cos/n6657 , \CIC1Cos/d_d8_36 , \CIC1Cos/d8_36 , \CIC1Cos/n6659 , 
         \CIC1Cos/n6622 , \CIC1Cos/d9_71_N_1674_71 , \CIC1Cos/d9_71_N_1674_70 , 
         \CIC1Cos/osc_clk_enable_1333 , \CIC1Cos/n11313 , \CIC1Cos/d9_70 , 
         \CIC1Cos/d9_71 , \CIC1Cos/d9_71_N_1674_69 , \CIC1Cos/d9_71_N_1674_68 , 
         \CIC1Cos/n11312 , \CIC1Cos/d9_68 , \CIC1Cos/d9_69 , 
         \CIC1Cos/d9_71_N_1674_67 , \CIC1Cos/d9_71_N_1674_66 , 
         \CIC1Cos/n11311 , \CIC1Cos/d9_66 , \CIC1Cos/d9_67 , 
         \CIC1Cos/d9_71_N_1674_65 , \CIC1Cos/d9_71_N_1674_64 , 
         \CIC1Cos/n11310 , \CIC1Cos/d9_64 , \CIC1Cos/d9_65 , 
         \CIC1Cos/d9_71_N_1674_63 , \CIC1Cos/d9_71_N_1674_62 , 
         \CIC1Cos/n11309 , \CIC1Cos/d9_62 , \CIC1Cos/d9_63 , 
         \CIC1Cos/d9_71_N_1674_61 , \CIC1Cos/d9_71_N_1674_60 , 
         \CIC1Cos/n11308 , \CIC1Cos/d9_60 , \CIC1Cos/d9_61 , 
         \CIC1Cos/d9_71_N_1674_59 , \CIC1Cos/d9_71_N_1674_58 , 
         \CIC1Cos/n11307 , \CIC1Cos/d9_58 , \CIC1Cos/d9_59 , 
         \CIC1Cos/d9_71_N_1674_57 , \CIC1Cos/d9_71_N_1674_56 , 
         \CIC1Cos/n11306 , \CIC1Cos/d9_56 , \CIC1Cos/d9_57 , 
         \CIC1Cos/d9_71_N_1674_55 , \CIC1Cos/d9_71_N_1674_54 , 
         \CIC1Cos/n11305 , \CIC1Cos/d9_54 , \CIC1Cos/d9_55 , 
         \CIC1Cos/d9_71_N_1674_53 , \CIC1Cos/d9_71_N_1674_52 , 
         \CIC1Cos/n11304 , \CIC1Cos/d9_52 , \CIC1Cos/d9_53 , 
         \CIC1Cos/d9_71_N_1674_51 , \CIC1Cos/d9_71_N_1674_50 , 
         \CIC1Cos/n11303 , \CIC1Cos/d9_50 , \CIC1Cos/d9_51 , 
         \CIC1Cos/d9_71_N_1674_49 , \CIC1Cos/d9_71_N_1674_48 , 
         \CIC1Cos/n11302 , \CIC1Cos/d9_48 , \CIC1Cos/d9_49 , 
         \CIC1Cos/d9_71_N_1674_47 , \CIC1Cos/d9_71_N_1674_46 , 
         \CIC1Cos/n11301 , \CIC1Cos/d9_46 , \CIC1Cos/d9_47 , 
         \CIC1Cos/d9_71_N_1674_45 , \CIC1Cos/d9_71_N_1674_44 , 
         \CIC1Cos/n11300 , \CIC1Cos/d9_44 , \CIC1Cos/d9_45 , 
         \CIC1Cos/d9_71_N_1674_43 , \CIC1Cos/d9_71_N_1674_42 , 
         \CIC1Cos/osc_clk_enable_1283 , \CIC1Cos/n11299 , \CIC1Cos/d9_42 , 
         \CIC1Cos/d9_43 , \CIC1Cos/d9_71_N_1674_41 , \CIC1Cos/d9_71_N_1674_40 , 
         \CIC1Cos/n11298 , \CIC1Cos/d9_40 , \CIC1Cos/d9_41 , 
         \CIC1Cos/d9_71_N_1674_39 , \CIC1Cos/d9_71_N_1674_38 , 
         \CIC1Cos/n11297 , \CIC1Cos/d9_38 , \CIC1Cos/d9_39 , 
         \CIC1Cos/d9_71_N_1674_37 , \CIC1Cos/d9_71_N_1674_36 , 
         \CIC1Cos/n11296 , \CIC1Cos/d9_36 , \CIC1Cos/d9_37 , \CIC1Cos/d_d9_71 , 
         \CIC1Cos/n11292 , \CIC1Cos/n6776 , \CIC1Cos/d_d9_70 , 
         \CIC1Cos/d_d9_69 , \CIC1Cos/n11291 , \CIC1Cos/n6778 , \CIC1Cos/n6777 , 
         \CIC1Cos/d_d9_68 , \CIC1Cos/d_d9_67 , \CIC1Cos/n11290 , 
         \CIC1Cos/n6780 , \CIC1Cos/n6779 , \CIC1Cos/d_d9_66 , 
         \CIC1Cos/d_d9_65 , \CIC1Cos/n11289 , \CIC1Cos/n6782 , \CIC1Cos/n6781 , 
         \CIC1Cos/d_d9_64 , \CIC1Cos/d_d9_63 , \CIC1Cos/n11288 , 
         \CIC1Cos/n6784 , \CIC1Cos/n6783 , \CIC1Cos/d_d9_62 , 
         \CIC1Cos/d_d9_61 , \CIC1Cos/n11287 , \CIC1Cos/n6786 , \CIC1Cos/n6785 , 
         \CIC1Cos/d_d9_60 , \CIC1Cos/d_d9_59 , \CIC1Cos/n11286 , 
         \CIC1Cos/n6788 , \CIC1Cos/n6787 , \CIC1Cos/d_d9_58 , 
         \CIC1Cos/d_d9_57 , \CIC1Cos/n11285 , \CIC1Cos/n6790 , \CIC1Cos/n6789 , 
         \CIC1Cos/d_d9_56 , \CIC1Cos/d_d9_55 , \CIC1Cos/n11284 , 
         \CIC1Cos/d_d9_54 , \CIC1Cos/d_d9_53 , \CIC1Cos/n11283 , 
         \CIC1Cos/d_d9_52 , \CIC1Cos/d_d9_51 , \CIC1Cos/n11282 , 
         \CIC1Cos/d_d9_50 , \CIC1Cos/d_d9_49 , \CIC1Cos/n11281 , 
         \CIC1Cos/d_d9_48 , \CIC1Cos/d_d9_47 , \CIC1Cos/n11280 , 
         \CIC1Cos/d_d9_46 , \CIC1Cos/d_d9_45 , \CIC1Cos/n11279 , 
         \CIC1Cos/d_d9_44 , \CIC1Cos/d_d9_43 , \CIC1Cos/n11278 , 
         \CIC1Cos/d_d9_42 , \CIC1Cos/d_d9_41 , \CIC1Cos/n11277 , 
         \CIC1Cos/d_d9_40 , \CIC1Cos/d_d9_39 , \CIC1Cos/n11276 , 
         \CIC1Cos/d_d9_38 , \CIC1Cos/d_d9_37 , \CIC1Cos/n11275 , 
         \CIC1Cos/d_d9_36 , \CIC1Cos/n11274 , \CIC1Cos/n6814 , 
         \CIC1Cos/n11273 , \CIC1Cos/n6816 , \CIC1Cos/n6815 , \CIC1Cos/n11272 , 
         \CIC1Cos/n6818 , \CIC1Cos/n6817 , \CIC1Cos/n11271 , \CIC1Cos/n6820 , 
         \CIC1Cos/n6819 , \CIC1Cos/n11270 , \CIC1Cos/n6822 , \CIC1Cos/n6821 , 
         \CIC1Cos/n11269 , \CIC1Cos/n6824 , \CIC1Cos/n6823 , \CIC1Cos/n11268 , 
         \CIC1Cos/n6826 , \CIC1Cos/n6825 , \CIC1Cos/n11267 , \CIC1Cos/n6828 , 
         \CIC1Cos/n6827 , \CIC1Cos/n11266 , \CIC1Cos/n11265 , \CIC1Cos/n11264 , 
         \CIC1Cos/n11263 , \CIC1Cos/n11262 , \CIC1Cos/n11261 , 
         \CIC1Cos/n11260 , \CIC1Cos/n11259 , \CIC1Cos/n11258 , 
         \CIC1Cos/n11257 , \CIC1Cos/n11900 , \CIC1Cos/d_d7_71 , 
         \CIC1Cos/d7_71 , \CIC1Cos/n11666 , \CIC1Cos/n5864 , \CIC1Cos/d_d7_70 , 
         \CIC1Cos/d7_70 , \CIC1Cos/d_d7_69 , \CIC1Cos/d7_69 , \CIC1Cos/n11665 , 
         \CIC1Cos/n5866 , \CIC1Cos/n5865 , \CIC1Cos/d_d7_68 , \CIC1Cos/d7_68 , 
         \CIC1Cos/d_d7_67 , \CIC1Cos/d7_67 , \CIC1Cos/n11664 , \CIC1Cos/n5868 , 
         \CIC1Cos/n5867 , \CIC1Cos/d_d7_66 , \CIC1Cos/d7_66 , 
         \CIC1Cos/d_d7_65 , \CIC1Cos/d7_65 , \CIC1Cos/n11663 , \CIC1Cos/n5870 , 
         \CIC1Cos/n5869 , \CIC1Cos/d_d7_64 , \CIC1Cos/d7_64 , 
         \CIC1Cos/d_d7_63 , \CIC1Cos/d7_63 , \CIC1Cos/n11662 , \CIC1Cos/n5872 , 
         \CIC1Cos/n5871 , \CIC1Cos/d_d7_62 , \CIC1Cos/d7_62 , 
         \CIC1Cos/d_d7_61 , \CIC1Cos/d7_61 , \CIC1Cos/n11661 , \CIC1Cos/n5874 , 
         \CIC1Cos/n5873 , \CIC1Cos/d_d7_60 , \CIC1Cos/d7_60 , 
         \CIC1Cos/d_d7_59 , \CIC1Cos/d7_59 , \CIC1Cos/n11660 , \CIC1Cos/n5876 , 
         \CIC1Cos/n5875 , \CIC1Cos/d_d7_58 , \CIC1Cos/d7_58 , 
         \CIC1Cos/d_d7_57 , \CIC1Cos/d7_57 , \CIC1Cos/n11659 , \CIC1Cos/n5878 , 
         \CIC1Cos/n5877 , \CIC1Cos/d_d7_56 , \CIC1Cos/d7_56 , 
         \CIC1Cos/d_d7_55 , \CIC1Cos/d7_55 , \CIC1Cos/n11658 , \CIC1Cos/n5880 , 
         \CIC1Cos/n5879 , \CIC1Cos/d_d7_54 , \CIC1Cos/d7_54 , 
         \CIC1Cos/d_d7_53 , \CIC1Cos/d7_53 , \CIC1Cos/n11657 , \CIC1Cos/n5882 , 
         \CIC1Cos/n5881 , \CIC1Cos/d_d7_52 , \CIC1Cos/d7_52 , 
         \CIC1Cos/d_d7_51 , \CIC1Cos/d7_51 , \CIC1Cos/n11656 , \CIC1Cos/n5884 , 
         \CIC1Cos/n5883 , \CIC1Cos/d_d7_50 , \CIC1Cos/d7_50 , 
         \CIC1Cos/d_d7_49 , \CIC1Cos/d7_49 , \CIC1Cos/n11655 , \CIC1Cos/n5886 , 
         \CIC1Cos/n5885 , \CIC1Cos/d_d7_48 , \CIC1Cos/d7_48 , 
         \CIC1Cos/d_d7_47 , \CIC1Cos/d7_47 , \CIC1Cos/n11654 , \CIC1Cos/n5888 , 
         \CIC1Cos/n5887 , \CIC1Cos/d_d7_46 , \CIC1Cos/d7_46 , 
         \CIC1Cos/d_d7_45 , \CIC1Cos/d7_45 , \CIC1Cos/n11653 , \CIC1Cos/n5890 , 
         \CIC1Cos/n5889 , \CIC1Cos/d_d7_44 , \CIC1Cos/d7_44 , 
         \CIC1Cos/d_d7_43 , \CIC1Cos/d7_43 , \CIC1Cos/n11652 , \CIC1Cos/n5892 , 
         \CIC1Cos/n5891 , \CIC1Cos/d_d7_42 , \CIC1Cos/d7_42 , 
         \CIC1Cos/d_d7_41 , \CIC1Cos/d7_41 , \CIC1Cos/n11651 , \CIC1Cos/n5894 , 
         \CIC1Cos/n5893 , \CIC1Cos/d_d7_40 , \CIC1Cos/d7_40 , 
         \CIC1Cos/d_d7_39 , \CIC1Cos/d7_39 , \CIC1Cos/n11650 , \CIC1Cos/n5896 , 
         \CIC1Cos/n5895 , \CIC1Cos/d_d9_35 , \CIC1Cos/d9_35 , \CIC1Cos/n11150 , 
         \CIC1Cos/n6774 , \CIC1Cos/d_d9_34 , \CIC1Cos/d9_34 , 
         \CIC1Cos/d_d9_33 , \CIC1Cos/d9_33 , \CIC1Cos/n11149 , 
         \CIC1Cos/d_d9_32 , \CIC1Cos/d9_32 , \CIC1Cos/d_d9_31 , 
         \CIC1Cos/d9_31 , \CIC1Cos/n11148 , \CIC1Cos/d_d9_30 , \CIC1Cos/d9_30 , 
         \CIC1Cos/d_d9_29 , \CIC1Cos/d9_29 , \CIC1Cos/n11147 , 
         \CIC1Cos/d_d9_28 , \CIC1Cos/d9_28 , \CIC1Cos/d_d9_27 , 
         \CIC1Cos/d9_27 , \CIC1Cos/n11146 , \CIC1Cos/d_d9_26 , \CIC1Cos/d9_26 , 
         \CIC1Cos/d_d9_25 , \CIC1Cos/d9_25 , \CIC1Cos/n11145 , 
         \CIC1Cos/d_d9_24 , \CIC1Cos/d9_24 , \CIC1Cos/d_d9_23 , 
         \CIC1Cos/d9_23 , \CIC1Cos/n11144 , \CIC1Cos/d_d9_22 , \CIC1Cos/d9_22 , 
         \CIC1Cos/d_d9_21 , \CIC1Cos/d9_21 , \CIC1Cos/n11143 , 
         \CIC1Cos/d_d9_20 , \CIC1Cos/d9_20 , \CIC1Cos/d_d9_19 , 
         \CIC1Cos/d9_19 , \CIC1Cos/n11142 , \CIC1Cos/d_d9_18 , \CIC1Cos/d9_18 , 
         \CIC1Cos/d_d9_17 , \CIC1Cos/d9_17 , \CIC1Cos/n11141 , 
         \CIC1Cos/d_d9_16 , \CIC1Cos/d9_16 , \CIC1Cos/d_d9_15 , 
         \CIC1Cos/d9_15 , \CIC1Cos/n11140 , \CIC1Cos/d_d9_14 , \CIC1Cos/d9_14 , 
         \CIC1Cos/d_d9_13 , \CIC1Cos/d9_13 , \CIC1Cos/n11139 , 
         \CIC1Cos/d_d9_12 , \CIC1Cos/d9_12 , \CIC1Cos/d_d9_11 , 
         \CIC1Cos/d9_11 , \CIC1Cos/n11138 , \CIC1Cos/d_d9_10 , \CIC1Cos/d9_10 , 
         \CIC1Cos/d_d9_9 , \CIC1Cos/d9_9 , \CIC1Cos/n11137 , \CIC1Cos/d_d9_8 , 
         \CIC1Cos/d9_8 , \CIC1Cos/d_d9_7 , \CIC1Cos/d9_7 , \CIC1Cos/n11136 , 
         \CIC1Cos/d_d9_6 , \CIC1Cos/d9_6 , \CIC1Cos/d_d9_5 , \CIC1Cos/d9_5 , 
         \CIC1Cos/n11135 , \CIC1Cos/d_d9_4 , \CIC1Cos/d9_4 , \CIC1Cos/d_d9_3 , 
         \CIC1Cos/d9_3 , \CIC1Cos/n11134 , \CIC1Cos/d_d9_2 , \CIC1Cos/d9_2 , 
         \CIC1Cos/d_d9_1 , \CIC1Cos/d9_1 , \CIC1Cos/n11133 , \CIC1Cos/d_d9_0 , 
         \CIC1Cos/d9_0 , \CIC1Cos/d_d8_35 , \CIC1Cos/d8_35 , 
         \CIC1Cos/d9_71_N_1674_35 , \CIC1Cos/n11132 , \CIC1Cos/d_d8_34 , 
         \CIC1Cos/d8_34 , \CIC1Cos/d_d8_33 , \CIC1Cos/d8_33 , 
         \CIC1Cos/d9_71_N_1674_34 , \CIC1Cos/d9_71_N_1674_33 , 
         \CIC1Cos/n11131 , \CIC1Cos/d_d8_32 , \CIC1Cos/d8_32 , 
         \CIC1Cos/d_d8_31 , \CIC1Cos/d8_31 , \CIC1Cos/d9_71_N_1674_32 , 
         \CIC1Cos/d9_71_N_1674_31 , \CIC1Cos/n11130 , \CIC1Cos/d_d8_30 , 
         \CIC1Cos/d8_30 , \CIC1Cos/d_d8_29 , \CIC1Cos/d8_29 , 
         \CIC1Cos/d9_71_N_1674_30 , \CIC1Cos/d9_71_N_1674_29 , 
         \CIC1Cos/n11129 , \CIC1Cos/d_d8_28 , \CIC1Cos/d8_28 , 
         \CIC1Cos/d_d8_27 , \CIC1Cos/d8_27 , \CIC1Cos/d9_71_N_1674_28 , 
         \CIC1Cos/d9_71_N_1674_27 , \CIC1Cos/n11128 , \CIC1Cos/d_d8_26 , 
         \CIC1Cos/d8_26 , \CIC1Cos/d_d8_25 , \CIC1Cos/d8_25 , 
         \CIC1Cos/d9_71_N_1674_26 , \CIC1Cos/d9_71_N_1674_25 , 
         \CIC1Cos/n11127 , \CIC1Cos/d_d8_24 , \CIC1Cos/d8_24 , 
         \CIC1Cos/d_d8_23 , \CIC1Cos/d8_23 , \CIC1Cos/d9_71_N_1674_24 , 
         \CIC1Cos/d9_71_N_1674_23 , \CIC1Cos/n11126 , \CIC1Cos/d_d8_22 , 
         \CIC1Cos/d8_22 , \CIC1Cos/d_d8_21 , \CIC1Cos/d8_21 , 
         \CIC1Cos/d9_71_N_1674_22 , \CIC1Cos/d9_71_N_1674_21 , 
         \CIC1Cos/n11125 , \CIC1Cos/d_d8_20 , \CIC1Cos/d8_20 , 
         \CIC1Cos/d_d8_19 , \CIC1Cos/d8_19 , \CIC1Cos/d9_71_N_1674_20 , 
         \CIC1Cos/d9_71_N_1674_19 , \CIC1Cos/n11124 , \CIC1Cos/d_d8_18 , 
         \CIC1Cos/d8_18 , \CIC1Cos/d_d8_17 , \CIC1Cos/d8_17 , 
         \CIC1Cos/d9_71_N_1674_18 , \CIC1Cos/d9_71_N_1674_17 , 
         \CIC1Cos/n11123 , \CIC1Cos/d_d8_16 , \CIC1Cos/d8_16 , 
         \CIC1Cos/d_d8_15 , \CIC1Cos/d8_15 , \CIC1Cos/d9_71_N_1674_16 , 
         \CIC1Cos/d9_71_N_1674_15 , \CIC1Cos/n11122 , \CIC1Cos/d_d8_14 , 
         \CIC1Cos/d8_14 , \CIC1Cos/d_d8_13 , \CIC1Cos/d8_13 , 
         \CIC1Cos/d9_71_N_1674_14 , \CIC1Cos/d9_71_N_1674_13 , 
         \CIC1Cos/n11121 , \CIC1Cos/d_d8_12 , \CIC1Cos/d8_12 , 
         \CIC1Cos/d_d8_11 , \CIC1Cos/d8_11 , \CIC1Cos/d9_71_N_1674_12 , 
         \CIC1Cos/d9_71_N_1674_11 , \CIC1Cos/n11120 , \CIC1Cos/d_d8_10 , 
         \CIC1Cos/d8_10 , \CIC1Cos/d_d8_9 , \CIC1Cos/d8_9 , 
         \CIC1Cos/d9_71_N_1674_10 , \CIC1Cos/d9_71_N_1674_9 , \CIC1Cos/n11119 , 
         \CIC1Cos/d_d8_8 , \CIC1Cos/d8_8 , \CIC1Cos/d_d8_7 , \CIC1Cos/d8_7 , 
         \CIC1Cos/d9_71_N_1674_8 , \CIC1Cos/d9_71_N_1674_7 , \CIC1Cos/n11118 , 
         \CIC1Cos/d_d8_6 , \CIC1Cos/d8_6 , \CIC1Cos/d_d8_5 , \CIC1Cos/d8_5 , 
         \CIC1Cos/d9_71_N_1674_6 , \CIC1Cos/d9_71_N_1674_5 , \CIC1Cos/n11117 , 
         \CIC1Cos/d_d8_4 , \CIC1Cos/d8_4 , \CIC1Cos/d_d8_3 , \CIC1Cos/d8_3 , 
         \CIC1Cos/d9_71_N_1674_4 , \CIC1Cos/d9_71_N_1674_3 , \CIC1Cos/n11116 , 
         \CIC1Cos/d_d8_2 , \CIC1Cos/d8_2 , \CIC1Cos/d_d8_1 , \CIC1Cos/d8_1 , 
         \CIC1Cos/d9_71_N_1674_2 , \CIC1Cos/d9_71_N_1674_1 , \CIC1Cos/n11115 , 
         \CIC1Cos/d_d8_0 , \CIC1Cos/d8_0 , \CIC1Cos/d9_71_N_1674_0 , 
         \CIC1Cos/osc_clk_enable_783 , \CIC1Cos/d_d_tmp_35 , 
         \CIC1Cos/d_tmp_35 , \CIC1Cos/d6_71_N_1458_35 , \CIC1Cos/n11073 , 
         \CIC1Cos/d6_35 , \CIC1Cos/d_d_tmp_34 , \CIC1Cos/d_tmp_34 , 
         \CIC1Cos/d_d_tmp_33 , \CIC1Cos/d_tmp_33 , \CIC1Cos/d6_71_N_1458_34 , 
         \CIC1Cos/d6_71_N_1458_33 , \CIC1Cos/n11072 , \CIC1Cos/d6_33 , 
         \CIC1Cos/d6_34 , \CIC1Cos/d_d_tmp_32 , \CIC1Cos/d_tmp_32 , 
         \CIC1Cos/d_d_tmp_31 , \CIC1Cos/d_tmp_31 , \CIC1Cos/d6_71_N_1458_32 , 
         \CIC1Cos/d6_71_N_1458_31 , \CIC1Cos/n11071 , \CIC1Cos/d6_31 , 
         \CIC1Cos/d6_32 , \CIC1Cos/d_d_tmp_30 , \CIC1Cos/d_tmp_30 , 
         \CIC1Cos/d_d_tmp_29 , \CIC1Cos/d_tmp_29 , \CIC1Cos/d6_71_N_1458_30 , 
         \CIC1Cos/d6_71_N_1458_29 , \CIC1Cos/n11070 , \CIC1Cos/d6_29 , 
         \CIC1Cos/d6_30 , \CIC1Cos/d_d_tmp_28 , \CIC1Cos/d_tmp_28 , 
         \CIC1Cos/d_d_tmp_27 , \CIC1Cos/d_tmp_27 , \CIC1Cos/d6_71_N_1458_28 , 
         \CIC1Cos/d6_71_N_1458_27 , \CIC1Cos/n11069 , \CIC1Cos/d6_27 , 
         \CIC1Cos/d6_28 , \CIC1Cos/d_d_tmp_26 , \CIC1Cos/d_tmp_26 , 
         \CIC1Cos/d_d_tmp_25 , \CIC1Cos/d_tmp_25 , \CIC1Cos/d6_71_N_1458_26 , 
         \CIC1Cos/d6_71_N_1458_25 , \CIC1Cos/n11068 , \CIC1Cos/d6_25 , 
         \CIC1Cos/d6_26 , \CIC1Cos/d_d_tmp_24 , \CIC1Cos/d_tmp_24 , 
         \CIC1Cos/d_d_tmp_23 , \CIC1Cos/d_tmp_23 , \CIC1Cos/d6_71_N_1458_24 , 
         \CIC1Cos/d6_71_N_1458_23 , \CIC1Cos/n11067 , \CIC1Cos/d6_23 , 
         \CIC1Cos/d6_24 , \CIC1Cos/d_d_tmp_22 , \CIC1Cos/d_tmp_22 , 
         \CIC1Cos/d_d_tmp_21 , \CIC1Cos/d_tmp_21 , \CIC1Cos/d6_71_N_1458_22 , 
         \CIC1Cos/d6_71_N_1458_21 , \CIC1Cos/n11066 , \CIC1Cos/d6_21 , 
         \CIC1Cos/d6_22 , \CIC1Cos/d_d_tmp_20 , \CIC1Cos/d_tmp_20 , 
         \CIC1Cos/d_d_tmp_19 , \CIC1Cos/d_tmp_19 , \CIC1Cos/d6_71_N_1458_19 , 
         \CIC1Cos/osc_clk_enable_833 , \CIC1Cos/n11065 , \CIC1Cos/d6_19 , 
         \CIC1Cos/d6_71_N_1458_20 , \CIC1Cos/d_d_tmp_18 , \CIC1Cos/d_tmp_18 , 
         \CIC1Cos/d_d_tmp_17 , \CIC1Cos/d_tmp_17 , \CIC1Cos/d6_71_N_1458_18 , 
         \CIC1Cos/d6_71_N_1458_17 , \CIC1Cos/n11064 , \CIC1Cos/d6_17 , 
         \CIC1Cos/d6_18 , \CIC1Cos/d_d_tmp_16 , \CIC1Cos/d_tmp_16 , 
         \CIC1Cos/d_d_tmp_15 , \CIC1Cos/d_tmp_15 , \CIC1Cos/d6_71_N_1458_16 , 
         \CIC1Cos/d6_71_N_1458_15 , \CIC1Cos/n11063 , \CIC1Cos/d6_15 , 
         \CIC1Cos/d6_16 , \CIC1Cos/d_d_tmp_14 , \CIC1Cos/d_tmp_14 , 
         \CIC1Cos/d_d_tmp_13 , \CIC1Cos/d_tmp_13 , \CIC1Cos/d6_71_N_1458_14 , 
         \CIC1Cos/d6_71_N_1458_13 , \CIC1Cos/n11062 , \CIC1Cos/d6_13 , 
         \CIC1Cos/d6_14 , \CIC1Cos/d_d_tmp_12 , \CIC1Cos/d_tmp_12 , 
         \CIC1Cos/d_d_tmp_11 , \CIC1Cos/d_tmp_11 , \CIC1Cos/d6_71_N_1458_12 , 
         \CIC1Cos/d6_71_N_1458_11 , \CIC1Cos/n11061 , \CIC1Cos/d6_11 , 
         \CIC1Cos/d6_12 , \CIC1Cos/d_d_tmp_10 , \CIC1Cos/d_tmp_10 , 
         \CIC1Cos/d_d_tmp_9 , \CIC1Cos/d_tmp_9 , \CIC1Cos/d6_71_N_1458_10 , 
         \CIC1Cos/d6_71_N_1458_9 , \CIC1Cos/n11060 , \CIC1Cos/d6_9 , 
         \CIC1Cos/d6_10 , \CIC1Cos/d_d_tmp_8 , \CIC1Cos/d_tmp_8 , 
         \CIC1Cos/d_d_tmp_7 , \CIC1Cos/d_tmp_7 , \CIC1Cos/d6_71_N_1458_8 , 
         \CIC1Cos/d6_71_N_1458_7 , \CIC1Cos/n11059 , \CIC1Cos/d6_7 , 
         \CIC1Cos/d6_8 , \CIC1Cos/d_d_tmp_6 , \CIC1Cos/d_tmp_6 , 
         \CIC1Cos/d_d_tmp_5 , \CIC1Cos/d_tmp_5 , \CIC1Cos/d6_71_N_1458_6 , 
         \CIC1Cos/d6_71_N_1458_5 , \CIC1Cos/n11058 , \CIC1Cos/d6_5 , 
         \CIC1Cos/d6_6 , \CIC1Cos/d_d_tmp_4 , \CIC1Cos/d_tmp_4 , 
         \CIC1Cos/d_d_tmp_3 , \CIC1Cos/d_tmp_3 , \CIC1Cos/d6_71_N_1458_4 , 
         \CIC1Cos/d6_71_N_1458_3 , \CIC1Cos/n11057 , \CIC1Cos/d6_3 , 
         \CIC1Cos/d6_4 , \CIC1Cos/d_d_tmp_2 , \CIC1Cos/d_tmp_2 , 
         \CIC1Cos/d_d_tmp_1 , \CIC1Cos/d_tmp_1 , \CIC1Cos/d6_71_N_1458_2 , 
         \CIC1Cos/d6_71_N_1458_1 , \CIC1Cos/n11056 , \CIC1Cos/d6_1 , 
         \CIC1Cos/d6_2 , \CIC1Cos/d_d_tmp_0 , \CIC1Cos/d_tmp_0 , 
         \CIC1Cos/d6_71_N_1458_0 , \CIC1Cos/d6_0 , \CIC1Cos/d_d6_35 , 
         \CIC1Cos/d7_71_N_1530_35 , \CIC1Cos/osc_clk_enable_1033 , 
         \CIC1Cos/n11055 , \CIC1Cos/d7_35 , \CIC1Cos/n6014 , \CIC1Cos/d_d6_34 , 
         \CIC1Cos/d_d6_33 , \CIC1Cos/d7_71_N_1530_34 , 
         \CIC1Cos/d7_71_N_1530_33 , \CIC1Cos/n11054 , \CIC1Cos/d7_33 , 
         \CIC1Cos/d7_34 , \CIC1Cos/d_d6_32 , \CIC1Cos/d_d6_31 , 
         \CIC1Cos/d7_71_N_1530_32 , \CIC1Cos/d7_71_N_1530_31 , 
         \CIC1Cos/n11053 , \CIC1Cos/d7_31 , \CIC1Cos/d7_32 , \CIC1Cos/d_d6_30 , 
         \CIC1Cos/d_d6_29 , \CIC1Cos/d7_71_N_1530_30 , 
         \CIC1Cos/d7_71_N_1530_29 , \CIC1Cos/n11052 , \CIC1Cos/d7_29 , 
         \CIC1Cos/d7_30 , \CIC1Cos/d_d6_28 , \CIC1Cos/d_d6_27 , 
         \CIC1Cos/d7_71_N_1530_27 , \CIC1Cos/osc_clk_enable_983 , 
         \CIC1Cos/n11051 , \CIC1Cos/d7_27 , \CIC1Cos/d7_71_N_1530_28 , 
         \CIC1Cos/d_d6_26 , \CIC1Cos/d_d6_25 , \CIC1Cos/d7_71_N_1530_26 , 
         \CIC1Cos/d7_71_N_1530_25 , \CIC1Cos/n11050 , \CIC1Cos/d7_25 , 
         \CIC1Cos/d7_26 , \CIC1Cos/d_d6_24 , \CIC1Cos/d_d6_23 , 
         \CIC1Cos/d7_71_N_1530_24 , \CIC1Cos/d7_71_N_1530_23 , 
         \CIC1Cos/n11049 , \CIC1Cos/d7_23 , \CIC1Cos/d7_24 , \CIC1Cos/d_d6_22 , 
         \CIC1Cos/d_d6_21 , \CIC1Cos/d7_71_N_1530_22 , 
         \CIC1Cos/d7_71_N_1530_21 , \CIC1Cos/n11048 , \CIC1Cos/d7_21 , 
         \CIC1Cos/d7_22 , \CIC1Cos/d_d6_20 , \CIC1Cos/d6_20 , 
         \CIC1Cos/d_d6_19 , \CIC1Cos/d7_71_N_1530_20 , 
         \CIC1Cos/d7_71_N_1530_19 , \CIC1Cos/n11047 , \CIC1Cos/d7_19 , 
         \CIC1Cos/d7_20 , \CIC1Cos/d_d6_18 , \CIC1Cos/d_d6_17 , 
         \CIC1Cos/d7_71_N_1530_18 , \CIC1Cos/d7_71_N_1530_17 , 
         \CIC1Cos/n11046 , \CIC1Cos/d7_17 , \CIC1Cos/d7_18 , \CIC1Cos/d_d6_16 , 
         \CIC1Cos/d_d6_15 , \CIC1Cos/d7_71_N_1530_16 , 
         \CIC1Cos/d7_71_N_1530_15 , \CIC1Cos/n11045 , \CIC1Cos/d7_15 , 
         \CIC1Cos/d7_16 , \CIC1Cos/d_d6_14 , \CIC1Cos/d_d6_13 , 
         \CIC1Cos/d7_71_N_1530_14 , \CIC1Cos/d7_71_N_1530_13 , 
         \CIC1Cos/n11044 , \CIC1Cos/d7_13 , \CIC1Cos/d7_14 , \CIC1Cos/d_d6_12 , 
         \CIC1Cos/d_d6_11 , \CIC1Cos/d7_71_N_1530_12 , 
         \CIC1Cos/d7_71_N_1530_11 , \CIC1Cos/n11043 , \CIC1Cos/d7_11 , 
         \CIC1Cos/d7_12 , \CIC1Cos/d_d6_10 , \CIC1Cos/d_d6_9 , 
         \CIC1Cos/d7_71_N_1530_10 , \CIC1Cos/d7_71_N_1530_9 , \CIC1Cos/n11042 , 
         \CIC1Cos/d7_9 , \CIC1Cos/d7_10 , \CIC1Cos/d_d6_8 , \CIC1Cos/d_d6_7 , 
         \CIC1Cos/d7_71_N_1530_8 , \CIC1Cos/d7_71_N_1530_7 , \CIC1Cos/n11041 , 
         \CIC1Cos/d7_7 , \CIC1Cos/d7_8 , \CIC1Cos/d_d6_6 , \CIC1Cos/d_d6_5 , 
         \CIC1Cos/d7_71_N_1530_6 , \CIC1Cos/d7_71_N_1530_5 , \CIC1Cos/n11040 , 
         \CIC1Cos/d7_5 , \CIC1Cos/d7_6 , \CIC1Cos/d_d6_4 , \CIC1Cos/d_d6_3 , 
         \CIC1Cos/d7_71_N_1530_4 , \CIC1Cos/d7_71_N_1530_3 , \CIC1Cos/n11039 , 
         \CIC1Cos/d7_3 , \CIC1Cos/d7_4 , \CIC1Cos/d_d6_2 , \CIC1Cos/d_d6_1 , 
         \CIC1Cos/d7_71_N_1530_2 , \CIC1Cos/d7_71_N_1530_1 , \CIC1Cos/n11038 , 
         \CIC1Cos/d7_1 , \CIC1Cos/d7_2 , \CIC1Cos/d_d6_0 , 
         \CIC1Cos/d7_71_N_1530_0 , \CIC1Cos/d7_0 , \CIC1Cos/d_d7_35 , 
         \CIC1Cos/d8_71_N_1602_35 , \CIC1Cos/osc_clk_enable_1133 , 
         \CIC1Cos/n11037 , \CIC1Cos/n5862 , \CIC1Cos/d_d7_34 , 
         \CIC1Cos/d_d7_33 , \CIC1Cos/d8_71_N_1602_34 , 
         \CIC1Cos/d8_71_N_1602_33 , \CIC1Cos/n11036 , \CIC1Cos/d_d7_32 , 
         \CIC1Cos/d_d7_31 , \CIC1Cos/d8_71_N_1602_32 , 
         \CIC1Cos/d8_71_N_1602_31 , \CIC1Cos/n11035 , \CIC1Cos/d_d7_30 , 
         \CIC1Cos/d_d7_29 , \CIC1Cos/d8_71_N_1602_30 , 
         \CIC1Cos/d8_71_N_1602_29 , \CIC1Cos/n11034 , \CIC1Cos/d_d7_28 , 
         \CIC1Cos/d7_28 , \CIC1Cos/d_d7_27 , \CIC1Cos/d8_71_N_1602_28 , 
         \CIC1Cos/d8_71_N_1602_27 , \CIC1Cos/n11033 , \CIC1Cos/d_d7_26 , 
         \CIC1Cos/d_d7_25 , \CIC1Cos/d8_71_N_1602_26 , 
         \CIC1Cos/d8_71_N_1602_25 , \CIC1Cos/n11032 , \CIC1Cos/d_d7_24 , 
         \CIC1Cos/d_d7_23 , \CIC1Cos/d8_71_N_1602_24 , 
         \CIC1Cos/d8_71_N_1602_23 , \CIC1Cos/n11031 , \CIC1Cos/d_d7_22 , 
         \CIC1Cos/d_d7_21 , \CIC1Cos/d8_71_N_1602_22 , 
         \CIC1Cos/d8_71_N_1602_21 , \CIC1Cos/n11030 , \CIC1Cos/d_d7_20 , 
         \CIC1Cos/d_d7_19 , \CIC1Cos/d8_71_N_1602_20 , 
         \CIC1Cos/d8_71_N_1602_19 , \CIC1Cos/n11029 , \CIC1Cos/d_d7_18 , 
         \CIC1Cos/d_d7_17 , \CIC1Cos/d8_71_N_1602_18 , 
         \CIC1Cos/d8_71_N_1602_17 , \CIC1Cos/n11028 , \CIC1Cos/d_d7_16 , 
         \CIC1Cos/d_d7_15 , \CIC1Cos/d8_71_N_1602_16 , 
         \CIC1Cos/d8_71_N_1602_15 , \CIC1Cos/n11027 , \CIC1Cos/d_d7_14 , 
         \CIC1Cos/d_d7_13 , \CIC1Cos/d8_71_N_1602_14 , 
         \CIC1Cos/d8_71_N_1602_13 , \CIC1Cos/n11026 , \CIC1Cos/d_d7_12 , 
         \CIC1Cos/d_d7_11 , \CIC1Cos/d8_71_N_1602_12 , 
         \CIC1Cos/d8_71_N_1602_11 , \CIC1Cos/n11025 , \CIC1Cos/d_d7_10 , 
         \CIC1Cos/d_d7_9 , \CIC1Cos/d8_71_N_1602_10 , \CIC1Cos/d8_71_N_1602_9 , 
         \CIC1Cos/n11024 , \CIC1Cos/d_d7_8 , \CIC1Cos/d_d7_7 , 
         \CIC1Cos/d8_71_N_1602_8 , \CIC1Cos/d8_71_N_1602_7 , \CIC1Cos/n11023 , 
         \CIC1Cos/d_d7_6 , \CIC1Cos/d_d7_5 , \CIC1Cos/d8_71_N_1602_6 , 
         \CIC1Cos/d8_71_N_1602_5 , \CIC1Cos/n11022 , \CIC1Cos/d_d7_4 , 
         \CIC1Cos/d_d7_3 , \CIC1Cos/d8_71_N_1602_4 , \CIC1Cos/d8_71_N_1602_3 , 
         \CIC1Cos/n11021 , \CIC1Cos/d_d7_2 , \CIC1Cos/d_d7_1 , 
         \CIC1Cos/d8_71_N_1602_2 , \CIC1Cos/d8_71_N_1602_1 , \CIC1Cos/n11020 , 
         \CIC1Cos/d_d7_0 , \CIC1Cos/d8_71_N_1602_0 , \CIC1Cos/count_15 , 
         \CIC1Cos/n376 , \CIC1Cos/n8412 , \CIC1Cos/n10988 , \CIC1Cos/count_14 , 
         \CIC1Cos/count_13 , \CIC1Cos/n377 , \CIC1Cos/n378 , \CIC1Cos/n10987 , 
         \CIC1Cos/count_12 , \CIC1Cos/count_11 , \CIC1Cos/n379 , 
         \CIC1Cos/n10986 , \CIC1Cos/n380 , \CIC1Cos/count_10 , 
         \CIC1Cos/count_9 , \CIC1Cos/n381 , \CIC1Cos/n382 , \CIC1Cos/n10985 , 
         \CIC1Cos/count_8 , \CIC1Cos/count_7 , \CIC1Cos/n383 , \CIC1Cos/n384 , 
         \CIC1Cos/n10984 , \CIC1Cos/count_6 , \CIC1Cos/count_5 , 
         \CIC1Cos/n385 , \CIC1Cos/n386 , \CIC1Cos/n10983 , \CIC1Cos/count_4 , 
         \CIC1Cos/count_3 , \CIC1Cos/n387 , \CIC1Cos/n388 , \CIC1Cos/n10982 , 
         \CIC1Cos/count_2 , \CIC1Cos/count_1 , \CIC1Cos/n389 , \CIC1Cos/n390 , 
         \CIC1Cos/n10981 , \CIC1Cos/count_0 , \CIC1Cos/n391 , \CIC1Cos/n10962 , 
         \CIC1Cos/d5_35 , \CIC1Cos/d4_35 , \CIC1Cos/d5_34 , \CIC1Cos/d4_34 , 
         \CIC1Cos/d5_71_N_705_35 , \CIC1Cos/d5_71_N_705_34 , \CIC1Cos/n10961 , 
         \CIC1Cos/d5_33 , \CIC1Cos/d4_33 , \CIC1Cos/d5_32 , \CIC1Cos/d4_32 , 
         \CIC1Cos/d5_71_N_705_33 , \CIC1Cos/d5_71_N_705_32 , \CIC1Cos/n10960 , 
         \CIC1Cos/d5_31 , \CIC1Cos/d4_31 , \CIC1Cos/d5_30 , \CIC1Cos/d4_30 , 
         \CIC1Cos/d5_71_N_705_31 , \CIC1Cos/d5_71_N_705_30 , \CIC1Cos/n10959 , 
         \CIC1Cos/d5_29 , \CIC1Cos/d4_29 , \CIC1Cos/d5_28 , \CIC1Cos/d4_28 , 
         \CIC1Cos/d5_71_N_705_29 , \CIC1Cos/d5_71_N_705_28 , \CIC1Cos/n10958 , 
         \CIC1Cos/d5_27 , \CIC1Cos/d4_27 , \CIC1Cos/d5_26 , \CIC1Cos/d4_26 , 
         \CIC1Cos/d5_71_N_705_27 , \CIC1Cos/d5_71_N_705_26 , \CIC1Cos/n10957 , 
         \CIC1Cos/d5_25 , \CIC1Cos/d4_25 , \CIC1Cos/d5_24 , \CIC1Cos/d4_24 , 
         \CIC1Cos/d5_71_N_705_25 , \CIC1Cos/d5_71_N_705_24 , \CIC1Cos/n10956 , 
         \CIC1Cos/d5_23 , \CIC1Cos/d4_23 , \CIC1Cos/d5_22 , \CIC1Cos/d4_22 , 
         \CIC1Cos/d5_71_N_705_23 , \CIC1Cos/d5_71_N_705_22 , \CIC1Cos/n10955 , 
         \CIC1Cos/d5_21 , \CIC1Cos/d4_21 , \CIC1Cos/d5_20 , \CIC1Cos/d4_20 , 
         \CIC1Cos/d5_71_N_705_21 , \CIC1Cos/d5_71_N_705_20 , \CIC1Cos/n10954 , 
         \CIC1Cos/d5_19 , \CIC1Cos/d4_19 , \CIC1Cos/d5_18 , \CIC1Cos/d4_18 , 
         \CIC1Cos/d5_71_N_705_19 , \CIC1Cos/d5_71_N_705_18 , \CIC1Cos/n10953 , 
         \CIC1Cos/d5_17 , \CIC1Cos/d4_17 , \CIC1Cos/d5_16 , \CIC1Cos/d4_16 , 
         \CIC1Cos/d5_71_N_705_17 , \CIC1Cos/d5_71_N_705_16 , \CIC1Cos/n10952 , 
         \CIC1Cos/d5_15 , \CIC1Cos/d4_15 , \CIC1Cos/d5_14 , \CIC1Cos/d4_14 , 
         \CIC1Cos/d5_71_N_705_15 , \CIC1Cos/d5_71_N_705_14 , \CIC1Cos/n10951 , 
         \CIC1Cos/d5_13 , \CIC1Cos/d4_13 , \CIC1Cos/d5_12 , \CIC1Cos/d4_12 , 
         \CIC1Cos/d5_71_N_705_13 , \CIC1Cos/d5_71_N_705_12 , \CIC1Cos/n10950 , 
         \CIC1Cos/d5_11 , \CIC1Cos/d4_11 , \CIC1Cos/d5_10 , \CIC1Cos/d4_10 , 
         \CIC1Cos/d5_71_N_705_11 , \CIC1Cos/d5_71_N_705_10 , \CIC1Cos/n10949 , 
         \CIC1Cos/d5_9 , \CIC1Cos/d4_9 , \CIC1Cos/d5_8 , \CIC1Cos/d4_8 , 
         \CIC1Cos/d5_71_N_705_9 , \CIC1Cos/d5_71_N_705_8 , \CIC1Cos/n10948 , 
         \CIC1Cos/d5_7 , \CIC1Cos/d4_7 , \CIC1Cos/d5_6 , \CIC1Cos/d4_6 , 
         \CIC1Cos/d5_71_N_705_7 , \CIC1Cos/d5_71_N_705_6 , \CIC1Cos/n10947 , 
         \CIC1Cos/d5_5 , \CIC1Cos/d4_5 , \CIC1Cos/d5_4 , \CIC1Cos/d4_4 , 
         \CIC1Cos/d5_71_N_705_5 , \CIC1Cos/d5_71_N_705_4 , \CIC1Cos/n10946 , 
         \CIC1Cos/d5_3 , \CIC1Cos/d4_3 , \CIC1Cos/d5_2 , \CIC1Cos/d4_2 , 
         \CIC1Cos/d5_71_N_705_3 , \CIC1Cos/d5_71_N_705_2 , \CIC1Cos/n10945 , 
         \CIC1Cos/d5_1 , \CIC1Cos/d4_1 , \CIC1Cos/d5_0 , \CIC1Cos/d4_0 , 
         \CIC1Cos/d5_71_N_705_1 , \CIC1Cos/n10943 , \CIC1Cos/d3_35 , 
         \CIC1Cos/d3_34 , \CIC1Cos/d4_71_N_633_35 , \CIC1Cos/d4_71_N_633_34 , 
         \CIC1Cos/n10942 , \CIC1Cos/d3_33 , \CIC1Cos/d3_32 , 
         \CIC1Cos/d4_71_N_633_33 , \CIC1Cos/d4_71_N_633_32 , \CIC1Cos/n10941 , 
         \CIC1Cos/d3_31 , \CIC1Cos/d3_30 , \CIC1Cos/d4_71_N_633_31 , 
         \CIC1Cos/d4_71_N_633_30 , \CIC1Cos/n10940 , \CIC1Cos/d3_29 , 
         \CIC1Cos/d3_28 , \CIC1Cos/d4_71_N_633_29 , \CIC1Cos/d4_71_N_633_28 , 
         \CIC1Cos/n10939 , \CIC1Cos/d3_27 , \CIC1Cos/d3_26 , 
         \CIC1Cos/d4_71_N_633_27 , \CIC1Cos/d4_71_N_633_26 , \CIC1Cos/n10938 , 
         \CIC1Cos/d3_25 , \CIC1Cos/d3_24 , \CIC1Cos/d4_71_N_633_25 , 
         \CIC1Cos/d4_71_N_633_24 , \CIC1Cos/n10937 , \CIC1Cos/d3_23 , 
         \CIC1Cos/d3_22 , \CIC1Cos/d4_71_N_633_23 , \CIC1Cos/d4_71_N_633_22 , 
         \CIC1Cos/n10936 , \CIC1Cos/d3_21 , \CIC1Cos/d3_20 , 
         \CIC1Cos/d4_71_N_633_21 , \CIC1Cos/d4_71_N_633_20 , \CIC1Cos/n10935 , 
         \CIC1Cos/d3_19 , \CIC1Cos/d3_18 , \CIC1Cos/d4_71_N_633_19 , 
         \CIC1Cos/d4_71_N_633_18 , \CIC1Cos/n10934 , \CIC1Cos/d3_17 , 
         \CIC1Cos/d3_16 , \CIC1Cos/d4_71_N_633_17 , \CIC1Cos/d4_71_N_633_16 , 
         \CIC1Cos/n10933 , \CIC1Cos/d3_15 , \CIC1Cos/d3_14 , 
         \CIC1Cos/d4_71_N_633_15 , \CIC1Cos/d4_71_N_633_14 , \CIC1Cos/n10932 , 
         \CIC1Cos/d3_13 , \CIC1Cos/d3_12 , \CIC1Cos/d4_71_N_633_13 , 
         \CIC1Cos/d4_71_N_633_12 , \CIC1Cos/n10931 , \CIC1Cos/d3_11 , 
         \CIC1Cos/d3_10 , \CIC1Cos/d4_71_N_633_11 , \CIC1Cos/d4_71_N_633_10 , 
         \CIC1Cos/n10930 , \CIC1Cos/d3_9 , \CIC1Cos/d3_8 , 
         \CIC1Cos/d4_71_N_633_9 , \CIC1Cos/d4_71_N_633_8 , \CIC1Cos/n10929 , 
         \CIC1Cos/d3_7 , \CIC1Cos/d3_6 , \CIC1Cos/d4_71_N_633_7 , 
         \CIC1Cos/d4_71_N_633_6 , \CIC1Cos/n10928 , \CIC1Cos/d3_5 , 
         \CIC1Cos/d3_4 , \CIC1Cos/d4_71_N_633_5 , \CIC1Cos/d4_71_N_633_4 , 
         \CIC1Cos/n10927 , \CIC1Cos/d3_3 , \CIC1Cos/d3_2 , 
         \CIC1Cos/d4_71_N_633_3 , \CIC1Cos/d4_71_N_633_2 , \CIC1Cos/n10926 , 
         \CIC1Cos/d3_1 , \CIC1Cos/d3_0 , \CIC1Cos/d4_71_N_633_1 , 
         \CIC1Cos/n10924 , \CIC1Cos/d2_35 , \CIC1Cos/d2_34 , 
         \CIC1Cos/d3_71_N_561_35 , \CIC1Cos/d3_71_N_561_34 , \CIC1Cos/n10923 , 
         \CIC1Cos/d2_33 , \CIC1Cos/d2_32 , \CIC1Cos/d3_71_N_561_33 , 
         \CIC1Cos/d3_71_N_561_32 , \CIC1Cos/n10922 , \CIC1Cos/d2_31 , 
         \CIC1Cos/d2_30 , \CIC1Cos/d3_71_N_561_31 , \CIC1Cos/d3_71_N_561_30 , 
         \CIC1Cos/n10921 , \CIC1Cos/d2_29 , \CIC1Cos/d2_28 , 
         \CIC1Cos/d3_71_N_561_29 , \CIC1Cos/d3_71_N_561_28 , \CIC1Cos/n10920 , 
         \CIC1Cos/d2_27 , \CIC1Cos/d2_26 , \CIC1Cos/d3_71_N_561_27 , 
         \CIC1Cos/d3_71_N_561_26 , \CIC1Cos/n10919 , \CIC1Cos/d2_25 , 
         \CIC1Cos/d2_24 , \CIC1Cos/d3_71_N_561_25 , \CIC1Cos/d3_71_N_561_24 , 
         \CIC1Cos/n10918 , \CIC1Cos/d2_23 , \CIC1Cos/d2_22 , 
         \CIC1Cos/d3_71_N_561_23 , \CIC1Cos/d3_71_N_561_22 , \CIC1Cos/n10917 , 
         \CIC1Cos/d2_21 , \CIC1Cos/d2_20 , \CIC1Cos/d3_71_N_561_21 , 
         \CIC1Cos/d3_71_N_561_20 , \CIC1Cos/n10916 , \CIC1Cos/d2_19 , 
         \CIC1Cos/d2_18 , \CIC1Cos/d3_71_N_561_19 , \CIC1Cos/d3_71_N_561_18 , 
         \CIC1Cos/n10915 , \CIC1Cos/d2_17 , \CIC1Cos/d2_16 , 
         \CIC1Cos/d3_71_N_561_17 , \CIC1Cos/d3_71_N_561_16 , \CIC1Cos/n10914 , 
         \CIC1Cos/d2_15 , \CIC1Cos/d2_14 , \CIC1Cos/d3_71_N_561_15 , 
         \CIC1Cos/d3_71_N_561_14 , \CIC1Cos/n10913 , \CIC1Cos/d2_13 , 
         \CIC1Cos/d2_12 , \CIC1Cos/d3_71_N_561_13 , \CIC1Cos/d3_71_N_561_12 , 
         \CIC1Cos/n10912 , \CIC1Cos/d2_11 , \CIC1Cos/d2_10 , 
         \CIC1Cos/d3_71_N_561_11 , \CIC1Cos/d3_71_N_561_10 , \CIC1Cos/n10911 , 
         \CIC1Cos/d2_9 , \CIC1Cos/d2_8 , \CIC1Cos/d3_71_N_561_9 , 
         \CIC1Cos/d3_71_N_561_8 , \CIC1Cos/n10910 , \CIC1Cos/d2_7 , 
         \CIC1Cos/d2_6 , \CIC1Cos/d3_71_N_561_7 , \CIC1Cos/d3_71_N_561_6 , 
         \CIC1Cos/n10909 , \CIC1Cos/d2_5 , \CIC1Cos/d2_4 , 
         \CIC1Cos/d3_71_N_561_5 , \CIC1Cos/d3_71_N_561_4 , \CIC1Cos/n10908 , 
         \CIC1Cos/d2_3 , \CIC1Cos/d2_2 , \CIC1Cos/d3_71_N_561_3 , 
         \CIC1Cos/d3_71_N_561_2 , \CIC1Cos/n10907 , \CIC1Cos/d2_1 , 
         \CIC1Cos/d2_0 , \CIC1Cos/d3_71_N_561_1 , \CIC1Cos/n10905 , 
         \CIC1Cos/d1_35 , \CIC1Cos/d1_34 , \CIC1Cos/d2_71_N_489_35 , 
         \CIC1Cos/d2_71_N_489_34 , \CIC1Cos/n10904 , \CIC1Cos/d1_33 , 
         \CIC1Cos/d1_32 , \CIC1Cos/d2_71_N_489_33 , \CIC1Cos/d2_71_N_489_32 , 
         \CIC1Cos/n10903 , \CIC1Cos/d1_31 , \CIC1Cos/d1_30 , 
         \CIC1Cos/d2_71_N_489_31 , \CIC1Cos/d2_71_N_489_30 , \CIC1Cos/n10902 , 
         \CIC1Cos/d1_29 , \CIC1Cos/d1_28 , \CIC1Cos/d2_71_N_489_29 , 
         \CIC1Cos/d2_71_N_489_28 , \CIC1Cos/n10901 , \CIC1Cos/d1_27 , 
         \CIC1Cos/d1_26 , \CIC1Cos/d2_71_N_489_27 , \CIC1Cos/d2_71_N_489_26 , 
         \CIC1Cos/n10900 , \CIC1Cos/d1_25 , \CIC1Cos/d1_24 , 
         \CIC1Cos/d2_71_N_489_25 , \CIC1Cos/d2_71_N_489_24 , \CIC1Cos/n10899 , 
         \CIC1Cos/d1_23 , \CIC1Cos/d1_22 , \CIC1Cos/d2_71_N_489_23 , 
         \CIC1Cos/d2_71_N_489_22 , \CIC1Cos/n10898 , \CIC1Cos/d1_21 , 
         \CIC1Cos/d1_20 , \CIC1Cos/d2_71_N_489_21 , \CIC1Cos/d2_71_N_489_20 , 
         \CIC1Cos/n10897 , \CIC1Cos/d1_19 , \CIC1Cos/d1_18 , 
         \CIC1Cos/d2_71_N_489_19 , \CIC1Cos/d2_71_N_489_18 , \CIC1Cos/n10896 , 
         \CIC1Cos/d1_17 , \CIC1Cos/d1_16 , \CIC1Cos/d2_71_N_489_17 , 
         \CIC1Cos/d2_71_N_489_16 , \CIC1Cos/n10895 , \CIC1Cos/d1_15 , 
         \CIC1Cos/d1_14 , \CIC1Cos/d2_71_N_489_15 , \CIC1Cos/d2_71_N_489_14 , 
         \CIC1Cos/n10894 , \CIC1Cos/d1_13 , \CIC1Cos/d1_12 , 
         \CIC1Cos/d2_71_N_489_13 , \CIC1Cos/d2_71_N_489_12 , \CIC1Cos/n10893 , 
         \CIC1Cos/d1_11 , \CIC1Cos/d1_10 , \CIC1Cos/d2_71_N_489_11 , 
         \CIC1Cos/d2_71_N_489_10 , \CIC1Cos/n10892 , \CIC1Cos/d1_9 , 
         \CIC1Cos/d1_8 , \CIC1Cos/d2_71_N_489_9 , \CIC1Cos/d2_71_N_489_8 , 
         \CIC1Cos/n10891 , \CIC1Cos/d1_7 , \CIC1Cos/d1_6 , 
         \CIC1Cos/d2_71_N_489_7 , \CIC1Cos/d2_71_N_489_6 , \CIC1Cos/n10890 , 
         \CIC1Cos/d1_5 , \CIC1Cos/d1_4 , \CIC1Cos/d2_71_N_489_5 , 
         \CIC1Cos/d2_71_N_489_4 , \CIC1Cos/n10889 , \CIC1Cos/d1_3 , 
         \CIC1Cos/d1_2 , \CIC1Cos/d2_71_N_489_3 , \CIC1Cos/d2_71_N_489_2 , 
         \CIC1Cos/n10888 , \CIC1Cos/d1_1 , \CIC1Cos/d1_0 , 
         \CIC1Cos/d2_71_N_489_1 , \CIC1Cos/n10878 , \CIC1Cos/n4798 , 
         MixerOutCos_11, \CIC1Cos/d1_71_N_417_35 , \CIC1Cos/d1_71_N_417_34 , 
         \CIC1Cos/n10877 , \CIC1Cos/d1_71_N_417_33 , \CIC1Cos/d1_71_N_417_32 , 
         \CIC1Cos/n10876 , \CIC1Cos/d1_71_N_417_31 , \CIC1Cos/d1_71_N_417_30 , 
         \CIC1Cos/n10875 , \CIC1Cos/d1_71_N_417_29 , \CIC1Cos/d1_71_N_417_28 , 
         \CIC1Cos/n10874 , \CIC1Cos/d1_71_N_417_27 , \CIC1Cos/d1_71_N_417_26 , 
         \CIC1Cos/n10873 , \CIC1Cos/d1_71_N_417_25 , \CIC1Cos/d1_71_N_417_24 , 
         \CIC1Cos/n10872 , \CIC1Cos/d1_71_N_417_23 , \CIC1Cos/d1_71_N_417_22 , 
         \CIC1Cos/n10871 , \CIC1Cos/d1_71_N_417_21 , \CIC1Cos/d1_71_N_417_20 , 
         \CIC1Cos/n10870 , \CIC1Cos/d1_71_N_417_19 , \CIC1Cos/d1_71_N_417_18 , 
         \CIC1Cos/n10869 , \CIC1Cos/d1_71_N_417_17 , \CIC1Cos/d1_71_N_417_16 , 
         \CIC1Cos/n10868 , \CIC1Cos/d1_71_N_417_15 , \CIC1Cos/d1_71_N_417_14 , 
         \CIC1Cos/n10867 , \CIC1Cos/d1_71_N_417_13 , \CIC1Cos/d1_71_N_417_12 , 
         \CIC1Cos/n10866 , MixerOutCos_10, \CIC1Cos/d1_71_N_417_11 , 
         \CIC1Cos/d1_71_N_417_10 , \CIC1Cos/n10865 , MixerOutCos_9, 
         MixerOutCos_8, \CIC1Cos/d1_71_N_417_9 , \CIC1Cos/d1_71_N_417_8 , 
         \CIC1Cos/n10864 , MixerOutCos_7, MixerOutCos_6, 
         \CIC1Cos/d1_71_N_417_7 , \CIC1Cos/d1_71_N_417_6 , \CIC1Cos/n10863 , 
         MixerOutCos_5, MixerOutCos_4, \CIC1Cos/d1_71_N_417_5 , 
         \CIC1Cos/d1_71_N_417_4 , \CIC1Cos/n10862 , MixerOutCos_3, 
         MixerOutCos_2, \CIC1Cos/d1_71_N_417_3 , \CIC1Cos/d1_71_N_417_2 , 
         \CIC1Cos/n10861 , MixerOutCos_1, MixerOutCos_0, 
         \CIC1Cos/d1_71_N_417_1 , \CIC1Cos/d_d7_38 , \CIC1Cos/d7_38 , 
         \CIC1Cos/d_d7_37 , \CIC1Cos/d7_37 , \CIC1Cos/n11649 , \CIC1Cos/n5898 , 
         \CIC1Cos/n5897 , \CIC1Cos/d_d7_36 , \CIC1Cos/d7_36 , \CIC1Cos/n5899 , 
         \CIC1Cos/d8_71_N_1602_71 , \CIC1Cos/d8_71_N_1602_70 , 
         \CIC1Cos/osc_clk_enable_1183 , \CIC1Cos/n11647 , 
         \CIC1Cos/d8_71_N_1602_69 , \CIC1Cos/d8_71_N_1602_68 , 
         \CIC1Cos/n11646 , \CIC1Cos/d8_71_N_1602_67 , 
         \CIC1Cos/d8_71_N_1602_66 , \CIC1Cos/n11645 , 
         \CIC1Cos/d8_71_N_1602_65 , \CIC1Cos/d8_71_N_1602_64 , 
         \CIC1Cos/n11644 , \CIC1Cos/d8_71_N_1602_63 , 
         \CIC1Cos/d8_71_N_1602_62 , \CIC1Cos/n11643 , 
         \CIC1Cos/d8_71_N_1602_61 , \CIC1Cos/d8_71_N_1602_60 , 
         \CIC1Cos/n11642 , \CIC1Cos/d8_71_N_1602_59 , 
         \CIC1Cos/d8_71_N_1602_58 , \CIC1Cos/n11641 , 
         \CIC1Cos/d8_71_N_1602_57 , \CIC1Cos/d8_71_N_1602_56 , 
         \CIC1Cos/n11640 , \CIC1Cos/d8_71_N_1602_55 , 
         \CIC1Cos/d8_71_N_1602_54 , \CIC1Cos/n11639 , 
         \CIC1Cos/d8_71_N_1602_53 , \CIC1Cos/d8_71_N_1602_52 , 
         \CIC1Cos/n11638 , \CIC1Cos/d8_71_N_1602_51 , 
         \CIC1Cos/d8_71_N_1602_50 , \CIC1Cos/n11637 , 
         \CIC1Cos/d8_71_N_1602_49 , \CIC1Cos/d8_71_N_1602_48 , 
         \CIC1Cos/n11636 , \CIC1Cos/d8_71_N_1602_47 , 
         \CIC1Cos/d8_71_N_1602_46 , \CIC1Cos/n11635 , 
         \CIC1Cos/d8_71_N_1602_45 , \CIC1Cos/d8_71_N_1602_44 , 
         \CIC1Cos/n11634 , \CIC1Cos/d8_71_N_1602_43 , 
         \CIC1Cos/d8_71_N_1602_42 , \CIC1Cos/n11633 , 
         \CIC1Cos/d8_71_N_1602_41 , \CIC1Cos/d8_71_N_1602_40 , 
         \CIC1Cos/n11632 , \CIC1Cos/d8_71_N_1602_39 , 
         \CIC1Cos/d8_71_N_1602_38 , \CIC1Cos/n11631 , 
         \CIC1Cos/d8_71_N_1602_37 , \CIC1Cos/d8_71_N_1602_36 , 
         \CIC1Cos/n11630 , \CIC1Cos/d_d6_71 , \CIC1Cos/n11488 , 
         \CIC1Cos/n6016 , \CIC1Cos/d_d6_70 , \CIC1Cos/d_d6_69 , 
         \CIC1Cos/n11487 , \CIC1Cos/n6018 , \CIC1Cos/n6017 , \CIC1Cos/d_d6_68 , 
         \CIC1Cos/d_d6_67 , \CIC1Cos/n11486 , \CIC1Cos/n6020 , \CIC1Cos/n6019 , 
         \CIC1Cos/d_d6_66 , \CIC1Cos/d_d6_65 , \CIC1Cos/n11485 , 
         \CIC1Cos/n6022 , \CIC1Cos/n6021 , \CIC1Cos/d_d6_64 , 
         \CIC1Cos/d_d6_63 , \CIC1Cos/n11484 , \CIC1Cos/n6024 , \CIC1Cos/n6023 , 
         \CIC1Cos/d_d6_62 , \CIC1Cos/d_d6_61 , \CIC1Cos/n11483 , 
         \CIC1Cos/n6026 , \CIC1Cos/n6025 , \CIC1Cos/d_d6_60 , 
         \CIC1Cos/d_d6_59 , \CIC1Cos/n11482 , \CIC1Cos/n6028 , \CIC1Cos/n6027 , 
         \CIC1Cos/d_d6_58 , \CIC1Cos/d_d6_57 , \CIC1Cos/n11481 , 
         \CIC1Cos/n6030 , \CIC1Cos/n6029 , \CIC1Cos/d_d6_56 , 
         \CIC1Cos/d_d6_55 , \CIC1Cos/n11480 , \CIC1Cos/n6032 , \CIC1Cos/n6031 , 
         \CIC1Cos/d_d6_54 , \CIC1Cos/d_d6_53 , \CIC1Cos/n11479 , 
         \CIC1Cos/n6034 , \CIC1Cos/n6033 , \CIC1Cos/d_d6_52 , 
         \CIC1Cos/d_d6_51 , \CIC1Cos/n11478 , \CIC1Cos/n6036 , \CIC1Cos/n6035 , 
         \CIC1Cos/d_d6_50 , \CIC1Cos/d_d6_49 , \CIC1Cos/n11477 , 
         \CIC1Cos/n6038 , \CIC1Cos/n6037 , \CIC1Cos/d_d6_48 , 
         \CIC1Cos/d_d6_47 , \CIC1Cos/n11476 , \CIC1Cos/n6040 , \CIC1Cos/n6039 , 
         \CIC1Cos/d_d6_46 , \CIC1Cos/d_d6_45 , \CIC1Cos/n11475 , 
         \CIC1Cos/n6042 , \CIC1Cos/n6041 , \CIC1Cos/d_d6_44 , 
         \CIC1Cos/d_d6_43 , \CIC1Cos/n11474 , \CIC1Cos/n6044 , \CIC1Cos/n6043 , 
         \CIC1Cos/d_d6_42 , \CIC1Cos/d_d6_41 , \CIC1Cos/n11473 , 
         \CIC1Cos/n6046 , \CIC1Cos/n6045 , \CIC1Cos/d_d6_40 , 
         \CIC1Cos/d_d6_39 , \CIC1Cos/n11472 , \CIC1Cos/n6048 , \CIC1Cos/n6047 , 
         \CIC1Cos/d_d6_38 , \CIC1Cos/d_d6_37 , \CIC1Cos/n11471 , 
         \CIC1Cos/n6050 , \CIC1Cos/n6049 , \CIC1Cos/d_d6_36 , \CIC1Cos/n6051 , 
         \CIC1Cos/d7_71_N_1530_71 , \CIC1Cos/d7_71_N_1530_70 , 
         \CIC1Cos/n11469 , \CIC1Cos/d7_71_N_1530_69 , 
         \CIC1Cos/d7_71_N_1530_68 , \CIC1Cos/n11468 , 
         \CIC1Cos/d7_71_N_1530_67 , \CIC1Cos/d7_71_N_1530_66 , 
         \CIC1Cos/n11467 , \CIC1Cos/d7_71_N_1530_65 , 
         \CIC1Cos/d7_71_N_1530_64 , \CIC1Cos/n11466 , 
         \CIC1Cos/d7_71_N_1530_63 , \CIC1Cos/d7_71_N_1530_62 , 
         \CIC1Cos/n11465 , \CIC1Cos/d7_71_N_1530_61 , 
         \CIC1Cos/d7_71_N_1530_60 , \CIC1Cos/n11464 , 
         \CIC1Cos/d7_71_N_1530_59 , \CIC1Cos/d7_71_N_1530_58 , 
         \CIC1Cos/n11463 , \CIC1Cos/d7_71_N_1530_57 , 
         \CIC1Cos/d7_71_N_1530_56 , \CIC1Cos/n11462 , 
         \CIC1Cos/d7_71_N_1530_55 , \CIC1Cos/d7_71_N_1530_54 , 
         \CIC1Cos/n11461 , \CIC1Cos/d7_71_N_1530_53 , 
         \CIC1Cos/d7_71_N_1530_52 , \CIC1Cos/n11460 , 
         \CIC1Cos/d7_71_N_1530_51 , \CIC1Cos/d7_71_N_1530_50 , 
         \CIC1Cos/n11459 , \CIC1Cos/d7_71_N_1530_49 , 
         \CIC1Cos/d7_71_N_1530_48 , \CIC1Cos/n11458 , 
         \CIC1Cos/d7_71_N_1530_47 , \CIC1Cos/d7_71_N_1530_46 , 
         \CIC1Cos/n11457 , \CIC1Cos/d7_71_N_1530_45 , 
         \CIC1Cos/d7_71_N_1530_44 , \CIC1Cos/n11456 , 
         \CIC1Cos/d7_71_N_1530_43 , \CIC1Cos/d7_71_N_1530_42 , 
         \CIC1Cos/n11455 , \CIC1Cos/d7_71_N_1530_41 , 
         \CIC1Cos/d7_71_N_1530_40 , \CIC1Cos/n11454 , 
         \CIC1Cos/d7_71_N_1530_39 , \CIC1Cos/d7_71_N_1530_38 , 
         \CIC1Cos/n11453 , \CIC1Cos/d7_71_N_1530_37 , 
         \CIC1Cos/d7_71_N_1530_36 , \CIC1Cos/n11452 , \CIC1Cos/n11448 , 
         \CIC1Cos/n11447 , \CIC1Cos/n11446 , \CIC1Cos/n11445 , 
         \CIC1Cos/n11444 , \CIC1Cos/n11443 , \CIC1Cos/n11442 , 
         \CIC1Cos/n11441 , \CIC1Cos/n11440 , \CIC1Cos/n11439 , 
         \CIC1Cos/n11438 , \CIC1Cos/n11437 , \CIC1Cos/n11895 , 
         \CIC1Cos/n11899 , \CIC1Cos/n11898 , \CIC1Cos/n5110 , \CIC1Cos/n5111 , 
         \CIC1Cos/d3_71_N_561_65 , \CIC1Cos/d3_71_N_561_64 , \CIC1Cos/n11847 , 
         \CIC1Cos/n5106 , \CIC1Cos/n5107 , \CIC1Cos/d3_71_N_561_69 , 
         \CIC1Cos/d3_71_N_561_68 , \CIC1Cos/n11848 , \CIC1Cos/n11849 , 
         \CIC1Cos/n11852 , \CIC1Cos/n11867 , \CIC1Cos/n11868 , \CIC1Cos/n5105 , 
         \CIC1Cos/n5104 , \CIC1Cos/n11865 , \CIC1Cos/n11866 , \CIC1Cos/n5109 , 
         \CIC1Cos/n5108 , \CIC1Cos/n11863 , \CIC1Cos/n11864 , \CIC1Cos/n11861 , 
         \CIC1Cos/n11862 , \CIC1Cos/n11859 , \CIC1Cos/n11860 , 
         \CIC1Cos/n11857 , \CIC1Cos/n11858 , \CIC1Cos/n11855 , 
         \CIC1Cos/n11856 , \CIC1Cos/n11854 , \CIC1Cos/n11897 , \CIC1Cos/n4828 , 
         \CIC1Cos/n4829 , \CIC1Cos/d1_71_N_417_43 , \CIC1Cos/d1_71_N_417_42 , 
         \CIC1Cos/n11917 , \CIC1Cos/n11918 , \CIC1Cos/n11950 , \CIC1Cos/n4801 , 
         \CIC1Cos/n4800 , \CIC1Cos/n11949 , \CIC1Cos/n4803 , \CIC1Cos/n4802 , 
         \CIC1Cos/n11948 , \CIC1Cos/n4805 , \CIC1Cos/n4804 , \CIC1Cos/n11947 , 
         \CIC1Cos/n4807 , \CIC1Cos/n4806 , \CIC1Cos/n4830 , \CIC1Cos/n4831 , 
         \CIC1Cos/d1_71_N_417_41 , \CIC1Cos/d1_71_N_417_40 , \CIC1Cos/n11916 , 
         \CIC1Cos/n11946 , \CIC1Cos/n4809 , \CIC1Cos/n4808 , \CIC1Cos/n4832 , 
         \CIC1Cos/n4833 , \CIC1Cos/d1_71_N_417_39 , \CIC1Cos/d1_71_N_417_38 , 
         \CIC1Cos/n11915 , \CIC1Cos/n11945 , \CIC1Cos/n4811 , \CIC1Cos/n4810 , 
         \CIC1Cos/n11944 , \CIC1Cos/n4813 , \CIC1Cos/n4812 , \CIC1Cos/n11943 , 
         \CIC1Cos/n4815 , \CIC1Cos/n4814 , \CIC1Cos/n4834 , \CIC1Cos/n4835 , 
         \CIC1Cos/d1_71_N_417_37 , \CIC1Cos/d1_71_N_417_36 , \CIC1Cos/n11914 , 
         \CIC1Cos/n11942 , \CIC1Cos/n4817 , \CIC1Cos/n4816 , \CIC1Cos/n11941 , 
         \CIC1Cos/n4819 , \CIC1Cos/n4818 , \CIC1Cos/n11940 , \CIC1Cos/n4821 , 
         \CIC1Cos/n4820 , \CIC1Cos/n11939 , \CIC1Cos/n4823 , \CIC1Cos/n4822 , 
         \CIC1Cos/n11938 , \CIC1Cos/n4825 , \CIC1Cos/n4824 , \CIC1Cos/n11937 , 
         \CIC1Cos/n4827 , \CIC1Cos/n4826 , \CIC1Cos/n11936 , \CIC1Cos/n11935 , 
         \CIC1Cos/n11934 , \CIC1Cos/n11896 , \CIC1Cos/d1_71_N_417_71 , 
         \CIC1Cos/d1_71_N_417_70 , \CIC1Cos/n11931 , \CIC1Cos/d1_71_N_417_69 , 
         \CIC1Cos/d1_71_N_417_68 , \CIC1Cos/n11930 , \CIC1Cos/d1_71_N_417_67 , 
         \CIC1Cos/d1_71_N_417_66 , \CIC1Cos/n11929 , \CIC1Cos/d1_71_N_417_65 , 
         \CIC1Cos/d1_71_N_417_64 , \CIC1Cos/n11928 , \CIC1Cos/d1_71_N_417_63 , 
         \CIC1Cos/d1_71_N_417_62 , \CIC1Cos/n11927 , \CIC1Cos/d1_71_N_417_61 , 
         \CIC1Cos/d1_71_N_417_60 , \CIC1Cos/n11926 , \CIC1Cos/d1_71_N_417_59 , 
         \CIC1Cos/d1_71_N_417_58 , \CIC1Cos/n11925 , \CIC1Cos/d1_71_N_417_57 , 
         \CIC1Cos/d1_71_N_417_56 , \CIC1Cos/n11924 , \CIC1Cos/n11853 , 
         \CIC1Cos/n11909 , \CIC1Cos/d1_71_N_417_55 , \CIC1Cos/d1_71_N_417_54 , 
         \CIC1Cos/n11923 , \CIC1Cos/n11908 , \CIC1Cos/d1_71_N_417_53 , 
         \CIC1Cos/d1_71_N_417_52 , \CIC1Cos/n11922 , \CIC1Cos/n11907 , 
         \CIC1Cos/d1_71_N_417_51 , \CIC1Cos/d1_71_N_417_50 , \CIC1Cos/n11921 , 
         \CIC1Cos/n11906 , \CIC1Cos/d1_71_N_417_49 , \CIC1Cos/d1_71_N_417_48 , 
         \CIC1Cos/n11920 , \CIC1Cos/n11905 , \CIC1Cos/d1_71_N_417_47 , 
         \CIC1Cos/d1_71_N_417_46 , \CIC1Cos/n11919 , \CIC1Cos/d1_71_N_417_45 , 
         \CIC1Cos/d1_71_N_417_44 , \CIC1Cos/d3_71_N_561_71 , 
         \CIC1Cos/d3_71_N_561_70 , \CIC1Cos/d3_71_N_561_67 , 
         \CIC1Cos/d3_71_N_561_66 , \uart_rx1/r_Clock_Count_15 , \uart_rx1/n70 , 
         \uart_rx1/UartClk_2_enable_56 , \uart_rx1/n8362 , \uart_rx1/n11624 , 
         \uart_rx1/r_Clock_Count_14 , \uart_rx1/r_Clock_Count_13 , 
         \uart_rx1/n71 , \uart_rx1/n72 , \uart_rx1/n11623 , 
         \uart_rx1/r_Clock_Count_12 , \uart_rx1/r_Clock_Count_11 , 
         \uart_rx1/n73 , \uart_rx1/n74 , \uart_rx1/n11622 , 
         \uart_rx1/r_Clock_Count_10 , \uart_rx1/r_Clock_Count_9 , 
         \uart_rx1/n75 , \uart_rx1/n76 , \uart_rx1/n11621 , 
         \uart_rx1/r_Clock_Count_8 , \uart_rx1/r_Clock_Count_7 , 
         \uart_rx1/n77 , \uart_rx1/n78 , \uart_rx1/n11620 , 
         \uart_rx1/r_Clock_Count_6 , \uart_rx1/r_Clock_Count_5 , 
         \uart_rx1/n79 , \uart_rx1/n80 , \uart_rx1/n11619 , 
         \uart_rx1/r_Clock_Count_4 , \uart_rx1/r_Clock_Count_3 , 
         \uart_rx1/n81 , \uart_rx1/n82 , \uart_rx1/n11618 , 
         \uart_rx1/r_Clock_Count_2 , \uart_rx1/r_Clock_Count_1 , 
         \uart_rx1/n83 , \uart_rx1/n84 , \uart_rx1/n11617 , 
         \uart_rx1/r_Clock_Count_0 , \uart_rx1/n85 , \AMDemodulator1/n12275 , 
         \AMDemodulator1/d_out_d_11_N_1871_17 , \AMDemodulator1/ISquare_31 , 
         \AMDemodulator1/n209 , \AMDemodulator1/n12274 , \AMDemodulator1/n323 , 
         \AMDemodulator1/n322 , \AMDemodulator1/n12273 , \AMDemodulator1/n325 , 
         \AMDemodulator1/n324 , \AMDemodulator1/ISquare_22 , 
         \AMDemodulator1/ISquare_23 , \AMDemodulator1/n326 , 
         \AMDemodulator1/n912 , \AMDemodulator1/n913 , \AMDemodulator1/n12269 , 
         \AMDemodulator1/d_out_d_11_N_2352_17 , \AMDemodulator1/n914 , 
         \AMDemodulator1/n915 , \AMDemodulator1/n12268 , \AMDemodulator1/n916 , 
         \AMDemodulator1/n917 , \AMDemodulator1/n12267 , 
         \AMDemodulator1/d_out_d_11_N_1873_17 , \AMDemodulator1/n918 , 
         \AMDemodulator1/d_out_d_11_N_1875_17 , \AMDemodulator1/n919 , 
         \AMDemodulator1/n12266 , \AMDemodulator1/d_out_d_11_N_1877_17 , 
         \AMDemodulator1/n920 , \AMDemodulator1/d_out_d_11_N_1879_17 , 
         \AMDemodulator1/n921 , \AMDemodulator1/n12265 , 
         \AMDemodulator1/d_out_d_11_N_1881_17 , \AMDemodulator1/n922 , 
         \AMDemodulator1/d_out_d_11_N_1883_17 , \AMDemodulator1/n923 , 
         \AMDemodulator1/n12264 , \AMDemodulator1/d_out_d_11_N_1885_17 , 
         \AMDemodulator1/n924 , \AMDemodulator1/d_out_d_11_N_1887_17 , 
         \AMDemodulator1/n925 , \AMDemodulator1/n12263 , 
         \AMDemodulator1/d_out_d_11_N_1889_17 , \AMDemodulator1/n926 , 
         \AMDemodulator1/d_out_d_11_N_1891_17 , \AMDemodulator1/n927 , 
         \AMDemodulator1/n12262 , \AMDemodulator1/ISquare_1 , 
         \AMDemodulator1/ISquare_0 , \AMDemodulator1/n792 , 
         \AMDemodulator1/n793 , \AMDemodulator1/n11209 , \AMDemodulator1/n852 , 
         \AMDemodulator1/n794 , \AMDemodulator1/n795 , \AMDemodulator1/n11208 , 
         \AMDemodulator1/n854 , \AMDemodulator1/n853 , \AMDemodulator1/n796 , 
         \AMDemodulator1/n797 , \AMDemodulator1/n11207 , \AMDemodulator1/n856 , 
         \AMDemodulator1/n855 , \AMDemodulator1/n798 , \AMDemodulator1/n799 , 
         \AMDemodulator1/n11206 , \AMDemodulator1/n858 , \AMDemodulator1/n857 , 
         \AMDemodulator1/n800 , \AMDemodulator1/n801 , \AMDemodulator1/n11205 , 
         \AMDemodulator1/n860 , \AMDemodulator1/n859 , \AMDemodulator1/n802 , 
         \AMDemodulator1/n803 , \AMDemodulator1/n11204 , \AMDemodulator1/n862 , 
         \AMDemodulator1/n861 , \AMDemodulator1/n804 , \AMDemodulator1/n805 , 
         \AMDemodulator1/n11203 , \AMDemodulator1/n864 , \AMDemodulator1/n863 , 
         \AMDemodulator1/n806 , \AMDemodulator1/n807 , \AMDemodulator1/n11202 , 
         \AMDemodulator1/n866 , \AMDemodulator1/n865 , 
         \AMDemodulator1/ISquare_5 , \AMDemodulator1/ISquare_4 , 
         \AMDemodulator1/n11201 , \AMDemodulator1/n867 , \AMDemodulator1/n732 , 
         \AMDemodulator1/n733 , \AMDemodulator1/n12233 , \AMDemodulator1/n734 , 
         \AMDemodulator1/n735 , \AMDemodulator1/n12232 , \AMDemodulator1/n736 , 
         \AMDemodulator1/n737 , \AMDemodulator1/n12231 , \AMDemodulator1/n738 , 
         \AMDemodulator1/n739 , \AMDemodulator1/n12230 , \AMDemodulator1/n740 , 
         \AMDemodulator1/n741 , \AMDemodulator1/n12229 , \AMDemodulator1/n742 , 
         \AMDemodulator1/n743 , \AMDemodulator1/n12228 , \AMDemodulator1/n744 , 
         \AMDemodulator1/n745 , \AMDemodulator1/n12227 , \AMDemodulator1/n746 , 
         \AMDemodulator1/n747 , \AMDemodulator1/n12226 , 
         \AMDemodulator1/ISquare_7 , \AMDemodulator1/ISquare_6 , 
         \AMDemodulator1/n12225 , \AMDemodulator1/MultResult2_23 , 
         \AMDemodulator1/MultResult1_23 , 
         \AMDemodulator1/ISquare_31_N_1894_24 , CIC1_out_clkSin, 
         \AMDemodulator1/n11001 , \AMDemodulator1/MultResult2_22 , 
         \AMDemodulator1/MultResult1_22 , 
         \AMDemodulator1/ISquare_31_N_1894_23 , 
         \AMDemodulator1/ISquare_31_N_1894_22 , \AMDemodulator1/n11000 , 
         \AMDemodulator1/MultResult2_21 , \AMDemodulator1/MultResult1_21 , 
         \AMDemodulator1/MultResult2_20 , \AMDemodulator1/MultResult1_20 , 
         \AMDemodulator1/ISquare_31_N_1894_21 , 
         \AMDemodulator1/ISquare_31_N_1894_20 , \AMDemodulator1/n10999 , 
         \AMDemodulator1/ISquare_20 , \AMDemodulator1/ISquare_21 , 
         \AMDemodulator1/MultResult2_19 , \AMDemodulator1/MultResult1_19 , 
         \AMDemodulator1/MultResult2_18 , \AMDemodulator1/MultResult1_18 , 
         \AMDemodulator1/ISquare_31_N_1894_19 , 
         \AMDemodulator1/ISquare_31_N_1894_18 , \AMDemodulator1/n10998 , 
         \AMDemodulator1/ISquare_18 , \AMDemodulator1/ISquare_19 , 
         \AMDemodulator1/MultResult2_17 , \AMDemodulator1/MultResult1_17 , 
         \AMDemodulator1/MultResult2_16 , \AMDemodulator1/MultResult1_16 , 
         \AMDemodulator1/ISquare_31_N_1894_17 , 
         \AMDemodulator1/ISquare_31_N_1894_16 , \AMDemodulator1/n10997 , 
         \AMDemodulator1/ISquare_16 , \AMDemodulator1/ISquare_17 , 
         \AMDemodulator1/MultResult2_15 , \AMDemodulator1/MultResult1_15 , 
         \AMDemodulator1/MultResult2_14 , \AMDemodulator1/MultResult1_14 , 
         \AMDemodulator1/ISquare_31_N_1894_15 , 
         \AMDemodulator1/ISquare_31_N_1894_14 , \AMDemodulator1/n10996 , 
         \AMDemodulator1/ISquare_14 , \AMDemodulator1/ISquare_15 , 
         \AMDemodulator1/MultResult2_13 , \AMDemodulator1/MultResult1_13 , 
         \AMDemodulator1/MultResult2_12 , \AMDemodulator1/MultResult1_12 , 
         \AMDemodulator1/ISquare_31_N_1894_13 , 
         \AMDemodulator1/ISquare_31_N_1894_12 , \AMDemodulator1/n10995 , 
         \AMDemodulator1/ISquare_12 , \AMDemodulator1/ISquare_13 , 
         \AMDemodulator1/MultResult2_11 , \AMDemodulator1/MultResult1_11 , 
         \AMDemodulator1/MultResult2_10 , \AMDemodulator1/MultResult1_10 , 
         \AMDemodulator1/ISquare_31_N_1894_11 , 
         \AMDemodulator1/ISquare_31_N_1894_10 , \AMDemodulator1/n10994 , 
         \AMDemodulator1/ISquare_10 , \AMDemodulator1/ISquare_11 , 
         \AMDemodulator1/MultResult2_9 , \AMDemodulator1/MultResult1_9 , 
         \AMDemodulator1/MultResult2_8 , \AMDemodulator1/MultResult1_8 , 
         \AMDemodulator1/ISquare_31_N_1894_9 , 
         \AMDemodulator1/ISquare_31_N_1894_8 , \AMDemodulator1/n10993 , 
         \AMDemodulator1/ISquare_8 , \AMDemodulator1/ISquare_9 , 
         \AMDemodulator1/MultResult2_7 , \AMDemodulator1/MultResult1_7 , 
         \AMDemodulator1/MultResult2_6 , \AMDemodulator1/MultResult1_6 , 
         \AMDemodulator1/ISquare_31_N_1894_7 , 
         \AMDemodulator1/ISquare_31_N_1894_6 , \AMDemodulator1/n10992 , 
         \AMDemodulator1/MultResult2_5 , \AMDemodulator1/MultResult1_5 , 
         \AMDemodulator1/MultResult2_4 , \AMDemodulator1/MultResult1_4 , 
         \AMDemodulator1/ISquare_31_N_1894_5 , 
         \AMDemodulator1/ISquare_31_N_1894_4 , \AMDemodulator1/n10991 , 
         \AMDemodulator1/MultResult2_3 , \AMDemodulator1/MultResult1_3 , 
         \AMDemodulator1/MultResult2_2 , \AMDemodulator1/MultResult1_2 , 
         \AMDemodulator1/ISquare_31_N_1894_3 , 
         \AMDemodulator1/ISquare_31_N_1894_2 , \AMDemodulator1/n10990 , 
         \AMDemodulator1/ISquare_2 , \AMDemodulator1/ISquare_3 , 
         \AMDemodulator1/MultResult2_1 , \AMDemodulator1/MultResult1_1 , 
         \AMDemodulator1/MultResult2_0 , \AMDemodulator1/MultResult1_0 , 
         \AMDemodulator1/ISquare_31_N_1894_1 , \AMDemodulator1/n12184 , 
         \AMDemodulator1/d_out_d_11_N_2334_17 , \AMDemodulator1/n12183 , 
         \AMDemodulator1/n12182 , \AMDemodulator1/n12181 , 
         \AMDemodulator1/n12180 , \AMDemodulator1/d_out_d_11__N_1874 , 
         \AMDemodulator1/n11548 , \AMDemodulator1/n496 , \AMDemodulator1/n438 , 
         \AMDemodulator1/n439 , \AMDemodulator1/n11547 , \AMDemodulator1/n498 , 
         \AMDemodulator1/n497 , \AMDemodulator1/n440 , \AMDemodulator1/n441 , 
         \AMDemodulator1/n11546 , \AMDemodulator1/n500 , \AMDemodulator1/n499 , 
         \AMDemodulator1/n442 , \AMDemodulator1/n443 , \AMDemodulator1/n11545 , 
         \AMDemodulator1/n502 , \AMDemodulator1/n501 , \AMDemodulator1/n444 , 
         \AMDemodulator1/n445 , \AMDemodulator1/n11544 , \AMDemodulator1/n504 , 
         \AMDemodulator1/n503 , \AMDemodulator1/n446 , \AMDemodulator1/n447 , 
         \AMDemodulator1/n11543 , \AMDemodulator1/n506 , \AMDemodulator1/n505 , 
         \AMDemodulator1/n11542 , \AMDemodulator1/n507 , 
         \AMDemodulator1/d_out_d_11__N_1872 , \AMDemodulator1/n11536 , 
         \AMDemodulator1/n380 , \AMDemodulator1/n381 , \AMDemodulator1/n11535 , 
         \AMDemodulator1/n382 , \AMDemodulator1/n383 , \AMDemodulator1/n11534 , 
         \AMDemodulator1/n384 , \AMDemodulator1/n385 , \AMDemodulator1/n11533 , 
         \AMDemodulator1/n386 , \AMDemodulator1/n387 , \AMDemodulator1/n11532 , 
         \AMDemodulator1/n11531 , \AMDemodulator1/d_out_d_11__N_1870 , 
         \AMDemodulator1/n11525 , \AMDemodulator1/n11524 , 
         \AMDemodulator1/n11523 , \AMDemodulator1/n12271 , 
         \AMDemodulator1/n11522 , \AMDemodulator1/n11521 , 
         \AMDemodulator1/d_out_d_11__N_1878 , \AMDemodulator1/n11515 , 
         \AMDemodulator1/n612 , \AMDemodulator1/n554 , \AMDemodulator1/n555 , 
         \AMDemodulator1/n11514 , \AMDemodulator1/n614 , \AMDemodulator1/n613 , 
         \AMDemodulator1/n556 , \AMDemodulator1/n557 , \AMDemodulator1/n11513 , 
         \AMDemodulator1/n616 , \AMDemodulator1/n615 , \AMDemodulator1/n558 , 
         \AMDemodulator1/n559 , \AMDemodulator1/n11512 , \AMDemodulator1/n618 , 
         \AMDemodulator1/n617 , \AMDemodulator1/n560 , \AMDemodulator1/n561 , 
         \AMDemodulator1/n11511 , \AMDemodulator1/n620 , \AMDemodulator1/n619 , 
         \AMDemodulator1/n562 , \AMDemodulator1/n563 , \AMDemodulator1/n11510 , 
         \AMDemodulator1/n622 , \AMDemodulator1/n621 , \AMDemodulator1/n564 , 
         \AMDemodulator1/n565 , \AMDemodulator1/n11509 , \AMDemodulator1/n624 , 
         \AMDemodulator1/n623 , \AMDemodulator1/n566 , \AMDemodulator1/n567 , 
         \AMDemodulator1/n11508 , \AMDemodulator1/n626 , \AMDemodulator1/n625 , 
         \AMDemodulator1/n11507 , \AMDemodulator1/n627 , \AMDemodulator1/n672 , 
         \AMDemodulator1/n673 , \AMDemodulator1/n11501 , \AMDemodulator1/n674 , 
         \AMDemodulator1/n675 , \AMDemodulator1/n11500 , \AMDemodulator1/n676 , 
         \AMDemodulator1/n677 , \AMDemodulator1/n11499 , \AMDemodulator1/n678 , 
         \AMDemodulator1/n679 , \AMDemodulator1/n11498 , \AMDemodulator1/n680 , 
         \AMDemodulator1/n681 , \AMDemodulator1/n11497 , \AMDemodulator1/n682 , 
         \AMDemodulator1/n683 , \AMDemodulator1/n11496 , \AMDemodulator1/n684 , 
         \AMDemodulator1/n685 , \AMDemodulator1/n11495 , \AMDemodulator1/n686 , 
         \AMDemodulator1/n687 , \AMDemodulator1/n11494 , 
         \AMDemodulator1/n11493 , \AMDemodulator1/n12179 , 
         \AMDemodulator1/n12178 , \AMDemodulator1/n12177 , 
         \AMDemodulator1/d_out_d_11__N_1876 , \AMDemodulator1/n12175 , 
         \AMDemodulator1/n12174 , \AMDemodulator1/n12173 , 
         \AMDemodulator1/n12172 , \AMDemodulator1/n12171 , 
         \AMDemodulator1/n12170 , \AMDemodulator1/n12169 , 
         \AMDemodulator1/n12168 , \AMDemodulator1/n12162 , 
         \AMDemodulator1/n12161 , \AMDemodulator1/n12160 , 
         \AMDemodulator1/n12159 , \AMDemodulator1/n12158 , 
         \AMDemodulator1/n12157 , \AMDemodulator1/n12156 , 
         \AMDemodulator1/n12155 , \AMDemodulator1/n12154 , 
         \AMDemodulator1/n12148 , \AMDemodulator1/n12147 , 
         \AMDemodulator1/n12146 , \AMDemodulator1/n12145 , 
         \AMDemodulator1/n12144 , \AMDemodulator1/n12143 , 
         \AMDemodulator1/n12142 , \AMDemodulator1/n12141 , 
         \AMDemodulator1/n12140 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_0 , 
         \AMDemodulator1/Multiplier2/mfco , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_13 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_2 , 
         \AMDemodulator1/Multiplier2/mfco_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_15 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_4 , 
         \AMDemodulator1/Multiplier2/mfco_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_17 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_6 , 
         \AMDemodulator1/Multiplier2/mfco_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_19 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_8 , 
         \AMDemodulator1/Multiplier2/mfco_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_21 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_10 , 
         \AMDemodulator1/Multiplier2/mfco_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_23 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_2 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier2/rego_o_2 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_3 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier2/rego_o_3 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_5 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_7 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_6 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_7 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_13 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_15 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_15 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_18 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_17 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_13 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_15 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_15 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_18 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_18 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_17 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_17 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_20 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_20 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_19 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_19 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_22 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_21 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier2/rego_o_4 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_1 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier2/rego_o_6 , 
         \AMDemodulator1/Multiplier2/rego_o_5 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_2 , 
         \AMDemodulator1/Multiplier2/rego_o_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_3 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_4 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_5 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_6 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_15 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_17 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_18 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_19 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_20 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_21 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_22 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_23 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_8 , 
         \AMDemodulator1/Multiplier2/rego_o_8 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_1 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier2/rego_o_10 , 
         \AMDemodulator1/Multiplier2/rego_o_9 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_2 , 
         \AMDemodulator1/Multiplier2/rego_o_12 , 
         \AMDemodulator1/Multiplier2/rego_o_11 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_3 , 
         \AMDemodulator1/Multiplier2/rego_o_14 , 
         \AMDemodulator1/Multiplier2/rego_o_13 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_4 , 
         \AMDemodulator1/Multiplier2/rego_o_16 , 
         \AMDemodulator1/Multiplier2/rego_o_15 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_5 , 
         \AMDemodulator1/Multiplier2/rego_o_18 , 
         \AMDemodulator1/Multiplier2/rego_o_17 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_6 , 
         \AMDemodulator1/Multiplier2/rego_o_20 , 
         \AMDemodulator1/Multiplier2/rego_o_19 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_7 , 
         \AMDemodulator1/Multiplier2/rego_o_22 , 
         \AMDemodulator1/Multiplier2/rego_o_21 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_8 , 
         \AMDemodulator1/Multiplier2/rego_o_23 , 
         \AMDemodulator1/Multiplier2/regb_b_0 , 
         \AMDemodulator1/Multiplier2/rega_a_2 , 
         \AMDemodulator1/Multiplier2/regb_b_1 , 
         \AMDemodulator1/Multiplier2/rega_a_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_1 , 
         \AMDemodulator1/Multiplier2/rego_o_1 , 
         \AMDemodulator1/Multiplier2/mco , 
         \AMDemodulator1/Multiplier2/rega_a_4 , 
         \AMDemodulator1/Multiplier2/rega_a_3 , 
         \AMDemodulator1/Multiplier2/mco_1 , 
         \AMDemodulator1/Multiplier2/rega_a_6 , 
         \AMDemodulator1/Multiplier2/rega_a_5 , 
         \AMDemodulator1/Multiplier2/mco_2 , 
         \AMDemodulator1/Multiplier2/rega_a_8 , 
         \AMDemodulator1/Multiplier2/rega_a_7 , 
         \AMDemodulator1/Multiplier2/mco_3 , 
         \AMDemodulator1/Multiplier2/rega_a_10 , 
         \AMDemodulator1/Multiplier2/rega_a_9 , 
         \AMDemodulator1/Multiplier2/mco_4 , VCC_net, 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_2 , 
         \AMDemodulator1/Multiplier2/regb_b_3 , 
         \AMDemodulator1/Multiplier2/mco_5 , 
         \AMDemodulator1/Multiplier2/mco_6 , 
         \AMDemodulator1/Multiplier2/mco_7 , 
         \AMDemodulator1/Multiplier2/mco_8 , 
         \AMDemodulator1/Multiplier2/mco_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_4 , 
         \AMDemodulator1/Multiplier2/regb_b_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier2/mco_10 , 
         \AMDemodulator1/Multiplier2/mco_11 , 
         \AMDemodulator1/Multiplier2/mco_12 , 
         \AMDemodulator1/Multiplier2/mco_13 , 
         \AMDemodulator1/Multiplier2/mco_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_6 , 
         \AMDemodulator1/Multiplier2/regb_b_7 , 
         \AMDemodulator1/Multiplier2/mco_15 , 
         \AMDemodulator1/Multiplier2/mco_16 , 
         \AMDemodulator1/Multiplier2/mco_17 , 
         \AMDemodulator1/Multiplier2/mco_18 , 
         \AMDemodulator1/Multiplier2/mco_19 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_8 , 
         \AMDemodulator1/Multiplier2/regb_b_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier2/mco_20 , 
         \AMDemodulator1/Multiplier2/mco_21 , 
         \AMDemodulator1/Multiplier2/mco_22 , 
         \AMDemodulator1/Multiplier2/mco_23 , 
         \AMDemodulator1/Multiplier2/mco_24 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n0 , 
         \AMDemodulator1/Multiplier2/mco_25 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n0 , 
         \AMDemodulator1/Multiplier2/mco_26 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n0 , 
         \AMDemodulator1/Multiplier2/mco_27 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n0 , 
         \AMDemodulator1/Multiplier2/mco_28 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n0 , 
         \AMDemodulator1/Multiplier2/mco_29 , 
         \AMDemodulator1/Multiplier2/regb_b_11 , 
         \AMDemodulator1/Multiplier2/rega_a_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n0 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_0 , 
         \AMDemodulator1/Multiplier1/mfco , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_13 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_2 , 
         \AMDemodulator1/Multiplier1/mfco_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_15 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_4 , 
         \AMDemodulator1/Multiplier1/mfco_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_17 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_6 , 
         \AMDemodulator1/Multiplier1/mfco_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_19 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_8 , 
         \AMDemodulator1/Multiplier1/mfco_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_21 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_10 , 
         \AMDemodulator1/Multiplier1/mfco_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_23 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_2 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier1/rego_o_2 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_3 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier1/rego_o_3 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_5 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_7 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_6 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_7 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_13 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_15 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_15 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_18 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_17 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_13 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_15 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_15 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_18 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_18 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_17 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_17 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_20 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_20 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_19 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_19 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_22 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_21 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier1/rego_o_4 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_1 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier1/rego_o_6 , 
         \AMDemodulator1/Multiplier1/rego_o_5 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_2 , 
         \AMDemodulator1/Multiplier1/rego_o_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_3 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_4 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_5 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_6 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_15 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_17 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_18 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_19 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_20 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_21 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_22 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_23 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_8 , 
         \AMDemodulator1/Multiplier1/rego_o_8 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_1 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier1/rego_o_10 , 
         \AMDemodulator1/Multiplier1/rego_o_9 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_2 , 
         \AMDemodulator1/Multiplier1/rego_o_12 , 
         \AMDemodulator1/Multiplier1/rego_o_11 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_3 , 
         \AMDemodulator1/Multiplier1/rego_o_14 , 
         \AMDemodulator1/Multiplier1/rego_o_13 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_4 , 
         \AMDemodulator1/Multiplier1/rego_o_16 , 
         \AMDemodulator1/Multiplier1/rego_o_15 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_5 , 
         \AMDemodulator1/Multiplier1/rego_o_18 , 
         \AMDemodulator1/Multiplier1/rego_o_17 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_6 , 
         \AMDemodulator1/Multiplier1/rego_o_20 , 
         \AMDemodulator1/Multiplier1/rego_o_19 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_7 , 
         \AMDemodulator1/Multiplier1/rego_o_22 , 
         \AMDemodulator1/Multiplier1/rego_o_21 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_8 , 
         \AMDemodulator1/Multiplier1/rego_o_23 , 
         \AMDemodulator1/Multiplier1/regb_b_0 , 
         \AMDemodulator1/Multiplier1/rega_a_2 , 
         \AMDemodulator1/Multiplier1/regb_b_1 , 
         \AMDemodulator1/Multiplier1/rega_a_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_1 , 
         \AMDemodulator1/Multiplier1/rego_o_1 , 
         \AMDemodulator1/Multiplier1/mco , 
         \AMDemodulator1/Multiplier1/rega_a_4 , 
         \AMDemodulator1/Multiplier1/rega_a_3 , 
         \AMDemodulator1/Multiplier1/mco_1 , 
         \AMDemodulator1/Multiplier1/rega_a_6 , 
         \AMDemodulator1/Multiplier1/rega_a_5 , 
         \AMDemodulator1/Multiplier1/mco_2 , 
         \AMDemodulator1/Multiplier1/rega_a_8 , 
         \AMDemodulator1/Multiplier1/rega_a_7 , 
         \AMDemodulator1/Multiplier1/mco_3 , 
         \AMDemodulator1/Multiplier1/rega_a_10 , 
         \AMDemodulator1/Multiplier1/rega_a_9 , 
         \AMDemodulator1/Multiplier1/mco_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_2 , 
         \AMDemodulator1/Multiplier1/regb_b_3 , 
         \AMDemodulator1/Multiplier1/mco_5 , 
         \AMDemodulator1/Multiplier1/mco_6 , 
         \AMDemodulator1/Multiplier1/mco_7 , 
         \AMDemodulator1/Multiplier1/mco_8 , 
         \AMDemodulator1/Multiplier1/mco_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_4 , 
         \AMDemodulator1/Multiplier1/regb_b_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier1/mco_10 , 
         \AMDemodulator1/Multiplier1/mco_11 , 
         \AMDemodulator1/Multiplier1/mco_12 , 
         \AMDemodulator1/Multiplier1/mco_13 , 
         \AMDemodulator1/Multiplier1/mco_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_6 , 
         \AMDemodulator1/Multiplier1/regb_b_7 , 
         \AMDemodulator1/Multiplier1/mco_15 , 
         \AMDemodulator1/Multiplier1/mco_16 , 
         \AMDemodulator1/Multiplier1/mco_17 , 
         \AMDemodulator1/Multiplier1/mco_18 , 
         \AMDemodulator1/Multiplier1/mco_19 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_8 , 
         \AMDemodulator1/Multiplier1/regb_b_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier1/mco_20 , 
         \AMDemodulator1/Multiplier1/mco_21 , 
         \AMDemodulator1/Multiplier1/mco_22 , 
         \AMDemodulator1/Multiplier1/mco_23 , 
         \AMDemodulator1/Multiplier1/mco_24 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n0 , 
         \AMDemodulator1/Multiplier1/mco_25 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n0 , 
         \AMDemodulator1/Multiplier1/mco_26 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n0 , 
         \AMDemodulator1/Multiplier1/mco_27 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n0 , 
         \AMDemodulator1/Multiplier1/mco_28 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n0 , 
         \AMDemodulator1/Multiplier1/mco_29 , 
         \AMDemodulator1/Multiplier1/regb_b_11 , 
         \AMDemodulator1/Multiplier1/rega_a_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n0 , 
         \AMDemodulator1/ISquare_31_N_1894_0 , CIC1_outSin_1, CIC1_outSin_0, 
         \AMDemodulator1/MultDataB_0 , \AMDemodulator1/MultDataB_1 , 
         CIC1_outSin_3, CIC1_outSin_2, \AMDemodulator1/MultDataB_2 , 
         \AMDemodulator1/MultDataB_3 , CIC1_outSin_5, CIC1_outSin_4, 
         \AMDemodulator1/MultDataB_4 , \AMDemodulator1/MultDataB_5 , MYLED_c_1, 
         MYLED_c_0, \AMDemodulator1/MultDataB_6 , \AMDemodulator1/MultDataB_7 , 
         MYLED_c_3, MYLED_c_2, \AMDemodulator1/MultDataB_8 , 
         \AMDemodulator1/MultDataB_9 , MYLED_c_5, MYLED_c_4, 
         \AMDemodulator1/MultDataB_10 , \AMDemodulator1/MultDataB_11 , 
         CIC1_outCos_1, CIC1_outCos_0, \AMDemodulator1/MultDataC_0 , 
         \AMDemodulator1/MultDataC_1 , CIC1_outCos_3, CIC1_outCos_2, 
         \AMDemodulator1/MultDataC_2 , \AMDemodulator1/MultDataC_3 , 
         CIC1_outCos_5, CIC1_outCos_4, \AMDemodulator1/MultDataC_4 , 
         \AMDemodulator1/MultDataC_5 , CIC1_outCos_7, CIC1_outCos_6, 
         \AMDemodulator1/MultDataC_6 , \AMDemodulator1/MultDataC_7 , 
         CIC1_outCos_9, CIC1_outCos_8, \AMDemodulator1/MultDataC_8 , 
         \AMDemodulator1/MultDataC_9 , CIC1_outCos_11, CIC1_outCos_10, 
         \AMDemodulator1/MultDataC_10 , \AMDemodulator1/MultDataC_11 , 
         \AMDemodulator1/Multiplier1/rego_o_0 , 
         \AMDemodulator1/Multiplier2/rego_o_0 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_8 , 
         \AMDemodulator1/d_out_d_11__N_1890 , 
         \AMDemodulator1/d_out_d_11_N_1893_17 , \AMDemodulator1/d_out_d_0 , 
         \AMDemodulator1/d_out_d_1 , \AMDemodulator1/d_out_d_11__N_1886 , 
         \AMDemodulator1/d_out_d_11__N_1888 , \AMDemodulator1/d_out_d_2 , 
         \AMDemodulator1/d_out_d_3 , \AMDemodulator1/d_out_d_11__N_1882 , 
         \AMDemodulator1/d_out_d_11__N_1884 , \AMDemodulator1/d_out_d_4 , 
         \AMDemodulator1/d_out_d_5 , \AMDemodulator1/d_out_d_11__N_1880 , 
         \AMDemodulator1/d_out_d_6 , \AMDemodulator1/d_out_d_7 , 
         \AMDemodulator1/d_out_d_8 , \AMDemodulator1/d_out_d_9 , \CIC1Cos/n31 , 
         \CIC1Cos/count_15_N_1441_0 , \CIC1Cos/osc_clk_enable_743 , 
         \CIC1Cos/n19 , \CIC1Cos/count_15_N_1441_11 , 
         \CIC1Cos/count_15__N_1457 , \CIC1Cos/n15 , \CIC1Cos/d10_71_N_1746_57 , 
         \CIC1Cos/osc_clk_enable_1383 , \CIC1Cos/d10_57 , 
         \CIC1Cos/d10_71_N_1746_58 , \CIC1Cos/v_comb , \CIC1Cos/d10_58 , 
         \CIC1Cos/d1_71_N_417_0 , \CIC1Cos/d2_71_N_489_0 , 
         \CIC1Cos/d3_71_N_561_0 , \CIC1Cos/d4_71_N_633_0 , 
         \CIC1Cos/d5_71_N_705_0 , \CIC1Cos/osc_clk_enable_1083 , 
         \CIC1Cos/osc_clk_enable_1233 , \CIC1Cos/n13228 , \CIC1Cos/n13250 , 
         \CIC1Cos/n13 , \CIC1Cos/n13248 , \CIC1Sin/n31 , 
         \CIC1Sin/count_15_N_1441_0 , \CIC1Sin/osc_clk_enable_62 , 
         \CIC1Sin/n21 , \CIC1Sin/count_15_N_1441_11 , 
         \CIC1Sin/d_clk_tmp_N_1830 , \CIC1Sin/n15 , \CIC1Sin/d10_71_N_1746_57 , 
         \CIC1Sin/osc_clk_enable_696 , \CIC1Sin/d10_57 , 
         \CIC1Sin/d10_71_N_1746_59 , \CIC1Sin/d10_71_N_1746_58 , 
         \CIC1Sin/v_comb , \CIC1Sin/d10_58 , \CIC1Sin/d10_59 , 
         \CIC1Sin/d10_71_N_1746_61 , \CIC1Sin/d10_71_N_1746_60 , 
         \CIC1Sin/d10_60 , \CIC1Sin/d10_61 , \CIC1Sin/d10_71_N_1746_63 , 
         \CIC1Sin/d10_71_N_1746_62 , \CIC1Sin/d10_62 , \CIC1Sin/d10_63 , 
         \CIC1Sin/d10_71_N_1746_65 , \CIC1Sin/d10_71_N_1746_64 , 
         \CIC1Sin/d10_64 , \CIC1Sin/d10_65 , \CIC1Sin/d10_71_N_1746_67 , 
         \CIC1Sin/d10_71_N_1746_66 , \CIC1Sin/d10_66 , \CIC1Sin/d10_67 , 
         \CIC1Sin/d10_71_N_1746_69 , \CIC1Sin/d10_71_N_1746_68 , 
         \CIC1Sin/d10_68 , \CIC1Sin/d10_69 , \CIC1Sin/d10_71_N_1746_71 , 
         \CIC1Sin/d10_71_N_1746_70 , \CIC1Sin/d10_70 , \CIC1Sin/d10_71 , 
         \CIC1Sin/d1_71_N_417_0 , \CIC1Sin/d2_71_N_489_0 , 
         \CIC1Sin/d3_71_N_561_0 , \CIC1Sin/d4_71_N_633_0 , 
         \CIC1Sin/d5_71_N_705_0 , \CIC1Sin/n16 , \CIC1Sin/n19 , 
         \CIC1Sin/d_clk_tmp , \CIC1Sin/n8331 , \CIC1Sin/osc_clk_enable_396 , 
         \CIC1Sin/osc_clk_enable_546 , \CIC1Sin/n13238 , \CIC1Sin/n13254 , 
         \CIC1Sin/n13 , \CIC1Sin/n13252 , d10_59, CICGain_1, n61, 
         \CIC1Cos/d_out_11_N_1818_0 , CICGain_0, d10_60, n62, 
         \CIC1Cos/d_out_11_N_1818_1 , \CIC1Sin/n132_adj_2579 , n64, 
         \CIC1Sin/n131_adj_2576 , n63, d_out_11_N_1818_3, d_out_11_N_1818_2, 
         \CIC1Sin/n134_adj_2598 , n66, \CIC1Sin/n133_adj_2596 , n65, 
         d_out_11_N_1818_5, d_out_11_N_1818_4, \CIC1Sin/n136_adj_2594 , n68, 
         \CIC1Sin/n135_adj_2591 , n67, d_out_11_N_1818_7, d_out_11_N_1818_6, 
         \CIC1Sin/n138_adj_2588 , n70, d10_68, \CIC1Sin/n137_adj_2585 , 
         d_out_11_N_1818_9, d_out_11_N_1818_8, d10_67, d10_70, d10_69, 
         d_out_11_N_1818_10, \CIC1Sin/n140_adj_2582 , d10_71, 
         d_out_11_N_1818_11, \CIC1Sin/n61 , \CIC1Sin/d_out_11_N_1818_0 , 
         \CIC1Sin/n62 , \CIC1Sin/d_out_11_N_1818_1 , \CIC1Sin/n132 , 
         \CIC1Sin/n64 , \CIC1Sin/n131 , \CIC1Sin/n63 , 
         \CIC1Sin/d_out_11_N_1818_3 , \CIC1Sin/d_out_11_N_1818_2 , 
         \CIC1Sin/n134 , \CIC1Sin/n66 , \CIC1Sin/n133 , \CIC1Sin/n65 , 
         \CIC1Sin/d_out_11_N_1818_5 , \CIC1Sin/d_out_11_N_1818_4 , n7319, 
         o_Rx_Byte_c_0, osc_clk_enable_1393, DataInReg_11_N_1855_0, 
         DataInReg_11_N_1855_1, DataInReg_11_N_1855_2, DataInReg_11_N_1855_3, 
         DataInReg_11_N_1855_4, DataInReg_11_N_1855_5, DataInReg_11_N_1855_6, 
         DataInReg_11_N_1855_7, DataInReg_11_N_1855_8, DemodOut_9, 
         \SinCos1/out_sel , \SinCos1/cosromoutsel , \SinCos1/cosout_pre_2 , 
         \SinCos1/cosout_pre_1 , \SinCos1/cosout_pre_4 , 
         \SinCos1/cosout_pre_3 , \SinCos1/cosout_pre_6 , 
         \SinCos1/cosout_pre_5 , \SinCos1/cosout_pre_8 , 
         \SinCos1/cosout_pre_7 , \SinCos1/cosout_pre_10 , 
         \SinCos1/cosout_pre_9 , \SinCos1/cosout_pre_12 , 
         \SinCos1/cosout_pre_11 , \SinCos1/sinromoutsel , 
         \SinCos1/sinout_pre_2 , \SinCos1/sinout_pre_1 , 
         \SinCos1/sinout_pre_4 , \SinCos1/sinout_pre_3 , 
         \SinCos1/sinout_pre_6 , \SinCos1/sinout_pre_5 , 
         \SinCos1/sinout_pre_8 , \SinCos1/sinout_pre_7 , 
         \SinCos1/sinout_pre_10 , \SinCos1/sinout_pre_9 , 
         \SinCos1/mx_ctrl_r_1 , \SinCos1/rom_dout_s_12 , 
         \SinCos1/sinout_pre_12 , \SinCos1/sinout_pre_11 , \CIC1Sin/n136 , 
         \CIC1Sin/n68 , \CIC1Sin/n135 , \CIC1Sin/n67 , 
         \CIC1Sin/d_out_11_N_1818_7 , \CIC1Sin/d_out_11_N_1818_6 , 
         \CIC1Sin/n138 , \CIC1Sin/n70 , \CIC1Sin/n137 , 
         \CIC1Sin/d_out_11_N_1818_9 , \CIC1Sin/d_out_11_N_1818_8 , 
         \CIC1Sin/d_out_11_N_1818_10 , \CIC1Sin/n140 , 
         \CIC1Sin/d_out_11_N_1818_11 , RFIn_c, DiffOut_c, \Mixer1/RFInR , 
         \Mixer1/MixerOutCos_11_N_223_1 , \Mixer1/MixerOutCos_11_N_223_0 , 
         \Mixer1/MixerOutCos_11_N_223_3 , \Mixer1/MixerOutCos_11_N_223_2 , 
         \Mixer1/MixerOutCos_11_N_223_5 , \Mixer1/MixerOutCos_11_N_223_4 , 
         \Mixer1/MixerOutCos_11_N_223_7 , \Mixer1/MixerOutCos_11_N_223_6 , 
         \Mixer1/MixerOutCos_11_N_223_9 , \Mixer1/MixerOutCos_11_N_223_8 , 
         \Mixer1/MixerOutCos_11_N_223_11 , \Mixer1/MixerOutCos_11_N_223_10 , 
         \Mixer1/MixerOutSin_11_N_211_1 , \Mixer1/MixerOutSin_11_N_211_0 , 
         \Mixer1/MixerOutSin_11_N_211_3 , \Mixer1/MixerOutSin_11_N_211_2 , 
         \Mixer1/MixerOutSin_11_N_211_5 , \Mixer1/MixerOutSin_11_N_211_4 , 
         \Mixer1/MixerOutSin_11_N_211_7 , \Mixer1/MixerOutSin_11_N_211_6 , 
         \Mixer1/MixerOutSin_11_N_211_9 , \Mixer1/MixerOutSin_11_N_211_8 , 
         \Mixer1/MixerOutSin_11_N_211_11 , \Mixer1/MixerOutSin_11_N_211_10 , 
         \PWM1/osc_clk_enable_1392 , \PWM1/n3825 , \SinCos1/mx_ctrl_r , 
         \SinCos1/cosromoutsel_i , \SinCos1/func_or_inet , 
         \SinCos1/rom_addr0_r_10 , \SinCos1/rom_addr0_r_11 , 
         \SinCos1/out_sel_i , \SinCos1/rom_addr0_r_9 , \SinCos1/rom_addr0_r_8 , 
         \SinCos1/rom_addr0_r_7 , \SinCos1/rom_dout_ffin , 
         \SinCos1/rom_addr0_r_6 , \SinCos1/triglut_1_0_13_1_f5b , 
         \SinCos1/triglut_1_0_13_0_f5a , \SinCos1/rom_dout_1_ffin , 
         \SinCos1/triglut_1_0_14_1_f5b , \SinCos1/triglut_1_0_14_0_f5a , 
         \SinCos1/rom_dout_2_ffin , \SinCos1/triglut_1_0_15_1_f5b , 
         \SinCos1/triglut_1_0_15_0_f5a , \SinCos1/rom_dout_3_ffin , 
         \SinCos1/triglut_1_0_16_1_f5b , \SinCos1/triglut_1_0_16_0_f5a , 
         \SinCos1/rom_dout_4_ffin , \SinCos1/triglut_1_0_17_1_f5b , 
         \SinCos1/triglut_1_0_17_0_f5a , \SinCos1/rom_dout_5_ffin , 
         \SinCos1/triglut_1_0_18_1_f5b , \SinCos1/triglut_1_0_18_0_f5a , 
         \SinCos1/rom_dout_6_ffin , \SinCos1/triglut_1_0_19_1_f5b , 
         \SinCos1/triglut_1_0_19_0_f5a , \SinCos1/rom_dout_7_ffin , 
         \SinCos1/triglut_1_0_20_1_f5b , \SinCos1/triglut_1_0_20_0_f5a , 
         \SinCos1/rom_dout_8_ffin , \SinCos1/triglut_1_0_21_1_f5b , 
         \SinCos1/triglut_1_0_21_0_f5a , \SinCos1/rom_dout_9_ffin , 
         \SinCos1/triglut_1_0_22_1_f5b , \SinCos1/triglut_1_0_22_0_f5a , 
         \SinCos1/rom_dout_10_ffin , \SinCos1/triglut_1_0_23_1_f5b , 
         \SinCos1/triglut_1_0_23_0_f5a , \SinCos1/rom_dout_13_ffin , 
         \SinCos1/triglut_1_0_0_1_f5b , \SinCos1/triglut_1_0_0_0_f5a , 
         \SinCos1/rom_dout_14_ffin , \SinCos1/triglut_1_0_1_1_f5b , 
         \SinCos1/triglut_1_0_1_0_f5a , \SinCos1/rom_dout_15_ffin , 
         \SinCos1/triglut_1_0_2_1_f5b , \SinCos1/triglut_1_0_2_0_f5a , 
         \SinCos1/rom_dout_16_ffin , \SinCos1/triglut_1_0_3_1_f5b , 
         \SinCos1/triglut_1_0_3_0_f5a , \SinCos1/rom_dout_17_ffin , 
         \SinCos1/triglut_1_0_4_1_f5b , \SinCos1/triglut_1_0_4_0_f5a , 
         \SinCos1/rom_dout_18_ffin , \SinCos1/triglut_1_0_5_1_f5b , 
         \SinCos1/triglut_1_0_5_0_f5a , \SinCos1/rom_dout_19_ffin , 
         \SinCos1/triglut_1_0_6_1_f5b , \SinCos1/triglut_1_0_6_0_f5a , 
         \SinCos1/rom_dout_20_ffin , \SinCos1/triglut_1_0_7_1_f5b , 
         \SinCos1/triglut_1_0_7_0_f5a , \SinCos1/rom_dout_21_ffin , 
         \SinCos1/triglut_1_0_8_1_f5b , \SinCos1/triglut_1_0_8_0_f5a , 
         \SinCos1/rom_dout_22_ffin , \SinCos1/triglut_1_0_9_1_f5b , 
         \SinCos1/triglut_1_0_9_0_f5a , \SinCos1/rom_dout_23_ffin , 
         \SinCos1/triglut_1_0_10_1_f5b , \SinCos1/triglut_1_0_10_0_f5a , 
         \SinCos1/rom_dout_24_ffin , \SinCos1/triglut_1_0_11_1_f5b , 
         \SinCos1/triglut_1_0_11_0_f5a , \CIC1Cos/d10_71_N_1746_60 , 
         \CIC1Cos/d10_71_N_1746_59 , \CIC1Cos/d10_71_N_1746_62 , 
         \CIC1Cos/d10_71_N_1746_61 , d10_61, d10_62, 
         \CIC1Cos/d10_71_N_1746_64 , \CIC1Cos/d10_71_N_1746_63 , d10_63, 
         d10_64, \CIC1Cos/d10_71_N_1746_66 , \CIC1Cos/d10_71_N_1746_65 , 
         d10_65, d10_66, \CIC1Cos/d10_71_N_1746_68 , 
         \CIC1Cos/d10_71_N_1746_67 , \CIC1Cos/d10_71_N_1746_70 , 
         \CIC1Cos/d10_71_N_1746_69 , \CIC1Cos/d10_71_N_1746_71 , 
         \ncoGen/phase_accum_63_N_145_0 , \uart_rx1/r_Rx_Byte_2 , 
         \uart_rx1/r_Rx_Byte_0 , \uart_rx1/r_Rx_DV_N_2483 , o_Rx_Byte_c_2, 
         \uart_rx1/r_Rx_Byte_4 , \uart_rx1/r_Rx_Byte_3 , o_Rx_Byte_c_3, 
         \uart_rx1/r_Rx_Byte_6 , \uart_rx1/r_Rx_Byte_5 , o_Rx_Byte_c_5, 
         o_Rx_Byte_c_6, \uart_rx1/r_Rx_DV_last , 
         \uart_rx1/r_Rx_DV_last_N_2482 , \uart_rx1/r_Rx_DV , o_Rx_DV_c_0, 
         \uart_tx1/r_Bit_Index_1 , \uart_tx1/r_Bit_Index_2 , 
         \uart_tx1/r_Bit_Index_0 , \uart_tx1/r_SM_Main_1 , \uart_tx1/n9244 , 
         \uart_tx1/r_SM_Main_0 , \uart_tx1/n39 , o_Tx_Serial_c, 
         \uart_tx1/n13766 , phase_inc_carrGen_1, phase_inc_carrGen_0, n2738, 
         n2739, osc_clk_enable_1458, n8366, \uart_rx1/r_SM_Main_1 , 
         \uart_rx1/r_SM_Main_0 , \uart_rx1/n10 , 
         \uart_rx1/r_SM_Main_2_N_2417_2 , \uart_rx1/r_Bit_Index_0 , 
         \uart_rx1/n13050 , \uart_rx1/n13030 , \uart_rx1/UartClk_2_enable_10 , 
         \uart_rx1/r_Bit_Index_1 , \uart_rx1/r_Bit_Index_2 , \uart_rx1/n13870 , 
         \uart_rx1/n13872 , \uart_rx1/r_Rx_Data , 
         \uart_rx1/UartClk_2_enable_52 , \uart_rx1/UartClk_2_enable_29 , 
         \uart_rx1/r_Rx_Byte_1 , \uart_rx1/UartClk_2_enable_22 , 
         \uart_rx1/UartClk_2_enable_21 , \uart_rx1/UartClk_2_enable_18 , 
         \uart_rx1/UartClk_2_enable_15 , \uart_rx1/UartClk_2_enable_13 , 
         \uart_rx1/UartClk_2_enable_11 , \uart_rx1/r_Rx_Byte_7 , 
         \uart_rx1/r_SM_Main_2 , \uart_rx1/UartClk_2_enable_17 , 
         \uart_rx1/r_Rx_Data_R , i_Rx_Serial_c, \uart_rx1/n8940 , 
         \uart_rx1/n12362 , \uart_rx1/n13769 , \uart_rx1/n13545 , 
         \uart_rx1/n13756 , \uart_rx1/n13781 , \uart_rx1/n13782 , 
         \uart_rx1/n12870 , \uart_rx1/n8998 , \uart_rx1/n12904 , 
         \uart_tx1/n13755 , \uart_tx1/r_SM_Main_2_N_2530_1 , \uart_tx1/n13046 , 
         \uart_tx1/n3_adj_2612 , \uart_tx1/UartClk_2_enable_5 , \uart_tx1/n3 , 
         \uart_tx1/n3_adj_2615 , \uart_tx1/n3_adj_2614 , \uart_tx1/n7667 , 
         \uart_tx1/n6 , \uart_tx1/n50 , \uart_tx1/n7 , \uart_tx1/n13013 , 
         \uart_tx1/UartClk_2_enable_40 , \uart_tx1/r_Tx_Data_0 , 
         \uart_tx1/r_Tx_Data_1 , \uart_tx1/r_Tx_Data_2 , 
         \uart_tx1/r_Tx_Data_3 , \uart_tx1/r_Tx_Data_4 , 
         \uart_tx1/r_Tx_Data_5 , o_Rx_Byte_c_7, \uart_tx1/r_Tx_Data_6 , 
         \uart_tx1/r_Tx_Data_7 , \uart_tx1/n13263 , \uart_tx1/n13260 , n13833, 
         n13818, n14097, n13806, n13803, n13797, n41, n14103, n14100, n2579, 
         n2710, n2565, n2696, n2581, n2712, n2586, n2717, n2601, n2732, n2600, 
         n2731, n2567, n2698, n2573, n2704, n2570, n2701, n8967, n13757, 
         n12872, n13765, \uart_tx1/n13147 , n13151, n4, n12896, n12900, n12946, 
         n2551, n2682, n2577, n2708, n2552, n2683, n2591, n2722, n2594, n2725, 
         n2550, n2681, n2580, n2711, n2596, n2727, \PWM1/n12 , \PWM1/n11 , 
         \PWM1/n15 , \PWM1/n17 , n2215, n2728, n2335, n2314, n2707, n13811, 
         n13810, n13791, n2301, n2694, n2316, n2709, n2299, n2692, n13838, 
         n13837, n13788, n57, n2687, n13753, n2595, \uart_tx1/n8994 , 
         \uart_tx1/n13031 , n13775, n13783, n13785, n7986, n8210, n2309, n2702, 
         n22, n2555, n2296, n2689, n2295, n2688, n13839, n13776, n2559, n2690, 
         n2693, n13823, n13822, n13836, n13812, n2699, n2700, n2548, n2310, 
         n7695, \CIC1Sin/n7 , \CIC1Sin/n12864 , \CIC1Sin/n14123 , n6, n9, 
         n13815, n13824, n13763, n2714, n8992, n13767, n7, n9_adj_2616, n2715, 
         n8980, n2330, n2723, n2331, n2724, \CIC1Cos/n16 , \CIC1Cos/n21 , 
         \CIC1Cos/n12867 , \CIC1Cos/n14125 , \CIC1Cos/n7 , \uart_rx1/n12914 , 
         \uart_rx1/n13754 , \uart_rx1/n24 , \uart_rx1/n13187 , 
         \uart_rx1/n13750 , \uart_rx1/n13760 , \uart_rx1/n13179 , 
         \uart_rx1/n13161 , \uart_rx1/n13163 , \uart_rx1/n13171 , sinGen_c, 
         GND_net, XIn_c, VCCI;

  Mixer1_SLICE_0 \Mixer1/SLICE_0 ( .A0(LOCosine_12), .FCI(\Mixer1/n11216 ), 
    .F0(\Mixer1/MixerOutCos_11_N_249_11 ));
  Mixer1_SLICE_1 \Mixer1/SLICE_1 ( .A1(LOCosine_11), .A0(LOCosine_10), 
    .FCI(\Mixer1/n11215 ), .F0(\Mixer1/MixerOutCos_11_N_249_9 ), 
    .F1(\Mixer1/MixerOutCos_11_N_249_10 ), .FCO(\Mixer1/n11216 ));
  Mixer1_SLICE_2 \Mixer1/SLICE_2 ( .A1(LOCosine_9), .A0(LOCosine_8), 
    .FCI(\Mixer1/n11214 ), .F0(\Mixer1/MixerOutCos_11_N_249_7 ), 
    .F1(\Mixer1/MixerOutCos_11_N_249_8 ), .FCO(\Mixer1/n11215 ));
  Mixer1_SLICE_3 \Mixer1/SLICE_3 ( .A1(LOCosine_7), .A0(LOCosine_6), 
    .FCI(\Mixer1/n11213 ), .F0(\Mixer1/MixerOutCos_11_N_249_5 ), 
    .F1(\Mixer1/MixerOutCos_11_N_249_6 ), .FCO(\Mixer1/n11214 ));
  Mixer1_SLICE_4 \Mixer1/SLICE_4 ( .A1(LOCosine_5), .A0(LOCosine_4), 
    .FCI(\Mixer1/n11212 ), .F0(\Mixer1/MixerOutCos_11_N_249_3 ), 
    .F1(\Mixer1/MixerOutCos_11_N_249_4 ), .FCO(\Mixer1/n11213 ));
  Mixer1_SLICE_5 \Mixer1/SLICE_5 ( .A1(LOCosine_3), .A0(LOCosine_2), 
    .FCI(\Mixer1/n11211 ), .F0(\Mixer1/MixerOutCos_11_N_249_1 ), 
    .F1(\Mixer1/MixerOutCos_11_N_249_2 ), .FCO(\Mixer1/n11212 ));
  Mixer1_SLICE_6 \Mixer1/SLICE_6 ( .A1(LOCosine_1), 
    .F1(\Mixer1/MixerOutCos_11_N_249_0 ), .FCO(\Mixer1/n11211 ));
  Mixer1_SLICE_7 \Mixer1/SLICE_7 ( .A0(LOSine_12), .FCI(\Mixer1/n11196 ), 
    .F0(\Mixer1/MixerOutSin_11_N_235_11 ));
  Mixer1_SLICE_8 \Mixer1/SLICE_8 ( .A1(LOSine_11), .A0(LOSine_10), 
    .FCI(\Mixer1/n11195 ), .F0(\Mixer1/MixerOutSin_11_N_235_9 ), 
    .F1(\Mixer1/MixerOutSin_11_N_235_10 ), .FCO(\Mixer1/n11196 ));
  Mixer1_SLICE_9 \Mixer1/SLICE_9 ( .A1(LOSine_9), .A0(LOSine_8), 
    .FCI(\Mixer1/n11194 ), .F0(\Mixer1/MixerOutSin_11_N_235_7 ), 
    .F1(\Mixer1/MixerOutSin_11_N_235_8 ), .FCO(\Mixer1/n11195 ));
  Mixer1_SLICE_10 \Mixer1/SLICE_10 ( .A1(LOSine_7), .A0(LOSine_6), 
    .FCI(\Mixer1/n11193 ), .F0(\Mixer1/MixerOutSin_11_N_235_5 ), 
    .F1(\Mixer1/MixerOutSin_11_N_235_6 ), .FCO(\Mixer1/n11194 ));
  Mixer1_SLICE_11 \Mixer1/SLICE_11 ( .A1(LOSine_5), .A0(LOSine_4), 
    .FCI(\Mixer1/n11192 ), .F0(\Mixer1/MixerOutSin_11_N_235_3 ), 
    .F1(\Mixer1/MixerOutSin_11_N_235_4 ), .FCO(\Mixer1/n11193 ));
  Mixer1_SLICE_12 \Mixer1/SLICE_12 ( .A1(LOSine_3), .A0(LOSine_2), 
    .FCI(\Mixer1/n11191 ), .F0(\Mixer1/MixerOutSin_11_N_235_1 ), 
    .F1(\Mixer1/MixerOutSin_11_N_235_2 ), .FCO(\Mixer1/n11192 ));
  Mixer1_SLICE_13 \Mixer1/SLICE_13 ( .A1(LOSine_1), 
    .F1(\Mixer1/MixerOutSin_11_N_235_0 ), .FCO(\Mixer1/n11191 ));
  PWM1_SLICE_14 \PWM1/SLICE_14 ( .B0(\PWM1/counter_9 ), 
    .A0(\PWM1/DataInReg_9 ), .DI1(\PWM1/PWMOut_N_1868 ), .CLK(osc_clk), 
    .FCI(\PWM1/n11114 ), .F1(\PWM1/PWMOut_N_1868 ), .Q1(PWMOut_c));
  PWM1_SLICE_15 \PWM1/SLICE_15 ( .B1(\PWM1/counter_8 ), 
    .A1(\PWM1/DataInReg_8 ), .B0(\PWM1/counter_7 ), .A0(\PWM1/DataInReg_7 ), 
    .FCI(\PWM1/n11113 ), .FCO(\PWM1/n11114 ));
  PWM1_SLICE_16 \PWM1/SLICE_16 ( .B1(\PWM1/counter_6 ), 
    .A1(\PWM1/DataInReg_6 ), .B0(\PWM1/counter_5 ), .A0(\PWM1/DataInReg_5 ), 
    .FCI(\PWM1/n11112 ), .FCO(\PWM1/n11113 ));
  PWM1_SLICE_17 \PWM1/SLICE_17 ( .B1(\PWM1/counter_4 ), 
    .A1(\PWM1/DataInReg_4 ), .B0(\PWM1/counter_3 ), .A0(\PWM1/DataInReg_3 ), 
    .FCI(\PWM1/n11111 ), .FCO(\PWM1/n11112 ));
  PWM1_SLICE_18 \PWM1/SLICE_18 ( .B1(\PWM1/counter_2 ), 
    .A1(\PWM1/DataInReg_2 ), .B0(\PWM1/counter_1 ), .A0(\PWM1/DataInReg_1 ), 
    .FCI(\PWM1/n11110 ), .FCO(\PWM1/n11111 ));
  PWM1_SLICE_19 \PWM1/SLICE_19 ( .B1(\PWM1/counter_0 ), 
    .A1(\PWM1/DataInReg_0 ), .FCO(\PWM1/n11110 ));
  PWM1_SLICE_20 \PWM1/SLICE_20 ( .A0(\PWM1/counter_9 ), .DI0(\PWM1/n46 ), 
    .CLK(osc_clk), .FCI(\PWM1/n11616 ), .F0(\PWM1/n46 ), .Q0(\PWM1/counter_9 ));
  PWM1_SLICE_21 \PWM1/SLICE_21 ( .A1(\PWM1/counter_8 ), .A0(\PWM1/counter_7 ), 
    .DI1(\PWM1/n47 ), .DI0(\PWM1/n48 ), .CLK(osc_clk), .FCI(\PWM1/n11615 ), 
    .F0(\PWM1/n48 ), .Q0(\PWM1/counter_7 ), .F1(\PWM1/n47 ), 
    .Q1(\PWM1/counter_8 ), .FCO(\PWM1/n11616 ));
  PWM1_SLICE_22 \PWM1/SLICE_22 ( .A1(\PWM1/counter_6 ), .A0(\PWM1/counter_5 ), 
    .DI1(\PWM1/n49 ), .DI0(\PWM1/n50 ), .CLK(osc_clk), .FCI(\PWM1/n11614 ), 
    .F0(\PWM1/n50 ), .Q0(\PWM1/counter_5 ), .F1(\PWM1/n49 ), 
    .Q1(\PWM1/counter_6 ), .FCO(\PWM1/n11615 ));
  PWM1_SLICE_23 \PWM1/SLICE_23 ( .A1(\PWM1/counter_4 ), .A0(\PWM1/counter_3 ), 
    .DI1(\PWM1/n51 ), .DI0(\PWM1/n52 ), .CLK(osc_clk), .FCI(\PWM1/n11613 ), 
    .F0(\PWM1/n52 ), .Q0(\PWM1/counter_3 ), .F1(\PWM1/n51 ), 
    .Q1(\PWM1/counter_4 ), .FCO(\PWM1/n11614 ));
  PWM1_SLICE_24 \PWM1/SLICE_24 ( .A1(\PWM1/counter_2 ), .A0(\PWM1/counter_1 ), 
    .DI1(\PWM1/n53 ), .DI0(\PWM1/n54 ), .CLK(osc_clk), .FCI(\PWM1/n11612 ), 
    .F0(\PWM1/n54 ), .Q0(\PWM1/counter_1 ), .F1(\PWM1/n53 ), 
    .Q1(\PWM1/counter_2 ), .FCO(\PWM1/n11613 ));
  PWM1_SLICE_25 \PWM1/SLICE_25 ( .A1(\PWM1/counter_0 ), .DI1(\PWM1/n55 ), 
    .CLK(osc_clk), .F1(\PWM1/n55 ), .Q1(\PWM1/counter_0 ), .FCO(\PWM1/n11612 ));
  uart_tx1_SLICE_26 \uart_tx1/SLICE_26 ( .A0(\uart_tx1/r_Clock_Count_15 ), 
    .DI0(\uart_tx1/n70 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n8364 ), 
    .CLK(\uart_tx1/UartClk[2] ), .FCI(\uart_tx1/n12242 ), .F0(\uart_tx1/n70 ), 
    .Q0(\uart_tx1/r_Clock_Count_15 ));
  uart_tx1_SLICE_27 \uart_tx1/SLICE_27 ( .A1(\uart_tx1/r_Clock_Count_14 ), 
    .A0(\uart_tx1/r_Clock_Count_13 ), .DI1(\uart_tx1/n71 ), 
    .DI0(\uart_tx1/n72 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n8364 ), 
    .CLK(\uart_tx1/UartClk[2] ), .FCI(\uart_tx1/n12241 ), .F0(\uart_tx1/n72 ), 
    .Q0(\uart_tx1/r_Clock_Count_13 ), .F1(\uart_tx1/n71 ), 
    .Q1(\uart_tx1/r_Clock_Count_14 ), .FCO(\uart_tx1/n12242 ));
  uart_tx1_SLICE_28 \uart_tx1/SLICE_28 ( .A1(\uart_tx1/r_Clock_Count_12 ), 
    .A0(\uart_tx1/r_Clock_Count_11 ), .DI1(\uart_tx1/n73 ), 
    .DI0(\uart_tx1/n74 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n8364 ), 
    .CLK(\uart_tx1/UartClk[2] ), .FCI(\uart_tx1/n12240 ), .F0(\uart_tx1/n74 ), 
    .Q0(\uart_tx1/r_Clock_Count_11 ), .F1(\uart_tx1/n73 ), 
    .Q1(\uart_tx1/r_Clock_Count_12 ), .FCO(\uart_tx1/n12241 ));
  uart_tx1_SLICE_29 \uart_tx1/SLICE_29 ( .A1(\uart_tx1/r_Clock_Count_10 ), 
    .A0(\uart_tx1/r_Clock_Count_9 ), .DI1(\uart_tx1/n75 ), 
    .DI0(\uart_tx1/n76 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n8364 ), 
    .CLK(\uart_tx1/UartClk[2] ), .FCI(\uart_tx1/n12239 ), .F0(\uart_tx1/n76 ), 
    .Q0(\uart_tx1/r_Clock_Count_9 ), .F1(\uart_tx1/n75 ), 
    .Q1(\uart_tx1/r_Clock_Count_10 ), .FCO(\uart_tx1/n12240 ));
  uart_tx1_SLICE_30 \uart_tx1/SLICE_30 ( .A1(\uart_tx1/r_Clock_Count_8 ), 
    .A0(\uart_tx1/r_Clock_Count_7 ), .DI1(\uart_tx1/n77 ), 
    .DI0(\uart_tx1/n78 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n8364 ), 
    .CLK(\uart_tx1/UartClk[2] ), .FCI(\uart_tx1/n12238 ), .F0(\uart_tx1/n78 ), 
    .Q0(\uart_tx1/r_Clock_Count_7 ), .F1(\uart_tx1/n77 ), 
    .Q1(\uart_tx1/r_Clock_Count_8 ), .FCO(\uart_tx1/n12239 ));
  uart_tx1_SLICE_31 \uart_tx1/SLICE_31 ( .A1(\uart_tx1/r_Clock_Count_6 ), 
    .A0(\uart_tx1/r_Clock_Count_5 ), .DI1(\uart_tx1/n79 ), 
    .DI0(\uart_tx1/n80 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n8364 ), 
    .CLK(\uart_tx1/UartClk[2] ), .FCI(\uart_tx1/n12237 ), .F0(\uart_tx1/n80 ), 
    .Q0(\uart_tx1/r_Clock_Count_5 ), .F1(\uart_tx1/n79 ), 
    .Q1(\uart_tx1/r_Clock_Count_6 ), .FCO(\uart_tx1/n12238 ));
  uart_tx1_SLICE_32 \uart_tx1/SLICE_32 ( .A1(\uart_tx1/r_Clock_Count_4 ), 
    .A0(\uart_tx1/r_Clock_Count_3 ), .DI1(\uart_tx1/n81 ), 
    .DI0(\uart_tx1/n82 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n8364 ), 
    .CLK(\uart_tx1/UartClk[2] ), .FCI(\uart_tx1/n12236 ), .F0(\uart_tx1/n82 ), 
    .Q0(\uart_tx1/r_Clock_Count_3 ), .F1(\uart_tx1/n81 ), 
    .Q1(\uart_tx1/r_Clock_Count_4 ), .FCO(\uart_tx1/n12237 ));
  uart_tx1_SLICE_33 \uart_tx1/SLICE_33 ( .A1(\uart_tx1/r_Clock_Count_2 ), 
    .A0(\uart_tx1/r_Clock_Count_1 ), .DI1(\uart_tx1/n83 ), 
    .DI0(\uart_tx1/n84 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n8364 ), 
    .CLK(\uart_tx1/UartClk[2] ), .FCI(\uart_tx1/n12235 ), .F0(\uart_tx1/n84 ), 
    .Q0(\uart_tx1/r_Clock_Count_1 ), .F1(\uart_tx1/n83 ), 
    .Q1(\uart_tx1/r_Clock_Count_2 ), .FCO(\uart_tx1/n12236 ));
  uart_tx1_SLICE_34 \uart_tx1/SLICE_34 ( .A1(\uart_tx1/n16 ), 
    .DI1(\uart_tx1/n85 ), .CE(\uart_tx1/r_SM_Main_2 ), .LSR(\uart_tx1/n8364 ), 
    .CLK(\uart_tx1/UartClk[2] ), .F1(\uart_tx1/n85 ), .Q1(\uart_tx1/n16 ), 
    .FCO(\uart_tx1/n12235 ));
  uart_tx1_SLICE_35 \uart_tx1/SLICE_35 ( .A1(\uart_tx1/UartClk[2] ), 
    .A0(\uart_tx1/n2 ), .DI1(\uart_tx1/n18 ), .DI0(\uart_tx1/n19 ), 
    .CLK(osc_clk), .FCI(\uart_tx1/n11625 ), .F0(\uart_tx1/n19 ), 
    .Q0(\uart_tx1/n2 ), .F1(\uart_tx1/n18 ), .Q1(\uart_tx1/UartClk[2] ));
  uart_tx1_SLICE_36 \uart_tx1/SLICE_36 ( .A1(\uart_tx1/n3_adj_2613 ), 
    .DI1(\uart_tx1/n20 ), .CLK(osc_clk), .F1(\uart_tx1/n20 ), 
    .Q1(\uart_tx1/n3_adj_2613 ), .FCO(\uart_tx1/n11625 ));
  SLICE_37 SLICE_37( .D1(phase_inc_carrGen_63), .C1(n2217), .B1(n9004), 
    .D0(phase_inc_carrGen_62), .C0(n2218), .B0(n9004), .DI1(n2875), 
    .DI0(n2876), .CE(osc_clk_enable_1457), .CLK(osc_clk), .FCI(n12219), 
    .F0(n2876), .Q0(phase_inc_carrGen_62), .F1(n2875), 
    .Q1(phase_inc_carrGen_63));
  SLICE_38 SLICE_38( .D1(phase_inc_carrGen_61), .C1(n2219), .B1(n9004), 
    .D0(phase_inc_carrGen_60), .C0(n2220), .B0(n9004), .DI1(n2877), 
    .DI0(n2878), .CE(osc_clk_enable_1457), .CLK(osc_clk), .FCI(n12218), 
    .F0(n2878), .Q0(phase_inc_carrGen_60), .F1(n2877), 
    .Q1(phase_inc_carrGen_61), .FCO(n12219));
  SLICE_39 SLICE_39( .D1(phase_inc_carrGen_59), .C1(n2221), .B1(n9004), 
    .D0(phase_inc_carrGen_58), .C0(n2222), .B0(n9004), .DI1(n2879), 
    .DI0(n2880), .CE(osc_clk_enable_1457), .CLK(osc_clk), .FCI(n12217), 
    .F0(n2880), .Q0(phase_inc_carrGen_58), .F1(n2879), 
    .Q1(phase_inc_carrGen_59), .FCO(n12218));
  SLICE_40 SLICE_40( .D1(phase_inc_carrGen_57), .C1(n2223), .B1(n9004), 
    .D0(phase_inc_carrGen_56), .C0(n2224), .B0(n9004), .DI1(n2881), 
    .DI0(n2882), .CE(osc_clk_enable_1457), .CLK(osc_clk), .FCI(n12216), 
    .F0(n2882), .Q0(phase_inc_carrGen_56), .F1(n2881), 
    .Q1(phase_inc_carrGen_57), .FCO(n12217));
  SLICE_41 SLICE_41( .D1(phase_inc_carrGen_55), .C1(n2225), .B1(n9004), 
    .D0(phase_inc_carrGen_54), .C0(n2226), .B0(n9004), .DI1(n2883), 
    .DI0(n2884), .CE(osc_clk_enable_1457), .CLK(osc_clk), .FCI(n12215), 
    .F0(n2884), .Q0(phase_inc_carrGen_54), .F1(n2883), 
    .Q1(phase_inc_carrGen_55), .FCO(n12216));
  SLICE_42 SLICE_42( .D1(phase_inc_carrGen_53), .C1(n2227), .B1(n9004), 
    .D0(phase_inc_carrGen_52), .C0(n2228), .B0(n9004), .DI1(n2885), 
    .DI0(n2886), .CE(osc_clk_enable_1457), .CLK(osc_clk), .FCI(n12214), 
    .F0(n2886), .Q0(phase_inc_carrGen_52), .F1(n2885), 
    .Q1(phase_inc_carrGen_53), .FCO(n12215));
  SLICE_43 SLICE_43( .D1(phase_inc_carrGen_51), .C1(n2229), .B1(n9004), 
    .D0(phase_inc_carrGen_50), .C0(n2230), .B0(n9004), .A0(o_Rx_Byte_c_4), 
    .DI1(n2887), .DI0(n2888), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n12213), .F0(n2888), .Q0(phase_inc_carrGen_50), .F1(n2887), 
    .Q1(phase_inc_carrGen_51), .FCO(n12214));
  SLICE_44 SLICE_44( .D1(phase_inc_carrGen_49), .C1(n2231), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_48), .C0(n2232), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2889), .DI0(n2890), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12212), .F0(n2890), .Q0(phase_inc_carrGen_48), 
    .F1(n2889), .Q1(phase_inc_carrGen_49), .FCO(n12213));
  SLICE_45 SLICE_45( .D1(phase_inc_carrGen_47), .C1(n2233), .B1(n9004), 
    .D0(phase_inc_carrGen_46), .C0(n2234), .B0(n9004), .A0(o_Rx_Byte_c_4), 
    .DI1(n2891), .DI0(n2892), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n12211), .F0(n2892), .Q0(phase_inc_carrGen_46), .F1(n2891), 
    .Q1(phase_inc_carrGen_47), .FCO(n12212));
  SLICE_46 SLICE_46( .D1(phase_inc_carrGen_45), .C1(n2235), .B1(n9004), 
    .D0(phase_inc_carrGen_44), .C0(n2236), .B0(n9004), .A0(n9004), .DI1(n2893), 
    .DI0(n2894), .CE(osc_clk_enable_1457), .CLK(osc_clk), .FCI(n12210), 
    .F0(n2894), .Q0(phase_inc_carrGen_44), .F1(n2893), 
    .Q1(phase_inc_carrGen_45), .FCO(n12211));
  SinCos1_SLICE_47 \SinCos1/SLICE_47 ( .A1(\SinCos1/rom_addr0_r ), 
    .M1(phase_accum_56), .CLK(osc_clk), .F1(\SinCos1/rom_addr0_r_n ), 
    .Q1(\SinCos1/rom_addr0_r ), .FCO(\SinCos1/co0 ));
  SinCos1_SLICE_48 \SinCos1/SLICE_48 ( .A1(\SinCos1/rom_addr0_r_2 ), 
    .A0(\SinCos1/rom_addr0_r_1 ), .M1(phase_accum_58), .CLK(osc_clk), 
    .FCI(\SinCos1/co0 ), .F0(\SinCos1/rom_addr0_r_n_1 ), 
    .F1(\SinCos1/rom_addr0_r_n_2 ), .Q1(\SinCos1/rom_addr0_r_2 ), 
    .FCO(\SinCos1/co1 ));
  SinCos1_SLICE_49 \SinCos1/SLICE_49 ( .A1(\SinCos1/rom_addr0_r_4 ), 
    .A0(\SinCos1/rom_addr0_r_3 ), .M1(phase_accum_60), .CLK(osc_clk), 
    .FCI(\SinCos1/co1 ), .F0(\SinCos1/rom_addr0_r_n_3 ), 
    .F1(\SinCos1/rom_addr0_r_n_4 ), .Q1(\SinCos1/rom_addr0_r_4 ), 
    .FCO(\SinCos1/co2 ));
  SinCos1_SLICE_50 \SinCos1/SLICE_50 ( .A0(\SinCos1/rom_addr0_r_5 ), 
    .FCI(\SinCos1/co2 ), .F0(\SinCos1/rom_addr0_r_n_5 ));
  SinCos1_SLICE_51 \SinCos1/SLICE_51 ( .A1(\SinCos1/rom_dout_2 ), 
    .A0(\SinCos1/rom_dout_1 ), .FCI(\SinCos1/co0_1 ), 
    .F0(\SinCos1/rom_dout_s_n_1 ), .F1(\SinCos1/rom_dout_s_n_2 ), 
    .FCO(\SinCos1/co1_1 ));
  SinCos1_SLICE_52 \SinCos1/SLICE_52 ( .A1(\SinCos1/rom_dout_4 ), 
    .A0(\SinCos1/rom_dout_3 ), .FCI(\SinCos1/co1_1 ), 
    .F0(\SinCos1/rom_dout_s_n_3 ), .F1(\SinCos1/rom_dout_s_n_4 ), 
    .FCO(\SinCos1/co2_1 ));
  SinCos1_SLICE_53 \SinCos1/SLICE_53 ( .A1(\SinCos1/rom_dout_6 ), 
    .A0(\SinCos1/rom_dout_5 ), .FCI(\SinCos1/co2_1 ), 
    .F0(\SinCos1/rom_dout_s_n_5 ), .F1(\SinCos1/rom_dout_s_n_6 ), 
    .FCO(\SinCos1/co3 ));
  SinCos1_SLICE_54 \SinCos1/SLICE_54 ( .A1(\SinCos1/rom_dout_8 ), 
    .A0(\SinCos1/rom_dout_7 ), .FCI(\SinCos1/co3 ), 
    .F0(\SinCos1/rom_dout_s_n_7 ), .F1(\SinCos1/rom_dout_s_n_8 ), 
    .FCO(\SinCos1/co4 ));
  SinCos1_SLICE_55 \SinCos1/SLICE_55 ( .A1(\SinCos1/rom_dout_10 ), 
    .A0(\SinCos1/rom_dout_9 ), .FCI(\SinCos1/co4 ), 
    .F0(\SinCos1/rom_dout_s_n_9 ), .F1(\SinCos1/rom_dout_s_n_10 ), 
    .FCO(\SinCos1/co5 ));
  SinCos1_SLICE_56 \SinCos1/SLICE_56 ( .A1(\SinCos1/rom_dout_12 ), 
    .A0(\SinCos1/rom_dout_11 ), .FCI(\SinCos1/co5 ), 
    .F0(\SinCos1/rom_dout_s_n_11 ), .F1(\SinCos1/rom_dout_s_n_12 ));
  SinCos1_SLICE_57 \SinCos1/SLICE_57 ( .A1(\SinCos1/rom_dout_13 ), 
    .FCO(\SinCos1/co0_2 ));
  SinCos1_SLICE_58 \SinCos1/SLICE_58 ( .A1(\SinCos1/rom_dout_15 ), 
    .A0(\SinCos1/rom_dout_14 ), .FCI(\SinCos1/co0_2 ), 
    .F0(\SinCos1/rom_dout_c_n_1 ), .F1(\SinCos1/rom_dout_c_n_2 ), 
    .FCO(\SinCos1/co1_2 ));
  SinCos1_SLICE_59 \SinCos1/SLICE_59 ( .A1(\SinCos1/rom_dout_17 ), 
    .A0(\SinCos1/rom_dout_16 ), .FCI(\SinCos1/co1_2 ), 
    .F0(\SinCos1/rom_dout_c_n_3 ), .F1(\SinCos1/rom_dout_c_n_4 ), 
    .FCO(\SinCos1/co2_2 ));
  SinCos1_SLICE_60 \SinCos1/SLICE_60 ( .A1(\SinCos1/rom_dout_19 ), 
    .A0(\SinCos1/rom_dout_18 ), .FCI(\SinCos1/co2_2 ), 
    .F0(\SinCos1/rom_dout_c_n_5 ), .F1(\SinCos1/rom_dout_c_n_6 ), 
    .FCO(\SinCos1/co3_1 ));
  SinCos1_SLICE_61 \SinCos1/SLICE_61 ( .A1(\SinCos1/rom_dout_21 ), 
    .A0(\SinCos1/rom_dout_20 ), .FCI(\SinCos1/co3_1 ), 
    .F0(\SinCos1/rom_dout_c_n_7 ), .F1(\SinCos1/rom_dout_c_n_8 ), 
    .FCO(\SinCos1/co4_1 ));
  SinCos1_SLICE_62 \SinCos1/SLICE_62 ( .A1(\SinCos1/rom_dout_23 ), 
    .A0(\SinCos1/rom_dout_22 ), .FCI(\SinCos1/co4_1 ), 
    .F0(\SinCos1/rom_dout_c_n_9 ), .F1(\SinCos1/rom_dout_c_n_10 ), 
    .FCO(\SinCos1/co5_1 ));
  SinCos1_SLICE_63 \SinCos1/SLICE_63 ( .A1(\SinCos1/rom_dout_25 ), 
    .A0(\SinCos1/rom_dout_24 ), .FCI(\SinCos1/co5_1 ), 
    .F0(\SinCos1/rom_dout_c_n_11 ), .F1(\SinCos1/rom_dout_c_n_12 ));
  SinCos1_SLICE_64 \SinCos1/SLICE_64 ( .A1(\SinCos1/rom_dout ), 
    .FCO(\SinCos1/co0_1 ));
  SLICE_65 SLICE_65( .D1(phase_inc_carrGen_43), .C1(n2237), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_42), .C0(n2238), .B0(n9004), 
    .A0(n9004), .DI1(n2895), .DI0(n2896), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12209), .F0(n2896), .Q0(phase_inc_carrGen_42), 
    .F1(n2895), .Q1(phase_inc_carrGen_43), .FCO(n12210));
  SLICE_66 SLICE_66( .D1(phase_inc_carrGen_41), .C1(n2239), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_40), .C0(n2240), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2897), .DI0(n2898), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12208), .F0(n2898), .Q0(phase_inc_carrGen_40), 
    .F1(n2897), .Q1(phase_inc_carrGen_41), .FCO(n12209));
  SLICE_67 SLICE_67( .D1(phase_inc_carrGen_39), .C1(n2241), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_38), .C0(n2242), .B0(n9004), 
    .A0(n9004), .DI1(n2899), .DI0(n2900), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12207), .F0(n2900), .Q0(phase_inc_carrGen_38), 
    .F1(n2899), .Q1(phase_inc_carrGen_39), .FCO(n12208));
  SLICE_68 SLICE_68( .D1(phase_inc_carrGen_37), .C1(n2243), .B1(n9004), 
    .A1(n9004), .D0(phase_inc_carrGen_36), .C0(n2244), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2901), .DI0(n2902), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12206), .F0(n2902), .Q0(phase_inc_carrGen_36), 
    .F1(n2901), .Q1(phase_inc_carrGen_37), .FCO(n12207));
  SLICE_69 SLICE_69( .D1(phase_inc_carrGen_35), .C1(n2245), .B1(n9004), 
    .A1(n9004), .D0(phase_inc_carrGen_34), .C0(n2246), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2903), .DI0(n2904), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12205), .F0(n2904), .Q0(phase_inc_carrGen_34), 
    .F1(n2903), .Q1(phase_inc_carrGen_35), .FCO(n12206));
  SLICE_70 SLICE_70( .D1(phase_inc_carrGen_33), .C1(n2247), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_32), .C0(n2248), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2905), .DI0(n2906), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12204), .F0(n2906), .Q0(phase_inc_carrGen_32), 
    .F1(n2905), .Q1(phase_inc_carrGen_33), .FCO(n12205));
  SLICE_71 SLICE_71( .D1(phase_inc_carrGen_31), .C1(n2249), .B1(n9004), 
    .A1(n9004), .D0(phase_inc_carrGen_30), .C0(n2250), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2907), .DI0(n2908), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12203), .F0(n2908), .Q0(phase_inc_carrGen_30), 
    .F1(n2907), .Q1(phase_inc_carrGen_31), .FCO(n12204));
  SLICE_72 SLICE_72( .D1(phase_inc_carrGen_29), .C1(n2251), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_28), .C0(n2252), .B0(n9004), 
    .A0(n9004), .DI1(n2909), .DI0(n2910), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12202), .F0(n2910), .Q0(phase_inc_carrGen_28), 
    .F1(n2909), .Q1(phase_inc_carrGen_29), .FCO(n12203));
  SLICE_73 SLICE_73( .D1(phase_inc_carrGen_27), .C1(n2253), .B1(n9004), 
    .D0(phase_inc_carrGen_26), .C0(n2254), .B0(n9004), .A0(o_Rx_Byte_c_4), 
    .DI1(n2911), .DI0(n2912), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n12201), .F0(n2912), .Q0(phase_inc_carrGen_26), .F1(n2911), 
    .Q1(phase_inc_carrGen_27), .FCO(n12202));
  SLICE_74 SLICE_74( .D1(phase_inc_carrGen_25), .C1(n2255), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_24), .C0(n2256), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2913), .DI0(n2914), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12200), .F0(n2914), .Q0(phase_inc_carrGen_24), 
    .F1(n2913), .Q1(phase_inc_carrGen_25), .FCO(n12201));
  SLICE_75 SLICE_75( .D1(phase_inc_carrGen_23), .C1(n2257), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_22), .C0(n2258), .B0(n9004), 
    .DI1(n2915), .DI0(n2916), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n12199), .F0(n2916), .Q0(phase_inc_carrGen_22), .F1(n2915), 
    .Q1(phase_inc_carrGen_23), .FCO(n12200));
  SLICE_76 SLICE_76( .D1(phase_inc_carrGen_21), .C1(n2259), .B1(n9004), 
    .D0(phase_inc_carrGen_20), .C0(n2260), .B0(n9004), .A0(o_Rx_Byte_c_4), 
    .DI1(n2917), .DI0(n2918), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n12198), .F0(n2918), .Q0(phase_inc_carrGen_20), .F1(n2917), 
    .Q1(phase_inc_carrGen_21), .FCO(n12199));
  SLICE_77 SLICE_77( .D1(phase_inc_carrGen_19), .C1(n2261), .B1(n9004), 
    .A1(n9004), .D0(phase_inc_carrGen_18), .C0(n2262), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2919), .DI0(n2920), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12197), .F0(n2920), .Q0(phase_inc_carrGen_18), 
    .F1(n2919), .Q1(phase_inc_carrGen_19), .FCO(n12198));
  SLICE_78 SLICE_78( .D1(phase_inc_carrGen_17), .C1(n2263), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_16), .C0(n2264), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2921), .DI0(n2922), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12196), .F0(n2922), .Q0(phase_inc_carrGen_16), 
    .F1(n2921), .Q1(phase_inc_carrGen_17), .FCO(n12197));
  SLICE_79 SLICE_79( .D1(phase_inc_carrGen_15), .C1(n2265), .B1(n9004), 
    .A1(n9004), .D0(phase_inc_carrGen_14), .C0(n2266), .B0(n9004), .A0(n9004), 
    .DI1(n2923), .DI0(n2924), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n12195), .F0(n2924), .Q0(phase_inc_carrGen_14), .F1(n2923), 
    .Q1(phase_inc_carrGen_15), .FCO(n12196));
  SLICE_80 SLICE_80( .D1(phase_inc_carrGen_13), .C1(n2267), .B1(n9004), 
    .A1(n9004), .D0(phase_inc_carrGen_12), .C0(n2268), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2925), .DI0(n2926), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12194), .F0(n2926), .Q0(phase_inc_carrGen_12), 
    .F1(n2925), .Q1(phase_inc_carrGen_13), .FCO(n12195));
  SLICE_81 SLICE_81( .D1(phase_inc_carrGen_11), .C1(n2269), .B1(n9004), 
    .D0(phase_inc_carrGen_10), .C0(n2270), .B0(n9004), .DI1(n2927), 
    .DI0(n2928), .CE(osc_clk_enable_1457), .CLK(osc_clk), .FCI(n12193), 
    .F0(n2928), .Q0(phase_inc_carrGen_10), .F1(n2927), 
    .Q1(phase_inc_carrGen_11), .FCO(n12194));
  SLICE_82 SLICE_82( .D1(phase_inc_carrGen_9), .C1(n2271), .B1(n9004), 
    .A1(n9004), .D0(phase_inc_carrGen_8), .C0(n2272), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI1(n2929), .DI0(n2930), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12192), .F0(n2930), .Q0(phase_inc_carrGen_8), 
    .F1(n2929), .Q1(phase_inc_carrGen_9), .FCO(n12193));
  SLICE_83 SLICE_83( .D1(phase_inc_carrGen_7), .C1(n2273), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_6), .C0(n2274), .B0(n9004), 
    .A0(n9004), .DI1(n2931), .DI0(n2932), .CE(osc_clk_enable_1457), 
    .CLK(osc_clk), .FCI(n12191), .F0(n2932), .Q0(phase_inc_carrGen_6), 
    .F1(n2931), .Q1(phase_inc_carrGen_7), .FCO(n12192));
  SLICE_84 SLICE_84( .D1(phase_inc_carrGen_5), .C1(n2275), .B1(n9004), 
    .A1(n9004), .D0(phase_inc_carrGen_4), .C0(n2276), .B0(n9004), .DI1(n2933), 
    .DI0(n2934), .CE(osc_clk_enable_1457), .CLK(osc_clk), .FCI(n12190), 
    .F0(n2934), .Q0(phase_inc_carrGen_4), .F1(n2933), .Q1(phase_inc_carrGen_5), 
    .FCO(n12191));
  SLICE_85 SLICE_85( .D1(phase_inc_carrGen_3), .C1(n2277), .B1(n9004), 
    .A1(o_Rx_Byte_c_4), .D0(phase_inc_carrGen_2), .C0(n2803), .B0(n9004), 
    .A0(o_Rx_Byte_c_4), .DI0(n2936), .CE(osc_clk_enable_1396), .CLK(osc_clk), 
    .FCI(n12189), .F0(n2936), .Q0(phase_inc_carrGen_2), .F1(n2935), 
    .FCO(n12190));
  SLICE_86 SLICE_86( .B1(n12897), .A1(n13061), .FCO(n12189));
  SLICE_87 SLICE_87( .A0(phase_inc_carrGen_63), .FCI(n11611), .F0(n880));
  SLICE_88 SLICE_88( .A1(phase_inc_carrGen_62), .A0(phase_inc_carrGen_61), 
    .FCI(n11610), .F0(n882), .F1(n881), .FCO(n11611));
  SLICE_89 SLICE_89( .A1(phase_inc_carrGen_60), .A0(phase_inc_carrGen_59), 
    .FCI(n11609), .F0(n884), .F1(n883), .FCO(n11610));
  SLICE_90 SLICE_90( .A1(phase_inc_carrGen_58), .A0(phase_inc_carrGen_57), 
    .FCI(n11608), .F0(n886), .F1(n885), .FCO(n11609));
  SLICE_91 SLICE_91( .A1(phase_inc_carrGen_56), .A0(phase_inc_carrGen_55), 
    .FCI(n11607), .F0(n888), .F1(n887), .FCO(n11608));
  SLICE_92 SLICE_92( .A1(phase_inc_carrGen_54), .A0(phase_inc_carrGen_53), 
    .FCI(n11606), .F0(n890), .F1(n889), .FCO(n11607));
  SLICE_93 SLICE_93( .A1(phase_inc_carrGen_52), .A0(phase_inc_carrGen_51), 
    .FCI(n11605), .F0(n892), .F1(n891), .FCO(n11606));
  SLICE_94 SLICE_94( .A1(phase_inc_carrGen_50), .A0(phase_inc_carrGen_49), 
    .FCI(n11604), .F0(n894), .F1(n893), .FCO(n11605));
  SLICE_95 SLICE_95( .A1(phase_inc_carrGen_48), .A0(phase_inc_carrGen_47), 
    .FCI(n11603), .F0(n896), .F1(n895), .FCO(n11604));
  SLICE_96 SLICE_96( .A1(phase_inc_carrGen_46), .A0(phase_inc_carrGen_45), 
    .FCI(n11602), .F0(n898), .F1(n897), .FCO(n11603));
  SLICE_97 SLICE_97( .A1(phase_inc_carrGen_44), .A0(phase_inc_carrGen_43), 
    .FCI(n11601), .F0(n900), .F1(n899), .FCO(n11602));
  SLICE_98 SLICE_98( .A1(phase_inc_carrGen_42), .A0(phase_inc_carrGen_41), 
    .FCI(n11600), .F0(n902), .F1(n901), .FCO(n11601));
  SLICE_99 SLICE_99( .A1(phase_inc_carrGen_40), .A0(phase_inc_carrGen_39), 
    .FCI(n11599), .F0(n904), .F1(n903), .FCO(n11600));
  SLICE_100 SLICE_100( .A1(phase_inc_carrGen_38), .A0(phase_inc_carrGen_37), 
    .FCI(n11598), .F0(n906), .F1(n905), .FCO(n11599));
  SLICE_101 SLICE_101( .A1(phase_inc_carrGen_36), .A0(phase_inc_carrGen_35), 
    .FCI(n11597), .F0(n908), .F1(n907), .FCO(n11598));
  SLICE_102 SLICE_102( .A1(phase_inc_carrGen_34), .A0(phase_inc_carrGen_33), 
    .FCI(n11596), .F0(n910), .F1(n909), .FCO(n11597));
  SLICE_103 SLICE_103( .A1(phase_inc_carrGen_32), .A0(phase_inc_carrGen_31), 
    .FCI(n11595), .F0(n912), .F1(n911), .FCO(n11596));
  SLICE_104 SLICE_104( .A1(phase_inc_carrGen_30), .A0(phase_inc_carrGen_29), 
    .FCI(n11594), .F0(n914), .F1(n913), .FCO(n11595));
  SLICE_105 SLICE_105( .A1(phase_inc_carrGen_28), .A0(phase_inc_carrGen_27), 
    .FCI(n11593), .F0(n916), .F1(n915), .FCO(n11594));
  SLICE_106 SLICE_106( .A1(phase_inc_carrGen_26), .A0(phase_inc_carrGen_25), 
    .FCI(n11592), .F0(n918), .F1(n917), .FCO(n11593));
  SLICE_107 SLICE_107( .A1(phase_inc_carrGen_24), .A0(phase_inc_carrGen_23), 
    .FCI(n11591), .F0(n920), .F1(n919), .FCO(n11592));
  SLICE_108 SLICE_108( .A1(phase_inc_carrGen_22), .A0(phase_inc_carrGen_21), 
    .FCI(n11590), .F0(n922), .F1(n921), .FCO(n11591));
  SLICE_109 SLICE_109( .A1(phase_inc_carrGen_20), .A0(phase_inc_carrGen_19), 
    .FCI(n11589), .F0(n924), .F1(n923), .FCO(n11590));
  SLICE_110 SLICE_110( .A1(phase_inc_carrGen_18), .A0(phase_inc_carrGen_17), 
    .FCI(n11588), .F0(n926), .F1(n925), .FCO(n11589));
  SLICE_111 SLICE_111( .A1(phase_inc_carrGen_16), .A0(phase_inc_carrGen_15), 
    .FCI(n11587), .F0(n928), .F1(n927), .FCO(n11588));
  SLICE_112 SLICE_112( .A1(phase_inc_carrGen_14), .A0(phase_inc_carrGen_13), 
    .FCI(n11586), .F0(n930), .F1(n929), .FCO(n11587));
  SLICE_113 SLICE_113( .A1(phase_inc_carrGen_12), .A0(phase_inc_carrGen_11), 
    .FCI(n11585), .F0(n932), .F1(n931), .FCO(n11586));
  SLICE_114 SLICE_114( .A1(phase_inc_carrGen_10), .A0(phase_inc_carrGen_9), 
    .FCI(n11584), .F0(n934), .F1(n933), .FCO(n11585));
  SLICE_115 SLICE_115( .A1(phase_inc_carrGen_8), .A0(phase_inc_carrGen_7), 
    .FCI(n11583), .F0(n936), .F1(n935), .FCO(n11584));
  SLICE_116 SLICE_116( .A1(phase_inc_carrGen_6), .A0(phase_inc_carrGen_5), 
    .FCI(n11582), .F0(n938), .F1(n937), .FCO(n11583));
  SLICE_117 SLICE_117( .A1(phase_inc_carrGen_4), .A0(phase_inc_carrGen_3), 
    .FCI(n11581), .F0(n940), .F1(n939), .FCO(n11582));
  SLICE_118 SLICE_118( .A1(phase_inc_carrGen_2), .F1(n941), .FCO(n11581));
  SLICE_119 SLICE_119( .A1(phase_inc_carrGen_63), .A0(phase_inc_carrGen_62), 
    .FCI(n11579), .F0(n944), .F1(n943));
  SLICE_120 SLICE_120( .A1(phase_inc_carrGen_61), .A0(phase_inc_carrGen_60), 
    .FCI(n11578), .F0(n946), .F1(n945), .FCO(n11579));
  SLICE_121 SLICE_121( .A1(phase_inc_carrGen_59), .A0(phase_inc_carrGen_58), 
    .FCI(n11577), .F0(n948), .F1(n947), .FCO(n11578));
  SLICE_122 SLICE_122( .A1(phase_inc_carrGen_57), .A0(phase_inc_carrGen_56), 
    .FCI(n11576), .F0(n950), .F1(n949), .FCO(n11577));
  SLICE_123 SLICE_123( .A1(phase_inc_carrGen_55), .A0(phase_inc_carrGen_54), 
    .FCI(n11575), .F0(n952), .F1(n951), .FCO(n11576));
  SLICE_124 SLICE_124( .A1(phase_inc_carrGen_53), .A0(phase_inc_carrGen_52), 
    .FCI(n11574), .F0(n954), .F1(n953), .FCO(n11575));
  SLICE_125 SLICE_125( .A1(phase_inc_carrGen_51), .A0(phase_inc_carrGen_50), 
    .FCI(n11573), .F0(n956), .F1(n955), .FCO(n11574));
  SLICE_126 SLICE_126( .A1(phase_inc_carrGen_49), .A0(phase_inc_carrGen_48), 
    .FCI(n11572), .F0(n958), .F1(n957), .FCO(n11573));
  SLICE_127 SLICE_127( .A1(phase_inc_carrGen_47), .A0(phase_inc_carrGen_46), 
    .FCI(n11571), .F0(n960), .F1(n959), .FCO(n11572));
  SLICE_128 SLICE_128( .A1(phase_inc_carrGen_45), .A0(phase_inc_carrGen_44), 
    .FCI(n11570), .F0(n962), .F1(n961), .FCO(n11571));
  SLICE_129 SLICE_129( .A1(phase_inc_carrGen_43), .A0(phase_inc_carrGen_42), 
    .FCI(n11569), .F0(n964), .F1(n963), .FCO(n11570));
  SLICE_130 SLICE_130( .A1(phase_inc_carrGen_41), .A0(phase_inc_carrGen_40), 
    .FCI(n11568), .F0(n966), .F1(n965), .FCO(n11569));
  SLICE_131 SLICE_131( .A1(phase_inc_carrGen_39), .A0(phase_inc_carrGen_38), 
    .FCI(n11567), .F0(n968), .F1(n967), .FCO(n11568));
  SLICE_132 SLICE_132( .A1(phase_inc_carrGen_37), .A0(phase_inc_carrGen_36), 
    .FCI(n11566), .F0(n970), .F1(n969), .FCO(n11567));
  SLICE_133 SLICE_133( .A1(phase_inc_carrGen_35), .A0(phase_inc_carrGen_34), 
    .FCI(n11565), .F0(n972), .F1(n971), .FCO(n11566));
  SLICE_134 SLICE_134( .A1(phase_inc_carrGen_33), .A0(phase_inc_carrGen_32), 
    .FCI(n11564), .F0(n974), .F1(n973), .FCO(n11565));
  SLICE_135 SLICE_135( .A1(phase_inc_carrGen_31), .A0(phase_inc_carrGen_30), 
    .FCI(n11563), .F0(n976), .F1(n975), .FCO(n11564));
  SLICE_136 SLICE_136( .A1(phase_inc_carrGen_29), .A0(phase_inc_carrGen_28), 
    .FCI(n11562), .F0(n978), .F1(n977), .FCO(n11563));
  SLICE_137 SLICE_137( .A1(phase_inc_carrGen_27), .A0(phase_inc_carrGen_26), 
    .FCI(n11561), .F0(n980), .F1(n979), .FCO(n11562));
  SLICE_138 SLICE_138( .A1(phase_inc_carrGen_25), .A0(phase_inc_carrGen_24), 
    .FCI(n11560), .F0(n982), .F1(n981), .FCO(n11561));
  SLICE_139 SLICE_139( .A1(phase_inc_carrGen_23), .A0(phase_inc_carrGen_22), 
    .FCI(n11559), .F0(n984), .F1(n983), .FCO(n11560));
  SLICE_140 SLICE_140( .A1(phase_inc_carrGen_21), .A0(phase_inc_carrGen_20), 
    .FCI(n11558), .F0(n986), .F1(n985), .FCO(n11559));
  SLICE_141 SLICE_141( .A1(phase_inc_carrGen_19), .A0(phase_inc_carrGen_18), 
    .FCI(n11557), .F0(n988), .F1(n987), .FCO(n11558));
  SLICE_142 SLICE_142( .A1(phase_inc_carrGen_17), .A0(phase_inc_carrGen_16), 
    .FCI(n11556), .F0(n990), .F1(n989), .FCO(n11557));
  SLICE_143 SLICE_143( .A1(phase_inc_carrGen_15), .A0(phase_inc_carrGen_14), 
    .FCI(n11555), .F0(n992), .F1(n991), .FCO(n11556));
  SLICE_144 SLICE_144( .A1(phase_inc_carrGen_13), .A0(phase_inc_carrGen_12), 
    .FCI(n11554), .F0(n994), .F1(n993), .FCO(n11555));
  SLICE_145 SLICE_145( .A1(phase_inc_carrGen_11), .A0(phase_inc_carrGen_10), 
    .FCI(n11553), .F0(n996), .F1(n995), .FCO(n11554));
  SLICE_146 SLICE_146( .A1(phase_inc_carrGen_9), .A0(phase_inc_carrGen_8), 
    .FCI(n11552), .F0(n998), .F1(n997), .FCO(n11553));
  SLICE_147 SLICE_147( .A1(phase_inc_carrGen_7), .A0(phase_inc_carrGen_6), 
    .FCI(n11551), .F0(n1000), .F1(n999), .FCO(n11552));
  SLICE_148 SLICE_148( .A1(phase_inc_carrGen_5), .A0(phase_inc_carrGen_4), 
    .FCI(n11550), .F0(n1002), .F1(n1001), .FCO(n11551));
  SLICE_149 SLICE_149( .A1(phase_inc_carrGen_3), .F1(n1003), .FCO(n11550));
  CIC1Sin_SLICE_150 \CIC1Sin/SLICE_150 ( .D1(\CIC1Sin/d1_59 ), 
    .C1(\CIC1Sin/n4204 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_59 ), 
    .D0(\CIC1Sin/d1_58 ), .C0(\CIC1Sin/n4205 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_58 ), .DI1(\CIC1Sin/d2_71_N_489_59 ), 
    .DI0(\CIC1Sin/d2_71_N_489_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12089 ), 
    .F0(\CIC1Sin/d2_71_N_489_58 ), .Q0(\CIC1Sin/d2_58 ), 
    .F1(\CIC1Sin/d2_71_N_489_59 ), .Q1(\CIC1Sin/d2_59 ), 
    .FCO(\CIC1Sin/n12090 ));
  CIC1Sin_SLICE_151 \CIC1Sin/SLICE_151 ( .D1(\CIC1Sin/d6_63 ), 
    .C1(\CIC1Sin/n5568 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_63 ), 
    .D0(\CIC1Sin/d6_62 ), .C0(\CIC1Sin/n5569 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_62 ), .DI1(\CIC1Sin/d7_71_N_1530_63 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_62 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11723 ), .F0(\CIC1Sin/d7_71_N_1530_62 ), 
    .Q0(\CIC1Sin/d7_62 ), .F1(\CIC1Sin/d7_71_N_1530_63 ), .Q1(\CIC1Sin/d7_63 ), 
    .FCO(\CIC1Sin/n11724 ));
  CIC1Sin_SLICE_152 \CIC1Sin/SLICE_152 ( .D1(\CIC1Sin/d1_57 ), 
    .C1(\CIC1Sin/n4206 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_57 ), 
    .D0(\CIC1Sin/d1_56 ), .C0(\CIC1Sin/n4207 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_56 ), .DI1(\CIC1Sin/d2_71_N_489_57 ), 
    .DI0(\CIC1Sin/d2_71_N_489_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12088 ), 
    .F0(\CIC1Sin/d2_71_N_489_56 ), .Q0(\CIC1Sin/d2_56 ), 
    .F1(\CIC1Sin/d2_71_N_489_57 ), .Q1(\CIC1Sin/d2_57 ), 
    .FCO(\CIC1Sin/n12089 ));
  CIC1Sin_SLICE_153 \CIC1Sin/SLICE_153 ( .D1(\CIC1Sin/d1_55 ), 
    .C1(\CIC1Sin/n4208 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_55 ), 
    .D0(\CIC1Sin/d1_54 ), .C0(\CIC1Sin/n4209 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_54 ), .DI1(\CIC1Sin/d2_71_N_489_55 ), 
    .DI0(\CIC1Sin/d2_71_N_489_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12087 ), 
    .F0(\CIC1Sin/d2_71_N_489_54 ), .Q0(\CIC1Sin/d2_54 ), 
    .F1(\CIC1Sin/d2_71_N_489_55 ), .Q1(\CIC1Sin/d2_55 ), 
    .FCO(\CIC1Sin/n12088 ));
  CIC1Sin_SLICE_154 \CIC1Sin/SLICE_154 ( .D1(\CIC1Sin/d1_53 ), 
    .C1(\CIC1Sin/n4210 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_53 ), 
    .D0(\CIC1Sin/d1_52 ), .C0(\CIC1Sin/n4211 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_52 ), .DI1(\CIC1Sin/d2_71_N_489_53 ), 
    .DI0(\CIC1Sin/d2_71_N_489_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12086 ), 
    .F0(\CIC1Sin/d2_71_N_489_52 ), .Q0(\CIC1Sin/d2_52 ), 
    .F1(\CIC1Sin/d2_71_N_489_53 ), .Q1(\CIC1Sin/d2_53 ), 
    .FCO(\CIC1Sin/n12087 ));
  CIC1Sin_SLICE_155 \CIC1Sin/SLICE_155 ( .D1(\CIC1Sin/d1_51 ), 
    .C1(\CIC1Sin/n4212 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_51 ), 
    .D0(\CIC1Sin/d1_50 ), .C0(\CIC1Sin/n4213 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_50 ), .DI1(\CIC1Sin/d2_71_N_489_51 ), 
    .DI0(\CIC1Sin/d2_71_N_489_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12085 ), 
    .F0(\CIC1Sin/d2_71_N_489_50 ), .Q0(\CIC1Sin/d2_50 ), 
    .F1(\CIC1Sin/d2_71_N_489_51 ), .Q1(\CIC1Sin/d2_51 ), 
    .FCO(\CIC1Sin/n12086 ));
  CIC1Sin_SLICE_156 \CIC1Sin/SLICE_156 ( .D1(\CIC1Sin/d1_49 ), 
    .C1(\CIC1Sin/n4214 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_49 ), 
    .D0(\CIC1Sin/d1_48 ), .C0(\CIC1Sin/n4215 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_48 ), .DI1(\CIC1Sin/d2_71_N_489_49 ), 
    .DI0(\CIC1Sin/d2_71_N_489_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12084 ), 
    .F0(\CIC1Sin/d2_71_N_489_48 ), .Q0(\CIC1Sin/d2_48 ), 
    .F1(\CIC1Sin/d2_71_N_489_49 ), .Q1(\CIC1Sin/d2_49 ), 
    .FCO(\CIC1Sin/n12085 ));
  CIC1Sin_SLICE_157 \CIC1Sin/SLICE_157 ( .D1(\CIC1Sin/d1_47 ), 
    .C1(\CIC1Sin/n4216 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_47 ), 
    .D0(\CIC1Sin/d1_46 ), .C0(\CIC1Sin/n4217 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_46 ), .DI1(\CIC1Sin/d2_71_N_489_47 ), 
    .DI0(\CIC1Sin/d2_71_N_489_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12083 ), 
    .F0(\CIC1Sin/d2_71_N_489_46 ), .Q0(\CIC1Sin/d2_46 ), 
    .F1(\CIC1Sin/d2_71_N_489_47 ), .Q1(\CIC1Sin/d2_47 ), 
    .FCO(\CIC1Sin/n12084 ));
  CIC1Sin_SLICE_158 \CIC1Sin/SLICE_158 ( .D1(\CIC1Sin/d1_45 ), 
    .C1(\CIC1Sin/n4218 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_45 ), 
    .D0(\CIC1Sin/d1_44 ), .C0(\CIC1Sin/n4219 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_44 ), .DI1(\CIC1Sin/d2_71_N_489_45 ), 
    .DI0(\CIC1Sin/d2_71_N_489_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12082 ), 
    .F0(\CIC1Sin/d2_71_N_489_44 ), .Q0(\CIC1Sin/d2_44 ), 
    .F1(\CIC1Sin/d2_71_N_489_45 ), .Q1(\CIC1Sin/d2_45 ), 
    .FCO(\CIC1Sin/n12083 ));
  CIC1Sin_SLICE_159 \CIC1Sin/SLICE_159 ( .D1(\CIC1Sin/d1_43 ), 
    .C1(\CIC1Sin/n4220 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_43 ), 
    .D0(\CIC1Sin/d1_42 ), .C0(\CIC1Sin/n4221 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_42 ), .DI1(\CIC1Sin/d2_71_N_489_43 ), 
    .DI0(\CIC1Sin/d2_71_N_489_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12081 ), 
    .F0(\CIC1Sin/d2_71_N_489_42 ), .Q0(\CIC1Sin/d2_42 ), 
    .F1(\CIC1Sin/d2_71_N_489_43 ), .Q1(\CIC1Sin/d2_43 ), 
    .FCO(\CIC1Sin/n12082 ));
  CIC1Sin_SLICE_160 \CIC1Sin/SLICE_160 ( .D1(\CIC1Sin/d1_41 ), 
    .C1(\CIC1Sin/n4222 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_41 ), 
    .D0(\CIC1Sin/d1_40 ), .C0(\CIC1Sin/n4223 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_40 ), .DI1(\CIC1Sin/d2_71_N_489_41 ), 
    .DI0(\CIC1Sin/d2_71_N_489_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12080 ), 
    .F0(\CIC1Sin/d2_71_N_489_40 ), .Q0(\CIC1Sin/d2_40 ), 
    .F1(\CIC1Sin/d2_71_N_489_41 ), .Q1(\CIC1Sin/d2_41 ), 
    .FCO(\CIC1Sin/n12081 ));
  CIC1Sin_SLICE_161 \CIC1Sin/SLICE_161 ( .D1(\CIC1Sin/d1_39 ), 
    .C1(\CIC1Sin/n4224 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_39 ), 
    .D0(\CIC1Sin/d1_38 ), .C0(\CIC1Sin/n4225 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_38 ), .DI1(\CIC1Sin/d2_71_N_489_39 ), 
    .DI0(\CIC1Sin/d2_71_N_489_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12079 ), 
    .F0(\CIC1Sin/d2_71_N_489_38 ), .Q0(\CIC1Sin/d2_38 ), 
    .F1(\CIC1Sin/d2_71_N_489_39 ), .Q1(\CIC1Sin/d2_39 ), 
    .FCO(\CIC1Sin/n12080 ));
  CIC1Sin_SLICE_162 \CIC1Sin/SLICE_162 ( .D1(\CIC1Sin/d1_37 ), 
    .C1(\CIC1Sin/n4226 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_37 ), 
    .D0(\CIC1Sin/d1_36 ), .C0(\CIC1Sin/n4227 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_36 ), .DI1(\CIC1Sin/d2_71_N_489_37 ), 
    .DI0(\CIC1Sin/d2_71_N_489_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12078 ), 
    .F0(\CIC1Sin/d2_71_N_489_36 ), .Q0(\CIC1Sin/d2_36 ), 
    .F1(\CIC1Sin/d2_71_N_489_37 ), .Q1(\CIC1Sin/d2_37 ), 
    .FCO(\CIC1Sin/n12079 ));
  CIC1Sin_SLICE_163 \CIC1Sin/SLICE_163 ( .A1(\CIC1Sin/n4190 ), 
    .FCO(\CIC1Sin/n12078 ));
  CIC1Sin_SLICE_164 \CIC1Sin/SLICE_164 ( .B1(\CIC1Sin/d3_71 ), 
    .A1(\CIC1Sin/d2_71 ), .B0(\CIC1Sin/d3_70 ), .A0(\CIC1Sin/d2_70 ), 
    .FCI(\CIC1Sin/n12073 ), .F0(\CIC1Sin/n4345 ), .F1(\CIC1Sin/n4344 ));
  CIC1Sin_SLICE_165 \CIC1Sin/SLICE_165 ( .B1(\CIC1Sin/d3_69 ), 
    .A1(\CIC1Sin/d2_69 ), .B0(\CIC1Sin/d3_68 ), .A0(\CIC1Sin/d2_68 ), 
    .FCI(\CIC1Sin/n12072 ), .F0(\CIC1Sin/n4347 ), .F1(\CIC1Sin/n4346 ), 
    .FCO(\CIC1Sin/n12073 ));
  CIC1Sin_SLICE_166 \CIC1Sin/SLICE_166 ( .D1(\CIC1Sin/d6_69 ), 
    .C1(\CIC1Sin/n5562 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_69 ), 
    .D0(\CIC1Sin/d6_68 ), .C0(\CIC1Sin/n5563 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_68 ), .DI1(\CIC1Sin/d7_71_N_1530_69 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_68 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11726 ), .F0(\CIC1Sin/d7_71_N_1530_68 ), 
    .Q0(\CIC1Sin/d7_68 ), .F1(\CIC1Sin/d7_71_N_1530_69 ), .Q1(\CIC1Sin/d7_69 ), 
    .FCO(\CIC1Sin/n11727 ));
  CIC1Sin_SLICE_167 \CIC1Sin/SLICE_167 ( .D1(\CIC1Sin/d6_61 ), 
    .C1(\CIC1Sin/n5570 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_61 ), 
    .D0(\CIC1Sin/d6_60 ), .C0(\CIC1Sin/n5571 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_60 ), .DI1(\CIC1Sin/d7_71_N_1530_61 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_60 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11722 ), .F0(\CIC1Sin/d7_71_N_1530_60 ), 
    .Q0(\CIC1Sin/d7_60 ), .F1(\CIC1Sin/d7_71_N_1530_61 ), .Q1(\CIC1Sin/d7_61 ), 
    .FCO(\CIC1Sin/n11723 ));
  CIC1Sin_SLICE_168 \CIC1Sin/SLICE_168 ( .D1(\CIC1Sin/d6_59 ), 
    .C1(\CIC1Sin/n5572 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_59 ), 
    .D0(\CIC1Sin/d6_58 ), .C0(\CIC1Sin/n5573 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_58 ), .DI1(\CIC1Sin/d7_71_N_1530_59 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_58 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11721 ), .F0(\CIC1Sin/d7_71_N_1530_58 ), 
    .Q0(\CIC1Sin/d7_58 ), .F1(\CIC1Sin/d7_71_N_1530_59 ), .Q1(\CIC1Sin/d7_59 ), 
    .FCO(\CIC1Sin/n11722 ));
  CIC1Sin_SLICE_169 \CIC1Sin/SLICE_169 ( .D1(\CIC1Sin/d6_57 ), 
    .C1(\CIC1Sin/n5574 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_57 ), 
    .D0(\CIC1Sin/d6_56 ), .C0(\CIC1Sin/n5575 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_56 ), .DI1(\CIC1Sin/d7_71_N_1530_57 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_56 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11720 ), .F0(\CIC1Sin/d7_71_N_1530_56 ), 
    .Q0(\CIC1Sin/d7_56 ), .F1(\CIC1Sin/d7_71_N_1530_57 ), .Q1(\CIC1Sin/d7_57 ), 
    .FCO(\CIC1Sin/n11721 ));
  CIC1Sin_SLICE_170 \CIC1Sin/SLICE_170 ( .D1(\CIC1Sin/d6_55 ), 
    .C1(\CIC1Sin/n5576 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_55 ), 
    .D0(\CIC1Sin/d6_54 ), .C0(\CIC1Sin/n5577 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_54 ), .DI1(\CIC1Sin/d7_71_N_1530_55 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_54 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11719 ), .F0(\CIC1Sin/d7_71_N_1530_54 ), 
    .Q0(\CIC1Sin/d7_54 ), .F1(\CIC1Sin/d7_71_N_1530_55 ), .Q1(\CIC1Sin/d7_55 ), 
    .FCO(\CIC1Sin/n11720 ));
  CIC1Sin_SLICE_171 \CIC1Sin/SLICE_171 ( .D1(\CIC1Sin/d6_53 ), 
    .C1(\CIC1Sin/n5578 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_53 ), 
    .D0(\CIC1Sin/d6_52 ), .C0(\CIC1Sin/n5579 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_52 ), .DI1(\CIC1Sin/d7_71_N_1530_53 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_52 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11718 ), .F0(\CIC1Sin/d7_71_N_1530_52 ), 
    .Q0(\CIC1Sin/d7_52 ), .F1(\CIC1Sin/d7_71_N_1530_53 ), .Q1(\CIC1Sin/d7_53 ), 
    .FCO(\CIC1Sin/n11719 ));
  CIC1Sin_SLICE_172 \CIC1Sin/SLICE_172 ( .D1(\CIC1Sin/d6_51 ), 
    .C1(\CIC1Sin/n5580 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_51 ), 
    .D0(\CIC1Sin/d6_50 ), .C0(\CIC1Sin/n5581 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_50 ), .DI1(\CIC1Sin/d7_71_N_1530_51 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_50 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11717 ), .F0(\CIC1Sin/d7_71_N_1530_50 ), 
    .Q0(\CIC1Sin/d7_50 ), .F1(\CIC1Sin/d7_71_N_1530_51 ), .Q1(\CIC1Sin/d7_51 ), 
    .FCO(\CIC1Sin/n11718 ));
  CIC1Sin_SLICE_173 \CIC1Sin/SLICE_173 ( .D1(\CIC1Sin/d6_49 ), 
    .C1(\CIC1Sin/n5582 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_49 ), 
    .D0(\CIC1Sin/d6_48 ), .C0(\CIC1Sin/n5583 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_48 ), .DI1(\CIC1Sin/d7_71_N_1530_49 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_48 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11716 ), .F0(\CIC1Sin/d7_71_N_1530_48 ), 
    .Q0(\CIC1Sin/d7_48 ), .F1(\CIC1Sin/d7_71_N_1530_49 ), .Q1(\CIC1Sin/d7_49 ), 
    .FCO(\CIC1Sin/n11717 ));
  CIC1Sin_SLICE_174 \CIC1Sin/SLICE_174 ( .D1(\CIC1Sin/d6_47 ), 
    .C1(\CIC1Sin/n5584 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_47 ), 
    .D0(\CIC1Sin/d6_46 ), .C0(\CIC1Sin/n5585 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_46 ), .DI1(\CIC1Sin/d7_71_N_1530_47 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_46 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11715 ), .F0(\CIC1Sin/d7_71_N_1530_46 ), 
    .Q0(\CIC1Sin/d7_46 ), .F1(\CIC1Sin/d7_71_N_1530_47 ), .Q1(\CIC1Sin/d7_47 ), 
    .FCO(\CIC1Sin/n11716 ));
  CIC1Sin_SLICE_175 \CIC1Sin/SLICE_175 ( .D1(\CIC1Sin/d6_45 ), 
    .C1(\CIC1Sin/n5586 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_45 ), 
    .D0(\CIC1Sin/d6_44 ), .C0(\CIC1Sin/n5587 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_44 ), .DI1(\CIC1Sin/d7_71_N_1530_45 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_44 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11714 ), .F0(\CIC1Sin/d7_71_N_1530_44 ), 
    .Q0(\CIC1Sin/d7_44 ), .F1(\CIC1Sin/d7_71_N_1530_45 ), .Q1(\CIC1Sin/d7_45 ), 
    .FCO(\CIC1Sin/n11715 ));
  CIC1Sin_SLICE_176 \CIC1Sin/SLICE_176 ( .D1(\CIC1Sin/d6_43 ), 
    .C1(\CIC1Sin/n5588 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_43 ), 
    .D0(\CIC1Sin/d6_42 ), .C0(\CIC1Sin/n5589 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_42 ), .DI1(\CIC1Sin/d7_71_N_1530_43 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_42 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11713 ), .F0(\CIC1Sin/d7_71_N_1530_42 ), 
    .Q0(\CIC1Sin/d7_42 ), .F1(\CIC1Sin/d7_71_N_1530_43 ), .Q1(\CIC1Sin/d7_43 ), 
    .FCO(\CIC1Sin/n11714 ));
  CIC1Sin_SLICE_177 \CIC1Sin/SLICE_177 ( .D1(\CIC1Sin/d6_41 ), 
    .C1(\CIC1Sin/n5590 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_41 ), 
    .D0(\CIC1Sin/d6_40 ), .C0(\CIC1Sin/n5591 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_40 ), .DI1(\CIC1Sin/d7_71_N_1530_41 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_40 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11712 ), .F0(\CIC1Sin/d7_71_N_1530_40 ), 
    .Q0(\CIC1Sin/d7_40 ), .F1(\CIC1Sin/d7_71_N_1530_41 ), .Q1(\CIC1Sin/d7_41 ), 
    .FCO(\CIC1Sin/n11713 ));
  CIC1Sin_SLICE_178 \CIC1Sin/SLICE_178 ( .D1(\CIC1Sin/d6_39 ), 
    .C1(\CIC1Sin/n5592 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_39 ), 
    .D0(\CIC1Sin/d6_38 ), .C0(\CIC1Sin/n5593 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_38 ), .DI1(\CIC1Sin/d7_71_N_1530_39 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_38 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11711 ), .F0(\CIC1Sin/d7_71_N_1530_38 ), 
    .Q0(\CIC1Sin/d7_38 ), .F1(\CIC1Sin/d7_71_N_1530_39 ), .Q1(\CIC1Sin/d7_39 ), 
    .FCO(\CIC1Sin/n11712 ));
  CIC1Sin_SLICE_179 \CIC1Sin/SLICE_179 ( .D1(\CIC1Sin/d6_37 ), 
    .C1(\CIC1Sin/n5594 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_37 ), 
    .D0(\CIC1Sin/d6_36 ), .C0(\CIC1Sin/n5595 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_36 ), .DI1(\CIC1Sin/d7_71_N_1530_37 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_36 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11710 ), .F0(\CIC1Sin/d7_71_N_1530_36 ), 
    .Q0(\CIC1Sin/d7_36 ), .F1(\CIC1Sin/d7_71_N_1530_37 ), .Q1(\CIC1Sin/d7_37 ), 
    .FCO(\CIC1Sin/n11711 ));
  CIC1Sin_SLICE_180 \CIC1Sin/SLICE_180 ( .A1(\CIC1Sin/n5558 ), 
    .FCO(\CIC1Sin/n11710 ));
  CIC1Sin_SLICE_181 \CIC1Sin/SLICE_181 ( .B0(\CIC1Sin/d_d7_71 ), 
    .A0(\CIC1Sin/d7_71 ), .FCI(\CIC1Sin/n11706 ), .F0(\CIC1Sin/n5712 ));
  CIC1Sin_SLICE_182 \CIC1Sin/SLICE_182 ( .B1(\CIC1Sin/d_d7_70 ), 
    .A1(\CIC1Sin/d7_70 ), .B0(\CIC1Sin/d_d7_69 ), .A0(\CIC1Sin/d7_69 ), 
    .FCI(\CIC1Sin/n11705 ), .F0(\CIC1Sin/n5714 ), .F1(\CIC1Sin/n5713 ), 
    .FCO(\CIC1Sin/n11706 ));
  CIC1Sin_SLICE_183 \CIC1Sin/SLICE_183 ( .B1(\CIC1Sin/d_d7_68 ), 
    .A1(\CIC1Sin/d7_68 ), .B0(\CIC1Sin/d_d7_67 ), .A0(\CIC1Sin/d7_67 ), 
    .FCI(\CIC1Sin/n11704 ), .F0(\CIC1Sin/n5716 ), .F1(\CIC1Sin/n5715 ), 
    .FCO(\CIC1Sin/n11705 ));
  CIC1Sin_SLICE_184 \CIC1Sin/SLICE_184 ( .B1(\CIC1Sin/d_d7_66 ), 
    .A1(\CIC1Sin/d7_66 ), .B0(\CIC1Sin/d_d7_65 ), .A0(\CIC1Sin/d7_65 ), 
    .FCI(\CIC1Sin/n11703 ), .F0(\CIC1Sin/n5718 ), .F1(\CIC1Sin/n5717 ), 
    .FCO(\CIC1Sin/n11704 ));
  CIC1Sin_SLICE_185 \CIC1Sin/SLICE_185 ( .B1(\CIC1Sin/d_d7_64 ), 
    .A1(\CIC1Sin/d7_64 ), .B0(\CIC1Sin/d_d7_63 ), .A0(\CIC1Sin/d7_63 ), 
    .FCI(\CIC1Sin/n11702 ), .F0(\CIC1Sin/n5720 ), .F1(\CIC1Sin/n5719 ), 
    .FCO(\CIC1Sin/n11703 ));
  CIC1Sin_SLICE_186 \CIC1Sin/SLICE_186 ( .B1(\CIC1Sin/d_d7_62 ), 
    .A1(\CIC1Sin/d7_62 ), .B0(\CIC1Sin/d_d7_61 ), .A0(\CIC1Sin/d7_61 ), 
    .FCI(\CIC1Sin/n11701 ), .F0(\CIC1Sin/n5722 ), .F1(\CIC1Sin/n5721 ), 
    .FCO(\CIC1Sin/n11702 ));
  CIC1Sin_SLICE_187 \CIC1Sin/SLICE_187 ( .B1(\CIC1Sin/d_d7_60 ), 
    .A1(\CIC1Sin/d7_60 ), .B0(\CIC1Sin/d_d7_59 ), .A0(\CIC1Sin/d7_59 ), 
    .FCI(\CIC1Sin/n11700 ), .F0(\CIC1Sin/n5724 ), .F1(\CIC1Sin/n5723 ), 
    .FCO(\CIC1Sin/n11701 ));
  CIC1Sin_SLICE_188 \CIC1Sin/SLICE_188 ( .B1(\CIC1Sin/d_d7_58 ), 
    .A1(\CIC1Sin/d7_58 ), .B0(\CIC1Sin/d_d7_57 ), .A0(\CIC1Sin/d7_57 ), 
    .FCI(\CIC1Sin/n11699 ), .F0(\CIC1Sin/n5726 ), .F1(\CIC1Sin/n5725 ), 
    .FCO(\CIC1Sin/n11700 ));
  CIC1Sin_SLICE_189 \CIC1Sin/SLICE_189 ( .B1(\CIC1Sin/d_d7_56 ), 
    .A1(\CIC1Sin/d7_56 ), .B0(\CIC1Sin/d_d7_55 ), .A0(\CIC1Sin/d7_55 ), 
    .FCI(\CIC1Sin/n11698 ), .F0(\CIC1Sin/n5728 ), .F1(\CIC1Sin/n5727 ), 
    .FCO(\CIC1Sin/n11699 ));
  CIC1Sin_SLICE_190 \CIC1Sin/SLICE_190 ( .B1(\CIC1Sin/d_d7_54 ), 
    .A1(\CIC1Sin/d7_54 ), .B0(\CIC1Sin/d_d7_53 ), .A0(\CIC1Sin/d7_53 ), 
    .FCI(\CIC1Sin/n11697 ), .F0(\CIC1Sin/n5730 ), .F1(\CIC1Sin/n5729 ), 
    .FCO(\CIC1Sin/n11698 ));
  CIC1Sin_SLICE_191 \CIC1Sin/SLICE_191 ( .B1(\CIC1Sin/d3_67 ), 
    .A1(\CIC1Sin/d2_67 ), .B0(\CIC1Sin/d3_66 ), .A0(\CIC1Sin/d2_66 ), 
    .FCI(\CIC1Sin/n12071 ), .F0(\CIC1Sin/n4349 ), .F1(\CIC1Sin/n4348 ), 
    .FCO(\CIC1Sin/n12072 ));
  CIC1Sin_SLICE_192 \CIC1Sin/SLICE_192 ( .B1(\CIC1Sin/d_d7_52 ), 
    .A1(\CIC1Sin/d7_52 ), .B0(\CIC1Sin/d_d7_51 ), .A0(\CIC1Sin/d7_51 ), 
    .FCI(\CIC1Sin/n11696 ), .F0(\CIC1Sin/n5732 ), .F1(\CIC1Sin/n5731 ), 
    .FCO(\CIC1Sin/n11697 ));
  CIC1Sin_SLICE_193 \CIC1Sin/SLICE_193 ( .B1(\CIC1Sin/d_d7_50 ), 
    .A1(\CIC1Sin/d7_50 ), .B0(\CIC1Sin/d_d7_49 ), .A0(\CIC1Sin/d7_49 ), 
    .FCI(\CIC1Sin/n11695 ), .F0(\CIC1Sin/n5734 ), .F1(\CIC1Sin/n5733 ), 
    .FCO(\CIC1Sin/n11696 ));
  CIC1Sin_SLICE_194 \CIC1Sin/SLICE_194 ( .B1(\CIC1Sin/d_d7_48 ), 
    .A1(\CIC1Sin/d7_48 ), .B0(\CIC1Sin/d_d7_47 ), .A0(\CIC1Sin/d7_47 ), 
    .FCI(\CIC1Sin/n11694 ), .F0(\CIC1Sin/n5736 ), .F1(\CIC1Sin/n5735 ), 
    .FCO(\CIC1Sin/n11695 ));
  CIC1Sin_SLICE_195 \CIC1Sin/SLICE_195 ( .B1(\CIC1Sin/d_d7_46 ), 
    .A1(\CIC1Sin/d7_46 ), .B0(\CIC1Sin/d_d7_45 ), .A0(\CIC1Sin/d7_45 ), 
    .FCI(\CIC1Sin/n11693 ), .F0(\CIC1Sin/n5738 ), .F1(\CIC1Sin/n5737 ), 
    .FCO(\CIC1Sin/n11694 ));
  CIC1Sin_SLICE_196 \CIC1Sin/SLICE_196 ( .B1(\CIC1Sin/d_d7_44 ), 
    .A1(\CIC1Sin/d7_44 ), .B0(\CIC1Sin/d_d7_43 ), .A0(\CIC1Sin/d7_43 ), 
    .FCI(\CIC1Sin/n11692 ), .F0(\CIC1Sin/n5740 ), .F1(\CIC1Sin/n5739 ), 
    .FCO(\CIC1Sin/n11693 ));
  CIC1Sin_SLICE_197 \CIC1Sin/SLICE_197 ( .B1(\CIC1Sin/d_d7_42 ), 
    .A1(\CIC1Sin/d7_42 ), .B0(\CIC1Sin/d_d7_41 ), .A0(\CIC1Sin/d7_41 ), 
    .FCI(\CIC1Sin/n11691 ), .F0(\CIC1Sin/n5742 ), .F1(\CIC1Sin/n5741 ), 
    .FCO(\CIC1Sin/n11692 ));
  CIC1Sin_SLICE_198 \CIC1Sin/SLICE_198 ( .B1(\CIC1Sin/d3_65 ), 
    .A1(\CIC1Sin/d2_65 ), .B0(\CIC1Sin/d3_64 ), .A0(\CIC1Sin/d2_64 ), 
    .FCI(\CIC1Sin/n12070 ), .F0(\CIC1Sin/n4351 ), .F1(\CIC1Sin/n4350 ), 
    .FCO(\CIC1Sin/n12071 ));
  CIC1Sin_SLICE_199 \CIC1Sin/SLICE_199 ( .FCI(\CIC1Sin/n12261 ), 
    .F0(\CIC1Sin/n4038 ));
  CIC1Sin_SLICE_200 \CIC1Sin/SLICE_200 ( .D1(\CIC1Sin/d6_67 ), 
    .C1(\CIC1Sin/n5564 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_67 ), 
    .D0(\CIC1Sin/d6_66 ), .C0(\CIC1Sin/n5565 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_66 ), .DI1(\CIC1Sin/d7_71_N_1530_67 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_66 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11725 ), .F0(\CIC1Sin/d7_71_N_1530_66 ), 
    .Q0(\CIC1Sin/d7_66 ), .F1(\CIC1Sin/d7_71_N_1530_67 ), .Q1(\CIC1Sin/d7_67 ), 
    .FCO(\CIC1Sin/n11726 ));
  CIC1Sin_SLICE_201 \CIC1Sin/SLICE_201 ( .B1(\CIC1Sin/d1_35 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_34 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_35 ), .DI0(\CIC1Sin/d1_71_N_417_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12260 ), .F0(\CIC1Sin/d1_71_N_417_34 ), 
    .Q0(\CIC1Sin/d1_34 ), .F1(\CIC1Sin/d1_71_N_417_35 ), .Q1(\CIC1Sin/d1_35 ), 
    .FCO(\CIC1Sin/n12261 ));
  CIC1Sin_SLICE_202 \CIC1Sin/SLICE_202 ( .B1(\CIC1Sin/d1_33 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_32 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_33 ), .DI0(\CIC1Sin/d1_71_N_417_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12259 ), .F0(\CIC1Sin/d1_71_N_417_32 ), 
    .Q0(\CIC1Sin/d1_32 ), .F1(\CIC1Sin/d1_71_N_417_33 ), .Q1(\CIC1Sin/d1_33 ), 
    .FCO(\CIC1Sin/n12260 ));
  CIC1Sin_SLICE_203 \CIC1Sin/SLICE_203 ( .B0(\CIC1Sin/d_d6_71 ), 
    .A0(\CIC1Sin/d6_71 ), .FCI(\CIC1Sin/n11746 ), .F0(\CIC1Sin/n5560 ));
  CIC1Sin_SLICE_204 \CIC1Sin/SLICE_204 ( .B1(\CIC1Sin/d_d6_70 ), 
    .A1(\CIC1Sin/d6_70 ), .B0(\CIC1Sin/d_d6_69 ), .A0(\CIC1Sin/d6_69 ), 
    .FCI(\CIC1Sin/n11745 ), .F0(\CIC1Sin/n5562 ), .F1(\CIC1Sin/n5561 ), 
    .FCO(\CIC1Sin/n11746 ));
  CIC1Sin_SLICE_205 \CIC1Sin/SLICE_205 ( .B1(\CIC1Sin/d_d6_68 ), 
    .A1(\CIC1Sin/d6_68 ), .B0(\CIC1Sin/d_d6_67 ), .A0(\CIC1Sin/d6_67 ), 
    .FCI(\CIC1Sin/n11744 ), .F0(\CIC1Sin/n5564 ), .F1(\CIC1Sin/n5563 ), 
    .FCO(\CIC1Sin/n11745 ));
  CIC1Sin_SLICE_206 \CIC1Sin/SLICE_206 ( .B1(\CIC1Sin/d_d6_66 ), 
    .A1(\CIC1Sin/d6_66 ), .B0(\CIC1Sin/d_d6_65 ), .A0(\CIC1Sin/d6_65 ), 
    .FCI(\CIC1Sin/n11743 ), .F0(\CIC1Sin/n5566 ), .F1(\CIC1Sin/n5565 ), 
    .FCO(\CIC1Sin/n11744 ));
  CIC1Sin_SLICE_207 \CIC1Sin/SLICE_207 ( .B1(\CIC1Sin/d_d6_64 ), 
    .A1(\CIC1Sin/d6_64 ), .B0(\CIC1Sin/d_d6_63 ), .A0(\CIC1Sin/d6_63 ), 
    .FCI(\CIC1Sin/n11742 ), .F0(\CIC1Sin/n5568 ), .F1(\CIC1Sin/n5567 ), 
    .FCO(\CIC1Sin/n11743 ));
  CIC1Sin_SLICE_208 \CIC1Sin/SLICE_208 ( .B1(\CIC1Sin/d_d6_62 ), 
    .A1(\CIC1Sin/d6_62 ), .B0(\CIC1Sin/d_d6_61 ), .A0(\CIC1Sin/d6_61 ), 
    .FCI(\CIC1Sin/n11741 ), .F0(\CIC1Sin/n5570 ), .F1(\CIC1Sin/n5569 ), 
    .FCO(\CIC1Sin/n11742 ));
  CIC1Sin_SLICE_209 \CIC1Sin/SLICE_209 ( .B1(\CIC1Sin/d_d6_60 ), 
    .A1(\CIC1Sin/d6_60 ), .B0(\CIC1Sin/d_d6_59 ), .A0(\CIC1Sin/d6_59 ), 
    .FCI(\CIC1Sin/n11740 ), .F0(\CIC1Sin/n5572 ), .F1(\CIC1Sin/n5571 ), 
    .FCO(\CIC1Sin/n11741 ));
  CIC1Sin_SLICE_210 \CIC1Sin/SLICE_210 ( .B1(\CIC1Sin/d_d6_58 ), 
    .A1(\CIC1Sin/d6_58 ), .B0(\CIC1Sin/d_d6_57 ), .A0(\CIC1Sin/d6_57 ), 
    .FCI(\CIC1Sin/n11739 ), .F0(\CIC1Sin/n5574 ), .F1(\CIC1Sin/n5573 ), 
    .FCO(\CIC1Sin/n11740 ));
  CIC1Sin_SLICE_211 \CIC1Sin/SLICE_211 ( .B1(\CIC1Sin/d_d6_56 ), 
    .A1(\CIC1Sin/d6_56 ), .B0(\CIC1Sin/d_d6_55 ), .A0(\CIC1Sin/d6_55 ), 
    .FCI(\CIC1Sin/n11738 ), .F0(\CIC1Sin/n5576 ), .F1(\CIC1Sin/n5575 ), 
    .FCO(\CIC1Sin/n11739 ));
  CIC1Sin_SLICE_212 \CIC1Sin/SLICE_212 ( .B1(\CIC1Sin/d_d6_54 ), 
    .A1(\CIC1Sin/d6_54 ), .B0(\CIC1Sin/d_d6_53 ), .A0(\CIC1Sin/d6_53 ), 
    .FCI(\CIC1Sin/n11737 ), .F0(\CIC1Sin/n5578 ), .F1(\CIC1Sin/n5577 ), 
    .FCO(\CIC1Sin/n11738 ));
  CIC1Sin_SLICE_213 \CIC1Sin/SLICE_213 ( .B1(\CIC1Sin/d_d6_52 ), 
    .A1(\CIC1Sin/d6_52 ), .B0(\CIC1Sin/d_d6_51 ), .A0(\CIC1Sin/d6_51 ), 
    .FCI(\CIC1Sin/n11736 ), .F0(\CIC1Sin/n5580 ), .F1(\CIC1Sin/n5579 ), 
    .FCO(\CIC1Sin/n11737 ));
  CIC1Sin_SLICE_214 \CIC1Sin/SLICE_214 ( .B1(\CIC1Sin/d_d6_50 ), 
    .A1(\CIC1Sin/d6_50 ), .B0(\CIC1Sin/d_d6_49 ), .A0(\CIC1Sin/d6_49 ), 
    .FCI(\CIC1Sin/n11735 ), .F0(\CIC1Sin/n5582 ), .F1(\CIC1Sin/n5581 ), 
    .FCO(\CIC1Sin/n11736 ));
  CIC1Sin_SLICE_215 \CIC1Sin/SLICE_215 ( .B1(\CIC1Sin/d_d6_48 ), 
    .A1(\CIC1Sin/d6_48 ), .B0(\CIC1Sin/d_d6_47 ), .A0(\CIC1Sin/d6_47 ), 
    .FCI(\CIC1Sin/n11734 ), .F0(\CIC1Sin/n5584 ), .F1(\CIC1Sin/n5583 ), 
    .FCO(\CIC1Sin/n11735 ));
  CIC1Sin_SLICE_216 \CIC1Sin/SLICE_216 ( .B1(\CIC1Sin/d_d6_46 ), 
    .A1(\CIC1Sin/d6_46 ), .B0(\CIC1Sin/d_d6_45 ), .A0(\CIC1Sin/d6_45 ), 
    .FCI(\CIC1Sin/n11733 ), .F0(\CIC1Sin/n5586 ), .F1(\CIC1Sin/n5585 ), 
    .FCO(\CIC1Sin/n11734 ));
  CIC1Sin_SLICE_217 \CIC1Sin/SLICE_217 ( .B1(\CIC1Sin/d_d6_44 ), 
    .A1(\CIC1Sin/d6_44 ), .B0(\CIC1Sin/d_d6_43 ), .A0(\CIC1Sin/d6_43 ), 
    .FCI(\CIC1Sin/n11732 ), .F0(\CIC1Sin/n5588 ), .F1(\CIC1Sin/n5587 ), 
    .FCO(\CIC1Sin/n11733 ));
  CIC1Sin_SLICE_218 \CIC1Sin/SLICE_218 ( .B1(\CIC1Sin/d_d6_42 ), 
    .A1(\CIC1Sin/d6_42 ), .B0(\CIC1Sin/d_d6_41 ), .A0(\CIC1Sin/d6_41 ), 
    .FCI(\CIC1Sin/n11731 ), .F0(\CIC1Sin/n5590 ), .F1(\CIC1Sin/n5589 ), 
    .FCO(\CIC1Sin/n11732 ));
  CIC1Sin_SLICE_219 \CIC1Sin/SLICE_219 ( .B1(\CIC1Sin/d_d6_40 ), 
    .A1(\CIC1Sin/d6_40 ), .B0(\CIC1Sin/d_d6_39 ), .A0(\CIC1Sin/d6_39 ), 
    .FCI(\CIC1Sin/n11730 ), .F0(\CIC1Sin/n5592 ), .F1(\CIC1Sin/n5591 ), 
    .FCO(\CIC1Sin/n11731 ));
  CIC1Sin_SLICE_220 \CIC1Sin/SLICE_220 ( .B1(\CIC1Sin/d_d6_38 ), 
    .A1(\CIC1Sin/d6_38 ), .B0(\CIC1Sin/d_d6_37 ), .A0(\CIC1Sin/d6_37 ), 
    .FCI(\CIC1Sin/n11729 ), .F0(\CIC1Sin/n5594 ), .F1(\CIC1Sin/n5593 ), 
    .FCO(\CIC1Sin/n11730 ));
  CIC1Sin_SLICE_221 \CIC1Sin/SLICE_221 ( .B1(\CIC1Sin/d_d6_36 ), 
    .A1(\CIC1Sin/d6_36 ), .F1(\CIC1Sin/n5595 ), .FCO(\CIC1Sin/n11729 ));
  CIC1Sin_SLICE_222 \CIC1Sin/SLICE_222 ( .B1(\CIC1Sin/d3_63 ), 
    .A1(\CIC1Sin/d2_63 ), .B0(\CIC1Sin/d3_62 ), .A0(\CIC1Sin/d2_62 ), 
    .FCI(\CIC1Sin/n12069 ), .F0(\CIC1Sin/n4353 ), .F1(\CIC1Sin/n4352 ), 
    .FCO(\CIC1Sin/n12070 ));
  CIC1Sin_SLICE_223 \CIC1Sin/SLICE_223 ( .B1(\CIC1Sin/d3_61 ), 
    .A1(\CIC1Sin/d2_61 ), .B0(\CIC1Sin/d3_60 ), .A0(\CIC1Sin/d2_60 ), 
    .FCI(\CIC1Sin/n12068 ), .F0(\CIC1Sin/n4355 ), .F1(\CIC1Sin/n4354 ), 
    .FCO(\CIC1Sin/n12069 ));
  CIC1Sin_SLICE_224 \CIC1Sin/SLICE_224 ( .B1(\CIC1Sin/d3_59 ), 
    .A1(\CIC1Sin/d2_59 ), .B0(\CIC1Sin/d3_58 ), .A0(\CIC1Sin/d2_58 ), 
    .FCI(\CIC1Sin/n12067 ), .F0(\CIC1Sin/n4357 ), .F1(\CIC1Sin/n4356 ), 
    .FCO(\CIC1Sin/n12068 ));
  CIC1Sin_SLICE_225 \CIC1Sin/SLICE_225 ( .B1(\CIC1Sin/d3_57 ), 
    .A1(\CIC1Sin/d2_57 ), .B0(\CIC1Sin/d3_56 ), .A0(\CIC1Sin/d2_56 ), 
    .FCI(\CIC1Sin/n12066 ), .F0(\CIC1Sin/n4359 ), .F1(\CIC1Sin/n4358 ), 
    .FCO(\CIC1Sin/n12067 ));
  CIC1Sin_SLICE_226 \CIC1Sin/SLICE_226 ( .B1(\CIC1Sin/d3_55 ), 
    .A1(\CIC1Sin/d2_55 ), .B0(\CIC1Sin/d3_54 ), .A0(\CIC1Sin/d2_54 ), 
    .FCI(\CIC1Sin/n12065 ), .F0(\CIC1Sin/n4361 ), .F1(\CIC1Sin/n4360 ), 
    .FCO(\CIC1Sin/n12066 ));
  CIC1Sin_SLICE_227 \CIC1Sin/SLICE_227 ( .B1(\CIC1Sin/d3_53 ), 
    .A1(\CIC1Sin/d2_53 ), .B0(\CIC1Sin/d3_52 ), .A0(\CIC1Sin/d2_52 ), 
    .FCI(\CIC1Sin/n12064 ), .F0(\CIC1Sin/n4363 ), .F1(\CIC1Sin/n4362 ), 
    .FCO(\CIC1Sin/n12065 ));
  CIC1Sin_SLICE_228 \CIC1Sin/SLICE_228 ( .B1(\CIC1Sin/d3_51 ), 
    .A1(\CIC1Sin/d2_51 ), .B0(\CIC1Sin/d3_50 ), .A0(\CIC1Sin/d2_50 ), 
    .FCI(\CIC1Sin/n12063 ), .F0(\CIC1Sin/n4365 ), .F1(\CIC1Sin/n4364 ), 
    .FCO(\CIC1Sin/n12064 ));
  CIC1Sin_SLICE_229 \CIC1Sin/SLICE_229 ( .B1(\CIC1Sin/d3_49 ), 
    .A1(\CIC1Sin/d2_49 ), .B0(\CIC1Sin/d3_48 ), .A0(\CIC1Sin/d2_48 ), 
    .FCI(\CIC1Sin/n12062 ), .F0(\CIC1Sin/n4367 ), .F1(\CIC1Sin/n4366 ), 
    .FCO(\CIC1Sin/n12063 ));
  CIC1Sin_SLICE_230 \CIC1Sin/SLICE_230 ( .B1(\CIC1Sin/d3_47 ), 
    .A1(\CIC1Sin/d2_47 ), .B0(\CIC1Sin/d3_46 ), .A0(\CIC1Sin/d2_46 ), 
    .FCI(\CIC1Sin/n12061 ), .F0(\CIC1Sin/n4369 ), .F1(\CIC1Sin/n4368 ), 
    .FCO(\CIC1Sin/n12062 ));
  CIC1Sin_SLICE_231 \CIC1Sin/SLICE_231 ( .B1(\CIC1Sin/d3_45 ), 
    .A1(\CIC1Sin/d2_45 ), .B0(\CIC1Sin/d3_44 ), .A0(\CIC1Sin/d2_44 ), 
    .FCI(\CIC1Sin/n12060 ), .F0(\CIC1Sin/n4371 ), .F1(\CIC1Sin/n4370 ), 
    .FCO(\CIC1Sin/n12061 ));
  CIC1Sin_SLICE_232 \CIC1Sin/SLICE_232 ( .B1(\CIC1Sin/d3_43 ), 
    .A1(\CIC1Sin/d2_43 ), .B0(\CIC1Sin/d3_42 ), .A0(\CIC1Sin/d2_42 ), 
    .FCI(\CIC1Sin/n12059 ), .F0(\CIC1Sin/n4373 ), .F1(\CIC1Sin/n4372 ), 
    .FCO(\CIC1Sin/n12060 ));
  CIC1Sin_SLICE_233 \CIC1Sin/SLICE_233 ( .B1(\CIC1Sin/d3_41 ), 
    .A1(\CIC1Sin/d2_41 ), .B0(\CIC1Sin/d3_40 ), .A0(\CIC1Sin/d2_40 ), 
    .FCI(\CIC1Sin/n12058 ), .F0(\CIC1Sin/n4375 ), .F1(\CIC1Sin/n4374 ), 
    .FCO(\CIC1Sin/n12059 ));
  CIC1Sin_SLICE_234 \CIC1Sin/SLICE_234 ( .B1(\CIC1Sin/d3_39 ), 
    .A1(\CIC1Sin/d2_39 ), .B0(\CIC1Sin/d3_38 ), .A0(\CIC1Sin/d2_38 ), 
    .FCI(\CIC1Sin/n12057 ), .F0(\CIC1Sin/n4377 ), .F1(\CIC1Sin/n4376 ), 
    .FCO(\CIC1Sin/n12058 ));
  CIC1Sin_SLICE_235 \CIC1Sin/SLICE_235 ( .B1(\CIC1Sin/d3_37 ), 
    .A1(\CIC1Sin/d2_37 ), .B0(\CIC1Sin/d3_36 ), .A0(\CIC1Sin/d2_36 ), 
    .F1(\CIC1Sin/n4378 ), .FCO(\CIC1Sin/n12057 ));
  CIC1Sin_SLICE_236 \CIC1Sin/SLICE_236 ( .D1(\CIC1Sin/d2_71 ), 
    .C1(\CIC1Sin/n4344 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_71 ), 
    .D0(\CIC1Sin/d2_70 ), .C0(\CIC1Sin/n4345 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_70 ), .DI1(\CIC1Sin/d3_71_N_561_71 ), 
    .DI0(\CIC1Sin/d3_71_N_561_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12054 ), 
    .F0(\CIC1Sin/d3_71_N_561_70 ), .Q0(\CIC1Sin/d3_70 ), 
    .F1(\CIC1Sin/d3_71_N_561_71 ), .Q1(\CIC1Sin/d3_71 ));
  CIC1Sin_SLICE_237 \CIC1Sin/SLICE_237 ( .D1(\CIC1Sin/d2_69 ), 
    .C1(\CIC1Sin/n4346 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_69 ), 
    .D0(\CIC1Sin/d2_68 ), .C0(\CIC1Sin/n4347 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_68 ), .DI1(\CIC1Sin/d3_71_N_561_69 ), 
    .DI0(\CIC1Sin/d3_71_N_561_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12053 ), 
    .F0(\CIC1Sin/d3_71_N_561_68 ), .Q0(\CIC1Sin/d3_68 ), 
    .F1(\CIC1Sin/d3_71_N_561_69 ), .Q1(\CIC1Sin/d3_69 ), 
    .FCO(\CIC1Sin/n12054 ));
  CIC1Sin_SLICE_238 \CIC1Sin/SLICE_238 ( .D1(\CIC1Sin/d2_67 ), 
    .C1(\CIC1Sin/n4348 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_67 ), 
    .D0(\CIC1Sin/d2_66 ), .C0(\CIC1Sin/n4349 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_66 ), .DI1(\CIC1Sin/d3_71_N_561_67 ), 
    .DI0(\CIC1Sin/d3_71_N_561_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12052 ), 
    .F0(\CIC1Sin/d3_71_N_561_66 ), .Q0(\CIC1Sin/d3_66 ), 
    .F1(\CIC1Sin/d3_71_N_561_67 ), .Q1(\CIC1Sin/d3_67 ), 
    .FCO(\CIC1Sin/n12053 ));
  CIC1Sin_SLICE_239 \CIC1Sin/SLICE_239 ( .D1(\CIC1Sin/d2_65 ), 
    .C1(\CIC1Sin/n4350 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_65 ), 
    .D0(\CIC1Sin/d2_64 ), .C0(\CIC1Sin/n4351 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_64 ), .DI1(\CIC1Sin/d3_71_N_561_65 ), 
    .DI0(\CIC1Sin/d3_71_N_561_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12051 ), 
    .F0(\CIC1Sin/d3_71_N_561_64 ), .Q0(\CIC1Sin/d3_64 ), 
    .F1(\CIC1Sin/d3_71_N_561_65 ), .Q1(\CIC1Sin/d3_65 ), 
    .FCO(\CIC1Sin/n12052 ));
  CIC1Sin_SLICE_240 \CIC1Sin/SLICE_240 ( .D1(\CIC1Sin/d2_63 ), 
    .C1(\CIC1Sin/n4352 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_63 ), 
    .D0(\CIC1Sin/d2_62 ), .C0(\CIC1Sin/n4353 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_62 ), .DI1(\CIC1Sin/d3_71_N_561_63 ), 
    .DI0(\CIC1Sin/d3_71_N_561_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12050 ), 
    .F0(\CIC1Sin/d3_71_N_561_62 ), .Q0(\CIC1Sin/d3_62 ), 
    .F1(\CIC1Sin/d3_71_N_561_63 ), .Q1(\CIC1Sin/d3_63 ), 
    .FCO(\CIC1Sin/n12051 ));
  CIC1Sin_SLICE_241 \CIC1Sin/SLICE_241 ( .D1(\CIC1Sin/d2_61 ), 
    .C1(\CIC1Sin/n4354 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_61 ), 
    .D0(\CIC1Sin/d2_60 ), .C0(\CIC1Sin/n4355 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_60 ), .DI1(\CIC1Sin/d3_71_N_561_61 ), 
    .DI0(\CIC1Sin/d3_71_N_561_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12049 ), 
    .F0(\CIC1Sin/d3_71_N_561_60 ), .Q0(\CIC1Sin/d3_60 ), 
    .F1(\CIC1Sin/d3_71_N_561_61 ), .Q1(\CIC1Sin/d3_61 ), 
    .FCO(\CIC1Sin/n12050 ));
  CIC1Sin_SLICE_242 \CIC1Sin/SLICE_242 ( .D1(\CIC1Sin/d2_59 ), 
    .C1(\CIC1Sin/n4356 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_59 ), 
    .D0(\CIC1Sin/d2_58 ), .C0(\CIC1Sin/n4357 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_58 ), .DI1(\CIC1Sin/d3_71_N_561_59 ), 
    .DI0(\CIC1Sin/d3_71_N_561_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12048 ), 
    .F0(\CIC1Sin/d3_71_N_561_58 ), .Q0(\CIC1Sin/d3_58 ), 
    .F1(\CIC1Sin/d3_71_N_561_59 ), .Q1(\CIC1Sin/d3_59 ), 
    .FCO(\CIC1Sin/n12049 ));
  CIC1Sin_SLICE_243 \CIC1Sin/SLICE_243 ( .D1(\CIC1Sin/d2_57 ), 
    .C1(\CIC1Sin/n4358 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_57 ), 
    .D0(\CIC1Sin/d2_56 ), .C0(\CIC1Sin/n4359 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_56 ), .DI1(\CIC1Sin/d3_71_N_561_57 ), 
    .DI0(\CIC1Sin/d3_71_N_561_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12047 ), 
    .F0(\CIC1Sin/d3_71_N_561_56 ), .Q0(\CIC1Sin/d3_56 ), 
    .F1(\CIC1Sin/d3_71_N_561_57 ), .Q1(\CIC1Sin/d3_57 ), 
    .FCO(\CIC1Sin/n12048 ));
  CIC1Sin_SLICE_244 \CIC1Sin/SLICE_244 ( .D1(\CIC1Sin/d2_55 ), 
    .C1(\CIC1Sin/n4360 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_55 ), 
    .D0(\CIC1Sin/d2_54 ), .C0(\CIC1Sin/n4361 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_54 ), .DI1(\CIC1Sin/d3_71_N_561_55 ), 
    .DI0(\CIC1Sin/d3_71_N_561_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12046 ), 
    .F0(\CIC1Sin/d3_71_N_561_54 ), .Q0(\CIC1Sin/d3_54 ), 
    .F1(\CIC1Sin/d3_71_N_561_55 ), .Q1(\CIC1Sin/d3_55 ), 
    .FCO(\CIC1Sin/n12047 ));
  CIC1Sin_SLICE_245 \CIC1Sin/SLICE_245 ( .D1(\CIC1Sin/d2_53 ), 
    .C1(\CIC1Sin/n4362 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_53 ), 
    .D0(\CIC1Sin/d2_52 ), .C0(\CIC1Sin/n4363 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_52 ), .DI1(\CIC1Sin/d3_71_N_561_53 ), 
    .DI0(\CIC1Sin/d3_71_N_561_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12045 ), 
    .F0(\CIC1Sin/d3_71_N_561_52 ), .Q0(\CIC1Sin/d3_52 ), 
    .F1(\CIC1Sin/d3_71_N_561_53 ), .Q1(\CIC1Sin/d3_53 ), 
    .FCO(\CIC1Sin/n12046 ));
  CIC1Sin_SLICE_246 \CIC1Sin/SLICE_246 ( .D1(\CIC1Sin/d2_51 ), 
    .C1(\CIC1Sin/n4364 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_51 ), 
    .D0(\CIC1Sin/d2_50 ), .C0(\CIC1Sin/n4365 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_50 ), .DI1(\CIC1Sin/d3_71_N_561_51 ), 
    .DI0(\CIC1Sin/d3_71_N_561_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12044 ), 
    .F0(\CIC1Sin/d3_71_N_561_50 ), .Q0(\CIC1Sin/d3_50 ), 
    .F1(\CIC1Sin/d3_71_N_561_51 ), .Q1(\CIC1Sin/d3_51 ), 
    .FCO(\CIC1Sin/n12045 ));
  CIC1Sin_SLICE_247 \CIC1Sin/SLICE_247 ( .D1(\CIC1Sin/d2_49 ), 
    .C1(\CIC1Sin/n4366 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_49 ), 
    .D0(\CIC1Sin/d2_48 ), .C0(\CIC1Sin/n4367 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_48 ), .DI1(\CIC1Sin/d3_71_N_561_49 ), 
    .DI0(\CIC1Sin/d3_71_N_561_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12043 ), 
    .F0(\CIC1Sin/d3_71_N_561_48 ), .Q0(\CIC1Sin/d3_48 ), 
    .F1(\CIC1Sin/d3_71_N_561_49 ), .Q1(\CIC1Sin/d3_49 ), 
    .FCO(\CIC1Sin/n12044 ));
  CIC1Sin_SLICE_248 \CIC1Sin/SLICE_248 ( .B1(\CIC1Sin/d1_31 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_30 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_31 ), .DI0(\CIC1Sin/d1_71_N_417_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12258 ), .F0(\CIC1Sin/d1_71_N_417_30 ), 
    .Q0(\CIC1Sin/d1_30 ), .F1(\CIC1Sin/d1_71_N_417_31 ), .Q1(\CIC1Sin/d1_31 ), 
    .FCO(\CIC1Sin/n12259 ));
  CIC1Sin_SLICE_249 \CIC1Sin/SLICE_249 ( .B1(\CIC1Sin/d1_29 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_28 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_29 ), .DI0(\CIC1Sin/d1_71_N_417_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12257 ), .F0(\CIC1Sin/d1_71_N_417_28 ), 
    .Q0(\CIC1Sin/d1_28 ), .F1(\CIC1Sin/d1_71_N_417_29 ), .Q1(\CIC1Sin/d1_29 ), 
    .FCO(\CIC1Sin/n12258 ));
  CIC1Sin_SLICE_250 \CIC1Sin/SLICE_250 ( .B1(\CIC1Sin/d1_27 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_26 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_27 ), .DI0(\CIC1Sin/d1_71_N_417_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12256 ), .F0(\CIC1Sin/d1_71_N_417_26 ), 
    .Q0(\CIC1Sin/d1_26 ), .F1(\CIC1Sin/d1_71_N_417_27 ), .Q1(\CIC1Sin/d1_27 ), 
    .FCO(\CIC1Sin/n12257 ));
  CIC1Sin_SLICE_251 \CIC1Sin/SLICE_251 ( .B0(\CIC1Sin/d_d9_71 ), 
    .A0(\CIC1Sin/d9_71 ), .FCI(\CIC1Sin/n11408 ), .F0(\CIC1Sin/n6320 ));
  CIC1Sin_SLICE_252 \CIC1Sin/SLICE_252 ( .B1(\CIC1Sin/d_d9_70 ), 
    .A1(\CIC1Sin/d9_70 ), .B0(\CIC1Sin/d_d9_69 ), .A0(\CIC1Sin/d9_69 ), 
    .FCI(\CIC1Sin/n11407 ), .F0(\CIC1Sin/n6322 ), .F1(\CIC1Sin/n6321 ), 
    .FCO(\CIC1Sin/n11408 ));
  CIC1Sin_SLICE_253 \CIC1Sin/SLICE_253 ( .B1(\CIC1Sin/d_d9_68 ), 
    .A1(\CIC1Sin/d9_68 ), .B0(\CIC1Sin/d_d9_67 ), .A0(\CIC1Sin/d9_67 ), 
    .FCI(\CIC1Sin/n11406 ), .F0(\CIC1Sin/n6324 ), .F1(\CIC1Sin/n6323 ), 
    .FCO(\CIC1Sin/n11407 ));
  CIC1Sin_SLICE_254 \CIC1Sin/SLICE_254 ( .B1(\CIC1Sin/d_d9_66 ), 
    .A1(\CIC1Sin/d9_66 ), .B0(\CIC1Sin/d_d9_65 ), .A0(\CIC1Sin/d9_65 ), 
    .FCI(\CIC1Sin/n11405 ), .F0(\CIC1Sin/n6326 ), .F1(\CIC1Sin/n6325 ), 
    .FCO(\CIC1Sin/n11406 ));
  CIC1Sin_SLICE_255 \CIC1Sin/SLICE_255 ( .B1(\CIC1Sin/d_d9_64 ), 
    .A1(\CIC1Sin/d9_64 ), .B0(\CIC1Sin/d_d9_63 ), .A0(\CIC1Sin/d9_63 ), 
    .FCI(\CIC1Sin/n11404 ), .F0(\CIC1Sin/n6328 ), .F1(\CIC1Sin/n6327 ), 
    .FCO(\CIC1Sin/n11405 ));
  CIC1Sin_SLICE_256 \CIC1Sin/SLICE_256 ( .B1(\CIC1Sin/d_d9_62 ), 
    .A1(\CIC1Sin/d9_62 ), .B0(\CIC1Sin/d_d9_61 ), .A0(\CIC1Sin/d9_61 ), 
    .FCI(\CIC1Sin/n11403 ), .F0(\CIC1Sin/n6330 ), .F1(\CIC1Sin/n6329 ), 
    .FCO(\CIC1Sin/n11404 ));
  CIC1Sin_SLICE_257 \CIC1Sin/SLICE_257 ( .B1(\CIC1Sin/d_d9_60 ), 
    .A1(\CIC1Sin/d9_60 ), .B0(\CIC1Sin/d_d9_59 ), .A0(\CIC1Sin/d9_59 ), 
    .FCI(\CIC1Sin/n11402 ), .F0(\CIC1Sin/n6332 ), .F1(\CIC1Sin/n6331 ), 
    .FCO(\CIC1Sin/n11403 ));
  CIC1Sin_SLICE_258 \CIC1Sin/SLICE_258 ( .B1(\CIC1Sin/d_d9_58 ), 
    .A1(\CIC1Sin/d9_58 ), .B0(\CIC1Sin/d_d9_57 ), .A0(\CIC1Sin/d9_57 ), 
    .FCI(\CIC1Sin/n11401 ), .F0(\CIC1Sin/n6334 ), .F1(\CIC1Sin/n6333 ), 
    .FCO(\CIC1Sin/n11402 ));
  CIC1Sin_SLICE_259 \CIC1Sin/SLICE_259 ( .B1(\CIC1Sin/d_d9_56 ), 
    .A1(\CIC1Sin/d9_56 ), .B0(\CIC1Sin/d_d9_55 ), .A0(\CIC1Sin/d9_55 ), 
    .FCI(\CIC1Sin/n11400 ), .FCO(\CIC1Sin/n11401 ));
  CIC1Sin_SLICE_260 \CIC1Sin/SLICE_260 ( .B1(\CIC1Sin/d_d9_54 ), 
    .A1(\CIC1Sin/d9_54 ), .B0(\CIC1Sin/d_d9_53 ), .A0(\CIC1Sin/d9_53 ), 
    .FCI(\CIC1Sin/n11399 ), .FCO(\CIC1Sin/n11400 ));
  CIC1Sin_SLICE_261 \CIC1Sin/SLICE_261 ( .B1(\CIC1Sin/d_d9_52 ), 
    .A1(\CIC1Sin/d9_52 ), .B0(\CIC1Sin/d_d9_51 ), .A0(\CIC1Sin/d9_51 ), 
    .FCI(\CIC1Sin/n11398 ), .FCO(\CIC1Sin/n11399 ));
  CIC1Sin_SLICE_262 \CIC1Sin/SLICE_262 ( .B1(\CIC1Sin/d_d9_50 ), 
    .A1(\CIC1Sin/d9_50 ), .B0(\CIC1Sin/d_d9_49 ), .A0(\CIC1Sin/d9_49 ), 
    .FCI(\CIC1Sin/n11397 ), .FCO(\CIC1Sin/n11398 ));
  CIC1Sin_SLICE_263 \CIC1Sin/SLICE_263 ( .B1(\CIC1Sin/d_d9_48 ), 
    .A1(\CIC1Sin/d9_48 ), .B0(\CIC1Sin/d_d9_47 ), .A0(\CIC1Sin/d9_47 ), 
    .FCI(\CIC1Sin/n11396 ), .FCO(\CIC1Sin/n11397 ));
  CIC1Sin_SLICE_264 \CIC1Sin/SLICE_264 ( .B1(\CIC1Sin/d_d9_46 ), 
    .A1(\CIC1Sin/d9_46 ), .B0(\CIC1Sin/d_d9_45 ), .A0(\CIC1Sin/d9_45 ), 
    .FCI(\CIC1Sin/n11395 ), .FCO(\CIC1Sin/n11396 ));
  CIC1Sin_SLICE_265 \CIC1Sin/SLICE_265 ( .B1(\CIC1Sin/d_d9_44 ), 
    .A1(\CIC1Sin/d9_44 ), .B0(\CIC1Sin/d_d9_43 ), .A0(\CIC1Sin/d9_43 ), 
    .FCI(\CIC1Sin/n11394 ), .FCO(\CIC1Sin/n11395 ));
  CIC1Sin_SLICE_266 \CIC1Sin/SLICE_266 ( .B1(\CIC1Sin/d_d9_42 ), 
    .A1(\CIC1Sin/d9_42 ), .B0(\CIC1Sin/d_d9_41 ), .A0(\CIC1Sin/d9_41 ), 
    .FCI(\CIC1Sin/n11393 ), .FCO(\CIC1Sin/n11394 ));
  CIC1Sin_SLICE_267 \CIC1Sin/SLICE_267 ( .B1(\CIC1Sin/d_d9_40 ), 
    .A1(\CIC1Sin/d9_40 ), .B0(\CIC1Sin/d_d9_39 ), .A0(\CIC1Sin/d9_39 ), 
    .FCI(\CIC1Sin/n11392 ), .FCO(\CIC1Sin/n11393 ));
  CIC1Sin_SLICE_268 \CIC1Sin/SLICE_268 ( .B1(\CIC1Sin/d_d9_38 ), 
    .A1(\CIC1Sin/d9_38 ), .B0(\CIC1Sin/d_d9_37 ), .A0(\CIC1Sin/d9_37 ), 
    .FCI(\CIC1Sin/n11391 ), .FCO(\CIC1Sin/n11392 ));
  CIC1Sin_SLICE_269 \CIC1Sin/SLICE_269 ( .B1(\CIC1Sin/d_d9_36 ), 
    .A1(\CIC1Sin/d9_36 ), .FCO(\CIC1Sin/n11391 ));
  CIC1Sin_SLICE_270 \CIC1Sin/SLICE_270 ( .B0(\CIC1Sin/d_d9_71 ), 
    .A0(\CIC1Sin/d9_71 ), .FCI(\CIC1Sin/n11390 ), .F0(\CIC1Sin/n6358 ));
  CIC1Sin_SLICE_271 \CIC1Sin/SLICE_271 ( .B1(\CIC1Sin/d_d9_70 ), 
    .A1(\CIC1Sin/d9_70 ), .B0(\CIC1Sin/d_d9_69 ), .A0(\CIC1Sin/d9_69 ), 
    .FCI(\CIC1Sin/n11389 ), .F0(\CIC1Sin/n6360 ), .F1(\CIC1Sin/n6359 ), 
    .FCO(\CIC1Sin/n11390 ));
  CIC1Sin_SLICE_272 \CIC1Sin/SLICE_272 ( .B1(\CIC1Sin/d_d9_68 ), 
    .A1(\CIC1Sin/d9_68 ), .B0(\CIC1Sin/d_d9_67 ), .A0(\CIC1Sin/d9_67 ), 
    .FCI(\CIC1Sin/n11388 ), .F0(\CIC1Sin/n6362 ), .F1(\CIC1Sin/n6361 ), 
    .FCO(\CIC1Sin/n11389 ));
  CIC1Sin_SLICE_273 \CIC1Sin/SLICE_273 ( .B1(\CIC1Sin/d_d9_66 ), 
    .A1(\CIC1Sin/d9_66 ), .B0(\CIC1Sin/d_d9_65 ), .A0(\CIC1Sin/d9_65 ), 
    .FCI(\CIC1Sin/n11387 ), .F0(\CIC1Sin/n6364 ), .F1(\CIC1Sin/n6363 ), 
    .FCO(\CIC1Sin/n11388 ));
  CIC1Sin_SLICE_274 \CIC1Sin/SLICE_274 ( .B1(\CIC1Sin/d_d9_64 ), 
    .A1(\CIC1Sin/d9_64 ), .B0(\CIC1Sin/d_d9_63 ), .A0(\CIC1Sin/d9_63 ), 
    .FCI(\CIC1Sin/n11386 ), .F0(\CIC1Sin/n6366 ), .F1(\CIC1Sin/n6365 ), 
    .FCO(\CIC1Sin/n11387 ));
  CIC1Sin_SLICE_275 \CIC1Sin/SLICE_275 ( .B1(\CIC1Sin/d_d9_62 ), 
    .A1(\CIC1Sin/d9_62 ), .B0(\CIC1Sin/d_d9_61 ), .A0(\CIC1Sin/d9_61 ), 
    .FCI(\CIC1Sin/n11385 ), .F0(\CIC1Sin/n6368 ), .F1(\CIC1Sin/n6367 ), 
    .FCO(\CIC1Sin/n11386 ));
  CIC1Sin_SLICE_276 \CIC1Sin/SLICE_276 ( .B1(\CIC1Sin/d_d9_60 ), 
    .A1(\CIC1Sin/d9_60 ), .B0(\CIC1Sin/d_d9_59 ), .A0(\CIC1Sin/d9_59 ), 
    .FCI(\CIC1Sin/n11384 ), .F0(\CIC1Sin/n6370 ), .F1(\CIC1Sin/n6369 ), 
    .FCO(\CIC1Sin/n11385 ));
  CIC1Sin_SLICE_277 \CIC1Sin/SLICE_277 ( .B1(\CIC1Sin/d_d9_58 ), 
    .A1(\CIC1Sin/d9_58 ), .B0(\CIC1Sin/d_d9_57 ), .A0(\CIC1Sin/d9_57 ), 
    .FCI(\CIC1Sin/n11383 ), .F0(\CIC1Sin/n6372 ), .F1(\CIC1Sin/n6371 ), 
    .FCO(\CIC1Sin/n11384 ));
  CIC1Sin_SLICE_278 \CIC1Sin/SLICE_278 ( .B1(\CIC1Sin/d_d9_56 ), 
    .A1(\CIC1Sin/d9_56 ), .B0(\CIC1Sin/d_d9_55 ), .A0(\CIC1Sin/d9_55 ), 
    .FCI(\CIC1Sin/n11382 ), .FCO(\CIC1Sin/n11383 ));
  CIC1Sin_SLICE_279 \CIC1Sin/SLICE_279 ( .B1(\CIC1Sin/d_d9_54 ), 
    .A1(\CIC1Sin/d9_54 ), .B0(\CIC1Sin/d_d9_53 ), .A0(\CIC1Sin/d9_53 ), 
    .FCI(\CIC1Sin/n11381 ), .FCO(\CIC1Sin/n11382 ));
  CIC1Sin_SLICE_280 \CIC1Sin/SLICE_280 ( .B1(\CIC1Sin/d_d9_52 ), 
    .A1(\CIC1Sin/d9_52 ), .B0(\CIC1Sin/d_d9_51 ), .A0(\CIC1Sin/d9_51 ), 
    .FCI(\CIC1Sin/n11380 ), .FCO(\CIC1Sin/n11381 ));
  CIC1Sin_SLICE_281 \CIC1Sin/SLICE_281 ( .B1(\CIC1Sin/d_d9_50 ), 
    .A1(\CIC1Sin/d9_50 ), .B0(\CIC1Sin/d_d9_49 ), .A0(\CIC1Sin/d9_49 ), 
    .FCI(\CIC1Sin/n11379 ), .FCO(\CIC1Sin/n11380 ));
  CIC1Sin_SLICE_282 \CIC1Sin/SLICE_282 ( .B1(\CIC1Sin/d_d9_48 ), 
    .A1(\CIC1Sin/d9_48 ), .B0(\CIC1Sin/d_d9_47 ), .A0(\CIC1Sin/d9_47 ), 
    .FCI(\CIC1Sin/n11378 ), .FCO(\CIC1Sin/n11379 ));
  CIC1Sin_SLICE_283 \CIC1Sin/SLICE_283 ( .B1(\CIC1Sin/d_d9_46 ), 
    .A1(\CIC1Sin/d9_46 ), .B0(\CIC1Sin/d_d9_45 ), .A0(\CIC1Sin/d9_45 ), 
    .FCI(\CIC1Sin/n11377 ), .FCO(\CIC1Sin/n11378 ));
  CIC1Sin_SLICE_284 \CIC1Sin/SLICE_284 ( .B1(\CIC1Sin/d_d9_44 ), 
    .A1(\CIC1Sin/d9_44 ), .B0(\CIC1Sin/d_d9_43 ), .A0(\CIC1Sin/d9_43 ), 
    .FCI(\CIC1Sin/n11376 ), .FCO(\CIC1Sin/n11377 ));
  CIC1Sin_SLICE_285 \CIC1Sin/SLICE_285 ( .B1(\CIC1Sin/d_d9_42 ), 
    .A1(\CIC1Sin/d9_42 ), .B0(\CIC1Sin/d_d9_41 ), .A0(\CIC1Sin/d9_41 ), 
    .FCI(\CIC1Sin/n11375 ), .FCO(\CIC1Sin/n11376 ));
  CIC1Sin_SLICE_286 \CIC1Sin/SLICE_286 ( .B1(\CIC1Sin/d_d9_40 ), 
    .A1(\CIC1Sin/d9_40 ), .B0(\CIC1Sin/d_d9_39 ), .A0(\CIC1Sin/d9_39 ), 
    .FCI(\CIC1Sin/n11374 ), .FCO(\CIC1Sin/n11375 ));
  CIC1Sin_SLICE_287 \CIC1Sin/SLICE_287 ( .B1(\CIC1Sin/d_d9_38 ), 
    .A1(\CIC1Sin/d9_38 ), .B0(\CIC1Sin/d_d9_37 ), .A0(\CIC1Sin/d9_37 ), 
    .FCI(\CIC1Sin/n11373 ), .FCO(\CIC1Sin/n11374 ));
  CIC1Sin_SLICE_288 \CIC1Sin/SLICE_288 ( .B1(\CIC1Sin/d_d9_36 ), 
    .A1(\CIC1Sin/d9_36 ), .FCO(\CIC1Sin/n11373 ));
  CIC1Sin_SLICE_289 \CIC1Sin/SLICE_289 ( .B0(\CIC1Sin/d_d8_71 ), 
    .A0(\CIC1Sin/d8_71 ), .FCI(\CIC1Sin/n11372 ), .F0(\CIC1Sin/n6472 ));
  CIC1Sin_SLICE_290 \CIC1Sin/SLICE_290 ( .B1(\CIC1Sin/d_d8_70 ), 
    .A1(\CIC1Sin/d8_70 ), .B0(\CIC1Sin/d_d8_69 ), .A0(\CIC1Sin/d8_69 ), 
    .FCI(\CIC1Sin/n11371 ), .F0(\CIC1Sin/n6474 ), .F1(\CIC1Sin/n6473 ), 
    .FCO(\CIC1Sin/n11372 ));
  CIC1Sin_SLICE_291 \CIC1Sin/SLICE_291 ( .B1(\CIC1Sin/d_d8_68 ), 
    .A1(\CIC1Sin/d8_68 ), .B0(\CIC1Sin/d_d8_67 ), .A0(\CIC1Sin/d8_67 ), 
    .FCI(\CIC1Sin/n11370 ), .F0(\CIC1Sin/n6476 ), .F1(\CIC1Sin/n6475 ), 
    .FCO(\CIC1Sin/n11371 ));
  CIC1Sin_SLICE_292 \CIC1Sin/SLICE_292 ( .B1(\CIC1Sin/d_d8_66 ), 
    .A1(\CIC1Sin/d8_66 ), .B0(\CIC1Sin/d_d8_65 ), .A0(\CIC1Sin/d8_65 ), 
    .FCI(\CIC1Sin/n11369 ), .F0(\CIC1Sin/n6478 ), .F1(\CIC1Sin/n6477 ), 
    .FCO(\CIC1Sin/n11370 ));
  CIC1Sin_SLICE_293 \CIC1Sin/SLICE_293 ( .B1(\CIC1Sin/d_d8_64 ), 
    .A1(\CIC1Sin/d8_64 ), .B0(\CIC1Sin/d_d8_63 ), .A0(\CIC1Sin/d8_63 ), 
    .FCI(\CIC1Sin/n11368 ), .F0(\CIC1Sin/n6480 ), .F1(\CIC1Sin/n6479 ), 
    .FCO(\CIC1Sin/n11369 ));
  CIC1Sin_SLICE_294 \CIC1Sin/SLICE_294 ( .B1(\CIC1Sin/d_d8_62 ), 
    .A1(\CIC1Sin/d8_62 ), .B0(\CIC1Sin/d_d8_61 ), .A0(\CIC1Sin/d8_61 ), 
    .FCI(\CIC1Sin/n11367 ), .F0(\CIC1Sin/n6482 ), .F1(\CIC1Sin/n6481 ), 
    .FCO(\CIC1Sin/n11368 ));
  CIC1Sin_SLICE_295 \CIC1Sin/SLICE_295 ( .B1(\CIC1Sin/d_d8_60 ), 
    .A1(\CIC1Sin/d8_60 ), .B0(\CIC1Sin/d_d8_59 ), .A0(\CIC1Sin/d8_59 ), 
    .FCI(\CIC1Sin/n11366 ), .F0(\CIC1Sin/n6484 ), .F1(\CIC1Sin/n6483 ), 
    .FCO(\CIC1Sin/n11367 ));
  CIC1Sin_SLICE_296 \CIC1Sin/SLICE_296 ( .B1(\CIC1Sin/d_d8_58 ), 
    .A1(\CIC1Sin/d8_58 ), .B0(\CIC1Sin/d_d8_57 ), .A0(\CIC1Sin/d8_57 ), 
    .FCI(\CIC1Sin/n11365 ), .F0(\CIC1Sin/n6486 ), .F1(\CIC1Sin/n6485 ), 
    .FCO(\CIC1Sin/n11366 ));
  CIC1Sin_SLICE_297 \CIC1Sin/SLICE_297 ( .B1(\CIC1Sin/d_d8_56 ), 
    .A1(\CIC1Sin/d8_56 ), .B0(\CIC1Sin/d_d8_55 ), .A0(\CIC1Sin/d8_55 ), 
    .FCI(\CIC1Sin/n11364 ), .F0(\CIC1Sin/n6488 ), .F1(\CIC1Sin/n6487 ), 
    .FCO(\CIC1Sin/n11365 ));
  CIC1Sin_SLICE_298 \CIC1Sin/SLICE_298 ( .B1(\CIC1Sin/d_d8_54 ), 
    .A1(\CIC1Sin/d8_54 ), .B0(\CIC1Sin/d_d8_53 ), .A0(\CIC1Sin/d8_53 ), 
    .FCI(\CIC1Sin/n11363 ), .F0(\CIC1Sin/n6490 ), .F1(\CIC1Sin/n6489 ), 
    .FCO(\CIC1Sin/n11364 ));
  CIC1Sin_SLICE_299 \CIC1Sin/SLICE_299 ( .B1(\CIC1Sin/d_d8_52 ), 
    .A1(\CIC1Sin/d8_52 ), .B0(\CIC1Sin/d_d8_51 ), .A0(\CIC1Sin/d8_51 ), 
    .FCI(\CIC1Sin/n11362 ), .F0(\CIC1Sin/n6492 ), .F1(\CIC1Sin/n6491 ), 
    .FCO(\CIC1Sin/n11363 ));
  CIC1Sin_SLICE_300 \CIC1Sin/SLICE_300 ( .B1(\CIC1Sin/d_d8_50 ), 
    .A1(\CIC1Sin/d8_50 ), .B0(\CIC1Sin/d_d8_49 ), .A0(\CIC1Sin/d8_49 ), 
    .FCI(\CIC1Sin/n11361 ), .F0(\CIC1Sin/n6494 ), .F1(\CIC1Sin/n6493 ), 
    .FCO(\CIC1Sin/n11362 ));
  CIC1Sin_SLICE_301 \CIC1Sin/SLICE_301 ( .B1(\CIC1Sin/d_d8_48 ), 
    .A1(\CIC1Sin/d8_48 ), .B0(\CIC1Sin/d_d8_47 ), .A0(\CIC1Sin/d8_47 ), 
    .FCI(\CIC1Sin/n11360 ), .F0(\CIC1Sin/n6496 ), .F1(\CIC1Sin/n6495 ), 
    .FCO(\CIC1Sin/n11361 ));
  CIC1Sin_SLICE_302 \CIC1Sin/SLICE_302 ( .B1(\CIC1Sin/d_d8_46 ), 
    .A1(\CIC1Sin/d8_46 ), .B0(\CIC1Sin/d_d8_45 ), .A0(\CIC1Sin/d8_45 ), 
    .FCI(\CIC1Sin/n11359 ), .F0(\CIC1Sin/n6498 ), .F1(\CIC1Sin/n6497 ), 
    .FCO(\CIC1Sin/n11360 ));
  CIC1Sin_SLICE_303 \CIC1Sin/SLICE_303 ( .B1(\CIC1Sin/d_d8_44 ), 
    .A1(\CIC1Sin/d8_44 ), .B0(\CIC1Sin/d_d8_43 ), .A0(\CIC1Sin/d8_43 ), 
    .FCI(\CIC1Sin/n11358 ), .F0(\CIC1Sin/n6500 ), .F1(\CIC1Sin/n6499 ), 
    .FCO(\CIC1Sin/n11359 ));
  CIC1Sin_SLICE_304 \CIC1Sin/SLICE_304 ( .B1(\CIC1Sin/d_d8_42 ), 
    .A1(\CIC1Sin/d8_42 ), .B0(\CIC1Sin/d_d8_41 ), .A0(\CIC1Sin/d8_41 ), 
    .FCI(\CIC1Sin/n11357 ), .F0(\CIC1Sin/n6502 ), .F1(\CIC1Sin/n6501 ), 
    .FCO(\CIC1Sin/n11358 ));
  CIC1Sin_SLICE_305 \CIC1Sin/SLICE_305 ( .D1(\CIC1Sin/d2_47 ), 
    .C1(\CIC1Sin/n4368 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_47 ), 
    .D0(\CIC1Sin/d2_46 ), .C0(\CIC1Sin/n4369 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_46 ), .DI1(\CIC1Sin/d3_71_N_561_47 ), 
    .DI0(\CIC1Sin/d3_71_N_561_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12042 ), 
    .F0(\CIC1Sin/d3_71_N_561_46 ), .Q0(\CIC1Sin/d3_46 ), 
    .F1(\CIC1Sin/d3_71_N_561_47 ), .Q1(\CIC1Sin/d3_47 ), 
    .FCO(\CIC1Sin/n12043 ));
  CIC1Sin_SLICE_306 \CIC1Sin/SLICE_306 ( .B1(\CIC1Sin/d1_25 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_24 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_25 ), .DI0(\CIC1Sin/d1_71_N_417_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12255 ), .F0(\CIC1Sin/d1_71_N_417_24 ), 
    .Q0(\CIC1Sin/d1_24 ), .F1(\CIC1Sin/d1_71_N_417_25 ), .Q1(\CIC1Sin/d1_25 ), 
    .FCO(\CIC1Sin/n12256 ));
  CIC1Sin_SLICE_307 \CIC1Sin/SLICE_307 ( .B1(\CIC1Sin/d_d7_40 ), 
    .A1(\CIC1Sin/d7_40 ), .B0(\CIC1Sin/d_d7_39 ), .A0(\CIC1Sin/d7_39 ), 
    .FCI(\CIC1Sin/n11690 ), .F0(\CIC1Sin/n5744 ), .F1(\CIC1Sin/n5743 ), 
    .FCO(\CIC1Sin/n11691 ));
  CIC1Sin_SLICE_308 \CIC1Sin/SLICE_308 ( .B1(\CIC1Sin/d1_23 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_22 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_23 ), .DI0(\CIC1Sin/d1_71_N_417_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12254 ), .F0(\CIC1Sin/d1_71_N_417_22 ), 
    .Q0(\CIC1Sin/d1_22 ), .F1(\CIC1Sin/d1_71_N_417_23 ), .Q1(\CIC1Sin/d1_23 ), 
    .FCO(\CIC1Sin/n12255 ));
  CIC1Sin_SLICE_309 \CIC1Sin/SLICE_309 ( .B1(\CIC1Sin/d1_21 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_20 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_21 ), .DI0(\CIC1Sin/d1_71_N_417_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12253 ), .F0(\CIC1Sin/d1_71_N_417_20 ), 
    .Q0(\CIC1Sin/d1_20 ), .F1(\CIC1Sin/d1_71_N_417_21 ), .Q1(\CIC1Sin/d1_21 ), 
    .FCO(\CIC1Sin/n12254 ));
  CIC1Sin_SLICE_310 \CIC1Sin/SLICE_310 ( .B1(\CIC1Sin/d1_19 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_18 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_19 ), .DI0(\CIC1Sin/d1_71_N_417_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12252 ), .F0(\CIC1Sin/d1_71_N_417_18 ), 
    .Q0(\CIC1Sin/d1_18 ), .F1(\CIC1Sin/d1_71_N_417_19 ), .Q1(\CIC1Sin/d1_19 ), 
    .FCO(\CIC1Sin/n12253 ));
  CIC1Sin_SLICE_311 \CIC1Sin/SLICE_311 ( .B1(\CIC1Sin/d1_17 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_16 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_17 ), .DI0(\CIC1Sin/d1_71_N_417_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12251 ), .F0(\CIC1Sin/d1_71_N_417_16 ), 
    .Q0(\CIC1Sin/d1_16 ), .F1(\CIC1Sin/d1_71_N_417_17 ), .Q1(\CIC1Sin/d1_17 ), 
    .FCO(\CIC1Sin/n12252 ));
  CIC1Sin_SLICE_312 \CIC1Sin/SLICE_312 ( .B1(\CIC1Sin/d1_15 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_14 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_15 ), .DI0(\CIC1Sin/d1_71_N_417_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12250 ), .F0(\CIC1Sin/d1_71_N_417_14 ), 
    .Q0(\CIC1Sin/d1_14 ), .F1(\CIC1Sin/d1_71_N_417_15 ), .Q1(\CIC1Sin/d1_15 ), 
    .FCO(\CIC1Sin/n12251 ));
  CIC1Sin_SLICE_313 \CIC1Sin/SLICE_313 ( .B1(\CIC1Sin/d1_13 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_12 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_417_13 ), .DI0(\CIC1Sin/d1_71_N_417_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12249 ), .F0(\CIC1Sin/d1_71_N_417_12 ), 
    .Q0(\CIC1Sin/d1_12 ), .F1(\CIC1Sin/d1_71_N_417_13 ), .Q1(\CIC1Sin/d1_13 ), 
    .FCO(\CIC1Sin/n12250 ));
  CIC1Sin_SLICE_314 \CIC1Sin/SLICE_314 ( .B1(\CIC1Sin/d1_11 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_10 ), .A0(MixerOutSin_10), 
    .DI1(\CIC1Sin/d1_71_N_417_11 ), .DI0(\CIC1Sin/d1_71_N_417_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12248 ), .F0(\CIC1Sin/d1_71_N_417_10 ), 
    .Q0(\CIC1Sin/d1_10 ), .F1(\CIC1Sin/d1_71_N_417_11 ), .Q1(\CIC1Sin/d1_11 ), 
    .FCO(\CIC1Sin/n12249 ));
  CIC1Sin_SLICE_315 \CIC1Sin/SLICE_315 ( .D1(\CIC1Sin/d2_45 ), 
    .C1(\CIC1Sin/n4370 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_45 ), 
    .D0(\CIC1Sin/d2_44 ), .C0(\CIC1Sin/n4371 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_44 ), .DI1(\CIC1Sin/d3_71_N_561_45 ), 
    .DI0(\CIC1Sin/d3_71_N_561_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12041 ), 
    .F0(\CIC1Sin/d3_71_N_561_44 ), .Q0(\CIC1Sin/d3_44 ), 
    .F1(\CIC1Sin/d3_71_N_561_45 ), .Q1(\CIC1Sin/d3_45 ), 
    .FCO(\CIC1Sin/n12042 ));
  CIC1Sin_SLICE_316 \CIC1Sin/SLICE_316 ( .D1(\CIC1Sin/d2_43 ), 
    .C1(\CIC1Sin/n4372 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_43 ), 
    .D0(\CIC1Sin/d2_42 ), .C0(\CIC1Sin/n4373 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_42 ), .DI1(\CIC1Sin/d3_71_N_561_43 ), 
    .DI0(\CIC1Sin/d3_71_N_561_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12040 ), 
    .F0(\CIC1Sin/d3_71_N_561_42 ), .Q0(\CIC1Sin/d3_42 ), 
    .F1(\CIC1Sin/d3_71_N_561_43 ), .Q1(\CIC1Sin/d3_43 ), 
    .FCO(\CIC1Sin/n12041 ));
  CIC1Sin_SLICE_317 \CIC1Sin/SLICE_317 ( .D1(\CIC1Sin/d2_41 ), 
    .C1(\CIC1Sin/n4374 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_41 ), 
    .D0(\CIC1Sin/d2_40 ), .C0(\CIC1Sin/n4375 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_40 ), .DI1(\CIC1Sin/d3_71_N_561_41 ), 
    .DI0(\CIC1Sin/d3_71_N_561_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12039 ), 
    .F0(\CIC1Sin/d3_71_N_561_40 ), .Q0(\CIC1Sin/d3_40 ), 
    .F1(\CIC1Sin/d3_71_N_561_41 ), .Q1(\CIC1Sin/d3_41 ), 
    .FCO(\CIC1Sin/n12040 ));
  CIC1Sin_SLICE_318 \CIC1Sin/SLICE_318 ( .D1(\CIC1Sin/d2_39 ), 
    .C1(\CIC1Sin/n4376 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_39 ), 
    .D0(\CIC1Sin/d2_38 ), .C0(\CIC1Sin/n4377 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_38 ), .DI1(\CIC1Sin/d3_71_N_561_39 ), 
    .DI0(\CIC1Sin/d3_71_N_561_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12038 ), 
    .F0(\CIC1Sin/d3_71_N_561_38 ), .Q0(\CIC1Sin/d3_38 ), 
    .F1(\CIC1Sin/d3_71_N_561_39 ), .Q1(\CIC1Sin/d3_39 ), 
    .FCO(\CIC1Sin/n12039 ));
  CIC1Sin_SLICE_319 \CIC1Sin/SLICE_319 ( .D1(\CIC1Sin/d2_37 ), 
    .C1(\CIC1Sin/n4378 ), .B1(\CIC1Sin/n4342 ), .A1(\CIC1Sin/d3_37 ), 
    .D0(\CIC1Sin/d2_36 ), .C0(\CIC1Sin/n4379 ), .B0(\CIC1Sin/n4342 ), 
    .A0(\CIC1Sin/d3_36 ), .DI1(\CIC1Sin/d3_71_N_561_37 ), 
    .DI0(\CIC1Sin/d3_71_N_561_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12037 ), 
    .F0(\CIC1Sin/d3_71_N_561_36 ), .Q0(\CIC1Sin/d3_36 ), 
    .F1(\CIC1Sin/d3_71_N_561_37 ), .Q1(\CIC1Sin/d3_37 ), 
    .FCO(\CIC1Sin/n12038 ));
  CIC1Sin_SLICE_320 \CIC1Sin/SLICE_320 ( .A1(\CIC1Sin/n4342 ), 
    .FCO(\CIC1Sin/n12037 ));
  CIC1Sin_SLICE_321 \CIC1Sin/SLICE_321 ( .B1(\CIC1Sin/d4_71 ), 
    .A1(\CIC1Sin/d3_71 ), .B0(\CIC1Sin/d4_70 ), .A0(\CIC1Sin/d3_70 ), 
    .FCI(\CIC1Sin/n12032 ), .F0(\CIC1Sin/n4497 ), .F1(\CIC1Sin/n4496 ));
  CIC1Sin_SLICE_322 \CIC1Sin/SLICE_322 ( .B1(\CIC1Sin/d4_69 ), 
    .A1(\CIC1Sin/d3_69 ), .B0(\CIC1Sin/d4_68 ), .A0(\CIC1Sin/d3_68 ), 
    .FCI(\CIC1Sin/n12031 ), .F0(\CIC1Sin/n4499 ), .F1(\CIC1Sin/n4498 ), 
    .FCO(\CIC1Sin/n12032 ));
  CIC1Sin_SLICE_323 \CIC1Sin/SLICE_323 ( .B1(\CIC1Sin/d1_9 ), 
    .A1(MixerOutSin_9), .B0(\CIC1Sin/d1_8 ), .A0(MixerOutSin_8), 
    .DI1(\CIC1Sin/d1_71_N_417_9 ), .DI0(\CIC1Sin/d1_71_N_417_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12247 ), .F0(\CIC1Sin/d1_71_N_417_8 ), 
    .Q0(\CIC1Sin/d1_8 ), .F1(\CIC1Sin/d1_71_N_417_9 ), .Q1(\CIC1Sin/d1_9 ), 
    .FCO(\CIC1Sin/n12248 ));
  CIC1Sin_SLICE_324 \CIC1Sin/SLICE_324 ( .B1(\CIC1Sin/d1_7 ), 
    .A1(MixerOutSin_7), .B0(\CIC1Sin/d1_6 ), .A0(MixerOutSin_6), 
    .DI1(\CIC1Sin/d1_71_N_417_7 ), .DI0(\CIC1Sin/d1_71_N_417_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12246 ), .F0(\CIC1Sin/d1_71_N_417_6 ), 
    .Q0(\CIC1Sin/d1_6 ), .F1(\CIC1Sin/d1_71_N_417_7 ), .Q1(\CIC1Sin/d1_7 ), 
    .FCO(\CIC1Sin/n12247 ));
  CIC1Sin_SLICE_325 \CIC1Sin/SLICE_325 ( .B1(\CIC1Sin/d1_5 ), 
    .A1(MixerOutSin_5), .B0(\CIC1Sin/d1_4 ), .A0(MixerOutSin_4), 
    .DI1(\CIC1Sin/d1_71_N_417_5 ), .DI0(\CIC1Sin/d1_71_N_417_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12245 ), .F0(\CIC1Sin/d1_71_N_417_4 ), 
    .Q0(\CIC1Sin/d1_4 ), .F1(\CIC1Sin/d1_71_N_417_5 ), .Q1(\CIC1Sin/d1_5 ), 
    .FCO(\CIC1Sin/n12246 ));
  CIC1Sin_SLICE_326 \CIC1Sin/SLICE_326 ( .B1(\CIC1Sin/d1_3 ), 
    .A1(MixerOutSin_3), .B0(\CIC1Sin/d1_2 ), .A0(MixerOutSin_2), 
    .DI1(\CIC1Sin/d1_71_N_417_3 ), .DI0(\CIC1Sin/d1_71_N_417_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12244 ), .F0(\CIC1Sin/d1_71_N_417_2 ), 
    .Q0(\CIC1Sin/d1_2 ), .F1(\CIC1Sin/d1_71_N_417_3 ), .Q1(\CIC1Sin/d1_3 ), 
    .FCO(\CIC1Sin/n12245 ));
  CIC1Sin_SLICE_327 \CIC1Sin/SLICE_327 ( .B1(\CIC1Sin/d4_67 ), 
    .A1(\CIC1Sin/d3_67 ), .B0(\CIC1Sin/d4_66 ), .A0(\CIC1Sin/d3_66 ), 
    .FCI(\CIC1Sin/n12030 ), .F0(\CIC1Sin/n4501 ), .F1(\CIC1Sin/n4500 ), 
    .FCO(\CIC1Sin/n12031 ));
  CIC1Sin_SLICE_328 \CIC1Sin/SLICE_328 ( .B1(\CIC1Sin/d1_1 ), 
    .A1(MixerOutSin_1), .B0(\CIC1Sin/d1_0 ), .A0(MixerOutSin_0), 
    .DI1(\CIC1Sin/d1_71_N_417_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d1_71_N_417_1 ), 
    .Q1(\CIC1Sin/d1_1 ), .FCO(\CIC1Sin/n12244 ));
  CIC1Sin_SLICE_329 \CIC1Sin/SLICE_329 ( .B1(\CIC1Sin/d_d7_38 ), 
    .A1(\CIC1Sin/d7_38 ), .B0(\CIC1Sin/d_d7_37 ), .A0(\CIC1Sin/d7_37 ), 
    .FCI(\CIC1Sin/n11689 ), .F0(\CIC1Sin/n5746 ), .F1(\CIC1Sin/n5745 ), 
    .FCO(\CIC1Sin/n11690 ));
  CIC1Sin_SLICE_330 \CIC1Sin/SLICE_330 ( .B1(\CIC1Sin/d_d7_36 ), 
    .A1(\CIC1Sin/d7_36 ), .F1(\CIC1Sin/n5747 ), .FCO(\CIC1Sin/n11689 ));
  CIC1Sin_SLICE_331 \CIC1Sin/SLICE_331 ( .B1(\CIC1Sin/d4_65 ), 
    .A1(\CIC1Sin/d3_65 ), .B0(\CIC1Sin/d4_64 ), .A0(\CIC1Sin/d3_64 ), 
    .FCI(\CIC1Sin/n12029 ), .F0(\CIC1Sin/n4503 ), .F1(\CIC1Sin/n4502 ), 
    .FCO(\CIC1Sin/n12030 ));
  CIC1Sin_SLICE_332 \CIC1Sin/SLICE_332 ( .D1(\CIC1Sin/d7_71 ), 
    .C1(\CIC1Sin/n5712 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_71 ), 
    .D0(\CIC1Sin/d7_70 ), .C0(\CIC1Sin/n5713 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_70 ), .DI1(\CIC1Sin/d8_71_N_1602_71 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_70 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11687 ), .F0(\CIC1Sin/d8_71_N_1602_70 ), 
    .Q0(\CIC1Sin/d8_70 ), .F1(\CIC1Sin/d8_71_N_1602_71 ), .Q1(\CIC1Sin/d8_71 ));
  CIC1Sin_SLICE_333 \CIC1Sin/SLICE_333 ( .D1(\CIC1Sin/d7_69 ), 
    .C1(\CIC1Sin/n5714 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_69 ), 
    .D0(\CIC1Sin/d7_68 ), .C0(\CIC1Sin/n5715 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_68 ), .DI1(\CIC1Sin/d8_71_N_1602_69 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_68 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11686 ), .F0(\CIC1Sin/d8_71_N_1602_68 ), 
    .Q0(\CIC1Sin/d8_68 ), .F1(\CIC1Sin/d8_71_N_1602_69 ), .Q1(\CIC1Sin/d8_69 ), 
    .FCO(\CIC1Sin/n11687 ));
  CIC1Sin_SLICE_334 \CIC1Sin/SLICE_334 ( .D1(\CIC1Sin/d7_67 ), 
    .C1(\CIC1Sin/n5716 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_67 ), 
    .D0(\CIC1Sin/d7_66 ), .C0(\CIC1Sin/n5717 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_66 ), .DI1(\CIC1Sin/d8_71_N_1602_67 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_66 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11685 ), .F0(\CIC1Sin/d8_71_N_1602_66 ), 
    .Q0(\CIC1Sin/d8_66 ), .F1(\CIC1Sin/d8_71_N_1602_67 ), .Q1(\CIC1Sin/d8_67 ), 
    .FCO(\CIC1Sin/n11686 ));
  CIC1Sin_SLICE_335 \CIC1Sin/SLICE_335 ( .B1(\CIC1Sin/d4_63 ), 
    .A1(\CIC1Sin/d3_63 ), .B0(\CIC1Sin/d4_62 ), .A0(\CIC1Sin/d3_62 ), 
    .FCI(\CIC1Sin/n12028 ), .F0(\CIC1Sin/n4505 ), .F1(\CIC1Sin/n4504 ), 
    .FCO(\CIC1Sin/n12029 ));
  CIC1Sin_SLICE_336 \CIC1Sin/SLICE_336 ( .B1(\CIC1Sin/d4_61 ), 
    .A1(\CIC1Sin/d3_61 ), .B0(\CIC1Sin/d4_60 ), .A0(\CIC1Sin/d3_60 ), 
    .FCI(\CIC1Sin/n12027 ), .F0(\CIC1Sin/n4507 ), .F1(\CIC1Sin/n4506 ), 
    .FCO(\CIC1Sin/n12028 ));
  CIC1Sin_SLICE_337 \CIC1Sin/SLICE_337 ( .B1(\CIC1Sin/d4_59 ), 
    .A1(\CIC1Sin/d3_59 ), .B0(\CIC1Sin/d4_58 ), .A0(\CIC1Sin/d3_58 ), 
    .FCI(\CIC1Sin/n12026 ), .F0(\CIC1Sin/n4509 ), .F1(\CIC1Sin/n4508 ), 
    .FCO(\CIC1Sin/n12027 ));
  CIC1Sin_SLICE_338 \CIC1Sin/SLICE_338 ( .B1(\CIC1Sin/d4_57 ), 
    .A1(\CIC1Sin/d3_57 ), .B0(\CIC1Sin/d4_56 ), .A0(\CIC1Sin/d3_56 ), 
    .FCI(\CIC1Sin/n12025 ), .F0(\CIC1Sin/n4511 ), .F1(\CIC1Sin/n4510 ), 
    .FCO(\CIC1Sin/n12026 ));
  CIC1Sin_SLICE_339 \CIC1Sin/SLICE_339 ( .B1(\CIC1Sin/d4_55 ), 
    .A1(\CIC1Sin/d3_55 ), .B0(\CIC1Sin/d4_54 ), .A0(\CIC1Sin/d3_54 ), 
    .FCI(\CIC1Sin/n12024 ), .F0(\CIC1Sin/n4513 ), .F1(\CIC1Sin/n4512 ), 
    .FCO(\CIC1Sin/n12025 ));
  CIC1Sin_SLICE_340 \CIC1Sin/SLICE_340 ( .B1(\CIC1Sin/d4_53 ), 
    .A1(\CIC1Sin/d3_53 ), .B0(\CIC1Sin/d4_52 ), .A0(\CIC1Sin/d3_52 ), 
    .FCI(\CIC1Sin/n12023 ), .F0(\CIC1Sin/n4515 ), .F1(\CIC1Sin/n4514 ), 
    .FCO(\CIC1Sin/n12024 ));
  CIC1Sin_SLICE_341 \CIC1Sin/SLICE_341 ( .B1(\CIC1Sin/d4_51 ), 
    .A1(\CIC1Sin/d3_51 ), .B0(\CIC1Sin/d4_50 ), .A0(\CIC1Sin/d3_50 ), 
    .FCI(\CIC1Sin/n12022 ), .F0(\CIC1Sin/n4517 ), .F1(\CIC1Sin/n4516 ), 
    .FCO(\CIC1Sin/n12023 ));
  CIC1Sin_SLICE_342 \CIC1Sin/SLICE_342 ( .B1(\CIC1Sin/d4_49 ), 
    .A1(\CIC1Sin/d3_49 ), .B0(\CIC1Sin/d4_48 ), .A0(\CIC1Sin/d3_48 ), 
    .FCI(\CIC1Sin/n12021 ), .F0(\CIC1Sin/n4519 ), .F1(\CIC1Sin/n4518 ), 
    .FCO(\CIC1Sin/n12022 ));
  CIC1Sin_SLICE_343 \CIC1Sin/SLICE_343 ( .B1(\CIC1Sin/d4_47 ), 
    .A1(\CIC1Sin/d3_47 ), .B0(\CIC1Sin/d4_46 ), .A0(\CIC1Sin/d3_46 ), 
    .FCI(\CIC1Sin/n12020 ), .F0(\CIC1Sin/n4521 ), .F1(\CIC1Sin/n4520 ), 
    .FCO(\CIC1Sin/n12021 ));
  CIC1Sin_SLICE_344 \CIC1Sin/SLICE_344 ( .D1(\CIC1Sin/d7_65 ), 
    .C1(\CIC1Sin/n5718 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_65 ), 
    .D0(\CIC1Sin/d7_64 ), .C0(\CIC1Sin/n5719 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_64 ), .DI1(\CIC1Sin/d8_71_N_1602_65 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_64 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11684 ), .F0(\CIC1Sin/d8_71_N_1602_64 ), 
    .Q0(\CIC1Sin/d8_64 ), .F1(\CIC1Sin/d8_71_N_1602_65 ), .Q1(\CIC1Sin/d8_65 ), 
    .FCO(\CIC1Sin/n11685 ));
  CIC1Sin_SLICE_345 \CIC1Sin/SLICE_345 ( .D1(\CIC1Sin/d7_63 ), 
    .C1(\CIC1Sin/n5720 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_63 ), 
    .D0(\CIC1Sin/d7_62 ), .C0(\CIC1Sin/n5721 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_62 ), .DI1(\CIC1Sin/d8_71_N_1602_63 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_62 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11683 ), .F0(\CIC1Sin/d8_71_N_1602_62 ), 
    .Q0(\CIC1Sin/d8_62 ), .F1(\CIC1Sin/d8_71_N_1602_63 ), .Q1(\CIC1Sin/d8_63 ), 
    .FCO(\CIC1Sin/n11684 ));
  CIC1Sin_SLICE_346 \CIC1Sin/SLICE_346 ( .D1(\CIC1Sin/d7_61 ), 
    .C1(\CIC1Sin/n5722 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_61 ), 
    .D0(\CIC1Sin/d7_60 ), .C0(\CIC1Sin/n5723 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_60 ), .DI1(\CIC1Sin/d8_71_N_1602_61 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_60 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11682 ), .F0(\CIC1Sin/d8_71_N_1602_60 ), 
    .Q0(\CIC1Sin/d8_60 ), .F1(\CIC1Sin/d8_71_N_1602_61 ), .Q1(\CIC1Sin/d8_61 ), 
    .FCO(\CIC1Sin/n11683 ));
  CIC1Sin_SLICE_347 \CIC1Sin/SLICE_347 ( .B1(\CIC1Sin/d4_45 ), 
    .A1(\CIC1Sin/d3_45 ), .B0(\CIC1Sin/d4_44 ), .A0(\CIC1Sin/d3_44 ), 
    .FCI(\CIC1Sin/n12019 ), .F0(\CIC1Sin/n4523 ), .F1(\CIC1Sin/n4522 ), 
    .FCO(\CIC1Sin/n12020 ));
  CIC1Sin_SLICE_348 \CIC1Sin/SLICE_348 ( .D1(\CIC1Sin/d7_59 ), 
    .C1(\CIC1Sin/n5724 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_59 ), 
    .D0(\CIC1Sin/d7_58 ), .C0(\CIC1Sin/n5725 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_58 ), .DI1(\CIC1Sin/d8_71_N_1602_59 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_58 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11681 ), .F0(\CIC1Sin/d8_71_N_1602_58 ), 
    .Q0(\CIC1Sin/d8_58 ), .F1(\CIC1Sin/d8_71_N_1602_59 ), .Q1(\CIC1Sin/d8_59 ), 
    .FCO(\CIC1Sin/n11682 ));
  CIC1Sin_SLICE_349 \CIC1Sin/SLICE_349 ( .B1(\CIC1Sin/d_d8_40 ), 
    .A1(\CIC1Sin/d8_40 ), .B0(\CIC1Sin/d_d8_39 ), .A0(\CIC1Sin/d8_39 ), 
    .FCI(\CIC1Sin/n11356 ), .F0(\CIC1Sin/n6504 ), .F1(\CIC1Sin/n6503 ), 
    .FCO(\CIC1Sin/n11357 ));
  CIC1Sin_SLICE_350 \CIC1Sin/SLICE_350 ( .B1(\CIC1Sin/d_d8_38 ), 
    .A1(\CIC1Sin/d8_38 ), .B0(\CIC1Sin/d_d8_37 ), .A0(\CIC1Sin/d8_37 ), 
    .FCI(\CIC1Sin/n11355 ), .F0(\CIC1Sin/n6506 ), .F1(\CIC1Sin/n6505 ), 
    .FCO(\CIC1Sin/n11356 ));
  CIC1Sin_SLICE_351 \CIC1Sin/SLICE_351 ( .B1(\CIC1Sin/d_d8_36 ), 
    .A1(\CIC1Sin/d8_36 ), .F1(\CIC1Sin/n6507 ), .FCO(\CIC1Sin/n11355 ));
  CIC1Sin_SLICE_352 \CIC1Sin/SLICE_352 ( .D1(\CIC1Sin/d8_71 ), 
    .C1(\CIC1Sin/n6472 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_71 ), 
    .D0(\CIC1Sin/d8_70 ), .C0(\CIC1Sin/n6473 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_70 ), .DI1(\CIC1Sin/d9_71_N_1674_71 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_70 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11353 ), .F0(\CIC1Sin/d9_71_N_1674_70 ), 
    .Q0(\CIC1Sin/d9_70 ), .F1(\CIC1Sin/d9_71_N_1674_71 ), .Q1(\CIC1Sin/d9_71 ));
  CIC1Sin_SLICE_353 \CIC1Sin/SLICE_353 ( .D1(\CIC1Sin/d8_69 ), 
    .C1(\CIC1Sin/n6474 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_69 ), 
    .D0(\CIC1Sin/d8_68 ), .C0(\CIC1Sin/n6475 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_68 ), .DI1(\CIC1Sin/d9_71_N_1674_69 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_68 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11352 ), .F0(\CIC1Sin/d9_71_N_1674_68 ), 
    .Q0(\CIC1Sin/d9_68 ), .F1(\CIC1Sin/d9_71_N_1674_69 ), .Q1(\CIC1Sin/d9_69 ), 
    .FCO(\CIC1Sin/n11353 ));
  CIC1Sin_SLICE_354 \CIC1Sin/SLICE_354 ( .D1(\CIC1Sin/d8_67 ), 
    .C1(\CIC1Sin/n6476 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_67 ), 
    .D0(\CIC1Sin/d8_66 ), .C0(\CIC1Sin/n6477 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_66 ), .DI1(\CIC1Sin/d9_71_N_1674_67 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_66 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11351 ), .F0(\CIC1Sin/d9_71_N_1674_66 ), 
    .Q0(\CIC1Sin/d9_66 ), .F1(\CIC1Sin/d9_71_N_1674_67 ), .Q1(\CIC1Sin/d9_67 ), 
    .FCO(\CIC1Sin/n11352 ));
  CIC1Sin_SLICE_355 \CIC1Sin/SLICE_355 ( .D1(\CIC1Sin/d8_65 ), 
    .C1(\CIC1Sin/n6478 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_65 ), 
    .D0(\CIC1Sin/d8_64 ), .C0(\CIC1Sin/n6479 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_64 ), .DI1(\CIC1Sin/d9_71_N_1674_65 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_64 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11350 ), .F0(\CIC1Sin/d9_71_N_1674_64 ), 
    .Q0(\CIC1Sin/d9_64 ), .F1(\CIC1Sin/d9_71_N_1674_65 ), .Q1(\CIC1Sin/d9_65 ), 
    .FCO(\CIC1Sin/n11351 ));
  CIC1Sin_SLICE_356 \CIC1Sin/SLICE_356 ( .D1(\CIC1Sin/d8_63 ), 
    .C1(\CIC1Sin/n6480 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_63 ), 
    .D0(\CIC1Sin/d8_62 ), .C0(\CIC1Sin/n6481 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_62 ), .DI1(\CIC1Sin/d9_71_N_1674_63 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_62 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11349 ), .F0(\CIC1Sin/d9_71_N_1674_62 ), 
    .Q0(\CIC1Sin/d9_62 ), .F1(\CIC1Sin/d9_71_N_1674_63 ), .Q1(\CIC1Sin/d9_63 ), 
    .FCO(\CIC1Sin/n11350 ));
  CIC1Sin_SLICE_357 \CIC1Sin/SLICE_357 ( .D1(\CIC1Sin/d8_61 ), 
    .C1(\CIC1Sin/n6482 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_61 ), 
    .D0(\CIC1Sin/d8_60 ), .C0(\CIC1Sin/n6483 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_60 ), .DI1(\CIC1Sin/d9_71_N_1674_61 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_60 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11348 ), .F0(\CIC1Sin/d9_71_N_1674_60 ), 
    .Q0(\CIC1Sin/d9_60 ), .F1(\CIC1Sin/d9_71_N_1674_61 ), .Q1(\CIC1Sin/d9_61 ), 
    .FCO(\CIC1Sin/n11349 ));
  CIC1Sin_SLICE_358 \CIC1Sin/SLICE_358 ( .D1(\CIC1Sin/d8_59 ), 
    .C1(\CIC1Sin/n6484 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_59 ), 
    .D0(\CIC1Sin/d8_58 ), .C0(\CIC1Sin/n6485 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_58 ), .DI1(\CIC1Sin/d9_71_N_1674_59 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_58 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11347 ), .F0(\CIC1Sin/d9_71_N_1674_58 ), 
    .Q0(\CIC1Sin/d9_58 ), .F1(\CIC1Sin/d9_71_N_1674_59 ), .Q1(\CIC1Sin/d9_59 ), 
    .FCO(\CIC1Sin/n11348 ));
  CIC1Sin_SLICE_359 \CIC1Sin/SLICE_359 ( .D1(\CIC1Sin/d8_57 ), 
    .C1(\CIC1Sin/n6486 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_57 ), 
    .D0(\CIC1Sin/d8_56 ), .C0(\CIC1Sin/n6487 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_56 ), .DI1(\CIC1Sin/d9_71_N_1674_57 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_56 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11346 ), .F0(\CIC1Sin/d9_71_N_1674_56 ), 
    .Q0(\CIC1Sin/d9_56 ), .F1(\CIC1Sin/d9_71_N_1674_57 ), .Q1(\CIC1Sin/d9_57 ), 
    .FCO(\CIC1Sin/n11347 ));
  CIC1Sin_SLICE_360 \CIC1Sin/SLICE_360 ( .D1(\CIC1Sin/d8_55 ), 
    .C1(\CIC1Sin/n6488 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_55 ), 
    .D0(\CIC1Sin/d8_54 ), .C0(\CIC1Sin/n6489 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_54 ), .DI1(\CIC1Sin/d9_71_N_1674_55 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_54 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11345 ), .F0(\CIC1Sin/d9_71_N_1674_54 ), 
    .Q0(\CIC1Sin/d9_54 ), .F1(\CIC1Sin/d9_71_N_1674_55 ), .Q1(\CIC1Sin/d9_55 ), 
    .FCO(\CIC1Sin/n11346 ));
  CIC1Sin_SLICE_361 \CIC1Sin/SLICE_361 ( .D1(\CIC1Sin/d8_53 ), 
    .C1(\CIC1Sin/n6490 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_53 ), 
    .D0(\CIC1Sin/d8_52 ), .C0(\CIC1Sin/n6491 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_52 ), .DI1(\CIC1Sin/d9_71_N_1674_53 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_52 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11344 ), .F0(\CIC1Sin/d9_71_N_1674_52 ), 
    .Q0(\CIC1Sin/d9_52 ), .F1(\CIC1Sin/d9_71_N_1674_53 ), .Q1(\CIC1Sin/d9_53 ), 
    .FCO(\CIC1Sin/n11345 ));
  CIC1Sin_SLICE_362 \CIC1Sin/SLICE_362 ( .D1(\CIC1Sin/d8_51 ), 
    .C1(\CIC1Sin/n6492 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_51 ), 
    .D0(\CIC1Sin/d8_50 ), .C0(\CIC1Sin/n6493 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_50 ), .DI1(\CIC1Sin/d9_71_N_1674_51 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_50 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11343 ), .F0(\CIC1Sin/d9_71_N_1674_50 ), 
    .Q0(\CIC1Sin/d9_50 ), .F1(\CIC1Sin/d9_71_N_1674_51 ), .Q1(\CIC1Sin/d9_51 ), 
    .FCO(\CIC1Sin/n11344 ));
  CIC1Sin_SLICE_363 \CIC1Sin/SLICE_363 ( .D1(\CIC1Sin/d8_49 ), 
    .C1(\CIC1Sin/n6494 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_49 ), 
    .D0(\CIC1Sin/d8_48 ), .C0(\CIC1Sin/n6495 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_48 ), .DI1(\CIC1Sin/d9_71_N_1674_49 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_48 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11342 ), .F0(\CIC1Sin/d9_71_N_1674_48 ), 
    .Q0(\CIC1Sin/d9_48 ), .F1(\CIC1Sin/d9_71_N_1674_49 ), .Q1(\CIC1Sin/d9_49 ), 
    .FCO(\CIC1Sin/n11343 ));
  CIC1Sin_SLICE_364 \CIC1Sin/SLICE_364 ( .D1(\CIC1Sin/d8_47 ), 
    .C1(\CIC1Sin/n6496 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_47 ), 
    .D0(\CIC1Sin/d8_46 ), .C0(\CIC1Sin/n6497 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_46 ), .DI1(\CIC1Sin/d9_71_N_1674_47 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_46 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11341 ), .F0(\CIC1Sin/d9_71_N_1674_46 ), 
    .Q0(\CIC1Sin/d9_46 ), .F1(\CIC1Sin/d9_71_N_1674_47 ), .Q1(\CIC1Sin/d9_47 ), 
    .FCO(\CIC1Sin/n11342 ));
  CIC1Sin_SLICE_365 \CIC1Sin/SLICE_365 ( .D1(\CIC1Sin/d8_45 ), 
    .C1(\CIC1Sin/n6498 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_45 ), 
    .D0(\CIC1Sin/d8_44 ), .C0(\CIC1Sin/n6499 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_44 ), .DI1(\CIC1Sin/d9_71_N_1674_45 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_44 ), .CE(\CIC1Sin/osc_clk_enable_646 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11340 ), .F0(\CIC1Sin/d9_71_N_1674_44 ), 
    .Q0(\CIC1Sin/d9_44 ), .F1(\CIC1Sin/d9_71_N_1674_45 ), .Q1(\CIC1Sin/d9_45 ), 
    .FCO(\CIC1Sin/n11341 ));
  CIC1Sin_SLICE_366 \CIC1Sin/SLICE_366 ( .D1(\CIC1Sin/d8_43 ), 
    .C1(\CIC1Sin/n6500 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_43 ), 
    .D0(\CIC1Sin/d8_42 ), .C0(\CIC1Sin/n6501 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_42 ), .DI1(\CIC1Sin/d9_71_N_1674_43 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_42 ), .CE(\CIC1Sin/osc_clk_enable_596 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11339 ), .F0(\CIC1Sin/d9_71_N_1674_42 ), 
    .Q0(\CIC1Sin/d9_42 ), .F1(\CIC1Sin/d9_71_N_1674_43 ), .Q1(\CIC1Sin/d9_43 ), 
    .FCO(\CIC1Sin/n11340 ));
  CIC1Sin_SLICE_367 \CIC1Sin/SLICE_367 ( .D1(\CIC1Sin/d8_41 ), 
    .C1(\CIC1Sin/n6502 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_41 ), 
    .D0(\CIC1Sin/d8_40 ), .C0(\CIC1Sin/n6503 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_40 ), .DI1(\CIC1Sin/d9_71_N_1674_41 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_40 ), .CE(\CIC1Sin/osc_clk_enable_596 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11338 ), .F0(\CIC1Sin/d9_71_N_1674_40 ), 
    .Q0(\CIC1Sin/d9_40 ), .F1(\CIC1Sin/d9_71_N_1674_41 ), .Q1(\CIC1Sin/d9_41 ), 
    .FCO(\CIC1Sin/n11339 ));
  CIC1Sin_SLICE_368 \CIC1Sin/SLICE_368 ( .D1(\CIC1Sin/d8_39 ), 
    .C1(\CIC1Sin/n6504 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_39 ), 
    .D0(\CIC1Sin/d8_38 ), .C0(\CIC1Sin/n6505 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_38 ), .DI1(\CIC1Sin/d9_71_N_1674_39 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_38 ), .CE(\CIC1Sin/osc_clk_enable_596 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11337 ), .F0(\CIC1Sin/d9_71_N_1674_38 ), 
    .Q0(\CIC1Sin/d9_38 ), .F1(\CIC1Sin/d9_71_N_1674_39 ), .Q1(\CIC1Sin/d9_39 ), 
    .FCO(\CIC1Sin/n11338 ));
  CIC1Sin_SLICE_369 \CIC1Sin/SLICE_369 ( .D1(\CIC1Sin/d8_37 ), 
    .C1(\CIC1Sin/n6506 ), .B1(\CIC1Sin/n6470 ), .A1(\CIC1Sin/d_d8_37 ), 
    .D0(\CIC1Sin/d8_36 ), .C0(\CIC1Sin/n6507 ), .B0(\CIC1Sin/n6470 ), 
    .A0(\CIC1Sin/d_d8_36 ), .DI1(\CIC1Sin/d9_71_N_1674_37 ), 
    .DI0(\CIC1Sin/d9_71_N_1674_36 ), .CE(\CIC1Sin/osc_clk_enable_596 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11336 ), .F0(\CIC1Sin/d9_71_N_1674_36 ), 
    .Q0(\CIC1Sin/d9_36 ), .F1(\CIC1Sin/d9_71_N_1674_37 ), .Q1(\CIC1Sin/d9_37 ), 
    .FCO(\CIC1Sin/n11337 ));
  CIC1Sin_SLICE_370 \CIC1Sin/SLICE_370 ( .A1(\CIC1Sin/n6470 ), 
    .FCO(\CIC1Sin/n11336 ));
  CIC1Sin_SLICE_371 \CIC1Sin/SLICE_371 ( .B0(\CIC1Sin/d_d_tmp_71 ), 
    .A0(\CIC1Sin/d_tmp_71 ), .FCI(\CIC1Sin/n11256 ), .F0(\CIC1Sin/n6928 ));
  CIC1Sin_SLICE_372 \CIC1Sin/SLICE_372 ( .B1(\CIC1Sin/d_d_tmp_70 ), 
    .A1(\CIC1Sin/d_tmp_70 ), .B0(\CIC1Sin/d_d_tmp_69 ), 
    .A0(\CIC1Sin/d_tmp_69 ), .FCI(\CIC1Sin/n11255 ), .F0(\CIC1Sin/n6930 ), 
    .F1(\CIC1Sin/n6929 ), .FCO(\CIC1Sin/n11256 ));
  CIC1Sin_SLICE_373 \CIC1Sin/SLICE_373 ( .B1(\CIC1Sin/d_d_tmp_68 ), 
    .A1(\CIC1Sin/d_tmp_68 ), .B0(\CIC1Sin/d_d_tmp_67 ), 
    .A0(\CIC1Sin/d_tmp_67 ), .FCI(\CIC1Sin/n11254 ), .F0(\CIC1Sin/n6932 ), 
    .F1(\CIC1Sin/n6931 ), .FCO(\CIC1Sin/n11255 ));
  CIC1Sin_SLICE_374 \CIC1Sin/SLICE_374 ( .B1(\CIC1Sin/d_d_tmp_66 ), 
    .A1(\CIC1Sin/d_tmp_66 ), .B0(\CIC1Sin/d_d_tmp_65 ), 
    .A0(\CIC1Sin/d_tmp_65 ), .FCI(\CIC1Sin/n11253 ), .F0(\CIC1Sin/n6934 ), 
    .F1(\CIC1Sin/n6933 ), .FCO(\CIC1Sin/n11254 ));
  CIC1Sin_SLICE_375 \CIC1Sin/SLICE_375 ( .B1(\CIC1Sin/d_d_tmp_64 ), 
    .A1(\CIC1Sin/d_tmp_64 ), .B0(\CIC1Sin/d_d_tmp_63 ), 
    .A0(\CIC1Sin/d_tmp_63 ), .FCI(\CIC1Sin/n11252 ), .F0(\CIC1Sin/n6936 ), 
    .F1(\CIC1Sin/n6935 ), .FCO(\CIC1Sin/n11253 ));
  CIC1Sin_SLICE_376 \CIC1Sin/SLICE_376 ( .B1(\CIC1Sin/d_d_tmp_62 ), 
    .A1(\CIC1Sin/d_tmp_62 ), .B0(\CIC1Sin/d_d_tmp_61 ), 
    .A0(\CIC1Sin/d_tmp_61 ), .FCI(\CIC1Sin/n11251 ), .F0(\CIC1Sin/n6938 ), 
    .F1(\CIC1Sin/n6937 ), .FCO(\CIC1Sin/n11252 ));
  CIC1Sin_SLICE_377 \CIC1Sin/SLICE_377 ( .B1(\CIC1Sin/d_d_tmp_60 ), 
    .A1(\CIC1Sin/d_tmp_60 ), .B0(\CIC1Sin/d_d_tmp_59 ), 
    .A0(\CIC1Sin/d_tmp_59 ), .FCI(\CIC1Sin/n11250 ), .F0(\CIC1Sin/n6940 ), 
    .F1(\CIC1Sin/n6939 ), .FCO(\CIC1Sin/n11251 ));
  CIC1Sin_SLICE_378 \CIC1Sin/SLICE_378 ( .B1(\CIC1Sin/d_d_tmp_58 ), 
    .A1(\CIC1Sin/d_tmp_58 ), .B0(\CIC1Sin/d_d_tmp_57 ), 
    .A0(\CIC1Sin/d_tmp_57 ), .FCI(\CIC1Sin/n11249 ), .F0(\CIC1Sin/n6942 ), 
    .F1(\CIC1Sin/n6941 ), .FCO(\CIC1Sin/n11250 ));
  CIC1Sin_SLICE_379 \CIC1Sin/SLICE_379 ( .B1(\CIC1Sin/d_d_tmp_56 ), 
    .A1(\CIC1Sin/d_tmp_56 ), .B0(\CIC1Sin/d_d_tmp_55 ), 
    .A0(\CIC1Sin/d_tmp_55 ), .FCI(\CIC1Sin/n11248 ), .F0(\CIC1Sin/n6944 ), 
    .F1(\CIC1Sin/n6943 ), .FCO(\CIC1Sin/n11249 ));
  CIC1Sin_SLICE_380 \CIC1Sin/SLICE_380 ( .B1(\CIC1Sin/d_d_tmp_54 ), 
    .A1(\CIC1Sin/d_tmp_54 ), .B0(\CIC1Sin/d_d_tmp_53 ), 
    .A0(\CIC1Sin/d_tmp_53 ), .FCI(\CIC1Sin/n11247 ), .F0(\CIC1Sin/n6946 ), 
    .F1(\CIC1Sin/n6945 ), .FCO(\CIC1Sin/n11248 ));
  CIC1Sin_SLICE_381 \CIC1Sin/SLICE_381 ( .B1(\CIC1Sin/d_d_tmp_52 ), 
    .A1(\CIC1Sin/d_tmp_52 ), .B0(\CIC1Sin/d_d_tmp_51 ), 
    .A0(\CIC1Sin/d_tmp_51 ), .FCI(\CIC1Sin/n11246 ), .F0(\CIC1Sin/n6948 ), 
    .F1(\CIC1Sin/n6947 ), .FCO(\CIC1Sin/n11247 ));
  CIC1Sin_SLICE_382 \CIC1Sin/SLICE_382 ( .B1(\CIC1Sin/d_d_tmp_50 ), 
    .A1(\CIC1Sin/d_tmp_50 ), .B0(\CIC1Sin/d_d_tmp_49 ), 
    .A0(\CIC1Sin/d_tmp_49 ), .FCI(\CIC1Sin/n11245 ), .F0(\CIC1Sin/n6950 ), 
    .F1(\CIC1Sin/n6949 ), .FCO(\CIC1Sin/n11246 ));
  CIC1Sin_SLICE_383 \CIC1Sin/SLICE_383 ( .B1(\CIC1Sin/d_d_tmp_48 ), 
    .A1(\CIC1Sin/d_tmp_48 ), .B0(\CIC1Sin/d_d_tmp_47 ), 
    .A0(\CIC1Sin/d_tmp_47 ), .FCI(\CIC1Sin/n11244 ), .F0(\CIC1Sin/n6952 ), 
    .F1(\CIC1Sin/n6951 ), .FCO(\CIC1Sin/n11245 ));
  CIC1Sin_SLICE_384 \CIC1Sin/SLICE_384 ( .B1(\CIC1Sin/d_d_tmp_46 ), 
    .A1(\CIC1Sin/d_tmp_46 ), .B0(\CIC1Sin/d_d_tmp_45 ), 
    .A0(\CIC1Sin/d_tmp_45 ), .FCI(\CIC1Sin/n11243 ), .F0(\CIC1Sin/n6954 ), 
    .F1(\CIC1Sin/n6953 ), .FCO(\CIC1Sin/n11244 ));
  CIC1Sin_SLICE_385 \CIC1Sin/SLICE_385 ( .B1(\CIC1Sin/d_d_tmp_44 ), 
    .A1(\CIC1Sin/d_tmp_44 ), .B0(\CIC1Sin/d_d_tmp_43 ), 
    .A0(\CIC1Sin/d_tmp_43 ), .FCI(\CIC1Sin/n11242 ), .F0(\CIC1Sin/n6956 ), 
    .F1(\CIC1Sin/n6955 ), .FCO(\CIC1Sin/n11243 ));
  CIC1Sin_SLICE_386 \CIC1Sin/SLICE_386 ( .B1(\CIC1Sin/d_d_tmp_42 ), 
    .A1(\CIC1Sin/d_tmp_42 ), .B0(\CIC1Sin/d_d_tmp_41 ), 
    .A0(\CIC1Sin/d_tmp_41 ), .FCI(\CIC1Sin/n11241 ), .F0(\CIC1Sin/n6958 ), 
    .F1(\CIC1Sin/n6957 ), .FCO(\CIC1Sin/n11242 ));
  CIC1Sin_SLICE_387 \CIC1Sin/SLICE_387 ( .B1(\CIC1Sin/d_d_tmp_40 ), 
    .A1(\CIC1Sin/d_tmp_40 ), .B0(\CIC1Sin/d_d_tmp_39 ), 
    .A0(\CIC1Sin/d_tmp_39 ), .FCI(\CIC1Sin/n11240 ), .F0(\CIC1Sin/n6960 ), 
    .F1(\CIC1Sin/n6959 ), .FCO(\CIC1Sin/n11241 ));
  CIC1Sin_SLICE_388 \CIC1Sin/SLICE_388 ( .B1(\CIC1Sin/d_d_tmp_38 ), 
    .A1(\CIC1Sin/d_tmp_38 ), .B0(\CIC1Sin/d_d_tmp_37 ), 
    .A0(\CIC1Sin/d_tmp_37 ), .FCI(\CIC1Sin/n11239 ), .F0(\CIC1Sin/n6962 ), 
    .F1(\CIC1Sin/n6961 ), .FCO(\CIC1Sin/n11240 ));
  CIC1Sin_SLICE_389 \CIC1Sin/SLICE_389 ( .B1(\CIC1Sin/d_d_tmp_36 ), 
    .A1(\CIC1Sin/d_tmp_36 ), .F1(\CIC1Sin/n6963 ), .FCO(\CIC1Sin/n11239 ));
  CIC1Sin_SLICE_390 \CIC1Sin/SLICE_390 ( .D1(\CIC1Sin/d_tmp_71 ), 
    .C1(\CIC1Sin/n6928 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_71 ), 
    .D0(\CIC1Sin/d_tmp_70 ), .C0(\CIC1Sin/n6929 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_70 ), .DI1(\CIC1Sin/d6_71_N_1458_71 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_70 ), .CE(\CIC1Sin/osc_clk_enable_246 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11237 ), .F0(\CIC1Sin/d6_71_N_1458_70 ), 
    .Q0(\CIC1Sin/d6_70 ), .F1(\CIC1Sin/d6_71_N_1458_71 ), .Q1(\CIC1Sin/d6_71 ));
  CIC1Sin_SLICE_391 \CIC1Sin/SLICE_391 ( .D1(\CIC1Sin/d_tmp_69 ), 
    .C1(\CIC1Sin/n6930 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_69 ), 
    .D0(\CIC1Sin/d_tmp_68 ), .C0(\CIC1Sin/n6931 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_68 ), .DI1(\CIC1Sin/d6_71_N_1458_69 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_68 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11236 ), .F0(\CIC1Sin/d6_71_N_1458_68 ), 
    .Q0(\CIC1Sin/d6_68 ), .F1(\CIC1Sin/d6_71_N_1458_69 ), .Q1(\CIC1Sin/d6_69 ), 
    .FCO(\CIC1Sin/n11237 ));
  CIC1Sin_SLICE_392 \CIC1Sin/SLICE_392 ( .D1(\CIC1Sin/d_tmp_67 ), 
    .C1(\CIC1Sin/n6932 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_67 ), 
    .D0(\CIC1Sin/d_tmp_66 ), .C0(\CIC1Sin/n6933 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_66 ), .DI1(\CIC1Sin/d6_71_N_1458_67 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_66 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11235 ), .F0(\CIC1Sin/d6_71_N_1458_66 ), 
    .Q0(\CIC1Sin/d6_66 ), .F1(\CIC1Sin/d6_71_N_1458_67 ), .Q1(\CIC1Sin/d6_67 ), 
    .FCO(\CIC1Sin/n11236 ));
  CIC1Sin_SLICE_393 \CIC1Sin/SLICE_393 ( .D1(\CIC1Sin/d_tmp_65 ), 
    .C1(\CIC1Sin/n6934 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_65 ), 
    .D0(\CIC1Sin/d_tmp_64 ), .C0(\CIC1Sin/n6935 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_64 ), .DI1(\CIC1Sin/d6_71_N_1458_65 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_64 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11234 ), .F0(\CIC1Sin/d6_71_N_1458_64 ), 
    .Q0(\CIC1Sin/d6_64 ), .F1(\CIC1Sin/d6_71_N_1458_65 ), .Q1(\CIC1Sin/d6_65 ), 
    .FCO(\CIC1Sin/n11235 ));
  CIC1Sin_SLICE_394 \CIC1Sin/SLICE_394 ( .D1(\CIC1Sin/d_tmp_63 ), 
    .C1(\CIC1Sin/n6936 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_63 ), 
    .D0(\CIC1Sin/d_tmp_62 ), .C0(\CIC1Sin/n6937 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_62 ), .DI1(\CIC1Sin/d6_71_N_1458_63 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_62 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11233 ), .F0(\CIC1Sin/d6_71_N_1458_62 ), 
    .Q0(\CIC1Sin/d6_62 ), .F1(\CIC1Sin/d6_71_N_1458_63 ), .Q1(\CIC1Sin/d6_63 ), 
    .FCO(\CIC1Sin/n11234 ));
  CIC1Sin_SLICE_395 \CIC1Sin/SLICE_395 ( .D1(\CIC1Sin/d_tmp_61 ), 
    .C1(\CIC1Sin/n6938 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_61 ), 
    .D0(\CIC1Sin/d_tmp_60 ), .C0(\CIC1Sin/n6939 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_60 ), .DI1(\CIC1Sin/d6_71_N_1458_61 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_60 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11232 ), .F0(\CIC1Sin/d6_71_N_1458_60 ), 
    .Q0(\CIC1Sin/d6_60 ), .F1(\CIC1Sin/d6_71_N_1458_61 ), .Q1(\CIC1Sin/d6_61 ), 
    .FCO(\CIC1Sin/n11233 ));
  CIC1Sin_SLICE_396 \CIC1Sin/SLICE_396 ( .D1(\CIC1Sin/d_tmp_59 ), 
    .C1(\CIC1Sin/n6940 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_59 ), 
    .D0(\CIC1Sin/d_tmp_58 ), .C0(\CIC1Sin/n6941 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_58 ), .DI1(\CIC1Sin/d6_71_N_1458_59 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_58 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11231 ), .F0(\CIC1Sin/d6_71_N_1458_58 ), 
    .Q0(\CIC1Sin/d6_58 ), .F1(\CIC1Sin/d6_71_N_1458_59 ), .Q1(\CIC1Sin/d6_59 ), 
    .FCO(\CIC1Sin/n11232 ));
  CIC1Sin_SLICE_397 \CIC1Sin/SLICE_397 ( .D1(\CIC1Sin/d_tmp_57 ), 
    .C1(\CIC1Sin/n6942 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_57 ), 
    .D0(\CIC1Sin/d_tmp_56 ), .C0(\CIC1Sin/n6943 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_56 ), .DI1(\CIC1Sin/d6_71_N_1458_57 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_56 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11230 ), .F0(\CIC1Sin/d6_71_N_1458_56 ), 
    .Q0(\CIC1Sin/d6_56 ), .F1(\CIC1Sin/d6_71_N_1458_57 ), .Q1(\CIC1Sin/d6_57 ), 
    .FCO(\CIC1Sin/n11231 ));
  CIC1Sin_SLICE_398 \CIC1Sin/SLICE_398 ( .D1(\CIC1Sin/d_tmp_55 ), 
    .C1(\CIC1Sin/n6944 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_55 ), 
    .D0(\CIC1Sin/d_tmp_54 ), .C0(\CIC1Sin/n6945 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_54 ), .DI1(\CIC1Sin/d6_71_N_1458_55 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_54 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11229 ), .F0(\CIC1Sin/d6_71_N_1458_54 ), 
    .Q0(\CIC1Sin/d6_54 ), .F1(\CIC1Sin/d6_71_N_1458_55 ), .Q1(\CIC1Sin/d6_55 ), 
    .FCO(\CIC1Sin/n11230 ));
  CIC1Sin_SLICE_399 \CIC1Sin/SLICE_399 ( .D1(\CIC1Sin/d_tmp_53 ), 
    .C1(\CIC1Sin/n6946 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_53 ), 
    .D0(\CIC1Sin/d_tmp_52 ), .C0(\CIC1Sin/n6947 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_52 ), .DI1(\CIC1Sin/d6_71_N_1458_53 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_52 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11228 ), .F0(\CIC1Sin/d6_71_N_1458_52 ), 
    .Q0(\CIC1Sin/d6_52 ), .F1(\CIC1Sin/d6_71_N_1458_53 ), .Q1(\CIC1Sin/d6_53 ), 
    .FCO(\CIC1Sin/n11229 ));
  CIC1Sin_SLICE_400 \CIC1Sin/SLICE_400 ( .D1(\CIC1Sin/d_tmp_51 ), 
    .C1(\CIC1Sin/n6948 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_51 ), 
    .D0(\CIC1Sin/d_tmp_50 ), .C0(\CIC1Sin/n6949 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_50 ), .DI1(\CIC1Sin/d6_71_N_1458_51 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_50 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11227 ), .F0(\CIC1Sin/d6_71_N_1458_50 ), 
    .Q0(\CIC1Sin/d6_50 ), .F1(\CIC1Sin/d6_71_N_1458_51 ), .Q1(\CIC1Sin/d6_51 ), 
    .FCO(\CIC1Sin/n11228 ));
  CIC1Sin_SLICE_401 \CIC1Sin/SLICE_401 ( .D1(\CIC1Sin/d_tmp_49 ), 
    .C1(\CIC1Sin/n6950 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_49 ), 
    .D0(\CIC1Sin/d_tmp_48 ), .C0(\CIC1Sin/n6951 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_48 ), .DI1(\CIC1Sin/d6_71_N_1458_49 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_48 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11226 ), .F0(\CIC1Sin/d6_71_N_1458_48 ), 
    .Q0(\CIC1Sin/d6_48 ), .F1(\CIC1Sin/d6_71_N_1458_49 ), .Q1(\CIC1Sin/d6_49 ), 
    .FCO(\CIC1Sin/n11227 ));
  CIC1Sin_SLICE_402 \CIC1Sin/SLICE_402 ( .D1(\CIC1Sin/d_tmp_47 ), 
    .C1(\CIC1Sin/n6952 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_47 ), 
    .D0(\CIC1Sin/d_tmp_46 ), .C0(\CIC1Sin/n6953 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_46 ), .DI1(\CIC1Sin/d6_71_N_1458_47 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_46 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11225 ), .F0(\CIC1Sin/d6_71_N_1458_46 ), 
    .Q0(\CIC1Sin/d6_46 ), .F1(\CIC1Sin/d6_71_N_1458_47 ), .Q1(\CIC1Sin/d6_47 ), 
    .FCO(\CIC1Sin/n11226 ));
  CIC1Sin_SLICE_403 \CIC1Sin/SLICE_403 ( .D1(\CIC1Sin/d_tmp_45 ), 
    .C1(\CIC1Sin/n6954 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_45 ), 
    .D0(\CIC1Sin/d_tmp_44 ), .C0(\CIC1Sin/n6955 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_44 ), .DI1(\CIC1Sin/d6_71_N_1458_45 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_44 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11224 ), .F0(\CIC1Sin/d6_71_N_1458_44 ), 
    .Q0(\CIC1Sin/d6_44 ), .F1(\CIC1Sin/d6_71_N_1458_45 ), .Q1(\CIC1Sin/d6_45 ), 
    .FCO(\CIC1Sin/n11225 ));
  CIC1Sin_SLICE_404 \CIC1Sin/SLICE_404 ( .D1(\CIC1Sin/d_tmp_43 ), 
    .C1(\CIC1Sin/n6956 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_43 ), 
    .D0(\CIC1Sin/d_tmp_42 ), .C0(\CIC1Sin/n6957 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_42 ), .DI1(\CIC1Sin/d6_71_N_1458_43 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_42 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11223 ), .F0(\CIC1Sin/d6_71_N_1458_42 ), 
    .Q0(\CIC1Sin/d6_42 ), .F1(\CIC1Sin/d6_71_N_1458_43 ), .Q1(\CIC1Sin/d6_43 ), 
    .FCO(\CIC1Sin/n11224 ));
  CIC1Sin_SLICE_405 \CIC1Sin/SLICE_405 ( .D1(\CIC1Sin/d_tmp_41 ), 
    .C1(\CIC1Sin/n6958 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_41 ), 
    .D0(\CIC1Sin/d_tmp_40 ), .C0(\CIC1Sin/n6959 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_40 ), .DI1(\CIC1Sin/d6_71_N_1458_41 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_40 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11222 ), .F0(\CIC1Sin/d6_71_N_1458_40 ), 
    .Q0(\CIC1Sin/d6_40 ), .F1(\CIC1Sin/d6_71_N_1458_41 ), .Q1(\CIC1Sin/d6_41 ), 
    .FCO(\CIC1Sin/n11223 ));
  CIC1Sin_SLICE_406 \CIC1Sin/SLICE_406 ( .D1(\CIC1Sin/d_tmp_39 ), 
    .C1(\CIC1Sin/n6960 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_39 ), 
    .D0(\CIC1Sin/d_tmp_38 ), .C0(\CIC1Sin/n6961 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_38 ), .DI1(\CIC1Sin/d6_71_N_1458_39 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_38 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11221 ), .F0(\CIC1Sin/d6_71_N_1458_38 ), 
    .Q0(\CIC1Sin/d6_38 ), .F1(\CIC1Sin/d6_71_N_1458_39 ), .Q1(\CIC1Sin/d6_39 ), 
    .FCO(\CIC1Sin/n11222 ));
  CIC1Sin_SLICE_407 \CIC1Sin/SLICE_407 ( .D1(\CIC1Sin/d_tmp_37 ), 
    .C1(\CIC1Sin/n6962 ), .B1(\CIC1Sin/n6926 ), .A1(\CIC1Sin/d_d_tmp_37 ), 
    .D0(\CIC1Sin/d_tmp_36 ), .C0(\CIC1Sin/n6963 ), .B0(\CIC1Sin/n6926 ), 
    .A0(\CIC1Sin/d_d_tmp_36 ), .DI1(\CIC1Sin/d6_71_N_1458_37 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_36 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11220 ), .F0(\CIC1Sin/d6_71_N_1458_36 ), 
    .Q0(\CIC1Sin/d6_36 ), .F1(\CIC1Sin/d6_71_N_1458_37 ), .Q1(\CIC1Sin/d6_37 ), 
    .FCO(\CIC1Sin/n11221 ));
  CIC1Sin_SLICE_408 \CIC1Sin/SLICE_408 ( .A1(\CIC1Sin/n6926 ), 
    .FCO(\CIC1Sin/n11220 ));
  CIC1Sin_SLICE_409 \CIC1Sin/SLICE_409 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4078 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_71 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4079 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_70 ), .DI1(\CIC1Sin/d1_71_N_417_71 ), 
    .DI0(\CIC1Sin/d1_71_N_417_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11189 ), 
    .F0(\CIC1Sin/d1_71_N_417_70 ), .Q0(\CIC1Sin/d1_70 ), 
    .F1(\CIC1Sin/d1_71_N_417_71 ), .Q1(\CIC1Sin/d1_71 ));
  CIC1Sin_SLICE_410 \CIC1Sin/SLICE_410 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4080 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_69 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4081 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_68 ), .DI1(\CIC1Sin/d1_71_N_417_69 ), 
    .DI0(\CIC1Sin/d1_71_N_417_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11188 ), 
    .F0(\CIC1Sin/d1_71_N_417_68 ), .Q0(\CIC1Sin/d1_68 ), 
    .F1(\CIC1Sin/d1_71_N_417_69 ), .Q1(\CIC1Sin/d1_69 ), 
    .FCO(\CIC1Sin/n11189 ));
  CIC1Sin_SLICE_411 \CIC1Sin/SLICE_411 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4082 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_67 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4083 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_66 ), .DI1(\CIC1Sin/d1_71_N_417_67 ), 
    .DI0(\CIC1Sin/d1_71_N_417_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11187 ), 
    .F0(\CIC1Sin/d1_71_N_417_66 ), .Q0(\CIC1Sin/d1_66 ), 
    .F1(\CIC1Sin/d1_71_N_417_67 ), .Q1(\CIC1Sin/d1_67 ), 
    .FCO(\CIC1Sin/n11188 ));
  CIC1Sin_SLICE_412 \CIC1Sin/SLICE_412 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4084 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_65 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4085 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_64 ), .DI1(\CIC1Sin/d1_71_N_417_65 ), 
    .DI0(\CIC1Sin/d1_71_N_417_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11186 ), 
    .F0(\CIC1Sin/d1_71_N_417_64 ), .Q0(\CIC1Sin/d1_64 ), 
    .F1(\CIC1Sin/d1_71_N_417_65 ), .Q1(\CIC1Sin/d1_65 ), 
    .FCO(\CIC1Sin/n11187 ));
  CIC1Sin_SLICE_413 \CIC1Sin/SLICE_413 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4086 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_63 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4087 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_62 ), .DI1(\CIC1Sin/d1_71_N_417_63 ), 
    .DI0(\CIC1Sin/d1_71_N_417_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11185 ), 
    .F0(\CIC1Sin/d1_71_N_417_62 ), .Q0(\CIC1Sin/d1_62 ), 
    .F1(\CIC1Sin/d1_71_N_417_63 ), .Q1(\CIC1Sin/d1_63 ), 
    .FCO(\CIC1Sin/n11186 ));
  CIC1Sin_SLICE_414 \CIC1Sin/SLICE_414 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4088 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_61 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4089 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_60 ), .DI1(\CIC1Sin/d1_71_N_417_61 ), 
    .DI0(\CIC1Sin/d1_71_N_417_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11184 ), 
    .F0(\CIC1Sin/d1_71_N_417_60 ), .Q0(\CIC1Sin/d1_60 ), 
    .F1(\CIC1Sin/d1_71_N_417_61 ), .Q1(\CIC1Sin/d1_61 ), 
    .FCO(\CIC1Sin/n11185 ));
  CIC1Sin_SLICE_415 \CIC1Sin/SLICE_415 ( .D1(\CIC1Sin/d6_71 ), 
    .C1(\CIC1Sin/n5560 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_71 ), 
    .D0(\CIC1Sin/d6_70 ), .C0(\CIC1Sin/n5561 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_70 ), .DI1(\CIC1Sin/d7_71_N_1530_71 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_70 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11727 ), .F0(\CIC1Sin/d7_71_N_1530_70 ), 
    .Q0(\CIC1Sin/d7_70 ), .F1(\CIC1Sin/d7_71_N_1530_71 ), .Q1(\CIC1Sin/d7_71 ));
  CIC1Sin_SLICE_416 \CIC1Sin/SLICE_416 ( .B1(\CIC1Sin/d4_43 ), 
    .A1(\CIC1Sin/d3_43 ), .B0(\CIC1Sin/d4_42 ), .A0(\CIC1Sin/d3_42 ), 
    .FCI(\CIC1Sin/n12018 ), .F0(\CIC1Sin/n4525 ), .F1(\CIC1Sin/n4524 ), 
    .FCO(\CIC1Sin/n12019 ));
  CIC1Sin_SLICE_417 \CIC1Sin/SLICE_417 ( .B1(\CIC1Sin/d4_41 ), 
    .A1(\CIC1Sin/d3_41 ), .B0(\CIC1Sin/d4_40 ), .A0(\CIC1Sin/d3_40 ), 
    .FCI(\CIC1Sin/n12017 ), .F0(\CIC1Sin/n4527 ), .F1(\CIC1Sin/n4526 ), 
    .FCO(\CIC1Sin/n12018 ));
  CIC1Sin_SLICE_418 \CIC1Sin/SLICE_418 ( .B1(\CIC1Sin/d4_39 ), 
    .A1(\CIC1Sin/d3_39 ), .B0(\CIC1Sin/d4_38 ), .A0(\CIC1Sin/d3_38 ), 
    .FCI(\CIC1Sin/n12016 ), .F0(\CIC1Sin/n4529 ), .F1(\CIC1Sin/n4528 ), 
    .FCO(\CIC1Sin/n12017 ));
  CIC1Sin_SLICE_419 \CIC1Sin/SLICE_419 ( .B1(\CIC1Sin/d4_37 ), 
    .A1(\CIC1Sin/d3_37 ), .B0(\CIC1Sin/d4_36 ), .A0(\CIC1Sin/d3_36 ), 
    .F1(\CIC1Sin/n4530 ), .FCO(\CIC1Sin/n12016 ));
  CIC1Sin_SLICE_420 \CIC1Sin/SLICE_420 ( .D1(\CIC1Sin/d3_71 ), 
    .C1(\CIC1Sin/n4496 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_71 ), 
    .D0(\CIC1Sin/d3_70 ), .C0(\CIC1Sin/n4497 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_70 ), .DI1(\CIC1Sin/d4_71_N_633_71 ), 
    .DI0(\CIC1Sin/d4_71_N_633_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12013 ), 
    .F0(\CIC1Sin/d4_71_N_633_70 ), .Q0(\CIC1Sin/d4_70 ), 
    .F1(\CIC1Sin/d4_71_N_633_71 ), .Q1(\CIC1Sin/d4_71 ));
  CIC1Sin_SLICE_421 \CIC1Sin/SLICE_421 ( .D1(\CIC1Sin/d3_69 ), 
    .C1(\CIC1Sin/n4498 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_69 ), 
    .D0(\CIC1Sin/d3_68 ), .C0(\CIC1Sin/n4499 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_68 ), .DI1(\CIC1Sin/d4_71_N_633_69 ), 
    .DI0(\CIC1Sin/d4_71_N_633_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12012 ), 
    .F0(\CIC1Sin/d4_71_N_633_68 ), .Q0(\CIC1Sin/d4_68 ), 
    .F1(\CIC1Sin/d4_71_N_633_69 ), .Q1(\CIC1Sin/d4_69 ), 
    .FCO(\CIC1Sin/n12013 ));
  CIC1Sin_SLICE_422 \CIC1Sin/SLICE_422 ( .D1(\CIC1Sin/d3_67 ), 
    .C1(\CIC1Sin/n4500 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_67 ), 
    .D0(\CIC1Sin/d3_66 ), .C0(\CIC1Sin/n4501 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_66 ), .DI1(\CIC1Sin/d4_71_N_633_67 ), 
    .DI0(\CIC1Sin/d4_71_N_633_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12011 ), 
    .F0(\CIC1Sin/d4_71_N_633_66 ), .Q0(\CIC1Sin/d4_66 ), 
    .F1(\CIC1Sin/d4_71_N_633_67 ), .Q1(\CIC1Sin/d4_67 ), 
    .FCO(\CIC1Sin/n12012 ));
  CIC1Sin_SLICE_423 \CIC1Sin/SLICE_423 ( .D1(\CIC1Sin/d3_65 ), 
    .C1(\CIC1Sin/n4502 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_65 ), 
    .D0(\CIC1Sin/d3_64 ), .C0(\CIC1Sin/n4503 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_64 ), .DI1(\CIC1Sin/d4_71_N_633_65 ), 
    .DI0(\CIC1Sin/d4_71_N_633_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12010 ), 
    .F0(\CIC1Sin/d4_71_N_633_64 ), .Q0(\CIC1Sin/d4_64 ), 
    .F1(\CIC1Sin/d4_71_N_633_65 ), .Q1(\CIC1Sin/d4_65 ), 
    .FCO(\CIC1Sin/n12011 ));
  CIC1Sin_SLICE_424 \CIC1Sin/SLICE_424 ( .D1(\CIC1Sin/d3_63 ), 
    .C1(\CIC1Sin/n4504 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_63 ), 
    .D0(\CIC1Sin/d3_62 ), .C0(\CIC1Sin/n4505 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_62 ), .DI1(\CIC1Sin/d4_71_N_633_63 ), 
    .DI0(\CIC1Sin/d4_71_N_633_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12009 ), 
    .F0(\CIC1Sin/d4_71_N_633_62 ), .Q0(\CIC1Sin/d4_62 ), 
    .F1(\CIC1Sin/d4_71_N_633_63 ), .Q1(\CIC1Sin/d4_63 ), 
    .FCO(\CIC1Sin/n12010 ));
  CIC1Sin_SLICE_425 \CIC1Sin/SLICE_425 ( .D1(\CIC1Sin/d3_61 ), 
    .C1(\CIC1Sin/n4506 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_61 ), 
    .D0(\CIC1Sin/d3_60 ), .C0(\CIC1Sin/n4507 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_60 ), .DI1(\CIC1Sin/d4_71_N_633_61 ), 
    .DI0(\CIC1Sin/d4_71_N_633_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12008 ), 
    .F0(\CIC1Sin/d4_71_N_633_60 ), .Q0(\CIC1Sin/d4_60 ), 
    .F1(\CIC1Sin/d4_71_N_633_61 ), .Q1(\CIC1Sin/d4_61 ), 
    .FCO(\CIC1Sin/n12009 ));
  CIC1Sin_SLICE_426 \CIC1Sin/SLICE_426 ( .D1(\CIC1Sin/d3_59 ), 
    .C1(\CIC1Sin/n4508 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_59 ), 
    .D0(\CIC1Sin/d3_58 ), .C0(\CIC1Sin/n4509 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_58 ), .DI1(\CIC1Sin/d4_71_N_633_59 ), 
    .DI0(\CIC1Sin/d4_71_N_633_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12007 ), 
    .F0(\CIC1Sin/d4_71_N_633_58 ), .Q0(\CIC1Sin/d4_58 ), 
    .F1(\CIC1Sin/d4_71_N_633_59 ), .Q1(\CIC1Sin/d4_59 ), 
    .FCO(\CIC1Sin/n12008 ));
  CIC1Sin_SLICE_427 \CIC1Sin/SLICE_427 ( .D1(\CIC1Sin/d3_57 ), 
    .C1(\CIC1Sin/n4510 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_57 ), 
    .D0(\CIC1Sin/d3_56 ), .C0(\CIC1Sin/n4511 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_56 ), .DI1(\CIC1Sin/d4_71_N_633_57 ), 
    .DI0(\CIC1Sin/d4_71_N_633_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12006 ), 
    .F0(\CIC1Sin/d4_71_N_633_56 ), .Q0(\CIC1Sin/d4_56 ), 
    .F1(\CIC1Sin/d4_71_N_633_57 ), .Q1(\CIC1Sin/d4_57 ), 
    .FCO(\CIC1Sin/n12007 ));
  CIC1Sin_SLICE_428 \CIC1Sin/SLICE_428 ( .D1(\CIC1Sin/d3_55 ), 
    .C1(\CIC1Sin/n4512 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_55 ), 
    .D0(\CIC1Sin/d3_54 ), .C0(\CIC1Sin/n4513 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_54 ), .DI1(\CIC1Sin/d4_71_N_633_55 ), 
    .DI0(\CIC1Sin/d4_71_N_633_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12005 ), 
    .F0(\CIC1Sin/d4_71_N_633_54 ), .Q0(\CIC1Sin/d4_54 ), 
    .F1(\CIC1Sin/d4_71_N_633_55 ), .Q1(\CIC1Sin/d4_55 ), 
    .FCO(\CIC1Sin/n12006 ));
  CIC1Sin_SLICE_429 \CIC1Sin/SLICE_429 ( .D1(\CIC1Sin/d3_53 ), 
    .C1(\CIC1Sin/n4514 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_53 ), 
    .D0(\CIC1Sin/d3_52 ), .C0(\CIC1Sin/n4515 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_52 ), .DI1(\CIC1Sin/d4_71_N_633_53 ), 
    .DI0(\CIC1Sin/d4_71_N_633_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12004 ), 
    .F0(\CIC1Sin/d4_71_N_633_52 ), .Q0(\CIC1Sin/d4_52 ), 
    .F1(\CIC1Sin/d4_71_N_633_53 ), .Q1(\CIC1Sin/d4_53 ), 
    .FCO(\CIC1Sin/n12005 ));
  CIC1Sin_SLICE_430 \CIC1Sin/SLICE_430 ( .D1(\CIC1Sin/d7_57 ), 
    .C1(\CIC1Sin/n5726 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_57 ), 
    .D0(\CIC1Sin/d7_56 ), .C0(\CIC1Sin/n5727 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_56 ), .DI1(\CIC1Sin/d8_71_N_1602_57 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_56 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11680 ), .F0(\CIC1Sin/d8_71_N_1602_56 ), 
    .Q0(\CIC1Sin/d8_56 ), .F1(\CIC1Sin/d8_71_N_1602_57 ), .Q1(\CIC1Sin/d8_57 ), 
    .FCO(\CIC1Sin/n11681 ));
  CIC1Sin_SLICE_431 \CIC1Sin/SLICE_431 ( .D1(\CIC1Sin/d7_55 ), 
    .C1(\CIC1Sin/n5728 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_55 ), 
    .D0(\CIC1Sin/d7_54 ), .C0(\CIC1Sin/n5729 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_54 ), .DI1(\CIC1Sin/d8_71_N_1602_55 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_54 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11679 ), .F0(\CIC1Sin/d8_71_N_1602_54 ), 
    .Q0(\CIC1Sin/d8_54 ), .F1(\CIC1Sin/d8_71_N_1602_55 ), .Q1(\CIC1Sin/d8_55 ), 
    .FCO(\CIC1Sin/n11680 ));
  CIC1Sin_SLICE_432 \CIC1Sin/SLICE_432 ( .D1(\CIC1Sin/d7_53 ), 
    .C1(\CIC1Sin/n5730 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_53 ), 
    .D0(\CIC1Sin/d7_52 ), .C0(\CIC1Sin/n5731 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_52 ), .DI1(\CIC1Sin/d8_71_N_1602_53 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_52 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11678 ), .F0(\CIC1Sin/d8_71_N_1602_52 ), 
    .Q0(\CIC1Sin/d8_52 ), .F1(\CIC1Sin/d8_71_N_1602_53 ), .Q1(\CIC1Sin/d8_53 ), 
    .FCO(\CIC1Sin/n11679 ));
  CIC1Sin_SLICE_433 \CIC1Sin/SLICE_433 ( .D1(\CIC1Sin/d7_51 ), 
    .C1(\CIC1Sin/n5732 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_51 ), 
    .D0(\CIC1Sin/d7_50 ), .C0(\CIC1Sin/n5733 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_50 ), .DI1(\CIC1Sin/d8_71_N_1602_51 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_50 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11677 ), .F0(\CIC1Sin/d8_71_N_1602_50 ), 
    .Q0(\CIC1Sin/d8_50 ), .F1(\CIC1Sin/d8_71_N_1602_51 ), .Q1(\CIC1Sin/d8_51 ), 
    .FCO(\CIC1Sin/n11678 ));
  CIC1Sin_SLICE_434 \CIC1Sin/SLICE_434 ( .D1(\CIC1Sin/d7_49 ), 
    .C1(\CIC1Sin/n5734 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_49 ), 
    .D0(\CIC1Sin/d7_48 ), .C0(\CIC1Sin/n5735 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_48 ), .DI1(\CIC1Sin/d8_71_N_1602_49 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_48 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11676 ), .F0(\CIC1Sin/d8_71_N_1602_48 ), 
    .Q0(\CIC1Sin/d8_48 ), .F1(\CIC1Sin/d8_71_N_1602_49 ), .Q1(\CIC1Sin/d8_49 ), 
    .FCO(\CIC1Sin/n11677 ));
  CIC1Sin_SLICE_435 \CIC1Sin/SLICE_435 ( .D1(\CIC1Sin/d7_47 ), 
    .C1(\CIC1Sin/n5736 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_47 ), 
    .D0(\CIC1Sin/d7_46 ), .C0(\CIC1Sin/n5737 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_46 ), .DI1(\CIC1Sin/d8_71_N_1602_47 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_46 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11675 ), .F0(\CIC1Sin/d8_71_N_1602_46 ), 
    .Q0(\CIC1Sin/d8_46 ), .F1(\CIC1Sin/d8_71_N_1602_47 ), .Q1(\CIC1Sin/d8_47 ), 
    .FCO(\CIC1Sin/n11676 ));
  CIC1Sin_SLICE_436 \CIC1Sin/SLICE_436 ( .D1(\CIC1Sin/d7_45 ), 
    .C1(\CIC1Sin/n5738 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_45 ), 
    .D0(\CIC1Sin/d7_44 ), .C0(\CIC1Sin/n5739 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_44 ), .DI1(\CIC1Sin/d8_71_N_1602_45 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_44 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11674 ), .F0(\CIC1Sin/d8_71_N_1602_44 ), 
    .Q0(\CIC1Sin/d8_44 ), .F1(\CIC1Sin/d8_71_N_1602_45 ), .Q1(\CIC1Sin/d8_45 ), 
    .FCO(\CIC1Sin/n11675 ));
  CIC1Sin_SLICE_437 \CIC1Sin/SLICE_437 ( .D1(\CIC1Sin/d7_43 ), 
    .C1(\CIC1Sin/n5740 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_43 ), 
    .D0(\CIC1Sin/d7_42 ), .C0(\CIC1Sin/n5741 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_42 ), .DI1(\CIC1Sin/d8_71_N_1602_43 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_42 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11673 ), .F0(\CIC1Sin/d8_71_N_1602_42 ), 
    .Q0(\CIC1Sin/d8_42 ), .F1(\CIC1Sin/d8_71_N_1602_43 ), .Q1(\CIC1Sin/d8_43 ), 
    .FCO(\CIC1Sin/n11674 ));
  CIC1Sin_SLICE_438 \CIC1Sin/SLICE_438 ( .D1(\CIC1Sin/d7_41 ), 
    .C1(\CIC1Sin/n5742 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_41 ), 
    .D0(\CIC1Sin/d7_40 ), .C0(\CIC1Sin/n5743 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_40 ), .DI1(\CIC1Sin/d8_71_N_1602_41 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_40 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11672 ), .F0(\CIC1Sin/d8_71_N_1602_40 ), 
    .Q0(\CIC1Sin/d8_40 ), .F1(\CIC1Sin/d8_71_N_1602_41 ), .Q1(\CIC1Sin/d8_41 ), 
    .FCO(\CIC1Sin/n11673 ));
  CIC1Sin_SLICE_439 \CIC1Sin/SLICE_439 ( .D1(\CIC1Sin/d7_39 ), 
    .C1(\CIC1Sin/n5744 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_39 ), 
    .D0(\CIC1Sin/d7_38 ), .C0(\CIC1Sin/n5745 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_38 ), .DI1(\CIC1Sin/d8_71_N_1602_39 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_38 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11671 ), .F0(\CIC1Sin/d8_71_N_1602_38 ), 
    .Q0(\CIC1Sin/d8_38 ), .F1(\CIC1Sin/d8_71_N_1602_39 ), .Q1(\CIC1Sin/d8_39 ), 
    .FCO(\CIC1Sin/n11672 ));
  CIC1Sin_SLICE_440 \CIC1Sin/SLICE_440 ( .D1(\CIC1Sin/d7_37 ), 
    .C1(\CIC1Sin/n5746 ), .B1(\CIC1Sin/n5710 ), .A1(\CIC1Sin/d_d7_37 ), 
    .D0(\CIC1Sin/d7_36 ), .C0(\CIC1Sin/n5747 ), .B0(\CIC1Sin/n5710 ), 
    .A0(\CIC1Sin/d_d7_36 ), .DI1(\CIC1Sin/d8_71_N_1602_37 ), 
    .DI0(\CIC1Sin/d8_71_N_1602_36 ), .CE(\CIC1Sin/osc_clk_enable_496 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11670 ), .F0(\CIC1Sin/d8_71_N_1602_36 ), 
    .Q0(\CIC1Sin/d8_36 ), .F1(\CIC1Sin/d8_71_N_1602_37 ), .Q1(\CIC1Sin/d8_37 ), 
    .FCO(\CIC1Sin/n11671 ));
  CIC1Sin_SLICE_441 \CIC1Sin/SLICE_441 ( .A1(\CIC1Sin/n5710 ), 
    .FCO(\CIC1Sin/n11670 ));
  CIC1Sin_SLICE_442 \CIC1Sin/SLICE_442 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4090 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_59 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4091 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_58 ), .DI1(\CIC1Sin/d1_71_N_417_59 ), 
    .DI0(\CIC1Sin/d1_71_N_417_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11183 ), 
    .F0(\CIC1Sin/d1_71_N_417_58 ), .Q0(\CIC1Sin/d1_58 ), 
    .F1(\CIC1Sin/d1_71_N_417_59 ), .Q1(\CIC1Sin/d1_59 ), 
    .FCO(\CIC1Sin/n11184 ));
  CIC1Sin_SLICE_443 \CIC1Sin/SLICE_443 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4092 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_57 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4093 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_56 ), .DI1(\CIC1Sin/d1_71_N_417_57 ), 
    .DI0(\CIC1Sin/d1_71_N_417_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11182 ), 
    .F0(\CIC1Sin/d1_71_N_417_56 ), .Q0(\CIC1Sin/d1_56 ), 
    .F1(\CIC1Sin/d1_71_N_417_57 ), .Q1(\CIC1Sin/d1_57 ), 
    .FCO(\CIC1Sin/n11183 ));
  CIC1Sin_SLICE_444 \CIC1Sin/SLICE_444 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4094 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_55 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4095 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_54 ), .DI1(\CIC1Sin/d1_71_N_417_55 ), 
    .DI0(\CIC1Sin/d1_71_N_417_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11181 ), 
    .F0(\CIC1Sin/d1_71_N_417_54 ), .Q0(\CIC1Sin/d1_54 ), 
    .F1(\CIC1Sin/d1_71_N_417_55 ), .Q1(\CIC1Sin/d1_55 ), 
    .FCO(\CIC1Sin/n11182 ));
  CIC1Sin_SLICE_445 \CIC1Sin/SLICE_445 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4096 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_53 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4097 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_52 ), .DI1(\CIC1Sin/d1_71_N_417_53 ), 
    .DI0(\CIC1Sin/d1_71_N_417_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11180 ), 
    .F0(\CIC1Sin/d1_71_N_417_52 ), .Q0(\CIC1Sin/d1_52 ), 
    .F1(\CIC1Sin/d1_71_N_417_53 ), .Q1(\CIC1Sin/d1_53 ), 
    .FCO(\CIC1Sin/n11181 ));
  CIC1Sin_SLICE_446 \CIC1Sin/SLICE_446 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4098 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_51 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4099 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_50 ), .DI1(\CIC1Sin/d1_71_N_417_51 ), 
    .DI0(\CIC1Sin/d1_71_N_417_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11179 ), 
    .F0(\CIC1Sin/d1_71_N_417_50 ), .Q0(\CIC1Sin/d1_50 ), 
    .F1(\CIC1Sin/d1_71_N_417_51 ), .Q1(\CIC1Sin/d1_51 ), 
    .FCO(\CIC1Sin/n11180 ));
  CIC1Sin_SLICE_447 \CIC1Sin/SLICE_447 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4100 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_49 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4101 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_48 ), .DI1(\CIC1Sin/d1_71_N_417_49 ), 
    .DI0(\CIC1Sin/d1_71_N_417_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11178 ), 
    .F0(\CIC1Sin/d1_71_N_417_48 ), .Q0(\CIC1Sin/d1_48 ), 
    .F1(\CIC1Sin/d1_71_N_417_49 ), .Q1(\CIC1Sin/d1_49 ), 
    .FCO(\CIC1Sin/n11179 ));
  CIC1Sin_SLICE_448 \CIC1Sin/SLICE_448 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4102 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_47 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4103 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_46 ), .DI1(\CIC1Sin/d1_71_N_417_47 ), 
    .DI0(\CIC1Sin/d1_71_N_417_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11177 ), 
    .F0(\CIC1Sin/d1_71_N_417_46 ), .Q0(\CIC1Sin/d1_46 ), 
    .F1(\CIC1Sin/d1_71_N_417_47 ), .Q1(\CIC1Sin/d1_47 ), 
    .FCO(\CIC1Sin/n11178 ));
  CIC1Sin_SLICE_449 \CIC1Sin/SLICE_449 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4104 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_45 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4105 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_44 ), .DI1(\CIC1Sin/d1_71_N_417_45 ), 
    .DI0(\CIC1Sin/d1_71_N_417_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11176 ), 
    .F0(\CIC1Sin/d1_71_N_417_44 ), .Q0(\CIC1Sin/d1_44 ), 
    .F1(\CIC1Sin/d1_71_N_417_45 ), .Q1(\CIC1Sin/d1_45 ), 
    .FCO(\CIC1Sin/n11177 ));
  CIC1Sin_SLICE_450 \CIC1Sin/SLICE_450 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4106 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_43 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4107 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_42 ), .DI1(\CIC1Sin/d1_71_N_417_43 ), 
    .DI0(\CIC1Sin/d1_71_N_417_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11175 ), 
    .F0(\CIC1Sin/d1_71_N_417_42 ), .Q0(\CIC1Sin/d1_42 ), 
    .F1(\CIC1Sin/d1_71_N_417_43 ), .Q1(\CIC1Sin/d1_43 ), 
    .FCO(\CIC1Sin/n11176 ));
  CIC1Sin_SLICE_451 \CIC1Sin/SLICE_451 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4108 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_41 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4109 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_40 ), .DI1(\CIC1Sin/d1_71_N_417_41 ), 
    .DI0(\CIC1Sin/d1_71_N_417_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11174 ), 
    .F0(\CIC1Sin/d1_71_N_417_40 ), .Q0(\CIC1Sin/d1_40 ), 
    .F1(\CIC1Sin/d1_71_N_417_41 ), .Q1(\CIC1Sin/d1_41 ), 
    .FCO(\CIC1Sin/n11175 ));
  CIC1Sin_SLICE_452 \CIC1Sin/SLICE_452 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4110 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_39 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4111 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_38 ), .DI1(\CIC1Sin/d1_71_N_417_39 ), 
    .DI0(\CIC1Sin/d1_71_N_417_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11173 ), 
    .F0(\CIC1Sin/d1_71_N_417_38 ), .Q0(\CIC1Sin/d1_38 ), 
    .F1(\CIC1Sin/d1_71_N_417_39 ), .Q1(\CIC1Sin/d1_39 ), 
    .FCO(\CIC1Sin/n11174 ));
  CIC1Sin_SLICE_453 \CIC1Sin/SLICE_453 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4112 ), .B1(\CIC1Sin/n4038 ), .A1(\CIC1Sin/d1_37 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n12116 ), .B0(\CIC1Sin/n4038 ), 
    .A0(\CIC1Sin/d1_36 ), .DI1(\CIC1Sin/d1_71_N_417_37 ), 
    .DI0(\CIC1Sin/d1_71_N_417_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11172 ), 
    .F0(\CIC1Sin/d1_71_N_417_36 ), .Q0(\CIC1Sin/d1_36 ), 
    .F1(\CIC1Sin/d1_71_N_417_37 ), .Q1(\CIC1Sin/d1_37 ), 
    .FCO(\CIC1Sin/n11173 ));
  CIC1Sin_SLICE_454 \CIC1Sin/SLICE_454 ( .A1(\CIC1Sin/n4038 ), 
    .FCO(\CIC1Sin/n11172 ));
  CIC1Sin_SLICE_455 \CIC1Sin/SLICE_455 ( .B0(\CIC1Sin/d_d_tmp_35 ), 
    .A0(\CIC1Sin/d_tmp_35 ), .DI0(\CIC1Sin/d6_71_N_1458_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_196 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11168 ), 
    .F0(\CIC1Sin/d6_71_N_1458_35 ), .Q0(\CIC1Sin/d6_35 ), .F1(\CIC1Sin/n6926 ));
  CIC1Sin_SLICE_456 \CIC1Sin/SLICE_456 ( .B1(\CIC1Sin/d_d_tmp_34 ), 
    .A1(\CIC1Sin/d_tmp_34 ), .B0(\CIC1Sin/d_d_tmp_33 ), 
    .A0(\CIC1Sin/d_tmp_33 ), .DI1(\CIC1Sin/d6_71_N_1458_34 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_33 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11167 ), .F0(\CIC1Sin/d6_71_N_1458_33 ), 
    .Q0(\CIC1Sin/d6_33 ), .F1(\CIC1Sin/d6_71_N_1458_34 ), .Q1(\CIC1Sin/d6_34 ), 
    .FCO(\CIC1Sin/n11168 ));
  CIC1Sin_SLICE_457 \CIC1Sin/SLICE_457 ( .B1(\CIC1Sin/d_d_tmp_32 ), 
    .A1(\CIC1Sin/d_tmp_32 ), .B0(\CIC1Sin/d_d_tmp_31 ), 
    .A0(\CIC1Sin/d_tmp_31 ), .DI1(\CIC1Sin/d6_71_N_1458_32 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_31 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11166 ), .F0(\CIC1Sin/d6_71_N_1458_31 ), 
    .Q0(\CIC1Sin/d6_31 ), .F1(\CIC1Sin/d6_71_N_1458_32 ), .Q1(\CIC1Sin/d6_32 ), 
    .FCO(\CIC1Sin/n11167 ));
  CIC1Sin_SLICE_458 \CIC1Sin/SLICE_458 ( .B1(\CIC1Sin/d_d_tmp_30 ), 
    .A1(\CIC1Sin/d_tmp_30 ), .B0(\CIC1Sin/d_d_tmp_29 ), 
    .A0(\CIC1Sin/d_tmp_29 ), .DI1(\CIC1Sin/d6_71_N_1458_30 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_29 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11165 ), .F0(\CIC1Sin/d6_71_N_1458_29 ), 
    .Q0(\CIC1Sin/d6_29 ), .F1(\CIC1Sin/d6_71_N_1458_30 ), .Q1(\CIC1Sin/d6_30 ), 
    .FCO(\CIC1Sin/n11166 ));
  CIC1Sin_SLICE_459 \CIC1Sin/SLICE_459 ( .B1(\CIC1Sin/d_d_tmp_28 ), 
    .A1(\CIC1Sin/d_tmp_28 ), .B0(\CIC1Sin/d_d_tmp_27 ), 
    .A0(\CIC1Sin/d_tmp_27 ), .DI1(\CIC1Sin/d6_71_N_1458_28 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_27 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11164 ), .F0(\CIC1Sin/d6_71_N_1458_27 ), 
    .Q0(\CIC1Sin/d6_27 ), .F1(\CIC1Sin/d6_71_N_1458_28 ), .Q1(\CIC1Sin/d6_28 ), 
    .FCO(\CIC1Sin/n11165 ));
  CIC1Sin_SLICE_460 \CIC1Sin/SLICE_460 ( .B1(\CIC1Sin/d_d_tmp_26 ), 
    .A1(\CIC1Sin/d_tmp_26 ), .B0(\CIC1Sin/d_d_tmp_25 ), 
    .A0(\CIC1Sin/d_tmp_25 ), .DI1(\CIC1Sin/d6_71_N_1458_26 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_25 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11163 ), .F0(\CIC1Sin/d6_71_N_1458_25 ), 
    .Q0(\CIC1Sin/d6_25 ), .F1(\CIC1Sin/d6_71_N_1458_26 ), .Q1(\CIC1Sin/d6_26 ), 
    .FCO(\CIC1Sin/n11164 ));
  CIC1Sin_SLICE_461 \CIC1Sin/SLICE_461 ( .B1(\CIC1Sin/d_d_tmp_24 ), 
    .A1(\CIC1Sin/d_tmp_24 ), .B0(\CIC1Sin/d_d_tmp_23 ), 
    .A0(\CIC1Sin/d_tmp_23 ), .DI1(\CIC1Sin/d6_71_N_1458_24 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_23 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11162 ), .F0(\CIC1Sin/d6_71_N_1458_23 ), 
    .Q0(\CIC1Sin/d6_23 ), .F1(\CIC1Sin/d6_71_N_1458_24 ), .Q1(\CIC1Sin/d6_24 ), 
    .FCO(\CIC1Sin/n11163 ));
  CIC1Sin_SLICE_462 \CIC1Sin/SLICE_462 ( .B1(\CIC1Sin/d_d_tmp_22 ), 
    .A1(\CIC1Sin/d_tmp_22 ), .B0(\CIC1Sin/d_d_tmp_21 ), 
    .A0(\CIC1Sin/d_tmp_21 ), .DI1(\CIC1Sin/d6_71_N_1458_22 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_21 ), .CE(\CIC1Sin/osc_clk_enable_196 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11161 ), .F0(\CIC1Sin/d6_71_N_1458_21 ), 
    .Q0(\CIC1Sin/d6_21 ), .F1(\CIC1Sin/d6_71_N_1458_22 ), .Q1(\CIC1Sin/d6_22 ), 
    .FCO(\CIC1Sin/n11162 ));
  CIC1Sin_SLICE_463 \CIC1Sin/SLICE_463 ( .B1(\CIC1Sin/d_d_tmp_20 ), 
    .A1(\CIC1Sin/d_tmp_20 ), .B0(\CIC1Sin/d_d_tmp_19 ), 
    .A0(\CIC1Sin/d_tmp_19 ), .DI0(\CIC1Sin/d6_71_N_1458_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11160 ), 
    .F0(\CIC1Sin/d6_71_N_1458_19 ), .Q0(\CIC1Sin/d6_19 ), 
    .F1(\CIC1Sin/d6_71_N_1458_20 ), .FCO(\CIC1Sin/n11161 ));
  CIC1Sin_SLICE_464 \CIC1Sin/SLICE_464 ( .B1(\CIC1Sin/d_d_tmp_18 ), 
    .A1(\CIC1Sin/d_tmp_18 ), .B0(\CIC1Sin/d_d_tmp_17 ), 
    .A0(\CIC1Sin/d_tmp_17 ), .DI1(\CIC1Sin/d6_71_N_1458_18 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_17 ), .CE(\CIC1Sin/osc_clk_enable_146 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11159 ), .F0(\CIC1Sin/d6_71_N_1458_17 ), 
    .Q0(\CIC1Sin/d6_17 ), .F1(\CIC1Sin/d6_71_N_1458_18 ), .Q1(\CIC1Sin/d6_18 ), 
    .FCO(\CIC1Sin/n11160 ));
  CIC1Sin_SLICE_465 \CIC1Sin/SLICE_465 ( .B1(\CIC1Sin/d_d_tmp_16 ), 
    .A1(\CIC1Sin/d_tmp_16 ), .B0(\CIC1Sin/d_d_tmp_15 ), 
    .A0(\CIC1Sin/d_tmp_15 ), .DI1(\CIC1Sin/d6_71_N_1458_16 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_15 ), .CE(\CIC1Sin/osc_clk_enable_146 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11158 ), .F0(\CIC1Sin/d6_71_N_1458_15 ), 
    .Q0(\CIC1Sin/d6_15 ), .F1(\CIC1Sin/d6_71_N_1458_16 ), .Q1(\CIC1Sin/d6_16 ), 
    .FCO(\CIC1Sin/n11159 ));
  CIC1Sin_SLICE_466 \CIC1Sin/SLICE_466 ( .B1(\CIC1Sin/d_d_tmp_14 ), 
    .A1(\CIC1Sin/d_tmp_14 ), .B0(\CIC1Sin/d_d_tmp_13 ), 
    .A0(\CIC1Sin/d_tmp_13 ), .DI1(\CIC1Sin/d6_71_N_1458_14 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_13 ), .CE(\CIC1Sin/osc_clk_enable_146 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11157 ), .F0(\CIC1Sin/d6_71_N_1458_13 ), 
    .Q0(\CIC1Sin/d6_13 ), .F1(\CIC1Sin/d6_71_N_1458_14 ), .Q1(\CIC1Sin/d6_14 ), 
    .FCO(\CIC1Sin/n11158 ));
  CIC1Sin_SLICE_467 \CIC1Sin/SLICE_467 ( .B1(\CIC1Sin/d_d_tmp_12 ), 
    .A1(\CIC1Sin/d_tmp_12 ), .B0(\CIC1Sin/d_d_tmp_11 ), 
    .A0(\CIC1Sin/d_tmp_11 ), .DI1(\CIC1Sin/d6_71_N_1458_12 ), 
    .DI0(\CIC1Sin/d6_71_N_1458_11 ), .CE(\CIC1Sin/osc_clk_enable_146 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11156 ), .F0(\CIC1Sin/d6_71_N_1458_11 ), 
    .Q0(\CIC1Sin/d6_11 ), .F1(\CIC1Sin/d6_71_N_1458_12 ), .Q1(\CIC1Sin/d6_12 ), 
    .FCO(\CIC1Sin/n11157 ));
  CIC1Sin_SLICE_468 \CIC1Sin/SLICE_468 ( .B1(\CIC1Sin/d_d_tmp_10 ), 
    .A1(\CIC1Sin/d_tmp_10 ), .B0(\CIC1Sin/d_d_tmp_9 ), .A0(\CIC1Sin/d_tmp_9 ), 
    .DI1(\CIC1Sin/d6_71_N_1458_10 ), .DI0(\CIC1Sin/d6_71_N_1458_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11155 ), 
    .F0(\CIC1Sin/d6_71_N_1458_9 ), .Q0(\CIC1Sin/d6_9 ), 
    .F1(\CIC1Sin/d6_71_N_1458_10 ), .Q1(\CIC1Sin/d6_10 ), 
    .FCO(\CIC1Sin/n11156 ));
  CIC1Sin_SLICE_469 \CIC1Sin/SLICE_469 ( .B1(\CIC1Sin/d_d_tmp_8 ), 
    .A1(\CIC1Sin/d_tmp_8 ), .B0(\CIC1Sin/d_d_tmp_7 ), .A0(\CIC1Sin/d_tmp_7 ), 
    .DI1(\CIC1Sin/d6_71_N_1458_8 ), .DI0(\CIC1Sin/d6_71_N_1458_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11154 ), 
    .F0(\CIC1Sin/d6_71_N_1458_7 ), .Q0(\CIC1Sin/d6_7 ), 
    .F1(\CIC1Sin/d6_71_N_1458_8 ), .Q1(\CIC1Sin/d6_8 ), .FCO(\CIC1Sin/n11155 ));
  CIC1Sin_SLICE_470 \CIC1Sin/SLICE_470 ( .B1(\CIC1Sin/d_d_tmp_6 ), 
    .A1(\CIC1Sin/d_tmp_6 ), .B0(\CIC1Sin/d_d_tmp_5 ), .A0(\CIC1Sin/d_tmp_5 ), 
    .DI1(\CIC1Sin/d6_71_N_1458_6 ), .DI0(\CIC1Sin/d6_71_N_1458_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11153 ), 
    .F0(\CIC1Sin/d6_71_N_1458_5 ), .Q0(\CIC1Sin/d6_5 ), 
    .F1(\CIC1Sin/d6_71_N_1458_6 ), .Q1(\CIC1Sin/d6_6 ), .FCO(\CIC1Sin/n11154 ));
  CIC1Sin_SLICE_471 \CIC1Sin/SLICE_471 ( .B1(\CIC1Sin/d_d_tmp_4 ), 
    .A1(\CIC1Sin/d_tmp_4 ), .B0(\CIC1Sin/d_d_tmp_3 ), .A0(\CIC1Sin/d_tmp_3 ), 
    .DI1(\CIC1Sin/d6_71_N_1458_4 ), .DI0(\CIC1Sin/d6_71_N_1458_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11152 ), 
    .F0(\CIC1Sin/d6_71_N_1458_3 ), .Q0(\CIC1Sin/d6_3 ), 
    .F1(\CIC1Sin/d6_71_N_1458_4 ), .Q1(\CIC1Sin/d6_4 ), .FCO(\CIC1Sin/n11153 ));
  CIC1Sin_SLICE_472 \CIC1Sin/SLICE_472 ( .B1(\CIC1Sin/d_d_tmp_2 ), 
    .A1(\CIC1Sin/d_tmp_2 ), .B0(\CIC1Sin/d_d_tmp_1 ), .A0(\CIC1Sin/d_tmp_1 ), 
    .DI1(\CIC1Sin/d6_71_N_1458_2 ), .DI0(\CIC1Sin/d6_71_N_1458_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11151 ), 
    .F0(\CIC1Sin/d6_71_N_1458_1 ), .Q0(\CIC1Sin/d6_1 ), 
    .F1(\CIC1Sin/d6_71_N_1458_2 ), .Q1(\CIC1Sin/d6_2 ), .FCO(\CIC1Sin/n11152 ));
  CIC1Sin_SLICE_473 \CIC1Sin/SLICE_473 ( .B1(\CIC1Sin/d_d_tmp_0 ), 
    .A1(\CIC1Sin/d_tmp_0 ), .DI1(\CIC1Sin/d6_71_N_1458_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d6_71_N_1458_0 ), .Q1(\CIC1Sin/d6_0 ), .FCO(\CIC1Sin/n11151 ));
  CIC1Sin_SLICE_474 \CIC1Sin/SLICE_474 ( .B0(\CIC1Sin/d_d8_35 ), 
    .A0(\CIC1Sin/d8_35 ), .DI0(\CIC1Sin/d9_71_N_1674_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11109 ), 
    .F0(\CIC1Sin/d9_71_N_1674_35 ), .Q0(\CIC1Sin/d9_35 ), .F1(\CIC1Sin/n6470 ));
  CIC1Sin_SLICE_475 \CIC1Sin/SLICE_475 ( .B1(\CIC1Sin/d_d8_34 ), 
    .A1(\CIC1Sin/d8_34 ), .B0(\CIC1Sin/d_d8_33 ), .A0(\CIC1Sin/d8_33 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_34 ), .DI0(\CIC1Sin/d9_71_N_1674_33 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11108 ), 
    .F0(\CIC1Sin/d9_71_N_1674_33 ), .Q0(\CIC1Sin/d9_33 ), 
    .F1(\CIC1Sin/d9_71_N_1674_34 ), .Q1(\CIC1Sin/d9_34 ), 
    .FCO(\CIC1Sin/n11109 ));
  CIC1Sin_SLICE_476 \CIC1Sin/SLICE_476 ( .B1(\CIC1Sin/d_d8_32 ), 
    .A1(\CIC1Sin/d8_32 ), .B0(\CIC1Sin/d_d8_31 ), .A0(\CIC1Sin/d8_31 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_32 ), .DI0(\CIC1Sin/d9_71_N_1674_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11107 ), 
    .F0(\CIC1Sin/d9_71_N_1674_31 ), .Q0(\CIC1Sin/d9_31 ), 
    .F1(\CIC1Sin/d9_71_N_1674_32 ), .Q1(\CIC1Sin/d9_32 ), 
    .FCO(\CIC1Sin/n11108 ));
  CIC1Sin_SLICE_477 \CIC1Sin/SLICE_477 ( .B1(\CIC1Sin/d_d8_30 ), 
    .A1(\CIC1Sin/d8_30 ), .B0(\CIC1Sin/d_d8_29 ), .A0(\CIC1Sin/d8_29 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_30 ), .DI0(\CIC1Sin/d9_71_N_1674_29 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11106 ), 
    .F0(\CIC1Sin/d9_71_N_1674_29 ), .Q0(\CIC1Sin/d9_29 ), 
    .F1(\CIC1Sin/d9_71_N_1674_30 ), .Q1(\CIC1Sin/d9_30 ), 
    .FCO(\CIC1Sin/n11107 ));
  CIC1Sin_SLICE_478 \CIC1Sin/SLICE_478 ( .B1(\CIC1Sin/d_d8_28 ), 
    .A1(\CIC1Sin/d8_28 ), .B0(\CIC1Sin/d_d8_27 ), .A0(\CIC1Sin/d8_27 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_28 ), .DI0(\CIC1Sin/d9_71_N_1674_27 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11105 ), 
    .F0(\CIC1Sin/d9_71_N_1674_27 ), .Q0(\CIC1Sin/d9_27 ), 
    .F1(\CIC1Sin/d9_71_N_1674_28 ), .Q1(\CIC1Sin/d9_28 ), 
    .FCO(\CIC1Sin/n11106 ));
  CIC1Sin_SLICE_479 \CIC1Sin/SLICE_479 ( .B1(\CIC1Sin/d_d8_26 ), 
    .A1(\CIC1Sin/d8_26 ), .B0(\CIC1Sin/d_d8_25 ), .A0(\CIC1Sin/d8_25 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_26 ), .DI0(\CIC1Sin/d9_71_N_1674_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11104 ), 
    .F0(\CIC1Sin/d9_71_N_1674_25 ), .Q0(\CIC1Sin/d9_25 ), 
    .F1(\CIC1Sin/d9_71_N_1674_26 ), .Q1(\CIC1Sin/d9_26 ), 
    .FCO(\CIC1Sin/n11105 ));
  CIC1Sin_SLICE_480 \CIC1Sin/SLICE_480 ( .B1(\CIC1Sin/d_d8_24 ), 
    .A1(\CIC1Sin/d8_24 ), .B0(\CIC1Sin/d_d8_23 ), .A0(\CIC1Sin/d8_23 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_24 ), .DI0(\CIC1Sin/d9_71_N_1674_23 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11103 ), 
    .F0(\CIC1Sin/d9_71_N_1674_23 ), .Q0(\CIC1Sin/d9_23 ), 
    .F1(\CIC1Sin/d9_71_N_1674_24 ), .Q1(\CIC1Sin/d9_24 ), 
    .FCO(\CIC1Sin/n11104 ));
  CIC1Sin_SLICE_481 \CIC1Sin/SLICE_481 ( .B1(\CIC1Sin/d_d8_22 ), 
    .A1(\CIC1Sin/d8_22 ), .B0(\CIC1Sin/d_d8_21 ), .A0(\CIC1Sin/d8_21 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_22 ), .DI0(\CIC1Sin/d9_71_N_1674_21 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11102 ), 
    .F0(\CIC1Sin/d9_71_N_1674_21 ), .Q0(\CIC1Sin/d9_21 ), 
    .F1(\CIC1Sin/d9_71_N_1674_22 ), .Q1(\CIC1Sin/d9_22 ), 
    .FCO(\CIC1Sin/n11103 ));
  CIC1Sin_SLICE_482 \CIC1Sin/SLICE_482 ( .B1(\CIC1Sin/d_d8_20 ), 
    .A1(\CIC1Sin/d8_20 ), .B0(\CIC1Sin/d_d8_19 ), .A0(\CIC1Sin/d8_19 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_20 ), .DI0(\CIC1Sin/d9_71_N_1674_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11101 ), 
    .F0(\CIC1Sin/d9_71_N_1674_19 ), .Q0(\CIC1Sin/d9_19 ), 
    .F1(\CIC1Sin/d9_71_N_1674_20 ), .Q1(\CIC1Sin/d9_20 ), 
    .FCO(\CIC1Sin/n11102 ));
  CIC1Sin_SLICE_483 \CIC1Sin/SLICE_483 ( .B1(\CIC1Sin/d_d8_18 ), 
    .A1(\CIC1Sin/d8_18 ), .B0(\CIC1Sin/d_d8_17 ), .A0(\CIC1Sin/d8_17 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_18 ), .DI0(\CIC1Sin/d9_71_N_1674_17 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11100 ), 
    .F0(\CIC1Sin/d9_71_N_1674_17 ), .Q0(\CIC1Sin/d9_17 ), 
    .F1(\CIC1Sin/d9_71_N_1674_18 ), .Q1(\CIC1Sin/d9_18 ), 
    .FCO(\CIC1Sin/n11101 ));
  CIC1Sin_SLICE_484 \CIC1Sin/SLICE_484 ( .B1(\CIC1Sin/d_d8_16 ), 
    .A1(\CIC1Sin/d8_16 ), .B0(\CIC1Sin/d_d8_15 ), .A0(\CIC1Sin/d8_15 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_16 ), .DI0(\CIC1Sin/d9_71_N_1674_15 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11099 ), 
    .F0(\CIC1Sin/d9_71_N_1674_15 ), .Q0(\CIC1Sin/d9_15 ), 
    .F1(\CIC1Sin/d9_71_N_1674_16 ), .Q1(\CIC1Sin/d9_16 ), 
    .FCO(\CIC1Sin/n11100 ));
  CIC1Sin_SLICE_485 \CIC1Sin/SLICE_485 ( .B1(\CIC1Sin/d_d8_14 ), 
    .A1(\CIC1Sin/d8_14 ), .B0(\CIC1Sin/d_d8_13 ), .A0(\CIC1Sin/d8_13 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_14 ), .DI0(\CIC1Sin/d9_71_N_1674_13 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11098 ), 
    .F0(\CIC1Sin/d9_71_N_1674_13 ), .Q0(\CIC1Sin/d9_13 ), 
    .F1(\CIC1Sin/d9_71_N_1674_14 ), .Q1(\CIC1Sin/d9_14 ), 
    .FCO(\CIC1Sin/n11099 ));
  CIC1Sin_SLICE_486 \CIC1Sin/SLICE_486 ( .B1(\CIC1Sin/d_d8_12 ), 
    .A1(\CIC1Sin/d8_12 ), .B0(\CIC1Sin/d_d8_11 ), .A0(\CIC1Sin/d8_11 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_12 ), .DI0(\CIC1Sin/d9_71_N_1674_11 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11097 ), 
    .F0(\CIC1Sin/d9_71_N_1674_11 ), .Q0(\CIC1Sin/d9_11 ), 
    .F1(\CIC1Sin/d9_71_N_1674_12 ), .Q1(\CIC1Sin/d9_12 ), 
    .FCO(\CIC1Sin/n11098 ));
  CIC1Sin_SLICE_487 \CIC1Sin/SLICE_487 ( .B1(\CIC1Sin/d_d8_10 ), 
    .A1(\CIC1Sin/d8_10 ), .B0(\CIC1Sin/d_d8_9 ), .A0(\CIC1Sin/d8_9 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_10 ), .DI0(\CIC1Sin/d9_71_N_1674_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11096 ), 
    .F0(\CIC1Sin/d9_71_N_1674_9 ), .Q0(\CIC1Sin/d9_9 ), 
    .F1(\CIC1Sin/d9_71_N_1674_10 ), .Q1(\CIC1Sin/d9_10 ), 
    .FCO(\CIC1Sin/n11097 ));
  CIC1Sin_SLICE_488 \CIC1Sin/SLICE_488 ( .B1(\CIC1Sin/d_d8_8 ), 
    .A1(\CIC1Sin/d8_8 ), .B0(\CIC1Sin/d_d8_7 ), .A0(\CIC1Sin/d8_7 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_8 ), .DI0(\CIC1Sin/d9_71_N_1674_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11095 ), 
    .F0(\CIC1Sin/d9_71_N_1674_7 ), .Q0(\CIC1Sin/d9_7 ), 
    .F1(\CIC1Sin/d9_71_N_1674_8 ), .Q1(\CIC1Sin/d9_8 ), .FCO(\CIC1Sin/n11096 ));
  CIC1Sin_SLICE_489 \CIC1Sin/SLICE_489 ( .B1(\CIC1Sin/d_d8_6 ), 
    .A1(\CIC1Sin/d8_6 ), .B0(\CIC1Sin/d_d8_5 ), .A0(\CIC1Sin/d8_5 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_6 ), .DI0(\CIC1Sin/d9_71_N_1674_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11094 ), 
    .F0(\CIC1Sin/d9_71_N_1674_5 ), .Q0(\CIC1Sin/d9_5 ), 
    .F1(\CIC1Sin/d9_71_N_1674_6 ), .Q1(\CIC1Sin/d9_6 ), .FCO(\CIC1Sin/n11095 ));
  CIC1Sin_SLICE_490 \CIC1Sin/SLICE_490 ( .B1(\CIC1Sin/d_d8_4 ), 
    .A1(\CIC1Sin/d8_4 ), .B0(\CIC1Sin/d_d8_3 ), .A0(\CIC1Sin/d8_3 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_4 ), .DI0(\CIC1Sin/d9_71_N_1674_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11093 ), 
    .F0(\CIC1Sin/d9_71_N_1674_3 ), .Q0(\CIC1Sin/d9_3 ), 
    .F1(\CIC1Sin/d9_71_N_1674_4 ), .Q1(\CIC1Sin/d9_4 ), .FCO(\CIC1Sin/n11094 ));
  CIC1Sin_SLICE_491 \CIC1Sin/SLICE_491 ( .B1(\CIC1Sin/d_d8_2 ), 
    .A1(\CIC1Sin/d8_2 ), .B0(\CIC1Sin/d_d8_1 ), .A0(\CIC1Sin/d8_1 ), 
    .DI1(\CIC1Sin/d9_71_N_1674_2 ), .DI0(\CIC1Sin/d9_71_N_1674_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11092 ), 
    .F0(\CIC1Sin/d9_71_N_1674_1 ), .Q0(\CIC1Sin/d9_1 ), 
    .F1(\CIC1Sin/d9_71_N_1674_2 ), .Q1(\CIC1Sin/d9_2 ), .FCO(\CIC1Sin/n11093 ));
  CIC1Sin_SLICE_492 \CIC1Sin/SLICE_492 ( .B1(\CIC1Sin/d_d8_0 ), 
    .A1(\CIC1Sin/d8_0 ), .DI1(\CIC1Sin/d9_71_N_1674_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d9_71_N_1674_0 ), .Q1(\CIC1Sin/d9_0 ), .FCO(\CIC1Sin/n11092 ));
  CIC1Sin_SLICE_493 \CIC1Sin/SLICE_493 ( .B0(\CIC1Sin/d_d9_35 ), 
    .A0(\CIC1Sin/d9_35 ), .FCI(\CIC1Sin/n11091 ), .F1(\CIC1Sin/n6318 ));
  CIC1Sin_SLICE_494 \CIC1Sin/SLICE_494 ( .B1(\CIC1Sin/d_d9_34 ), 
    .A1(\CIC1Sin/d9_34 ), .B0(\CIC1Sin/d_d9_33 ), .A0(\CIC1Sin/d9_33 ), 
    .FCI(\CIC1Sin/n11090 ), .FCO(\CIC1Sin/n11091 ));
  CIC1Sin_SLICE_495 \CIC1Sin/SLICE_495 ( .B1(\CIC1Sin/d_d9_32 ), 
    .A1(\CIC1Sin/d9_32 ), .B0(\CIC1Sin/d_d9_31 ), .A0(\CIC1Sin/d9_31 ), 
    .FCI(\CIC1Sin/n11089 ), .FCO(\CIC1Sin/n11090 ));
  CIC1Sin_SLICE_496 \CIC1Sin/SLICE_496 ( .B1(\CIC1Sin/d_d9_30 ), 
    .A1(\CIC1Sin/d9_30 ), .B0(\CIC1Sin/d_d9_29 ), .A0(\CIC1Sin/d9_29 ), 
    .FCI(\CIC1Sin/n11088 ), .FCO(\CIC1Sin/n11089 ));
  CIC1Sin_SLICE_497 \CIC1Sin/SLICE_497 ( .B1(\CIC1Sin/d_d9_28 ), 
    .A1(\CIC1Sin/d9_28 ), .B0(\CIC1Sin/d_d9_27 ), .A0(\CIC1Sin/d9_27 ), 
    .FCI(\CIC1Sin/n11087 ), .FCO(\CIC1Sin/n11088 ));
  CIC1Sin_SLICE_498 \CIC1Sin/SLICE_498 ( .B1(\CIC1Sin/d_d9_26 ), 
    .A1(\CIC1Sin/d9_26 ), .B0(\CIC1Sin/d_d9_25 ), .A0(\CIC1Sin/d9_25 ), 
    .FCI(\CIC1Sin/n11086 ), .FCO(\CIC1Sin/n11087 ));
  CIC1Sin_SLICE_499 \CIC1Sin/SLICE_499 ( .B1(\CIC1Sin/d_d9_24 ), 
    .A1(\CIC1Sin/d9_24 ), .B0(\CIC1Sin/d_d9_23 ), .A0(\CIC1Sin/d9_23 ), 
    .FCI(\CIC1Sin/n11085 ), .FCO(\CIC1Sin/n11086 ));
  CIC1Sin_SLICE_500 \CIC1Sin/SLICE_500 ( .B1(\CIC1Sin/d_d9_22 ), 
    .A1(\CIC1Sin/d9_22 ), .B0(\CIC1Sin/d_d9_21 ), .A0(\CIC1Sin/d9_21 ), 
    .FCI(\CIC1Sin/n11084 ), .FCO(\CIC1Sin/n11085 ));
  CIC1Sin_SLICE_501 \CIC1Sin/SLICE_501 ( .B1(\CIC1Sin/d_d9_20 ), 
    .A1(\CIC1Sin/d9_20 ), .B0(\CIC1Sin/d_d9_19 ), .A0(\CIC1Sin/d9_19 ), 
    .FCI(\CIC1Sin/n11083 ), .FCO(\CIC1Sin/n11084 ));
  CIC1Sin_SLICE_502 \CIC1Sin/SLICE_502 ( .B1(\CIC1Sin/d_d9_18 ), 
    .A1(\CIC1Sin/d9_18 ), .B0(\CIC1Sin/d_d9_17 ), .A0(\CIC1Sin/d9_17 ), 
    .FCI(\CIC1Sin/n11082 ), .FCO(\CIC1Sin/n11083 ));
  CIC1Sin_SLICE_503 \CIC1Sin/SLICE_503 ( .B1(\CIC1Sin/d_d9_16 ), 
    .A1(\CIC1Sin/d9_16 ), .B0(\CIC1Sin/d_d9_15 ), .A0(\CIC1Sin/d9_15 ), 
    .FCI(\CIC1Sin/n11081 ), .FCO(\CIC1Sin/n11082 ));
  CIC1Sin_SLICE_504 \CIC1Sin/SLICE_504 ( .B1(\CIC1Sin/d_d9_14 ), 
    .A1(\CIC1Sin/d9_14 ), .B0(\CIC1Sin/d_d9_13 ), .A0(\CIC1Sin/d9_13 ), 
    .FCI(\CIC1Sin/n11080 ), .FCO(\CIC1Sin/n11081 ));
  CIC1Sin_SLICE_505 \CIC1Sin/SLICE_505 ( .B1(\CIC1Sin/d_d9_12 ), 
    .A1(\CIC1Sin/d9_12 ), .B0(\CIC1Sin/d_d9_11 ), .A0(\CIC1Sin/d9_11 ), 
    .FCI(\CIC1Sin/n11079 ), .FCO(\CIC1Sin/n11080 ));
  CIC1Sin_SLICE_506 \CIC1Sin/SLICE_506 ( .B1(\CIC1Sin/d_d9_10 ), 
    .A1(\CIC1Sin/d9_10 ), .B0(\CIC1Sin/d_d9_9 ), .A0(\CIC1Sin/d9_9 ), 
    .FCI(\CIC1Sin/n11078 ), .FCO(\CIC1Sin/n11079 ));
  CIC1Sin_SLICE_507 \CIC1Sin/SLICE_507 ( .B1(\CIC1Sin/d_d9_8 ), 
    .A1(\CIC1Sin/d9_8 ), .B0(\CIC1Sin/d_d9_7 ), .A0(\CIC1Sin/d9_7 ), 
    .FCI(\CIC1Sin/n11077 ), .FCO(\CIC1Sin/n11078 ));
  CIC1Sin_SLICE_508 \CIC1Sin/SLICE_508 ( .B1(\CIC1Sin/d_d9_6 ), 
    .A1(\CIC1Sin/d9_6 ), .B0(\CIC1Sin/d_d9_5 ), .A0(\CIC1Sin/d9_5 ), 
    .FCI(\CIC1Sin/n11076 ), .FCO(\CIC1Sin/n11077 ));
  CIC1Sin_SLICE_509 \CIC1Sin/SLICE_509 ( .B1(\CIC1Sin/d_d9_4 ), 
    .A1(\CIC1Sin/d9_4 ), .B0(\CIC1Sin/d_d9_3 ), .A0(\CIC1Sin/d9_3 ), 
    .FCI(\CIC1Sin/n11075 ), .FCO(\CIC1Sin/n11076 ));
  CIC1Sin_SLICE_510 \CIC1Sin/SLICE_510 ( .B1(\CIC1Sin/d_d9_2 ), 
    .A1(\CIC1Sin/d9_2 ), .B0(\CIC1Sin/d_d9_1 ), .A0(\CIC1Sin/d9_1 ), 
    .FCI(\CIC1Sin/n11074 ), .FCO(\CIC1Sin/n11075 ));
  CIC1Sin_SLICE_511 \CIC1Sin/SLICE_511 ( .B1(\CIC1Sin/d_d9_0 ), 
    .A1(\CIC1Sin/d9_0 ), .FCO(\CIC1Sin/n11074 ));
  CIC1Sin_SLICE_512 \CIC1Sin/SLICE_512 ( .B0(\CIC1Sin/d_d7_35 ), 
    .A0(\CIC1Sin/d7_35 ), .DI0(\CIC1Sin/d8_71_N_1602_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11019 ), 
    .F0(\CIC1Sin/d8_71_N_1602_35 ), .Q0(\CIC1Sin/d8_35 ), .F1(\CIC1Sin/n5710 ));
  CIC1Sin_SLICE_513 \CIC1Sin/SLICE_513 ( .B1(\CIC1Sin/d_d7_34 ), 
    .A1(\CIC1Sin/d7_34 ), .B0(\CIC1Sin/d_d7_33 ), .A0(\CIC1Sin/d7_33 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_34 ), .DI0(\CIC1Sin/d8_71_N_1602_33 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11018 ), 
    .F0(\CIC1Sin/d8_71_N_1602_33 ), .Q0(\CIC1Sin/d8_33 ), 
    .F1(\CIC1Sin/d8_71_N_1602_34 ), .Q1(\CIC1Sin/d8_34 ), 
    .FCO(\CIC1Sin/n11019 ));
  CIC1Sin_SLICE_514 \CIC1Sin/SLICE_514 ( .B1(\CIC1Sin/d_d7_32 ), 
    .A1(\CIC1Sin/d7_32 ), .B0(\CIC1Sin/d_d7_31 ), .A0(\CIC1Sin/d7_31 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_32 ), .DI0(\CIC1Sin/d8_71_N_1602_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11017 ), 
    .F0(\CIC1Sin/d8_71_N_1602_31 ), .Q0(\CIC1Sin/d8_31 ), 
    .F1(\CIC1Sin/d8_71_N_1602_32 ), .Q1(\CIC1Sin/d8_32 ), 
    .FCO(\CIC1Sin/n11018 ));
  CIC1Sin_SLICE_515 \CIC1Sin/SLICE_515 ( .B1(\CIC1Sin/d_d7_30 ), 
    .A1(\CIC1Sin/d7_30 ), .B0(\CIC1Sin/d_d7_29 ), .A0(\CIC1Sin/d7_29 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_30 ), .DI0(\CIC1Sin/d8_71_N_1602_29 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11016 ), 
    .F0(\CIC1Sin/d8_71_N_1602_29 ), .Q0(\CIC1Sin/d8_29 ), 
    .F1(\CIC1Sin/d8_71_N_1602_30 ), .Q1(\CIC1Sin/d8_30 ), 
    .FCO(\CIC1Sin/n11017 ));
  CIC1Sin_SLICE_516 \CIC1Sin/SLICE_516 ( .B1(\CIC1Sin/d_d7_28 ), 
    .A1(\CIC1Sin/d7_28 ), .B0(\CIC1Sin/d_d7_27 ), .A0(\CIC1Sin/d7_27 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_28 ), .DI0(\CIC1Sin/d8_71_N_1602_27 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11015 ), 
    .F0(\CIC1Sin/d8_71_N_1602_27 ), .Q0(\CIC1Sin/d8_27 ), 
    .F1(\CIC1Sin/d8_71_N_1602_28 ), .Q1(\CIC1Sin/d8_28 ), 
    .FCO(\CIC1Sin/n11016 ));
  CIC1Sin_SLICE_517 \CIC1Sin/SLICE_517 ( .B1(\CIC1Sin/d_d7_26 ), 
    .A1(\CIC1Sin/d7_26 ), .B0(\CIC1Sin/d_d7_25 ), .A0(\CIC1Sin/d7_25 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_26 ), .DI0(\CIC1Sin/d8_71_N_1602_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11014 ), 
    .F0(\CIC1Sin/d8_71_N_1602_25 ), .Q0(\CIC1Sin/d8_25 ), 
    .F1(\CIC1Sin/d8_71_N_1602_26 ), .Q1(\CIC1Sin/d8_26 ), 
    .FCO(\CIC1Sin/n11015 ));
  CIC1Sin_SLICE_518 \CIC1Sin/SLICE_518 ( .B1(\CIC1Sin/d_d7_24 ), 
    .A1(\CIC1Sin/d7_24 ), .B0(\CIC1Sin/d_d7_23 ), .A0(\CIC1Sin/d7_23 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_24 ), .DI0(\CIC1Sin/d8_71_N_1602_23 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11013 ), 
    .F0(\CIC1Sin/d8_71_N_1602_23 ), .Q0(\CIC1Sin/d8_23 ), 
    .F1(\CIC1Sin/d8_71_N_1602_24 ), .Q1(\CIC1Sin/d8_24 ), 
    .FCO(\CIC1Sin/n11014 ));
  CIC1Sin_SLICE_519 \CIC1Sin/SLICE_519 ( .B1(\CIC1Sin/d_d7_22 ), 
    .A1(\CIC1Sin/d7_22 ), .B0(\CIC1Sin/d_d7_21 ), .A0(\CIC1Sin/d7_21 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_22 ), .DI0(\CIC1Sin/d8_71_N_1602_21 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11012 ), 
    .F0(\CIC1Sin/d8_71_N_1602_21 ), .Q0(\CIC1Sin/d8_21 ), 
    .F1(\CIC1Sin/d8_71_N_1602_22 ), .Q1(\CIC1Sin/d8_22 ), 
    .FCO(\CIC1Sin/n11013 ));
  CIC1Sin_SLICE_520 \CIC1Sin/SLICE_520 ( .B1(\CIC1Sin/d_d7_20 ), 
    .A1(\CIC1Sin/d7_20 ), .B0(\CIC1Sin/d_d7_19 ), .A0(\CIC1Sin/d7_19 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_20 ), .DI0(\CIC1Sin/d8_71_N_1602_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11011 ), 
    .F0(\CIC1Sin/d8_71_N_1602_19 ), .Q0(\CIC1Sin/d8_19 ), 
    .F1(\CIC1Sin/d8_71_N_1602_20 ), .Q1(\CIC1Sin/d8_20 ), 
    .FCO(\CIC1Sin/n11012 ));
  CIC1Sin_SLICE_521 \CIC1Sin/SLICE_521 ( .B1(\CIC1Sin/d_d7_18 ), 
    .A1(\CIC1Sin/d7_18 ), .B0(\CIC1Sin/d_d7_17 ), .A0(\CIC1Sin/d7_17 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_18 ), .DI0(\CIC1Sin/d8_71_N_1602_17 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11010 ), 
    .F0(\CIC1Sin/d8_71_N_1602_17 ), .Q0(\CIC1Sin/d8_17 ), 
    .F1(\CIC1Sin/d8_71_N_1602_18 ), .Q1(\CIC1Sin/d8_18 ), 
    .FCO(\CIC1Sin/n11011 ));
  CIC1Sin_SLICE_522 \CIC1Sin/SLICE_522 ( .B1(\CIC1Sin/d_d7_16 ), 
    .A1(\CIC1Sin/d7_16 ), .B0(\CIC1Sin/d_d7_15 ), .A0(\CIC1Sin/d7_15 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_16 ), .DI0(\CIC1Sin/d8_71_N_1602_15 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11009 ), 
    .F0(\CIC1Sin/d8_71_N_1602_15 ), .Q0(\CIC1Sin/d8_15 ), 
    .F1(\CIC1Sin/d8_71_N_1602_16 ), .Q1(\CIC1Sin/d8_16 ), 
    .FCO(\CIC1Sin/n11010 ));
  CIC1Sin_SLICE_523 \CIC1Sin/SLICE_523 ( .B1(\CIC1Sin/d_d7_14 ), 
    .A1(\CIC1Sin/d7_14 ), .B0(\CIC1Sin/d_d7_13 ), .A0(\CIC1Sin/d7_13 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_14 ), .DI0(\CIC1Sin/d8_71_N_1602_13 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11008 ), 
    .F0(\CIC1Sin/d8_71_N_1602_13 ), .Q0(\CIC1Sin/d8_13 ), 
    .F1(\CIC1Sin/d8_71_N_1602_14 ), .Q1(\CIC1Sin/d8_14 ), 
    .FCO(\CIC1Sin/n11009 ));
  CIC1Sin_SLICE_524 \CIC1Sin/SLICE_524 ( .B1(\CIC1Sin/d_d7_12 ), 
    .A1(\CIC1Sin/d7_12 ), .B0(\CIC1Sin/d_d7_11 ), .A0(\CIC1Sin/d7_11 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_12 ), .DI0(\CIC1Sin/d8_71_N_1602_11 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11007 ), 
    .F0(\CIC1Sin/d8_71_N_1602_11 ), .Q0(\CIC1Sin/d8_11 ), 
    .F1(\CIC1Sin/d8_71_N_1602_12 ), .Q1(\CIC1Sin/d8_12 ), 
    .FCO(\CIC1Sin/n11008 ));
  CIC1Sin_SLICE_525 \CIC1Sin/SLICE_525 ( .B1(\CIC1Sin/d_d7_10 ), 
    .A1(\CIC1Sin/d7_10 ), .B0(\CIC1Sin/d_d7_9 ), .A0(\CIC1Sin/d7_9 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_10 ), .DI0(\CIC1Sin/d8_71_N_1602_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11006 ), 
    .F0(\CIC1Sin/d8_71_N_1602_9 ), .Q0(\CIC1Sin/d8_9 ), 
    .F1(\CIC1Sin/d8_71_N_1602_10 ), .Q1(\CIC1Sin/d8_10 ), 
    .FCO(\CIC1Sin/n11007 ));
  CIC1Sin_SLICE_526 \CIC1Sin/SLICE_526 ( .B1(\CIC1Sin/d_d7_8 ), 
    .A1(\CIC1Sin/d7_8 ), .B0(\CIC1Sin/d_d7_7 ), .A0(\CIC1Sin/d7_7 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_8 ), .DI0(\CIC1Sin/d8_71_N_1602_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11005 ), 
    .F0(\CIC1Sin/d8_71_N_1602_7 ), .Q0(\CIC1Sin/d8_7 ), 
    .F1(\CIC1Sin/d8_71_N_1602_8 ), .Q1(\CIC1Sin/d8_8 ), .FCO(\CIC1Sin/n11006 ));
  CIC1Sin_SLICE_527 \CIC1Sin/SLICE_527 ( .B1(\CIC1Sin/d_d7_6 ), 
    .A1(\CIC1Sin/d7_6 ), .B0(\CIC1Sin/d_d7_5 ), .A0(\CIC1Sin/d7_5 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_6 ), .DI0(\CIC1Sin/d8_71_N_1602_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11004 ), 
    .F0(\CIC1Sin/d8_71_N_1602_5 ), .Q0(\CIC1Sin/d8_5 ), 
    .F1(\CIC1Sin/d8_71_N_1602_6 ), .Q1(\CIC1Sin/d8_6 ), .FCO(\CIC1Sin/n11005 ));
  CIC1Sin_SLICE_528 \CIC1Sin/SLICE_528 ( .B1(\CIC1Sin/d_d7_4 ), 
    .A1(\CIC1Sin/d7_4 ), .B0(\CIC1Sin/d_d7_3 ), .A0(\CIC1Sin/d7_3 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_4 ), .DI0(\CIC1Sin/d8_71_N_1602_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11003 ), 
    .F0(\CIC1Sin/d8_71_N_1602_3 ), .Q0(\CIC1Sin/d8_3 ), 
    .F1(\CIC1Sin/d8_71_N_1602_4 ), .Q1(\CIC1Sin/d8_4 ), .FCO(\CIC1Sin/n11004 ));
  CIC1Sin_SLICE_529 \CIC1Sin/SLICE_529 ( .B1(\CIC1Sin/d_d7_2 ), 
    .A1(\CIC1Sin/d7_2 ), .B0(\CIC1Sin/d_d7_1 ), .A0(\CIC1Sin/d7_1 ), 
    .DI1(\CIC1Sin/d8_71_N_1602_2 ), .DI0(\CIC1Sin/d8_71_N_1602_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11002 ), 
    .F0(\CIC1Sin/d8_71_N_1602_1 ), .Q0(\CIC1Sin/d8_1 ), 
    .F1(\CIC1Sin/d8_71_N_1602_2 ), .Q1(\CIC1Sin/d8_2 ), .FCO(\CIC1Sin/n11003 ));
  CIC1Sin_SLICE_530 \CIC1Sin/SLICE_530 ( .B1(\CIC1Sin/d_d7_0 ), 
    .A1(\CIC1Sin/d7_0 ), .DI1(\CIC1Sin/d8_71_N_1602_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d8_71_N_1602_0 ), .Q1(\CIC1Sin/d8_0 ), .FCO(\CIC1Sin/n11002 ));
  CIC1Sin_SLICE_531 \CIC1Sin/SLICE_531 ( .B0(\CIC1Sin/d_d6_35 ), 
    .A0(\CIC1Sin/d6_35 ), .DI0(\CIC1Sin/d7_71_N_1530_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_346 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10980 ), 
    .F0(\CIC1Sin/d7_71_N_1530_35 ), .Q0(\CIC1Sin/d7_35 ), .F1(\CIC1Sin/n5558 ));
  CIC1Sin_SLICE_532 \CIC1Sin/SLICE_532 ( .B1(\CIC1Sin/d_d6_34 ), 
    .A1(\CIC1Sin/d6_34 ), .B0(\CIC1Sin/d_d6_33 ), .A0(\CIC1Sin/d6_33 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_34 ), .DI0(\CIC1Sin/d7_71_N_1530_33 ), 
    .CE(\CIC1Sin/osc_clk_enable_346 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10979 ), 
    .F0(\CIC1Sin/d7_71_N_1530_33 ), .Q0(\CIC1Sin/d7_33 ), 
    .F1(\CIC1Sin/d7_71_N_1530_34 ), .Q1(\CIC1Sin/d7_34 ), 
    .FCO(\CIC1Sin/n10980 ));
  CIC1Sin_SLICE_533 \CIC1Sin/SLICE_533 ( .B1(\CIC1Sin/d_d6_32 ), 
    .A1(\CIC1Sin/d6_32 ), .B0(\CIC1Sin/d_d6_31 ), .A0(\CIC1Sin/d6_31 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_32 ), .DI0(\CIC1Sin/d7_71_N_1530_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_346 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10978 ), 
    .F0(\CIC1Sin/d7_71_N_1530_31 ), .Q0(\CIC1Sin/d7_31 ), 
    .F1(\CIC1Sin/d7_71_N_1530_32 ), .Q1(\CIC1Sin/d7_32 ), 
    .FCO(\CIC1Sin/n10979 ));
  CIC1Sin_SLICE_534 \CIC1Sin/SLICE_534 ( .B1(\CIC1Sin/d_d6_30 ), 
    .A1(\CIC1Sin/d6_30 ), .B0(\CIC1Sin/d_d6_29 ), .A0(\CIC1Sin/d6_29 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_30 ), .DI0(\CIC1Sin/d7_71_N_1530_29 ), 
    .CE(\CIC1Sin/osc_clk_enable_346 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10977 ), 
    .F0(\CIC1Sin/d7_71_N_1530_29 ), .Q0(\CIC1Sin/d7_29 ), 
    .F1(\CIC1Sin/d7_71_N_1530_30 ), .Q1(\CIC1Sin/d7_30 ), 
    .FCO(\CIC1Sin/n10978 ));
  CIC1Sin_SLICE_535 \CIC1Sin/SLICE_535 ( .B1(\CIC1Sin/d_d6_28 ), 
    .A1(\CIC1Sin/d6_28 ), .B0(\CIC1Sin/d_d6_27 ), .A0(\CIC1Sin/d6_27 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_27 ), .CE(\CIC1Sin/osc_clk_enable_296 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10976 ), .F0(\CIC1Sin/d7_71_N_1530_27 ), 
    .Q0(\CIC1Sin/d7_27 ), .F1(\CIC1Sin/d7_71_N_1530_28 ), 
    .FCO(\CIC1Sin/n10977 ));
  CIC1Sin_SLICE_536 \CIC1Sin/SLICE_536 ( .B1(\CIC1Sin/d_d6_26 ), 
    .A1(\CIC1Sin/d6_26 ), .B0(\CIC1Sin/d_d6_25 ), .A0(\CIC1Sin/d6_25 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_26 ), .DI0(\CIC1Sin/d7_71_N_1530_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10975 ), 
    .F0(\CIC1Sin/d7_71_N_1530_25 ), .Q0(\CIC1Sin/d7_25 ), 
    .F1(\CIC1Sin/d7_71_N_1530_26 ), .Q1(\CIC1Sin/d7_26 ), 
    .FCO(\CIC1Sin/n10976 ));
  CIC1Sin_SLICE_537 \CIC1Sin/SLICE_537 ( .B1(\CIC1Sin/d_d6_24 ), 
    .A1(\CIC1Sin/d6_24 ), .B0(\CIC1Sin/d_d6_23 ), .A0(\CIC1Sin/d6_23 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_24 ), .DI0(\CIC1Sin/d7_71_N_1530_23 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10974 ), 
    .F0(\CIC1Sin/d7_71_N_1530_23 ), .Q0(\CIC1Sin/d7_23 ), 
    .F1(\CIC1Sin/d7_71_N_1530_24 ), .Q1(\CIC1Sin/d7_24 ), 
    .FCO(\CIC1Sin/n10975 ));
  CIC1Sin_SLICE_538 \CIC1Sin/SLICE_538 ( .B1(\CIC1Sin/d_d6_22 ), 
    .A1(\CIC1Sin/d6_22 ), .B0(\CIC1Sin/d_d6_21 ), .A0(\CIC1Sin/d6_21 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_22 ), .DI0(\CIC1Sin/d7_71_N_1530_21 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10973 ), 
    .F0(\CIC1Sin/d7_71_N_1530_21 ), .Q0(\CIC1Sin/d7_21 ), 
    .F1(\CIC1Sin/d7_71_N_1530_22 ), .Q1(\CIC1Sin/d7_22 ), 
    .FCO(\CIC1Sin/n10974 ));
  CIC1Sin_SLICE_539 \CIC1Sin/SLICE_539 ( .B1(\CIC1Sin/d_d6_20 ), 
    .A1(\CIC1Sin/d6_20 ), .B0(\CIC1Sin/d_d6_19 ), .A0(\CIC1Sin/d6_19 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_20 ), .DI0(\CIC1Sin/d7_71_N_1530_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10972 ), 
    .F0(\CIC1Sin/d7_71_N_1530_19 ), .Q0(\CIC1Sin/d7_19 ), 
    .F1(\CIC1Sin/d7_71_N_1530_20 ), .Q1(\CIC1Sin/d7_20 ), 
    .FCO(\CIC1Sin/n10973 ));
  CIC1Sin_SLICE_540 \CIC1Sin/SLICE_540 ( .B1(\CIC1Sin/d_d6_18 ), 
    .A1(\CIC1Sin/d6_18 ), .B0(\CIC1Sin/d_d6_17 ), .A0(\CIC1Sin/d6_17 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_18 ), .DI0(\CIC1Sin/d7_71_N_1530_17 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10971 ), 
    .F0(\CIC1Sin/d7_71_N_1530_17 ), .Q0(\CIC1Sin/d7_17 ), 
    .F1(\CIC1Sin/d7_71_N_1530_18 ), .Q1(\CIC1Sin/d7_18 ), 
    .FCO(\CIC1Sin/n10972 ));
  CIC1Sin_SLICE_541 \CIC1Sin/SLICE_541 ( .B1(\CIC1Sin/d_d6_16 ), 
    .A1(\CIC1Sin/d6_16 ), .B0(\CIC1Sin/d_d6_15 ), .A0(\CIC1Sin/d6_15 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_16 ), .DI0(\CIC1Sin/d7_71_N_1530_15 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10970 ), 
    .F0(\CIC1Sin/d7_71_N_1530_15 ), .Q0(\CIC1Sin/d7_15 ), 
    .F1(\CIC1Sin/d7_71_N_1530_16 ), .Q1(\CIC1Sin/d7_16 ), 
    .FCO(\CIC1Sin/n10971 ));
  CIC1Sin_SLICE_542 \CIC1Sin/SLICE_542 ( .B1(\CIC1Sin/d_d6_14 ), 
    .A1(\CIC1Sin/d6_14 ), .B0(\CIC1Sin/d_d6_13 ), .A0(\CIC1Sin/d6_13 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_14 ), .DI0(\CIC1Sin/d7_71_N_1530_13 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10969 ), 
    .F0(\CIC1Sin/d7_71_N_1530_13 ), .Q0(\CIC1Sin/d7_13 ), 
    .F1(\CIC1Sin/d7_71_N_1530_14 ), .Q1(\CIC1Sin/d7_14 ), 
    .FCO(\CIC1Sin/n10970 ));
  CIC1Sin_SLICE_543 \CIC1Sin/SLICE_543 ( .B1(\CIC1Sin/d_d6_12 ), 
    .A1(\CIC1Sin/d6_12 ), .B0(\CIC1Sin/d_d6_11 ), .A0(\CIC1Sin/d6_11 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_12 ), .DI0(\CIC1Sin/d7_71_N_1530_11 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10968 ), 
    .F0(\CIC1Sin/d7_71_N_1530_11 ), .Q0(\CIC1Sin/d7_11 ), 
    .F1(\CIC1Sin/d7_71_N_1530_12 ), .Q1(\CIC1Sin/d7_12 ), 
    .FCO(\CIC1Sin/n10969 ));
  CIC1Sin_SLICE_544 \CIC1Sin/SLICE_544 ( .B1(\CIC1Sin/d_d6_10 ), 
    .A1(\CIC1Sin/d6_10 ), .B0(\CIC1Sin/d_d6_9 ), .A0(\CIC1Sin/d6_9 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_10 ), .DI0(\CIC1Sin/d7_71_N_1530_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10967 ), 
    .F0(\CIC1Sin/d7_71_N_1530_9 ), .Q0(\CIC1Sin/d7_9 ), 
    .F1(\CIC1Sin/d7_71_N_1530_10 ), .Q1(\CIC1Sin/d7_10 ), 
    .FCO(\CIC1Sin/n10968 ));
  CIC1Sin_SLICE_545 \CIC1Sin/SLICE_545 ( .B1(\CIC1Sin/d_d6_8 ), 
    .A1(\CIC1Sin/d6_8 ), .B0(\CIC1Sin/d_d6_7 ), .A0(\CIC1Sin/d6_7 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_8 ), .DI0(\CIC1Sin/d7_71_N_1530_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10966 ), 
    .F0(\CIC1Sin/d7_71_N_1530_7 ), .Q0(\CIC1Sin/d7_7 ), 
    .F1(\CIC1Sin/d7_71_N_1530_8 ), .Q1(\CIC1Sin/d7_8 ), .FCO(\CIC1Sin/n10967 ));
  CIC1Sin_SLICE_546 \CIC1Sin/SLICE_546 ( .B1(\CIC1Sin/d_d6_6 ), 
    .A1(\CIC1Sin/d6_6 ), .B0(\CIC1Sin/d_d6_5 ), .A0(\CIC1Sin/d6_5 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_6 ), .DI0(\CIC1Sin/d7_71_N_1530_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10965 ), 
    .F0(\CIC1Sin/d7_71_N_1530_5 ), .Q0(\CIC1Sin/d7_5 ), 
    .F1(\CIC1Sin/d7_71_N_1530_6 ), .Q1(\CIC1Sin/d7_6 ), .FCO(\CIC1Sin/n10966 ));
  CIC1Sin_SLICE_547 \CIC1Sin/SLICE_547 ( .B1(\CIC1Sin/d_d6_4 ), 
    .A1(\CIC1Sin/d6_4 ), .B0(\CIC1Sin/d_d6_3 ), .A0(\CIC1Sin/d6_3 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_4 ), .DI0(\CIC1Sin/d7_71_N_1530_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10964 ), 
    .F0(\CIC1Sin/d7_71_N_1530_3 ), .Q0(\CIC1Sin/d7_3 ), 
    .F1(\CIC1Sin/d7_71_N_1530_4 ), .Q1(\CIC1Sin/d7_4 ), .FCO(\CIC1Sin/n10965 ));
  CIC1Sin_SLICE_548 \CIC1Sin/SLICE_548 ( .B1(\CIC1Sin/d_d6_2 ), 
    .A1(\CIC1Sin/d6_2 ), .B0(\CIC1Sin/d_d6_1 ), .A0(\CIC1Sin/d6_1 ), 
    .DI1(\CIC1Sin/d7_71_N_1530_2 ), .DI0(\CIC1Sin/d7_71_N_1530_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10963 ), 
    .F0(\CIC1Sin/d7_71_N_1530_1 ), .Q0(\CIC1Sin/d7_1 ), 
    .F1(\CIC1Sin/d7_71_N_1530_2 ), .Q1(\CIC1Sin/d7_2 ), .FCO(\CIC1Sin/n10964 ));
  CIC1Sin_SLICE_549 \CIC1Sin/SLICE_549 ( .B1(\CIC1Sin/d_d6_0 ), 
    .A1(\CIC1Sin/d6_0 ), .DI1(\CIC1Sin/d7_71_N_1530_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d7_71_N_1530_0 ), .Q1(\CIC1Sin/d7_0 ), .FCO(\CIC1Sin/n10963 ));
  CIC1Sin_SLICE_550 \CIC1Sin/SLICE_550 ( .A0(\CIC1Sin/count_15 ), 
    .DI0(\CIC1Sin/n376 ), .LSR(\CIC1Sin/n8367 ), .CLK(osc_clk), 
    .FCI(\CIC1Sin/n10886 ), .F0(\CIC1Sin/n376 ), .Q0(\CIC1Sin/count_15 ));
  CIC1Sin_SLICE_551 \CIC1Sin/SLICE_551 ( .A1(\CIC1Sin/count_14 ), 
    .A0(\CIC1Sin/count_13 ), .DI1(\CIC1Sin/n377 ), .DI0(\CIC1Sin/n378 ), 
    .LSR(\CIC1Sin/n8367 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10885 ), 
    .F0(\CIC1Sin/n378 ), .Q0(\CIC1Sin/count_13 ), .F1(\CIC1Sin/n377 ), 
    .Q1(\CIC1Sin/count_14 ), .FCO(\CIC1Sin/n10886 ));
  CIC1Sin_SLICE_552 \CIC1Sin/SLICE_552 ( .A1(\CIC1Sin/count_12 ), 
    .A0(\CIC1Sin/count_11 ), .DI1(\CIC1Sin/n379 ), .LSR(\CIC1Sin/n8367 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10884 ), .F0(\CIC1Sin/n380 ), 
    .F1(\CIC1Sin/n379 ), .Q1(\CIC1Sin/count_12 ), .FCO(\CIC1Sin/n10885 ));
  CIC1Sin_SLICE_553 \CIC1Sin/SLICE_553 ( .A1(\CIC1Sin/count_10 ), 
    .A0(\CIC1Sin/count_9 ), .DI1(\CIC1Sin/n381 ), .DI0(\CIC1Sin/n382 ), 
    .LSR(\CIC1Sin/n8367 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10883 ), 
    .F0(\CIC1Sin/n382 ), .Q0(\CIC1Sin/count_9 ), .F1(\CIC1Sin/n381 ), 
    .Q1(\CIC1Sin/count_10 ), .FCO(\CIC1Sin/n10884 ));
  CIC1Sin_SLICE_554 \CIC1Sin/SLICE_554 ( .A1(\CIC1Sin/count_8 ), 
    .A0(\CIC1Sin/count_7 ), .DI1(\CIC1Sin/n383 ), .DI0(\CIC1Sin/n384 ), 
    .LSR(\CIC1Sin/n8367 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10882 ), 
    .F0(\CIC1Sin/n384 ), .Q0(\CIC1Sin/count_7 ), .F1(\CIC1Sin/n383 ), 
    .Q1(\CIC1Sin/count_8 ), .FCO(\CIC1Sin/n10883 ));
  CIC1Sin_SLICE_555 \CIC1Sin/SLICE_555 ( .A1(\CIC1Sin/count_6 ), 
    .A0(\CIC1Sin/count_5 ), .DI1(\CIC1Sin/n385 ), .DI0(\CIC1Sin/n386 ), 
    .LSR(\CIC1Sin/n8367 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10881 ), 
    .F0(\CIC1Sin/n386 ), .Q0(\CIC1Sin/count_5 ), .F1(\CIC1Sin/n385 ), 
    .Q1(\CIC1Sin/count_6 ), .FCO(\CIC1Sin/n10882 ));
  CIC1Sin_SLICE_556 \CIC1Sin/SLICE_556 ( .A1(\CIC1Sin/count_4 ), 
    .A0(\CIC1Sin/count_3 ), .DI1(\CIC1Sin/n387 ), .DI0(\CIC1Sin/n388 ), 
    .LSR(\CIC1Sin/n8367 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10880 ), 
    .F0(\CIC1Sin/n388 ), .Q0(\CIC1Sin/count_3 ), .F1(\CIC1Sin/n387 ), 
    .Q1(\CIC1Sin/count_4 ), .FCO(\CIC1Sin/n10881 ));
  CIC1Sin_SLICE_557 \CIC1Sin/SLICE_557 ( .A1(\CIC1Sin/count_2 ), 
    .A0(\CIC1Sin/count_1 ), .DI1(\CIC1Sin/n389 ), .DI0(\CIC1Sin/n390 ), 
    .LSR(\CIC1Sin/n8367 ), .CLK(osc_clk), .FCI(\CIC1Sin/n10879 ), 
    .F0(\CIC1Sin/n390 ), .Q0(\CIC1Sin/count_1 ), .F1(\CIC1Sin/n389 ), 
    .Q1(\CIC1Sin/count_2 ), .FCO(\CIC1Sin/n10880 ));
  CIC1Sin_SLICE_558 \CIC1Sin/SLICE_558 ( .A1(\CIC1Sin/count_0 ), 
    .F1(\CIC1Sin/n391 ), .FCO(\CIC1Sin/n10879 ));
  CIC1Sin_SLICE_559 \CIC1Sin/SLICE_559 ( .FCI(\CIC1Sin/n10859 ), 
    .F0(\CIC1Sin/n4646 ));
  CIC1Sin_SLICE_560 \CIC1Sin/SLICE_560 ( .B1(\CIC1Sin/d5_35 ), 
    .A1(\CIC1Sin/d4_35 ), .B0(\CIC1Sin/d5_34 ), .A0(\CIC1Sin/d4_34 ), 
    .DI1(\CIC1Sin/d5_71_N_705_35 ), .DI0(\CIC1Sin/d5_71_N_705_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10858 ), .F0(\CIC1Sin/d5_71_N_705_34 ), 
    .Q0(\CIC1Sin/d5_34 ), .F1(\CIC1Sin/d5_71_N_705_35 ), .Q1(\CIC1Sin/d5_35 ), 
    .FCO(\CIC1Sin/n10859 ));
  CIC1Sin_SLICE_561 \CIC1Sin/SLICE_561 ( .B1(\CIC1Sin/d5_33 ), 
    .A1(\CIC1Sin/d4_33 ), .B0(\CIC1Sin/d5_32 ), .A0(\CIC1Sin/d4_32 ), 
    .DI1(\CIC1Sin/d5_71_N_705_33 ), .DI0(\CIC1Sin/d5_71_N_705_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10857 ), .F0(\CIC1Sin/d5_71_N_705_32 ), 
    .Q0(\CIC1Sin/d5_32 ), .F1(\CIC1Sin/d5_71_N_705_33 ), .Q1(\CIC1Sin/d5_33 ), 
    .FCO(\CIC1Sin/n10858 ));
  CIC1Sin_SLICE_562 \CIC1Sin/SLICE_562 ( .B1(\CIC1Sin/d5_31 ), 
    .A1(\CIC1Sin/d4_31 ), .B0(\CIC1Sin/d5_30 ), .A0(\CIC1Sin/d4_30 ), 
    .DI1(\CIC1Sin/d5_71_N_705_31 ), .DI0(\CIC1Sin/d5_71_N_705_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10856 ), .F0(\CIC1Sin/d5_71_N_705_30 ), 
    .Q0(\CIC1Sin/d5_30 ), .F1(\CIC1Sin/d5_71_N_705_31 ), .Q1(\CIC1Sin/d5_31 ), 
    .FCO(\CIC1Sin/n10857 ));
  CIC1Sin_SLICE_563 \CIC1Sin/SLICE_563 ( .B1(\CIC1Sin/d5_29 ), 
    .A1(\CIC1Sin/d4_29 ), .B0(\CIC1Sin/d5_28 ), .A0(\CIC1Sin/d4_28 ), 
    .DI1(\CIC1Sin/d5_71_N_705_29 ), .DI0(\CIC1Sin/d5_71_N_705_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10855 ), .F0(\CIC1Sin/d5_71_N_705_28 ), 
    .Q0(\CIC1Sin/d5_28 ), .F1(\CIC1Sin/d5_71_N_705_29 ), .Q1(\CIC1Sin/d5_29 ), 
    .FCO(\CIC1Sin/n10856 ));
  CIC1Sin_SLICE_564 \CIC1Sin/SLICE_564 ( .B1(\CIC1Sin/d5_27 ), 
    .A1(\CIC1Sin/d4_27 ), .B0(\CIC1Sin/d5_26 ), .A0(\CIC1Sin/d4_26 ), 
    .DI1(\CIC1Sin/d5_71_N_705_27 ), .DI0(\CIC1Sin/d5_71_N_705_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10854 ), .F0(\CIC1Sin/d5_71_N_705_26 ), 
    .Q0(\CIC1Sin/d5_26 ), .F1(\CIC1Sin/d5_71_N_705_27 ), .Q1(\CIC1Sin/d5_27 ), 
    .FCO(\CIC1Sin/n10855 ));
  CIC1Sin_SLICE_565 \CIC1Sin/SLICE_565 ( .B1(\CIC1Sin/d5_25 ), 
    .A1(\CIC1Sin/d4_25 ), .B0(\CIC1Sin/d5_24 ), .A0(\CIC1Sin/d4_24 ), 
    .DI1(\CIC1Sin/d5_71_N_705_25 ), .DI0(\CIC1Sin/d5_71_N_705_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10853 ), .F0(\CIC1Sin/d5_71_N_705_24 ), 
    .Q0(\CIC1Sin/d5_24 ), .F1(\CIC1Sin/d5_71_N_705_25 ), .Q1(\CIC1Sin/d5_25 ), 
    .FCO(\CIC1Sin/n10854 ));
  CIC1Sin_SLICE_566 \CIC1Sin/SLICE_566 ( .B1(\CIC1Sin/d5_23 ), 
    .A1(\CIC1Sin/d4_23 ), .B0(\CIC1Sin/d5_22 ), .A0(\CIC1Sin/d4_22 ), 
    .DI1(\CIC1Sin/d5_71_N_705_23 ), .DI0(\CIC1Sin/d5_71_N_705_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10852 ), .F0(\CIC1Sin/d5_71_N_705_22 ), 
    .Q0(\CIC1Sin/d5_22 ), .F1(\CIC1Sin/d5_71_N_705_23 ), .Q1(\CIC1Sin/d5_23 ), 
    .FCO(\CIC1Sin/n10853 ));
  CIC1Sin_SLICE_567 \CIC1Sin/SLICE_567 ( .B1(\CIC1Sin/d5_21 ), 
    .A1(\CIC1Sin/d4_21 ), .B0(\CIC1Sin/d5_20 ), .A0(\CIC1Sin/d4_20 ), 
    .DI1(\CIC1Sin/d5_71_N_705_21 ), .DI0(\CIC1Sin/d5_71_N_705_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10851 ), .F0(\CIC1Sin/d5_71_N_705_20 ), 
    .Q0(\CIC1Sin/d5_20 ), .F1(\CIC1Sin/d5_71_N_705_21 ), .Q1(\CIC1Sin/d5_21 ), 
    .FCO(\CIC1Sin/n10852 ));
  CIC1Sin_SLICE_568 \CIC1Sin/SLICE_568 ( .B1(\CIC1Sin/d5_19 ), 
    .A1(\CIC1Sin/d4_19 ), .B0(\CIC1Sin/d5_18 ), .A0(\CIC1Sin/d4_18 ), 
    .DI1(\CIC1Sin/d5_71_N_705_19 ), .DI0(\CIC1Sin/d5_71_N_705_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10850 ), .F0(\CIC1Sin/d5_71_N_705_18 ), 
    .Q0(\CIC1Sin/d5_18 ), .F1(\CIC1Sin/d5_71_N_705_19 ), .Q1(\CIC1Sin/d5_19 ), 
    .FCO(\CIC1Sin/n10851 ));
  CIC1Sin_SLICE_569 \CIC1Sin/SLICE_569 ( .B1(\CIC1Sin/d5_17 ), 
    .A1(\CIC1Sin/d4_17 ), .B0(\CIC1Sin/d5_16 ), .A0(\CIC1Sin/d4_16 ), 
    .DI1(\CIC1Sin/d5_71_N_705_17 ), .DI0(\CIC1Sin/d5_71_N_705_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10849 ), .F0(\CIC1Sin/d5_71_N_705_16 ), 
    .Q0(\CIC1Sin/d5_16 ), .F1(\CIC1Sin/d5_71_N_705_17 ), .Q1(\CIC1Sin/d5_17 ), 
    .FCO(\CIC1Sin/n10850 ));
  CIC1Sin_SLICE_570 \CIC1Sin/SLICE_570 ( .B1(\CIC1Sin/d5_15 ), 
    .A1(\CIC1Sin/d4_15 ), .B0(\CIC1Sin/d5_14 ), .A0(\CIC1Sin/d4_14 ), 
    .DI1(\CIC1Sin/d5_71_N_705_15 ), .DI0(\CIC1Sin/d5_71_N_705_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10848 ), .F0(\CIC1Sin/d5_71_N_705_14 ), 
    .Q0(\CIC1Sin/d5_14 ), .F1(\CIC1Sin/d5_71_N_705_15 ), .Q1(\CIC1Sin/d5_15 ), 
    .FCO(\CIC1Sin/n10849 ));
  CIC1Sin_SLICE_571 \CIC1Sin/SLICE_571 ( .B1(\CIC1Sin/d5_13 ), 
    .A1(\CIC1Sin/d4_13 ), .B0(\CIC1Sin/d5_12 ), .A0(\CIC1Sin/d4_12 ), 
    .DI1(\CIC1Sin/d5_71_N_705_13 ), .DI0(\CIC1Sin/d5_71_N_705_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10847 ), .F0(\CIC1Sin/d5_71_N_705_12 ), 
    .Q0(\CIC1Sin/d5_12 ), .F1(\CIC1Sin/d5_71_N_705_13 ), .Q1(\CIC1Sin/d5_13 ), 
    .FCO(\CIC1Sin/n10848 ));
  CIC1Sin_SLICE_572 \CIC1Sin/SLICE_572 ( .B1(\CIC1Sin/d5_11 ), 
    .A1(\CIC1Sin/d4_11 ), .B0(\CIC1Sin/d5_10 ), .A0(\CIC1Sin/d4_10 ), 
    .DI1(\CIC1Sin/d5_71_N_705_11 ), .DI0(\CIC1Sin/d5_71_N_705_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10846 ), .F0(\CIC1Sin/d5_71_N_705_10 ), 
    .Q0(\CIC1Sin/d5_10 ), .F1(\CIC1Sin/d5_71_N_705_11 ), .Q1(\CIC1Sin/d5_11 ), 
    .FCO(\CIC1Sin/n10847 ));
  CIC1Sin_SLICE_573 \CIC1Sin/SLICE_573 ( .B1(\CIC1Sin/d5_9 ), 
    .A1(\CIC1Sin/d4_9 ), .B0(\CIC1Sin/d5_8 ), .A0(\CIC1Sin/d4_8 ), 
    .DI1(\CIC1Sin/d5_71_N_705_9 ), .DI0(\CIC1Sin/d5_71_N_705_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10845 ), .F0(\CIC1Sin/d5_71_N_705_8 ), 
    .Q0(\CIC1Sin/d5_8 ), .F1(\CIC1Sin/d5_71_N_705_9 ), .Q1(\CIC1Sin/d5_9 ), 
    .FCO(\CIC1Sin/n10846 ));
  CIC1Sin_SLICE_574 \CIC1Sin/SLICE_574 ( .B1(\CIC1Sin/d5_7 ), 
    .A1(\CIC1Sin/d4_7 ), .B0(\CIC1Sin/d5_6 ), .A0(\CIC1Sin/d4_6 ), 
    .DI1(\CIC1Sin/d5_71_N_705_7 ), .DI0(\CIC1Sin/d5_71_N_705_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10844 ), .F0(\CIC1Sin/d5_71_N_705_6 ), 
    .Q0(\CIC1Sin/d5_6 ), .F1(\CIC1Sin/d5_71_N_705_7 ), .Q1(\CIC1Sin/d5_7 ), 
    .FCO(\CIC1Sin/n10845 ));
  CIC1Sin_SLICE_575 \CIC1Sin/SLICE_575 ( .B1(\CIC1Sin/d5_5 ), 
    .A1(\CIC1Sin/d4_5 ), .B0(\CIC1Sin/d5_4 ), .A0(\CIC1Sin/d4_4 ), 
    .DI1(\CIC1Sin/d5_71_N_705_5 ), .DI0(\CIC1Sin/d5_71_N_705_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10843 ), .F0(\CIC1Sin/d5_71_N_705_4 ), 
    .Q0(\CIC1Sin/d5_4 ), .F1(\CIC1Sin/d5_71_N_705_5 ), .Q1(\CIC1Sin/d5_5 ), 
    .FCO(\CIC1Sin/n10844 ));
  CIC1Sin_SLICE_576 \CIC1Sin/SLICE_576 ( .B1(\CIC1Sin/d5_3 ), 
    .A1(\CIC1Sin/d4_3 ), .B0(\CIC1Sin/d5_2 ), .A0(\CIC1Sin/d4_2 ), 
    .DI1(\CIC1Sin/d5_71_N_705_3 ), .DI0(\CIC1Sin/d5_71_N_705_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10842 ), .F0(\CIC1Sin/d5_71_N_705_2 ), 
    .Q0(\CIC1Sin/d5_2 ), .F1(\CIC1Sin/d5_71_N_705_3 ), .Q1(\CIC1Sin/d5_3 ), 
    .FCO(\CIC1Sin/n10843 ));
  CIC1Sin_SLICE_577 \CIC1Sin/SLICE_577 ( .B1(\CIC1Sin/d5_1 ), 
    .A1(\CIC1Sin/d4_1 ), .B0(\CIC1Sin/d5_0 ), .A0(\CIC1Sin/d4_0 ), 
    .DI1(\CIC1Sin/d5_71_N_705_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d5_71_N_705_1 ), 
    .Q1(\CIC1Sin/d5_1 ), .FCO(\CIC1Sin/n10842 ));
  CIC1Sin_SLICE_578 \CIC1Sin/SLICE_578 ( .FCI(\CIC1Sin/n10840 ), 
    .F0(\CIC1Sin/n4494 ));
  CIC1Sin_SLICE_579 \CIC1Sin/SLICE_579 ( .B1(\CIC1Sin/d4_35 ), 
    .A1(\CIC1Sin/d3_35 ), .B0(\CIC1Sin/d4_34 ), .A0(\CIC1Sin/d3_34 ), 
    .DI1(\CIC1Sin/d4_71_N_633_35 ), .DI0(\CIC1Sin/d4_71_N_633_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10839 ), .F0(\CIC1Sin/d4_71_N_633_34 ), 
    .Q0(\CIC1Sin/d4_34 ), .F1(\CIC1Sin/d4_71_N_633_35 ), .Q1(\CIC1Sin/d4_35 ), 
    .FCO(\CIC1Sin/n10840 ));
  CIC1Sin_SLICE_580 \CIC1Sin/SLICE_580 ( .B1(\CIC1Sin/d4_33 ), 
    .A1(\CIC1Sin/d3_33 ), .B0(\CIC1Sin/d4_32 ), .A0(\CIC1Sin/d3_32 ), 
    .DI1(\CIC1Sin/d4_71_N_633_33 ), .DI0(\CIC1Sin/d4_71_N_633_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10838 ), .F0(\CIC1Sin/d4_71_N_633_32 ), 
    .Q0(\CIC1Sin/d4_32 ), .F1(\CIC1Sin/d4_71_N_633_33 ), .Q1(\CIC1Sin/d4_33 ), 
    .FCO(\CIC1Sin/n10839 ));
  CIC1Sin_SLICE_581 \CIC1Sin/SLICE_581 ( .B1(\CIC1Sin/d4_31 ), 
    .A1(\CIC1Sin/d3_31 ), .B0(\CIC1Sin/d4_30 ), .A0(\CIC1Sin/d3_30 ), 
    .DI1(\CIC1Sin/d4_71_N_633_31 ), .DI0(\CIC1Sin/d4_71_N_633_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10837 ), .F0(\CIC1Sin/d4_71_N_633_30 ), 
    .Q0(\CIC1Sin/d4_30 ), .F1(\CIC1Sin/d4_71_N_633_31 ), .Q1(\CIC1Sin/d4_31 ), 
    .FCO(\CIC1Sin/n10838 ));
  CIC1Sin_SLICE_582 \CIC1Sin/SLICE_582 ( .B1(\CIC1Sin/d4_29 ), 
    .A1(\CIC1Sin/d3_29 ), .B0(\CIC1Sin/d4_28 ), .A0(\CIC1Sin/d3_28 ), 
    .DI1(\CIC1Sin/d4_71_N_633_29 ), .DI0(\CIC1Sin/d4_71_N_633_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10836 ), .F0(\CIC1Sin/d4_71_N_633_28 ), 
    .Q0(\CIC1Sin/d4_28 ), .F1(\CIC1Sin/d4_71_N_633_29 ), .Q1(\CIC1Sin/d4_29 ), 
    .FCO(\CIC1Sin/n10837 ));
  CIC1Sin_SLICE_583 \CIC1Sin/SLICE_583 ( .B1(\CIC1Sin/d4_27 ), 
    .A1(\CIC1Sin/d3_27 ), .B0(\CIC1Sin/d4_26 ), .A0(\CIC1Sin/d3_26 ), 
    .DI1(\CIC1Sin/d4_71_N_633_27 ), .DI0(\CIC1Sin/d4_71_N_633_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10835 ), .F0(\CIC1Sin/d4_71_N_633_26 ), 
    .Q0(\CIC1Sin/d4_26 ), .F1(\CIC1Sin/d4_71_N_633_27 ), .Q1(\CIC1Sin/d4_27 ), 
    .FCO(\CIC1Sin/n10836 ));
  CIC1Sin_SLICE_584 \CIC1Sin/SLICE_584 ( .B1(\CIC1Sin/d4_25 ), 
    .A1(\CIC1Sin/d3_25 ), .B0(\CIC1Sin/d4_24 ), .A0(\CIC1Sin/d3_24 ), 
    .DI1(\CIC1Sin/d4_71_N_633_25 ), .DI0(\CIC1Sin/d4_71_N_633_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10834 ), .F0(\CIC1Sin/d4_71_N_633_24 ), 
    .Q0(\CIC1Sin/d4_24 ), .F1(\CIC1Sin/d4_71_N_633_25 ), .Q1(\CIC1Sin/d4_25 ), 
    .FCO(\CIC1Sin/n10835 ));
  CIC1Sin_SLICE_585 \CIC1Sin/SLICE_585 ( .B1(\CIC1Sin/d4_23 ), 
    .A1(\CIC1Sin/d3_23 ), .B0(\CIC1Sin/d4_22 ), .A0(\CIC1Sin/d3_22 ), 
    .DI1(\CIC1Sin/d4_71_N_633_23 ), .DI0(\CIC1Sin/d4_71_N_633_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10833 ), .F0(\CIC1Sin/d4_71_N_633_22 ), 
    .Q0(\CIC1Sin/d4_22 ), .F1(\CIC1Sin/d4_71_N_633_23 ), .Q1(\CIC1Sin/d4_23 ), 
    .FCO(\CIC1Sin/n10834 ));
  CIC1Sin_SLICE_586 \CIC1Sin/SLICE_586 ( .B1(\CIC1Sin/d4_21 ), 
    .A1(\CIC1Sin/d3_21 ), .B0(\CIC1Sin/d4_20 ), .A0(\CIC1Sin/d3_20 ), 
    .DI1(\CIC1Sin/d4_71_N_633_21 ), .DI0(\CIC1Sin/d4_71_N_633_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10832 ), .F0(\CIC1Sin/d4_71_N_633_20 ), 
    .Q0(\CIC1Sin/d4_20 ), .F1(\CIC1Sin/d4_71_N_633_21 ), .Q1(\CIC1Sin/d4_21 ), 
    .FCO(\CIC1Sin/n10833 ));
  CIC1Sin_SLICE_587 \CIC1Sin/SLICE_587 ( .B1(\CIC1Sin/d4_19 ), 
    .A1(\CIC1Sin/d3_19 ), .B0(\CIC1Sin/d4_18 ), .A0(\CIC1Sin/d3_18 ), 
    .DI1(\CIC1Sin/d4_71_N_633_19 ), .DI0(\CIC1Sin/d4_71_N_633_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10831 ), .F0(\CIC1Sin/d4_71_N_633_18 ), 
    .Q0(\CIC1Sin/d4_18 ), .F1(\CIC1Sin/d4_71_N_633_19 ), .Q1(\CIC1Sin/d4_19 ), 
    .FCO(\CIC1Sin/n10832 ));
  CIC1Sin_SLICE_588 \CIC1Sin/SLICE_588 ( .B1(\CIC1Sin/d4_17 ), 
    .A1(\CIC1Sin/d3_17 ), .B0(\CIC1Sin/d4_16 ), .A0(\CIC1Sin/d3_16 ), 
    .DI1(\CIC1Sin/d4_71_N_633_17 ), .DI0(\CIC1Sin/d4_71_N_633_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10830 ), .F0(\CIC1Sin/d4_71_N_633_16 ), 
    .Q0(\CIC1Sin/d4_16 ), .F1(\CIC1Sin/d4_71_N_633_17 ), .Q1(\CIC1Sin/d4_17 ), 
    .FCO(\CIC1Sin/n10831 ));
  CIC1Sin_SLICE_589 \CIC1Sin/SLICE_589 ( .B1(\CIC1Sin/d4_15 ), 
    .A1(\CIC1Sin/d3_15 ), .B0(\CIC1Sin/d4_14 ), .A0(\CIC1Sin/d3_14 ), 
    .DI1(\CIC1Sin/d4_71_N_633_15 ), .DI0(\CIC1Sin/d4_71_N_633_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10829 ), .F0(\CIC1Sin/d4_71_N_633_14 ), 
    .Q0(\CIC1Sin/d4_14 ), .F1(\CIC1Sin/d4_71_N_633_15 ), .Q1(\CIC1Sin/d4_15 ), 
    .FCO(\CIC1Sin/n10830 ));
  CIC1Sin_SLICE_590 \CIC1Sin/SLICE_590 ( .B1(\CIC1Sin/d4_13 ), 
    .A1(\CIC1Sin/d3_13 ), .B0(\CIC1Sin/d4_12 ), .A0(\CIC1Sin/d3_12 ), 
    .DI1(\CIC1Sin/d4_71_N_633_13 ), .DI0(\CIC1Sin/d4_71_N_633_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10828 ), .F0(\CIC1Sin/d4_71_N_633_12 ), 
    .Q0(\CIC1Sin/d4_12 ), .F1(\CIC1Sin/d4_71_N_633_13 ), .Q1(\CIC1Sin/d4_13 ), 
    .FCO(\CIC1Sin/n10829 ));
  CIC1Sin_SLICE_591 \CIC1Sin/SLICE_591 ( .B1(\CIC1Sin/d4_11 ), 
    .A1(\CIC1Sin/d3_11 ), .B0(\CIC1Sin/d4_10 ), .A0(\CIC1Sin/d3_10 ), 
    .DI1(\CIC1Sin/d4_71_N_633_11 ), .DI0(\CIC1Sin/d4_71_N_633_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10827 ), .F0(\CIC1Sin/d4_71_N_633_10 ), 
    .Q0(\CIC1Sin/d4_10 ), .F1(\CIC1Sin/d4_71_N_633_11 ), .Q1(\CIC1Sin/d4_11 ), 
    .FCO(\CIC1Sin/n10828 ));
  CIC1Sin_SLICE_592 \CIC1Sin/SLICE_592 ( .B1(\CIC1Sin/d4_9 ), 
    .A1(\CIC1Sin/d3_9 ), .B0(\CIC1Sin/d4_8 ), .A0(\CIC1Sin/d3_8 ), 
    .DI1(\CIC1Sin/d4_71_N_633_9 ), .DI0(\CIC1Sin/d4_71_N_633_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10826 ), .F0(\CIC1Sin/d4_71_N_633_8 ), 
    .Q0(\CIC1Sin/d4_8 ), .F1(\CIC1Sin/d4_71_N_633_9 ), .Q1(\CIC1Sin/d4_9 ), 
    .FCO(\CIC1Sin/n10827 ));
  CIC1Sin_SLICE_593 \CIC1Sin/SLICE_593 ( .B1(\CIC1Sin/d4_7 ), 
    .A1(\CIC1Sin/d3_7 ), .B0(\CIC1Sin/d4_6 ), .A0(\CIC1Sin/d3_6 ), 
    .DI1(\CIC1Sin/d4_71_N_633_7 ), .DI0(\CIC1Sin/d4_71_N_633_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10825 ), .F0(\CIC1Sin/d4_71_N_633_6 ), 
    .Q0(\CIC1Sin/d4_6 ), .F1(\CIC1Sin/d4_71_N_633_7 ), .Q1(\CIC1Sin/d4_7 ), 
    .FCO(\CIC1Sin/n10826 ));
  CIC1Sin_SLICE_594 \CIC1Sin/SLICE_594 ( .B1(\CIC1Sin/d4_5 ), 
    .A1(\CIC1Sin/d3_5 ), .B0(\CIC1Sin/d4_4 ), .A0(\CIC1Sin/d3_4 ), 
    .DI1(\CIC1Sin/d4_71_N_633_5 ), .DI0(\CIC1Sin/d4_71_N_633_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10824 ), .F0(\CIC1Sin/d4_71_N_633_4 ), 
    .Q0(\CIC1Sin/d4_4 ), .F1(\CIC1Sin/d4_71_N_633_5 ), .Q1(\CIC1Sin/d4_5 ), 
    .FCO(\CIC1Sin/n10825 ));
  CIC1Sin_SLICE_595 \CIC1Sin/SLICE_595 ( .B1(\CIC1Sin/d4_3 ), 
    .A1(\CIC1Sin/d3_3 ), .B0(\CIC1Sin/d4_2 ), .A0(\CIC1Sin/d3_2 ), 
    .DI1(\CIC1Sin/d4_71_N_633_3 ), .DI0(\CIC1Sin/d4_71_N_633_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10823 ), .F0(\CIC1Sin/d4_71_N_633_2 ), 
    .Q0(\CIC1Sin/d4_2 ), .F1(\CIC1Sin/d4_71_N_633_3 ), .Q1(\CIC1Sin/d4_3 ), 
    .FCO(\CIC1Sin/n10824 ));
  CIC1Sin_SLICE_596 \CIC1Sin/SLICE_596 ( .B1(\CIC1Sin/d4_1 ), 
    .A1(\CIC1Sin/d3_1 ), .B0(\CIC1Sin/d4_0 ), .A0(\CIC1Sin/d3_0 ), 
    .DI1(\CIC1Sin/d4_71_N_633_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d4_71_N_633_1 ), 
    .Q1(\CIC1Sin/d4_1 ), .FCO(\CIC1Sin/n10823 ));
  CIC1Sin_SLICE_597 \CIC1Sin/SLICE_597 ( .FCI(\CIC1Sin/n10821 ), 
    .F0(\CIC1Sin/n4342 ));
  CIC1Sin_SLICE_598 \CIC1Sin/SLICE_598 ( .B1(\CIC1Sin/d3_35 ), 
    .A1(\CIC1Sin/d2_35 ), .B0(\CIC1Sin/d3_34 ), .A0(\CIC1Sin/d2_34 ), 
    .DI1(\CIC1Sin/d3_71_N_561_35 ), .DI0(\CIC1Sin/d3_71_N_561_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10820 ), .F0(\CIC1Sin/d3_71_N_561_34 ), 
    .Q0(\CIC1Sin/d3_34 ), .F1(\CIC1Sin/d3_71_N_561_35 ), .Q1(\CIC1Sin/d3_35 ), 
    .FCO(\CIC1Sin/n10821 ));
  CIC1Sin_SLICE_599 \CIC1Sin/SLICE_599 ( .B1(\CIC1Sin/d3_33 ), 
    .A1(\CIC1Sin/d2_33 ), .B0(\CIC1Sin/d3_32 ), .A0(\CIC1Sin/d2_32 ), 
    .DI1(\CIC1Sin/d3_71_N_561_33 ), .DI0(\CIC1Sin/d3_71_N_561_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10819 ), .F0(\CIC1Sin/d3_71_N_561_32 ), 
    .Q0(\CIC1Sin/d3_32 ), .F1(\CIC1Sin/d3_71_N_561_33 ), .Q1(\CIC1Sin/d3_33 ), 
    .FCO(\CIC1Sin/n10820 ));
  CIC1Sin_SLICE_600 \CIC1Sin/SLICE_600 ( .B1(\CIC1Sin/d3_31 ), 
    .A1(\CIC1Sin/d2_31 ), .B0(\CIC1Sin/d3_30 ), .A0(\CIC1Sin/d2_30 ), 
    .DI1(\CIC1Sin/d3_71_N_561_31 ), .DI0(\CIC1Sin/d3_71_N_561_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10818 ), .F0(\CIC1Sin/d3_71_N_561_30 ), 
    .Q0(\CIC1Sin/d3_30 ), .F1(\CIC1Sin/d3_71_N_561_31 ), .Q1(\CIC1Sin/d3_31 ), 
    .FCO(\CIC1Sin/n10819 ));
  CIC1Sin_SLICE_601 \CIC1Sin/SLICE_601 ( .B1(\CIC1Sin/d3_29 ), 
    .A1(\CIC1Sin/d2_29 ), .B0(\CIC1Sin/d3_28 ), .A0(\CIC1Sin/d2_28 ), 
    .DI1(\CIC1Sin/d3_71_N_561_29 ), .DI0(\CIC1Sin/d3_71_N_561_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10817 ), .F0(\CIC1Sin/d3_71_N_561_28 ), 
    .Q0(\CIC1Sin/d3_28 ), .F1(\CIC1Sin/d3_71_N_561_29 ), .Q1(\CIC1Sin/d3_29 ), 
    .FCO(\CIC1Sin/n10818 ));
  CIC1Sin_SLICE_602 \CIC1Sin/SLICE_602 ( .B1(\CIC1Sin/d3_27 ), 
    .A1(\CIC1Sin/d2_27 ), .B0(\CIC1Sin/d3_26 ), .A0(\CIC1Sin/d2_26 ), 
    .DI1(\CIC1Sin/d3_71_N_561_27 ), .DI0(\CIC1Sin/d3_71_N_561_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10816 ), .F0(\CIC1Sin/d3_71_N_561_26 ), 
    .Q0(\CIC1Sin/d3_26 ), .F1(\CIC1Sin/d3_71_N_561_27 ), .Q1(\CIC1Sin/d3_27 ), 
    .FCO(\CIC1Sin/n10817 ));
  CIC1Sin_SLICE_603 \CIC1Sin/SLICE_603 ( .B1(\CIC1Sin/d3_25 ), 
    .A1(\CIC1Sin/d2_25 ), .B0(\CIC1Sin/d3_24 ), .A0(\CIC1Sin/d2_24 ), 
    .DI1(\CIC1Sin/d3_71_N_561_25 ), .DI0(\CIC1Sin/d3_71_N_561_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10815 ), .F0(\CIC1Sin/d3_71_N_561_24 ), 
    .Q0(\CIC1Sin/d3_24 ), .F1(\CIC1Sin/d3_71_N_561_25 ), .Q1(\CIC1Sin/d3_25 ), 
    .FCO(\CIC1Sin/n10816 ));
  CIC1Sin_SLICE_604 \CIC1Sin/SLICE_604 ( .B1(\CIC1Sin/d3_23 ), 
    .A1(\CIC1Sin/d2_23 ), .B0(\CIC1Sin/d3_22 ), .A0(\CIC1Sin/d2_22 ), 
    .DI1(\CIC1Sin/d3_71_N_561_23 ), .DI0(\CIC1Sin/d3_71_N_561_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10814 ), .F0(\CIC1Sin/d3_71_N_561_22 ), 
    .Q0(\CIC1Sin/d3_22 ), .F1(\CIC1Sin/d3_71_N_561_23 ), .Q1(\CIC1Sin/d3_23 ), 
    .FCO(\CIC1Sin/n10815 ));
  CIC1Sin_SLICE_605 \CIC1Sin/SLICE_605 ( .B1(\CIC1Sin/d3_21 ), 
    .A1(\CIC1Sin/d2_21 ), .B0(\CIC1Sin/d3_20 ), .A0(\CIC1Sin/d2_20 ), 
    .DI1(\CIC1Sin/d3_71_N_561_21 ), .DI0(\CIC1Sin/d3_71_N_561_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10813 ), .F0(\CIC1Sin/d3_71_N_561_20 ), 
    .Q0(\CIC1Sin/d3_20 ), .F1(\CIC1Sin/d3_71_N_561_21 ), .Q1(\CIC1Sin/d3_21 ), 
    .FCO(\CIC1Sin/n10814 ));
  CIC1Sin_SLICE_606 \CIC1Sin/SLICE_606 ( .B1(\CIC1Sin/d3_19 ), 
    .A1(\CIC1Sin/d2_19 ), .B0(\CIC1Sin/d3_18 ), .A0(\CIC1Sin/d2_18 ), 
    .DI1(\CIC1Sin/d3_71_N_561_19 ), .DI0(\CIC1Sin/d3_71_N_561_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10812 ), .F0(\CIC1Sin/d3_71_N_561_18 ), 
    .Q0(\CIC1Sin/d3_18 ), .F1(\CIC1Sin/d3_71_N_561_19 ), .Q1(\CIC1Sin/d3_19 ), 
    .FCO(\CIC1Sin/n10813 ));
  CIC1Sin_SLICE_607 \CIC1Sin/SLICE_607 ( .B1(\CIC1Sin/d3_17 ), 
    .A1(\CIC1Sin/d2_17 ), .B0(\CIC1Sin/d3_16 ), .A0(\CIC1Sin/d2_16 ), 
    .DI1(\CIC1Sin/d3_71_N_561_17 ), .DI0(\CIC1Sin/d3_71_N_561_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10811 ), .F0(\CIC1Sin/d3_71_N_561_16 ), 
    .Q0(\CIC1Sin/d3_16 ), .F1(\CIC1Sin/d3_71_N_561_17 ), .Q1(\CIC1Sin/d3_17 ), 
    .FCO(\CIC1Sin/n10812 ));
  CIC1Sin_SLICE_608 \CIC1Sin/SLICE_608 ( .B1(\CIC1Sin/d3_15 ), 
    .A1(\CIC1Sin/d2_15 ), .B0(\CIC1Sin/d3_14 ), .A0(\CIC1Sin/d2_14 ), 
    .DI1(\CIC1Sin/d3_71_N_561_15 ), .DI0(\CIC1Sin/d3_71_N_561_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10810 ), .F0(\CIC1Sin/d3_71_N_561_14 ), 
    .Q0(\CIC1Sin/d3_14 ), .F1(\CIC1Sin/d3_71_N_561_15 ), .Q1(\CIC1Sin/d3_15 ), 
    .FCO(\CIC1Sin/n10811 ));
  CIC1Sin_SLICE_609 \CIC1Sin/SLICE_609 ( .B1(\CIC1Sin/d3_13 ), 
    .A1(\CIC1Sin/d2_13 ), .B0(\CIC1Sin/d3_12 ), .A0(\CIC1Sin/d2_12 ), 
    .DI1(\CIC1Sin/d3_71_N_561_13 ), .DI0(\CIC1Sin/d3_71_N_561_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10809 ), .F0(\CIC1Sin/d3_71_N_561_12 ), 
    .Q0(\CIC1Sin/d3_12 ), .F1(\CIC1Sin/d3_71_N_561_13 ), .Q1(\CIC1Sin/d3_13 ), 
    .FCO(\CIC1Sin/n10810 ));
  CIC1Sin_SLICE_610 \CIC1Sin/SLICE_610 ( .B1(\CIC1Sin/d3_11 ), 
    .A1(\CIC1Sin/d2_11 ), .B0(\CIC1Sin/d3_10 ), .A0(\CIC1Sin/d2_10 ), 
    .DI1(\CIC1Sin/d3_71_N_561_11 ), .DI0(\CIC1Sin/d3_71_N_561_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10808 ), .F0(\CIC1Sin/d3_71_N_561_10 ), 
    .Q0(\CIC1Sin/d3_10 ), .F1(\CIC1Sin/d3_71_N_561_11 ), .Q1(\CIC1Sin/d3_11 ), 
    .FCO(\CIC1Sin/n10809 ));
  CIC1Sin_SLICE_611 \CIC1Sin/SLICE_611 ( .B1(\CIC1Sin/d3_9 ), 
    .A1(\CIC1Sin/d2_9 ), .B0(\CIC1Sin/d3_8 ), .A0(\CIC1Sin/d2_8 ), 
    .DI1(\CIC1Sin/d3_71_N_561_9 ), .DI0(\CIC1Sin/d3_71_N_561_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10807 ), .F0(\CIC1Sin/d3_71_N_561_8 ), 
    .Q0(\CIC1Sin/d3_8 ), .F1(\CIC1Sin/d3_71_N_561_9 ), .Q1(\CIC1Sin/d3_9 ), 
    .FCO(\CIC1Sin/n10808 ));
  CIC1Sin_SLICE_612 \CIC1Sin/SLICE_612 ( .B1(\CIC1Sin/d3_7 ), 
    .A1(\CIC1Sin/d2_7 ), .B0(\CIC1Sin/d3_6 ), .A0(\CIC1Sin/d2_6 ), 
    .DI1(\CIC1Sin/d3_71_N_561_7 ), .DI0(\CIC1Sin/d3_71_N_561_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10806 ), .F0(\CIC1Sin/d3_71_N_561_6 ), 
    .Q0(\CIC1Sin/d3_6 ), .F1(\CIC1Sin/d3_71_N_561_7 ), .Q1(\CIC1Sin/d3_7 ), 
    .FCO(\CIC1Sin/n10807 ));
  CIC1Sin_SLICE_613 \CIC1Sin/SLICE_613 ( .B1(\CIC1Sin/d3_5 ), 
    .A1(\CIC1Sin/d2_5 ), .B0(\CIC1Sin/d3_4 ), .A0(\CIC1Sin/d2_4 ), 
    .DI1(\CIC1Sin/d3_71_N_561_5 ), .DI0(\CIC1Sin/d3_71_N_561_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10805 ), .F0(\CIC1Sin/d3_71_N_561_4 ), 
    .Q0(\CIC1Sin/d3_4 ), .F1(\CIC1Sin/d3_71_N_561_5 ), .Q1(\CIC1Sin/d3_5 ), 
    .FCO(\CIC1Sin/n10806 ));
  CIC1Sin_SLICE_614 \CIC1Sin/SLICE_614 ( .B1(\CIC1Sin/d3_3 ), 
    .A1(\CIC1Sin/d2_3 ), .B0(\CIC1Sin/d3_2 ), .A0(\CIC1Sin/d2_2 ), 
    .DI1(\CIC1Sin/d3_71_N_561_3 ), .DI0(\CIC1Sin/d3_71_N_561_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10804 ), .F0(\CIC1Sin/d3_71_N_561_2 ), 
    .Q0(\CIC1Sin/d3_2 ), .F1(\CIC1Sin/d3_71_N_561_3 ), .Q1(\CIC1Sin/d3_3 ), 
    .FCO(\CIC1Sin/n10805 ));
  CIC1Sin_SLICE_615 \CIC1Sin/SLICE_615 ( .B1(\CIC1Sin/d3_1 ), 
    .A1(\CIC1Sin/d2_1 ), .B0(\CIC1Sin/d3_0 ), .A0(\CIC1Sin/d2_0 ), 
    .DI1(\CIC1Sin/d3_71_N_561_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d3_71_N_561_1 ), 
    .Q1(\CIC1Sin/d3_1 ), .FCO(\CIC1Sin/n10804 ));
  CIC1Sin_SLICE_616 \CIC1Sin/SLICE_616 ( .FCI(\CIC1Sin/n10802 ), 
    .F0(\CIC1Sin/n4190 ));
  CIC1Sin_SLICE_617 \CIC1Sin/SLICE_617 ( .B1(\CIC1Sin/d2_35 ), 
    .A1(\CIC1Sin/d1_35 ), .B0(\CIC1Sin/d2_34 ), .A0(\CIC1Sin/d1_34 ), 
    .DI1(\CIC1Sin/d2_71_N_489_35 ), .DI0(\CIC1Sin/d2_71_N_489_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10801 ), .F0(\CIC1Sin/d2_71_N_489_34 ), 
    .Q0(\CIC1Sin/d2_34 ), .F1(\CIC1Sin/d2_71_N_489_35 ), .Q1(\CIC1Sin/d2_35 ), 
    .FCO(\CIC1Sin/n10802 ));
  CIC1Sin_SLICE_618 \CIC1Sin/SLICE_618 ( .B1(\CIC1Sin/d2_33 ), 
    .A1(\CIC1Sin/d1_33 ), .B0(\CIC1Sin/d2_32 ), .A0(\CIC1Sin/d1_32 ), 
    .DI1(\CIC1Sin/d2_71_N_489_33 ), .DI0(\CIC1Sin/d2_71_N_489_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10800 ), .F0(\CIC1Sin/d2_71_N_489_32 ), 
    .Q0(\CIC1Sin/d2_32 ), .F1(\CIC1Sin/d2_71_N_489_33 ), .Q1(\CIC1Sin/d2_33 ), 
    .FCO(\CIC1Sin/n10801 ));
  CIC1Sin_SLICE_619 \CIC1Sin/SLICE_619 ( .B1(\CIC1Sin/d2_31 ), 
    .A1(\CIC1Sin/d1_31 ), .B0(\CIC1Sin/d2_30 ), .A0(\CIC1Sin/d1_30 ), 
    .DI1(\CIC1Sin/d2_71_N_489_31 ), .DI0(\CIC1Sin/d2_71_N_489_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10799 ), .F0(\CIC1Sin/d2_71_N_489_30 ), 
    .Q0(\CIC1Sin/d2_30 ), .F1(\CIC1Sin/d2_71_N_489_31 ), .Q1(\CIC1Sin/d2_31 ), 
    .FCO(\CIC1Sin/n10800 ));
  CIC1Sin_SLICE_620 \CIC1Sin/SLICE_620 ( .B1(\CIC1Sin/d2_29 ), 
    .A1(\CIC1Sin/d1_29 ), .B0(\CIC1Sin/d2_28 ), .A0(\CIC1Sin/d1_28 ), 
    .DI1(\CIC1Sin/d2_71_N_489_29 ), .DI0(\CIC1Sin/d2_71_N_489_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10798 ), .F0(\CIC1Sin/d2_71_N_489_28 ), 
    .Q0(\CIC1Sin/d2_28 ), .F1(\CIC1Sin/d2_71_N_489_29 ), .Q1(\CIC1Sin/d2_29 ), 
    .FCO(\CIC1Sin/n10799 ));
  CIC1Sin_SLICE_621 \CIC1Sin/SLICE_621 ( .B1(\CIC1Sin/d2_27 ), 
    .A1(\CIC1Sin/d1_27 ), .B0(\CIC1Sin/d2_26 ), .A0(\CIC1Sin/d1_26 ), 
    .DI1(\CIC1Sin/d2_71_N_489_27 ), .DI0(\CIC1Sin/d2_71_N_489_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10797 ), .F0(\CIC1Sin/d2_71_N_489_26 ), 
    .Q0(\CIC1Sin/d2_26 ), .F1(\CIC1Sin/d2_71_N_489_27 ), .Q1(\CIC1Sin/d2_27 ), 
    .FCO(\CIC1Sin/n10798 ));
  CIC1Sin_SLICE_622 \CIC1Sin/SLICE_622 ( .B1(\CIC1Sin/d2_25 ), 
    .A1(\CIC1Sin/d1_25 ), .B0(\CIC1Sin/d2_24 ), .A0(\CIC1Sin/d1_24 ), 
    .DI1(\CIC1Sin/d2_71_N_489_25 ), .DI0(\CIC1Sin/d2_71_N_489_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10796 ), .F0(\CIC1Sin/d2_71_N_489_24 ), 
    .Q0(\CIC1Sin/d2_24 ), .F1(\CIC1Sin/d2_71_N_489_25 ), .Q1(\CIC1Sin/d2_25 ), 
    .FCO(\CIC1Sin/n10797 ));
  CIC1Sin_SLICE_623 \CIC1Sin/SLICE_623 ( .B1(\CIC1Sin/d2_23 ), 
    .A1(\CIC1Sin/d1_23 ), .B0(\CIC1Sin/d2_22 ), .A0(\CIC1Sin/d1_22 ), 
    .DI1(\CIC1Sin/d2_71_N_489_23 ), .DI0(\CIC1Sin/d2_71_N_489_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10795 ), .F0(\CIC1Sin/d2_71_N_489_22 ), 
    .Q0(\CIC1Sin/d2_22 ), .F1(\CIC1Sin/d2_71_N_489_23 ), .Q1(\CIC1Sin/d2_23 ), 
    .FCO(\CIC1Sin/n10796 ));
  CIC1Sin_SLICE_624 \CIC1Sin/SLICE_624 ( .B1(\CIC1Sin/d2_21 ), 
    .A1(\CIC1Sin/d1_21 ), .B0(\CIC1Sin/d2_20 ), .A0(\CIC1Sin/d1_20 ), 
    .DI1(\CIC1Sin/d2_71_N_489_21 ), .DI0(\CIC1Sin/d2_71_N_489_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10794 ), .F0(\CIC1Sin/d2_71_N_489_20 ), 
    .Q0(\CIC1Sin/d2_20 ), .F1(\CIC1Sin/d2_71_N_489_21 ), .Q1(\CIC1Sin/d2_21 ), 
    .FCO(\CIC1Sin/n10795 ));
  CIC1Sin_SLICE_625 \CIC1Sin/SLICE_625 ( .B1(\CIC1Sin/d2_19 ), 
    .A1(\CIC1Sin/d1_19 ), .B0(\CIC1Sin/d2_18 ), .A0(\CIC1Sin/d1_18 ), 
    .DI1(\CIC1Sin/d2_71_N_489_19 ), .DI0(\CIC1Sin/d2_71_N_489_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10793 ), .F0(\CIC1Sin/d2_71_N_489_18 ), 
    .Q0(\CIC1Sin/d2_18 ), .F1(\CIC1Sin/d2_71_N_489_19 ), .Q1(\CIC1Sin/d2_19 ), 
    .FCO(\CIC1Sin/n10794 ));
  CIC1Sin_SLICE_626 \CIC1Sin/SLICE_626 ( .B1(\CIC1Sin/d2_17 ), 
    .A1(\CIC1Sin/d1_17 ), .B0(\CIC1Sin/d2_16 ), .A0(\CIC1Sin/d1_16 ), 
    .DI1(\CIC1Sin/d2_71_N_489_17 ), .DI0(\CIC1Sin/d2_71_N_489_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10792 ), .F0(\CIC1Sin/d2_71_N_489_16 ), 
    .Q0(\CIC1Sin/d2_16 ), .F1(\CIC1Sin/d2_71_N_489_17 ), .Q1(\CIC1Sin/d2_17 ), 
    .FCO(\CIC1Sin/n10793 ));
  CIC1Sin_SLICE_627 \CIC1Sin/SLICE_627 ( .B1(\CIC1Sin/d2_15 ), 
    .A1(\CIC1Sin/d1_15 ), .B0(\CIC1Sin/d2_14 ), .A0(\CIC1Sin/d1_14 ), 
    .DI1(\CIC1Sin/d2_71_N_489_15 ), .DI0(\CIC1Sin/d2_71_N_489_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10791 ), .F0(\CIC1Sin/d2_71_N_489_14 ), 
    .Q0(\CIC1Sin/d2_14 ), .F1(\CIC1Sin/d2_71_N_489_15 ), .Q1(\CIC1Sin/d2_15 ), 
    .FCO(\CIC1Sin/n10792 ));
  CIC1Sin_SLICE_628 \CIC1Sin/SLICE_628 ( .B1(\CIC1Sin/d2_13 ), 
    .A1(\CIC1Sin/d1_13 ), .B0(\CIC1Sin/d2_12 ), .A0(\CIC1Sin/d1_12 ), 
    .DI1(\CIC1Sin/d2_71_N_489_13 ), .DI0(\CIC1Sin/d2_71_N_489_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10790 ), .F0(\CIC1Sin/d2_71_N_489_12 ), 
    .Q0(\CIC1Sin/d2_12 ), .F1(\CIC1Sin/d2_71_N_489_13 ), .Q1(\CIC1Sin/d2_13 ), 
    .FCO(\CIC1Sin/n10791 ));
  CIC1Sin_SLICE_629 \CIC1Sin/SLICE_629 ( .B1(\CIC1Sin/d2_11 ), 
    .A1(\CIC1Sin/d1_11 ), .B0(\CIC1Sin/d2_10 ), .A0(\CIC1Sin/d1_10 ), 
    .DI1(\CIC1Sin/d2_71_N_489_11 ), .DI0(\CIC1Sin/d2_71_N_489_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10789 ), .F0(\CIC1Sin/d2_71_N_489_10 ), 
    .Q0(\CIC1Sin/d2_10 ), .F1(\CIC1Sin/d2_71_N_489_11 ), .Q1(\CIC1Sin/d2_11 ), 
    .FCO(\CIC1Sin/n10790 ));
  CIC1Sin_SLICE_630 \CIC1Sin/SLICE_630 ( .B1(\CIC1Sin/d2_9 ), 
    .A1(\CIC1Sin/d1_9 ), .B0(\CIC1Sin/d2_8 ), .A0(\CIC1Sin/d1_8 ), 
    .DI1(\CIC1Sin/d2_71_N_489_9 ), .DI0(\CIC1Sin/d2_71_N_489_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10788 ), .F0(\CIC1Sin/d2_71_N_489_8 ), 
    .Q0(\CIC1Sin/d2_8 ), .F1(\CIC1Sin/d2_71_N_489_9 ), .Q1(\CIC1Sin/d2_9 ), 
    .FCO(\CIC1Sin/n10789 ));
  CIC1Sin_SLICE_631 \CIC1Sin/SLICE_631 ( .B1(\CIC1Sin/d2_7 ), 
    .A1(\CIC1Sin/d1_7 ), .B0(\CIC1Sin/d2_6 ), .A0(\CIC1Sin/d1_6 ), 
    .DI1(\CIC1Sin/d2_71_N_489_7 ), .DI0(\CIC1Sin/d2_71_N_489_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10787 ), .F0(\CIC1Sin/d2_71_N_489_6 ), 
    .Q0(\CIC1Sin/d2_6 ), .F1(\CIC1Sin/d2_71_N_489_7 ), .Q1(\CIC1Sin/d2_7 ), 
    .FCO(\CIC1Sin/n10788 ));
  CIC1Sin_SLICE_632 \CIC1Sin/SLICE_632 ( .B1(\CIC1Sin/d2_5 ), 
    .A1(\CIC1Sin/d1_5 ), .B0(\CIC1Sin/d2_4 ), .A0(\CIC1Sin/d1_4 ), 
    .DI1(\CIC1Sin/d2_71_N_489_5 ), .DI0(\CIC1Sin/d2_71_N_489_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10786 ), .F0(\CIC1Sin/d2_71_N_489_4 ), 
    .Q0(\CIC1Sin/d2_4 ), .F1(\CIC1Sin/d2_71_N_489_5 ), .Q1(\CIC1Sin/d2_5 ), 
    .FCO(\CIC1Sin/n10787 ));
  CIC1Sin_SLICE_633 \CIC1Sin/SLICE_633 ( .B1(\CIC1Sin/d2_3 ), 
    .A1(\CIC1Sin/d1_3 ), .B0(\CIC1Sin/d2_2 ), .A0(\CIC1Sin/d1_2 ), 
    .DI1(\CIC1Sin/d2_71_N_489_3 ), .DI0(\CIC1Sin/d2_71_N_489_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10785 ), .F0(\CIC1Sin/d2_71_N_489_2 ), 
    .Q0(\CIC1Sin/d2_2 ), .F1(\CIC1Sin/d2_71_N_489_3 ), .Q1(\CIC1Sin/d2_3 ), 
    .FCO(\CIC1Sin/n10786 ));
  CIC1Sin_SLICE_634 \CIC1Sin/SLICE_634 ( .B1(\CIC1Sin/d2_1 ), 
    .A1(\CIC1Sin/d1_1 ), .B0(\CIC1Sin/d2_0 ), .A0(\CIC1Sin/d1_0 ), 
    .DI1(\CIC1Sin/d2_71_N_489_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d2_71_N_489_1 ), 
    .Q1(\CIC1Sin/d2_1 ), .FCO(\CIC1Sin/n10785 ));
  CIC1Sin_SLICE_635 \CIC1Sin/SLICE_635 ( .D1(\CIC1Sin/d3_51 ), 
    .C1(\CIC1Sin/n4516 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_51 ), 
    .D0(\CIC1Sin/d3_50 ), .C0(\CIC1Sin/n4517 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_50 ), .DI1(\CIC1Sin/d4_71_N_633_51 ), 
    .DI0(\CIC1Sin/d4_71_N_633_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12003 ), 
    .F0(\CIC1Sin/d4_71_N_633_50 ), .Q0(\CIC1Sin/d4_50 ), 
    .F1(\CIC1Sin/d4_71_N_633_51 ), .Q1(\CIC1Sin/d4_51 ), 
    .FCO(\CIC1Sin/n12004 ));
  CIC1Sin_SLICE_636 \CIC1Sin/SLICE_636 ( .D1(\CIC1Sin/d3_49 ), 
    .C1(\CIC1Sin/n4518 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_49 ), 
    .D0(\CIC1Sin/d3_48 ), .C0(\CIC1Sin/n4519 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_48 ), .DI1(\CIC1Sin/d4_71_N_633_49 ), 
    .DI0(\CIC1Sin/d4_71_N_633_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12002 ), 
    .F0(\CIC1Sin/d4_71_N_633_48 ), .Q0(\CIC1Sin/d4_48 ), 
    .F1(\CIC1Sin/d4_71_N_633_49 ), .Q1(\CIC1Sin/d4_49 ), 
    .FCO(\CIC1Sin/n12003 ));
  CIC1Sin_SLICE_637 \CIC1Sin/SLICE_637 ( .D1(\CIC1Sin/d3_47 ), 
    .C1(\CIC1Sin/n4520 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_47 ), 
    .D0(\CIC1Sin/d3_46 ), .C0(\CIC1Sin/n4521 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_46 ), .DI1(\CIC1Sin/d4_71_N_633_47 ), 
    .DI0(\CIC1Sin/d4_71_N_633_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12001 ), 
    .F0(\CIC1Sin/d4_71_N_633_46 ), .Q0(\CIC1Sin/d4_46 ), 
    .F1(\CIC1Sin/d4_71_N_633_47 ), .Q1(\CIC1Sin/d4_47 ), 
    .FCO(\CIC1Sin/n12002 ));
  CIC1Sin_SLICE_638 \CIC1Sin/SLICE_638 ( .D1(\CIC1Sin/d3_45 ), 
    .C1(\CIC1Sin/n4522 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_45 ), 
    .D0(\CIC1Sin/d3_44 ), .C0(\CIC1Sin/n4523 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_44 ), .DI1(\CIC1Sin/d4_71_N_633_45 ), 
    .DI0(\CIC1Sin/d4_71_N_633_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12000 ), 
    .F0(\CIC1Sin/d4_71_N_633_44 ), .Q0(\CIC1Sin/d4_44 ), 
    .F1(\CIC1Sin/d4_71_N_633_45 ), .Q1(\CIC1Sin/d4_45 ), 
    .FCO(\CIC1Sin/n12001 ));
  CIC1Sin_SLICE_639 \CIC1Sin/SLICE_639 ( .D1(\CIC1Sin/d3_43 ), 
    .C1(\CIC1Sin/n4524 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_43 ), 
    .D0(\CIC1Sin/d3_42 ), .C0(\CIC1Sin/n4525 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_42 ), .DI1(\CIC1Sin/d4_71_N_633_43 ), 
    .DI0(\CIC1Sin/d4_71_N_633_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11999 ), 
    .F0(\CIC1Sin/d4_71_N_633_42 ), .Q0(\CIC1Sin/d4_42 ), 
    .F1(\CIC1Sin/d4_71_N_633_43 ), .Q1(\CIC1Sin/d4_43 ), 
    .FCO(\CIC1Sin/n12000 ));
  CIC1Sin_SLICE_640 \CIC1Sin/SLICE_640 ( .D1(\CIC1Sin/d3_41 ), 
    .C1(\CIC1Sin/n4526 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_41 ), 
    .D0(\CIC1Sin/d3_40 ), .C0(\CIC1Sin/n4527 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_40 ), .DI1(\CIC1Sin/d4_71_N_633_41 ), 
    .DI0(\CIC1Sin/d4_71_N_633_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11998 ), 
    .F0(\CIC1Sin/d4_71_N_633_40 ), .Q0(\CIC1Sin/d4_40 ), 
    .F1(\CIC1Sin/d4_71_N_633_41 ), .Q1(\CIC1Sin/d4_41 ), 
    .FCO(\CIC1Sin/n11999 ));
  CIC1Sin_SLICE_641 \CIC1Sin/SLICE_641 ( .D1(\CIC1Sin/d3_39 ), 
    .C1(\CIC1Sin/n4528 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_39 ), 
    .D0(\CIC1Sin/d3_38 ), .C0(\CIC1Sin/n4529 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_38 ), .DI1(\CIC1Sin/d4_71_N_633_39 ), 
    .DI0(\CIC1Sin/d4_71_N_633_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11997 ), 
    .F0(\CIC1Sin/d4_71_N_633_38 ), .Q0(\CIC1Sin/d4_38 ), 
    .F1(\CIC1Sin/d4_71_N_633_39 ), .Q1(\CIC1Sin/d4_39 ), 
    .FCO(\CIC1Sin/n11998 ));
  CIC1Sin_SLICE_642 \CIC1Sin/SLICE_642 ( .D1(\CIC1Sin/d3_37 ), 
    .C1(\CIC1Sin/n4530 ), .B1(\CIC1Sin/n4494 ), .A1(\CIC1Sin/d4_37 ), 
    .D0(\CIC1Sin/d3_36 ), .C0(\CIC1Sin/n4531 ), .B0(\CIC1Sin/n4494 ), 
    .A0(\CIC1Sin/d4_36 ), .DI1(\CIC1Sin/d4_71_N_633_37 ), 
    .DI0(\CIC1Sin/d4_71_N_633_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11996 ), 
    .F0(\CIC1Sin/d4_71_N_633_36 ), .Q0(\CIC1Sin/d4_36 ), 
    .F1(\CIC1Sin/d4_71_N_633_37 ), .Q1(\CIC1Sin/d4_37 ), 
    .FCO(\CIC1Sin/n11997 ));
  CIC1Sin_SLICE_643 \CIC1Sin/SLICE_643 ( .A1(\CIC1Sin/n4494 ), 
    .FCO(\CIC1Sin/n11996 ));
  CIC1Sin_SLICE_644 \CIC1Sin/SLICE_644 ( .B1(\CIC1Sin/d5_71 ), 
    .A1(\CIC1Sin/d4_71 ), .B0(\CIC1Sin/d5_70 ), .A0(\CIC1Sin/d4_70 ), 
    .FCI(\CIC1Sin/n11991 ), .F0(\CIC1Sin/n4649 ), .F1(\CIC1Sin/n4648 ));
  CIC1Sin_SLICE_645 \CIC1Sin/SLICE_645 ( .B1(\CIC1Sin/d5_69 ), 
    .A1(\CIC1Sin/d4_69 ), .B0(\CIC1Sin/d5_68 ), .A0(\CIC1Sin/d4_68 ), 
    .FCI(\CIC1Sin/n11990 ), .F0(\CIC1Sin/n4651 ), .F1(\CIC1Sin/n4650 ), 
    .FCO(\CIC1Sin/n11991 ));
  CIC1Sin_SLICE_646 \CIC1Sin/SLICE_646 ( .B1(\CIC1Sin/d5_67 ), 
    .A1(\CIC1Sin/d4_67 ), .B0(\CIC1Sin/d5_66 ), .A0(\CIC1Sin/d4_66 ), 
    .FCI(\CIC1Sin/n11989 ), .F0(\CIC1Sin/n4653 ), .F1(\CIC1Sin/n4652 ), 
    .FCO(\CIC1Sin/n11990 ));
  CIC1Sin_SLICE_647 \CIC1Sin/SLICE_647 ( .B1(\CIC1Sin/d5_65 ), 
    .A1(\CIC1Sin/d4_65 ), .B0(\CIC1Sin/d5_64 ), .A0(\CIC1Sin/d4_64 ), 
    .FCI(\CIC1Sin/n11988 ), .F0(\CIC1Sin/n4655 ), .F1(\CIC1Sin/n4654 ), 
    .FCO(\CIC1Sin/n11989 ));
  CIC1Sin_SLICE_648 \CIC1Sin/SLICE_648 ( .B1(\CIC1Sin/d5_63 ), 
    .A1(\CIC1Sin/d4_63 ), .B0(\CIC1Sin/d5_62 ), .A0(\CIC1Sin/d4_62 ), 
    .FCI(\CIC1Sin/n11987 ), .F0(\CIC1Sin/n4657 ), .F1(\CIC1Sin/n4656 ), 
    .FCO(\CIC1Sin/n11988 ));
  CIC1Sin_SLICE_649 \CIC1Sin/SLICE_649 ( .B1(\CIC1Sin/d5_61 ), 
    .A1(\CIC1Sin/d4_61 ), .B0(\CIC1Sin/d5_60 ), .A0(\CIC1Sin/d4_60 ), 
    .FCI(\CIC1Sin/n11986 ), .F0(\CIC1Sin/n4659 ), .F1(\CIC1Sin/n4658 ), 
    .FCO(\CIC1Sin/n11987 ));
  CIC1Sin_SLICE_650 \CIC1Sin/SLICE_650 ( .B1(\CIC1Sin/d5_59 ), 
    .A1(\CIC1Sin/d4_59 ), .B0(\CIC1Sin/d5_58 ), .A0(\CIC1Sin/d4_58 ), 
    .FCI(\CIC1Sin/n11985 ), .F0(\CIC1Sin/n4661 ), .F1(\CIC1Sin/n4660 ), 
    .FCO(\CIC1Sin/n11986 ));
  CIC1Sin_SLICE_651 \CIC1Sin/SLICE_651 ( .B1(\CIC1Sin/d5_57 ), 
    .A1(\CIC1Sin/d4_57 ), .B0(\CIC1Sin/d5_56 ), .A0(\CIC1Sin/d4_56 ), 
    .FCI(\CIC1Sin/n11984 ), .F0(\CIC1Sin/n4663 ), .F1(\CIC1Sin/n4662 ), 
    .FCO(\CIC1Sin/n11985 ));
  CIC1Sin_SLICE_652 \CIC1Sin/SLICE_652 ( .B1(\CIC1Sin/d5_55 ), 
    .A1(\CIC1Sin/d4_55 ), .B0(\CIC1Sin/d5_54 ), .A0(\CIC1Sin/d4_54 ), 
    .FCI(\CIC1Sin/n11983 ), .F0(\CIC1Sin/n4665 ), .F1(\CIC1Sin/n4664 ), 
    .FCO(\CIC1Sin/n11984 ));
  CIC1Sin_SLICE_653 \CIC1Sin/SLICE_653 ( .B1(\CIC1Sin/d5_53 ), 
    .A1(\CIC1Sin/d4_53 ), .B0(\CIC1Sin/d5_52 ), .A0(\CIC1Sin/d4_52 ), 
    .FCI(\CIC1Sin/n11982 ), .F0(\CIC1Sin/n4667 ), .F1(\CIC1Sin/n4666 ), 
    .FCO(\CIC1Sin/n11983 ));
  CIC1Sin_SLICE_654 \CIC1Sin/SLICE_654 ( .B1(\CIC1Sin/d5_51 ), 
    .A1(\CIC1Sin/d4_51 ), .B0(\CIC1Sin/d5_50 ), .A0(\CIC1Sin/d4_50 ), 
    .FCI(\CIC1Sin/n11981 ), .F0(\CIC1Sin/n4669 ), .F1(\CIC1Sin/n4668 ), 
    .FCO(\CIC1Sin/n11982 ));
  CIC1Sin_SLICE_655 \CIC1Sin/SLICE_655 ( .B1(\CIC1Sin/d1_71 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_70 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12134 ), .F0(\CIC1Sin/n4079 ), .F1(\CIC1Sin/n4078 ));
  CIC1Sin_SLICE_656 \CIC1Sin/SLICE_656 ( .B1(\CIC1Sin/d1_69 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_68 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12133 ), .F0(\CIC1Sin/n4081 ), .F1(\CIC1Sin/n4080 ), 
    .FCO(\CIC1Sin/n12134 ));
  CIC1Sin_SLICE_657 \CIC1Sin/SLICE_657 ( .B1(\CIC1Sin/d1_67 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_66 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12132 ), .F0(\CIC1Sin/n4083 ), .F1(\CIC1Sin/n4082 ), 
    .FCO(\CIC1Sin/n12133 ));
  CIC1Sin_SLICE_658 \CIC1Sin/SLICE_658 ( .B1(\CIC1Sin/d1_65 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_64 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12131 ), .F0(\CIC1Sin/n4085 ), .F1(\CIC1Sin/n4084 ), 
    .FCO(\CIC1Sin/n12132 ));
  CIC1Sin_SLICE_659 \CIC1Sin/SLICE_659 ( .B1(\CIC1Sin/d1_63 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_62 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12130 ), .F0(\CIC1Sin/n4087 ), .F1(\CIC1Sin/n4086 ), 
    .FCO(\CIC1Sin/n12131 ));
  CIC1Sin_SLICE_660 \CIC1Sin/SLICE_660 ( .B1(\CIC1Sin/d1_61 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_60 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12129 ), .F0(\CIC1Sin/n4089 ), .F1(\CIC1Sin/n4088 ), 
    .FCO(\CIC1Sin/n12130 ));
  CIC1Sin_SLICE_661 \CIC1Sin/SLICE_661 ( .B1(\CIC1Sin/d1_59 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_58 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12128 ), .F0(\CIC1Sin/n4091 ), .F1(\CIC1Sin/n4090 ), 
    .FCO(\CIC1Sin/n12129 ));
  CIC1Sin_SLICE_662 \CIC1Sin/SLICE_662 ( .B1(\CIC1Sin/d1_57 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_56 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12127 ), .F0(\CIC1Sin/n4093 ), .F1(\CIC1Sin/n4092 ), 
    .FCO(\CIC1Sin/n12128 ));
  CIC1Sin_SLICE_663 \CIC1Sin/SLICE_663 ( .B1(\CIC1Sin/d1_55 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_54 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12126 ), .F0(\CIC1Sin/n4095 ), .F1(\CIC1Sin/n4094 ), 
    .FCO(\CIC1Sin/n12127 ));
  CIC1Sin_SLICE_664 \CIC1Sin/SLICE_664 ( .B1(\CIC1Sin/d1_53 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_52 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12125 ), .F0(\CIC1Sin/n4097 ), .F1(\CIC1Sin/n4096 ), 
    .FCO(\CIC1Sin/n12126 ));
  CIC1Sin_SLICE_665 \CIC1Sin/SLICE_665 ( .B1(\CIC1Sin/d1_51 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_50 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12124 ), .F0(\CIC1Sin/n4099 ), .F1(\CIC1Sin/n4098 ), 
    .FCO(\CIC1Sin/n12125 ));
  CIC1Sin_SLICE_666 \CIC1Sin/SLICE_666 ( .B1(\CIC1Sin/d1_49 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_48 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12123 ), .F0(\CIC1Sin/n4101 ), .F1(\CIC1Sin/n4100 ), 
    .FCO(\CIC1Sin/n12124 ));
  CIC1Sin_SLICE_667 \CIC1Sin/SLICE_667 ( .B1(\CIC1Sin/d1_47 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_46 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12122 ), .F0(\CIC1Sin/n4103 ), .F1(\CIC1Sin/n4102 ), 
    .FCO(\CIC1Sin/n12123 ));
  CIC1Sin_SLICE_668 \CIC1Sin/SLICE_668 ( .B1(\CIC1Sin/d5_49 ), 
    .A1(\CIC1Sin/d4_49 ), .B0(\CIC1Sin/d5_48 ), .A0(\CIC1Sin/d4_48 ), 
    .FCI(\CIC1Sin/n11980 ), .F0(\CIC1Sin/n4671 ), .F1(\CIC1Sin/n4670 ), 
    .FCO(\CIC1Sin/n11981 ));
  CIC1Sin_SLICE_669 \CIC1Sin/SLICE_669 ( .B1(\CIC1Sin/d1_45 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_44 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12121 ), .F0(\CIC1Sin/n4105 ), .F1(\CIC1Sin/n4104 ), 
    .FCO(\CIC1Sin/n12122 ));
  CIC1Sin_SLICE_670 \CIC1Sin/SLICE_670 ( .B1(\CIC1Sin/d1_43 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_42 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12120 ), .F0(\CIC1Sin/n4107 ), .F1(\CIC1Sin/n4106 ), 
    .FCO(\CIC1Sin/n12121 ));
  CIC1Sin_SLICE_671 \CIC1Sin/SLICE_671 ( .B1(\CIC1Sin/d1_41 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_40 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12119 ), .F0(\CIC1Sin/n4109 ), .F1(\CIC1Sin/n4108 ), 
    .FCO(\CIC1Sin/n12120 ));
  CIC1Sin_SLICE_672 \CIC1Sin/SLICE_672 ( .B1(\CIC1Sin/d5_47 ), 
    .A1(\CIC1Sin/d4_47 ), .B0(\CIC1Sin/d5_46 ), .A0(\CIC1Sin/d4_46 ), 
    .FCI(\CIC1Sin/n11979 ), .F0(\CIC1Sin/n4673 ), .F1(\CIC1Sin/n4672 ), 
    .FCO(\CIC1Sin/n11980 ));
  CIC1Sin_SLICE_673 \CIC1Sin/SLICE_673 ( .B1(\CIC1Sin/d1_39 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_38 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12118 ), .F0(\CIC1Sin/n4111 ), .F1(\CIC1Sin/n4110 ), 
    .FCO(\CIC1Sin/n12119 ));
  CIC1Sin_SLICE_674 \CIC1Sin/SLICE_674 ( .B1(\CIC1Sin/d1_37 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_36 ), .A0(MixerOutSin_11), 
    .F1(\CIC1Sin/n4112 ), .FCO(\CIC1Sin/n12118 ));
  CIC1Sin_SLICE_675 \CIC1Sin/SLICE_675 ( .B1(\CIC1Sin/d5_45 ), 
    .A1(\CIC1Sin/d4_45 ), .B0(\CIC1Sin/d5_44 ), .A0(\CIC1Sin/d4_44 ), 
    .FCI(\CIC1Sin/n11978 ), .F0(\CIC1Sin/n4675 ), .F1(\CIC1Sin/n4674 ), 
    .FCO(\CIC1Sin/n11979 ));
  CIC1Sin_SLICE_676 \CIC1Sin/SLICE_676 ( .B1(\CIC1Sin/d2_71 ), 
    .A1(\CIC1Sin/d1_71 ), .B0(\CIC1Sin/d2_70 ), .A0(\CIC1Sin/d1_70 ), 
    .FCI(\CIC1Sin/n12114 ), .F0(\CIC1Sin/n4193 ), .F1(\CIC1Sin/n4192 ));
  CIC1Sin_SLICE_677 \CIC1Sin/SLICE_677 ( .B1(\CIC1Sin/d2_69 ), 
    .A1(\CIC1Sin/d1_69 ), .B0(\CIC1Sin/d2_68 ), .A0(\CIC1Sin/d1_68 ), 
    .FCI(\CIC1Sin/n12113 ), .F0(\CIC1Sin/n4195 ), .F1(\CIC1Sin/n4194 ), 
    .FCO(\CIC1Sin/n12114 ));
  CIC1Sin_SLICE_678 \CIC1Sin/SLICE_678 ( .B1(\CIC1Sin/d5_43 ), 
    .A1(\CIC1Sin/d4_43 ), .B0(\CIC1Sin/d5_42 ), .A0(\CIC1Sin/d4_42 ), 
    .FCI(\CIC1Sin/n11977 ), .F0(\CIC1Sin/n4677 ), .F1(\CIC1Sin/n4676 ), 
    .FCO(\CIC1Sin/n11978 ));
  CIC1Sin_SLICE_679 \CIC1Sin/SLICE_679 ( .B1(\CIC1Sin/d2_67 ), 
    .A1(\CIC1Sin/d1_67 ), .B0(\CIC1Sin/d2_66 ), .A0(\CIC1Sin/d1_66 ), 
    .FCI(\CIC1Sin/n12112 ), .F0(\CIC1Sin/n4197 ), .F1(\CIC1Sin/n4196 ), 
    .FCO(\CIC1Sin/n12113 ));
  CIC1Sin_SLICE_680 \CIC1Sin/SLICE_680 ( .B1(\CIC1Sin/d2_65 ), 
    .A1(\CIC1Sin/d1_65 ), .B0(\CIC1Sin/d2_64 ), .A0(\CIC1Sin/d1_64 ), 
    .FCI(\CIC1Sin/n12111 ), .F0(\CIC1Sin/n4199 ), .F1(\CIC1Sin/n4198 ), 
    .FCO(\CIC1Sin/n12112 ));
  CIC1Sin_SLICE_681 \CIC1Sin/SLICE_681 ( .B1(\CIC1Sin/d2_63 ), 
    .A1(\CIC1Sin/d1_63 ), .B0(\CIC1Sin/d2_62 ), .A0(\CIC1Sin/d1_62 ), 
    .FCI(\CIC1Sin/n12110 ), .F0(\CIC1Sin/n4201 ), .F1(\CIC1Sin/n4200 ), 
    .FCO(\CIC1Sin/n12111 ));
  CIC1Sin_SLICE_682 \CIC1Sin/SLICE_682 ( .B1(\CIC1Sin/d2_61 ), 
    .A1(\CIC1Sin/d1_61 ), .B0(\CIC1Sin/d2_60 ), .A0(\CIC1Sin/d1_60 ), 
    .FCI(\CIC1Sin/n12109 ), .F0(\CIC1Sin/n4203 ), .F1(\CIC1Sin/n4202 ), 
    .FCO(\CIC1Sin/n12110 ));
  CIC1Sin_SLICE_683 \CIC1Sin/SLICE_683 ( .B1(\CIC1Sin/d2_59 ), 
    .A1(\CIC1Sin/d1_59 ), .B0(\CIC1Sin/d2_58 ), .A0(\CIC1Sin/d1_58 ), 
    .FCI(\CIC1Sin/n12108 ), .F0(\CIC1Sin/n4205 ), .F1(\CIC1Sin/n4204 ), 
    .FCO(\CIC1Sin/n12109 ));
  CIC1Sin_SLICE_684 \CIC1Sin/SLICE_684 ( .B1(\CIC1Sin/d2_57 ), 
    .A1(\CIC1Sin/d1_57 ), .B0(\CIC1Sin/d2_56 ), .A0(\CIC1Sin/d1_56 ), 
    .FCI(\CIC1Sin/n12107 ), .F0(\CIC1Sin/n4207 ), .F1(\CIC1Sin/n4206 ), 
    .FCO(\CIC1Sin/n12108 ));
  CIC1Sin_SLICE_685 \CIC1Sin/SLICE_685 ( .B1(\CIC1Sin/d2_55 ), 
    .A1(\CIC1Sin/d1_55 ), .B0(\CIC1Sin/d2_54 ), .A0(\CIC1Sin/d1_54 ), 
    .FCI(\CIC1Sin/n12106 ), .F0(\CIC1Sin/n4209 ), .F1(\CIC1Sin/n4208 ), 
    .FCO(\CIC1Sin/n12107 ));
  CIC1Sin_SLICE_686 \CIC1Sin/SLICE_686 ( .B1(\CIC1Sin/d2_53 ), 
    .A1(\CIC1Sin/d1_53 ), .B0(\CIC1Sin/d2_52 ), .A0(\CIC1Sin/d1_52 ), 
    .FCI(\CIC1Sin/n12105 ), .F0(\CIC1Sin/n4211 ), .F1(\CIC1Sin/n4210 ), 
    .FCO(\CIC1Sin/n12106 ));
  CIC1Sin_SLICE_687 \CIC1Sin/SLICE_687 ( .B1(\CIC1Sin/d2_51 ), 
    .A1(\CIC1Sin/d1_51 ), .B0(\CIC1Sin/d2_50 ), .A0(\CIC1Sin/d1_50 ), 
    .FCI(\CIC1Sin/n12104 ), .F0(\CIC1Sin/n4213 ), .F1(\CIC1Sin/n4212 ), 
    .FCO(\CIC1Sin/n12105 ));
  CIC1Sin_SLICE_688 \CIC1Sin/SLICE_688 ( .B1(\CIC1Sin/d2_49 ), 
    .A1(\CIC1Sin/d1_49 ), .B0(\CIC1Sin/d2_48 ), .A0(\CIC1Sin/d1_48 ), 
    .FCI(\CIC1Sin/n12103 ), .F0(\CIC1Sin/n4215 ), .F1(\CIC1Sin/n4214 ), 
    .FCO(\CIC1Sin/n12104 ));
  CIC1Sin_SLICE_689 \CIC1Sin/SLICE_689 ( .B1(\CIC1Sin/d2_47 ), 
    .A1(\CIC1Sin/d1_47 ), .B0(\CIC1Sin/d2_46 ), .A0(\CIC1Sin/d1_46 ), 
    .FCI(\CIC1Sin/n12102 ), .F0(\CIC1Sin/n4217 ), .F1(\CIC1Sin/n4216 ), 
    .FCO(\CIC1Sin/n12103 ));
  CIC1Sin_SLICE_690 \CIC1Sin/SLICE_690 ( .B1(\CIC1Sin/d2_45 ), 
    .A1(\CIC1Sin/d1_45 ), .B0(\CIC1Sin/d2_44 ), .A0(\CIC1Sin/d1_44 ), 
    .FCI(\CIC1Sin/n12101 ), .F0(\CIC1Sin/n4219 ), .F1(\CIC1Sin/n4218 ), 
    .FCO(\CIC1Sin/n12102 ));
  CIC1Sin_SLICE_691 \CIC1Sin/SLICE_691 ( .B1(\CIC1Sin/d2_43 ), 
    .A1(\CIC1Sin/d1_43 ), .B0(\CIC1Sin/d2_42 ), .A0(\CIC1Sin/d1_42 ), 
    .FCI(\CIC1Sin/n12100 ), .F0(\CIC1Sin/n4221 ), .F1(\CIC1Sin/n4220 ), 
    .FCO(\CIC1Sin/n12101 ));
  CIC1Sin_SLICE_692 \CIC1Sin/SLICE_692 ( .B1(\CIC1Sin/d2_41 ), 
    .A1(\CIC1Sin/d1_41 ), .B0(\CIC1Sin/d2_40 ), .A0(\CIC1Sin/d1_40 ), 
    .FCI(\CIC1Sin/n12099 ), .F0(\CIC1Sin/n4223 ), .F1(\CIC1Sin/n4222 ), 
    .FCO(\CIC1Sin/n12100 ));
  CIC1Sin_SLICE_693 \CIC1Sin/SLICE_693 ( .B1(\CIC1Sin/d5_41 ), 
    .A1(\CIC1Sin/d4_41 ), .B0(\CIC1Sin/d5_40 ), .A0(\CIC1Sin/d4_40 ), 
    .FCI(\CIC1Sin/n11976 ), .F0(\CIC1Sin/n4679 ), .F1(\CIC1Sin/n4678 ), 
    .FCO(\CIC1Sin/n11977 ));
  CIC1Sin_SLICE_694 \CIC1Sin/SLICE_694 ( .B1(\CIC1Sin/d2_39 ), 
    .A1(\CIC1Sin/d1_39 ), .B0(\CIC1Sin/d2_38 ), .A0(\CIC1Sin/d1_38 ), 
    .FCI(\CIC1Sin/n12098 ), .F0(\CIC1Sin/n4225 ), .F1(\CIC1Sin/n4224 ), 
    .FCO(\CIC1Sin/n12099 ));
  CIC1Sin_SLICE_695 \CIC1Sin/SLICE_695 ( .B1(\CIC1Sin/d2_37 ), 
    .A1(\CIC1Sin/d1_37 ), .B0(\CIC1Sin/d2_36 ), .A0(\CIC1Sin/d1_36 ), 
    .F1(\CIC1Sin/n4226 ), .FCO(\CIC1Sin/n12098 ));
  CIC1Sin_SLICE_696 \CIC1Sin/SLICE_696 ( .D1(\CIC1Sin/d1_71 ), 
    .C1(\CIC1Sin/n4192 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_71 ), 
    .D0(\CIC1Sin/d1_70 ), .C0(\CIC1Sin/n4193 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_70 ), .DI1(\CIC1Sin/d2_71_N_489_71 ), 
    .DI0(\CIC1Sin/d2_71_N_489_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12095 ), 
    .F0(\CIC1Sin/d2_71_N_489_70 ), .Q0(\CIC1Sin/d2_70 ), 
    .F1(\CIC1Sin/d2_71_N_489_71 ), .Q1(\CIC1Sin/d2_71 ));
  CIC1Sin_SLICE_697 \CIC1Sin/SLICE_697 ( .D1(\CIC1Sin/d6_65 ), 
    .C1(\CIC1Sin/n5566 ), .B1(\CIC1Sin/n5558 ), .A1(\CIC1Sin/d_d6_65 ), 
    .D0(\CIC1Sin/d6_64 ), .C0(\CIC1Sin/n5567 ), .B0(\CIC1Sin/n5558 ), 
    .A0(\CIC1Sin/d_d6_64 ), .DI1(\CIC1Sin/d7_71_N_1530_65 ), 
    .DI0(\CIC1Sin/d7_71_N_1530_64 ), .CE(\CIC1Sin/osc_clk_enable_346 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11724 ), .F0(\CIC1Sin/d7_71_N_1530_64 ), 
    .Q0(\CIC1Sin/d7_64 ), .F1(\CIC1Sin/d7_71_N_1530_65 ), .Q1(\CIC1Sin/d7_65 ), 
    .FCO(\CIC1Sin/n11725 ));
  CIC1Sin_SLICE_698 \CIC1Sin/SLICE_698 ( .D1(\CIC1Sin/d1_69 ), 
    .C1(\CIC1Sin/n4194 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_69 ), 
    .D0(\CIC1Sin/d1_68 ), .C0(\CIC1Sin/n4195 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_68 ), .DI1(\CIC1Sin/d2_71_N_489_69 ), 
    .DI0(\CIC1Sin/d2_71_N_489_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12094 ), 
    .F0(\CIC1Sin/d2_71_N_489_68 ), .Q0(\CIC1Sin/d2_68 ), 
    .F1(\CIC1Sin/d2_71_N_489_69 ), .Q1(\CIC1Sin/d2_69 ), 
    .FCO(\CIC1Sin/n12095 ));
  CIC1Sin_SLICE_699 \CIC1Sin/SLICE_699 ( .B1(\CIC1Sin/d5_39 ), 
    .A1(\CIC1Sin/d4_39 ), .B0(\CIC1Sin/d5_38 ), .A0(\CIC1Sin/d4_38 ), 
    .FCI(\CIC1Sin/n11975 ), .F0(\CIC1Sin/n4681 ), .F1(\CIC1Sin/n4680 ), 
    .FCO(\CIC1Sin/n11976 ));
  CIC1Sin_SLICE_700 \CIC1Sin/SLICE_700 ( .D1(\CIC1Sin/d1_67 ), 
    .C1(\CIC1Sin/n4196 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_67 ), 
    .D0(\CIC1Sin/d1_66 ), .C0(\CIC1Sin/n4197 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_66 ), .DI1(\CIC1Sin/d2_71_N_489_67 ), 
    .DI0(\CIC1Sin/d2_71_N_489_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12093 ), 
    .F0(\CIC1Sin/d2_71_N_489_66 ), .Q0(\CIC1Sin/d2_66 ), 
    .F1(\CIC1Sin/d2_71_N_489_67 ), .Q1(\CIC1Sin/d2_67 ), 
    .FCO(\CIC1Sin/n12094 ));
  CIC1Sin_SLICE_701 \CIC1Sin/SLICE_701 ( .B1(\CIC1Sin/d5_37 ), 
    .A1(\CIC1Sin/d4_37 ), .B0(\CIC1Sin/d5_36 ), .A0(\CIC1Sin/d4_36 ), 
    .F1(\CIC1Sin/n4682 ), .FCO(\CIC1Sin/n11975 ));
  CIC1Sin_SLICE_702 \CIC1Sin/SLICE_702 ( .D1(\CIC1Sin/d4_71 ), 
    .C1(\CIC1Sin/n4648 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_71 ), 
    .D0(\CIC1Sin/d4_70 ), .C0(\CIC1Sin/n4649 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_70 ), .DI1(\CIC1Sin/d5_71_N_705_71 ), 
    .DI0(\CIC1Sin/d5_71_N_705_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11972 ), 
    .F0(\CIC1Sin/d5_71_N_705_70 ), .Q0(\CIC1Sin/d5_70 ), 
    .F1(\CIC1Sin/d5_71_N_705_71 ), .Q1(\CIC1Sin/d5_71 ));
  CIC1Sin_SLICE_703 \CIC1Sin/SLICE_703 ( .D1(\CIC1Sin/d4_69 ), 
    .C1(\CIC1Sin/n4650 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_69 ), 
    .D0(\CIC1Sin/d4_68 ), .C0(\CIC1Sin/n4651 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_68 ), .DI1(\CIC1Sin/d5_71_N_705_69 ), 
    .DI0(\CIC1Sin/d5_71_N_705_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11971 ), 
    .F0(\CIC1Sin/d5_71_N_705_68 ), .Q0(\CIC1Sin/d5_68 ), 
    .F1(\CIC1Sin/d5_71_N_705_69 ), .Q1(\CIC1Sin/d5_69 ), 
    .FCO(\CIC1Sin/n11972 ));
  CIC1Sin_SLICE_704 \CIC1Sin/SLICE_704 ( .D1(\CIC1Sin/d4_67 ), 
    .C1(\CIC1Sin/n4652 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_67 ), 
    .D0(\CIC1Sin/d4_66 ), .C0(\CIC1Sin/n4653 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_66 ), .DI1(\CIC1Sin/d5_71_N_705_67 ), 
    .DI0(\CIC1Sin/d5_71_N_705_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11970 ), 
    .F0(\CIC1Sin/d5_71_N_705_66 ), .Q0(\CIC1Sin/d5_66 ), 
    .F1(\CIC1Sin/d5_71_N_705_67 ), .Q1(\CIC1Sin/d5_67 ), 
    .FCO(\CIC1Sin/n11971 ));
  CIC1Sin_SLICE_705 \CIC1Sin/SLICE_705 ( .D1(\CIC1Sin/d4_65 ), 
    .C1(\CIC1Sin/n4654 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_65 ), 
    .D0(\CIC1Sin/d4_64 ), .C0(\CIC1Sin/n4655 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_64 ), .DI1(\CIC1Sin/d5_71_N_705_65 ), 
    .DI0(\CIC1Sin/d5_71_N_705_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11969 ), 
    .F0(\CIC1Sin/d5_71_N_705_64 ), .Q0(\CIC1Sin/d5_64 ), 
    .F1(\CIC1Sin/d5_71_N_705_65 ), .Q1(\CIC1Sin/d5_65 ), 
    .FCO(\CIC1Sin/n11970 ));
  CIC1Sin_SLICE_706 \CIC1Sin/SLICE_706 ( .D1(\CIC1Sin/d4_63 ), 
    .C1(\CIC1Sin/n4656 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_63 ), 
    .D0(\CIC1Sin/d4_62 ), .C0(\CIC1Sin/n4657 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_62 ), .DI1(\CIC1Sin/d5_71_N_705_63 ), 
    .DI0(\CIC1Sin/d5_71_N_705_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11968 ), 
    .F0(\CIC1Sin/d5_71_N_705_62 ), .Q0(\CIC1Sin/d5_62 ), 
    .F1(\CIC1Sin/d5_71_N_705_63 ), .Q1(\CIC1Sin/d5_63 ), 
    .FCO(\CIC1Sin/n11969 ));
  CIC1Sin_SLICE_707 \CIC1Sin/SLICE_707 ( .D1(\CIC1Sin/d4_61 ), 
    .C1(\CIC1Sin/n4658 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_61 ), 
    .D0(\CIC1Sin/d4_60 ), .C0(\CIC1Sin/n4659 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_60 ), .DI1(\CIC1Sin/d5_71_N_705_61 ), 
    .DI0(\CIC1Sin/d5_71_N_705_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11967 ), 
    .F0(\CIC1Sin/d5_71_N_705_60 ), .Q0(\CIC1Sin/d5_60 ), 
    .F1(\CIC1Sin/d5_71_N_705_61 ), .Q1(\CIC1Sin/d5_61 ), 
    .FCO(\CIC1Sin/n11968 ));
  CIC1Sin_SLICE_708 \CIC1Sin/SLICE_708 ( .D1(\CIC1Sin/d4_59 ), 
    .C1(\CIC1Sin/n4660 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_59 ), 
    .D0(\CIC1Sin/d4_58 ), .C0(\CIC1Sin/n4661 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_58 ), .DI1(\CIC1Sin/d5_71_N_705_59 ), 
    .DI0(\CIC1Sin/d5_71_N_705_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11966 ), 
    .F0(\CIC1Sin/d5_71_N_705_58 ), .Q0(\CIC1Sin/d5_58 ), 
    .F1(\CIC1Sin/d5_71_N_705_59 ), .Q1(\CIC1Sin/d5_59 ), 
    .FCO(\CIC1Sin/n11967 ));
  CIC1Sin_SLICE_709 \CIC1Sin/SLICE_709 ( .D1(\CIC1Sin/d4_57 ), 
    .C1(\CIC1Sin/n4662 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_57 ), 
    .D0(\CIC1Sin/d4_56 ), .C0(\CIC1Sin/n4663 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_56 ), .DI1(\CIC1Sin/d5_71_N_705_57 ), 
    .DI0(\CIC1Sin/d5_71_N_705_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11965 ), 
    .F0(\CIC1Sin/d5_71_N_705_56 ), .Q0(\CIC1Sin/d5_56 ), 
    .F1(\CIC1Sin/d5_71_N_705_57 ), .Q1(\CIC1Sin/d5_57 ), 
    .FCO(\CIC1Sin/n11966 ));
  CIC1Sin_SLICE_710 \CIC1Sin/SLICE_710 ( .D1(\CIC1Sin/d4_55 ), 
    .C1(\CIC1Sin/n4664 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_55 ), 
    .D0(\CIC1Sin/d4_54 ), .C0(\CIC1Sin/n4665 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_54 ), .DI1(\CIC1Sin/d5_71_N_705_55 ), 
    .DI0(\CIC1Sin/d5_71_N_705_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11964 ), 
    .F0(\CIC1Sin/d5_71_N_705_54 ), .Q0(\CIC1Sin/d5_54 ), 
    .F1(\CIC1Sin/d5_71_N_705_55 ), .Q1(\CIC1Sin/d5_55 ), 
    .FCO(\CIC1Sin/n11965 ));
  CIC1Sin_SLICE_711 \CIC1Sin/SLICE_711 ( .D1(\CIC1Sin/d1_65 ), 
    .C1(\CIC1Sin/n4198 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_65 ), 
    .D0(\CIC1Sin/d1_64 ), .C0(\CIC1Sin/n4199 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_64 ), .DI1(\CIC1Sin/d2_71_N_489_65 ), 
    .DI0(\CIC1Sin/d2_71_N_489_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12092 ), 
    .F0(\CIC1Sin/d2_71_N_489_64 ), .Q0(\CIC1Sin/d2_64 ), 
    .F1(\CIC1Sin/d2_71_N_489_65 ), .Q1(\CIC1Sin/d2_65 ), 
    .FCO(\CIC1Sin/n12093 ));
  CIC1Sin_SLICE_712 \CIC1Sin/SLICE_712 ( .D1(\CIC1Sin/d4_53 ), 
    .C1(\CIC1Sin/n4666 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_53 ), 
    .D0(\CIC1Sin/d4_52 ), .C0(\CIC1Sin/n4667 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_52 ), .DI1(\CIC1Sin/d5_71_N_705_53 ), 
    .DI0(\CIC1Sin/d5_71_N_705_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11963 ), 
    .F0(\CIC1Sin/d5_71_N_705_52 ), .Q0(\CIC1Sin/d5_52 ), 
    .F1(\CIC1Sin/d5_71_N_705_53 ), .Q1(\CIC1Sin/d5_53 ), 
    .FCO(\CIC1Sin/n11964 ));
  CIC1Sin_SLICE_713 \CIC1Sin/SLICE_713 ( .D1(\CIC1Sin/d4_51 ), 
    .C1(\CIC1Sin/n4668 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_51 ), 
    .D0(\CIC1Sin/d4_50 ), .C0(\CIC1Sin/n4669 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_50 ), .DI1(\CIC1Sin/d5_71_N_705_51 ), 
    .DI0(\CIC1Sin/d5_71_N_705_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11962 ), 
    .F0(\CIC1Sin/d5_71_N_705_50 ), .Q0(\CIC1Sin/d5_50 ), 
    .F1(\CIC1Sin/d5_71_N_705_51 ), .Q1(\CIC1Sin/d5_51 ), 
    .FCO(\CIC1Sin/n11963 ));
  CIC1Sin_SLICE_714 \CIC1Sin/SLICE_714 ( .D1(\CIC1Sin/d4_49 ), 
    .C1(\CIC1Sin/n4670 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_49 ), 
    .D0(\CIC1Sin/d4_48 ), .C0(\CIC1Sin/n4671 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_48 ), .DI1(\CIC1Sin/d5_71_N_705_49 ), 
    .DI0(\CIC1Sin/d5_71_N_705_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11961 ), 
    .F0(\CIC1Sin/d5_71_N_705_48 ), .Q0(\CIC1Sin/d5_48 ), 
    .F1(\CIC1Sin/d5_71_N_705_49 ), .Q1(\CIC1Sin/d5_49 ), 
    .FCO(\CIC1Sin/n11962 ));
  CIC1Sin_SLICE_715 \CIC1Sin/SLICE_715 ( .D1(\CIC1Sin/d4_47 ), 
    .C1(\CIC1Sin/n4672 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_47 ), 
    .D0(\CIC1Sin/d4_46 ), .C0(\CIC1Sin/n4673 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_46 ), .DI1(\CIC1Sin/d5_71_N_705_47 ), 
    .DI0(\CIC1Sin/d5_71_N_705_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11960 ), 
    .F0(\CIC1Sin/d5_71_N_705_46 ), .Q0(\CIC1Sin/d5_46 ), 
    .F1(\CIC1Sin/d5_71_N_705_47 ), .Q1(\CIC1Sin/d5_47 ), 
    .FCO(\CIC1Sin/n11961 ));
  CIC1Sin_SLICE_716 \CIC1Sin/SLICE_716 ( .D1(\CIC1Sin/d4_45 ), 
    .C1(\CIC1Sin/n4674 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_45 ), 
    .D0(\CIC1Sin/d4_44 ), .C0(\CIC1Sin/n4675 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_44 ), .DI1(\CIC1Sin/d5_71_N_705_45 ), 
    .DI0(\CIC1Sin/d5_71_N_705_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11959 ), 
    .F0(\CIC1Sin/d5_71_N_705_44 ), .Q0(\CIC1Sin/d5_44 ), 
    .F1(\CIC1Sin/d5_71_N_705_45 ), .Q1(\CIC1Sin/d5_45 ), 
    .FCO(\CIC1Sin/n11960 ));
  CIC1Sin_SLICE_717 \CIC1Sin/SLICE_717 ( .D1(\CIC1Sin/d4_43 ), 
    .C1(\CIC1Sin/n4676 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_43 ), 
    .D0(\CIC1Sin/d4_42 ), .C0(\CIC1Sin/n4677 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_42 ), .DI1(\CIC1Sin/d5_71_N_705_43 ), 
    .DI0(\CIC1Sin/d5_71_N_705_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11958 ), 
    .F0(\CIC1Sin/d5_71_N_705_42 ), .Q0(\CIC1Sin/d5_42 ), 
    .F1(\CIC1Sin/d5_71_N_705_43 ), .Q1(\CIC1Sin/d5_43 ), 
    .FCO(\CIC1Sin/n11959 ));
  CIC1Sin_SLICE_718 \CIC1Sin/SLICE_718 ( .D1(\CIC1Sin/d4_41 ), 
    .C1(\CIC1Sin/n4678 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_41 ), 
    .D0(\CIC1Sin/d4_40 ), .C0(\CIC1Sin/n4679 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_40 ), .DI1(\CIC1Sin/d5_71_N_705_41 ), 
    .DI0(\CIC1Sin/d5_71_N_705_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11957 ), 
    .F0(\CIC1Sin/d5_71_N_705_40 ), .Q0(\CIC1Sin/d5_40 ), 
    .F1(\CIC1Sin/d5_71_N_705_41 ), .Q1(\CIC1Sin/d5_41 ), 
    .FCO(\CIC1Sin/n11958 ));
  CIC1Sin_SLICE_719 \CIC1Sin/SLICE_719 ( .D1(\CIC1Sin/d4_39 ), 
    .C1(\CIC1Sin/n4680 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_39 ), 
    .D0(\CIC1Sin/d4_38 ), .C0(\CIC1Sin/n4681 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_38 ), .DI1(\CIC1Sin/d5_71_N_705_39 ), 
    .DI0(\CIC1Sin/d5_71_N_705_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11956 ), 
    .F0(\CIC1Sin/d5_71_N_705_38 ), .Q0(\CIC1Sin/d5_38 ), 
    .F1(\CIC1Sin/d5_71_N_705_39 ), .Q1(\CIC1Sin/d5_39 ), 
    .FCO(\CIC1Sin/n11957 ));
  CIC1Sin_SLICE_720 \CIC1Sin/SLICE_720 ( .D1(\CIC1Sin/d4_37 ), 
    .C1(\CIC1Sin/n4682 ), .B1(\CIC1Sin/n4646 ), .A1(\CIC1Sin/d5_37 ), 
    .D0(\CIC1Sin/d4_36 ), .C0(\CIC1Sin/n4683 ), .B0(\CIC1Sin/n4646 ), 
    .A0(\CIC1Sin/d5_36 ), .DI1(\CIC1Sin/d5_71_N_705_37 ), 
    .DI0(\CIC1Sin/d5_71_N_705_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11955 ), 
    .F0(\CIC1Sin/d5_71_N_705_36 ), .Q0(\CIC1Sin/d5_36 ), 
    .F1(\CIC1Sin/d5_71_N_705_37 ), .Q1(\CIC1Sin/d5_37 ), 
    .FCO(\CIC1Sin/n11956 ));
  CIC1Sin_SLICE_721 \CIC1Sin/SLICE_721 ( .A1(\CIC1Sin/n4646 ), 
    .FCO(\CIC1Sin/n11955 ));
  CIC1Sin_SLICE_722 \CIC1Sin/SLICE_722 ( .D1(\CIC1Sin/d1_63 ), 
    .C1(\CIC1Sin/n4200 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_63 ), 
    .D0(\CIC1Sin/d1_62 ), .C0(\CIC1Sin/n4201 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_62 ), .DI1(\CIC1Sin/d2_71_N_489_63 ), 
    .DI0(\CIC1Sin/d2_71_N_489_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12091 ), 
    .F0(\CIC1Sin/d2_71_N_489_62 ), .Q0(\CIC1Sin/d2_62 ), 
    .F1(\CIC1Sin/d2_71_N_489_63 ), .Q1(\CIC1Sin/d2_63 ), 
    .FCO(\CIC1Sin/n12092 ));
  CIC1Sin_SLICE_723 \CIC1Sin/SLICE_723 ( .D1(\CIC1Sin/d1_61 ), 
    .C1(\CIC1Sin/n4202 ), .B1(\CIC1Sin/n4190 ), .A1(\CIC1Sin/d2_61 ), 
    .D0(\CIC1Sin/d1_60 ), .C0(\CIC1Sin/n4203 ), .B0(\CIC1Sin/n4190 ), 
    .A0(\CIC1Sin/d2_60 ), .DI1(\CIC1Sin/d2_71_N_489_61 ), 
    .DI0(\CIC1Sin/d2_71_N_489_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12090 ), 
    .F0(\CIC1Sin/d2_71_N_489_60 ), .Q0(\CIC1Sin/d2_60 ), 
    .F1(\CIC1Sin/d2_71_N_489_61 ), .Q1(\CIC1Sin/d2_61 ), 
    .FCO(\CIC1Sin/n12091 ));
  ncoGen_SLICE_724 \ncoGen/SLICE_724 ( .B1(phase_inc_carrGen1_63), 
    .A1(phase_accum_63), .B0(phase_inc_carrGen1_62), .A0(phase_accum_62), 
    .DI1(\ncoGen/phase_accum_63_N_145_63 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_62 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10782 ), .F0(\ncoGen/phase_accum_63_N_145_62 ), 
    .Q0(phase_accum_62), .F1(\ncoGen/phase_accum_63_N_145_63 ), 
    .Q1(phase_accum_63));
  ncoGen_SLICE_725 \ncoGen/SLICE_725 ( .B1(phase_inc_carrGen1_61), 
    .A1(phase_accum_61), .B0(phase_inc_carrGen1_60), .A0(phase_accum_60), 
    .DI1(\ncoGen/phase_accum_63_N_145_61 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_60 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10781 ), .F0(\ncoGen/phase_accum_63_N_145_60 ), 
    .Q0(phase_accum_60), .F1(\ncoGen/phase_accum_63_N_145_61 ), 
    .Q1(phase_accum_61), .FCO(\ncoGen/n10782 ));
  ncoGen_SLICE_726 \ncoGen/SLICE_726 ( .B1(phase_inc_carrGen1_59), 
    .A1(phase_accum_59), .B0(phase_inc_carrGen1_58), .A0(phase_accum_58), 
    .DI1(\ncoGen/phase_accum_63_N_145_59 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_58 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10780 ), .F0(\ncoGen/phase_accum_63_N_145_58 ), 
    .Q0(phase_accum_58), .F1(\ncoGen/phase_accum_63_N_145_59 ), 
    .Q1(phase_accum_59), .FCO(\ncoGen/n10781 ));
  ncoGen_SLICE_727 \ncoGen/SLICE_727 ( .B1(phase_inc_carrGen1_57), 
    .A1(phase_accum_57), .B0(phase_inc_carrGen1_56), .A0(phase_accum_56), 
    .DI1(\ncoGen/phase_accum_63_N_145_57 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_56 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10779 ), .F0(\ncoGen/phase_accum_63_N_145_56 ), 
    .Q0(phase_accum_56), .F1(\ncoGen/phase_accum_63_N_145_57 ), 
    .Q1(phase_accum_57), .FCO(\ncoGen/n10780 ));
  ncoGen_SLICE_728 \ncoGen/SLICE_728 ( .B1(phase_inc_carrGen1_55), 
    .A1(\ncoGen/phase_accum_55 ), .B0(phase_inc_carrGen1_54), 
    .A0(\ncoGen/phase_accum_54 ), .DI1(\ncoGen/phase_accum_63_N_145_55 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_54 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10778 ), .F0(\ncoGen/phase_accum_63_N_145_54 ), 
    .Q0(\ncoGen/phase_accum_54 ), .F1(\ncoGen/phase_accum_63_N_145_55 ), 
    .Q1(\ncoGen/phase_accum_55 ), .FCO(\ncoGen/n10779 ));
  ncoGen_SLICE_729 \ncoGen/SLICE_729 ( .B1(phase_inc_carrGen1_53), 
    .A1(\ncoGen/phase_accum_53 ), .B0(phase_inc_carrGen1_52), 
    .A0(\ncoGen/phase_accum_52 ), .DI1(\ncoGen/phase_accum_63_N_145_53 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_52 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10777 ), .F0(\ncoGen/phase_accum_63_N_145_52 ), 
    .Q0(\ncoGen/phase_accum_52 ), .F1(\ncoGen/phase_accum_63_N_145_53 ), 
    .Q1(\ncoGen/phase_accum_53 ), .FCO(\ncoGen/n10778 ));
  ncoGen_SLICE_730 \ncoGen/SLICE_730 ( .B1(phase_inc_carrGen1_51), 
    .A1(\ncoGen/phase_accum_51 ), .B0(phase_inc_carrGen1_50), 
    .A0(\ncoGen/phase_accum_50 ), .DI1(\ncoGen/phase_accum_63_N_145_51 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_50 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10776 ), .F0(\ncoGen/phase_accum_63_N_145_50 ), 
    .Q0(\ncoGen/phase_accum_50 ), .F1(\ncoGen/phase_accum_63_N_145_51 ), 
    .Q1(\ncoGen/phase_accum_51 ), .FCO(\ncoGen/n10777 ));
  ncoGen_SLICE_731 \ncoGen/SLICE_731 ( .B1(phase_inc_carrGen1_49), 
    .A1(\ncoGen/phase_accum_49 ), .B0(phase_inc_carrGen1_48), 
    .A0(\ncoGen/phase_accum_48 ), .DI1(\ncoGen/phase_accum_63_N_145_49 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_48 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10775 ), .F0(\ncoGen/phase_accum_63_N_145_48 ), 
    .Q0(\ncoGen/phase_accum_48 ), .F1(\ncoGen/phase_accum_63_N_145_49 ), 
    .Q1(\ncoGen/phase_accum_49 ), .FCO(\ncoGen/n10776 ));
  ncoGen_SLICE_732 \ncoGen/SLICE_732 ( .B1(phase_inc_carrGen1_47), 
    .A1(\ncoGen/phase_accum_47 ), .B0(phase_inc_carrGen1_46), 
    .A0(\ncoGen/phase_accum_46 ), .DI1(\ncoGen/phase_accum_63_N_145_47 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_46 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10774 ), .F0(\ncoGen/phase_accum_63_N_145_46 ), 
    .Q0(\ncoGen/phase_accum_46 ), .F1(\ncoGen/phase_accum_63_N_145_47 ), 
    .Q1(\ncoGen/phase_accum_47 ), .FCO(\ncoGen/n10775 ));
  ncoGen_SLICE_733 \ncoGen/SLICE_733 ( .B1(phase_inc_carrGen1_45), 
    .A1(\ncoGen/phase_accum_45 ), .B0(phase_inc_carrGen1_44), 
    .A0(\ncoGen/phase_accum_44 ), .DI1(\ncoGen/phase_accum_63_N_145_45 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_44 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10773 ), .F0(\ncoGen/phase_accum_63_N_145_44 ), 
    .Q0(\ncoGen/phase_accum_44 ), .F1(\ncoGen/phase_accum_63_N_145_45 ), 
    .Q1(\ncoGen/phase_accum_45 ), .FCO(\ncoGen/n10774 ));
  ncoGen_SLICE_734 \ncoGen/SLICE_734 ( .B1(phase_inc_carrGen1_43), 
    .A1(\ncoGen/phase_accum_43 ), .B0(phase_inc_carrGen1_42), 
    .A0(\ncoGen/phase_accum_42 ), .DI1(\ncoGen/phase_accum_63_N_145_43 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_42 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10772 ), .F0(\ncoGen/phase_accum_63_N_145_42 ), 
    .Q0(\ncoGen/phase_accum_42 ), .F1(\ncoGen/phase_accum_63_N_145_43 ), 
    .Q1(\ncoGen/phase_accum_43 ), .FCO(\ncoGen/n10773 ));
  ncoGen_SLICE_735 \ncoGen/SLICE_735 ( .B1(phase_inc_carrGen1_41), 
    .A1(\ncoGen/phase_accum_41 ), .B0(phase_inc_carrGen1_40), 
    .A0(\ncoGen/phase_accum_40 ), .DI1(\ncoGen/phase_accum_63_N_145_41 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_40 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10771 ), .F0(\ncoGen/phase_accum_63_N_145_40 ), 
    .Q0(\ncoGen/phase_accum_40 ), .F1(\ncoGen/phase_accum_63_N_145_41 ), 
    .Q1(\ncoGen/phase_accum_41 ), .FCO(\ncoGen/n10772 ));
  ncoGen_SLICE_736 \ncoGen/SLICE_736 ( .B1(phase_inc_carrGen1_39), 
    .A1(\ncoGen/phase_accum_39 ), .B0(phase_inc_carrGen1_38), 
    .A0(\ncoGen/phase_accum_38 ), .DI1(\ncoGen/phase_accum_63_N_145_39 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_38 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10770 ), .F0(\ncoGen/phase_accum_63_N_145_38 ), 
    .Q0(\ncoGen/phase_accum_38 ), .F1(\ncoGen/phase_accum_63_N_145_39 ), 
    .Q1(\ncoGen/phase_accum_39 ), .FCO(\ncoGen/n10771 ));
  ncoGen_SLICE_737 \ncoGen/SLICE_737 ( .B1(phase_inc_carrGen1_37), 
    .A1(\ncoGen/phase_accum_37 ), .B0(phase_inc_carrGen1_36), 
    .A0(\ncoGen/phase_accum_36 ), .DI1(\ncoGen/phase_accum_63_N_145_37 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_36 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10769 ), .F0(\ncoGen/phase_accum_63_N_145_36 ), 
    .Q0(\ncoGen/phase_accum_36 ), .F1(\ncoGen/phase_accum_63_N_145_37 ), 
    .Q1(\ncoGen/phase_accum_37 ), .FCO(\ncoGen/n10770 ));
  ncoGen_SLICE_738 \ncoGen/SLICE_738 ( .B1(phase_inc_carrGen1_35), 
    .A1(\ncoGen/phase_accum_35 ), .B0(phase_inc_carrGen1_34), 
    .A0(\ncoGen/phase_accum_34 ), .DI1(\ncoGen/phase_accum_63_N_145_35 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_34 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10768 ), .F0(\ncoGen/phase_accum_63_N_145_34 ), 
    .Q0(\ncoGen/phase_accum_34 ), .F1(\ncoGen/phase_accum_63_N_145_35 ), 
    .Q1(\ncoGen/phase_accum_35 ), .FCO(\ncoGen/n10769 ));
  ncoGen_SLICE_739 \ncoGen/SLICE_739 ( .B1(phase_inc_carrGen1_33), 
    .A1(\ncoGen/phase_accum_33 ), .B0(phase_inc_carrGen1_32), 
    .A0(\ncoGen/phase_accum_32 ), .DI1(\ncoGen/phase_accum_63_N_145_33 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_32 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10767 ), .F0(\ncoGen/phase_accum_63_N_145_32 ), 
    .Q0(\ncoGen/phase_accum_32 ), .F1(\ncoGen/phase_accum_63_N_145_33 ), 
    .Q1(\ncoGen/phase_accum_33 ), .FCO(\ncoGen/n10768 ));
  ncoGen_SLICE_740 \ncoGen/SLICE_740 ( .B1(phase_inc_carrGen1_31), 
    .A1(\ncoGen/phase_accum_31 ), .B0(phase_inc_carrGen1_30), 
    .A0(\ncoGen/phase_accum_30 ), .DI1(\ncoGen/phase_accum_63_N_145_31 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_30 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10766 ), .F0(\ncoGen/phase_accum_63_N_145_30 ), 
    .Q0(\ncoGen/phase_accum_30 ), .F1(\ncoGen/phase_accum_63_N_145_31 ), 
    .Q1(\ncoGen/phase_accum_31 ), .FCO(\ncoGen/n10767 ));
  ncoGen_SLICE_741 \ncoGen/SLICE_741 ( .B1(phase_inc_carrGen1_29), 
    .A1(\ncoGen/phase_accum_29 ), .B0(phase_inc_carrGen1_28), 
    .A0(\ncoGen/phase_accum_28 ), .DI1(\ncoGen/phase_accum_63_N_145_29 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_28 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10765 ), .F0(\ncoGen/phase_accum_63_N_145_28 ), 
    .Q0(\ncoGen/phase_accum_28 ), .F1(\ncoGen/phase_accum_63_N_145_29 ), 
    .Q1(\ncoGen/phase_accum_29 ), .FCO(\ncoGen/n10766 ));
  ncoGen_SLICE_742 \ncoGen/SLICE_742 ( .B1(phase_inc_carrGen1_27), 
    .A1(\ncoGen/phase_accum_27 ), .B0(phase_inc_carrGen1_26), 
    .A0(\ncoGen/phase_accum_26 ), .DI1(\ncoGen/phase_accum_63_N_145_27 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_26 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10764 ), .F0(\ncoGen/phase_accum_63_N_145_26 ), 
    .Q0(\ncoGen/phase_accum_26 ), .F1(\ncoGen/phase_accum_63_N_145_27 ), 
    .Q1(\ncoGen/phase_accum_27 ), .FCO(\ncoGen/n10765 ));
  ncoGen_SLICE_743 \ncoGen/SLICE_743 ( .B1(phase_inc_carrGen1_25), 
    .A1(\ncoGen/phase_accum_25 ), .B0(phase_inc_carrGen1_24), 
    .A0(\ncoGen/phase_accum_24 ), .DI1(\ncoGen/phase_accum_63_N_145_25 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_24 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10763 ), .F0(\ncoGen/phase_accum_63_N_145_24 ), 
    .Q0(\ncoGen/phase_accum_24 ), .F1(\ncoGen/phase_accum_63_N_145_25 ), 
    .Q1(\ncoGen/phase_accum_25 ), .FCO(\ncoGen/n10764 ));
  ncoGen_SLICE_744 \ncoGen/SLICE_744 ( .B1(phase_inc_carrGen1_23), 
    .A1(\ncoGen/phase_accum_23 ), .B0(phase_inc_carrGen1_22), 
    .A0(\ncoGen/phase_accum_22 ), .DI1(\ncoGen/phase_accum_63_N_145_23 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_22 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10762 ), .F0(\ncoGen/phase_accum_63_N_145_22 ), 
    .Q0(\ncoGen/phase_accum_22 ), .F1(\ncoGen/phase_accum_63_N_145_23 ), 
    .Q1(\ncoGen/phase_accum_23 ), .FCO(\ncoGen/n10763 ));
  ncoGen_SLICE_745 \ncoGen/SLICE_745 ( .B1(phase_inc_carrGen1_21), 
    .A1(\ncoGen/phase_accum_21 ), .B0(phase_inc_carrGen1_20), 
    .A0(\ncoGen/phase_accum_20 ), .DI1(\ncoGen/phase_accum_63_N_145_21 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_20 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10761 ), .F0(\ncoGen/phase_accum_63_N_145_20 ), 
    .Q0(\ncoGen/phase_accum_20 ), .F1(\ncoGen/phase_accum_63_N_145_21 ), 
    .Q1(\ncoGen/phase_accum_21 ), .FCO(\ncoGen/n10762 ));
  ncoGen_SLICE_746 \ncoGen/SLICE_746 ( .B1(phase_inc_carrGen1_19), 
    .A1(\ncoGen/phase_accum_19 ), .B0(phase_inc_carrGen1_18), 
    .A0(\ncoGen/phase_accum_18 ), .DI1(\ncoGen/phase_accum_63_N_145_19 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_18 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10760 ), .F0(\ncoGen/phase_accum_63_N_145_18 ), 
    .Q0(\ncoGen/phase_accum_18 ), .F1(\ncoGen/phase_accum_63_N_145_19 ), 
    .Q1(\ncoGen/phase_accum_19 ), .FCO(\ncoGen/n10761 ));
  ncoGen_SLICE_747 \ncoGen/SLICE_747 ( .B1(phase_inc_carrGen1_17), 
    .A1(\ncoGen/phase_accum_17 ), .B0(phase_inc_carrGen1_16), 
    .A0(\ncoGen/phase_accum_16 ), .DI1(\ncoGen/phase_accum_63_N_145_17 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_16 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10759 ), .F0(\ncoGen/phase_accum_63_N_145_16 ), 
    .Q0(\ncoGen/phase_accum_16 ), .F1(\ncoGen/phase_accum_63_N_145_17 ), 
    .Q1(\ncoGen/phase_accum_17 ), .FCO(\ncoGen/n10760 ));
  ncoGen_SLICE_748 \ncoGen/SLICE_748 ( .B1(phase_inc_carrGen1_15), 
    .A1(\ncoGen/phase_accum_15 ), .B0(phase_inc_carrGen1_14), 
    .A0(\ncoGen/phase_accum_14 ), .DI1(\ncoGen/phase_accum_63_N_145_15 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_14 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10758 ), .F0(\ncoGen/phase_accum_63_N_145_14 ), 
    .Q0(\ncoGen/phase_accum_14 ), .F1(\ncoGen/phase_accum_63_N_145_15 ), 
    .Q1(\ncoGen/phase_accum_15 ), .FCO(\ncoGen/n10759 ));
  ncoGen_SLICE_749 \ncoGen/SLICE_749 ( .B1(phase_inc_carrGen1_13), 
    .A1(\ncoGen/phase_accum_13 ), .B0(phase_inc_carrGen1_12), 
    .A0(\ncoGen/phase_accum_12 ), .DI1(\ncoGen/phase_accum_63_N_145_13 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_12 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10757 ), .F0(\ncoGen/phase_accum_63_N_145_12 ), 
    .Q0(\ncoGen/phase_accum_12 ), .F1(\ncoGen/phase_accum_63_N_145_13 ), 
    .Q1(\ncoGen/phase_accum_13 ), .FCO(\ncoGen/n10758 ));
  ncoGen_SLICE_750 \ncoGen/SLICE_750 ( .B1(phase_inc_carrGen1_11), 
    .A1(\ncoGen/phase_accum_11 ), .B0(phase_inc_carrGen1_10), 
    .A0(\ncoGen/phase_accum_10 ), .DI1(\ncoGen/phase_accum_63_N_145_11 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_10 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10756 ), .F0(\ncoGen/phase_accum_63_N_145_10 ), 
    .Q0(\ncoGen/phase_accum_10 ), .F1(\ncoGen/phase_accum_63_N_145_11 ), 
    .Q1(\ncoGen/phase_accum_11 ), .FCO(\ncoGen/n10757 ));
  ncoGen_SLICE_751 \ncoGen/SLICE_751 ( .B1(phase_inc_carrGen1_9), 
    .A1(\ncoGen/phase_accum_9 ), .B0(phase_inc_carrGen1_8), 
    .A0(\ncoGen/phase_accum_8 ), .DI1(\ncoGen/phase_accum_63_N_145_9 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_8 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10755 ), .F0(\ncoGen/phase_accum_63_N_145_8 ), 
    .Q0(\ncoGen/phase_accum_8 ), .F1(\ncoGen/phase_accum_63_N_145_9 ), 
    .Q1(\ncoGen/phase_accum_9 ), .FCO(\ncoGen/n10756 ));
  ncoGen_SLICE_752 \ncoGen/SLICE_752 ( .B1(phase_inc_carrGen1_7), 
    .A1(\ncoGen/phase_accum_7 ), .B0(phase_inc_carrGen1_6), 
    .A0(\ncoGen/phase_accum_6 ), .DI1(\ncoGen/phase_accum_63_N_145_7 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_6 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10754 ), .F0(\ncoGen/phase_accum_63_N_145_6 ), 
    .Q0(\ncoGen/phase_accum_6 ), .F1(\ncoGen/phase_accum_63_N_145_7 ), 
    .Q1(\ncoGen/phase_accum_7 ), .FCO(\ncoGen/n10755 ));
  ncoGen_SLICE_753 \ncoGen/SLICE_753 ( .B1(phase_inc_carrGen1_5), 
    .A1(\ncoGen/phase_accum_5 ), .B0(phase_inc_carrGen1_4), 
    .A0(\ncoGen/phase_accum_4 ), .DI1(\ncoGen/phase_accum_63_N_145_5 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_4 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10753 ), .F0(\ncoGen/phase_accum_63_N_145_4 ), 
    .Q0(\ncoGen/phase_accum_4 ), .F1(\ncoGen/phase_accum_63_N_145_5 ), 
    .Q1(\ncoGen/phase_accum_5 ), .FCO(\ncoGen/n10754 ));
  ncoGen_SLICE_754 \ncoGen/SLICE_754 ( .B1(phase_inc_carrGen1_3), 
    .A1(\ncoGen/phase_accum_3 ), .B0(phase_inc_carrGen1_2), 
    .A0(\ncoGen/phase_accum_2 ), .DI1(\ncoGen/phase_accum_63_N_145_3 ), 
    .DI0(\ncoGen/phase_accum_63_N_145_2 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10752 ), .F0(\ncoGen/phase_accum_63_N_145_2 ), 
    .Q0(\ncoGen/phase_accum_2 ), .F1(\ncoGen/phase_accum_63_N_145_3 ), 
    .Q1(\ncoGen/phase_accum_3 ), .FCO(\ncoGen/n10753 ));
  ncoGen_SLICE_755 \ncoGen/SLICE_755 ( .B1(phase_inc_carrGen1_1), 
    .A1(\ncoGen/phase_accum_1 ), .B0(phase_inc_carrGen1_0), 
    .A0(\ncoGen/phase_accum_0 ), .DI1(\ncoGen/phase_accum_63_N_145_1 ), 
    .CLK(osc_clk), .F1(\ncoGen/phase_accum_63_N_145_1 ), 
    .Q1(\ncoGen/phase_accum_1 ), .FCO(\ncoGen/n10752 ));
  CIC1Cos_SLICE_756 \CIC1Cos/SLICE_756 ( .D1(\CIC1Cos/d2_63 ), 
    .C1(\CIC1Cos/n5112 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_63 ), 
    .D0(\CIC1Cos/d2_62 ), .C0(\CIC1Cos/n5113 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_62 ), .DI1(\CIC1Cos/d3_71_N_561_63 ), 
    .DI0(\CIC1Cos/d3_71_N_561_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11845 ), 
    .F0(\CIC1Cos/d3_71_N_561_62 ), .Q0(\CIC1Cos/d3_62 ), 
    .F1(\CIC1Cos/d3_71_N_561_63 ), .Q1(\CIC1Cos/d3_63 ), 
    .FCO(\CIC1Cos/n11846 ));
  CIC1Cos_SLICE_757 \CIC1Cos/SLICE_757 ( .D1(\CIC1Cos/d2_57 ), 
    .C1(\CIC1Cos/n5118 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_57 ), 
    .D0(\CIC1Cos/d2_56 ), .C0(\CIC1Cos/n5119 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_56 ), .DI1(\CIC1Cos/d3_71_N_561_57 ), 
    .DI0(\CIC1Cos/d3_71_N_561_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11842 ), 
    .F0(\CIC1Cos/d3_71_N_561_56 ), .Q0(\CIC1Cos/d3_56 ), 
    .F1(\CIC1Cos/d3_71_N_561_57 ), .Q1(\CIC1Cos/d3_57 ), 
    .FCO(\CIC1Cos/n11843 ));
  CIC1Cos_SLICE_758 \CIC1Cos/SLICE_758 ( .D1(\CIC1Cos/d2_51 ), 
    .C1(\CIC1Cos/n5124 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_51 ), 
    .D0(\CIC1Cos/d2_50 ), .C0(\CIC1Cos/n5125 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_50 ), .DI1(\CIC1Cos/d3_71_N_561_51 ), 
    .DI0(\CIC1Cos/d3_71_N_561_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11839 ), 
    .F0(\CIC1Cos/d3_71_N_561_50 ), .Q0(\CIC1Cos/d3_50 ), 
    .F1(\CIC1Cos/d3_71_N_561_51 ), .Q1(\CIC1Cos/d3_51 ), 
    .FCO(\CIC1Cos/n11840 ));
  CIC1Cos_SLICE_759 \CIC1Cos/SLICE_759 ( .D1(\CIC1Cos/d2_55 ), 
    .C1(\CIC1Cos/n5120 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_55 ), 
    .D0(\CIC1Cos/d2_54 ), .C0(\CIC1Cos/n5121 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_54 ), .DI1(\CIC1Cos/d3_71_N_561_55 ), 
    .DI0(\CIC1Cos/d3_71_N_561_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11841 ), 
    .F0(\CIC1Cos/d3_71_N_561_54 ), .Q0(\CIC1Cos/d3_54 ), 
    .F1(\CIC1Cos/d3_71_N_561_55 ), .Q1(\CIC1Cos/d3_55 ), 
    .FCO(\CIC1Cos/n11842 ));
  CIC1Cos_SLICE_760 \CIC1Cos/SLICE_760 ( .D1(\CIC1Cos/d2_61 ), 
    .C1(\CIC1Cos/n5114 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_61 ), 
    .D0(\CIC1Cos/d2_60 ), .C0(\CIC1Cos/n5115 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_60 ), .DI1(\CIC1Cos/d3_71_N_561_61 ), 
    .DI0(\CIC1Cos/d3_71_N_561_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11844 ), 
    .F0(\CIC1Cos/d3_71_N_561_60 ), .Q0(\CIC1Cos/d3_60 ), 
    .F1(\CIC1Cos/d3_71_N_561_61 ), .Q1(\CIC1Cos/d3_61 ), 
    .FCO(\CIC1Cos/n11845 ));
  CIC1Cos_SLICE_761 \CIC1Cos/SLICE_761 ( .D1(\CIC1Cos/d2_53 ), 
    .C1(\CIC1Cos/n5122 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_53 ), 
    .D0(\CIC1Cos/d2_52 ), .C0(\CIC1Cos/n5123 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_52 ), .DI1(\CIC1Cos/d3_71_N_561_53 ), 
    .DI0(\CIC1Cos/d3_71_N_561_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11840 ), 
    .F0(\CIC1Cos/d3_71_N_561_52 ), .Q0(\CIC1Cos/d3_52 ), 
    .F1(\CIC1Cos/d3_71_N_561_53 ), .Q1(\CIC1Cos/d3_53 ), 
    .FCO(\CIC1Cos/n11841 ));
  CIC1Cos_SLICE_762 \CIC1Cos/SLICE_762 ( .B1(\CIC1Cos/d2_39 ), 
    .A1(\CIC1Cos/d1_39 ), .B0(\CIC1Cos/d2_38 ), .A0(\CIC1Cos/d1_38 ), 
    .FCI(\CIC1Cos/n11893 ), .F0(\CIC1Cos/n4985 ), .F1(\CIC1Cos/n4984 ), 
    .FCO(\CIC1Cos/n11894 ));
  CIC1Cos_SLICE_763 \CIC1Cos/SLICE_763 ( .B1(\CIC1Cos/d2_37 ), 
    .A1(\CIC1Cos/d1_37 ), .B0(\CIC1Cos/d2_36 ), .A0(\CIC1Cos/d1_36 ), 
    .F1(\CIC1Cos/n4986 ), .FCO(\CIC1Cos/n11893 ));
  CIC1Cos_SLICE_764 \CIC1Cos/SLICE_764 ( .D1(\CIC1Cos/d1_67 ), 
    .C1(\CIC1Cos/n4956 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_67 ), 
    .D0(\CIC1Cos/d1_66 ), .C0(\CIC1Cos/n4957 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_66 ), .DI1(\CIC1Cos/d2_71_N_489_67 ), 
    .DI0(\CIC1Cos/d2_71_N_489_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11888 ), 
    .F0(\CIC1Cos/d2_71_N_489_66 ), .Q0(\CIC1Cos/d2_66 ), 
    .F1(\CIC1Cos/d2_71_N_489_67 ), .Q1(\CIC1Cos/d2_67 ), 
    .FCO(\CIC1Cos/n11889 ));
  CIC1Cos_SLICE_765 \CIC1Cos/SLICE_765 ( .D1(\CIC1Cos/d1_63 ), 
    .C1(\CIC1Cos/n4960 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_63 ), 
    .D0(\CIC1Cos/d1_62 ), .C0(\CIC1Cos/n4961 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_62 ), .DI1(\CIC1Cos/d2_71_N_489_63 ), 
    .DI0(\CIC1Cos/d2_71_N_489_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11886 ), 
    .F0(\CIC1Cos/d2_71_N_489_62 ), .Q0(\CIC1Cos/d2_62 ), 
    .F1(\CIC1Cos/d2_71_N_489_63 ), .Q1(\CIC1Cos/d2_63 ), 
    .FCO(\CIC1Cos/n11887 ));
  CIC1Cos_SLICE_766 \CIC1Cos/SLICE_766 ( .D1(\CIC1Cos/d1_61 ), 
    .C1(\CIC1Cos/n4962 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_61 ), 
    .D0(\CIC1Cos/d1_60 ), .C0(\CIC1Cos/n4963 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_60 ), .DI1(\CIC1Cos/d2_71_N_489_61 ), 
    .DI0(\CIC1Cos/d2_71_N_489_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11885 ), 
    .F0(\CIC1Cos/d2_71_N_489_60 ), .Q0(\CIC1Cos/d2_60 ), 
    .F1(\CIC1Cos/d2_71_N_489_61 ), .Q1(\CIC1Cos/d2_61 ), 
    .FCO(\CIC1Cos/n11886 ));
  CIC1Cos_SLICE_767 \CIC1Cos/SLICE_767 ( .D1(\CIC1Cos/d1_59 ), 
    .C1(\CIC1Cos/n4964 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_59 ), 
    .D0(\CIC1Cos/d1_58 ), .C0(\CIC1Cos/n4965 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_58 ), .DI1(\CIC1Cos/d2_71_N_489_59 ), 
    .DI0(\CIC1Cos/d2_71_N_489_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11884 ), 
    .F0(\CIC1Cos/d2_71_N_489_58 ), .Q0(\CIC1Cos/d2_58 ), 
    .F1(\CIC1Cos/d2_71_N_489_59 ), .Q1(\CIC1Cos/d2_59 ), 
    .FCO(\CIC1Cos/n11885 ));
  CIC1Cos_SLICE_768 \CIC1Cos/SLICE_768 ( .D1(\CIC1Cos/d1_57 ), 
    .C1(\CIC1Cos/n4966 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_57 ), 
    .D0(\CIC1Cos/d1_56 ), .C0(\CIC1Cos/n4967 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_56 ), .DI1(\CIC1Cos/d2_71_N_489_57 ), 
    .DI0(\CIC1Cos/d2_71_N_489_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11883 ), 
    .F0(\CIC1Cos/d2_71_N_489_56 ), .Q0(\CIC1Cos/d2_56 ), 
    .F1(\CIC1Cos/d2_71_N_489_57 ), .Q1(\CIC1Cos/d2_57 ), 
    .FCO(\CIC1Cos/n11884 ));
  CIC1Cos_SLICE_769 \CIC1Cos/SLICE_769 ( .D1(\CIC1Cos/d2_59 ), 
    .C1(\CIC1Cos/n5116 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_59 ), 
    .D0(\CIC1Cos/d2_58 ), .C0(\CIC1Cos/n5117 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_58 ), .DI1(\CIC1Cos/d3_71_N_561_59 ), 
    .DI0(\CIC1Cos/d3_71_N_561_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11843 ), 
    .F0(\CIC1Cos/d3_71_N_561_58 ), .Q0(\CIC1Cos/d3_58 ), 
    .F1(\CIC1Cos/d3_71_N_561_59 ), .Q1(\CIC1Cos/d3_59 ), 
    .FCO(\CIC1Cos/n11844 ));
  CIC1Cos_SLICE_770 \CIC1Cos/SLICE_770 ( .D1(\CIC1Cos/d1_55 ), 
    .C1(\CIC1Cos/n4968 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_55 ), 
    .D0(\CIC1Cos/d1_54 ), .C0(\CIC1Cos/n4969 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_54 ), .DI1(\CIC1Cos/d2_71_N_489_55 ), 
    .DI0(\CIC1Cos/d2_71_N_489_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11882 ), 
    .F0(\CIC1Cos/d2_71_N_489_54 ), .Q0(\CIC1Cos/d2_54 ), 
    .F1(\CIC1Cos/d2_71_N_489_55 ), .Q1(\CIC1Cos/d2_55 ), 
    .FCO(\CIC1Cos/n11883 ));
  CIC1Cos_SLICE_771 \CIC1Cos/SLICE_771 ( .D1(\CIC1Cos/d1_53 ), 
    .C1(\CIC1Cos/n4970 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_53 ), 
    .D0(\CIC1Cos/d1_52 ), .C0(\CIC1Cos/n4971 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_52 ), .DI1(\CIC1Cos/d2_71_N_489_53 ), 
    .DI0(\CIC1Cos/d2_71_N_489_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11881 ), 
    .F0(\CIC1Cos/d2_71_N_489_52 ), .Q0(\CIC1Cos/d2_52 ), 
    .F1(\CIC1Cos/d2_71_N_489_53 ), .Q1(\CIC1Cos/d2_53 ), 
    .FCO(\CIC1Cos/n11882 ));
  CIC1Cos_SLICE_772 \CIC1Cos/SLICE_772 ( .D1(\CIC1Cos/d1_51 ), 
    .C1(\CIC1Cos/n4972 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_51 ), 
    .D0(\CIC1Cos/d1_50 ), .C0(\CIC1Cos/n4973 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_50 ), .DI1(\CIC1Cos/d2_71_N_489_51 ), 
    .DI0(\CIC1Cos/d2_71_N_489_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11880 ), 
    .F0(\CIC1Cos/d2_71_N_489_50 ), .Q0(\CIC1Cos/d2_50 ), 
    .F1(\CIC1Cos/d2_71_N_489_51 ), .Q1(\CIC1Cos/d2_51 ), 
    .FCO(\CIC1Cos/n11881 ));
  CIC1Cos_SLICE_773 \CIC1Cos/SLICE_773 ( .D1(\CIC1Cos/d2_47 ), 
    .C1(\CIC1Cos/n5128 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_47 ), 
    .D0(\CIC1Cos/d2_46 ), .C0(\CIC1Cos/n5129 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_46 ), .DI1(\CIC1Cos/d3_71_N_561_47 ), 
    .DI0(\CIC1Cos/d3_71_N_561_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11837 ), 
    .F0(\CIC1Cos/d3_71_N_561_46 ), .Q0(\CIC1Cos/d3_46 ), 
    .F1(\CIC1Cos/d3_71_N_561_47 ), .Q1(\CIC1Cos/d3_47 ), 
    .FCO(\CIC1Cos/n11838 ));
  CIC1Cos_SLICE_774 \CIC1Cos/SLICE_774 ( .D1(\CIC1Cos/d1_71 ), 
    .C1(\CIC1Cos/n4952 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_71 ), 
    .D0(\CIC1Cos/d1_70 ), .C0(\CIC1Cos/n4953 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_70 ), .DI1(\CIC1Cos/d2_71_N_489_71 ), 
    .DI0(\CIC1Cos/d2_71_N_489_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11890 ), 
    .F0(\CIC1Cos/d2_71_N_489_70 ), .Q0(\CIC1Cos/d2_70 ), 
    .F1(\CIC1Cos/d2_71_N_489_71 ), .Q1(\CIC1Cos/d2_71 ));
  CIC1Cos_SLICE_775 \CIC1Cos/SLICE_775 ( .D1(\CIC1Cos/d1_69 ), 
    .C1(\CIC1Cos/n4954 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_69 ), 
    .D0(\CIC1Cos/d1_68 ), .C0(\CIC1Cos/n4955 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_68 ), .DI1(\CIC1Cos/d2_71_N_489_69 ), 
    .DI0(\CIC1Cos/d2_71_N_489_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11889 ), 
    .F0(\CIC1Cos/d2_71_N_489_68 ), .Q0(\CIC1Cos/d2_68 ), 
    .F1(\CIC1Cos/d2_71_N_489_69 ), .Q1(\CIC1Cos/d2_69 ), 
    .FCO(\CIC1Cos/n11890 ));
  CIC1Cos_SLICE_776 \CIC1Cos/SLICE_776 ( .D1(\CIC1Cos/d1_65 ), 
    .C1(\CIC1Cos/n4958 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_65 ), 
    .D0(\CIC1Cos/d1_64 ), .C0(\CIC1Cos/n4959 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_64 ), .DI1(\CIC1Cos/d2_71_N_489_65 ), 
    .DI0(\CIC1Cos/d2_71_N_489_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11887 ), 
    .F0(\CIC1Cos/d2_71_N_489_64 ), .Q0(\CIC1Cos/d2_64 ), 
    .F1(\CIC1Cos/d2_71_N_489_65 ), .Q1(\CIC1Cos/d2_65 ), 
    .FCO(\CIC1Cos/n11888 ));
  CIC1Cos_SLICE_777 \CIC1Cos/SLICE_777 ( .D1(\CIC1Cos/d2_39 ), 
    .C1(\CIC1Cos/n5136 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_39 ), 
    .D0(\CIC1Cos/d2_38 ), .C0(\CIC1Cos/n5137 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_38 ), .DI1(\CIC1Cos/d3_71_N_561_39 ), 
    .DI0(\CIC1Cos/d3_71_N_561_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11833 ), 
    .F0(\CIC1Cos/d3_71_N_561_38 ), .Q0(\CIC1Cos/d3_38 ), 
    .F1(\CIC1Cos/d3_71_N_561_39 ), .Q1(\CIC1Cos/d3_39 ), 
    .FCO(\CIC1Cos/n11834 ));
  CIC1Cos_SLICE_778 \CIC1Cos/SLICE_778 ( .B1(\CIC1Cos/d4_67 ), 
    .A1(\CIC1Cos/d3_67 ), .B0(\CIC1Cos/d4_66 ), .A0(\CIC1Cos/d3_66 ), 
    .FCI(\CIC1Cos/n11825 ), .F0(\CIC1Cos/n5261 ), .F1(\CIC1Cos/n5260 ), 
    .FCO(\CIC1Cos/n11826 ));
  CIC1Cos_SLICE_779 \CIC1Cos/SLICE_779 ( .D1(\CIC1Cos/d3_45 ), 
    .C1(\CIC1Cos/n5282 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_45 ), 
    .D0(\CIC1Cos/d3_44 ), .C0(\CIC1Cos/n5283 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_44 ), .DI1(\CIC1Cos/d4_71_N_633_45 ), 
    .DI0(\CIC1Cos/d4_71_N_633_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11795 ), 
    .F0(\CIC1Cos/d4_71_N_633_44 ), .Q0(\CIC1Cos/d4_44 ), 
    .F1(\CIC1Cos/d4_71_N_633_45 ), .Q1(\CIC1Cos/d4_45 ), 
    .FCO(\CIC1Cos/n11796 ));
  CIC1Cos_SLICE_780 \CIC1Cos/SLICE_780 ( .B1(\CIC1Cos/d4_65 ), 
    .A1(\CIC1Cos/d3_65 ), .B0(\CIC1Cos/d4_64 ), .A0(\CIC1Cos/d3_64 ), 
    .FCI(\CIC1Cos/n11824 ), .F0(\CIC1Cos/n5263 ), .F1(\CIC1Cos/n5262 ), 
    .FCO(\CIC1Cos/n11825 ));
  CIC1Cos_SLICE_781 \CIC1Cos/SLICE_781 ( .D1(\CIC1Cos/d2_37 ), 
    .C1(\CIC1Cos/n5138 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_37 ), 
    .D0(\CIC1Cos/d2_36 ), .C0(\CIC1Cos/n5139 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_36 ), .DI1(\CIC1Cos/d3_71_N_561_37 ), 
    .DI0(\CIC1Cos/d3_71_N_561_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11832 ), 
    .F0(\CIC1Cos/d3_71_N_561_36 ), .Q0(\CIC1Cos/d3_36 ), 
    .F1(\CIC1Cos/d3_71_N_561_37 ), .Q1(\CIC1Cos/d3_37 ), 
    .FCO(\CIC1Cos/n11833 ));
  CIC1Cos_SLICE_782 \CIC1Cos/SLICE_782 ( .B1(\CIC1Cos/d_d_tmp_46 ), 
    .A1(\CIC1Cos/d_tmp_46 ), .B0(\CIC1Cos/d_d_tmp_45 ), 
    .A0(\CIC1Cos/d_tmp_45 ), .FCI(\CIC1Cos/n11435 ), .F0(\CIC1Cos/n6194 ), 
    .F1(\CIC1Cos/n6193 ), .FCO(\CIC1Cos/n11436 ));
  CIC1Cos_SLICE_783 \CIC1Cos/SLICE_783 ( .B1(\CIC1Cos/d4_63 ), 
    .A1(\CIC1Cos/d3_63 ), .B0(\CIC1Cos/d4_62 ), .A0(\CIC1Cos/d3_62 ), 
    .FCI(\CIC1Cos/n11823 ), .F0(\CIC1Cos/n5265 ), .F1(\CIC1Cos/n5264 ), 
    .FCO(\CIC1Cos/n11824 ));
  CIC1Cos_SLICE_784 \CIC1Cos/SLICE_784 ( .A1(\CIC1Cos/n5102 ), 
    .FCO(\CIC1Cos/n11832 ));
  CIC1Cos_SLICE_785 \CIC1Cos/SLICE_785 ( .D1(\CIC1Cos/d2_45 ), 
    .C1(\CIC1Cos/n5130 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_45 ), 
    .D0(\CIC1Cos/d2_44 ), .C0(\CIC1Cos/n5131 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_44 ), .DI1(\CIC1Cos/d3_71_N_561_45 ), 
    .DI0(\CIC1Cos/d3_71_N_561_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11836 ), 
    .F0(\CIC1Cos/d3_71_N_561_44 ), .Q0(\CIC1Cos/d3_44 ), 
    .F1(\CIC1Cos/d3_71_N_561_45 ), .Q1(\CIC1Cos/d3_45 ), 
    .FCO(\CIC1Cos/n11837 ));
  CIC1Cos_SLICE_786 \CIC1Cos/SLICE_786 ( .B1(\CIC1Cos/d4_59 ), 
    .A1(\CIC1Cos/d3_59 ), .B0(\CIC1Cos/d4_58 ), .A0(\CIC1Cos/d3_58 ), 
    .FCI(\CIC1Cos/n11821 ), .F0(\CIC1Cos/n5269 ), .F1(\CIC1Cos/n5268 ), 
    .FCO(\CIC1Cos/n11822 ));
  CIC1Cos_SLICE_787 \CIC1Cos/SLICE_787 ( .B1(\CIC1Cos/d4_57 ), 
    .A1(\CIC1Cos/d3_57 ), .B0(\CIC1Cos/d4_56 ), .A0(\CIC1Cos/d3_56 ), 
    .FCI(\CIC1Cos/n11820 ), .F0(\CIC1Cos/n5271 ), .F1(\CIC1Cos/n5270 ), 
    .FCO(\CIC1Cos/n11821 ));
  CIC1Cos_SLICE_788 \CIC1Cos/SLICE_788 ( .B1(\CIC1Cos/d4_55 ), 
    .A1(\CIC1Cos/d3_55 ), .B0(\CIC1Cos/d4_54 ), .A0(\CIC1Cos/d3_54 ), 
    .FCI(\CIC1Cos/n11819 ), .F0(\CIC1Cos/n5273 ), .F1(\CIC1Cos/n5272 ), 
    .FCO(\CIC1Cos/n11820 ));
  CIC1Cos_SLICE_789 \CIC1Cos/SLICE_789 ( .B1(\CIC1Cos/d4_53 ), 
    .A1(\CIC1Cos/d3_53 ), .B0(\CIC1Cos/d4_52 ), .A0(\CIC1Cos/d3_52 ), 
    .FCI(\CIC1Cos/n11818 ), .F0(\CIC1Cos/n5275 ), .F1(\CIC1Cos/n5274 ), 
    .FCO(\CIC1Cos/n11819 ));
  CIC1Cos_SLICE_790 \CIC1Cos/SLICE_790 ( .B1(\CIC1Cos/d4_47 ), 
    .A1(\CIC1Cos/d3_47 ), .B0(\CIC1Cos/d4_46 ), .A0(\CIC1Cos/d3_46 ), 
    .FCI(\CIC1Cos/n11815 ), .F0(\CIC1Cos/n5281 ), .F1(\CIC1Cos/n5280 ), 
    .FCO(\CIC1Cos/n11816 ));
  CIC1Cos_SLICE_791 \CIC1Cos/SLICE_791 ( .B1(\CIC1Cos/d4_41 ), 
    .A1(\CIC1Cos/d3_41 ), .B0(\CIC1Cos/d4_40 ), .A0(\CIC1Cos/d3_40 ), 
    .FCI(\CIC1Cos/n11812 ), .F0(\CIC1Cos/n5287 ), .F1(\CIC1Cos/n5286 ), 
    .FCO(\CIC1Cos/n11813 ));
  CIC1Cos_SLICE_792 \CIC1Cos/SLICE_792 ( .D1(\CIC1Cos/d3_43 ), 
    .C1(\CIC1Cos/n5284 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_43 ), 
    .D0(\CIC1Cos/d3_42 ), .C0(\CIC1Cos/n5285 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_42 ), .DI1(\CIC1Cos/d4_71_N_633_43 ), 
    .DI0(\CIC1Cos/d4_71_N_633_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11794 ), 
    .F0(\CIC1Cos/d4_71_N_633_42 ), .Q0(\CIC1Cos/d4_42 ), 
    .F1(\CIC1Cos/d4_71_N_633_43 ), .Q1(\CIC1Cos/d4_43 ), 
    .FCO(\CIC1Cos/n11795 ));
  CIC1Cos_SLICE_793 \CIC1Cos/SLICE_793 ( .B1(\CIC1Cos/d4_45 ), 
    .A1(\CIC1Cos/d3_45 ), .B0(\CIC1Cos/d4_44 ), .A0(\CIC1Cos/d3_44 ), 
    .FCI(\CIC1Cos/n11814 ), .F0(\CIC1Cos/n5283 ), .F1(\CIC1Cos/n5282 ), 
    .FCO(\CIC1Cos/n11815 ));
  CIC1Cos_SLICE_794 \CIC1Cos/SLICE_794 ( .B1(\CIC1Cos/d4_51 ), 
    .A1(\CIC1Cos/d3_51 ), .B0(\CIC1Cos/d4_50 ), .A0(\CIC1Cos/d3_50 ), 
    .FCI(\CIC1Cos/n11817 ), .F0(\CIC1Cos/n5277 ), .F1(\CIC1Cos/n5276 ), 
    .FCO(\CIC1Cos/n11818 ));
  CIC1Cos_SLICE_795 \CIC1Cos/SLICE_795 ( .B1(\CIC1Cos/d4_43 ), 
    .A1(\CIC1Cos/d3_43 ), .B0(\CIC1Cos/d4_42 ), .A0(\CIC1Cos/d3_42 ), 
    .FCI(\CIC1Cos/n11813 ), .F0(\CIC1Cos/n5285 ), .F1(\CIC1Cos/n5284 ), 
    .FCO(\CIC1Cos/n11814 ));
  CIC1Cos_SLICE_796 \CIC1Cos/SLICE_796 ( .B1(\CIC1Cos/d4_39 ), 
    .A1(\CIC1Cos/d3_39 ), .B0(\CIC1Cos/d4_38 ), .A0(\CIC1Cos/d3_38 ), 
    .FCI(\CIC1Cos/n11811 ), .F0(\CIC1Cos/n5289 ), .F1(\CIC1Cos/n5288 ), 
    .FCO(\CIC1Cos/n11812 ));
  CIC1Cos_SLICE_797 \CIC1Cos/SLICE_797 ( .B1(\CIC1Cos/d4_49 ), 
    .A1(\CIC1Cos/d3_49 ), .B0(\CIC1Cos/d4_48 ), .A0(\CIC1Cos/d3_48 ), 
    .FCI(\CIC1Cos/n11816 ), .F0(\CIC1Cos/n5279 ), .F1(\CIC1Cos/n5278 ), 
    .FCO(\CIC1Cos/n11817 ));
  CIC1Cos_SLICE_798 \CIC1Cos/SLICE_798 ( .D1(\CIC1Cos/d3_41 ), 
    .C1(\CIC1Cos/n5286 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_41 ), 
    .D0(\CIC1Cos/d3_40 ), .C0(\CIC1Cos/n5287 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_40 ), .DI1(\CIC1Cos/d4_71_N_633_41 ), 
    .DI0(\CIC1Cos/d4_71_N_633_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11793 ), 
    .F0(\CIC1Cos/d4_71_N_633_40 ), .Q0(\CIC1Cos/d4_40 ), 
    .F1(\CIC1Cos/d4_71_N_633_41 ), .Q1(\CIC1Cos/d4_41 ), 
    .FCO(\CIC1Cos/n11794 ));
  CIC1Cos_SLICE_799 \CIC1Cos/SLICE_799 ( .B1(\CIC1Cos/d4_61 ), 
    .A1(\CIC1Cos/d3_61 ), .B0(\CIC1Cos/d4_60 ), .A0(\CIC1Cos/d3_60 ), 
    .FCI(\CIC1Cos/n11822 ), .F0(\CIC1Cos/n5267 ), .F1(\CIC1Cos/n5266 ), 
    .FCO(\CIC1Cos/n11823 ));
  CIC1Cos_SLICE_800 \CIC1Cos/SLICE_800 ( .B1(\CIC1Cos/d4_71 ), 
    .A1(\CIC1Cos/d3_71 ), .B0(\CIC1Cos/d4_70 ), .A0(\CIC1Cos/d3_70 ), 
    .FCI(\CIC1Cos/n11827 ), .F0(\CIC1Cos/n5257 ), .F1(\CIC1Cos/n5256 ));
  CIC1Cos_SLICE_801 \CIC1Cos/SLICE_801 ( .D1(\CIC1Cos/d3_39 ), 
    .C1(\CIC1Cos/n5288 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_39 ), 
    .D0(\CIC1Cos/d3_38 ), .C0(\CIC1Cos/n5289 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_38 ), .DI1(\CIC1Cos/d4_71_N_633_39 ), 
    .DI0(\CIC1Cos/d4_71_N_633_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11792 ), 
    .F0(\CIC1Cos/d4_71_N_633_38 ), .Q0(\CIC1Cos/d4_38 ), 
    .F1(\CIC1Cos/d4_71_N_633_39 ), .Q1(\CIC1Cos/d4_39 ), 
    .FCO(\CIC1Cos/n11793 ));
  CIC1Cos_SLICE_802 \CIC1Cos/SLICE_802 ( .D1(\CIC1Cos/d2_43 ), 
    .C1(\CIC1Cos/n5132 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_43 ), 
    .D0(\CIC1Cos/d2_42 ), .C0(\CIC1Cos/n5133 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_42 ), .DI1(\CIC1Cos/d3_71_N_561_43 ), 
    .DI0(\CIC1Cos/d3_71_N_561_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11835 ), 
    .F0(\CIC1Cos/d3_71_N_561_42 ), .Q0(\CIC1Cos/d3_42 ), 
    .F1(\CIC1Cos/d3_71_N_561_43 ), .Q1(\CIC1Cos/d3_43 ), 
    .FCO(\CIC1Cos/n11836 ));
  CIC1Cos_SLICE_803 \CIC1Cos/SLICE_803 ( .B1(\CIC1Cos/d_d_tmp_44 ), 
    .A1(\CIC1Cos/d_tmp_44 ), .B0(\CIC1Cos/d_d_tmp_43 ), 
    .A0(\CIC1Cos/d_tmp_43 ), .FCI(\CIC1Cos/n11434 ), .F0(\CIC1Cos/n6196 ), 
    .F1(\CIC1Cos/n6195 ), .FCO(\CIC1Cos/n11435 ));
  CIC1Cos_SLICE_804 \CIC1Cos/SLICE_804 ( .B1(\CIC1Cos/d_d_tmp_42 ), 
    .A1(\CIC1Cos/d_tmp_42 ), .B0(\CIC1Cos/d_d_tmp_41 ), 
    .A0(\CIC1Cos/d_tmp_41 ), .FCI(\CIC1Cos/n11433 ), .F0(\CIC1Cos/n6198 ), 
    .F1(\CIC1Cos/n6197 ), .FCO(\CIC1Cos/n11434 ));
  CIC1Cos_SLICE_805 \CIC1Cos/SLICE_805 ( .B1(\CIC1Cos/d4_69 ), 
    .A1(\CIC1Cos/d3_69 ), .B0(\CIC1Cos/d4_68 ), .A0(\CIC1Cos/d3_68 ), 
    .FCI(\CIC1Cos/n11826 ), .F0(\CIC1Cos/n5259 ), .F1(\CIC1Cos/n5258 ), 
    .FCO(\CIC1Cos/n11827 ));
  CIC1Cos_SLICE_806 \CIC1Cos/SLICE_806 ( .D1(\CIC1Cos/d2_41 ), 
    .C1(\CIC1Cos/n5134 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_41 ), 
    .D0(\CIC1Cos/d2_40 ), .C0(\CIC1Cos/n5135 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_40 ), .DI1(\CIC1Cos/d3_71_N_561_41 ), 
    .DI0(\CIC1Cos/d3_71_N_561_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11834 ), 
    .F0(\CIC1Cos/d3_71_N_561_40 ), .Q0(\CIC1Cos/d3_40 ), 
    .F1(\CIC1Cos/d3_71_N_561_41 ), .Q1(\CIC1Cos/d3_41 ), 
    .FCO(\CIC1Cos/n11835 ));
  CIC1Cos_SLICE_807 \CIC1Cos/SLICE_807 ( .B1(\CIC1Cos/d_d_tmp_40 ), 
    .A1(\CIC1Cos/d_tmp_40 ), .B0(\CIC1Cos/d_d_tmp_39 ), 
    .A0(\CIC1Cos/d_tmp_39 ), .FCI(\CIC1Cos/n11432 ), .F0(\CIC1Cos/n6200 ), 
    .F1(\CIC1Cos/n6199 ), .FCO(\CIC1Cos/n11433 ));
  CIC1Cos_SLICE_808 \CIC1Cos/SLICE_808 ( .B1(\CIC1Cos/d_d_tmp_38 ), 
    .A1(\CIC1Cos/d_tmp_38 ), .B0(\CIC1Cos/d_d_tmp_37 ), 
    .A0(\CIC1Cos/d_tmp_37 ), .FCI(\CIC1Cos/n11431 ), .F0(\CIC1Cos/n6202 ), 
    .F1(\CIC1Cos/n6201 ), .FCO(\CIC1Cos/n11432 ));
  CIC1Cos_SLICE_809 \CIC1Cos/SLICE_809 ( .B1(\CIC1Cos/d4_37 ), 
    .A1(\CIC1Cos/d3_37 ), .B0(\CIC1Cos/d4_36 ), .A0(\CIC1Cos/d3_36 ), 
    .F1(\CIC1Cos/n5290 ), .FCO(\CIC1Cos/n11811 ));
  CIC1Cos_SLICE_810 \CIC1Cos/SLICE_810 ( .D1(\CIC1Cos/d3_37 ), 
    .C1(\CIC1Cos/n5290 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_37 ), 
    .D0(\CIC1Cos/d3_36 ), .C0(\CIC1Cos/n5291 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_36 ), .DI1(\CIC1Cos/d4_71_N_633_37 ), 
    .DI0(\CIC1Cos/d4_71_N_633_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11791 ), 
    .F0(\CIC1Cos/d4_71_N_633_36 ), .Q0(\CIC1Cos/d4_36 ), 
    .F1(\CIC1Cos/d4_71_N_633_37 ), .Q1(\CIC1Cos/d4_37 ), 
    .FCO(\CIC1Cos/n11792 ));
  CIC1Cos_SLICE_811 \CIC1Cos/SLICE_811 ( .A1(\CIC1Cos/n5254 ), 
    .FCO(\CIC1Cos/n11791 ));
  CIC1Cos_SLICE_812 \CIC1Cos/SLICE_812 ( .B1(\CIC1Cos/d5_71 ), 
    .A1(\CIC1Cos/d4_71 ), .B0(\CIC1Cos/d5_70 ), .A0(\CIC1Cos/d4_70 ), 
    .FCI(\CIC1Cos/n11786 ), .F0(\CIC1Cos/n5409 ), .F1(\CIC1Cos/n5408 ));
  CIC1Cos_SLICE_813 \CIC1Cos/SLICE_813 ( .B1(\CIC1Cos/d5_69 ), 
    .A1(\CIC1Cos/d4_69 ), .B0(\CIC1Cos/d5_68 ), .A0(\CIC1Cos/d4_68 ), 
    .FCI(\CIC1Cos/n11785 ), .F0(\CIC1Cos/n5411 ), .F1(\CIC1Cos/n5410 ), 
    .FCO(\CIC1Cos/n11786 ));
  CIC1Cos_SLICE_814 \CIC1Cos/SLICE_814 ( .D1(\CIC1Cos/d3_65 ), 
    .C1(\CIC1Cos/n5262 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_65 ), 
    .D0(\CIC1Cos/d3_64 ), .C0(\CIC1Cos/n5263 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_64 ), .DI1(\CIC1Cos/d4_71_N_633_65 ), 
    .DI0(\CIC1Cos/d4_71_N_633_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11805 ), 
    .F0(\CIC1Cos/d4_71_N_633_64 ), .Q0(\CIC1Cos/d4_64 ), 
    .F1(\CIC1Cos/d4_71_N_633_65 ), .Q1(\CIC1Cos/d4_65 ), 
    .FCO(\CIC1Cos/n11806 ));
  CIC1Cos_SLICE_815 \CIC1Cos/SLICE_815 ( .D1(\CIC1Cos/d3_53 ), 
    .C1(\CIC1Cos/n5274 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_53 ), 
    .D0(\CIC1Cos/d3_52 ), .C0(\CIC1Cos/n5275 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_52 ), .DI1(\CIC1Cos/d4_71_N_633_53 ), 
    .DI0(\CIC1Cos/d4_71_N_633_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11799 ), 
    .F0(\CIC1Cos/d4_71_N_633_52 ), .Q0(\CIC1Cos/d4_52 ), 
    .F1(\CIC1Cos/d4_71_N_633_53 ), .Q1(\CIC1Cos/d4_53 ), 
    .FCO(\CIC1Cos/n11800 ));
  CIC1Cos_SLICE_816 \CIC1Cos/SLICE_816 ( .B1(\CIC1Cos/d5_67 ), 
    .A1(\CIC1Cos/d4_67 ), .B0(\CIC1Cos/d5_66 ), .A0(\CIC1Cos/d4_66 ), 
    .FCI(\CIC1Cos/n11784 ), .F0(\CIC1Cos/n5413 ), .F1(\CIC1Cos/n5412 ), 
    .FCO(\CIC1Cos/n11785 ));
  CIC1Cos_SLICE_817 \CIC1Cos/SLICE_817 ( .D1(\CIC1Cos/d3_51 ), 
    .C1(\CIC1Cos/n5276 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_51 ), 
    .D0(\CIC1Cos/d3_50 ), .C0(\CIC1Cos/n5277 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_50 ), .DI1(\CIC1Cos/d4_71_N_633_51 ), 
    .DI0(\CIC1Cos/d4_71_N_633_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11798 ), 
    .F0(\CIC1Cos/d4_71_N_633_50 ), .Q0(\CIC1Cos/d4_50 ), 
    .F1(\CIC1Cos/d4_71_N_633_51 ), .Q1(\CIC1Cos/d4_51 ), 
    .FCO(\CIC1Cos/n11799 ));
  CIC1Cos_SLICE_818 \CIC1Cos/SLICE_818 ( .D1(\CIC1Cos/d3_63 ), 
    .C1(\CIC1Cos/n5264 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_63 ), 
    .D0(\CIC1Cos/d3_62 ), .C0(\CIC1Cos/n5265 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_62 ), .DI1(\CIC1Cos/d4_71_N_633_63 ), 
    .DI0(\CIC1Cos/d4_71_N_633_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11804 ), 
    .F0(\CIC1Cos/d4_71_N_633_62 ), .Q0(\CIC1Cos/d4_62 ), 
    .F1(\CIC1Cos/d4_71_N_633_63 ), .Q1(\CIC1Cos/d4_63 ), 
    .FCO(\CIC1Cos/n11805 ));
  CIC1Cos_SLICE_819 \CIC1Cos/SLICE_819 ( .D1(\CIC1Cos/d3_49 ), 
    .C1(\CIC1Cos/n5278 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_49 ), 
    .D0(\CIC1Cos/d3_48 ), .C0(\CIC1Cos/n5279 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_48 ), .DI1(\CIC1Cos/d4_71_N_633_49 ), 
    .DI0(\CIC1Cos/d4_71_N_633_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11797 ), 
    .F0(\CIC1Cos/d4_71_N_633_48 ), .Q0(\CIC1Cos/d4_48 ), 
    .F1(\CIC1Cos/d4_71_N_633_49 ), .Q1(\CIC1Cos/d4_49 ), 
    .FCO(\CIC1Cos/n11798 ));
  CIC1Cos_SLICE_820 \CIC1Cos/SLICE_820 ( .D1(\CIC1Cos/d3_61 ), 
    .C1(\CIC1Cos/n5266 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_61 ), 
    .D0(\CIC1Cos/d3_60 ), .C0(\CIC1Cos/n5267 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_60 ), .DI1(\CIC1Cos/d4_71_N_633_61 ), 
    .DI0(\CIC1Cos/d4_71_N_633_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11803 ), 
    .F0(\CIC1Cos/d4_71_N_633_60 ), .Q0(\CIC1Cos/d4_60 ), 
    .F1(\CIC1Cos/d4_71_N_633_61 ), .Q1(\CIC1Cos/d4_61 ), 
    .FCO(\CIC1Cos/n11804 ));
  CIC1Cos_SLICE_821 \CIC1Cos/SLICE_821 ( .D1(\CIC1Cos/d3_71 ), 
    .C1(\CIC1Cos/n5256 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_71 ), 
    .D0(\CIC1Cos/d3_70 ), .C0(\CIC1Cos/n5257 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_70 ), .DI1(\CIC1Cos/d4_71_N_633_71 ), 
    .DI0(\CIC1Cos/d4_71_N_633_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11808 ), 
    .F0(\CIC1Cos/d4_71_N_633_70 ), .Q0(\CIC1Cos/d4_70 ), 
    .F1(\CIC1Cos/d4_71_N_633_71 ), .Q1(\CIC1Cos/d4_71 ));
  CIC1Cos_SLICE_822 \CIC1Cos/SLICE_822 ( .D1(\CIC1Cos/d3_59 ), 
    .C1(\CIC1Cos/n5268 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_59 ), 
    .D0(\CIC1Cos/d3_58 ), .C0(\CIC1Cos/n5269 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_58 ), .DI1(\CIC1Cos/d4_71_N_633_59 ), 
    .DI0(\CIC1Cos/d4_71_N_633_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11802 ), 
    .F0(\CIC1Cos/d4_71_N_633_58 ), .Q0(\CIC1Cos/d4_58 ), 
    .F1(\CIC1Cos/d4_71_N_633_59 ), .Q1(\CIC1Cos/d4_59 ), 
    .FCO(\CIC1Cos/n11803 ));
  CIC1Cos_SLICE_823 \CIC1Cos/SLICE_823 ( .D1(\CIC1Cos/d3_47 ), 
    .C1(\CIC1Cos/n5280 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_47 ), 
    .D0(\CIC1Cos/d3_46 ), .C0(\CIC1Cos/n5281 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_46 ), .DI1(\CIC1Cos/d4_71_N_633_47 ), 
    .DI0(\CIC1Cos/d4_71_N_633_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11796 ), 
    .F0(\CIC1Cos/d4_71_N_633_46 ), .Q0(\CIC1Cos/d4_46 ), 
    .F1(\CIC1Cos/d4_71_N_633_47 ), .Q1(\CIC1Cos/d4_47 ), 
    .FCO(\CIC1Cos/n11797 ));
  CIC1Cos_SLICE_824 \CIC1Cos/SLICE_824 ( .D1(\CIC1Cos/d3_57 ), 
    .C1(\CIC1Cos/n5270 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_57 ), 
    .D0(\CIC1Cos/d3_56 ), .C0(\CIC1Cos/n5271 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_56 ), .DI1(\CIC1Cos/d4_71_N_633_57 ), 
    .DI0(\CIC1Cos/d4_71_N_633_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11801 ), 
    .F0(\CIC1Cos/d4_71_N_633_56 ), .Q0(\CIC1Cos/d4_56 ), 
    .F1(\CIC1Cos/d4_71_N_633_57 ), .Q1(\CIC1Cos/d4_57 ), 
    .FCO(\CIC1Cos/n11802 ));
  CIC1Cos_SLICE_825 \CIC1Cos/SLICE_825 ( .D1(\CIC1Cos/d3_69 ), 
    .C1(\CIC1Cos/n5258 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_69 ), 
    .D0(\CIC1Cos/d3_68 ), .C0(\CIC1Cos/n5259 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_68 ), .DI1(\CIC1Cos/d4_71_N_633_69 ), 
    .DI0(\CIC1Cos/d4_71_N_633_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11807 ), 
    .F0(\CIC1Cos/d4_71_N_633_68 ), .Q0(\CIC1Cos/d4_68 ), 
    .F1(\CIC1Cos/d4_71_N_633_69 ), .Q1(\CIC1Cos/d4_69 ), 
    .FCO(\CIC1Cos/n11808 ));
  CIC1Cos_SLICE_826 \CIC1Cos/SLICE_826 ( .D1(\CIC1Cos/d3_55 ), 
    .C1(\CIC1Cos/n5272 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_55 ), 
    .D0(\CIC1Cos/d3_54 ), .C0(\CIC1Cos/n5273 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_54 ), .DI1(\CIC1Cos/d4_71_N_633_55 ), 
    .DI0(\CIC1Cos/d4_71_N_633_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11800 ), 
    .F0(\CIC1Cos/d4_71_N_633_54 ), .Q0(\CIC1Cos/d4_54 ), 
    .F1(\CIC1Cos/d4_71_N_633_55 ), .Q1(\CIC1Cos/d4_55 ), 
    .FCO(\CIC1Cos/n11801 ));
  CIC1Cos_SLICE_827 \CIC1Cos/SLICE_827 ( .D1(\CIC1Cos/d3_67 ), 
    .C1(\CIC1Cos/n5260 ), .B1(\CIC1Cos/n5254 ), .A1(\CIC1Cos/d4_67 ), 
    .D0(\CIC1Cos/d3_66 ), .C0(\CIC1Cos/n5261 ), .B0(\CIC1Cos/n5254 ), 
    .A0(\CIC1Cos/d4_66 ), .DI1(\CIC1Cos/d4_71_N_633_67 ), 
    .DI0(\CIC1Cos/d4_71_N_633_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11806 ), 
    .F0(\CIC1Cos/d4_71_N_633_66 ), .Q0(\CIC1Cos/d4_66 ), 
    .F1(\CIC1Cos/d4_71_N_633_67 ), .Q1(\CIC1Cos/d4_67 ), 
    .FCO(\CIC1Cos/n11807 ));
  CIC1Cos_SLICE_828 \CIC1Cos/SLICE_828 ( .D1(\CIC1Cos/d1_49 ), 
    .C1(\CIC1Cos/n4974 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_49 ), 
    .D0(\CIC1Cos/d1_48 ), .C0(\CIC1Cos/n4975 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_48 ), .DI1(\CIC1Cos/d2_71_N_489_49 ), 
    .DI0(\CIC1Cos/d2_71_N_489_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11879 ), 
    .F0(\CIC1Cos/d2_71_N_489_48 ), .Q0(\CIC1Cos/d2_48 ), 
    .F1(\CIC1Cos/d2_71_N_489_49 ), .Q1(\CIC1Cos/d2_49 ), 
    .FCO(\CIC1Cos/n11880 ));
  CIC1Cos_SLICE_829 \CIC1Cos/SLICE_829 ( .D1(\CIC1Cos/d1_47 ), 
    .C1(\CIC1Cos/n4976 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_47 ), 
    .D0(\CIC1Cos/d1_46 ), .C0(\CIC1Cos/n4977 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_46 ), .DI1(\CIC1Cos/d2_71_N_489_47 ), 
    .DI0(\CIC1Cos/d2_71_N_489_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11878 ), 
    .F0(\CIC1Cos/d2_71_N_489_46 ), .Q0(\CIC1Cos/d2_46 ), 
    .F1(\CIC1Cos/d2_71_N_489_47 ), .Q1(\CIC1Cos/d2_47 ), 
    .FCO(\CIC1Cos/n11879 ));
  CIC1Cos_SLICE_830 \CIC1Cos/SLICE_830 ( .B1(\CIC1Cos/d5_65 ), 
    .A1(\CIC1Cos/d4_65 ), .B0(\CIC1Cos/d5_64 ), .A0(\CIC1Cos/d4_64 ), 
    .FCI(\CIC1Cos/n11783 ), .F0(\CIC1Cos/n5415 ), .F1(\CIC1Cos/n5414 ), 
    .FCO(\CIC1Cos/n11784 ));
  CIC1Cos_SLICE_831 \CIC1Cos/SLICE_831 ( .D1(\CIC1Cos/d1_45 ), 
    .C1(\CIC1Cos/n4978 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_45 ), 
    .D0(\CIC1Cos/d1_44 ), .C0(\CIC1Cos/n4979 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_44 ), .DI1(\CIC1Cos/d2_71_N_489_45 ), 
    .DI0(\CIC1Cos/d2_71_N_489_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11877 ), 
    .F0(\CIC1Cos/d2_71_N_489_44 ), .Q0(\CIC1Cos/d2_44 ), 
    .F1(\CIC1Cos/d2_71_N_489_45 ), .Q1(\CIC1Cos/d2_45 ), 
    .FCO(\CIC1Cos/n11878 ));
  CIC1Cos_SLICE_832 \CIC1Cos/SLICE_832 ( .D1(\CIC1Cos/d2_49 ), 
    .C1(\CIC1Cos/n5126 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_49 ), 
    .D0(\CIC1Cos/d2_48 ), .C0(\CIC1Cos/n5127 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_48 ), .DI1(\CIC1Cos/d3_71_N_561_49 ), 
    .DI0(\CIC1Cos/d3_71_N_561_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11838 ), 
    .F0(\CIC1Cos/d3_71_N_561_48 ), .Q0(\CIC1Cos/d3_48 ), 
    .F1(\CIC1Cos/d3_71_N_561_49 ), .Q1(\CIC1Cos/d3_49 ), 
    .FCO(\CIC1Cos/n11839 ));
  CIC1Cos_SLICE_833 \CIC1Cos/SLICE_833 ( .D1(\CIC1Cos/d1_41 ), 
    .C1(\CIC1Cos/n4982 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_41 ), 
    .D0(\CIC1Cos/d1_40 ), .C0(\CIC1Cos/n4983 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_40 ), .DI1(\CIC1Cos/d2_71_N_489_41 ), 
    .DI0(\CIC1Cos/d2_71_N_489_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11875 ), 
    .F0(\CIC1Cos/d2_71_N_489_40 ), .Q0(\CIC1Cos/d2_40 ), 
    .F1(\CIC1Cos/d2_71_N_489_41 ), .Q1(\CIC1Cos/d2_41 ), 
    .FCO(\CIC1Cos/n11876 ));
  CIC1Cos_SLICE_834 \CIC1Cos/SLICE_834 ( .D1(\CIC1Cos/d1_37 ), 
    .C1(\CIC1Cos/n4986 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_37 ), 
    .D0(\CIC1Cos/d1_36 ), .C0(\CIC1Cos/n4987 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_36 ), .DI1(\CIC1Cos/d2_71_N_489_37 ), 
    .DI0(\CIC1Cos/d2_71_N_489_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11873 ), 
    .F0(\CIC1Cos/d2_71_N_489_36 ), .Q0(\CIC1Cos/d2_36 ), 
    .F1(\CIC1Cos/d2_71_N_489_37 ), .Q1(\CIC1Cos/d2_37 ), 
    .FCO(\CIC1Cos/n11874 ));
  CIC1Cos_SLICE_835 \CIC1Cos/SLICE_835 ( .B1(\CIC1Cos/d_d_tmp_36 ), 
    .A1(\CIC1Cos/d_tmp_36 ), .F1(\CIC1Cos/n6203 ), .FCO(\CIC1Cos/n11431 ));
  CIC1Cos_SLICE_836 \CIC1Cos/SLICE_836 ( .D1(\CIC1Cos/d_tmp_71 ), 
    .C1(\CIC1Cos/n6168 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_71 ), 
    .D0(\CIC1Cos/d_tmp_70 ), .C0(\CIC1Cos/n6169 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_70 ), .DI1(\CIC1Cos/d6_71_N_1458_71 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_70 ), .CE(\CIC1Cos/osc_clk_enable_933 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11429 ), .F0(\CIC1Cos/d6_71_N_1458_70 ), 
    .Q0(\CIC1Cos/d6_70 ), .F1(\CIC1Cos/d6_71_N_1458_71 ), .Q1(\CIC1Cos/d6_71 ));
  CIC1Cos_SLICE_837 \CIC1Cos/SLICE_837 ( .D1(\CIC1Cos/d_tmp_69 ), 
    .C1(\CIC1Cos/n6170 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_69 ), 
    .D0(\CIC1Cos/d_tmp_68 ), .C0(\CIC1Cos/n6171 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_68 ), .DI1(\CIC1Cos/d6_71_N_1458_69 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_68 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11428 ), .F0(\CIC1Cos/d6_71_N_1458_68 ), 
    .Q0(\CIC1Cos/d6_68 ), .F1(\CIC1Cos/d6_71_N_1458_69 ), .Q1(\CIC1Cos/d6_69 ), 
    .FCO(\CIC1Cos/n11429 ));
  CIC1Cos_SLICE_838 \CIC1Cos/SLICE_838 ( .D1(\CIC1Cos/d_tmp_67 ), 
    .C1(\CIC1Cos/n6172 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_67 ), 
    .D0(\CIC1Cos/d_tmp_66 ), .C0(\CIC1Cos/n6173 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_66 ), .DI1(\CIC1Cos/d6_71_N_1458_67 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_66 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11427 ), .F0(\CIC1Cos/d6_71_N_1458_66 ), 
    .Q0(\CIC1Cos/d6_66 ), .F1(\CIC1Cos/d6_71_N_1458_67 ), .Q1(\CIC1Cos/d6_67 ), 
    .FCO(\CIC1Cos/n11428 ));
  CIC1Cos_SLICE_839 \CIC1Cos/SLICE_839 ( .D1(\CIC1Cos/d_tmp_65 ), 
    .C1(\CIC1Cos/n6174 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_65 ), 
    .D0(\CIC1Cos/d_tmp_64 ), .C0(\CIC1Cos/n6175 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_64 ), .DI1(\CIC1Cos/d6_71_N_1458_65 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_64 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11426 ), .F0(\CIC1Cos/d6_71_N_1458_64 ), 
    .Q0(\CIC1Cos/d6_64 ), .F1(\CIC1Cos/d6_71_N_1458_65 ), .Q1(\CIC1Cos/d6_65 ), 
    .FCO(\CIC1Cos/n11427 ));
  CIC1Cos_SLICE_840 \CIC1Cos/SLICE_840 ( .D1(\CIC1Cos/d_tmp_63 ), 
    .C1(\CIC1Cos/n6176 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_63 ), 
    .D0(\CIC1Cos/d_tmp_62 ), .C0(\CIC1Cos/n6177 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_62 ), .DI1(\CIC1Cos/d6_71_N_1458_63 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_62 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11425 ), .F0(\CIC1Cos/d6_71_N_1458_62 ), 
    .Q0(\CIC1Cos/d6_62 ), .F1(\CIC1Cos/d6_71_N_1458_63 ), .Q1(\CIC1Cos/d6_63 ), 
    .FCO(\CIC1Cos/n11426 ));
  CIC1Cos_SLICE_841 \CIC1Cos/SLICE_841 ( .D1(\CIC1Cos/d_tmp_61 ), 
    .C1(\CIC1Cos/n6178 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_61 ), 
    .D0(\CIC1Cos/d_tmp_60 ), .C0(\CIC1Cos/n6179 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_60 ), .DI1(\CIC1Cos/d6_71_N_1458_61 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_60 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11424 ), .F0(\CIC1Cos/d6_71_N_1458_60 ), 
    .Q0(\CIC1Cos/d6_60 ), .F1(\CIC1Cos/d6_71_N_1458_61 ), .Q1(\CIC1Cos/d6_61 ), 
    .FCO(\CIC1Cos/n11425 ));
  CIC1Cos_SLICE_842 \CIC1Cos/SLICE_842 ( .D1(\CIC1Cos/d_tmp_59 ), 
    .C1(\CIC1Cos/n6180 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_59 ), 
    .D0(\CIC1Cos/d_tmp_58 ), .C0(\CIC1Cos/n6181 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_58 ), .DI1(\CIC1Cos/d6_71_N_1458_59 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_58 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11423 ), .F0(\CIC1Cos/d6_71_N_1458_58 ), 
    .Q0(\CIC1Cos/d6_58 ), .F1(\CIC1Cos/d6_71_N_1458_59 ), .Q1(\CIC1Cos/d6_59 ), 
    .FCO(\CIC1Cos/n11424 ));
  CIC1Cos_SLICE_843 \CIC1Cos/SLICE_843 ( .D1(\CIC1Cos/d_tmp_57 ), 
    .C1(\CIC1Cos/n6182 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_57 ), 
    .D0(\CIC1Cos/d_tmp_56 ), .C0(\CIC1Cos/n6183 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_56 ), .DI1(\CIC1Cos/d6_71_N_1458_57 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_56 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11422 ), .F0(\CIC1Cos/d6_71_N_1458_56 ), 
    .Q0(\CIC1Cos/d6_56 ), .F1(\CIC1Cos/d6_71_N_1458_57 ), .Q1(\CIC1Cos/d6_57 ), 
    .FCO(\CIC1Cos/n11423 ));
  CIC1Cos_SLICE_844 \CIC1Cos/SLICE_844 ( .D1(\CIC1Cos/d_tmp_55 ), 
    .C1(\CIC1Cos/n6184 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_55 ), 
    .D0(\CIC1Cos/d_tmp_54 ), .C0(\CIC1Cos/n6185 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_54 ), .DI1(\CIC1Cos/d6_71_N_1458_55 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_54 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11421 ), .F0(\CIC1Cos/d6_71_N_1458_54 ), 
    .Q0(\CIC1Cos/d6_54 ), .F1(\CIC1Cos/d6_71_N_1458_55 ), .Q1(\CIC1Cos/d6_55 ), 
    .FCO(\CIC1Cos/n11422 ));
  CIC1Cos_SLICE_845 \CIC1Cos/SLICE_845 ( .D1(\CIC1Cos/d_tmp_53 ), 
    .C1(\CIC1Cos/n6186 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_53 ), 
    .D0(\CIC1Cos/d_tmp_52 ), .C0(\CIC1Cos/n6187 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_52 ), .DI1(\CIC1Cos/d6_71_N_1458_53 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_52 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11420 ), .F0(\CIC1Cos/d6_71_N_1458_52 ), 
    .Q0(\CIC1Cos/d6_52 ), .F1(\CIC1Cos/d6_71_N_1458_53 ), .Q1(\CIC1Cos/d6_53 ), 
    .FCO(\CIC1Cos/n11421 ));
  CIC1Cos_SLICE_846 \CIC1Cos/SLICE_846 ( .D1(\CIC1Cos/d_tmp_51 ), 
    .C1(\CIC1Cos/n6188 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_51 ), 
    .D0(\CIC1Cos/d_tmp_50 ), .C0(\CIC1Cos/n6189 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_50 ), .DI1(\CIC1Cos/d6_71_N_1458_51 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_50 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11419 ), .F0(\CIC1Cos/d6_71_N_1458_50 ), 
    .Q0(\CIC1Cos/d6_50 ), .F1(\CIC1Cos/d6_71_N_1458_51 ), .Q1(\CIC1Cos/d6_51 ), 
    .FCO(\CIC1Cos/n11420 ));
  CIC1Cos_SLICE_847 \CIC1Cos/SLICE_847 ( .B1(\CIC1Cos/d5_63 ), 
    .A1(\CIC1Cos/d4_63 ), .B0(\CIC1Cos/d5_62 ), .A0(\CIC1Cos/d4_62 ), 
    .FCI(\CIC1Cos/n11782 ), .F0(\CIC1Cos/n5417 ), .F1(\CIC1Cos/n5416 ), 
    .FCO(\CIC1Cos/n11783 ));
  CIC1Cos_SLICE_848 \CIC1Cos/SLICE_848 ( .B1(\CIC1Cos/d5_61 ), 
    .A1(\CIC1Cos/d4_61 ), .B0(\CIC1Cos/d5_60 ), .A0(\CIC1Cos/d4_60 ), 
    .FCI(\CIC1Cos/n11781 ), .F0(\CIC1Cos/n5419 ), .F1(\CIC1Cos/n5418 ), 
    .FCO(\CIC1Cos/n11782 ));
  CIC1Cos_SLICE_849 \CIC1Cos/SLICE_849 ( .B1(\CIC1Cos/d5_59 ), 
    .A1(\CIC1Cos/d4_59 ), .B0(\CIC1Cos/d5_58 ), .A0(\CIC1Cos/d4_58 ), 
    .FCI(\CIC1Cos/n11780 ), .F0(\CIC1Cos/n5421 ), .F1(\CIC1Cos/n5420 ), 
    .FCO(\CIC1Cos/n11781 ));
  CIC1Cos_SLICE_850 \CIC1Cos/SLICE_850 ( .B1(\CIC1Cos/d5_57 ), 
    .A1(\CIC1Cos/d4_57 ), .B0(\CIC1Cos/d5_56 ), .A0(\CIC1Cos/d4_56 ), 
    .FCI(\CIC1Cos/n11779 ), .F0(\CIC1Cos/n5423 ), .F1(\CIC1Cos/n5422 ), 
    .FCO(\CIC1Cos/n11780 ));
  CIC1Cos_SLICE_851 \CIC1Cos/SLICE_851 ( .B1(\CIC1Cos/d5_55 ), 
    .A1(\CIC1Cos/d4_55 ), .B0(\CIC1Cos/d5_54 ), .A0(\CIC1Cos/d4_54 ), 
    .FCI(\CIC1Cos/n11778 ), .F0(\CIC1Cos/n5425 ), .F1(\CIC1Cos/n5424 ), 
    .FCO(\CIC1Cos/n11779 ));
  CIC1Cos_SLICE_852 \CIC1Cos/SLICE_852 ( .B1(\CIC1Cos/d5_53 ), 
    .A1(\CIC1Cos/d4_53 ), .B0(\CIC1Cos/d5_52 ), .A0(\CIC1Cos/d4_52 ), 
    .FCI(\CIC1Cos/n11777 ), .F0(\CIC1Cos/n5427 ), .F1(\CIC1Cos/n5426 ), 
    .FCO(\CIC1Cos/n11778 ));
  CIC1Cos_SLICE_853 \CIC1Cos/SLICE_853 ( .B1(\CIC1Cos/d5_51 ), 
    .A1(\CIC1Cos/d4_51 ), .B0(\CIC1Cos/d5_50 ), .A0(\CIC1Cos/d4_50 ), 
    .FCI(\CIC1Cos/n11776 ), .F0(\CIC1Cos/n5429 ), .F1(\CIC1Cos/n5428 ), 
    .FCO(\CIC1Cos/n11777 ));
  CIC1Cos_SLICE_854 \CIC1Cos/SLICE_854 ( .D1(\CIC1Cos/d1_39 ), 
    .C1(\CIC1Cos/n4984 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_39 ), 
    .D0(\CIC1Cos/d1_38 ), .C0(\CIC1Cos/n4985 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_38 ), .DI1(\CIC1Cos/d2_71_N_489_39 ), 
    .DI0(\CIC1Cos/d2_71_N_489_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11874 ), 
    .F0(\CIC1Cos/d2_71_N_489_38 ), .Q0(\CIC1Cos/d2_38 ), 
    .F1(\CIC1Cos/d2_71_N_489_39 ), .Q1(\CIC1Cos/d2_39 ), 
    .FCO(\CIC1Cos/n11875 ));
  CIC1Cos_SLICE_855 \CIC1Cos/SLICE_855 ( .D1(\CIC1Cos/d1_43 ), 
    .C1(\CIC1Cos/n4980 ), .B1(\CIC1Cos/n4950 ), .A1(\CIC1Cos/d2_43 ), 
    .D0(\CIC1Cos/d1_42 ), .C0(\CIC1Cos/n4981 ), .B0(\CIC1Cos/n4950 ), 
    .A0(\CIC1Cos/d2_42 ), .DI1(\CIC1Cos/d2_71_N_489_43 ), 
    .DI0(\CIC1Cos/d2_71_N_489_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11876 ), 
    .F0(\CIC1Cos/d2_71_N_489_42 ), .Q0(\CIC1Cos/d2_42 ), 
    .F1(\CIC1Cos/d2_71_N_489_43 ), .Q1(\CIC1Cos/d2_43 ), 
    .FCO(\CIC1Cos/n11877 ));
  CIC1Cos_SLICE_856 \CIC1Cos/SLICE_856 ( .B1(\CIC1Cos/d2_59 ), 
    .A1(\CIC1Cos/d1_59 ), .B0(\CIC1Cos/d2_58 ), .A0(\CIC1Cos/d1_58 ), 
    .FCI(\CIC1Cos/n11903 ), .F0(\CIC1Cos/n4965 ), .F1(\CIC1Cos/n4964 ), 
    .FCO(\CIC1Cos/n11904 ));
  CIC1Cos_SLICE_857 \CIC1Cos/SLICE_857 ( .B1(\CIC1Cos/d2_57 ), 
    .A1(\CIC1Cos/d1_57 ), .B0(\CIC1Cos/d2_56 ), .A0(\CIC1Cos/d1_56 ), 
    .FCI(\CIC1Cos/n11902 ), .F0(\CIC1Cos/n4967 ), .F1(\CIC1Cos/n4966 ), 
    .FCO(\CIC1Cos/n11903 ));
  CIC1Cos_SLICE_858 \CIC1Cos/SLICE_858 ( .B1(\CIC1Cos/d2_55 ), 
    .A1(\CIC1Cos/d1_55 ), .B0(\CIC1Cos/d2_54 ), .A0(\CIC1Cos/d1_54 ), 
    .FCI(\CIC1Cos/n11901 ), .F0(\CIC1Cos/n4969 ), .F1(\CIC1Cos/n4968 ), 
    .FCO(\CIC1Cos/n11902 ));
  CIC1Cos_SLICE_859 \CIC1Cos/SLICE_859 ( .B1(\CIC1Cos/d5_49 ), 
    .A1(\CIC1Cos/d4_49 ), .B0(\CIC1Cos/d5_48 ), .A0(\CIC1Cos/d4_48 ), 
    .FCI(\CIC1Cos/n11775 ), .F0(\CIC1Cos/n5431 ), .F1(\CIC1Cos/n5430 ), 
    .FCO(\CIC1Cos/n11776 ));
  CIC1Cos_SLICE_860 \CIC1Cos/SLICE_860 ( .B1(\CIC1Cos/d5_47 ), 
    .A1(\CIC1Cos/d4_47 ), .B0(\CIC1Cos/d5_46 ), .A0(\CIC1Cos/d4_46 ), 
    .FCI(\CIC1Cos/n11774 ), .F0(\CIC1Cos/n5433 ), .F1(\CIC1Cos/n5432 ), 
    .FCO(\CIC1Cos/n11775 ));
  CIC1Cos_SLICE_861 \CIC1Cos/SLICE_861 ( .B1(\CIC1Cos/d5_45 ), 
    .A1(\CIC1Cos/d4_45 ), .B0(\CIC1Cos/d5_44 ), .A0(\CIC1Cos/d4_44 ), 
    .FCI(\CIC1Cos/n11773 ), .F0(\CIC1Cos/n5435 ), .F1(\CIC1Cos/n5434 ), 
    .FCO(\CIC1Cos/n11774 ));
  CIC1Cos_SLICE_862 \CIC1Cos/SLICE_862 ( .B1(\CIC1Cos/d5_43 ), 
    .A1(\CIC1Cos/d4_43 ), .B0(\CIC1Cos/d5_42 ), .A0(\CIC1Cos/d4_42 ), 
    .FCI(\CIC1Cos/n11772 ), .F0(\CIC1Cos/n5437 ), .F1(\CIC1Cos/n5436 ), 
    .FCO(\CIC1Cos/n11773 ));
  CIC1Cos_SLICE_863 \CIC1Cos/SLICE_863 ( .B1(\CIC1Cos/d5_41 ), 
    .A1(\CIC1Cos/d4_41 ), .B0(\CIC1Cos/d5_40 ), .A0(\CIC1Cos/d4_40 ), 
    .FCI(\CIC1Cos/n11771 ), .F0(\CIC1Cos/n5439 ), .F1(\CIC1Cos/n5438 ), 
    .FCO(\CIC1Cos/n11772 ));
  CIC1Cos_SLICE_864 \CIC1Cos/SLICE_864 ( .B1(\CIC1Cos/d5_39 ), 
    .A1(\CIC1Cos/d4_39 ), .B0(\CIC1Cos/d5_38 ), .A0(\CIC1Cos/d4_38 ), 
    .FCI(\CIC1Cos/n11770 ), .F0(\CIC1Cos/n5441 ), .F1(\CIC1Cos/n5440 ), 
    .FCO(\CIC1Cos/n11771 ));
  CIC1Cos_SLICE_865 \CIC1Cos/SLICE_865 ( .B1(\CIC1Cos/d5_37 ), 
    .A1(\CIC1Cos/d4_37 ), .B0(\CIC1Cos/d5_36 ), .A0(\CIC1Cos/d4_36 ), 
    .F1(\CIC1Cos/n5442 ), .FCO(\CIC1Cos/n11770 ));
  CIC1Cos_SLICE_866 \CIC1Cos/SLICE_866 ( .D1(\CIC1Cos/d4_71 ), 
    .C1(\CIC1Cos/n5408 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_71 ), 
    .D0(\CIC1Cos/d4_70 ), .C0(\CIC1Cos/n5409 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_70 ), .DI1(\CIC1Cos/d5_71_N_705_71 ), 
    .DI0(\CIC1Cos/d5_71_N_705_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11767 ), 
    .F0(\CIC1Cos/d5_71_N_705_70 ), .Q0(\CIC1Cos/d5_70 ), 
    .F1(\CIC1Cos/d5_71_N_705_71 ), .Q1(\CIC1Cos/d5_71 ));
  CIC1Cos_SLICE_867 \CIC1Cos/SLICE_867 ( .D1(\CIC1Cos/d4_69 ), 
    .C1(\CIC1Cos/n5410 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_69 ), 
    .D0(\CIC1Cos/d4_68 ), .C0(\CIC1Cos/n5411 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_68 ), .DI1(\CIC1Cos/d5_71_N_705_69 ), 
    .DI0(\CIC1Cos/d5_71_N_705_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11766 ), 
    .F0(\CIC1Cos/d5_71_N_705_68 ), .Q0(\CIC1Cos/d5_68 ), 
    .F1(\CIC1Cos/d5_71_N_705_69 ), .Q1(\CIC1Cos/d5_69 ), 
    .FCO(\CIC1Cos/n11767 ));
  CIC1Cos_SLICE_868 \CIC1Cos/SLICE_868 ( .D1(\CIC1Cos/d4_67 ), 
    .C1(\CIC1Cos/n5412 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_67 ), 
    .D0(\CIC1Cos/d4_66 ), .C0(\CIC1Cos/n5413 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_66 ), .DI1(\CIC1Cos/d5_71_N_705_67 ), 
    .DI0(\CIC1Cos/d5_71_N_705_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11765 ), 
    .F0(\CIC1Cos/d5_71_N_705_66 ), .Q0(\CIC1Cos/d5_66 ), 
    .F1(\CIC1Cos/d5_71_N_705_67 ), .Q1(\CIC1Cos/d5_67 ), 
    .FCO(\CIC1Cos/n11766 ));
  CIC1Cos_SLICE_869 \CIC1Cos/SLICE_869 ( .D1(\CIC1Cos/d4_65 ), 
    .C1(\CIC1Cos/n5414 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_65 ), 
    .D0(\CIC1Cos/d4_64 ), .C0(\CIC1Cos/n5415 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_64 ), .DI1(\CIC1Cos/d5_71_N_705_65 ), 
    .DI0(\CIC1Cos/d5_71_N_705_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11764 ), 
    .F0(\CIC1Cos/d5_71_N_705_64 ), .Q0(\CIC1Cos/d5_64 ), 
    .F1(\CIC1Cos/d5_71_N_705_65 ), .Q1(\CIC1Cos/d5_65 ), 
    .FCO(\CIC1Cos/n11765 ));
  CIC1Cos_SLICE_870 \CIC1Cos/SLICE_870 ( .D1(\CIC1Cos/d4_63 ), 
    .C1(\CIC1Cos/n5416 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_63 ), 
    .D0(\CIC1Cos/d4_62 ), .C0(\CIC1Cos/n5417 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_62 ), .DI1(\CIC1Cos/d5_71_N_705_63 ), 
    .DI0(\CIC1Cos/d5_71_N_705_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11763 ), 
    .F0(\CIC1Cos/d5_71_N_705_62 ), .Q0(\CIC1Cos/d5_62 ), 
    .F1(\CIC1Cos/d5_71_N_705_63 ), .Q1(\CIC1Cos/d5_63 ), 
    .FCO(\CIC1Cos/n11764 ));
  CIC1Cos_SLICE_871 \CIC1Cos/SLICE_871 ( .D1(\CIC1Cos/d4_61 ), 
    .C1(\CIC1Cos/n5418 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_61 ), 
    .D0(\CIC1Cos/d4_60 ), .C0(\CIC1Cos/n5419 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_60 ), .DI1(\CIC1Cos/d5_71_N_705_61 ), 
    .DI0(\CIC1Cos/d5_71_N_705_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11762 ), 
    .F0(\CIC1Cos/d5_71_N_705_60 ), .Q0(\CIC1Cos/d5_60 ), 
    .F1(\CIC1Cos/d5_71_N_705_61 ), .Q1(\CIC1Cos/d5_61 ), 
    .FCO(\CIC1Cos/n11763 ));
  CIC1Cos_SLICE_872 \CIC1Cos/SLICE_872 ( .D1(\CIC1Cos/d4_59 ), 
    .C1(\CIC1Cos/n5420 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_59 ), 
    .D0(\CIC1Cos/d4_58 ), .C0(\CIC1Cos/n5421 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_58 ), .DI1(\CIC1Cos/d5_71_N_705_59 ), 
    .DI0(\CIC1Cos/d5_71_N_705_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11761 ), 
    .F0(\CIC1Cos/d5_71_N_705_58 ), .Q0(\CIC1Cos/d5_58 ), 
    .F1(\CIC1Cos/d5_71_N_705_59 ), .Q1(\CIC1Cos/d5_59 ), 
    .FCO(\CIC1Cos/n11762 ));
  CIC1Cos_SLICE_873 \CIC1Cos/SLICE_873 ( .D1(\CIC1Cos/d4_57 ), 
    .C1(\CIC1Cos/n5422 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_57 ), 
    .D0(\CIC1Cos/d4_56 ), .C0(\CIC1Cos/n5423 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_56 ), .DI1(\CIC1Cos/d5_71_N_705_57 ), 
    .DI0(\CIC1Cos/d5_71_N_705_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11760 ), 
    .F0(\CIC1Cos/d5_71_N_705_56 ), .Q0(\CIC1Cos/d5_56 ), 
    .F1(\CIC1Cos/d5_71_N_705_57 ), .Q1(\CIC1Cos/d5_57 ), 
    .FCO(\CIC1Cos/n11761 ));
  CIC1Cos_SLICE_874 \CIC1Cos/SLICE_874 ( .D1(\CIC1Cos/d4_55 ), 
    .C1(\CIC1Cos/n5424 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_55 ), 
    .D0(\CIC1Cos/d4_54 ), .C0(\CIC1Cos/n5425 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_54 ), .DI1(\CIC1Cos/d5_71_N_705_55 ), 
    .DI0(\CIC1Cos/d5_71_N_705_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11759 ), 
    .F0(\CIC1Cos/d5_71_N_705_54 ), .Q0(\CIC1Cos/d5_54 ), 
    .F1(\CIC1Cos/d5_71_N_705_55 ), .Q1(\CIC1Cos/d5_55 ), 
    .FCO(\CIC1Cos/n11760 ));
  CIC1Cos_SLICE_875 \CIC1Cos/SLICE_875 ( .D1(\CIC1Cos/d4_53 ), 
    .C1(\CIC1Cos/n5426 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_53 ), 
    .D0(\CIC1Cos/d4_52 ), .C0(\CIC1Cos/n5427 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_52 ), .DI1(\CIC1Cos/d5_71_N_705_53 ), 
    .DI0(\CIC1Cos/d5_71_N_705_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11758 ), 
    .F0(\CIC1Cos/d5_71_N_705_52 ), .Q0(\CIC1Cos/d5_52 ), 
    .F1(\CIC1Cos/d5_71_N_705_53 ), .Q1(\CIC1Cos/d5_53 ), 
    .FCO(\CIC1Cos/n11759 ));
  CIC1Cos_SLICE_876 \CIC1Cos/SLICE_876 ( .D1(\CIC1Cos/d4_51 ), 
    .C1(\CIC1Cos/n5428 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_51 ), 
    .D0(\CIC1Cos/d4_50 ), .C0(\CIC1Cos/n5429 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_50 ), .DI1(\CIC1Cos/d5_71_N_705_51 ), 
    .DI0(\CIC1Cos/d5_71_N_705_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11757 ), 
    .F0(\CIC1Cos/d5_71_N_705_50 ), .Q0(\CIC1Cos/d5_50 ), 
    .F1(\CIC1Cos/d5_71_N_705_51 ), .Q1(\CIC1Cos/d5_51 ), 
    .FCO(\CIC1Cos/n11758 ));
  CIC1Cos_SLICE_877 \CIC1Cos/SLICE_877 ( .D1(\CIC1Cos/d4_49 ), 
    .C1(\CIC1Cos/n5430 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_49 ), 
    .D0(\CIC1Cos/d4_48 ), .C0(\CIC1Cos/n5431 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_48 ), .DI1(\CIC1Cos/d5_71_N_705_49 ), 
    .DI0(\CIC1Cos/d5_71_N_705_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11756 ), 
    .F0(\CIC1Cos/d5_71_N_705_48 ), .Q0(\CIC1Cos/d5_48 ), 
    .F1(\CIC1Cos/d5_71_N_705_49 ), .Q1(\CIC1Cos/d5_49 ), 
    .FCO(\CIC1Cos/n11757 ));
  CIC1Cos_SLICE_878 \CIC1Cos/SLICE_878 ( .D1(\CIC1Cos/d4_47 ), 
    .C1(\CIC1Cos/n5432 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_47 ), 
    .D0(\CIC1Cos/d4_46 ), .C0(\CIC1Cos/n5433 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_46 ), .DI1(\CIC1Cos/d5_71_N_705_47 ), 
    .DI0(\CIC1Cos/d5_71_N_705_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11755 ), 
    .F0(\CIC1Cos/d5_71_N_705_46 ), .Q0(\CIC1Cos/d5_46 ), 
    .F1(\CIC1Cos/d5_71_N_705_47 ), .Q1(\CIC1Cos/d5_47 ), 
    .FCO(\CIC1Cos/n11756 ));
  CIC1Cos_SLICE_879 \CIC1Cos/SLICE_879 ( .D1(\CIC1Cos/d4_45 ), 
    .C1(\CIC1Cos/n5434 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_45 ), 
    .D0(\CIC1Cos/d4_44 ), .C0(\CIC1Cos/n5435 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_44 ), .DI1(\CIC1Cos/d5_71_N_705_45 ), 
    .DI0(\CIC1Cos/d5_71_N_705_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11754 ), 
    .F0(\CIC1Cos/d5_71_N_705_44 ), .Q0(\CIC1Cos/d5_44 ), 
    .F1(\CIC1Cos/d5_71_N_705_45 ), .Q1(\CIC1Cos/d5_45 ), 
    .FCO(\CIC1Cos/n11755 ));
  CIC1Cos_SLICE_880 \CIC1Cos/SLICE_880 ( .D1(\CIC1Cos/d4_43 ), 
    .C1(\CIC1Cos/n5436 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_43 ), 
    .D0(\CIC1Cos/d4_42 ), .C0(\CIC1Cos/n5437 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_42 ), .DI1(\CIC1Cos/d5_71_N_705_43 ), 
    .DI0(\CIC1Cos/d5_71_N_705_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11753 ), 
    .F0(\CIC1Cos/d5_71_N_705_42 ), .Q0(\CIC1Cos/d5_42 ), 
    .F1(\CIC1Cos/d5_71_N_705_43 ), .Q1(\CIC1Cos/d5_43 ), 
    .FCO(\CIC1Cos/n11754 ));
  CIC1Cos_SLICE_881 \CIC1Cos/SLICE_881 ( .D1(\CIC1Cos/d4_41 ), 
    .C1(\CIC1Cos/n5438 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_41 ), 
    .D0(\CIC1Cos/d4_40 ), .C0(\CIC1Cos/n5439 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_40 ), .DI1(\CIC1Cos/d5_71_N_705_41 ), 
    .DI0(\CIC1Cos/d5_71_N_705_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11752 ), 
    .F0(\CIC1Cos/d5_71_N_705_40 ), .Q0(\CIC1Cos/d5_40 ), 
    .F1(\CIC1Cos/d5_71_N_705_41 ), .Q1(\CIC1Cos/d5_41 ), 
    .FCO(\CIC1Cos/n11753 ));
  CIC1Cos_SLICE_882 \CIC1Cos/SLICE_882 ( .D1(\CIC1Cos/d4_39 ), 
    .C1(\CIC1Cos/n5440 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_39 ), 
    .D0(\CIC1Cos/d4_38 ), .C0(\CIC1Cos/n5441 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_38 ), .DI1(\CIC1Cos/d5_71_N_705_39 ), 
    .DI0(\CIC1Cos/d5_71_N_705_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11751 ), 
    .F0(\CIC1Cos/d5_71_N_705_38 ), .Q0(\CIC1Cos/d5_38 ), 
    .F1(\CIC1Cos/d5_71_N_705_39 ), .Q1(\CIC1Cos/d5_39 ), 
    .FCO(\CIC1Cos/n11752 ));
  CIC1Cos_SLICE_883 \CIC1Cos/SLICE_883 ( .D1(\CIC1Cos/d4_37 ), 
    .C1(\CIC1Cos/n5442 ), .B1(\CIC1Cos/n5406 ), .A1(\CIC1Cos/d5_37 ), 
    .D0(\CIC1Cos/d4_36 ), .C0(\CIC1Cos/n5443 ), .B0(\CIC1Cos/n5406 ), 
    .A0(\CIC1Cos/d5_36 ), .DI1(\CIC1Cos/d5_71_N_705_37 ), 
    .DI0(\CIC1Cos/d5_71_N_705_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11750 ), 
    .F0(\CIC1Cos/d5_71_N_705_36 ), .Q0(\CIC1Cos/d5_36 ), 
    .F1(\CIC1Cos/d5_71_N_705_37 ), .Q1(\CIC1Cos/d5_37 ), 
    .FCO(\CIC1Cos/n11751 ));
  CIC1Cos_SLICE_884 \CIC1Cos/SLICE_884 ( .A1(\CIC1Cos/n5406 ), 
    .FCO(\CIC1Cos/n11750 ));
  CIC1Cos_SLICE_885 \CIC1Cos/SLICE_885 ( .D1(\CIC1Cos/d_tmp_49 ), 
    .C1(\CIC1Cos/n6190 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_49 ), 
    .D0(\CIC1Cos/d_tmp_48 ), .C0(\CIC1Cos/n6191 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_48 ), .DI1(\CIC1Cos/d6_71_N_1458_49 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_48 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11418 ), .F0(\CIC1Cos/d6_71_N_1458_48 ), 
    .Q0(\CIC1Cos/d6_48 ), .F1(\CIC1Cos/d6_71_N_1458_49 ), .Q1(\CIC1Cos/d6_49 ), 
    .FCO(\CIC1Cos/n11419 ));
  CIC1Cos_SLICE_886 \CIC1Cos/SLICE_886 ( .D1(\CIC1Cos/d_tmp_47 ), 
    .C1(\CIC1Cos/n6192 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_47 ), 
    .D0(\CIC1Cos/d_tmp_46 ), .C0(\CIC1Cos/n6193 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_46 ), .DI1(\CIC1Cos/d6_71_N_1458_47 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_46 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11417 ), .F0(\CIC1Cos/d6_71_N_1458_46 ), 
    .Q0(\CIC1Cos/d6_46 ), .F1(\CIC1Cos/d6_71_N_1458_47 ), .Q1(\CIC1Cos/d6_47 ), 
    .FCO(\CIC1Cos/n11418 ));
  CIC1Cos_SLICE_887 \CIC1Cos/SLICE_887 ( .D1(\CIC1Cos/d_tmp_45 ), 
    .C1(\CIC1Cos/n6194 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_45 ), 
    .D0(\CIC1Cos/d_tmp_44 ), .C0(\CIC1Cos/n6195 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_44 ), .DI1(\CIC1Cos/d6_71_N_1458_45 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_44 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11416 ), .F0(\CIC1Cos/d6_71_N_1458_44 ), 
    .Q0(\CIC1Cos/d6_44 ), .F1(\CIC1Cos/d6_71_N_1458_45 ), .Q1(\CIC1Cos/d6_45 ), 
    .FCO(\CIC1Cos/n11417 ));
  CIC1Cos_SLICE_888 \CIC1Cos/SLICE_888 ( .D1(\CIC1Cos/d_tmp_43 ), 
    .C1(\CIC1Cos/n6196 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_43 ), 
    .D0(\CIC1Cos/d_tmp_42 ), .C0(\CIC1Cos/n6197 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_42 ), .DI1(\CIC1Cos/d6_71_N_1458_43 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_42 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11415 ), .F0(\CIC1Cos/d6_71_N_1458_42 ), 
    .Q0(\CIC1Cos/d6_42 ), .F1(\CIC1Cos/d6_71_N_1458_43 ), .Q1(\CIC1Cos/d6_43 ), 
    .FCO(\CIC1Cos/n11416 ));
  CIC1Cos_SLICE_889 \CIC1Cos/SLICE_889 ( .D1(\CIC1Cos/d_tmp_41 ), 
    .C1(\CIC1Cos/n6198 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_41 ), 
    .D0(\CIC1Cos/d_tmp_40 ), .C0(\CIC1Cos/n6199 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_40 ), .DI1(\CIC1Cos/d6_71_N_1458_41 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_40 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11414 ), .F0(\CIC1Cos/d6_71_N_1458_40 ), 
    .Q0(\CIC1Cos/d6_40 ), .F1(\CIC1Cos/d6_71_N_1458_41 ), .Q1(\CIC1Cos/d6_41 ), 
    .FCO(\CIC1Cos/n11415 ));
  CIC1Cos_SLICE_890 \CIC1Cos/SLICE_890 ( .D1(\CIC1Cos/d_tmp_39 ), 
    .C1(\CIC1Cos/n6200 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_39 ), 
    .D0(\CIC1Cos/d_tmp_38 ), .C0(\CIC1Cos/n6201 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_38 ), .DI1(\CIC1Cos/d6_71_N_1458_39 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_38 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11413 ), .F0(\CIC1Cos/d6_71_N_1458_38 ), 
    .Q0(\CIC1Cos/d6_38 ), .F1(\CIC1Cos/d6_71_N_1458_39 ), .Q1(\CIC1Cos/d6_39 ), 
    .FCO(\CIC1Cos/n11414 ));
  CIC1Cos_SLICE_891 \CIC1Cos/SLICE_891 ( .D1(\CIC1Cos/d_tmp_37 ), 
    .C1(\CIC1Cos/n6202 ), .B1(\CIC1Cos/n6166 ), .A1(\CIC1Cos/d_d_tmp_37 ), 
    .D0(\CIC1Cos/d_tmp_36 ), .C0(\CIC1Cos/n6203 ), .B0(\CIC1Cos/n6166 ), 
    .A0(\CIC1Cos/d_d_tmp_36 ), .DI1(\CIC1Cos/d6_71_N_1458_37 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_36 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11412 ), .F0(\CIC1Cos/d6_71_N_1458_36 ), 
    .Q0(\CIC1Cos/d6_36 ), .F1(\CIC1Cos/d6_71_N_1458_37 ), .Q1(\CIC1Cos/d6_37 ), 
    .FCO(\CIC1Cos/n11413 ));
  CIC1Cos_SLICE_892 \CIC1Cos/SLICE_892 ( .A1(\CIC1Cos/n6166 ), 
    .FCO(\CIC1Cos/n11412 ));
  CIC1Cos_SLICE_893 \CIC1Cos/SLICE_893 ( .A1(\CIC1Cos/n4950 ), 
    .FCO(\CIC1Cos/n11873 ));
  CIC1Cos_SLICE_894 \CIC1Cos/SLICE_894 ( .B0(\CIC1Cos/d_d8_71 ), 
    .A0(\CIC1Cos/d8_71 ), .FCI(\CIC1Cos/n11332 ), .F0(\CIC1Cos/n6624 ));
  CIC1Cos_SLICE_895 \CIC1Cos/SLICE_895 ( .B1(\CIC1Cos/d_d8_70 ), 
    .A1(\CIC1Cos/d8_70 ), .B0(\CIC1Cos/d_d8_69 ), .A0(\CIC1Cos/d8_69 ), 
    .FCI(\CIC1Cos/n11331 ), .F0(\CIC1Cos/n6626 ), .F1(\CIC1Cos/n6625 ), 
    .FCO(\CIC1Cos/n11332 ));
  CIC1Cos_SLICE_896 \CIC1Cos/SLICE_896 ( .B1(\CIC1Cos/d_d8_68 ), 
    .A1(\CIC1Cos/d8_68 ), .B0(\CIC1Cos/d_d8_67 ), .A0(\CIC1Cos/d8_67 ), 
    .FCI(\CIC1Cos/n11330 ), .F0(\CIC1Cos/n6628 ), .F1(\CIC1Cos/n6627 ), 
    .FCO(\CIC1Cos/n11331 ));
  CIC1Cos_SLICE_897 \CIC1Cos/SLICE_897 ( .B1(\CIC1Cos/d_d8_66 ), 
    .A1(\CIC1Cos/d8_66 ), .B0(\CIC1Cos/d_d8_65 ), .A0(\CIC1Cos/d8_65 ), 
    .FCI(\CIC1Cos/n11329 ), .F0(\CIC1Cos/n6630 ), .F1(\CIC1Cos/n6629 ), 
    .FCO(\CIC1Cos/n11330 ));
  CIC1Cos_SLICE_898 \CIC1Cos/SLICE_898 ( .B1(\CIC1Cos/d_d8_64 ), 
    .A1(\CIC1Cos/d8_64 ), .B0(\CIC1Cos/d_d8_63 ), .A0(\CIC1Cos/d8_63 ), 
    .FCI(\CIC1Cos/n11328 ), .F0(\CIC1Cos/n6632 ), .F1(\CIC1Cos/n6631 ), 
    .FCO(\CIC1Cos/n11329 ));
  CIC1Cos_SLICE_899 \CIC1Cos/SLICE_899 ( .B1(\CIC1Cos/d_d8_62 ), 
    .A1(\CIC1Cos/d8_62 ), .B0(\CIC1Cos/d_d8_61 ), .A0(\CIC1Cos/d8_61 ), 
    .FCI(\CIC1Cos/n11327 ), .F0(\CIC1Cos/n6634 ), .F1(\CIC1Cos/n6633 ), 
    .FCO(\CIC1Cos/n11328 ));
  CIC1Cos_SLICE_900 \CIC1Cos/SLICE_900 ( .B1(\CIC1Cos/d_d8_60 ), 
    .A1(\CIC1Cos/d8_60 ), .B0(\CIC1Cos/d_d8_59 ), .A0(\CIC1Cos/d8_59 ), 
    .FCI(\CIC1Cos/n11326 ), .F0(\CIC1Cos/n6636 ), .F1(\CIC1Cos/n6635 ), 
    .FCO(\CIC1Cos/n11327 ));
  CIC1Cos_SLICE_901 \CIC1Cos/SLICE_901 ( .B1(\CIC1Cos/d_d8_58 ), 
    .A1(\CIC1Cos/d8_58 ), .B0(\CIC1Cos/d_d8_57 ), .A0(\CIC1Cos/d8_57 ), 
    .FCI(\CIC1Cos/n11325 ), .F0(\CIC1Cos/n6638 ), .F1(\CIC1Cos/n6637 ), 
    .FCO(\CIC1Cos/n11326 ));
  CIC1Cos_SLICE_902 \CIC1Cos/SLICE_902 ( .B1(\CIC1Cos/d_d8_56 ), 
    .A1(\CIC1Cos/d8_56 ), .B0(\CIC1Cos/d_d8_55 ), .A0(\CIC1Cos/d8_55 ), 
    .FCI(\CIC1Cos/n11324 ), .F0(\CIC1Cos/n6640 ), .F1(\CIC1Cos/n6639 ), 
    .FCO(\CIC1Cos/n11325 ));
  CIC1Cos_SLICE_903 \CIC1Cos/SLICE_903 ( .B1(\CIC1Cos/d_d8_54 ), 
    .A1(\CIC1Cos/d8_54 ), .B0(\CIC1Cos/d_d8_53 ), .A0(\CIC1Cos/d8_53 ), 
    .FCI(\CIC1Cos/n11323 ), .F0(\CIC1Cos/n6642 ), .F1(\CIC1Cos/n6641 ), 
    .FCO(\CIC1Cos/n11324 ));
  CIC1Cos_SLICE_904 \CIC1Cos/SLICE_904 ( .B1(\CIC1Cos/d_d8_52 ), 
    .A1(\CIC1Cos/d8_52 ), .B0(\CIC1Cos/d_d8_51 ), .A0(\CIC1Cos/d8_51 ), 
    .FCI(\CIC1Cos/n11322 ), .F0(\CIC1Cos/n6644 ), .F1(\CIC1Cos/n6643 ), 
    .FCO(\CIC1Cos/n11323 ));
  CIC1Cos_SLICE_905 \CIC1Cos/SLICE_905 ( .B1(\CIC1Cos/d_d8_50 ), 
    .A1(\CIC1Cos/d8_50 ), .B0(\CIC1Cos/d_d8_49 ), .A0(\CIC1Cos/d8_49 ), 
    .FCI(\CIC1Cos/n11321 ), .F0(\CIC1Cos/n6646 ), .F1(\CIC1Cos/n6645 ), 
    .FCO(\CIC1Cos/n11322 ));
  CIC1Cos_SLICE_906 \CIC1Cos/SLICE_906 ( .B1(\CIC1Cos/d_d8_48 ), 
    .A1(\CIC1Cos/d8_48 ), .B0(\CIC1Cos/d_d8_47 ), .A0(\CIC1Cos/d8_47 ), 
    .FCI(\CIC1Cos/n11320 ), .F0(\CIC1Cos/n6648 ), .F1(\CIC1Cos/n6647 ), 
    .FCO(\CIC1Cos/n11321 ));
  CIC1Cos_SLICE_907 \CIC1Cos/SLICE_907 ( .B1(\CIC1Cos/d_d8_46 ), 
    .A1(\CIC1Cos/d8_46 ), .B0(\CIC1Cos/d_d8_45 ), .A0(\CIC1Cos/d8_45 ), 
    .FCI(\CIC1Cos/n11319 ), .F0(\CIC1Cos/n6650 ), .F1(\CIC1Cos/n6649 ), 
    .FCO(\CIC1Cos/n11320 ));
  CIC1Cos_SLICE_908 \CIC1Cos/SLICE_908 ( .B1(\CIC1Cos/d_d8_44 ), 
    .A1(\CIC1Cos/d8_44 ), .B0(\CIC1Cos/d_d8_43 ), .A0(\CIC1Cos/d8_43 ), 
    .FCI(\CIC1Cos/n11318 ), .F0(\CIC1Cos/n6652 ), .F1(\CIC1Cos/n6651 ), 
    .FCO(\CIC1Cos/n11319 ));
  CIC1Cos_SLICE_909 \CIC1Cos/SLICE_909 ( .B1(\CIC1Cos/d_d8_42 ), 
    .A1(\CIC1Cos/d8_42 ), .B0(\CIC1Cos/d_d8_41 ), .A0(\CIC1Cos/d8_41 ), 
    .FCI(\CIC1Cos/n11317 ), .F0(\CIC1Cos/n6654 ), .F1(\CIC1Cos/n6653 ), 
    .FCO(\CIC1Cos/n11318 ));
  CIC1Cos_SLICE_910 \CIC1Cos/SLICE_910 ( .B1(\CIC1Cos/d_d8_40 ), 
    .A1(\CIC1Cos/d8_40 ), .B0(\CIC1Cos/d_d8_39 ), .A0(\CIC1Cos/d8_39 ), 
    .FCI(\CIC1Cos/n11316 ), .F0(\CIC1Cos/n6656 ), .F1(\CIC1Cos/n6655 ), 
    .FCO(\CIC1Cos/n11317 ));
  CIC1Cos_SLICE_911 \CIC1Cos/SLICE_911 ( .B1(\CIC1Cos/d_d8_38 ), 
    .A1(\CIC1Cos/d8_38 ), .B0(\CIC1Cos/d_d8_37 ), .A0(\CIC1Cos/d8_37 ), 
    .FCI(\CIC1Cos/n11315 ), .F0(\CIC1Cos/n6658 ), .F1(\CIC1Cos/n6657 ), 
    .FCO(\CIC1Cos/n11316 ));
  CIC1Cos_SLICE_912 \CIC1Cos/SLICE_912 ( .B1(\CIC1Cos/d_d8_36 ), 
    .A1(\CIC1Cos/d8_36 ), .F1(\CIC1Cos/n6659 ), .FCO(\CIC1Cos/n11315 ));
  CIC1Cos_SLICE_913 \CIC1Cos/SLICE_913 ( .D1(\CIC1Cos/d8_71 ), 
    .C1(\CIC1Cos/n6624 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_71 ), 
    .D0(\CIC1Cos/d8_70 ), .C0(\CIC1Cos/n6625 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_70 ), .DI1(\CIC1Cos/d9_71_N_1674_71 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_70 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11313 ), .F0(\CIC1Cos/d9_71_N_1674_70 ), 
    .Q0(\CIC1Cos/d9_70 ), .F1(\CIC1Cos/d9_71_N_1674_71 ), .Q1(\CIC1Cos/d9_71 ));
  CIC1Cos_SLICE_914 \CIC1Cos/SLICE_914 ( .D1(\CIC1Cos/d8_69 ), 
    .C1(\CIC1Cos/n6626 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_69 ), 
    .D0(\CIC1Cos/d8_68 ), .C0(\CIC1Cos/n6627 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_68 ), .DI1(\CIC1Cos/d9_71_N_1674_69 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_68 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11312 ), .F0(\CIC1Cos/d9_71_N_1674_68 ), 
    .Q0(\CIC1Cos/d9_68 ), .F1(\CIC1Cos/d9_71_N_1674_69 ), .Q1(\CIC1Cos/d9_69 ), 
    .FCO(\CIC1Cos/n11313 ));
  CIC1Cos_SLICE_915 \CIC1Cos/SLICE_915 ( .D1(\CIC1Cos/d8_67 ), 
    .C1(\CIC1Cos/n6628 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_67 ), 
    .D0(\CIC1Cos/d8_66 ), .C0(\CIC1Cos/n6629 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_66 ), .DI1(\CIC1Cos/d9_71_N_1674_67 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_66 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11311 ), .F0(\CIC1Cos/d9_71_N_1674_66 ), 
    .Q0(\CIC1Cos/d9_66 ), .F1(\CIC1Cos/d9_71_N_1674_67 ), .Q1(\CIC1Cos/d9_67 ), 
    .FCO(\CIC1Cos/n11312 ));
  CIC1Cos_SLICE_916 \CIC1Cos/SLICE_916 ( .D1(\CIC1Cos/d8_65 ), 
    .C1(\CIC1Cos/n6630 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_65 ), 
    .D0(\CIC1Cos/d8_64 ), .C0(\CIC1Cos/n6631 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_64 ), .DI1(\CIC1Cos/d9_71_N_1674_65 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_64 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11310 ), .F0(\CIC1Cos/d9_71_N_1674_64 ), 
    .Q0(\CIC1Cos/d9_64 ), .F1(\CIC1Cos/d9_71_N_1674_65 ), .Q1(\CIC1Cos/d9_65 ), 
    .FCO(\CIC1Cos/n11311 ));
  CIC1Cos_SLICE_917 \CIC1Cos/SLICE_917 ( .D1(\CIC1Cos/d8_63 ), 
    .C1(\CIC1Cos/n6632 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_63 ), 
    .D0(\CIC1Cos/d8_62 ), .C0(\CIC1Cos/n6633 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_62 ), .DI1(\CIC1Cos/d9_71_N_1674_63 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_62 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11309 ), .F0(\CIC1Cos/d9_71_N_1674_62 ), 
    .Q0(\CIC1Cos/d9_62 ), .F1(\CIC1Cos/d9_71_N_1674_63 ), .Q1(\CIC1Cos/d9_63 ), 
    .FCO(\CIC1Cos/n11310 ));
  CIC1Cos_SLICE_918 \CIC1Cos/SLICE_918 ( .D1(\CIC1Cos/d8_61 ), 
    .C1(\CIC1Cos/n6634 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_61 ), 
    .D0(\CIC1Cos/d8_60 ), .C0(\CIC1Cos/n6635 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_60 ), .DI1(\CIC1Cos/d9_71_N_1674_61 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_60 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11308 ), .F0(\CIC1Cos/d9_71_N_1674_60 ), 
    .Q0(\CIC1Cos/d9_60 ), .F1(\CIC1Cos/d9_71_N_1674_61 ), .Q1(\CIC1Cos/d9_61 ), 
    .FCO(\CIC1Cos/n11309 ));
  CIC1Cos_SLICE_919 \CIC1Cos/SLICE_919 ( .D1(\CIC1Cos/d8_59 ), 
    .C1(\CIC1Cos/n6636 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_59 ), 
    .D0(\CIC1Cos/d8_58 ), .C0(\CIC1Cos/n6637 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_58 ), .DI1(\CIC1Cos/d9_71_N_1674_59 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_58 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11307 ), .F0(\CIC1Cos/d9_71_N_1674_58 ), 
    .Q0(\CIC1Cos/d9_58 ), .F1(\CIC1Cos/d9_71_N_1674_59 ), .Q1(\CIC1Cos/d9_59 ), 
    .FCO(\CIC1Cos/n11308 ));
  CIC1Cos_SLICE_920 \CIC1Cos/SLICE_920 ( .D1(\CIC1Cos/d8_57 ), 
    .C1(\CIC1Cos/n6638 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_57 ), 
    .D0(\CIC1Cos/d8_56 ), .C0(\CIC1Cos/n6639 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_56 ), .DI1(\CIC1Cos/d9_71_N_1674_57 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_56 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11306 ), .F0(\CIC1Cos/d9_71_N_1674_56 ), 
    .Q0(\CIC1Cos/d9_56 ), .F1(\CIC1Cos/d9_71_N_1674_57 ), .Q1(\CIC1Cos/d9_57 ), 
    .FCO(\CIC1Cos/n11307 ));
  CIC1Cos_SLICE_921 \CIC1Cos/SLICE_921 ( .D1(\CIC1Cos/d8_55 ), 
    .C1(\CIC1Cos/n6640 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_55 ), 
    .D0(\CIC1Cos/d8_54 ), .C0(\CIC1Cos/n6641 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_54 ), .DI1(\CIC1Cos/d9_71_N_1674_55 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_54 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11305 ), .F0(\CIC1Cos/d9_71_N_1674_54 ), 
    .Q0(\CIC1Cos/d9_54 ), .F1(\CIC1Cos/d9_71_N_1674_55 ), .Q1(\CIC1Cos/d9_55 ), 
    .FCO(\CIC1Cos/n11306 ));
  CIC1Cos_SLICE_922 \CIC1Cos/SLICE_922 ( .D1(\CIC1Cos/d8_53 ), 
    .C1(\CIC1Cos/n6642 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_53 ), 
    .D0(\CIC1Cos/d8_52 ), .C0(\CIC1Cos/n6643 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_52 ), .DI1(\CIC1Cos/d9_71_N_1674_53 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_52 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11304 ), .F0(\CIC1Cos/d9_71_N_1674_52 ), 
    .Q0(\CIC1Cos/d9_52 ), .F1(\CIC1Cos/d9_71_N_1674_53 ), .Q1(\CIC1Cos/d9_53 ), 
    .FCO(\CIC1Cos/n11305 ));
  CIC1Cos_SLICE_923 \CIC1Cos/SLICE_923 ( .D1(\CIC1Cos/d8_51 ), 
    .C1(\CIC1Cos/n6644 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_51 ), 
    .D0(\CIC1Cos/d8_50 ), .C0(\CIC1Cos/n6645 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_50 ), .DI1(\CIC1Cos/d9_71_N_1674_51 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_50 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11303 ), .F0(\CIC1Cos/d9_71_N_1674_50 ), 
    .Q0(\CIC1Cos/d9_50 ), .F1(\CIC1Cos/d9_71_N_1674_51 ), .Q1(\CIC1Cos/d9_51 ), 
    .FCO(\CIC1Cos/n11304 ));
  CIC1Cos_SLICE_924 \CIC1Cos/SLICE_924 ( .D1(\CIC1Cos/d8_49 ), 
    .C1(\CIC1Cos/n6646 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_49 ), 
    .D0(\CIC1Cos/d8_48 ), .C0(\CIC1Cos/n6647 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_48 ), .DI1(\CIC1Cos/d9_71_N_1674_49 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_48 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11302 ), .F0(\CIC1Cos/d9_71_N_1674_48 ), 
    .Q0(\CIC1Cos/d9_48 ), .F1(\CIC1Cos/d9_71_N_1674_49 ), .Q1(\CIC1Cos/d9_49 ), 
    .FCO(\CIC1Cos/n11303 ));
  CIC1Cos_SLICE_925 \CIC1Cos/SLICE_925 ( .D1(\CIC1Cos/d8_47 ), 
    .C1(\CIC1Cos/n6648 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_47 ), 
    .D0(\CIC1Cos/d8_46 ), .C0(\CIC1Cos/n6649 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_46 ), .DI1(\CIC1Cos/d9_71_N_1674_47 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_46 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11301 ), .F0(\CIC1Cos/d9_71_N_1674_46 ), 
    .Q0(\CIC1Cos/d9_46 ), .F1(\CIC1Cos/d9_71_N_1674_47 ), .Q1(\CIC1Cos/d9_47 ), 
    .FCO(\CIC1Cos/n11302 ));
  CIC1Cos_SLICE_926 \CIC1Cos/SLICE_926 ( .D1(\CIC1Cos/d8_45 ), 
    .C1(\CIC1Cos/n6650 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_45 ), 
    .D0(\CIC1Cos/d8_44 ), .C0(\CIC1Cos/n6651 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_44 ), .DI1(\CIC1Cos/d9_71_N_1674_45 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_44 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11300 ), .F0(\CIC1Cos/d9_71_N_1674_44 ), 
    .Q0(\CIC1Cos/d9_44 ), .F1(\CIC1Cos/d9_71_N_1674_45 ), .Q1(\CIC1Cos/d9_45 ), 
    .FCO(\CIC1Cos/n11301 ));
  CIC1Cos_SLICE_927 \CIC1Cos/SLICE_927 ( .D1(\CIC1Cos/d8_43 ), 
    .C1(\CIC1Cos/n6652 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_43 ), 
    .D0(\CIC1Cos/d8_42 ), .C0(\CIC1Cos/n6653 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_42 ), .DI1(\CIC1Cos/d9_71_N_1674_43 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_42 ), .CE(\CIC1Cos/osc_clk_enable_1283 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11299 ), .F0(\CIC1Cos/d9_71_N_1674_42 ), 
    .Q0(\CIC1Cos/d9_42 ), .F1(\CIC1Cos/d9_71_N_1674_43 ), .Q1(\CIC1Cos/d9_43 ), 
    .FCO(\CIC1Cos/n11300 ));
  CIC1Cos_SLICE_928 \CIC1Cos/SLICE_928 ( .D1(\CIC1Cos/d8_41 ), 
    .C1(\CIC1Cos/n6654 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_41 ), 
    .D0(\CIC1Cos/d8_40 ), .C0(\CIC1Cos/n6655 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_40 ), .DI1(\CIC1Cos/d9_71_N_1674_41 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_40 ), .CE(\CIC1Cos/osc_clk_enable_1283 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11298 ), .F0(\CIC1Cos/d9_71_N_1674_40 ), 
    .Q0(\CIC1Cos/d9_40 ), .F1(\CIC1Cos/d9_71_N_1674_41 ), .Q1(\CIC1Cos/d9_41 ), 
    .FCO(\CIC1Cos/n11299 ));
  CIC1Cos_SLICE_929 \CIC1Cos/SLICE_929 ( .D1(\CIC1Cos/d8_39 ), 
    .C1(\CIC1Cos/n6656 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_39 ), 
    .D0(\CIC1Cos/d8_38 ), .C0(\CIC1Cos/n6657 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_38 ), .DI1(\CIC1Cos/d9_71_N_1674_39 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_38 ), .CE(\CIC1Cos/osc_clk_enable_1283 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11297 ), .F0(\CIC1Cos/d9_71_N_1674_38 ), 
    .Q0(\CIC1Cos/d9_38 ), .F1(\CIC1Cos/d9_71_N_1674_39 ), .Q1(\CIC1Cos/d9_39 ), 
    .FCO(\CIC1Cos/n11298 ));
  CIC1Cos_SLICE_930 \CIC1Cos/SLICE_930 ( .D1(\CIC1Cos/d8_37 ), 
    .C1(\CIC1Cos/n6658 ), .B1(\CIC1Cos/n6622 ), .A1(\CIC1Cos/d_d8_37 ), 
    .D0(\CIC1Cos/d8_36 ), .C0(\CIC1Cos/n6659 ), .B0(\CIC1Cos/n6622 ), 
    .A0(\CIC1Cos/d_d8_36 ), .DI1(\CIC1Cos/d9_71_N_1674_37 ), 
    .DI0(\CIC1Cos/d9_71_N_1674_36 ), .CE(\CIC1Cos/osc_clk_enable_1283 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11296 ), .F0(\CIC1Cos/d9_71_N_1674_36 ), 
    .Q0(\CIC1Cos/d9_36 ), .F1(\CIC1Cos/d9_71_N_1674_37 ), .Q1(\CIC1Cos/d9_37 ), 
    .FCO(\CIC1Cos/n11297 ));
  CIC1Cos_SLICE_931 \CIC1Cos/SLICE_931 ( .A1(\CIC1Cos/n6622 ), 
    .FCO(\CIC1Cos/n11296 ));
  CIC1Cos_SLICE_932 \CIC1Cos/SLICE_932 ( .B0(\CIC1Cos/d_d9_71 ), 
    .A0(\CIC1Cos/d9_71 ), .FCI(\CIC1Cos/n11292 ), .F0(\CIC1Cos/n6776 ));
  CIC1Cos_SLICE_933 \CIC1Cos/SLICE_933 ( .B1(\CIC1Cos/d_d9_70 ), 
    .A1(\CIC1Cos/d9_70 ), .B0(\CIC1Cos/d_d9_69 ), .A0(\CIC1Cos/d9_69 ), 
    .FCI(\CIC1Cos/n11291 ), .F0(\CIC1Cos/n6778 ), .F1(\CIC1Cos/n6777 ), 
    .FCO(\CIC1Cos/n11292 ));
  CIC1Cos_SLICE_934 \CIC1Cos/SLICE_934 ( .B1(\CIC1Cos/d_d9_68 ), 
    .A1(\CIC1Cos/d9_68 ), .B0(\CIC1Cos/d_d9_67 ), .A0(\CIC1Cos/d9_67 ), 
    .FCI(\CIC1Cos/n11290 ), .F0(\CIC1Cos/n6780 ), .F1(\CIC1Cos/n6779 ), 
    .FCO(\CIC1Cos/n11291 ));
  CIC1Cos_SLICE_935 \CIC1Cos/SLICE_935 ( .B1(\CIC1Cos/d_d9_66 ), 
    .A1(\CIC1Cos/d9_66 ), .B0(\CIC1Cos/d_d9_65 ), .A0(\CIC1Cos/d9_65 ), 
    .FCI(\CIC1Cos/n11289 ), .F0(\CIC1Cos/n6782 ), .F1(\CIC1Cos/n6781 ), 
    .FCO(\CIC1Cos/n11290 ));
  CIC1Cos_SLICE_936 \CIC1Cos/SLICE_936 ( .B1(\CIC1Cos/d_d9_64 ), 
    .A1(\CIC1Cos/d9_64 ), .B0(\CIC1Cos/d_d9_63 ), .A0(\CIC1Cos/d9_63 ), 
    .FCI(\CIC1Cos/n11288 ), .F0(\CIC1Cos/n6784 ), .F1(\CIC1Cos/n6783 ), 
    .FCO(\CIC1Cos/n11289 ));
  CIC1Cos_SLICE_937 \CIC1Cos/SLICE_937 ( .B1(\CIC1Cos/d_d9_62 ), 
    .A1(\CIC1Cos/d9_62 ), .B0(\CIC1Cos/d_d9_61 ), .A0(\CIC1Cos/d9_61 ), 
    .FCI(\CIC1Cos/n11287 ), .F0(\CIC1Cos/n6786 ), .F1(\CIC1Cos/n6785 ), 
    .FCO(\CIC1Cos/n11288 ));
  CIC1Cos_SLICE_938 \CIC1Cos/SLICE_938 ( .B1(\CIC1Cos/d_d9_60 ), 
    .A1(\CIC1Cos/d9_60 ), .B0(\CIC1Cos/d_d9_59 ), .A0(\CIC1Cos/d9_59 ), 
    .FCI(\CIC1Cos/n11286 ), .F0(\CIC1Cos/n6788 ), .F1(\CIC1Cos/n6787 ), 
    .FCO(\CIC1Cos/n11287 ));
  CIC1Cos_SLICE_939 \CIC1Cos/SLICE_939 ( .B1(\CIC1Cos/d_d9_58 ), 
    .A1(\CIC1Cos/d9_58 ), .B0(\CIC1Cos/d_d9_57 ), .A0(\CIC1Cos/d9_57 ), 
    .FCI(\CIC1Cos/n11285 ), .F0(\CIC1Cos/n6790 ), .F1(\CIC1Cos/n6789 ), 
    .FCO(\CIC1Cos/n11286 ));
  CIC1Cos_SLICE_940 \CIC1Cos/SLICE_940 ( .B1(\CIC1Cos/d_d9_56 ), 
    .A1(\CIC1Cos/d9_56 ), .B0(\CIC1Cos/d_d9_55 ), .A0(\CIC1Cos/d9_55 ), 
    .FCI(\CIC1Cos/n11284 ), .FCO(\CIC1Cos/n11285 ));
  CIC1Cos_SLICE_941 \CIC1Cos/SLICE_941 ( .B1(\CIC1Cos/d_d9_54 ), 
    .A1(\CIC1Cos/d9_54 ), .B0(\CIC1Cos/d_d9_53 ), .A0(\CIC1Cos/d9_53 ), 
    .FCI(\CIC1Cos/n11283 ), .FCO(\CIC1Cos/n11284 ));
  CIC1Cos_SLICE_942 \CIC1Cos/SLICE_942 ( .B1(\CIC1Cos/d_d9_52 ), 
    .A1(\CIC1Cos/d9_52 ), .B0(\CIC1Cos/d_d9_51 ), .A0(\CIC1Cos/d9_51 ), 
    .FCI(\CIC1Cos/n11282 ), .FCO(\CIC1Cos/n11283 ));
  CIC1Cos_SLICE_943 \CIC1Cos/SLICE_943 ( .B1(\CIC1Cos/d_d9_50 ), 
    .A1(\CIC1Cos/d9_50 ), .B0(\CIC1Cos/d_d9_49 ), .A0(\CIC1Cos/d9_49 ), 
    .FCI(\CIC1Cos/n11281 ), .FCO(\CIC1Cos/n11282 ));
  CIC1Cos_SLICE_944 \CIC1Cos/SLICE_944 ( .B1(\CIC1Cos/d_d9_48 ), 
    .A1(\CIC1Cos/d9_48 ), .B0(\CIC1Cos/d_d9_47 ), .A0(\CIC1Cos/d9_47 ), 
    .FCI(\CIC1Cos/n11280 ), .FCO(\CIC1Cos/n11281 ));
  CIC1Cos_SLICE_945 \CIC1Cos/SLICE_945 ( .B1(\CIC1Cos/d_d9_46 ), 
    .A1(\CIC1Cos/d9_46 ), .B0(\CIC1Cos/d_d9_45 ), .A0(\CIC1Cos/d9_45 ), 
    .FCI(\CIC1Cos/n11279 ), .FCO(\CIC1Cos/n11280 ));
  CIC1Cos_SLICE_946 \CIC1Cos/SLICE_946 ( .B1(\CIC1Cos/d_d9_44 ), 
    .A1(\CIC1Cos/d9_44 ), .B0(\CIC1Cos/d_d9_43 ), .A0(\CIC1Cos/d9_43 ), 
    .FCI(\CIC1Cos/n11278 ), .FCO(\CIC1Cos/n11279 ));
  CIC1Cos_SLICE_947 \CIC1Cos/SLICE_947 ( .B1(\CIC1Cos/d_d9_42 ), 
    .A1(\CIC1Cos/d9_42 ), .B0(\CIC1Cos/d_d9_41 ), .A0(\CIC1Cos/d9_41 ), 
    .FCI(\CIC1Cos/n11277 ), .FCO(\CIC1Cos/n11278 ));
  CIC1Cos_SLICE_948 \CIC1Cos/SLICE_948 ( .B1(\CIC1Cos/d_d9_40 ), 
    .A1(\CIC1Cos/d9_40 ), .B0(\CIC1Cos/d_d9_39 ), .A0(\CIC1Cos/d9_39 ), 
    .FCI(\CIC1Cos/n11276 ), .FCO(\CIC1Cos/n11277 ));
  CIC1Cos_SLICE_949 \CIC1Cos/SLICE_949 ( .B1(\CIC1Cos/d_d9_38 ), 
    .A1(\CIC1Cos/d9_38 ), .B0(\CIC1Cos/d_d9_37 ), .A0(\CIC1Cos/d9_37 ), 
    .FCI(\CIC1Cos/n11275 ), .FCO(\CIC1Cos/n11276 ));
  CIC1Cos_SLICE_950 \CIC1Cos/SLICE_950 ( .B1(\CIC1Cos/d_d9_36 ), 
    .A1(\CIC1Cos/d9_36 ), .FCO(\CIC1Cos/n11275 ));
  CIC1Cos_SLICE_951 \CIC1Cos/SLICE_951 ( .B0(\CIC1Cos/d_d9_71 ), 
    .A0(\CIC1Cos/d9_71 ), .FCI(\CIC1Cos/n11274 ), .F0(\CIC1Cos/n6814 ));
  CIC1Cos_SLICE_952 \CIC1Cos/SLICE_952 ( .B1(\CIC1Cos/d_d9_70 ), 
    .A1(\CIC1Cos/d9_70 ), .B0(\CIC1Cos/d_d9_69 ), .A0(\CIC1Cos/d9_69 ), 
    .FCI(\CIC1Cos/n11273 ), .F0(\CIC1Cos/n6816 ), .F1(\CIC1Cos/n6815 ), 
    .FCO(\CIC1Cos/n11274 ));
  CIC1Cos_SLICE_953 \CIC1Cos/SLICE_953 ( .B1(\CIC1Cos/d_d9_68 ), 
    .A1(\CIC1Cos/d9_68 ), .B0(\CIC1Cos/d_d9_67 ), .A0(\CIC1Cos/d9_67 ), 
    .FCI(\CIC1Cos/n11272 ), .F0(\CIC1Cos/n6818 ), .F1(\CIC1Cos/n6817 ), 
    .FCO(\CIC1Cos/n11273 ));
  CIC1Cos_SLICE_954 \CIC1Cos/SLICE_954 ( .B1(\CIC1Cos/d_d9_66 ), 
    .A1(\CIC1Cos/d9_66 ), .B0(\CIC1Cos/d_d9_65 ), .A0(\CIC1Cos/d9_65 ), 
    .FCI(\CIC1Cos/n11271 ), .F0(\CIC1Cos/n6820 ), .F1(\CIC1Cos/n6819 ), 
    .FCO(\CIC1Cos/n11272 ));
  CIC1Cos_SLICE_955 \CIC1Cos/SLICE_955 ( .B1(\CIC1Cos/d_d9_64 ), 
    .A1(\CIC1Cos/d9_64 ), .B0(\CIC1Cos/d_d9_63 ), .A0(\CIC1Cos/d9_63 ), 
    .FCI(\CIC1Cos/n11270 ), .F0(\CIC1Cos/n6822 ), .F1(\CIC1Cos/n6821 ), 
    .FCO(\CIC1Cos/n11271 ));
  CIC1Cos_SLICE_956 \CIC1Cos/SLICE_956 ( .B1(\CIC1Cos/d_d9_62 ), 
    .A1(\CIC1Cos/d9_62 ), .B0(\CIC1Cos/d_d9_61 ), .A0(\CIC1Cos/d9_61 ), 
    .FCI(\CIC1Cos/n11269 ), .F0(\CIC1Cos/n6824 ), .F1(\CIC1Cos/n6823 ), 
    .FCO(\CIC1Cos/n11270 ));
  CIC1Cos_SLICE_957 \CIC1Cos/SLICE_957 ( .B1(\CIC1Cos/d_d9_60 ), 
    .A1(\CIC1Cos/d9_60 ), .B0(\CIC1Cos/d_d9_59 ), .A0(\CIC1Cos/d9_59 ), 
    .FCI(\CIC1Cos/n11268 ), .F0(\CIC1Cos/n6826 ), .F1(\CIC1Cos/n6825 ), 
    .FCO(\CIC1Cos/n11269 ));
  CIC1Cos_SLICE_958 \CIC1Cos/SLICE_958 ( .B1(\CIC1Cos/d_d9_58 ), 
    .A1(\CIC1Cos/d9_58 ), .B0(\CIC1Cos/d_d9_57 ), .A0(\CIC1Cos/d9_57 ), 
    .FCI(\CIC1Cos/n11267 ), .F0(\CIC1Cos/n6828 ), .F1(\CIC1Cos/n6827 ), 
    .FCO(\CIC1Cos/n11268 ));
  CIC1Cos_SLICE_959 \CIC1Cos/SLICE_959 ( .B1(\CIC1Cos/d_d9_56 ), 
    .A1(\CIC1Cos/d9_56 ), .B0(\CIC1Cos/d_d9_55 ), .A0(\CIC1Cos/d9_55 ), 
    .FCI(\CIC1Cos/n11266 ), .FCO(\CIC1Cos/n11267 ));
  CIC1Cos_SLICE_960 \CIC1Cos/SLICE_960 ( .B1(\CIC1Cos/d_d9_54 ), 
    .A1(\CIC1Cos/d9_54 ), .B0(\CIC1Cos/d_d9_53 ), .A0(\CIC1Cos/d9_53 ), 
    .FCI(\CIC1Cos/n11265 ), .FCO(\CIC1Cos/n11266 ));
  CIC1Cos_SLICE_961 \CIC1Cos/SLICE_961 ( .B1(\CIC1Cos/d_d9_52 ), 
    .A1(\CIC1Cos/d9_52 ), .B0(\CIC1Cos/d_d9_51 ), .A0(\CIC1Cos/d9_51 ), 
    .FCI(\CIC1Cos/n11264 ), .FCO(\CIC1Cos/n11265 ));
  CIC1Cos_SLICE_962 \CIC1Cos/SLICE_962 ( .B1(\CIC1Cos/d_d9_50 ), 
    .A1(\CIC1Cos/d9_50 ), .B0(\CIC1Cos/d_d9_49 ), .A0(\CIC1Cos/d9_49 ), 
    .FCI(\CIC1Cos/n11263 ), .FCO(\CIC1Cos/n11264 ));
  CIC1Cos_SLICE_963 \CIC1Cos/SLICE_963 ( .B1(\CIC1Cos/d_d9_48 ), 
    .A1(\CIC1Cos/d9_48 ), .B0(\CIC1Cos/d_d9_47 ), .A0(\CIC1Cos/d9_47 ), 
    .FCI(\CIC1Cos/n11262 ), .FCO(\CIC1Cos/n11263 ));
  CIC1Cos_SLICE_964 \CIC1Cos/SLICE_964 ( .B1(\CIC1Cos/d_d9_46 ), 
    .A1(\CIC1Cos/d9_46 ), .B0(\CIC1Cos/d_d9_45 ), .A0(\CIC1Cos/d9_45 ), 
    .FCI(\CIC1Cos/n11261 ), .FCO(\CIC1Cos/n11262 ));
  CIC1Cos_SLICE_965 \CIC1Cos/SLICE_965 ( .B1(\CIC1Cos/d_d9_44 ), 
    .A1(\CIC1Cos/d9_44 ), .B0(\CIC1Cos/d_d9_43 ), .A0(\CIC1Cos/d9_43 ), 
    .FCI(\CIC1Cos/n11260 ), .FCO(\CIC1Cos/n11261 ));
  CIC1Cos_SLICE_966 \CIC1Cos/SLICE_966 ( .B1(\CIC1Cos/d_d9_42 ), 
    .A1(\CIC1Cos/d9_42 ), .B0(\CIC1Cos/d_d9_41 ), .A0(\CIC1Cos/d9_41 ), 
    .FCI(\CIC1Cos/n11259 ), .FCO(\CIC1Cos/n11260 ));
  CIC1Cos_SLICE_967 \CIC1Cos/SLICE_967 ( .B1(\CIC1Cos/d_d9_40 ), 
    .A1(\CIC1Cos/d9_40 ), .B0(\CIC1Cos/d_d9_39 ), .A0(\CIC1Cos/d9_39 ), 
    .FCI(\CIC1Cos/n11258 ), .FCO(\CIC1Cos/n11259 ));
  CIC1Cos_SLICE_968 \CIC1Cos/SLICE_968 ( .B1(\CIC1Cos/d_d9_38 ), 
    .A1(\CIC1Cos/d9_38 ), .B0(\CIC1Cos/d_d9_37 ), .A0(\CIC1Cos/d9_37 ), 
    .FCI(\CIC1Cos/n11257 ), .FCO(\CIC1Cos/n11258 ));
  CIC1Cos_SLICE_969 \CIC1Cos/SLICE_969 ( .B1(\CIC1Cos/d_d9_36 ), 
    .A1(\CIC1Cos/d9_36 ), .FCO(\CIC1Cos/n11257 ));
  CIC1Cos_SLICE_970 \CIC1Cos/SLICE_970 ( .B1(\CIC1Cos/d2_53 ), 
    .A1(\CIC1Cos/d1_53 ), .B0(\CIC1Cos/d2_52 ), .A0(\CIC1Cos/d1_52 ), 
    .FCI(\CIC1Cos/n11900 ), .F0(\CIC1Cos/n4971 ), .F1(\CIC1Cos/n4970 ), 
    .FCO(\CIC1Cos/n11901 ));
  CIC1Cos_SLICE_971 \CIC1Cos/SLICE_971 ( .B0(\CIC1Cos/d_d7_71 ), 
    .A0(\CIC1Cos/d7_71 ), .FCI(\CIC1Cos/n11666 ), .F0(\CIC1Cos/n5864 ));
  CIC1Cos_SLICE_972 \CIC1Cos/SLICE_972 ( .B1(\CIC1Cos/d_d7_70 ), 
    .A1(\CIC1Cos/d7_70 ), .B0(\CIC1Cos/d_d7_69 ), .A0(\CIC1Cos/d7_69 ), 
    .FCI(\CIC1Cos/n11665 ), .F0(\CIC1Cos/n5866 ), .F1(\CIC1Cos/n5865 ), 
    .FCO(\CIC1Cos/n11666 ));
  CIC1Cos_SLICE_973 \CIC1Cos/SLICE_973 ( .B1(\CIC1Cos/d_d7_68 ), 
    .A1(\CIC1Cos/d7_68 ), .B0(\CIC1Cos/d_d7_67 ), .A0(\CIC1Cos/d7_67 ), 
    .FCI(\CIC1Cos/n11664 ), .F0(\CIC1Cos/n5868 ), .F1(\CIC1Cos/n5867 ), 
    .FCO(\CIC1Cos/n11665 ));
  CIC1Cos_SLICE_974 \CIC1Cos/SLICE_974 ( .B1(\CIC1Cos/d_d7_66 ), 
    .A1(\CIC1Cos/d7_66 ), .B0(\CIC1Cos/d_d7_65 ), .A0(\CIC1Cos/d7_65 ), 
    .FCI(\CIC1Cos/n11663 ), .F0(\CIC1Cos/n5870 ), .F1(\CIC1Cos/n5869 ), 
    .FCO(\CIC1Cos/n11664 ));
  CIC1Cos_SLICE_975 \CIC1Cos/SLICE_975 ( .B1(\CIC1Cos/d_d7_64 ), 
    .A1(\CIC1Cos/d7_64 ), .B0(\CIC1Cos/d_d7_63 ), .A0(\CIC1Cos/d7_63 ), 
    .FCI(\CIC1Cos/n11662 ), .F0(\CIC1Cos/n5872 ), .F1(\CIC1Cos/n5871 ), 
    .FCO(\CIC1Cos/n11663 ));
  CIC1Cos_SLICE_976 \CIC1Cos/SLICE_976 ( .B1(\CIC1Cos/d_d7_62 ), 
    .A1(\CIC1Cos/d7_62 ), .B0(\CIC1Cos/d_d7_61 ), .A0(\CIC1Cos/d7_61 ), 
    .FCI(\CIC1Cos/n11661 ), .F0(\CIC1Cos/n5874 ), .F1(\CIC1Cos/n5873 ), 
    .FCO(\CIC1Cos/n11662 ));
  CIC1Cos_SLICE_977 \CIC1Cos/SLICE_977 ( .B1(\CIC1Cos/d_d7_60 ), 
    .A1(\CIC1Cos/d7_60 ), .B0(\CIC1Cos/d_d7_59 ), .A0(\CIC1Cos/d7_59 ), 
    .FCI(\CIC1Cos/n11660 ), .F0(\CIC1Cos/n5876 ), .F1(\CIC1Cos/n5875 ), 
    .FCO(\CIC1Cos/n11661 ));
  CIC1Cos_SLICE_978 \CIC1Cos/SLICE_978 ( .B1(\CIC1Cos/d_d7_58 ), 
    .A1(\CIC1Cos/d7_58 ), .B0(\CIC1Cos/d_d7_57 ), .A0(\CIC1Cos/d7_57 ), 
    .FCI(\CIC1Cos/n11659 ), .F0(\CIC1Cos/n5878 ), .F1(\CIC1Cos/n5877 ), 
    .FCO(\CIC1Cos/n11660 ));
  CIC1Cos_SLICE_979 \CIC1Cos/SLICE_979 ( .B1(\CIC1Cos/d_d7_56 ), 
    .A1(\CIC1Cos/d7_56 ), .B0(\CIC1Cos/d_d7_55 ), .A0(\CIC1Cos/d7_55 ), 
    .FCI(\CIC1Cos/n11658 ), .F0(\CIC1Cos/n5880 ), .F1(\CIC1Cos/n5879 ), 
    .FCO(\CIC1Cos/n11659 ));
  CIC1Cos_SLICE_980 \CIC1Cos/SLICE_980 ( .B1(\CIC1Cos/d_d7_54 ), 
    .A1(\CIC1Cos/d7_54 ), .B0(\CIC1Cos/d_d7_53 ), .A0(\CIC1Cos/d7_53 ), 
    .FCI(\CIC1Cos/n11657 ), .F0(\CIC1Cos/n5882 ), .F1(\CIC1Cos/n5881 ), 
    .FCO(\CIC1Cos/n11658 ));
  CIC1Cos_SLICE_981 \CIC1Cos/SLICE_981 ( .B1(\CIC1Cos/d_d7_52 ), 
    .A1(\CIC1Cos/d7_52 ), .B0(\CIC1Cos/d_d7_51 ), .A0(\CIC1Cos/d7_51 ), 
    .FCI(\CIC1Cos/n11656 ), .F0(\CIC1Cos/n5884 ), .F1(\CIC1Cos/n5883 ), 
    .FCO(\CIC1Cos/n11657 ));
  CIC1Cos_SLICE_982 \CIC1Cos/SLICE_982 ( .B1(\CIC1Cos/d_d7_50 ), 
    .A1(\CIC1Cos/d7_50 ), .B0(\CIC1Cos/d_d7_49 ), .A0(\CIC1Cos/d7_49 ), 
    .FCI(\CIC1Cos/n11655 ), .F0(\CIC1Cos/n5886 ), .F1(\CIC1Cos/n5885 ), 
    .FCO(\CIC1Cos/n11656 ));
  CIC1Cos_SLICE_983 \CIC1Cos/SLICE_983 ( .B1(\CIC1Cos/d_d7_48 ), 
    .A1(\CIC1Cos/d7_48 ), .B0(\CIC1Cos/d_d7_47 ), .A0(\CIC1Cos/d7_47 ), 
    .FCI(\CIC1Cos/n11654 ), .F0(\CIC1Cos/n5888 ), .F1(\CIC1Cos/n5887 ), 
    .FCO(\CIC1Cos/n11655 ));
  CIC1Cos_SLICE_984 \CIC1Cos/SLICE_984 ( .B1(\CIC1Cos/d_d7_46 ), 
    .A1(\CIC1Cos/d7_46 ), .B0(\CIC1Cos/d_d7_45 ), .A0(\CIC1Cos/d7_45 ), 
    .FCI(\CIC1Cos/n11653 ), .F0(\CIC1Cos/n5890 ), .F1(\CIC1Cos/n5889 ), 
    .FCO(\CIC1Cos/n11654 ));
  CIC1Cos_SLICE_985 \CIC1Cos/SLICE_985 ( .B1(\CIC1Cos/d_d7_44 ), 
    .A1(\CIC1Cos/d7_44 ), .B0(\CIC1Cos/d_d7_43 ), .A0(\CIC1Cos/d7_43 ), 
    .FCI(\CIC1Cos/n11652 ), .F0(\CIC1Cos/n5892 ), .F1(\CIC1Cos/n5891 ), 
    .FCO(\CIC1Cos/n11653 ));
  CIC1Cos_SLICE_986 \CIC1Cos/SLICE_986 ( .B1(\CIC1Cos/d_d7_42 ), 
    .A1(\CIC1Cos/d7_42 ), .B0(\CIC1Cos/d_d7_41 ), .A0(\CIC1Cos/d7_41 ), 
    .FCI(\CIC1Cos/n11651 ), .F0(\CIC1Cos/n5894 ), .F1(\CIC1Cos/n5893 ), 
    .FCO(\CIC1Cos/n11652 ));
  CIC1Cos_SLICE_987 \CIC1Cos/SLICE_987 ( .B1(\CIC1Cos/d_d7_40 ), 
    .A1(\CIC1Cos/d7_40 ), .B0(\CIC1Cos/d_d7_39 ), .A0(\CIC1Cos/d7_39 ), 
    .FCI(\CIC1Cos/n11650 ), .F0(\CIC1Cos/n5896 ), .F1(\CIC1Cos/n5895 ), 
    .FCO(\CIC1Cos/n11651 ));
  CIC1Cos_SLICE_988 \CIC1Cos/SLICE_988 ( .B0(\CIC1Cos/d_d9_35 ), 
    .A0(\CIC1Cos/d9_35 ), .FCI(\CIC1Cos/n11150 ), .F1(\CIC1Cos/n6774 ));
  CIC1Cos_SLICE_989 \CIC1Cos/SLICE_989 ( .B1(\CIC1Cos/d_d9_34 ), 
    .A1(\CIC1Cos/d9_34 ), .B0(\CIC1Cos/d_d9_33 ), .A0(\CIC1Cos/d9_33 ), 
    .FCI(\CIC1Cos/n11149 ), .FCO(\CIC1Cos/n11150 ));
  CIC1Cos_SLICE_990 \CIC1Cos/SLICE_990 ( .B1(\CIC1Cos/d_d9_32 ), 
    .A1(\CIC1Cos/d9_32 ), .B0(\CIC1Cos/d_d9_31 ), .A0(\CIC1Cos/d9_31 ), 
    .FCI(\CIC1Cos/n11148 ), .FCO(\CIC1Cos/n11149 ));
  CIC1Cos_SLICE_991 \CIC1Cos/SLICE_991 ( .B1(\CIC1Cos/d_d9_30 ), 
    .A1(\CIC1Cos/d9_30 ), .B0(\CIC1Cos/d_d9_29 ), .A0(\CIC1Cos/d9_29 ), 
    .FCI(\CIC1Cos/n11147 ), .FCO(\CIC1Cos/n11148 ));
  CIC1Cos_SLICE_992 \CIC1Cos/SLICE_992 ( .B1(\CIC1Cos/d_d9_28 ), 
    .A1(\CIC1Cos/d9_28 ), .B0(\CIC1Cos/d_d9_27 ), .A0(\CIC1Cos/d9_27 ), 
    .FCI(\CIC1Cos/n11146 ), .FCO(\CIC1Cos/n11147 ));
  CIC1Cos_SLICE_993 \CIC1Cos/SLICE_993 ( .B1(\CIC1Cos/d_d9_26 ), 
    .A1(\CIC1Cos/d9_26 ), .B0(\CIC1Cos/d_d9_25 ), .A0(\CIC1Cos/d9_25 ), 
    .FCI(\CIC1Cos/n11145 ), .FCO(\CIC1Cos/n11146 ));
  CIC1Cos_SLICE_994 \CIC1Cos/SLICE_994 ( .B1(\CIC1Cos/d_d9_24 ), 
    .A1(\CIC1Cos/d9_24 ), .B0(\CIC1Cos/d_d9_23 ), .A0(\CIC1Cos/d9_23 ), 
    .FCI(\CIC1Cos/n11144 ), .FCO(\CIC1Cos/n11145 ));
  CIC1Cos_SLICE_995 \CIC1Cos/SLICE_995 ( .B1(\CIC1Cos/d_d9_22 ), 
    .A1(\CIC1Cos/d9_22 ), .B0(\CIC1Cos/d_d9_21 ), .A0(\CIC1Cos/d9_21 ), 
    .FCI(\CIC1Cos/n11143 ), .FCO(\CIC1Cos/n11144 ));
  CIC1Cos_SLICE_996 \CIC1Cos/SLICE_996 ( .B1(\CIC1Cos/d_d9_20 ), 
    .A1(\CIC1Cos/d9_20 ), .B0(\CIC1Cos/d_d9_19 ), .A0(\CIC1Cos/d9_19 ), 
    .FCI(\CIC1Cos/n11142 ), .FCO(\CIC1Cos/n11143 ));
  CIC1Cos_SLICE_997 \CIC1Cos/SLICE_997 ( .B1(\CIC1Cos/d_d9_18 ), 
    .A1(\CIC1Cos/d9_18 ), .B0(\CIC1Cos/d_d9_17 ), .A0(\CIC1Cos/d9_17 ), 
    .FCI(\CIC1Cos/n11141 ), .FCO(\CIC1Cos/n11142 ));
  CIC1Cos_SLICE_998 \CIC1Cos/SLICE_998 ( .B1(\CIC1Cos/d_d9_16 ), 
    .A1(\CIC1Cos/d9_16 ), .B0(\CIC1Cos/d_d9_15 ), .A0(\CIC1Cos/d9_15 ), 
    .FCI(\CIC1Cos/n11140 ), .FCO(\CIC1Cos/n11141 ));
  CIC1Cos_SLICE_999 \CIC1Cos/SLICE_999 ( .B1(\CIC1Cos/d_d9_14 ), 
    .A1(\CIC1Cos/d9_14 ), .B0(\CIC1Cos/d_d9_13 ), .A0(\CIC1Cos/d9_13 ), 
    .FCI(\CIC1Cos/n11139 ), .FCO(\CIC1Cos/n11140 ));
  CIC1Cos_SLICE_1000 \CIC1Cos/SLICE_1000 ( .B1(\CIC1Cos/d_d9_12 ), 
    .A1(\CIC1Cos/d9_12 ), .B0(\CIC1Cos/d_d9_11 ), .A0(\CIC1Cos/d9_11 ), 
    .FCI(\CIC1Cos/n11138 ), .FCO(\CIC1Cos/n11139 ));
  CIC1Cos_SLICE_1001 \CIC1Cos/SLICE_1001 ( .B1(\CIC1Cos/d_d9_10 ), 
    .A1(\CIC1Cos/d9_10 ), .B0(\CIC1Cos/d_d9_9 ), .A0(\CIC1Cos/d9_9 ), 
    .FCI(\CIC1Cos/n11137 ), .FCO(\CIC1Cos/n11138 ));
  CIC1Cos_SLICE_1002 \CIC1Cos/SLICE_1002 ( .B1(\CIC1Cos/d_d9_8 ), 
    .A1(\CIC1Cos/d9_8 ), .B0(\CIC1Cos/d_d9_7 ), .A0(\CIC1Cos/d9_7 ), 
    .FCI(\CIC1Cos/n11136 ), .FCO(\CIC1Cos/n11137 ));
  CIC1Cos_SLICE_1003 \CIC1Cos/SLICE_1003 ( .B1(\CIC1Cos/d_d9_6 ), 
    .A1(\CIC1Cos/d9_6 ), .B0(\CIC1Cos/d_d9_5 ), .A0(\CIC1Cos/d9_5 ), 
    .FCI(\CIC1Cos/n11135 ), .FCO(\CIC1Cos/n11136 ));
  CIC1Cos_SLICE_1004 \CIC1Cos/SLICE_1004 ( .B1(\CIC1Cos/d_d9_4 ), 
    .A1(\CIC1Cos/d9_4 ), .B0(\CIC1Cos/d_d9_3 ), .A0(\CIC1Cos/d9_3 ), 
    .FCI(\CIC1Cos/n11134 ), .FCO(\CIC1Cos/n11135 ));
  CIC1Cos_SLICE_1005 \CIC1Cos/SLICE_1005 ( .B1(\CIC1Cos/d_d9_2 ), 
    .A1(\CIC1Cos/d9_2 ), .B0(\CIC1Cos/d_d9_1 ), .A0(\CIC1Cos/d9_1 ), 
    .FCI(\CIC1Cos/n11133 ), .FCO(\CIC1Cos/n11134 ));
  CIC1Cos_SLICE_1006 \CIC1Cos/SLICE_1006 ( .B1(\CIC1Cos/d_d9_0 ), 
    .A1(\CIC1Cos/d9_0 ), .FCO(\CIC1Cos/n11133 ));
  CIC1Cos_SLICE_1007 \CIC1Cos/SLICE_1007 ( .B0(\CIC1Cos/d_d8_35 ), 
    .A0(\CIC1Cos/d8_35 ), .DI0(\CIC1Cos/d9_71_N_1674_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11132 ), 
    .F0(\CIC1Cos/d9_71_N_1674_35 ), .Q0(\CIC1Cos/d9_35 ), .F1(\CIC1Cos/n6622 ));
  CIC1Cos_SLICE_1008 \CIC1Cos/SLICE_1008 ( .B1(\CIC1Cos/d_d8_34 ), 
    .A1(\CIC1Cos/d8_34 ), .B0(\CIC1Cos/d_d8_33 ), .A0(\CIC1Cos/d8_33 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_34 ), .DI0(\CIC1Cos/d9_71_N_1674_33 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11131 ), 
    .F0(\CIC1Cos/d9_71_N_1674_33 ), .Q0(\CIC1Cos/d9_33 ), 
    .F1(\CIC1Cos/d9_71_N_1674_34 ), .Q1(\CIC1Cos/d9_34 ), 
    .FCO(\CIC1Cos/n11132 ));
  CIC1Cos_SLICE_1009 \CIC1Cos/SLICE_1009 ( .B1(\CIC1Cos/d_d8_32 ), 
    .A1(\CIC1Cos/d8_32 ), .B0(\CIC1Cos/d_d8_31 ), .A0(\CIC1Cos/d8_31 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_32 ), .DI0(\CIC1Cos/d9_71_N_1674_31 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11130 ), 
    .F0(\CIC1Cos/d9_71_N_1674_31 ), .Q0(\CIC1Cos/d9_31 ), 
    .F1(\CIC1Cos/d9_71_N_1674_32 ), .Q1(\CIC1Cos/d9_32 ), 
    .FCO(\CIC1Cos/n11131 ));
  CIC1Cos_SLICE_1010 \CIC1Cos/SLICE_1010 ( .B1(\CIC1Cos/d_d8_30 ), 
    .A1(\CIC1Cos/d8_30 ), .B0(\CIC1Cos/d_d8_29 ), .A0(\CIC1Cos/d8_29 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_30 ), .DI0(\CIC1Cos/d9_71_N_1674_29 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11129 ), 
    .F0(\CIC1Cos/d9_71_N_1674_29 ), .Q0(\CIC1Cos/d9_29 ), 
    .F1(\CIC1Cos/d9_71_N_1674_30 ), .Q1(\CIC1Cos/d9_30 ), 
    .FCO(\CIC1Cos/n11130 ));
  CIC1Cos_SLICE_1011 \CIC1Cos/SLICE_1011 ( .B1(\CIC1Cos/d_d8_28 ), 
    .A1(\CIC1Cos/d8_28 ), .B0(\CIC1Cos/d_d8_27 ), .A0(\CIC1Cos/d8_27 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_28 ), .DI0(\CIC1Cos/d9_71_N_1674_27 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11128 ), 
    .F0(\CIC1Cos/d9_71_N_1674_27 ), .Q0(\CIC1Cos/d9_27 ), 
    .F1(\CIC1Cos/d9_71_N_1674_28 ), .Q1(\CIC1Cos/d9_28 ), 
    .FCO(\CIC1Cos/n11129 ));
  CIC1Cos_SLICE_1012 \CIC1Cos/SLICE_1012 ( .B1(\CIC1Cos/d_d8_26 ), 
    .A1(\CIC1Cos/d8_26 ), .B0(\CIC1Cos/d_d8_25 ), .A0(\CIC1Cos/d8_25 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_26 ), .DI0(\CIC1Cos/d9_71_N_1674_25 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11127 ), 
    .F0(\CIC1Cos/d9_71_N_1674_25 ), .Q0(\CIC1Cos/d9_25 ), 
    .F1(\CIC1Cos/d9_71_N_1674_26 ), .Q1(\CIC1Cos/d9_26 ), 
    .FCO(\CIC1Cos/n11128 ));
  CIC1Cos_SLICE_1013 \CIC1Cos/SLICE_1013 ( .B1(\CIC1Cos/d_d8_24 ), 
    .A1(\CIC1Cos/d8_24 ), .B0(\CIC1Cos/d_d8_23 ), .A0(\CIC1Cos/d8_23 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_24 ), .DI0(\CIC1Cos/d9_71_N_1674_23 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11126 ), 
    .F0(\CIC1Cos/d9_71_N_1674_23 ), .Q0(\CIC1Cos/d9_23 ), 
    .F1(\CIC1Cos/d9_71_N_1674_24 ), .Q1(\CIC1Cos/d9_24 ), 
    .FCO(\CIC1Cos/n11127 ));
  CIC1Cos_SLICE_1014 \CIC1Cos/SLICE_1014 ( .B1(\CIC1Cos/d_d8_22 ), 
    .A1(\CIC1Cos/d8_22 ), .B0(\CIC1Cos/d_d8_21 ), .A0(\CIC1Cos/d8_21 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_22 ), .DI0(\CIC1Cos/d9_71_N_1674_21 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11125 ), 
    .F0(\CIC1Cos/d9_71_N_1674_21 ), .Q0(\CIC1Cos/d9_21 ), 
    .F1(\CIC1Cos/d9_71_N_1674_22 ), .Q1(\CIC1Cos/d9_22 ), 
    .FCO(\CIC1Cos/n11126 ));
  CIC1Cos_SLICE_1015 \CIC1Cos/SLICE_1015 ( .B1(\CIC1Cos/d_d8_20 ), 
    .A1(\CIC1Cos/d8_20 ), .B0(\CIC1Cos/d_d8_19 ), .A0(\CIC1Cos/d8_19 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_20 ), .DI0(\CIC1Cos/d9_71_N_1674_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11124 ), 
    .F0(\CIC1Cos/d9_71_N_1674_19 ), .Q0(\CIC1Cos/d9_19 ), 
    .F1(\CIC1Cos/d9_71_N_1674_20 ), .Q1(\CIC1Cos/d9_20 ), 
    .FCO(\CIC1Cos/n11125 ));
  CIC1Cos_SLICE_1016 \CIC1Cos/SLICE_1016 ( .B1(\CIC1Cos/d_d8_18 ), 
    .A1(\CIC1Cos/d8_18 ), .B0(\CIC1Cos/d_d8_17 ), .A0(\CIC1Cos/d8_17 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_18 ), .DI0(\CIC1Cos/d9_71_N_1674_17 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11123 ), 
    .F0(\CIC1Cos/d9_71_N_1674_17 ), .Q0(\CIC1Cos/d9_17 ), 
    .F1(\CIC1Cos/d9_71_N_1674_18 ), .Q1(\CIC1Cos/d9_18 ), 
    .FCO(\CIC1Cos/n11124 ));
  CIC1Cos_SLICE_1017 \CIC1Cos/SLICE_1017 ( .B1(\CIC1Cos/d_d8_16 ), 
    .A1(\CIC1Cos/d8_16 ), .B0(\CIC1Cos/d_d8_15 ), .A0(\CIC1Cos/d8_15 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_16 ), .DI0(\CIC1Cos/d9_71_N_1674_15 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11122 ), 
    .F0(\CIC1Cos/d9_71_N_1674_15 ), .Q0(\CIC1Cos/d9_15 ), 
    .F1(\CIC1Cos/d9_71_N_1674_16 ), .Q1(\CIC1Cos/d9_16 ), 
    .FCO(\CIC1Cos/n11123 ));
  CIC1Cos_SLICE_1018 \CIC1Cos/SLICE_1018 ( .B1(\CIC1Cos/d_d8_14 ), 
    .A1(\CIC1Cos/d8_14 ), .B0(\CIC1Cos/d_d8_13 ), .A0(\CIC1Cos/d8_13 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_14 ), .DI0(\CIC1Cos/d9_71_N_1674_13 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11121 ), 
    .F0(\CIC1Cos/d9_71_N_1674_13 ), .Q0(\CIC1Cos/d9_13 ), 
    .F1(\CIC1Cos/d9_71_N_1674_14 ), .Q1(\CIC1Cos/d9_14 ), 
    .FCO(\CIC1Cos/n11122 ));
  CIC1Cos_SLICE_1019 \CIC1Cos/SLICE_1019 ( .B1(\CIC1Cos/d_d8_12 ), 
    .A1(\CIC1Cos/d8_12 ), .B0(\CIC1Cos/d_d8_11 ), .A0(\CIC1Cos/d8_11 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_12 ), .DI0(\CIC1Cos/d9_71_N_1674_11 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11120 ), 
    .F0(\CIC1Cos/d9_71_N_1674_11 ), .Q0(\CIC1Cos/d9_11 ), 
    .F1(\CIC1Cos/d9_71_N_1674_12 ), .Q1(\CIC1Cos/d9_12 ), 
    .FCO(\CIC1Cos/n11121 ));
  CIC1Cos_SLICE_1020 \CIC1Cos/SLICE_1020 ( .B1(\CIC1Cos/d_d8_10 ), 
    .A1(\CIC1Cos/d8_10 ), .B0(\CIC1Cos/d_d8_9 ), .A0(\CIC1Cos/d8_9 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_10 ), .DI0(\CIC1Cos/d9_71_N_1674_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11119 ), 
    .F0(\CIC1Cos/d9_71_N_1674_9 ), .Q0(\CIC1Cos/d9_9 ), 
    .F1(\CIC1Cos/d9_71_N_1674_10 ), .Q1(\CIC1Cos/d9_10 ), 
    .FCO(\CIC1Cos/n11120 ));
  CIC1Cos_SLICE_1021 \CIC1Cos/SLICE_1021 ( .B1(\CIC1Cos/d_d8_8 ), 
    .A1(\CIC1Cos/d8_8 ), .B0(\CIC1Cos/d_d8_7 ), .A0(\CIC1Cos/d8_7 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_8 ), .DI0(\CIC1Cos/d9_71_N_1674_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11118 ), 
    .F0(\CIC1Cos/d9_71_N_1674_7 ), .Q0(\CIC1Cos/d9_7 ), 
    .F1(\CIC1Cos/d9_71_N_1674_8 ), .Q1(\CIC1Cos/d9_8 ), .FCO(\CIC1Cos/n11119 ));
  CIC1Cos_SLICE_1022 \CIC1Cos/SLICE_1022 ( .B1(\CIC1Cos/d_d8_6 ), 
    .A1(\CIC1Cos/d8_6 ), .B0(\CIC1Cos/d_d8_5 ), .A0(\CIC1Cos/d8_5 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_6 ), .DI0(\CIC1Cos/d9_71_N_1674_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11117 ), 
    .F0(\CIC1Cos/d9_71_N_1674_5 ), .Q0(\CIC1Cos/d9_5 ), 
    .F1(\CIC1Cos/d9_71_N_1674_6 ), .Q1(\CIC1Cos/d9_6 ), .FCO(\CIC1Cos/n11118 ));
  CIC1Cos_SLICE_1023 \CIC1Cos/SLICE_1023 ( .B1(\CIC1Cos/d_d8_4 ), 
    .A1(\CIC1Cos/d8_4 ), .B0(\CIC1Cos/d_d8_3 ), .A0(\CIC1Cos/d8_3 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_4 ), .DI0(\CIC1Cos/d9_71_N_1674_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11116 ), 
    .F0(\CIC1Cos/d9_71_N_1674_3 ), .Q0(\CIC1Cos/d9_3 ), 
    .F1(\CIC1Cos/d9_71_N_1674_4 ), .Q1(\CIC1Cos/d9_4 ), .FCO(\CIC1Cos/n11117 ));
  CIC1Cos_SLICE_1024 \CIC1Cos/SLICE_1024 ( .B1(\CIC1Cos/d_d8_2 ), 
    .A1(\CIC1Cos/d8_2 ), .B0(\CIC1Cos/d_d8_1 ), .A0(\CIC1Cos/d8_1 ), 
    .DI1(\CIC1Cos/d9_71_N_1674_2 ), .DI0(\CIC1Cos/d9_71_N_1674_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11115 ), 
    .F0(\CIC1Cos/d9_71_N_1674_1 ), .Q0(\CIC1Cos/d9_1 ), 
    .F1(\CIC1Cos/d9_71_N_1674_2 ), .Q1(\CIC1Cos/d9_2 ), .FCO(\CIC1Cos/n11116 ));
  CIC1Cos_SLICE_1025 \CIC1Cos/SLICE_1025 ( .B1(\CIC1Cos/d_d8_0 ), 
    .A1(\CIC1Cos/d8_0 ), .DI1(\CIC1Cos/d9_71_N_1674_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d9_71_N_1674_0 ), .Q1(\CIC1Cos/d9_0 ), .FCO(\CIC1Cos/n11115 ));
  CIC1Cos_SLICE_1026 \CIC1Cos/SLICE_1026 ( .B0(\CIC1Cos/d_d_tmp_35 ), 
    .A0(\CIC1Cos/d_tmp_35 ), .DI0(\CIC1Cos/d6_71_N_1458_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_883 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11073 ), 
    .F0(\CIC1Cos/d6_71_N_1458_35 ), .Q0(\CIC1Cos/d6_35 ), .F1(\CIC1Cos/n6166 ));
  CIC1Cos_SLICE_1027 \CIC1Cos/SLICE_1027 ( .B1(\CIC1Cos/d_d_tmp_34 ), 
    .A1(\CIC1Cos/d_tmp_34 ), .B0(\CIC1Cos/d_d_tmp_33 ), 
    .A0(\CIC1Cos/d_tmp_33 ), .DI1(\CIC1Cos/d6_71_N_1458_34 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_33 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11072 ), .F0(\CIC1Cos/d6_71_N_1458_33 ), 
    .Q0(\CIC1Cos/d6_33 ), .F1(\CIC1Cos/d6_71_N_1458_34 ), .Q1(\CIC1Cos/d6_34 ), 
    .FCO(\CIC1Cos/n11073 ));
  CIC1Cos_SLICE_1028 \CIC1Cos/SLICE_1028 ( .B1(\CIC1Cos/d_d_tmp_32 ), 
    .A1(\CIC1Cos/d_tmp_32 ), .B0(\CIC1Cos/d_d_tmp_31 ), 
    .A0(\CIC1Cos/d_tmp_31 ), .DI1(\CIC1Cos/d6_71_N_1458_32 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_31 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11071 ), .F0(\CIC1Cos/d6_71_N_1458_31 ), 
    .Q0(\CIC1Cos/d6_31 ), .F1(\CIC1Cos/d6_71_N_1458_32 ), .Q1(\CIC1Cos/d6_32 ), 
    .FCO(\CIC1Cos/n11072 ));
  CIC1Cos_SLICE_1029 \CIC1Cos/SLICE_1029 ( .B1(\CIC1Cos/d_d_tmp_30 ), 
    .A1(\CIC1Cos/d_tmp_30 ), .B0(\CIC1Cos/d_d_tmp_29 ), 
    .A0(\CIC1Cos/d_tmp_29 ), .DI1(\CIC1Cos/d6_71_N_1458_30 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_29 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11070 ), .F0(\CIC1Cos/d6_71_N_1458_29 ), 
    .Q0(\CIC1Cos/d6_29 ), .F1(\CIC1Cos/d6_71_N_1458_30 ), .Q1(\CIC1Cos/d6_30 ), 
    .FCO(\CIC1Cos/n11071 ));
  CIC1Cos_SLICE_1030 \CIC1Cos/SLICE_1030 ( .B1(\CIC1Cos/d_d_tmp_28 ), 
    .A1(\CIC1Cos/d_tmp_28 ), .B0(\CIC1Cos/d_d_tmp_27 ), 
    .A0(\CIC1Cos/d_tmp_27 ), .DI1(\CIC1Cos/d6_71_N_1458_28 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_27 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11069 ), .F0(\CIC1Cos/d6_71_N_1458_27 ), 
    .Q0(\CIC1Cos/d6_27 ), .F1(\CIC1Cos/d6_71_N_1458_28 ), .Q1(\CIC1Cos/d6_28 ), 
    .FCO(\CIC1Cos/n11070 ));
  CIC1Cos_SLICE_1031 \CIC1Cos/SLICE_1031 ( .B1(\CIC1Cos/d_d_tmp_26 ), 
    .A1(\CIC1Cos/d_tmp_26 ), .B0(\CIC1Cos/d_d_tmp_25 ), 
    .A0(\CIC1Cos/d_tmp_25 ), .DI1(\CIC1Cos/d6_71_N_1458_26 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_25 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11068 ), .F0(\CIC1Cos/d6_71_N_1458_25 ), 
    .Q0(\CIC1Cos/d6_25 ), .F1(\CIC1Cos/d6_71_N_1458_26 ), .Q1(\CIC1Cos/d6_26 ), 
    .FCO(\CIC1Cos/n11069 ));
  CIC1Cos_SLICE_1032 \CIC1Cos/SLICE_1032 ( .B1(\CIC1Cos/d_d_tmp_24 ), 
    .A1(\CIC1Cos/d_tmp_24 ), .B0(\CIC1Cos/d_d_tmp_23 ), 
    .A0(\CIC1Cos/d_tmp_23 ), .DI1(\CIC1Cos/d6_71_N_1458_24 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_23 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11067 ), .F0(\CIC1Cos/d6_71_N_1458_23 ), 
    .Q0(\CIC1Cos/d6_23 ), .F1(\CIC1Cos/d6_71_N_1458_24 ), .Q1(\CIC1Cos/d6_24 ), 
    .FCO(\CIC1Cos/n11068 ));
  CIC1Cos_SLICE_1033 \CIC1Cos/SLICE_1033 ( .B1(\CIC1Cos/d_d_tmp_22 ), 
    .A1(\CIC1Cos/d_tmp_22 ), .B0(\CIC1Cos/d_d_tmp_21 ), 
    .A0(\CIC1Cos/d_tmp_21 ), .DI1(\CIC1Cos/d6_71_N_1458_22 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_21 ), .CE(\CIC1Cos/osc_clk_enable_883 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11066 ), .F0(\CIC1Cos/d6_71_N_1458_21 ), 
    .Q0(\CIC1Cos/d6_21 ), .F1(\CIC1Cos/d6_71_N_1458_22 ), .Q1(\CIC1Cos/d6_22 ), 
    .FCO(\CIC1Cos/n11067 ));
  CIC1Cos_SLICE_1034 \CIC1Cos/SLICE_1034 ( .B1(\CIC1Cos/d_d_tmp_20 ), 
    .A1(\CIC1Cos/d_tmp_20 ), .B0(\CIC1Cos/d_d_tmp_19 ), 
    .A0(\CIC1Cos/d_tmp_19 ), .DI0(\CIC1Cos/d6_71_N_1458_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11065 ), 
    .F0(\CIC1Cos/d6_71_N_1458_19 ), .Q0(\CIC1Cos/d6_19 ), 
    .F1(\CIC1Cos/d6_71_N_1458_20 ), .FCO(\CIC1Cos/n11066 ));
  CIC1Cos_SLICE_1035 \CIC1Cos/SLICE_1035 ( .B1(\CIC1Cos/d_d_tmp_18 ), 
    .A1(\CIC1Cos/d_tmp_18 ), .B0(\CIC1Cos/d_d_tmp_17 ), 
    .A0(\CIC1Cos/d_tmp_17 ), .DI1(\CIC1Cos/d6_71_N_1458_18 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_17 ), .CE(\CIC1Cos/osc_clk_enable_833 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11064 ), .F0(\CIC1Cos/d6_71_N_1458_17 ), 
    .Q0(\CIC1Cos/d6_17 ), .F1(\CIC1Cos/d6_71_N_1458_18 ), .Q1(\CIC1Cos/d6_18 ), 
    .FCO(\CIC1Cos/n11065 ));
  CIC1Cos_SLICE_1036 \CIC1Cos/SLICE_1036 ( .B1(\CIC1Cos/d_d_tmp_16 ), 
    .A1(\CIC1Cos/d_tmp_16 ), .B0(\CIC1Cos/d_d_tmp_15 ), 
    .A0(\CIC1Cos/d_tmp_15 ), .DI1(\CIC1Cos/d6_71_N_1458_16 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_15 ), .CE(\CIC1Cos/osc_clk_enable_833 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11063 ), .F0(\CIC1Cos/d6_71_N_1458_15 ), 
    .Q0(\CIC1Cos/d6_15 ), .F1(\CIC1Cos/d6_71_N_1458_16 ), .Q1(\CIC1Cos/d6_16 ), 
    .FCO(\CIC1Cos/n11064 ));
  CIC1Cos_SLICE_1037 \CIC1Cos/SLICE_1037 ( .B1(\CIC1Cos/d_d_tmp_14 ), 
    .A1(\CIC1Cos/d_tmp_14 ), .B0(\CIC1Cos/d_d_tmp_13 ), 
    .A0(\CIC1Cos/d_tmp_13 ), .DI1(\CIC1Cos/d6_71_N_1458_14 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_13 ), .CE(\CIC1Cos/osc_clk_enable_833 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11062 ), .F0(\CIC1Cos/d6_71_N_1458_13 ), 
    .Q0(\CIC1Cos/d6_13 ), .F1(\CIC1Cos/d6_71_N_1458_14 ), .Q1(\CIC1Cos/d6_14 ), 
    .FCO(\CIC1Cos/n11063 ));
  CIC1Cos_SLICE_1038 \CIC1Cos/SLICE_1038 ( .B1(\CIC1Cos/d_d_tmp_12 ), 
    .A1(\CIC1Cos/d_tmp_12 ), .B0(\CIC1Cos/d_d_tmp_11 ), 
    .A0(\CIC1Cos/d_tmp_11 ), .DI1(\CIC1Cos/d6_71_N_1458_12 ), 
    .DI0(\CIC1Cos/d6_71_N_1458_11 ), .CE(\CIC1Cos/osc_clk_enable_833 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11061 ), .F0(\CIC1Cos/d6_71_N_1458_11 ), 
    .Q0(\CIC1Cos/d6_11 ), .F1(\CIC1Cos/d6_71_N_1458_12 ), .Q1(\CIC1Cos/d6_12 ), 
    .FCO(\CIC1Cos/n11062 ));
  CIC1Cos_SLICE_1039 \CIC1Cos/SLICE_1039 ( .B1(\CIC1Cos/d_d_tmp_10 ), 
    .A1(\CIC1Cos/d_tmp_10 ), .B0(\CIC1Cos/d_d_tmp_9 ), .A0(\CIC1Cos/d_tmp_9 ), 
    .DI1(\CIC1Cos/d6_71_N_1458_10 ), .DI0(\CIC1Cos/d6_71_N_1458_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11060 ), 
    .F0(\CIC1Cos/d6_71_N_1458_9 ), .Q0(\CIC1Cos/d6_9 ), 
    .F1(\CIC1Cos/d6_71_N_1458_10 ), .Q1(\CIC1Cos/d6_10 ), 
    .FCO(\CIC1Cos/n11061 ));
  CIC1Cos_SLICE_1040 \CIC1Cos/SLICE_1040 ( .B1(\CIC1Cos/d_d_tmp_8 ), 
    .A1(\CIC1Cos/d_tmp_8 ), .B0(\CIC1Cos/d_d_tmp_7 ), .A0(\CIC1Cos/d_tmp_7 ), 
    .DI1(\CIC1Cos/d6_71_N_1458_8 ), .DI0(\CIC1Cos/d6_71_N_1458_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11059 ), 
    .F0(\CIC1Cos/d6_71_N_1458_7 ), .Q0(\CIC1Cos/d6_7 ), 
    .F1(\CIC1Cos/d6_71_N_1458_8 ), .Q1(\CIC1Cos/d6_8 ), .FCO(\CIC1Cos/n11060 ));
  CIC1Cos_SLICE_1041 \CIC1Cos/SLICE_1041 ( .B1(\CIC1Cos/d_d_tmp_6 ), 
    .A1(\CIC1Cos/d_tmp_6 ), .B0(\CIC1Cos/d_d_tmp_5 ), .A0(\CIC1Cos/d_tmp_5 ), 
    .DI1(\CIC1Cos/d6_71_N_1458_6 ), .DI0(\CIC1Cos/d6_71_N_1458_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11058 ), 
    .F0(\CIC1Cos/d6_71_N_1458_5 ), .Q0(\CIC1Cos/d6_5 ), 
    .F1(\CIC1Cos/d6_71_N_1458_6 ), .Q1(\CIC1Cos/d6_6 ), .FCO(\CIC1Cos/n11059 ));
  CIC1Cos_SLICE_1042 \CIC1Cos/SLICE_1042 ( .B1(\CIC1Cos/d_d_tmp_4 ), 
    .A1(\CIC1Cos/d_tmp_4 ), .B0(\CIC1Cos/d_d_tmp_3 ), .A0(\CIC1Cos/d_tmp_3 ), 
    .DI1(\CIC1Cos/d6_71_N_1458_4 ), .DI0(\CIC1Cos/d6_71_N_1458_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11057 ), 
    .F0(\CIC1Cos/d6_71_N_1458_3 ), .Q0(\CIC1Cos/d6_3 ), 
    .F1(\CIC1Cos/d6_71_N_1458_4 ), .Q1(\CIC1Cos/d6_4 ), .FCO(\CIC1Cos/n11058 ));
  CIC1Cos_SLICE_1043 \CIC1Cos/SLICE_1043 ( .B1(\CIC1Cos/d_d_tmp_2 ), 
    .A1(\CIC1Cos/d_tmp_2 ), .B0(\CIC1Cos/d_d_tmp_1 ), .A0(\CIC1Cos/d_tmp_1 ), 
    .DI1(\CIC1Cos/d6_71_N_1458_2 ), .DI0(\CIC1Cos/d6_71_N_1458_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11056 ), 
    .F0(\CIC1Cos/d6_71_N_1458_1 ), .Q0(\CIC1Cos/d6_1 ), 
    .F1(\CIC1Cos/d6_71_N_1458_2 ), .Q1(\CIC1Cos/d6_2 ), .FCO(\CIC1Cos/n11057 ));
  CIC1Cos_SLICE_1044 \CIC1Cos/SLICE_1044 ( .B1(\CIC1Cos/d_d_tmp_0 ), 
    .A1(\CIC1Cos/d_tmp_0 ), .DI1(\CIC1Cos/d6_71_N_1458_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d6_71_N_1458_0 ), .Q1(\CIC1Cos/d6_0 ), .FCO(\CIC1Cos/n11056 ));
  CIC1Cos_SLICE_1045 \CIC1Cos/SLICE_1045 ( .B0(\CIC1Cos/d_d6_35 ), 
    .A0(\CIC1Cos/d6_35 ), .DI0(\CIC1Cos/d7_71_N_1530_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_1033 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11055 ), 
    .F0(\CIC1Cos/d7_71_N_1530_35 ), .Q0(\CIC1Cos/d7_35 ), .F1(\CIC1Cos/n6014 ));
  CIC1Cos_SLICE_1046 \CIC1Cos/SLICE_1046 ( .B1(\CIC1Cos/d_d6_34 ), 
    .A1(\CIC1Cos/d6_34 ), .B0(\CIC1Cos/d_d6_33 ), .A0(\CIC1Cos/d6_33 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_34 ), .DI0(\CIC1Cos/d7_71_N_1530_33 ), 
    .CE(\CIC1Cos/osc_clk_enable_1033 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11054 ), 
    .F0(\CIC1Cos/d7_71_N_1530_33 ), .Q0(\CIC1Cos/d7_33 ), 
    .F1(\CIC1Cos/d7_71_N_1530_34 ), .Q1(\CIC1Cos/d7_34 ), 
    .FCO(\CIC1Cos/n11055 ));
  CIC1Cos_SLICE_1047 \CIC1Cos/SLICE_1047 ( .B1(\CIC1Cos/d_d6_32 ), 
    .A1(\CIC1Cos/d6_32 ), .B0(\CIC1Cos/d_d6_31 ), .A0(\CIC1Cos/d6_31 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_32 ), .DI0(\CIC1Cos/d7_71_N_1530_31 ), 
    .CE(\CIC1Cos/osc_clk_enable_1033 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11053 ), 
    .F0(\CIC1Cos/d7_71_N_1530_31 ), .Q0(\CIC1Cos/d7_31 ), 
    .F1(\CIC1Cos/d7_71_N_1530_32 ), .Q1(\CIC1Cos/d7_32 ), 
    .FCO(\CIC1Cos/n11054 ));
  CIC1Cos_SLICE_1048 \CIC1Cos/SLICE_1048 ( .B1(\CIC1Cos/d_d6_30 ), 
    .A1(\CIC1Cos/d6_30 ), .B0(\CIC1Cos/d_d6_29 ), .A0(\CIC1Cos/d6_29 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_30 ), .DI0(\CIC1Cos/d7_71_N_1530_29 ), 
    .CE(\CIC1Cos/osc_clk_enable_1033 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11052 ), 
    .F0(\CIC1Cos/d7_71_N_1530_29 ), .Q0(\CIC1Cos/d7_29 ), 
    .F1(\CIC1Cos/d7_71_N_1530_30 ), .Q1(\CIC1Cos/d7_30 ), 
    .FCO(\CIC1Cos/n11053 ));
  CIC1Cos_SLICE_1049 \CIC1Cos/SLICE_1049 ( .B1(\CIC1Cos/d_d6_28 ), 
    .A1(\CIC1Cos/d6_28 ), .B0(\CIC1Cos/d_d6_27 ), .A0(\CIC1Cos/d6_27 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_27 ), .CE(\CIC1Cos/osc_clk_enable_983 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11051 ), .F0(\CIC1Cos/d7_71_N_1530_27 ), 
    .Q0(\CIC1Cos/d7_27 ), .F1(\CIC1Cos/d7_71_N_1530_28 ), 
    .FCO(\CIC1Cos/n11052 ));
  CIC1Cos_SLICE_1050 \CIC1Cos/SLICE_1050 ( .B1(\CIC1Cos/d_d6_26 ), 
    .A1(\CIC1Cos/d6_26 ), .B0(\CIC1Cos/d_d6_25 ), .A0(\CIC1Cos/d6_25 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_26 ), .DI0(\CIC1Cos/d7_71_N_1530_25 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11050 ), 
    .F0(\CIC1Cos/d7_71_N_1530_25 ), .Q0(\CIC1Cos/d7_25 ), 
    .F1(\CIC1Cos/d7_71_N_1530_26 ), .Q1(\CIC1Cos/d7_26 ), 
    .FCO(\CIC1Cos/n11051 ));
  CIC1Cos_SLICE_1051 \CIC1Cos/SLICE_1051 ( .B1(\CIC1Cos/d_d6_24 ), 
    .A1(\CIC1Cos/d6_24 ), .B0(\CIC1Cos/d_d6_23 ), .A0(\CIC1Cos/d6_23 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_24 ), .DI0(\CIC1Cos/d7_71_N_1530_23 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11049 ), 
    .F0(\CIC1Cos/d7_71_N_1530_23 ), .Q0(\CIC1Cos/d7_23 ), 
    .F1(\CIC1Cos/d7_71_N_1530_24 ), .Q1(\CIC1Cos/d7_24 ), 
    .FCO(\CIC1Cos/n11050 ));
  CIC1Cos_SLICE_1052 \CIC1Cos/SLICE_1052 ( .B1(\CIC1Cos/d_d6_22 ), 
    .A1(\CIC1Cos/d6_22 ), .B0(\CIC1Cos/d_d6_21 ), .A0(\CIC1Cos/d6_21 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_22 ), .DI0(\CIC1Cos/d7_71_N_1530_21 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11048 ), 
    .F0(\CIC1Cos/d7_71_N_1530_21 ), .Q0(\CIC1Cos/d7_21 ), 
    .F1(\CIC1Cos/d7_71_N_1530_22 ), .Q1(\CIC1Cos/d7_22 ), 
    .FCO(\CIC1Cos/n11049 ));
  CIC1Cos_SLICE_1053 \CIC1Cos/SLICE_1053 ( .B1(\CIC1Cos/d_d6_20 ), 
    .A1(\CIC1Cos/d6_20 ), .B0(\CIC1Cos/d_d6_19 ), .A0(\CIC1Cos/d6_19 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_20 ), .DI0(\CIC1Cos/d7_71_N_1530_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11047 ), 
    .F0(\CIC1Cos/d7_71_N_1530_19 ), .Q0(\CIC1Cos/d7_19 ), 
    .F1(\CIC1Cos/d7_71_N_1530_20 ), .Q1(\CIC1Cos/d7_20 ), 
    .FCO(\CIC1Cos/n11048 ));
  CIC1Cos_SLICE_1054 \CIC1Cos/SLICE_1054 ( .B1(\CIC1Cos/d_d6_18 ), 
    .A1(\CIC1Cos/d6_18 ), .B0(\CIC1Cos/d_d6_17 ), .A0(\CIC1Cos/d6_17 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_18 ), .DI0(\CIC1Cos/d7_71_N_1530_17 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11046 ), 
    .F0(\CIC1Cos/d7_71_N_1530_17 ), .Q0(\CIC1Cos/d7_17 ), 
    .F1(\CIC1Cos/d7_71_N_1530_18 ), .Q1(\CIC1Cos/d7_18 ), 
    .FCO(\CIC1Cos/n11047 ));
  CIC1Cos_SLICE_1055 \CIC1Cos/SLICE_1055 ( .B1(\CIC1Cos/d_d6_16 ), 
    .A1(\CIC1Cos/d6_16 ), .B0(\CIC1Cos/d_d6_15 ), .A0(\CIC1Cos/d6_15 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_16 ), .DI0(\CIC1Cos/d7_71_N_1530_15 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11045 ), 
    .F0(\CIC1Cos/d7_71_N_1530_15 ), .Q0(\CIC1Cos/d7_15 ), 
    .F1(\CIC1Cos/d7_71_N_1530_16 ), .Q1(\CIC1Cos/d7_16 ), 
    .FCO(\CIC1Cos/n11046 ));
  CIC1Cos_SLICE_1056 \CIC1Cos/SLICE_1056 ( .B1(\CIC1Cos/d_d6_14 ), 
    .A1(\CIC1Cos/d6_14 ), .B0(\CIC1Cos/d_d6_13 ), .A0(\CIC1Cos/d6_13 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_14 ), .DI0(\CIC1Cos/d7_71_N_1530_13 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11044 ), 
    .F0(\CIC1Cos/d7_71_N_1530_13 ), .Q0(\CIC1Cos/d7_13 ), 
    .F1(\CIC1Cos/d7_71_N_1530_14 ), .Q1(\CIC1Cos/d7_14 ), 
    .FCO(\CIC1Cos/n11045 ));
  CIC1Cos_SLICE_1057 \CIC1Cos/SLICE_1057 ( .B1(\CIC1Cos/d_d6_12 ), 
    .A1(\CIC1Cos/d6_12 ), .B0(\CIC1Cos/d_d6_11 ), .A0(\CIC1Cos/d6_11 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_12 ), .DI0(\CIC1Cos/d7_71_N_1530_11 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11043 ), 
    .F0(\CIC1Cos/d7_71_N_1530_11 ), .Q0(\CIC1Cos/d7_11 ), 
    .F1(\CIC1Cos/d7_71_N_1530_12 ), .Q1(\CIC1Cos/d7_12 ), 
    .FCO(\CIC1Cos/n11044 ));
  CIC1Cos_SLICE_1058 \CIC1Cos/SLICE_1058 ( .B1(\CIC1Cos/d_d6_10 ), 
    .A1(\CIC1Cos/d6_10 ), .B0(\CIC1Cos/d_d6_9 ), .A0(\CIC1Cos/d6_9 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_10 ), .DI0(\CIC1Cos/d7_71_N_1530_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11042 ), 
    .F0(\CIC1Cos/d7_71_N_1530_9 ), .Q0(\CIC1Cos/d7_9 ), 
    .F1(\CIC1Cos/d7_71_N_1530_10 ), .Q1(\CIC1Cos/d7_10 ), 
    .FCO(\CIC1Cos/n11043 ));
  CIC1Cos_SLICE_1059 \CIC1Cos/SLICE_1059 ( .B1(\CIC1Cos/d_d6_8 ), 
    .A1(\CIC1Cos/d6_8 ), .B0(\CIC1Cos/d_d6_7 ), .A0(\CIC1Cos/d6_7 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_8 ), .DI0(\CIC1Cos/d7_71_N_1530_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11041 ), 
    .F0(\CIC1Cos/d7_71_N_1530_7 ), .Q0(\CIC1Cos/d7_7 ), 
    .F1(\CIC1Cos/d7_71_N_1530_8 ), .Q1(\CIC1Cos/d7_8 ), .FCO(\CIC1Cos/n11042 ));
  CIC1Cos_SLICE_1060 \CIC1Cos/SLICE_1060 ( .B1(\CIC1Cos/d_d6_6 ), 
    .A1(\CIC1Cos/d6_6 ), .B0(\CIC1Cos/d_d6_5 ), .A0(\CIC1Cos/d6_5 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_6 ), .DI0(\CIC1Cos/d7_71_N_1530_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11040 ), 
    .F0(\CIC1Cos/d7_71_N_1530_5 ), .Q0(\CIC1Cos/d7_5 ), 
    .F1(\CIC1Cos/d7_71_N_1530_6 ), .Q1(\CIC1Cos/d7_6 ), .FCO(\CIC1Cos/n11041 ));
  CIC1Cos_SLICE_1061 \CIC1Cos/SLICE_1061 ( .B1(\CIC1Cos/d_d6_4 ), 
    .A1(\CIC1Cos/d6_4 ), .B0(\CIC1Cos/d_d6_3 ), .A0(\CIC1Cos/d6_3 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_4 ), .DI0(\CIC1Cos/d7_71_N_1530_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11039 ), 
    .F0(\CIC1Cos/d7_71_N_1530_3 ), .Q0(\CIC1Cos/d7_3 ), 
    .F1(\CIC1Cos/d7_71_N_1530_4 ), .Q1(\CIC1Cos/d7_4 ), .FCO(\CIC1Cos/n11040 ));
  CIC1Cos_SLICE_1062 \CIC1Cos/SLICE_1062 ( .B1(\CIC1Cos/d_d6_2 ), 
    .A1(\CIC1Cos/d6_2 ), .B0(\CIC1Cos/d_d6_1 ), .A0(\CIC1Cos/d6_1 ), 
    .DI1(\CIC1Cos/d7_71_N_1530_2 ), .DI0(\CIC1Cos/d7_71_N_1530_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11038 ), 
    .F0(\CIC1Cos/d7_71_N_1530_1 ), .Q0(\CIC1Cos/d7_1 ), 
    .F1(\CIC1Cos/d7_71_N_1530_2 ), .Q1(\CIC1Cos/d7_2 ), .FCO(\CIC1Cos/n11039 ));
  CIC1Cos_SLICE_1063 \CIC1Cos/SLICE_1063 ( .B1(\CIC1Cos/d_d6_0 ), 
    .A1(\CIC1Cos/d6_0 ), .DI1(\CIC1Cos/d7_71_N_1530_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d7_71_N_1530_0 ), .Q1(\CIC1Cos/d7_0 ), .FCO(\CIC1Cos/n11038 ));
  CIC1Cos_SLICE_1064 \CIC1Cos/SLICE_1064 ( .B0(\CIC1Cos/d_d7_35 ), 
    .A0(\CIC1Cos/d7_35 ), .DI0(\CIC1Cos/d8_71_N_1602_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11037 ), 
    .F0(\CIC1Cos/d8_71_N_1602_35 ), .Q0(\CIC1Cos/d8_35 ), .F1(\CIC1Cos/n5862 ));
  CIC1Cos_SLICE_1065 \CIC1Cos/SLICE_1065 ( .B1(\CIC1Cos/d_d7_34 ), 
    .A1(\CIC1Cos/d7_34 ), .B0(\CIC1Cos/d_d7_33 ), .A0(\CIC1Cos/d7_33 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_34 ), .DI0(\CIC1Cos/d8_71_N_1602_33 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11036 ), 
    .F0(\CIC1Cos/d8_71_N_1602_33 ), .Q0(\CIC1Cos/d8_33 ), 
    .F1(\CIC1Cos/d8_71_N_1602_34 ), .Q1(\CIC1Cos/d8_34 ), 
    .FCO(\CIC1Cos/n11037 ));
  CIC1Cos_SLICE_1066 \CIC1Cos/SLICE_1066 ( .B1(\CIC1Cos/d_d7_32 ), 
    .A1(\CIC1Cos/d7_32 ), .B0(\CIC1Cos/d_d7_31 ), .A0(\CIC1Cos/d7_31 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_32 ), .DI0(\CIC1Cos/d8_71_N_1602_31 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11035 ), 
    .F0(\CIC1Cos/d8_71_N_1602_31 ), .Q0(\CIC1Cos/d8_31 ), 
    .F1(\CIC1Cos/d8_71_N_1602_32 ), .Q1(\CIC1Cos/d8_32 ), 
    .FCO(\CIC1Cos/n11036 ));
  CIC1Cos_SLICE_1067 \CIC1Cos/SLICE_1067 ( .B1(\CIC1Cos/d_d7_30 ), 
    .A1(\CIC1Cos/d7_30 ), .B0(\CIC1Cos/d_d7_29 ), .A0(\CIC1Cos/d7_29 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_30 ), .DI0(\CIC1Cos/d8_71_N_1602_29 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11034 ), 
    .F0(\CIC1Cos/d8_71_N_1602_29 ), .Q0(\CIC1Cos/d8_29 ), 
    .F1(\CIC1Cos/d8_71_N_1602_30 ), .Q1(\CIC1Cos/d8_30 ), 
    .FCO(\CIC1Cos/n11035 ));
  CIC1Cos_SLICE_1068 \CIC1Cos/SLICE_1068 ( .B1(\CIC1Cos/d_d7_28 ), 
    .A1(\CIC1Cos/d7_28 ), .B0(\CIC1Cos/d_d7_27 ), .A0(\CIC1Cos/d7_27 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_28 ), .DI0(\CIC1Cos/d8_71_N_1602_27 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11033 ), 
    .F0(\CIC1Cos/d8_71_N_1602_27 ), .Q0(\CIC1Cos/d8_27 ), 
    .F1(\CIC1Cos/d8_71_N_1602_28 ), .Q1(\CIC1Cos/d8_28 ), 
    .FCO(\CIC1Cos/n11034 ));
  CIC1Cos_SLICE_1069 \CIC1Cos/SLICE_1069 ( .B1(\CIC1Cos/d_d7_26 ), 
    .A1(\CIC1Cos/d7_26 ), .B0(\CIC1Cos/d_d7_25 ), .A0(\CIC1Cos/d7_25 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_26 ), .DI0(\CIC1Cos/d8_71_N_1602_25 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11032 ), 
    .F0(\CIC1Cos/d8_71_N_1602_25 ), .Q0(\CIC1Cos/d8_25 ), 
    .F1(\CIC1Cos/d8_71_N_1602_26 ), .Q1(\CIC1Cos/d8_26 ), 
    .FCO(\CIC1Cos/n11033 ));
  CIC1Cos_SLICE_1070 \CIC1Cos/SLICE_1070 ( .B1(\CIC1Cos/d_d7_24 ), 
    .A1(\CIC1Cos/d7_24 ), .B0(\CIC1Cos/d_d7_23 ), .A0(\CIC1Cos/d7_23 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_24 ), .DI0(\CIC1Cos/d8_71_N_1602_23 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11031 ), 
    .F0(\CIC1Cos/d8_71_N_1602_23 ), .Q0(\CIC1Cos/d8_23 ), 
    .F1(\CIC1Cos/d8_71_N_1602_24 ), .Q1(\CIC1Cos/d8_24 ), 
    .FCO(\CIC1Cos/n11032 ));
  CIC1Cos_SLICE_1071 \CIC1Cos/SLICE_1071 ( .B1(\CIC1Cos/d_d7_22 ), 
    .A1(\CIC1Cos/d7_22 ), .B0(\CIC1Cos/d_d7_21 ), .A0(\CIC1Cos/d7_21 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_22 ), .DI0(\CIC1Cos/d8_71_N_1602_21 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11030 ), 
    .F0(\CIC1Cos/d8_71_N_1602_21 ), .Q0(\CIC1Cos/d8_21 ), 
    .F1(\CIC1Cos/d8_71_N_1602_22 ), .Q1(\CIC1Cos/d8_22 ), 
    .FCO(\CIC1Cos/n11031 ));
  CIC1Cos_SLICE_1072 \CIC1Cos/SLICE_1072 ( .B1(\CIC1Cos/d_d7_20 ), 
    .A1(\CIC1Cos/d7_20 ), .B0(\CIC1Cos/d_d7_19 ), .A0(\CIC1Cos/d7_19 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_20 ), .DI0(\CIC1Cos/d8_71_N_1602_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11029 ), 
    .F0(\CIC1Cos/d8_71_N_1602_19 ), .Q0(\CIC1Cos/d8_19 ), 
    .F1(\CIC1Cos/d8_71_N_1602_20 ), .Q1(\CIC1Cos/d8_20 ), 
    .FCO(\CIC1Cos/n11030 ));
  CIC1Cos_SLICE_1073 \CIC1Cos/SLICE_1073 ( .B1(\CIC1Cos/d_d7_18 ), 
    .A1(\CIC1Cos/d7_18 ), .B0(\CIC1Cos/d_d7_17 ), .A0(\CIC1Cos/d7_17 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_18 ), .DI0(\CIC1Cos/d8_71_N_1602_17 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11028 ), 
    .F0(\CIC1Cos/d8_71_N_1602_17 ), .Q0(\CIC1Cos/d8_17 ), 
    .F1(\CIC1Cos/d8_71_N_1602_18 ), .Q1(\CIC1Cos/d8_18 ), 
    .FCO(\CIC1Cos/n11029 ));
  CIC1Cos_SLICE_1074 \CIC1Cos/SLICE_1074 ( .B1(\CIC1Cos/d_d7_16 ), 
    .A1(\CIC1Cos/d7_16 ), .B0(\CIC1Cos/d_d7_15 ), .A0(\CIC1Cos/d7_15 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_16 ), .DI0(\CIC1Cos/d8_71_N_1602_15 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11027 ), 
    .F0(\CIC1Cos/d8_71_N_1602_15 ), .Q0(\CIC1Cos/d8_15 ), 
    .F1(\CIC1Cos/d8_71_N_1602_16 ), .Q1(\CIC1Cos/d8_16 ), 
    .FCO(\CIC1Cos/n11028 ));
  CIC1Cos_SLICE_1075 \CIC1Cos/SLICE_1075 ( .B1(\CIC1Cos/d_d7_14 ), 
    .A1(\CIC1Cos/d7_14 ), .B0(\CIC1Cos/d_d7_13 ), .A0(\CIC1Cos/d7_13 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_14 ), .DI0(\CIC1Cos/d8_71_N_1602_13 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11026 ), 
    .F0(\CIC1Cos/d8_71_N_1602_13 ), .Q0(\CIC1Cos/d8_13 ), 
    .F1(\CIC1Cos/d8_71_N_1602_14 ), .Q1(\CIC1Cos/d8_14 ), 
    .FCO(\CIC1Cos/n11027 ));
  CIC1Cos_SLICE_1076 \CIC1Cos/SLICE_1076 ( .B1(\CIC1Cos/d_d7_12 ), 
    .A1(\CIC1Cos/d7_12 ), .B0(\CIC1Cos/d_d7_11 ), .A0(\CIC1Cos/d7_11 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_12 ), .DI0(\CIC1Cos/d8_71_N_1602_11 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11025 ), 
    .F0(\CIC1Cos/d8_71_N_1602_11 ), .Q0(\CIC1Cos/d8_11 ), 
    .F1(\CIC1Cos/d8_71_N_1602_12 ), .Q1(\CIC1Cos/d8_12 ), 
    .FCO(\CIC1Cos/n11026 ));
  CIC1Cos_SLICE_1077 \CIC1Cos/SLICE_1077 ( .B1(\CIC1Cos/d_d7_10 ), 
    .A1(\CIC1Cos/d7_10 ), .B0(\CIC1Cos/d_d7_9 ), .A0(\CIC1Cos/d7_9 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_10 ), .DI0(\CIC1Cos/d8_71_N_1602_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11024 ), 
    .F0(\CIC1Cos/d8_71_N_1602_9 ), .Q0(\CIC1Cos/d8_9 ), 
    .F1(\CIC1Cos/d8_71_N_1602_10 ), .Q1(\CIC1Cos/d8_10 ), 
    .FCO(\CIC1Cos/n11025 ));
  CIC1Cos_SLICE_1078 \CIC1Cos/SLICE_1078 ( .B1(\CIC1Cos/d_d7_8 ), 
    .A1(\CIC1Cos/d7_8 ), .B0(\CIC1Cos/d_d7_7 ), .A0(\CIC1Cos/d7_7 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_8 ), .DI0(\CIC1Cos/d8_71_N_1602_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11023 ), 
    .F0(\CIC1Cos/d8_71_N_1602_7 ), .Q0(\CIC1Cos/d8_7 ), 
    .F1(\CIC1Cos/d8_71_N_1602_8 ), .Q1(\CIC1Cos/d8_8 ), .FCO(\CIC1Cos/n11024 ));
  CIC1Cos_SLICE_1079 \CIC1Cos/SLICE_1079 ( .B1(\CIC1Cos/d_d7_6 ), 
    .A1(\CIC1Cos/d7_6 ), .B0(\CIC1Cos/d_d7_5 ), .A0(\CIC1Cos/d7_5 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_6 ), .DI0(\CIC1Cos/d8_71_N_1602_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11022 ), 
    .F0(\CIC1Cos/d8_71_N_1602_5 ), .Q0(\CIC1Cos/d8_5 ), 
    .F1(\CIC1Cos/d8_71_N_1602_6 ), .Q1(\CIC1Cos/d8_6 ), .FCO(\CIC1Cos/n11023 ));
  CIC1Cos_SLICE_1080 \CIC1Cos/SLICE_1080 ( .B1(\CIC1Cos/d_d7_4 ), 
    .A1(\CIC1Cos/d7_4 ), .B0(\CIC1Cos/d_d7_3 ), .A0(\CIC1Cos/d7_3 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_4 ), .DI0(\CIC1Cos/d8_71_N_1602_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11021 ), 
    .F0(\CIC1Cos/d8_71_N_1602_3 ), .Q0(\CIC1Cos/d8_3 ), 
    .F1(\CIC1Cos/d8_71_N_1602_4 ), .Q1(\CIC1Cos/d8_4 ), .FCO(\CIC1Cos/n11022 ));
  CIC1Cos_SLICE_1081 \CIC1Cos/SLICE_1081 ( .B1(\CIC1Cos/d_d7_2 ), 
    .A1(\CIC1Cos/d7_2 ), .B0(\CIC1Cos/d_d7_1 ), .A0(\CIC1Cos/d7_1 ), 
    .DI1(\CIC1Cos/d8_71_N_1602_2 ), .DI0(\CIC1Cos/d8_71_N_1602_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11020 ), 
    .F0(\CIC1Cos/d8_71_N_1602_1 ), .Q0(\CIC1Cos/d8_1 ), 
    .F1(\CIC1Cos/d8_71_N_1602_2 ), .Q1(\CIC1Cos/d8_2 ), .FCO(\CIC1Cos/n11021 ));
  CIC1Cos_SLICE_1082 \CIC1Cos/SLICE_1082 ( .B1(\CIC1Cos/d_d7_0 ), 
    .A1(\CIC1Cos/d7_0 ), .DI1(\CIC1Cos/d8_71_N_1602_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d8_71_N_1602_0 ), .Q1(\CIC1Cos/d8_0 ), .FCO(\CIC1Cos/n11020 ));
  CIC1Cos_SLICE_1083 \CIC1Cos/SLICE_1083 ( .A0(\CIC1Cos/count_15 ), 
    .DI0(\CIC1Cos/n376 ), .LSR(\CIC1Cos/n8412 ), .CLK(osc_clk), 
    .FCI(\CIC1Cos/n10988 ), .F0(\CIC1Cos/n376 ), .Q0(\CIC1Cos/count_15 ));
  CIC1Cos_SLICE_1084 \CIC1Cos/SLICE_1084 ( .A1(\CIC1Cos/count_14 ), 
    .A0(\CIC1Cos/count_13 ), .DI1(\CIC1Cos/n377 ), .DI0(\CIC1Cos/n378 ), 
    .LSR(\CIC1Cos/n8412 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10987 ), 
    .F0(\CIC1Cos/n378 ), .Q0(\CIC1Cos/count_13 ), .F1(\CIC1Cos/n377 ), 
    .Q1(\CIC1Cos/count_14 ), .FCO(\CIC1Cos/n10988 ));
  CIC1Cos_SLICE_1085 \CIC1Cos/SLICE_1085 ( .A1(\CIC1Cos/count_12 ), 
    .A0(\CIC1Cos/count_11 ), .DI1(\CIC1Cos/n379 ), .LSR(\CIC1Cos/n8412 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10986 ), .F0(\CIC1Cos/n380 ), 
    .F1(\CIC1Cos/n379 ), .Q1(\CIC1Cos/count_12 ), .FCO(\CIC1Cos/n10987 ));
  CIC1Cos_SLICE_1086 \CIC1Cos/SLICE_1086 ( .A1(\CIC1Cos/count_10 ), 
    .A0(\CIC1Cos/count_9 ), .DI1(\CIC1Cos/n381 ), .DI0(\CIC1Cos/n382 ), 
    .LSR(\CIC1Cos/n8412 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10985 ), 
    .F0(\CIC1Cos/n382 ), .Q0(\CIC1Cos/count_9 ), .F1(\CIC1Cos/n381 ), 
    .Q1(\CIC1Cos/count_10 ), .FCO(\CIC1Cos/n10986 ));
  CIC1Cos_SLICE_1087 \CIC1Cos/SLICE_1087 ( .A1(\CIC1Cos/count_8 ), 
    .A0(\CIC1Cos/count_7 ), .DI1(\CIC1Cos/n383 ), .DI0(\CIC1Cos/n384 ), 
    .LSR(\CIC1Cos/n8412 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10984 ), 
    .F0(\CIC1Cos/n384 ), .Q0(\CIC1Cos/count_7 ), .F1(\CIC1Cos/n383 ), 
    .Q1(\CIC1Cos/count_8 ), .FCO(\CIC1Cos/n10985 ));
  CIC1Cos_SLICE_1088 \CIC1Cos/SLICE_1088 ( .A1(\CIC1Cos/count_6 ), 
    .A0(\CIC1Cos/count_5 ), .DI1(\CIC1Cos/n385 ), .DI0(\CIC1Cos/n386 ), 
    .LSR(\CIC1Cos/n8412 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10983 ), 
    .F0(\CIC1Cos/n386 ), .Q0(\CIC1Cos/count_5 ), .F1(\CIC1Cos/n385 ), 
    .Q1(\CIC1Cos/count_6 ), .FCO(\CIC1Cos/n10984 ));
  CIC1Cos_SLICE_1089 \CIC1Cos/SLICE_1089 ( .A1(\CIC1Cos/count_4 ), 
    .A0(\CIC1Cos/count_3 ), .DI1(\CIC1Cos/n387 ), .DI0(\CIC1Cos/n388 ), 
    .LSR(\CIC1Cos/n8412 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10982 ), 
    .F0(\CIC1Cos/n388 ), .Q0(\CIC1Cos/count_3 ), .F1(\CIC1Cos/n387 ), 
    .Q1(\CIC1Cos/count_4 ), .FCO(\CIC1Cos/n10983 ));
  CIC1Cos_SLICE_1090 \CIC1Cos/SLICE_1090 ( .A1(\CIC1Cos/count_2 ), 
    .A0(\CIC1Cos/count_1 ), .DI1(\CIC1Cos/n389 ), .DI0(\CIC1Cos/n390 ), 
    .LSR(\CIC1Cos/n8412 ), .CLK(osc_clk), .FCI(\CIC1Cos/n10981 ), 
    .F0(\CIC1Cos/n390 ), .Q0(\CIC1Cos/count_1 ), .F1(\CIC1Cos/n389 ), 
    .Q1(\CIC1Cos/count_2 ), .FCO(\CIC1Cos/n10982 ));
  CIC1Cos_SLICE_1091 \CIC1Cos/SLICE_1091 ( .A1(\CIC1Cos/count_0 ), 
    .F1(\CIC1Cos/n391 ), .FCO(\CIC1Cos/n10981 ));
  CIC1Cos_SLICE_1092 \CIC1Cos/SLICE_1092 ( .FCI(\CIC1Cos/n10962 ), 
    .F0(\CIC1Cos/n5406 ));
  CIC1Cos_SLICE_1093 \CIC1Cos/SLICE_1093 ( .B1(\CIC1Cos/d5_35 ), 
    .A1(\CIC1Cos/d4_35 ), .B0(\CIC1Cos/d5_34 ), .A0(\CIC1Cos/d4_34 ), 
    .DI1(\CIC1Cos/d5_71_N_705_35 ), .DI0(\CIC1Cos/d5_71_N_705_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10961 ), .F0(\CIC1Cos/d5_71_N_705_34 ), 
    .Q0(\CIC1Cos/d5_34 ), .F1(\CIC1Cos/d5_71_N_705_35 ), .Q1(\CIC1Cos/d5_35 ), 
    .FCO(\CIC1Cos/n10962 ));
  CIC1Cos_SLICE_1094 \CIC1Cos/SLICE_1094 ( .B1(\CIC1Cos/d5_33 ), 
    .A1(\CIC1Cos/d4_33 ), .B0(\CIC1Cos/d5_32 ), .A0(\CIC1Cos/d4_32 ), 
    .DI1(\CIC1Cos/d5_71_N_705_33 ), .DI0(\CIC1Cos/d5_71_N_705_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10960 ), .F0(\CIC1Cos/d5_71_N_705_32 ), 
    .Q0(\CIC1Cos/d5_32 ), .F1(\CIC1Cos/d5_71_N_705_33 ), .Q1(\CIC1Cos/d5_33 ), 
    .FCO(\CIC1Cos/n10961 ));
  CIC1Cos_SLICE_1095 \CIC1Cos/SLICE_1095 ( .B1(\CIC1Cos/d5_31 ), 
    .A1(\CIC1Cos/d4_31 ), .B0(\CIC1Cos/d5_30 ), .A0(\CIC1Cos/d4_30 ), 
    .DI1(\CIC1Cos/d5_71_N_705_31 ), .DI0(\CIC1Cos/d5_71_N_705_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10959 ), .F0(\CIC1Cos/d5_71_N_705_30 ), 
    .Q0(\CIC1Cos/d5_30 ), .F1(\CIC1Cos/d5_71_N_705_31 ), .Q1(\CIC1Cos/d5_31 ), 
    .FCO(\CIC1Cos/n10960 ));
  CIC1Cos_SLICE_1096 \CIC1Cos/SLICE_1096 ( .B1(\CIC1Cos/d5_29 ), 
    .A1(\CIC1Cos/d4_29 ), .B0(\CIC1Cos/d5_28 ), .A0(\CIC1Cos/d4_28 ), 
    .DI1(\CIC1Cos/d5_71_N_705_29 ), .DI0(\CIC1Cos/d5_71_N_705_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10958 ), .F0(\CIC1Cos/d5_71_N_705_28 ), 
    .Q0(\CIC1Cos/d5_28 ), .F1(\CIC1Cos/d5_71_N_705_29 ), .Q1(\CIC1Cos/d5_29 ), 
    .FCO(\CIC1Cos/n10959 ));
  CIC1Cos_SLICE_1097 \CIC1Cos/SLICE_1097 ( .B1(\CIC1Cos/d5_27 ), 
    .A1(\CIC1Cos/d4_27 ), .B0(\CIC1Cos/d5_26 ), .A0(\CIC1Cos/d4_26 ), 
    .DI1(\CIC1Cos/d5_71_N_705_27 ), .DI0(\CIC1Cos/d5_71_N_705_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10957 ), .F0(\CIC1Cos/d5_71_N_705_26 ), 
    .Q0(\CIC1Cos/d5_26 ), .F1(\CIC1Cos/d5_71_N_705_27 ), .Q1(\CIC1Cos/d5_27 ), 
    .FCO(\CIC1Cos/n10958 ));
  CIC1Cos_SLICE_1098 \CIC1Cos/SLICE_1098 ( .B1(\CIC1Cos/d5_25 ), 
    .A1(\CIC1Cos/d4_25 ), .B0(\CIC1Cos/d5_24 ), .A0(\CIC1Cos/d4_24 ), 
    .DI1(\CIC1Cos/d5_71_N_705_25 ), .DI0(\CIC1Cos/d5_71_N_705_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10956 ), .F0(\CIC1Cos/d5_71_N_705_24 ), 
    .Q0(\CIC1Cos/d5_24 ), .F1(\CIC1Cos/d5_71_N_705_25 ), .Q1(\CIC1Cos/d5_25 ), 
    .FCO(\CIC1Cos/n10957 ));
  CIC1Cos_SLICE_1099 \CIC1Cos/SLICE_1099 ( .B1(\CIC1Cos/d5_23 ), 
    .A1(\CIC1Cos/d4_23 ), .B0(\CIC1Cos/d5_22 ), .A0(\CIC1Cos/d4_22 ), 
    .DI1(\CIC1Cos/d5_71_N_705_23 ), .DI0(\CIC1Cos/d5_71_N_705_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10955 ), .F0(\CIC1Cos/d5_71_N_705_22 ), 
    .Q0(\CIC1Cos/d5_22 ), .F1(\CIC1Cos/d5_71_N_705_23 ), .Q1(\CIC1Cos/d5_23 ), 
    .FCO(\CIC1Cos/n10956 ));
  CIC1Cos_SLICE_1100 \CIC1Cos/SLICE_1100 ( .B1(\CIC1Cos/d5_21 ), 
    .A1(\CIC1Cos/d4_21 ), .B0(\CIC1Cos/d5_20 ), .A0(\CIC1Cos/d4_20 ), 
    .DI1(\CIC1Cos/d5_71_N_705_21 ), .DI0(\CIC1Cos/d5_71_N_705_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10954 ), .F0(\CIC1Cos/d5_71_N_705_20 ), 
    .Q0(\CIC1Cos/d5_20 ), .F1(\CIC1Cos/d5_71_N_705_21 ), .Q1(\CIC1Cos/d5_21 ), 
    .FCO(\CIC1Cos/n10955 ));
  CIC1Cos_SLICE_1101 \CIC1Cos/SLICE_1101 ( .B1(\CIC1Cos/d5_19 ), 
    .A1(\CIC1Cos/d4_19 ), .B0(\CIC1Cos/d5_18 ), .A0(\CIC1Cos/d4_18 ), 
    .DI1(\CIC1Cos/d5_71_N_705_19 ), .DI0(\CIC1Cos/d5_71_N_705_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10953 ), .F0(\CIC1Cos/d5_71_N_705_18 ), 
    .Q0(\CIC1Cos/d5_18 ), .F1(\CIC1Cos/d5_71_N_705_19 ), .Q1(\CIC1Cos/d5_19 ), 
    .FCO(\CIC1Cos/n10954 ));
  CIC1Cos_SLICE_1102 \CIC1Cos/SLICE_1102 ( .B1(\CIC1Cos/d5_17 ), 
    .A1(\CIC1Cos/d4_17 ), .B0(\CIC1Cos/d5_16 ), .A0(\CIC1Cos/d4_16 ), 
    .DI1(\CIC1Cos/d5_71_N_705_17 ), .DI0(\CIC1Cos/d5_71_N_705_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10952 ), .F0(\CIC1Cos/d5_71_N_705_16 ), 
    .Q0(\CIC1Cos/d5_16 ), .F1(\CIC1Cos/d5_71_N_705_17 ), .Q1(\CIC1Cos/d5_17 ), 
    .FCO(\CIC1Cos/n10953 ));
  CIC1Cos_SLICE_1103 \CIC1Cos/SLICE_1103 ( .B1(\CIC1Cos/d5_15 ), 
    .A1(\CIC1Cos/d4_15 ), .B0(\CIC1Cos/d5_14 ), .A0(\CIC1Cos/d4_14 ), 
    .DI1(\CIC1Cos/d5_71_N_705_15 ), .DI0(\CIC1Cos/d5_71_N_705_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10951 ), .F0(\CIC1Cos/d5_71_N_705_14 ), 
    .Q0(\CIC1Cos/d5_14 ), .F1(\CIC1Cos/d5_71_N_705_15 ), .Q1(\CIC1Cos/d5_15 ), 
    .FCO(\CIC1Cos/n10952 ));
  CIC1Cos_SLICE_1104 \CIC1Cos/SLICE_1104 ( .B1(\CIC1Cos/d5_13 ), 
    .A1(\CIC1Cos/d4_13 ), .B0(\CIC1Cos/d5_12 ), .A0(\CIC1Cos/d4_12 ), 
    .DI1(\CIC1Cos/d5_71_N_705_13 ), .DI0(\CIC1Cos/d5_71_N_705_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10950 ), .F0(\CIC1Cos/d5_71_N_705_12 ), 
    .Q0(\CIC1Cos/d5_12 ), .F1(\CIC1Cos/d5_71_N_705_13 ), .Q1(\CIC1Cos/d5_13 ), 
    .FCO(\CIC1Cos/n10951 ));
  CIC1Cos_SLICE_1105 \CIC1Cos/SLICE_1105 ( .B1(\CIC1Cos/d5_11 ), 
    .A1(\CIC1Cos/d4_11 ), .B0(\CIC1Cos/d5_10 ), .A0(\CIC1Cos/d4_10 ), 
    .DI1(\CIC1Cos/d5_71_N_705_11 ), .DI0(\CIC1Cos/d5_71_N_705_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10949 ), .F0(\CIC1Cos/d5_71_N_705_10 ), 
    .Q0(\CIC1Cos/d5_10 ), .F1(\CIC1Cos/d5_71_N_705_11 ), .Q1(\CIC1Cos/d5_11 ), 
    .FCO(\CIC1Cos/n10950 ));
  CIC1Cos_SLICE_1106 \CIC1Cos/SLICE_1106 ( .B1(\CIC1Cos/d5_9 ), 
    .A1(\CIC1Cos/d4_9 ), .B0(\CIC1Cos/d5_8 ), .A0(\CIC1Cos/d4_8 ), 
    .DI1(\CIC1Cos/d5_71_N_705_9 ), .DI0(\CIC1Cos/d5_71_N_705_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10948 ), .F0(\CIC1Cos/d5_71_N_705_8 ), 
    .Q0(\CIC1Cos/d5_8 ), .F1(\CIC1Cos/d5_71_N_705_9 ), .Q1(\CIC1Cos/d5_9 ), 
    .FCO(\CIC1Cos/n10949 ));
  CIC1Cos_SLICE_1107 \CIC1Cos/SLICE_1107 ( .B1(\CIC1Cos/d5_7 ), 
    .A1(\CIC1Cos/d4_7 ), .B0(\CIC1Cos/d5_6 ), .A0(\CIC1Cos/d4_6 ), 
    .DI1(\CIC1Cos/d5_71_N_705_7 ), .DI0(\CIC1Cos/d5_71_N_705_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10947 ), .F0(\CIC1Cos/d5_71_N_705_6 ), 
    .Q0(\CIC1Cos/d5_6 ), .F1(\CIC1Cos/d5_71_N_705_7 ), .Q1(\CIC1Cos/d5_7 ), 
    .FCO(\CIC1Cos/n10948 ));
  CIC1Cos_SLICE_1108 \CIC1Cos/SLICE_1108 ( .B1(\CIC1Cos/d5_5 ), 
    .A1(\CIC1Cos/d4_5 ), .B0(\CIC1Cos/d5_4 ), .A0(\CIC1Cos/d4_4 ), 
    .DI1(\CIC1Cos/d5_71_N_705_5 ), .DI0(\CIC1Cos/d5_71_N_705_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10946 ), .F0(\CIC1Cos/d5_71_N_705_4 ), 
    .Q0(\CIC1Cos/d5_4 ), .F1(\CIC1Cos/d5_71_N_705_5 ), .Q1(\CIC1Cos/d5_5 ), 
    .FCO(\CIC1Cos/n10947 ));
  CIC1Cos_SLICE_1109 \CIC1Cos/SLICE_1109 ( .B1(\CIC1Cos/d5_3 ), 
    .A1(\CIC1Cos/d4_3 ), .B0(\CIC1Cos/d5_2 ), .A0(\CIC1Cos/d4_2 ), 
    .DI1(\CIC1Cos/d5_71_N_705_3 ), .DI0(\CIC1Cos/d5_71_N_705_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10945 ), .F0(\CIC1Cos/d5_71_N_705_2 ), 
    .Q0(\CIC1Cos/d5_2 ), .F1(\CIC1Cos/d5_71_N_705_3 ), .Q1(\CIC1Cos/d5_3 ), 
    .FCO(\CIC1Cos/n10946 ));
  CIC1Cos_SLICE_1110 \CIC1Cos/SLICE_1110 ( .B1(\CIC1Cos/d5_1 ), 
    .A1(\CIC1Cos/d4_1 ), .B0(\CIC1Cos/d5_0 ), .A0(\CIC1Cos/d4_0 ), 
    .DI1(\CIC1Cos/d5_71_N_705_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d5_71_N_705_1 ), 
    .Q1(\CIC1Cos/d5_1 ), .FCO(\CIC1Cos/n10945 ));
  CIC1Cos_SLICE_1111 \CIC1Cos/SLICE_1111 ( .FCI(\CIC1Cos/n10943 ), 
    .F0(\CIC1Cos/n5254 ));
  CIC1Cos_SLICE_1112 \CIC1Cos/SLICE_1112 ( .B1(\CIC1Cos/d4_35 ), 
    .A1(\CIC1Cos/d3_35 ), .B0(\CIC1Cos/d4_34 ), .A0(\CIC1Cos/d3_34 ), 
    .DI1(\CIC1Cos/d4_71_N_633_35 ), .DI0(\CIC1Cos/d4_71_N_633_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10942 ), .F0(\CIC1Cos/d4_71_N_633_34 ), 
    .Q0(\CIC1Cos/d4_34 ), .F1(\CIC1Cos/d4_71_N_633_35 ), .Q1(\CIC1Cos/d4_35 ), 
    .FCO(\CIC1Cos/n10943 ));
  CIC1Cos_SLICE_1113 \CIC1Cos/SLICE_1113 ( .B1(\CIC1Cos/d4_33 ), 
    .A1(\CIC1Cos/d3_33 ), .B0(\CIC1Cos/d4_32 ), .A0(\CIC1Cos/d3_32 ), 
    .DI1(\CIC1Cos/d4_71_N_633_33 ), .DI0(\CIC1Cos/d4_71_N_633_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10941 ), .F0(\CIC1Cos/d4_71_N_633_32 ), 
    .Q0(\CIC1Cos/d4_32 ), .F1(\CIC1Cos/d4_71_N_633_33 ), .Q1(\CIC1Cos/d4_33 ), 
    .FCO(\CIC1Cos/n10942 ));
  CIC1Cos_SLICE_1114 \CIC1Cos/SLICE_1114 ( .B1(\CIC1Cos/d4_31 ), 
    .A1(\CIC1Cos/d3_31 ), .B0(\CIC1Cos/d4_30 ), .A0(\CIC1Cos/d3_30 ), 
    .DI1(\CIC1Cos/d4_71_N_633_31 ), .DI0(\CIC1Cos/d4_71_N_633_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10940 ), .F0(\CIC1Cos/d4_71_N_633_30 ), 
    .Q0(\CIC1Cos/d4_30 ), .F1(\CIC1Cos/d4_71_N_633_31 ), .Q1(\CIC1Cos/d4_31 ), 
    .FCO(\CIC1Cos/n10941 ));
  CIC1Cos_SLICE_1115 \CIC1Cos/SLICE_1115 ( .B1(\CIC1Cos/d4_29 ), 
    .A1(\CIC1Cos/d3_29 ), .B0(\CIC1Cos/d4_28 ), .A0(\CIC1Cos/d3_28 ), 
    .DI1(\CIC1Cos/d4_71_N_633_29 ), .DI0(\CIC1Cos/d4_71_N_633_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10939 ), .F0(\CIC1Cos/d4_71_N_633_28 ), 
    .Q0(\CIC1Cos/d4_28 ), .F1(\CIC1Cos/d4_71_N_633_29 ), .Q1(\CIC1Cos/d4_29 ), 
    .FCO(\CIC1Cos/n10940 ));
  CIC1Cos_SLICE_1116 \CIC1Cos/SLICE_1116 ( .B1(\CIC1Cos/d4_27 ), 
    .A1(\CIC1Cos/d3_27 ), .B0(\CIC1Cos/d4_26 ), .A0(\CIC1Cos/d3_26 ), 
    .DI1(\CIC1Cos/d4_71_N_633_27 ), .DI0(\CIC1Cos/d4_71_N_633_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10938 ), .F0(\CIC1Cos/d4_71_N_633_26 ), 
    .Q0(\CIC1Cos/d4_26 ), .F1(\CIC1Cos/d4_71_N_633_27 ), .Q1(\CIC1Cos/d4_27 ), 
    .FCO(\CIC1Cos/n10939 ));
  CIC1Cos_SLICE_1117 \CIC1Cos/SLICE_1117 ( .B1(\CIC1Cos/d4_25 ), 
    .A1(\CIC1Cos/d3_25 ), .B0(\CIC1Cos/d4_24 ), .A0(\CIC1Cos/d3_24 ), 
    .DI1(\CIC1Cos/d4_71_N_633_25 ), .DI0(\CIC1Cos/d4_71_N_633_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10937 ), .F0(\CIC1Cos/d4_71_N_633_24 ), 
    .Q0(\CIC1Cos/d4_24 ), .F1(\CIC1Cos/d4_71_N_633_25 ), .Q1(\CIC1Cos/d4_25 ), 
    .FCO(\CIC1Cos/n10938 ));
  CIC1Cos_SLICE_1118 \CIC1Cos/SLICE_1118 ( .B1(\CIC1Cos/d4_23 ), 
    .A1(\CIC1Cos/d3_23 ), .B0(\CIC1Cos/d4_22 ), .A0(\CIC1Cos/d3_22 ), 
    .DI1(\CIC1Cos/d4_71_N_633_23 ), .DI0(\CIC1Cos/d4_71_N_633_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10936 ), .F0(\CIC1Cos/d4_71_N_633_22 ), 
    .Q0(\CIC1Cos/d4_22 ), .F1(\CIC1Cos/d4_71_N_633_23 ), .Q1(\CIC1Cos/d4_23 ), 
    .FCO(\CIC1Cos/n10937 ));
  CIC1Cos_SLICE_1119 \CIC1Cos/SLICE_1119 ( .B1(\CIC1Cos/d4_21 ), 
    .A1(\CIC1Cos/d3_21 ), .B0(\CIC1Cos/d4_20 ), .A0(\CIC1Cos/d3_20 ), 
    .DI1(\CIC1Cos/d4_71_N_633_21 ), .DI0(\CIC1Cos/d4_71_N_633_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10935 ), .F0(\CIC1Cos/d4_71_N_633_20 ), 
    .Q0(\CIC1Cos/d4_20 ), .F1(\CIC1Cos/d4_71_N_633_21 ), .Q1(\CIC1Cos/d4_21 ), 
    .FCO(\CIC1Cos/n10936 ));
  CIC1Cos_SLICE_1120 \CIC1Cos/SLICE_1120 ( .B1(\CIC1Cos/d4_19 ), 
    .A1(\CIC1Cos/d3_19 ), .B0(\CIC1Cos/d4_18 ), .A0(\CIC1Cos/d3_18 ), 
    .DI1(\CIC1Cos/d4_71_N_633_19 ), .DI0(\CIC1Cos/d4_71_N_633_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10934 ), .F0(\CIC1Cos/d4_71_N_633_18 ), 
    .Q0(\CIC1Cos/d4_18 ), .F1(\CIC1Cos/d4_71_N_633_19 ), .Q1(\CIC1Cos/d4_19 ), 
    .FCO(\CIC1Cos/n10935 ));
  CIC1Cos_SLICE_1121 \CIC1Cos/SLICE_1121 ( .B1(\CIC1Cos/d4_17 ), 
    .A1(\CIC1Cos/d3_17 ), .B0(\CIC1Cos/d4_16 ), .A0(\CIC1Cos/d3_16 ), 
    .DI1(\CIC1Cos/d4_71_N_633_17 ), .DI0(\CIC1Cos/d4_71_N_633_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10933 ), .F0(\CIC1Cos/d4_71_N_633_16 ), 
    .Q0(\CIC1Cos/d4_16 ), .F1(\CIC1Cos/d4_71_N_633_17 ), .Q1(\CIC1Cos/d4_17 ), 
    .FCO(\CIC1Cos/n10934 ));
  CIC1Cos_SLICE_1122 \CIC1Cos/SLICE_1122 ( .B1(\CIC1Cos/d4_15 ), 
    .A1(\CIC1Cos/d3_15 ), .B0(\CIC1Cos/d4_14 ), .A0(\CIC1Cos/d3_14 ), 
    .DI1(\CIC1Cos/d4_71_N_633_15 ), .DI0(\CIC1Cos/d4_71_N_633_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10932 ), .F0(\CIC1Cos/d4_71_N_633_14 ), 
    .Q0(\CIC1Cos/d4_14 ), .F1(\CIC1Cos/d4_71_N_633_15 ), .Q1(\CIC1Cos/d4_15 ), 
    .FCO(\CIC1Cos/n10933 ));
  CIC1Cos_SLICE_1123 \CIC1Cos/SLICE_1123 ( .B1(\CIC1Cos/d4_13 ), 
    .A1(\CIC1Cos/d3_13 ), .B0(\CIC1Cos/d4_12 ), .A0(\CIC1Cos/d3_12 ), 
    .DI1(\CIC1Cos/d4_71_N_633_13 ), .DI0(\CIC1Cos/d4_71_N_633_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10931 ), .F0(\CIC1Cos/d4_71_N_633_12 ), 
    .Q0(\CIC1Cos/d4_12 ), .F1(\CIC1Cos/d4_71_N_633_13 ), .Q1(\CIC1Cos/d4_13 ), 
    .FCO(\CIC1Cos/n10932 ));
  CIC1Cos_SLICE_1124 \CIC1Cos/SLICE_1124 ( .B1(\CIC1Cos/d4_11 ), 
    .A1(\CIC1Cos/d3_11 ), .B0(\CIC1Cos/d4_10 ), .A0(\CIC1Cos/d3_10 ), 
    .DI1(\CIC1Cos/d4_71_N_633_11 ), .DI0(\CIC1Cos/d4_71_N_633_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10930 ), .F0(\CIC1Cos/d4_71_N_633_10 ), 
    .Q0(\CIC1Cos/d4_10 ), .F1(\CIC1Cos/d4_71_N_633_11 ), .Q1(\CIC1Cos/d4_11 ), 
    .FCO(\CIC1Cos/n10931 ));
  CIC1Cos_SLICE_1125 \CIC1Cos/SLICE_1125 ( .B1(\CIC1Cos/d4_9 ), 
    .A1(\CIC1Cos/d3_9 ), .B0(\CIC1Cos/d4_8 ), .A0(\CIC1Cos/d3_8 ), 
    .DI1(\CIC1Cos/d4_71_N_633_9 ), .DI0(\CIC1Cos/d4_71_N_633_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10929 ), .F0(\CIC1Cos/d4_71_N_633_8 ), 
    .Q0(\CIC1Cos/d4_8 ), .F1(\CIC1Cos/d4_71_N_633_9 ), .Q1(\CIC1Cos/d4_9 ), 
    .FCO(\CIC1Cos/n10930 ));
  CIC1Cos_SLICE_1126 \CIC1Cos/SLICE_1126 ( .B1(\CIC1Cos/d4_7 ), 
    .A1(\CIC1Cos/d3_7 ), .B0(\CIC1Cos/d4_6 ), .A0(\CIC1Cos/d3_6 ), 
    .DI1(\CIC1Cos/d4_71_N_633_7 ), .DI0(\CIC1Cos/d4_71_N_633_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10928 ), .F0(\CIC1Cos/d4_71_N_633_6 ), 
    .Q0(\CIC1Cos/d4_6 ), .F1(\CIC1Cos/d4_71_N_633_7 ), .Q1(\CIC1Cos/d4_7 ), 
    .FCO(\CIC1Cos/n10929 ));
  CIC1Cos_SLICE_1127 \CIC1Cos/SLICE_1127 ( .B1(\CIC1Cos/d4_5 ), 
    .A1(\CIC1Cos/d3_5 ), .B0(\CIC1Cos/d4_4 ), .A0(\CIC1Cos/d3_4 ), 
    .DI1(\CIC1Cos/d4_71_N_633_5 ), .DI0(\CIC1Cos/d4_71_N_633_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10927 ), .F0(\CIC1Cos/d4_71_N_633_4 ), 
    .Q0(\CIC1Cos/d4_4 ), .F1(\CIC1Cos/d4_71_N_633_5 ), .Q1(\CIC1Cos/d4_5 ), 
    .FCO(\CIC1Cos/n10928 ));
  CIC1Cos_SLICE_1128 \CIC1Cos/SLICE_1128 ( .B1(\CIC1Cos/d4_3 ), 
    .A1(\CIC1Cos/d3_3 ), .B0(\CIC1Cos/d4_2 ), .A0(\CIC1Cos/d3_2 ), 
    .DI1(\CIC1Cos/d4_71_N_633_3 ), .DI0(\CIC1Cos/d4_71_N_633_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10926 ), .F0(\CIC1Cos/d4_71_N_633_2 ), 
    .Q0(\CIC1Cos/d4_2 ), .F1(\CIC1Cos/d4_71_N_633_3 ), .Q1(\CIC1Cos/d4_3 ), 
    .FCO(\CIC1Cos/n10927 ));
  CIC1Cos_SLICE_1129 \CIC1Cos/SLICE_1129 ( .B1(\CIC1Cos/d4_1 ), 
    .A1(\CIC1Cos/d3_1 ), .B0(\CIC1Cos/d4_0 ), .A0(\CIC1Cos/d3_0 ), 
    .DI1(\CIC1Cos/d4_71_N_633_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d4_71_N_633_1 ), 
    .Q1(\CIC1Cos/d4_1 ), .FCO(\CIC1Cos/n10926 ));
  CIC1Cos_SLICE_1130 \CIC1Cos/SLICE_1130 ( .FCI(\CIC1Cos/n10924 ), 
    .F0(\CIC1Cos/n5102 ));
  CIC1Cos_SLICE_1131 \CIC1Cos/SLICE_1131 ( .B1(\CIC1Cos/d3_35 ), 
    .A1(\CIC1Cos/d2_35 ), .B0(\CIC1Cos/d3_34 ), .A0(\CIC1Cos/d2_34 ), 
    .DI1(\CIC1Cos/d3_71_N_561_35 ), .DI0(\CIC1Cos/d3_71_N_561_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10923 ), .F0(\CIC1Cos/d3_71_N_561_34 ), 
    .Q0(\CIC1Cos/d3_34 ), .F1(\CIC1Cos/d3_71_N_561_35 ), .Q1(\CIC1Cos/d3_35 ), 
    .FCO(\CIC1Cos/n10924 ));
  CIC1Cos_SLICE_1132 \CIC1Cos/SLICE_1132 ( .B1(\CIC1Cos/d3_33 ), 
    .A1(\CIC1Cos/d2_33 ), .B0(\CIC1Cos/d3_32 ), .A0(\CIC1Cos/d2_32 ), 
    .DI1(\CIC1Cos/d3_71_N_561_33 ), .DI0(\CIC1Cos/d3_71_N_561_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10922 ), .F0(\CIC1Cos/d3_71_N_561_32 ), 
    .Q0(\CIC1Cos/d3_32 ), .F1(\CIC1Cos/d3_71_N_561_33 ), .Q1(\CIC1Cos/d3_33 ), 
    .FCO(\CIC1Cos/n10923 ));
  CIC1Cos_SLICE_1133 \CIC1Cos/SLICE_1133 ( .B1(\CIC1Cos/d3_31 ), 
    .A1(\CIC1Cos/d2_31 ), .B0(\CIC1Cos/d3_30 ), .A0(\CIC1Cos/d2_30 ), 
    .DI1(\CIC1Cos/d3_71_N_561_31 ), .DI0(\CIC1Cos/d3_71_N_561_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10921 ), .F0(\CIC1Cos/d3_71_N_561_30 ), 
    .Q0(\CIC1Cos/d3_30 ), .F1(\CIC1Cos/d3_71_N_561_31 ), .Q1(\CIC1Cos/d3_31 ), 
    .FCO(\CIC1Cos/n10922 ));
  CIC1Cos_SLICE_1134 \CIC1Cos/SLICE_1134 ( .B1(\CIC1Cos/d3_29 ), 
    .A1(\CIC1Cos/d2_29 ), .B0(\CIC1Cos/d3_28 ), .A0(\CIC1Cos/d2_28 ), 
    .DI1(\CIC1Cos/d3_71_N_561_29 ), .DI0(\CIC1Cos/d3_71_N_561_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10920 ), .F0(\CIC1Cos/d3_71_N_561_28 ), 
    .Q0(\CIC1Cos/d3_28 ), .F1(\CIC1Cos/d3_71_N_561_29 ), .Q1(\CIC1Cos/d3_29 ), 
    .FCO(\CIC1Cos/n10921 ));
  CIC1Cos_SLICE_1135 \CIC1Cos/SLICE_1135 ( .B1(\CIC1Cos/d3_27 ), 
    .A1(\CIC1Cos/d2_27 ), .B0(\CIC1Cos/d3_26 ), .A0(\CIC1Cos/d2_26 ), 
    .DI1(\CIC1Cos/d3_71_N_561_27 ), .DI0(\CIC1Cos/d3_71_N_561_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10919 ), .F0(\CIC1Cos/d3_71_N_561_26 ), 
    .Q0(\CIC1Cos/d3_26 ), .F1(\CIC1Cos/d3_71_N_561_27 ), .Q1(\CIC1Cos/d3_27 ), 
    .FCO(\CIC1Cos/n10920 ));
  CIC1Cos_SLICE_1136 \CIC1Cos/SLICE_1136 ( .B1(\CIC1Cos/d3_25 ), 
    .A1(\CIC1Cos/d2_25 ), .B0(\CIC1Cos/d3_24 ), .A0(\CIC1Cos/d2_24 ), 
    .DI1(\CIC1Cos/d3_71_N_561_25 ), .DI0(\CIC1Cos/d3_71_N_561_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10918 ), .F0(\CIC1Cos/d3_71_N_561_24 ), 
    .Q0(\CIC1Cos/d3_24 ), .F1(\CIC1Cos/d3_71_N_561_25 ), .Q1(\CIC1Cos/d3_25 ), 
    .FCO(\CIC1Cos/n10919 ));
  CIC1Cos_SLICE_1137 \CIC1Cos/SLICE_1137 ( .B1(\CIC1Cos/d3_23 ), 
    .A1(\CIC1Cos/d2_23 ), .B0(\CIC1Cos/d3_22 ), .A0(\CIC1Cos/d2_22 ), 
    .DI1(\CIC1Cos/d3_71_N_561_23 ), .DI0(\CIC1Cos/d3_71_N_561_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10917 ), .F0(\CIC1Cos/d3_71_N_561_22 ), 
    .Q0(\CIC1Cos/d3_22 ), .F1(\CIC1Cos/d3_71_N_561_23 ), .Q1(\CIC1Cos/d3_23 ), 
    .FCO(\CIC1Cos/n10918 ));
  CIC1Cos_SLICE_1138 \CIC1Cos/SLICE_1138 ( .B1(\CIC1Cos/d3_21 ), 
    .A1(\CIC1Cos/d2_21 ), .B0(\CIC1Cos/d3_20 ), .A0(\CIC1Cos/d2_20 ), 
    .DI1(\CIC1Cos/d3_71_N_561_21 ), .DI0(\CIC1Cos/d3_71_N_561_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10916 ), .F0(\CIC1Cos/d3_71_N_561_20 ), 
    .Q0(\CIC1Cos/d3_20 ), .F1(\CIC1Cos/d3_71_N_561_21 ), .Q1(\CIC1Cos/d3_21 ), 
    .FCO(\CIC1Cos/n10917 ));
  CIC1Cos_SLICE_1139 \CIC1Cos/SLICE_1139 ( .B1(\CIC1Cos/d3_19 ), 
    .A1(\CIC1Cos/d2_19 ), .B0(\CIC1Cos/d3_18 ), .A0(\CIC1Cos/d2_18 ), 
    .DI1(\CIC1Cos/d3_71_N_561_19 ), .DI0(\CIC1Cos/d3_71_N_561_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10915 ), .F0(\CIC1Cos/d3_71_N_561_18 ), 
    .Q0(\CIC1Cos/d3_18 ), .F1(\CIC1Cos/d3_71_N_561_19 ), .Q1(\CIC1Cos/d3_19 ), 
    .FCO(\CIC1Cos/n10916 ));
  CIC1Cos_SLICE_1140 \CIC1Cos/SLICE_1140 ( .B1(\CIC1Cos/d3_17 ), 
    .A1(\CIC1Cos/d2_17 ), .B0(\CIC1Cos/d3_16 ), .A0(\CIC1Cos/d2_16 ), 
    .DI1(\CIC1Cos/d3_71_N_561_17 ), .DI0(\CIC1Cos/d3_71_N_561_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10914 ), .F0(\CIC1Cos/d3_71_N_561_16 ), 
    .Q0(\CIC1Cos/d3_16 ), .F1(\CIC1Cos/d3_71_N_561_17 ), .Q1(\CIC1Cos/d3_17 ), 
    .FCO(\CIC1Cos/n10915 ));
  CIC1Cos_SLICE_1141 \CIC1Cos/SLICE_1141 ( .B1(\CIC1Cos/d3_15 ), 
    .A1(\CIC1Cos/d2_15 ), .B0(\CIC1Cos/d3_14 ), .A0(\CIC1Cos/d2_14 ), 
    .DI1(\CIC1Cos/d3_71_N_561_15 ), .DI0(\CIC1Cos/d3_71_N_561_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10913 ), .F0(\CIC1Cos/d3_71_N_561_14 ), 
    .Q0(\CIC1Cos/d3_14 ), .F1(\CIC1Cos/d3_71_N_561_15 ), .Q1(\CIC1Cos/d3_15 ), 
    .FCO(\CIC1Cos/n10914 ));
  CIC1Cos_SLICE_1142 \CIC1Cos/SLICE_1142 ( .B1(\CIC1Cos/d3_13 ), 
    .A1(\CIC1Cos/d2_13 ), .B0(\CIC1Cos/d3_12 ), .A0(\CIC1Cos/d2_12 ), 
    .DI1(\CIC1Cos/d3_71_N_561_13 ), .DI0(\CIC1Cos/d3_71_N_561_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10912 ), .F0(\CIC1Cos/d3_71_N_561_12 ), 
    .Q0(\CIC1Cos/d3_12 ), .F1(\CIC1Cos/d3_71_N_561_13 ), .Q1(\CIC1Cos/d3_13 ), 
    .FCO(\CIC1Cos/n10913 ));
  CIC1Cos_SLICE_1143 \CIC1Cos/SLICE_1143 ( .B1(\CIC1Cos/d3_11 ), 
    .A1(\CIC1Cos/d2_11 ), .B0(\CIC1Cos/d3_10 ), .A0(\CIC1Cos/d2_10 ), 
    .DI1(\CIC1Cos/d3_71_N_561_11 ), .DI0(\CIC1Cos/d3_71_N_561_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10911 ), .F0(\CIC1Cos/d3_71_N_561_10 ), 
    .Q0(\CIC1Cos/d3_10 ), .F1(\CIC1Cos/d3_71_N_561_11 ), .Q1(\CIC1Cos/d3_11 ), 
    .FCO(\CIC1Cos/n10912 ));
  CIC1Cos_SLICE_1144 \CIC1Cos/SLICE_1144 ( .B1(\CIC1Cos/d3_9 ), 
    .A1(\CIC1Cos/d2_9 ), .B0(\CIC1Cos/d3_8 ), .A0(\CIC1Cos/d2_8 ), 
    .DI1(\CIC1Cos/d3_71_N_561_9 ), .DI0(\CIC1Cos/d3_71_N_561_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10910 ), .F0(\CIC1Cos/d3_71_N_561_8 ), 
    .Q0(\CIC1Cos/d3_8 ), .F1(\CIC1Cos/d3_71_N_561_9 ), .Q1(\CIC1Cos/d3_9 ), 
    .FCO(\CIC1Cos/n10911 ));
  CIC1Cos_SLICE_1145 \CIC1Cos/SLICE_1145 ( .B1(\CIC1Cos/d3_7 ), 
    .A1(\CIC1Cos/d2_7 ), .B0(\CIC1Cos/d3_6 ), .A0(\CIC1Cos/d2_6 ), 
    .DI1(\CIC1Cos/d3_71_N_561_7 ), .DI0(\CIC1Cos/d3_71_N_561_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10909 ), .F0(\CIC1Cos/d3_71_N_561_6 ), 
    .Q0(\CIC1Cos/d3_6 ), .F1(\CIC1Cos/d3_71_N_561_7 ), .Q1(\CIC1Cos/d3_7 ), 
    .FCO(\CIC1Cos/n10910 ));
  CIC1Cos_SLICE_1146 \CIC1Cos/SLICE_1146 ( .B1(\CIC1Cos/d3_5 ), 
    .A1(\CIC1Cos/d2_5 ), .B0(\CIC1Cos/d3_4 ), .A0(\CIC1Cos/d2_4 ), 
    .DI1(\CIC1Cos/d3_71_N_561_5 ), .DI0(\CIC1Cos/d3_71_N_561_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10908 ), .F0(\CIC1Cos/d3_71_N_561_4 ), 
    .Q0(\CIC1Cos/d3_4 ), .F1(\CIC1Cos/d3_71_N_561_5 ), .Q1(\CIC1Cos/d3_5 ), 
    .FCO(\CIC1Cos/n10909 ));
  CIC1Cos_SLICE_1147 \CIC1Cos/SLICE_1147 ( .B1(\CIC1Cos/d3_3 ), 
    .A1(\CIC1Cos/d2_3 ), .B0(\CIC1Cos/d3_2 ), .A0(\CIC1Cos/d2_2 ), 
    .DI1(\CIC1Cos/d3_71_N_561_3 ), .DI0(\CIC1Cos/d3_71_N_561_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10907 ), .F0(\CIC1Cos/d3_71_N_561_2 ), 
    .Q0(\CIC1Cos/d3_2 ), .F1(\CIC1Cos/d3_71_N_561_3 ), .Q1(\CIC1Cos/d3_3 ), 
    .FCO(\CIC1Cos/n10908 ));
  CIC1Cos_SLICE_1148 \CIC1Cos/SLICE_1148 ( .B1(\CIC1Cos/d3_1 ), 
    .A1(\CIC1Cos/d2_1 ), .B0(\CIC1Cos/d3_0 ), .A0(\CIC1Cos/d2_0 ), 
    .DI1(\CIC1Cos/d3_71_N_561_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d3_71_N_561_1 ), 
    .Q1(\CIC1Cos/d3_1 ), .FCO(\CIC1Cos/n10907 ));
  CIC1Cos_SLICE_1149 \CIC1Cos/SLICE_1149 ( .FCI(\CIC1Cos/n10905 ), 
    .F0(\CIC1Cos/n4950 ));
  CIC1Cos_SLICE_1150 \CIC1Cos/SLICE_1150 ( .B1(\CIC1Cos/d2_35 ), 
    .A1(\CIC1Cos/d1_35 ), .B0(\CIC1Cos/d2_34 ), .A0(\CIC1Cos/d1_34 ), 
    .DI1(\CIC1Cos/d2_71_N_489_35 ), .DI0(\CIC1Cos/d2_71_N_489_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10904 ), .F0(\CIC1Cos/d2_71_N_489_34 ), 
    .Q0(\CIC1Cos/d2_34 ), .F1(\CIC1Cos/d2_71_N_489_35 ), .Q1(\CIC1Cos/d2_35 ), 
    .FCO(\CIC1Cos/n10905 ));
  CIC1Cos_SLICE_1151 \CIC1Cos/SLICE_1151 ( .B1(\CIC1Cos/d2_33 ), 
    .A1(\CIC1Cos/d1_33 ), .B0(\CIC1Cos/d2_32 ), .A0(\CIC1Cos/d1_32 ), 
    .DI1(\CIC1Cos/d2_71_N_489_33 ), .DI0(\CIC1Cos/d2_71_N_489_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10903 ), .F0(\CIC1Cos/d2_71_N_489_32 ), 
    .Q0(\CIC1Cos/d2_32 ), .F1(\CIC1Cos/d2_71_N_489_33 ), .Q1(\CIC1Cos/d2_33 ), 
    .FCO(\CIC1Cos/n10904 ));
  CIC1Cos_SLICE_1152 \CIC1Cos/SLICE_1152 ( .B1(\CIC1Cos/d2_31 ), 
    .A1(\CIC1Cos/d1_31 ), .B0(\CIC1Cos/d2_30 ), .A0(\CIC1Cos/d1_30 ), 
    .DI1(\CIC1Cos/d2_71_N_489_31 ), .DI0(\CIC1Cos/d2_71_N_489_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10902 ), .F0(\CIC1Cos/d2_71_N_489_30 ), 
    .Q0(\CIC1Cos/d2_30 ), .F1(\CIC1Cos/d2_71_N_489_31 ), .Q1(\CIC1Cos/d2_31 ), 
    .FCO(\CIC1Cos/n10903 ));
  CIC1Cos_SLICE_1153 \CIC1Cos/SLICE_1153 ( .B1(\CIC1Cos/d2_29 ), 
    .A1(\CIC1Cos/d1_29 ), .B0(\CIC1Cos/d2_28 ), .A0(\CIC1Cos/d1_28 ), 
    .DI1(\CIC1Cos/d2_71_N_489_29 ), .DI0(\CIC1Cos/d2_71_N_489_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10901 ), .F0(\CIC1Cos/d2_71_N_489_28 ), 
    .Q0(\CIC1Cos/d2_28 ), .F1(\CIC1Cos/d2_71_N_489_29 ), .Q1(\CIC1Cos/d2_29 ), 
    .FCO(\CIC1Cos/n10902 ));
  CIC1Cos_SLICE_1154 \CIC1Cos/SLICE_1154 ( .B1(\CIC1Cos/d2_27 ), 
    .A1(\CIC1Cos/d1_27 ), .B0(\CIC1Cos/d2_26 ), .A0(\CIC1Cos/d1_26 ), 
    .DI1(\CIC1Cos/d2_71_N_489_27 ), .DI0(\CIC1Cos/d2_71_N_489_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10900 ), .F0(\CIC1Cos/d2_71_N_489_26 ), 
    .Q0(\CIC1Cos/d2_26 ), .F1(\CIC1Cos/d2_71_N_489_27 ), .Q1(\CIC1Cos/d2_27 ), 
    .FCO(\CIC1Cos/n10901 ));
  CIC1Cos_SLICE_1155 \CIC1Cos/SLICE_1155 ( .B1(\CIC1Cos/d2_25 ), 
    .A1(\CIC1Cos/d1_25 ), .B0(\CIC1Cos/d2_24 ), .A0(\CIC1Cos/d1_24 ), 
    .DI1(\CIC1Cos/d2_71_N_489_25 ), .DI0(\CIC1Cos/d2_71_N_489_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10899 ), .F0(\CIC1Cos/d2_71_N_489_24 ), 
    .Q0(\CIC1Cos/d2_24 ), .F1(\CIC1Cos/d2_71_N_489_25 ), .Q1(\CIC1Cos/d2_25 ), 
    .FCO(\CIC1Cos/n10900 ));
  CIC1Cos_SLICE_1156 \CIC1Cos/SLICE_1156 ( .B1(\CIC1Cos/d2_23 ), 
    .A1(\CIC1Cos/d1_23 ), .B0(\CIC1Cos/d2_22 ), .A0(\CIC1Cos/d1_22 ), 
    .DI1(\CIC1Cos/d2_71_N_489_23 ), .DI0(\CIC1Cos/d2_71_N_489_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10898 ), .F0(\CIC1Cos/d2_71_N_489_22 ), 
    .Q0(\CIC1Cos/d2_22 ), .F1(\CIC1Cos/d2_71_N_489_23 ), .Q1(\CIC1Cos/d2_23 ), 
    .FCO(\CIC1Cos/n10899 ));
  CIC1Cos_SLICE_1157 \CIC1Cos/SLICE_1157 ( .B1(\CIC1Cos/d2_21 ), 
    .A1(\CIC1Cos/d1_21 ), .B0(\CIC1Cos/d2_20 ), .A0(\CIC1Cos/d1_20 ), 
    .DI1(\CIC1Cos/d2_71_N_489_21 ), .DI0(\CIC1Cos/d2_71_N_489_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10897 ), .F0(\CIC1Cos/d2_71_N_489_20 ), 
    .Q0(\CIC1Cos/d2_20 ), .F1(\CIC1Cos/d2_71_N_489_21 ), .Q1(\CIC1Cos/d2_21 ), 
    .FCO(\CIC1Cos/n10898 ));
  CIC1Cos_SLICE_1158 \CIC1Cos/SLICE_1158 ( .B1(\CIC1Cos/d2_19 ), 
    .A1(\CIC1Cos/d1_19 ), .B0(\CIC1Cos/d2_18 ), .A0(\CIC1Cos/d1_18 ), 
    .DI1(\CIC1Cos/d2_71_N_489_19 ), .DI0(\CIC1Cos/d2_71_N_489_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10896 ), .F0(\CIC1Cos/d2_71_N_489_18 ), 
    .Q0(\CIC1Cos/d2_18 ), .F1(\CIC1Cos/d2_71_N_489_19 ), .Q1(\CIC1Cos/d2_19 ), 
    .FCO(\CIC1Cos/n10897 ));
  CIC1Cos_SLICE_1159 \CIC1Cos/SLICE_1159 ( .B1(\CIC1Cos/d2_17 ), 
    .A1(\CIC1Cos/d1_17 ), .B0(\CIC1Cos/d2_16 ), .A0(\CIC1Cos/d1_16 ), 
    .DI1(\CIC1Cos/d2_71_N_489_17 ), .DI0(\CIC1Cos/d2_71_N_489_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10895 ), .F0(\CIC1Cos/d2_71_N_489_16 ), 
    .Q0(\CIC1Cos/d2_16 ), .F1(\CIC1Cos/d2_71_N_489_17 ), .Q1(\CIC1Cos/d2_17 ), 
    .FCO(\CIC1Cos/n10896 ));
  CIC1Cos_SLICE_1160 \CIC1Cos/SLICE_1160 ( .B1(\CIC1Cos/d2_15 ), 
    .A1(\CIC1Cos/d1_15 ), .B0(\CIC1Cos/d2_14 ), .A0(\CIC1Cos/d1_14 ), 
    .DI1(\CIC1Cos/d2_71_N_489_15 ), .DI0(\CIC1Cos/d2_71_N_489_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10894 ), .F0(\CIC1Cos/d2_71_N_489_14 ), 
    .Q0(\CIC1Cos/d2_14 ), .F1(\CIC1Cos/d2_71_N_489_15 ), .Q1(\CIC1Cos/d2_15 ), 
    .FCO(\CIC1Cos/n10895 ));
  CIC1Cos_SLICE_1161 \CIC1Cos/SLICE_1161 ( .B1(\CIC1Cos/d2_13 ), 
    .A1(\CIC1Cos/d1_13 ), .B0(\CIC1Cos/d2_12 ), .A0(\CIC1Cos/d1_12 ), 
    .DI1(\CIC1Cos/d2_71_N_489_13 ), .DI0(\CIC1Cos/d2_71_N_489_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10893 ), .F0(\CIC1Cos/d2_71_N_489_12 ), 
    .Q0(\CIC1Cos/d2_12 ), .F1(\CIC1Cos/d2_71_N_489_13 ), .Q1(\CIC1Cos/d2_13 ), 
    .FCO(\CIC1Cos/n10894 ));
  CIC1Cos_SLICE_1162 \CIC1Cos/SLICE_1162 ( .B1(\CIC1Cos/d2_11 ), 
    .A1(\CIC1Cos/d1_11 ), .B0(\CIC1Cos/d2_10 ), .A0(\CIC1Cos/d1_10 ), 
    .DI1(\CIC1Cos/d2_71_N_489_11 ), .DI0(\CIC1Cos/d2_71_N_489_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10892 ), .F0(\CIC1Cos/d2_71_N_489_10 ), 
    .Q0(\CIC1Cos/d2_10 ), .F1(\CIC1Cos/d2_71_N_489_11 ), .Q1(\CIC1Cos/d2_11 ), 
    .FCO(\CIC1Cos/n10893 ));
  CIC1Cos_SLICE_1163 \CIC1Cos/SLICE_1163 ( .B1(\CIC1Cos/d2_9 ), 
    .A1(\CIC1Cos/d1_9 ), .B0(\CIC1Cos/d2_8 ), .A0(\CIC1Cos/d1_8 ), 
    .DI1(\CIC1Cos/d2_71_N_489_9 ), .DI0(\CIC1Cos/d2_71_N_489_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10891 ), .F0(\CIC1Cos/d2_71_N_489_8 ), 
    .Q0(\CIC1Cos/d2_8 ), .F1(\CIC1Cos/d2_71_N_489_9 ), .Q1(\CIC1Cos/d2_9 ), 
    .FCO(\CIC1Cos/n10892 ));
  CIC1Cos_SLICE_1164 \CIC1Cos/SLICE_1164 ( .B1(\CIC1Cos/d2_7 ), 
    .A1(\CIC1Cos/d1_7 ), .B0(\CIC1Cos/d2_6 ), .A0(\CIC1Cos/d1_6 ), 
    .DI1(\CIC1Cos/d2_71_N_489_7 ), .DI0(\CIC1Cos/d2_71_N_489_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10890 ), .F0(\CIC1Cos/d2_71_N_489_6 ), 
    .Q0(\CIC1Cos/d2_6 ), .F1(\CIC1Cos/d2_71_N_489_7 ), .Q1(\CIC1Cos/d2_7 ), 
    .FCO(\CIC1Cos/n10891 ));
  CIC1Cos_SLICE_1165 \CIC1Cos/SLICE_1165 ( .B1(\CIC1Cos/d2_5 ), 
    .A1(\CIC1Cos/d1_5 ), .B0(\CIC1Cos/d2_4 ), .A0(\CIC1Cos/d1_4 ), 
    .DI1(\CIC1Cos/d2_71_N_489_5 ), .DI0(\CIC1Cos/d2_71_N_489_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10889 ), .F0(\CIC1Cos/d2_71_N_489_4 ), 
    .Q0(\CIC1Cos/d2_4 ), .F1(\CIC1Cos/d2_71_N_489_5 ), .Q1(\CIC1Cos/d2_5 ), 
    .FCO(\CIC1Cos/n10890 ));
  CIC1Cos_SLICE_1166 \CIC1Cos/SLICE_1166 ( .B1(\CIC1Cos/d2_3 ), 
    .A1(\CIC1Cos/d1_3 ), .B0(\CIC1Cos/d2_2 ), .A0(\CIC1Cos/d1_2 ), 
    .DI1(\CIC1Cos/d2_71_N_489_3 ), .DI0(\CIC1Cos/d2_71_N_489_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10888 ), .F0(\CIC1Cos/d2_71_N_489_2 ), 
    .Q0(\CIC1Cos/d2_2 ), .F1(\CIC1Cos/d2_71_N_489_3 ), .Q1(\CIC1Cos/d2_3 ), 
    .FCO(\CIC1Cos/n10889 ));
  CIC1Cos_SLICE_1167 \CIC1Cos/SLICE_1167 ( .B1(\CIC1Cos/d2_1 ), 
    .A1(\CIC1Cos/d1_1 ), .B0(\CIC1Cos/d2_0 ), .A0(\CIC1Cos/d1_0 ), 
    .DI1(\CIC1Cos/d2_71_N_489_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d2_71_N_489_1 ), 
    .Q1(\CIC1Cos/d2_1 ), .FCO(\CIC1Cos/n10888 ));
  CIC1Cos_SLICE_1168 \CIC1Cos/SLICE_1168 ( .FCI(\CIC1Cos/n10878 ), 
    .F0(\CIC1Cos/n4798 ));
  CIC1Cos_SLICE_1169 \CIC1Cos/SLICE_1169 ( .B1(\CIC1Cos/d1_35 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_34 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_35 ), .DI0(\CIC1Cos/d1_71_N_417_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10877 ), .F0(\CIC1Cos/d1_71_N_417_34 ), 
    .Q0(\CIC1Cos/d1_34 ), .F1(\CIC1Cos/d1_71_N_417_35 ), .Q1(\CIC1Cos/d1_35 ), 
    .FCO(\CIC1Cos/n10878 ));
  CIC1Cos_SLICE_1170 \CIC1Cos/SLICE_1170 ( .B1(\CIC1Cos/d1_33 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_32 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_33 ), .DI0(\CIC1Cos/d1_71_N_417_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10876 ), .F0(\CIC1Cos/d1_71_N_417_32 ), 
    .Q0(\CIC1Cos/d1_32 ), .F1(\CIC1Cos/d1_71_N_417_33 ), .Q1(\CIC1Cos/d1_33 ), 
    .FCO(\CIC1Cos/n10877 ));
  CIC1Cos_SLICE_1171 \CIC1Cos/SLICE_1171 ( .B1(\CIC1Cos/d1_31 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_30 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_31 ), .DI0(\CIC1Cos/d1_71_N_417_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10875 ), .F0(\CIC1Cos/d1_71_N_417_30 ), 
    .Q0(\CIC1Cos/d1_30 ), .F1(\CIC1Cos/d1_71_N_417_31 ), .Q1(\CIC1Cos/d1_31 ), 
    .FCO(\CIC1Cos/n10876 ));
  CIC1Cos_SLICE_1172 \CIC1Cos/SLICE_1172 ( .B1(\CIC1Cos/d1_29 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_28 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_29 ), .DI0(\CIC1Cos/d1_71_N_417_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10874 ), .F0(\CIC1Cos/d1_71_N_417_28 ), 
    .Q0(\CIC1Cos/d1_28 ), .F1(\CIC1Cos/d1_71_N_417_29 ), .Q1(\CIC1Cos/d1_29 ), 
    .FCO(\CIC1Cos/n10875 ));
  CIC1Cos_SLICE_1173 \CIC1Cos/SLICE_1173 ( .B1(\CIC1Cos/d1_27 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_26 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_27 ), .DI0(\CIC1Cos/d1_71_N_417_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10873 ), .F0(\CIC1Cos/d1_71_N_417_26 ), 
    .Q0(\CIC1Cos/d1_26 ), .F1(\CIC1Cos/d1_71_N_417_27 ), .Q1(\CIC1Cos/d1_27 ), 
    .FCO(\CIC1Cos/n10874 ));
  CIC1Cos_SLICE_1174 \CIC1Cos/SLICE_1174 ( .B1(\CIC1Cos/d1_25 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_24 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_25 ), .DI0(\CIC1Cos/d1_71_N_417_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10872 ), .F0(\CIC1Cos/d1_71_N_417_24 ), 
    .Q0(\CIC1Cos/d1_24 ), .F1(\CIC1Cos/d1_71_N_417_25 ), .Q1(\CIC1Cos/d1_25 ), 
    .FCO(\CIC1Cos/n10873 ));
  CIC1Cos_SLICE_1175 \CIC1Cos/SLICE_1175 ( .B1(\CIC1Cos/d1_23 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_22 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_23 ), .DI0(\CIC1Cos/d1_71_N_417_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10871 ), .F0(\CIC1Cos/d1_71_N_417_22 ), 
    .Q0(\CIC1Cos/d1_22 ), .F1(\CIC1Cos/d1_71_N_417_23 ), .Q1(\CIC1Cos/d1_23 ), 
    .FCO(\CIC1Cos/n10872 ));
  CIC1Cos_SLICE_1176 \CIC1Cos/SLICE_1176 ( .B1(\CIC1Cos/d1_21 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_20 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_21 ), .DI0(\CIC1Cos/d1_71_N_417_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10870 ), .F0(\CIC1Cos/d1_71_N_417_20 ), 
    .Q0(\CIC1Cos/d1_20 ), .F1(\CIC1Cos/d1_71_N_417_21 ), .Q1(\CIC1Cos/d1_21 ), 
    .FCO(\CIC1Cos/n10871 ));
  CIC1Cos_SLICE_1177 \CIC1Cos/SLICE_1177 ( .B1(\CIC1Cos/d1_19 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_18 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_19 ), .DI0(\CIC1Cos/d1_71_N_417_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10869 ), .F0(\CIC1Cos/d1_71_N_417_18 ), 
    .Q0(\CIC1Cos/d1_18 ), .F1(\CIC1Cos/d1_71_N_417_19 ), .Q1(\CIC1Cos/d1_19 ), 
    .FCO(\CIC1Cos/n10870 ));
  CIC1Cos_SLICE_1178 \CIC1Cos/SLICE_1178 ( .B1(\CIC1Cos/d1_17 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_16 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_17 ), .DI0(\CIC1Cos/d1_71_N_417_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10868 ), .F0(\CIC1Cos/d1_71_N_417_16 ), 
    .Q0(\CIC1Cos/d1_16 ), .F1(\CIC1Cos/d1_71_N_417_17 ), .Q1(\CIC1Cos/d1_17 ), 
    .FCO(\CIC1Cos/n10869 ));
  CIC1Cos_SLICE_1179 \CIC1Cos/SLICE_1179 ( .B1(\CIC1Cos/d1_15 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_14 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_15 ), .DI0(\CIC1Cos/d1_71_N_417_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10867 ), .F0(\CIC1Cos/d1_71_N_417_14 ), 
    .Q0(\CIC1Cos/d1_14 ), .F1(\CIC1Cos/d1_71_N_417_15 ), .Q1(\CIC1Cos/d1_15 ), 
    .FCO(\CIC1Cos/n10868 ));
  CIC1Cos_SLICE_1180 \CIC1Cos/SLICE_1180 ( .B1(\CIC1Cos/d1_13 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_12 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_417_13 ), .DI0(\CIC1Cos/d1_71_N_417_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10866 ), .F0(\CIC1Cos/d1_71_N_417_12 ), 
    .Q0(\CIC1Cos/d1_12 ), .F1(\CIC1Cos/d1_71_N_417_13 ), .Q1(\CIC1Cos/d1_13 ), 
    .FCO(\CIC1Cos/n10867 ));
  CIC1Cos_SLICE_1181 \CIC1Cos/SLICE_1181 ( .B1(\CIC1Cos/d1_11 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_10 ), .A0(MixerOutCos_10), 
    .DI1(\CIC1Cos/d1_71_N_417_11 ), .DI0(\CIC1Cos/d1_71_N_417_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10865 ), .F0(\CIC1Cos/d1_71_N_417_10 ), 
    .Q0(\CIC1Cos/d1_10 ), .F1(\CIC1Cos/d1_71_N_417_11 ), .Q1(\CIC1Cos/d1_11 ), 
    .FCO(\CIC1Cos/n10866 ));
  CIC1Cos_SLICE_1182 \CIC1Cos/SLICE_1182 ( .B1(\CIC1Cos/d1_9 ), 
    .A1(MixerOutCos_9), .B0(\CIC1Cos/d1_8 ), .A0(MixerOutCos_8), 
    .DI1(\CIC1Cos/d1_71_N_417_9 ), .DI0(\CIC1Cos/d1_71_N_417_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10864 ), .F0(\CIC1Cos/d1_71_N_417_8 ), 
    .Q0(\CIC1Cos/d1_8 ), .F1(\CIC1Cos/d1_71_N_417_9 ), .Q1(\CIC1Cos/d1_9 ), 
    .FCO(\CIC1Cos/n10865 ));
  CIC1Cos_SLICE_1183 \CIC1Cos/SLICE_1183 ( .B1(\CIC1Cos/d1_7 ), 
    .A1(MixerOutCos_7), .B0(\CIC1Cos/d1_6 ), .A0(MixerOutCos_6), 
    .DI1(\CIC1Cos/d1_71_N_417_7 ), .DI0(\CIC1Cos/d1_71_N_417_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10863 ), .F0(\CIC1Cos/d1_71_N_417_6 ), 
    .Q0(\CIC1Cos/d1_6 ), .F1(\CIC1Cos/d1_71_N_417_7 ), .Q1(\CIC1Cos/d1_7 ), 
    .FCO(\CIC1Cos/n10864 ));
  CIC1Cos_SLICE_1184 \CIC1Cos/SLICE_1184 ( .B1(\CIC1Cos/d1_5 ), 
    .A1(MixerOutCos_5), .B0(\CIC1Cos/d1_4 ), .A0(MixerOutCos_4), 
    .DI1(\CIC1Cos/d1_71_N_417_5 ), .DI0(\CIC1Cos/d1_71_N_417_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10862 ), .F0(\CIC1Cos/d1_71_N_417_4 ), 
    .Q0(\CIC1Cos/d1_4 ), .F1(\CIC1Cos/d1_71_N_417_5 ), .Q1(\CIC1Cos/d1_5 ), 
    .FCO(\CIC1Cos/n10863 ));
  CIC1Cos_SLICE_1185 \CIC1Cos/SLICE_1185 ( .B1(\CIC1Cos/d1_3 ), 
    .A1(MixerOutCos_3), .B0(\CIC1Cos/d1_2 ), .A0(MixerOutCos_2), 
    .DI1(\CIC1Cos/d1_71_N_417_3 ), .DI0(\CIC1Cos/d1_71_N_417_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n10861 ), .F0(\CIC1Cos/d1_71_N_417_2 ), 
    .Q0(\CIC1Cos/d1_2 ), .F1(\CIC1Cos/d1_71_N_417_3 ), .Q1(\CIC1Cos/d1_3 ), 
    .FCO(\CIC1Cos/n10862 ));
  CIC1Cos_SLICE_1186 \CIC1Cos/SLICE_1186 ( .B1(\CIC1Cos/d1_1 ), 
    .A1(MixerOutCos_1), .B0(\CIC1Cos/d1_0 ), .A0(MixerOutCos_0), 
    .DI1(\CIC1Cos/d1_71_N_417_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d1_71_N_417_1 ), 
    .Q1(\CIC1Cos/d1_1 ), .FCO(\CIC1Cos/n10861 ));
  CIC1Cos_SLICE_1187 \CIC1Cos/SLICE_1187 ( .B1(\CIC1Cos/d_d7_38 ), 
    .A1(\CIC1Cos/d7_38 ), .B0(\CIC1Cos/d_d7_37 ), .A0(\CIC1Cos/d7_37 ), 
    .FCI(\CIC1Cos/n11649 ), .F0(\CIC1Cos/n5898 ), .F1(\CIC1Cos/n5897 ), 
    .FCO(\CIC1Cos/n11650 ));
  CIC1Cos_SLICE_1188 \CIC1Cos/SLICE_1188 ( .B1(\CIC1Cos/d_d7_36 ), 
    .A1(\CIC1Cos/d7_36 ), .F1(\CIC1Cos/n5899 ), .FCO(\CIC1Cos/n11649 ));
  CIC1Cos_SLICE_1189 \CIC1Cos/SLICE_1189 ( .D1(\CIC1Cos/d7_71 ), 
    .C1(\CIC1Cos/n5864 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_71 ), 
    .D0(\CIC1Cos/d7_70 ), .C0(\CIC1Cos/n5865 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_70 ), .DI1(\CIC1Cos/d8_71_N_1602_71 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_70 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11647 ), .F0(\CIC1Cos/d8_71_N_1602_70 ), 
    .Q0(\CIC1Cos/d8_70 ), .F1(\CIC1Cos/d8_71_N_1602_71 ), .Q1(\CIC1Cos/d8_71 ));
  CIC1Cos_SLICE_1190 \CIC1Cos/SLICE_1190 ( .D1(\CIC1Cos/d7_69 ), 
    .C1(\CIC1Cos/n5866 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_69 ), 
    .D0(\CIC1Cos/d7_68 ), .C0(\CIC1Cos/n5867 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_68 ), .DI1(\CIC1Cos/d8_71_N_1602_69 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_68 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11646 ), .F0(\CIC1Cos/d8_71_N_1602_68 ), 
    .Q0(\CIC1Cos/d8_68 ), .F1(\CIC1Cos/d8_71_N_1602_69 ), .Q1(\CIC1Cos/d8_69 ), 
    .FCO(\CIC1Cos/n11647 ));
  CIC1Cos_SLICE_1191 \CIC1Cos/SLICE_1191 ( .D1(\CIC1Cos/d7_67 ), 
    .C1(\CIC1Cos/n5868 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_67 ), 
    .D0(\CIC1Cos/d7_66 ), .C0(\CIC1Cos/n5869 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_66 ), .DI1(\CIC1Cos/d8_71_N_1602_67 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_66 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11645 ), .F0(\CIC1Cos/d8_71_N_1602_66 ), 
    .Q0(\CIC1Cos/d8_66 ), .F1(\CIC1Cos/d8_71_N_1602_67 ), .Q1(\CIC1Cos/d8_67 ), 
    .FCO(\CIC1Cos/n11646 ));
  CIC1Cos_SLICE_1192 \CIC1Cos/SLICE_1192 ( .D1(\CIC1Cos/d7_65 ), 
    .C1(\CIC1Cos/n5870 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_65 ), 
    .D0(\CIC1Cos/d7_64 ), .C0(\CIC1Cos/n5871 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_64 ), .DI1(\CIC1Cos/d8_71_N_1602_65 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_64 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11644 ), .F0(\CIC1Cos/d8_71_N_1602_64 ), 
    .Q0(\CIC1Cos/d8_64 ), .F1(\CIC1Cos/d8_71_N_1602_65 ), .Q1(\CIC1Cos/d8_65 ), 
    .FCO(\CIC1Cos/n11645 ));
  CIC1Cos_SLICE_1193 \CIC1Cos/SLICE_1193 ( .D1(\CIC1Cos/d7_63 ), 
    .C1(\CIC1Cos/n5872 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_63 ), 
    .D0(\CIC1Cos/d7_62 ), .C0(\CIC1Cos/n5873 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_62 ), .DI1(\CIC1Cos/d8_71_N_1602_63 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_62 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11643 ), .F0(\CIC1Cos/d8_71_N_1602_62 ), 
    .Q0(\CIC1Cos/d8_62 ), .F1(\CIC1Cos/d8_71_N_1602_63 ), .Q1(\CIC1Cos/d8_63 ), 
    .FCO(\CIC1Cos/n11644 ));
  CIC1Cos_SLICE_1194 \CIC1Cos/SLICE_1194 ( .D1(\CIC1Cos/d7_61 ), 
    .C1(\CIC1Cos/n5874 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_61 ), 
    .D0(\CIC1Cos/d7_60 ), .C0(\CIC1Cos/n5875 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_60 ), .DI1(\CIC1Cos/d8_71_N_1602_61 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_60 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11642 ), .F0(\CIC1Cos/d8_71_N_1602_60 ), 
    .Q0(\CIC1Cos/d8_60 ), .F1(\CIC1Cos/d8_71_N_1602_61 ), .Q1(\CIC1Cos/d8_61 ), 
    .FCO(\CIC1Cos/n11643 ));
  CIC1Cos_SLICE_1195 \CIC1Cos/SLICE_1195 ( .D1(\CIC1Cos/d7_59 ), 
    .C1(\CIC1Cos/n5876 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_59 ), 
    .D0(\CIC1Cos/d7_58 ), .C0(\CIC1Cos/n5877 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_58 ), .DI1(\CIC1Cos/d8_71_N_1602_59 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_58 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11641 ), .F0(\CIC1Cos/d8_71_N_1602_58 ), 
    .Q0(\CIC1Cos/d8_58 ), .F1(\CIC1Cos/d8_71_N_1602_59 ), .Q1(\CIC1Cos/d8_59 ), 
    .FCO(\CIC1Cos/n11642 ));
  CIC1Cos_SLICE_1196 \CIC1Cos/SLICE_1196 ( .D1(\CIC1Cos/d7_57 ), 
    .C1(\CIC1Cos/n5878 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_57 ), 
    .D0(\CIC1Cos/d7_56 ), .C0(\CIC1Cos/n5879 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_56 ), .DI1(\CIC1Cos/d8_71_N_1602_57 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_56 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11640 ), .F0(\CIC1Cos/d8_71_N_1602_56 ), 
    .Q0(\CIC1Cos/d8_56 ), .F1(\CIC1Cos/d8_71_N_1602_57 ), .Q1(\CIC1Cos/d8_57 ), 
    .FCO(\CIC1Cos/n11641 ));
  CIC1Cos_SLICE_1197 \CIC1Cos/SLICE_1197 ( .D1(\CIC1Cos/d7_55 ), 
    .C1(\CIC1Cos/n5880 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_55 ), 
    .D0(\CIC1Cos/d7_54 ), .C0(\CIC1Cos/n5881 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_54 ), .DI1(\CIC1Cos/d8_71_N_1602_55 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_54 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11639 ), .F0(\CIC1Cos/d8_71_N_1602_54 ), 
    .Q0(\CIC1Cos/d8_54 ), .F1(\CIC1Cos/d8_71_N_1602_55 ), .Q1(\CIC1Cos/d8_55 ), 
    .FCO(\CIC1Cos/n11640 ));
  CIC1Cos_SLICE_1198 \CIC1Cos/SLICE_1198 ( .D1(\CIC1Cos/d7_53 ), 
    .C1(\CIC1Cos/n5882 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_53 ), 
    .D0(\CIC1Cos/d7_52 ), .C0(\CIC1Cos/n5883 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_52 ), .DI1(\CIC1Cos/d8_71_N_1602_53 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_52 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11638 ), .F0(\CIC1Cos/d8_71_N_1602_52 ), 
    .Q0(\CIC1Cos/d8_52 ), .F1(\CIC1Cos/d8_71_N_1602_53 ), .Q1(\CIC1Cos/d8_53 ), 
    .FCO(\CIC1Cos/n11639 ));
  CIC1Cos_SLICE_1199 \CIC1Cos/SLICE_1199 ( .D1(\CIC1Cos/d7_51 ), 
    .C1(\CIC1Cos/n5884 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_51 ), 
    .D0(\CIC1Cos/d7_50 ), .C0(\CIC1Cos/n5885 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_50 ), .DI1(\CIC1Cos/d8_71_N_1602_51 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_50 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11637 ), .F0(\CIC1Cos/d8_71_N_1602_50 ), 
    .Q0(\CIC1Cos/d8_50 ), .F1(\CIC1Cos/d8_71_N_1602_51 ), .Q1(\CIC1Cos/d8_51 ), 
    .FCO(\CIC1Cos/n11638 ));
  CIC1Cos_SLICE_1200 \CIC1Cos/SLICE_1200 ( .D1(\CIC1Cos/d7_49 ), 
    .C1(\CIC1Cos/n5886 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_49 ), 
    .D0(\CIC1Cos/d7_48 ), .C0(\CIC1Cos/n5887 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_48 ), .DI1(\CIC1Cos/d8_71_N_1602_49 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_48 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11636 ), .F0(\CIC1Cos/d8_71_N_1602_48 ), 
    .Q0(\CIC1Cos/d8_48 ), .F1(\CIC1Cos/d8_71_N_1602_49 ), .Q1(\CIC1Cos/d8_49 ), 
    .FCO(\CIC1Cos/n11637 ));
  CIC1Cos_SLICE_1201 \CIC1Cos/SLICE_1201 ( .D1(\CIC1Cos/d7_47 ), 
    .C1(\CIC1Cos/n5888 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_47 ), 
    .D0(\CIC1Cos/d7_46 ), .C0(\CIC1Cos/n5889 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_46 ), .DI1(\CIC1Cos/d8_71_N_1602_47 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_46 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11635 ), .F0(\CIC1Cos/d8_71_N_1602_46 ), 
    .Q0(\CIC1Cos/d8_46 ), .F1(\CIC1Cos/d8_71_N_1602_47 ), .Q1(\CIC1Cos/d8_47 ), 
    .FCO(\CIC1Cos/n11636 ));
  CIC1Cos_SLICE_1202 \CIC1Cos/SLICE_1202 ( .D1(\CIC1Cos/d7_45 ), 
    .C1(\CIC1Cos/n5890 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_45 ), 
    .D0(\CIC1Cos/d7_44 ), .C0(\CIC1Cos/n5891 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_44 ), .DI1(\CIC1Cos/d8_71_N_1602_45 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_44 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11634 ), .F0(\CIC1Cos/d8_71_N_1602_44 ), 
    .Q0(\CIC1Cos/d8_44 ), .F1(\CIC1Cos/d8_71_N_1602_45 ), .Q1(\CIC1Cos/d8_45 ), 
    .FCO(\CIC1Cos/n11635 ));
  CIC1Cos_SLICE_1203 \CIC1Cos/SLICE_1203 ( .D1(\CIC1Cos/d7_43 ), 
    .C1(\CIC1Cos/n5892 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_43 ), 
    .D0(\CIC1Cos/d7_42 ), .C0(\CIC1Cos/n5893 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_42 ), .DI1(\CIC1Cos/d8_71_N_1602_43 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_42 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11633 ), .F0(\CIC1Cos/d8_71_N_1602_42 ), 
    .Q0(\CIC1Cos/d8_42 ), .F1(\CIC1Cos/d8_71_N_1602_43 ), .Q1(\CIC1Cos/d8_43 ), 
    .FCO(\CIC1Cos/n11634 ));
  CIC1Cos_SLICE_1204 \CIC1Cos/SLICE_1204 ( .D1(\CIC1Cos/d7_41 ), 
    .C1(\CIC1Cos/n5894 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_41 ), 
    .D0(\CIC1Cos/d7_40 ), .C0(\CIC1Cos/n5895 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_40 ), .DI1(\CIC1Cos/d8_71_N_1602_41 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_40 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11632 ), .F0(\CIC1Cos/d8_71_N_1602_40 ), 
    .Q0(\CIC1Cos/d8_40 ), .F1(\CIC1Cos/d8_71_N_1602_41 ), .Q1(\CIC1Cos/d8_41 ), 
    .FCO(\CIC1Cos/n11633 ));
  CIC1Cos_SLICE_1205 \CIC1Cos/SLICE_1205 ( .D1(\CIC1Cos/d7_39 ), 
    .C1(\CIC1Cos/n5896 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_39 ), 
    .D0(\CIC1Cos/d7_38 ), .C0(\CIC1Cos/n5897 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_38 ), .DI1(\CIC1Cos/d8_71_N_1602_39 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_38 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11631 ), .F0(\CIC1Cos/d8_71_N_1602_38 ), 
    .Q0(\CIC1Cos/d8_38 ), .F1(\CIC1Cos/d8_71_N_1602_39 ), .Q1(\CIC1Cos/d8_39 ), 
    .FCO(\CIC1Cos/n11632 ));
  CIC1Cos_SLICE_1206 \CIC1Cos/SLICE_1206 ( .D1(\CIC1Cos/d7_37 ), 
    .C1(\CIC1Cos/n5898 ), .B1(\CIC1Cos/n5862 ), .A1(\CIC1Cos/d_d7_37 ), 
    .D0(\CIC1Cos/d7_36 ), .C0(\CIC1Cos/n5899 ), .B0(\CIC1Cos/n5862 ), 
    .A0(\CIC1Cos/d_d7_36 ), .DI1(\CIC1Cos/d8_71_N_1602_37 ), 
    .DI0(\CIC1Cos/d8_71_N_1602_36 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11630 ), .F0(\CIC1Cos/d8_71_N_1602_36 ), 
    .Q0(\CIC1Cos/d8_36 ), .F1(\CIC1Cos/d8_71_N_1602_37 ), .Q1(\CIC1Cos/d8_37 ), 
    .FCO(\CIC1Cos/n11631 ));
  CIC1Cos_SLICE_1207 \CIC1Cos/SLICE_1207 ( .A1(\CIC1Cos/n5862 ), 
    .FCO(\CIC1Cos/n11630 ));
  CIC1Cos_SLICE_1208 \CIC1Cos/SLICE_1208 ( .B0(\CIC1Cos/d_d6_71 ), 
    .A0(\CIC1Cos/d6_71 ), .FCI(\CIC1Cos/n11488 ), .F0(\CIC1Cos/n6016 ));
  CIC1Cos_SLICE_1209 \CIC1Cos/SLICE_1209 ( .B1(\CIC1Cos/d_d6_70 ), 
    .A1(\CIC1Cos/d6_70 ), .B0(\CIC1Cos/d_d6_69 ), .A0(\CIC1Cos/d6_69 ), 
    .FCI(\CIC1Cos/n11487 ), .F0(\CIC1Cos/n6018 ), .F1(\CIC1Cos/n6017 ), 
    .FCO(\CIC1Cos/n11488 ));
  CIC1Cos_SLICE_1210 \CIC1Cos/SLICE_1210 ( .B1(\CIC1Cos/d_d6_68 ), 
    .A1(\CIC1Cos/d6_68 ), .B0(\CIC1Cos/d_d6_67 ), .A0(\CIC1Cos/d6_67 ), 
    .FCI(\CIC1Cos/n11486 ), .F0(\CIC1Cos/n6020 ), .F1(\CIC1Cos/n6019 ), 
    .FCO(\CIC1Cos/n11487 ));
  CIC1Cos_SLICE_1211 \CIC1Cos/SLICE_1211 ( .B1(\CIC1Cos/d_d6_66 ), 
    .A1(\CIC1Cos/d6_66 ), .B0(\CIC1Cos/d_d6_65 ), .A0(\CIC1Cos/d6_65 ), 
    .FCI(\CIC1Cos/n11485 ), .F0(\CIC1Cos/n6022 ), .F1(\CIC1Cos/n6021 ), 
    .FCO(\CIC1Cos/n11486 ));
  CIC1Cos_SLICE_1212 \CIC1Cos/SLICE_1212 ( .B1(\CIC1Cos/d_d6_64 ), 
    .A1(\CIC1Cos/d6_64 ), .B0(\CIC1Cos/d_d6_63 ), .A0(\CIC1Cos/d6_63 ), 
    .FCI(\CIC1Cos/n11484 ), .F0(\CIC1Cos/n6024 ), .F1(\CIC1Cos/n6023 ), 
    .FCO(\CIC1Cos/n11485 ));
  CIC1Cos_SLICE_1213 \CIC1Cos/SLICE_1213 ( .B1(\CIC1Cos/d_d6_62 ), 
    .A1(\CIC1Cos/d6_62 ), .B0(\CIC1Cos/d_d6_61 ), .A0(\CIC1Cos/d6_61 ), 
    .FCI(\CIC1Cos/n11483 ), .F0(\CIC1Cos/n6026 ), .F1(\CIC1Cos/n6025 ), 
    .FCO(\CIC1Cos/n11484 ));
  CIC1Cos_SLICE_1214 \CIC1Cos/SLICE_1214 ( .B1(\CIC1Cos/d_d6_60 ), 
    .A1(\CIC1Cos/d6_60 ), .B0(\CIC1Cos/d_d6_59 ), .A0(\CIC1Cos/d6_59 ), 
    .FCI(\CIC1Cos/n11482 ), .F0(\CIC1Cos/n6028 ), .F1(\CIC1Cos/n6027 ), 
    .FCO(\CIC1Cos/n11483 ));
  CIC1Cos_SLICE_1215 \CIC1Cos/SLICE_1215 ( .B1(\CIC1Cos/d_d6_58 ), 
    .A1(\CIC1Cos/d6_58 ), .B0(\CIC1Cos/d_d6_57 ), .A0(\CIC1Cos/d6_57 ), 
    .FCI(\CIC1Cos/n11481 ), .F0(\CIC1Cos/n6030 ), .F1(\CIC1Cos/n6029 ), 
    .FCO(\CIC1Cos/n11482 ));
  CIC1Cos_SLICE_1216 \CIC1Cos/SLICE_1216 ( .B1(\CIC1Cos/d_d6_56 ), 
    .A1(\CIC1Cos/d6_56 ), .B0(\CIC1Cos/d_d6_55 ), .A0(\CIC1Cos/d6_55 ), 
    .FCI(\CIC1Cos/n11480 ), .F0(\CIC1Cos/n6032 ), .F1(\CIC1Cos/n6031 ), 
    .FCO(\CIC1Cos/n11481 ));
  CIC1Cos_SLICE_1217 \CIC1Cos/SLICE_1217 ( .B1(\CIC1Cos/d_d6_54 ), 
    .A1(\CIC1Cos/d6_54 ), .B0(\CIC1Cos/d_d6_53 ), .A0(\CIC1Cos/d6_53 ), 
    .FCI(\CIC1Cos/n11479 ), .F0(\CIC1Cos/n6034 ), .F1(\CIC1Cos/n6033 ), 
    .FCO(\CIC1Cos/n11480 ));
  CIC1Cos_SLICE_1218 \CIC1Cos/SLICE_1218 ( .B1(\CIC1Cos/d_d6_52 ), 
    .A1(\CIC1Cos/d6_52 ), .B0(\CIC1Cos/d_d6_51 ), .A0(\CIC1Cos/d6_51 ), 
    .FCI(\CIC1Cos/n11478 ), .F0(\CIC1Cos/n6036 ), .F1(\CIC1Cos/n6035 ), 
    .FCO(\CIC1Cos/n11479 ));
  CIC1Cos_SLICE_1219 \CIC1Cos/SLICE_1219 ( .B1(\CIC1Cos/d_d6_50 ), 
    .A1(\CIC1Cos/d6_50 ), .B0(\CIC1Cos/d_d6_49 ), .A0(\CIC1Cos/d6_49 ), 
    .FCI(\CIC1Cos/n11477 ), .F0(\CIC1Cos/n6038 ), .F1(\CIC1Cos/n6037 ), 
    .FCO(\CIC1Cos/n11478 ));
  CIC1Cos_SLICE_1220 \CIC1Cos/SLICE_1220 ( .B1(\CIC1Cos/d_d6_48 ), 
    .A1(\CIC1Cos/d6_48 ), .B0(\CIC1Cos/d_d6_47 ), .A0(\CIC1Cos/d6_47 ), 
    .FCI(\CIC1Cos/n11476 ), .F0(\CIC1Cos/n6040 ), .F1(\CIC1Cos/n6039 ), 
    .FCO(\CIC1Cos/n11477 ));
  CIC1Cos_SLICE_1221 \CIC1Cos/SLICE_1221 ( .B1(\CIC1Cos/d_d6_46 ), 
    .A1(\CIC1Cos/d6_46 ), .B0(\CIC1Cos/d_d6_45 ), .A0(\CIC1Cos/d6_45 ), 
    .FCI(\CIC1Cos/n11475 ), .F0(\CIC1Cos/n6042 ), .F1(\CIC1Cos/n6041 ), 
    .FCO(\CIC1Cos/n11476 ));
  CIC1Cos_SLICE_1222 \CIC1Cos/SLICE_1222 ( .B1(\CIC1Cos/d_d6_44 ), 
    .A1(\CIC1Cos/d6_44 ), .B0(\CIC1Cos/d_d6_43 ), .A0(\CIC1Cos/d6_43 ), 
    .FCI(\CIC1Cos/n11474 ), .F0(\CIC1Cos/n6044 ), .F1(\CIC1Cos/n6043 ), 
    .FCO(\CIC1Cos/n11475 ));
  CIC1Cos_SLICE_1223 \CIC1Cos/SLICE_1223 ( .B1(\CIC1Cos/d_d6_42 ), 
    .A1(\CIC1Cos/d6_42 ), .B0(\CIC1Cos/d_d6_41 ), .A0(\CIC1Cos/d6_41 ), 
    .FCI(\CIC1Cos/n11473 ), .F0(\CIC1Cos/n6046 ), .F1(\CIC1Cos/n6045 ), 
    .FCO(\CIC1Cos/n11474 ));
  CIC1Cos_SLICE_1224 \CIC1Cos/SLICE_1224 ( .B1(\CIC1Cos/d_d6_40 ), 
    .A1(\CIC1Cos/d6_40 ), .B0(\CIC1Cos/d_d6_39 ), .A0(\CIC1Cos/d6_39 ), 
    .FCI(\CIC1Cos/n11472 ), .F0(\CIC1Cos/n6048 ), .F1(\CIC1Cos/n6047 ), 
    .FCO(\CIC1Cos/n11473 ));
  CIC1Cos_SLICE_1225 \CIC1Cos/SLICE_1225 ( .B1(\CIC1Cos/d_d6_38 ), 
    .A1(\CIC1Cos/d6_38 ), .B0(\CIC1Cos/d_d6_37 ), .A0(\CIC1Cos/d6_37 ), 
    .FCI(\CIC1Cos/n11471 ), .F0(\CIC1Cos/n6050 ), .F1(\CIC1Cos/n6049 ), 
    .FCO(\CIC1Cos/n11472 ));
  CIC1Cos_SLICE_1226 \CIC1Cos/SLICE_1226 ( .B1(\CIC1Cos/d_d6_36 ), 
    .A1(\CIC1Cos/d6_36 ), .F1(\CIC1Cos/n6051 ), .FCO(\CIC1Cos/n11471 ));
  CIC1Cos_SLICE_1227 \CIC1Cos/SLICE_1227 ( .D1(\CIC1Cos/d6_71 ), 
    .C1(\CIC1Cos/n6016 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_71 ), 
    .D0(\CIC1Cos/d6_70 ), .C0(\CIC1Cos/n6017 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_70 ), .DI1(\CIC1Cos/d7_71_N_1530_71 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_70 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11469 ), .F0(\CIC1Cos/d7_71_N_1530_70 ), 
    .Q0(\CIC1Cos/d7_70 ), .F1(\CIC1Cos/d7_71_N_1530_71 ), .Q1(\CIC1Cos/d7_71 ));
  CIC1Cos_SLICE_1228 \CIC1Cos/SLICE_1228 ( .D1(\CIC1Cos/d6_69 ), 
    .C1(\CIC1Cos/n6018 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_69 ), 
    .D0(\CIC1Cos/d6_68 ), .C0(\CIC1Cos/n6019 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_68 ), .DI1(\CIC1Cos/d7_71_N_1530_69 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_68 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11468 ), .F0(\CIC1Cos/d7_71_N_1530_68 ), 
    .Q0(\CIC1Cos/d7_68 ), .F1(\CIC1Cos/d7_71_N_1530_69 ), .Q1(\CIC1Cos/d7_69 ), 
    .FCO(\CIC1Cos/n11469 ));
  CIC1Cos_SLICE_1229 \CIC1Cos/SLICE_1229 ( .D1(\CIC1Cos/d6_67 ), 
    .C1(\CIC1Cos/n6020 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_67 ), 
    .D0(\CIC1Cos/d6_66 ), .C0(\CIC1Cos/n6021 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_66 ), .DI1(\CIC1Cos/d7_71_N_1530_67 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_66 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11467 ), .F0(\CIC1Cos/d7_71_N_1530_66 ), 
    .Q0(\CIC1Cos/d7_66 ), .F1(\CIC1Cos/d7_71_N_1530_67 ), .Q1(\CIC1Cos/d7_67 ), 
    .FCO(\CIC1Cos/n11468 ));
  CIC1Cos_SLICE_1230 \CIC1Cos/SLICE_1230 ( .D1(\CIC1Cos/d6_65 ), 
    .C1(\CIC1Cos/n6022 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_65 ), 
    .D0(\CIC1Cos/d6_64 ), .C0(\CIC1Cos/n6023 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_64 ), .DI1(\CIC1Cos/d7_71_N_1530_65 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_64 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11466 ), .F0(\CIC1Cos/d7_71_N_1530_64 ), 
    .Q0(\CIC1Cos/d7_64 ), .F1(\CIC1Cos/d7_71_N_1530_65 ), .Q1(\CIC1Cos/d7_65 ), 
    .FCO(\CIC1Cos/n11467 ));
  CIC1Cos_SLICE_1231 \CIC1Cos/SLICE_1231 ( .D1(\CIC1Cos/d6_63 ), 
    .C1(\CIC1Cos/n6024 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_63 ), 
    .D0(\CIC1Cos/d6_62 ), .C0(\CIC1Cos/n6025 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_62 ), .DI1(\CIC1Cos/d7_71_N_1530_63 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_62 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11465 ), .F0(\CIC1Cos/d7_71_N_1530_62 ), 
    .Q0(\CIC1Cos/d7_62 ), .F1(\CIC1Cos/d7_71_N_1530_63 ), .Q1(\CIC1Cos/d7_63 ), 
    .FCO(\CIC1Cos/n11466 ));
  CIC1Cos_SLICE_1232 \CIC1Cos/SLICE_1232 ( .D1(\CIC1Cos/d6_61 ), 
    .C1(\CIC1Cos/n6026 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_61 ), 
    .D0(\CIC1Cos/d6_60 ), .C0(\CIC1Cos/n6027 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_60 ), .DI1(\CIC1Cos/d7_71_N_1530_61 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_60 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11464 ), .F0(\CIC1Cos/d7_71_N_1530_60 ), 
    .Q0(\CIC1Cos/d7_60 ), .F1(\CIC1Cos/d7_71_N_1530_61 ), .Q1(\CIC1Cos/d7_61 ), 
    .FCO(\CIC1Cos/n11465 ));
  CIC1Cos_SLICE_1233 \CIC1Cos/SLICE_1233 ( .D1(\CIC1Cos/d6_59 ), 
    .C1(\CIC1Cos/n6028 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_59 ), 
    .D0(\CIC1Cos/d6_58 ), .C0(\CIC1Cos/n6029 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_58 ), .DI1(\CIC1Cos/d7_71_N_1530_59 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_58 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11463 ), .F0(\CIC1Cos/d7_71_N_1530_58 ), 
    .Q0(\CIC1Cos/d7_58 ), .F1(\CIC1Cos/d7_71_N_1530_59 ), .Q1(\CIC1Cos/d7_59 ), 
    .FCO(\CIC1Cos/n11464 ));
  CIC1Cos_SLICE_1234 \CIC1Cos/SLICE_1234 ( .D1(\CIC1Cos/d6_57 ), 
    .C1(\CIC1Cos/n6030 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_57 ), 
    .D0(\CIC1Cos/d6_56 ), .C0(\CIC1Cos/n6031 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_56 ), .DI1(\CIC1Cos/d7_71_N_1530_57 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_56 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11462 ), .F0(\CIC1Cos/d7_71_N_1530_56 ), 
    .Q0(\CIC1Cos/d7_56 ), .F1(\CIC1Cos/d7_71_N_1530_57 ), .Q1(\CIC1Cos/d7_57 ), 
    .FCO(\CIC1Cos/n11463 ));
  CIC1Cos_SLICE_1235 \CIC1Cos/SLICE_1235 ( .D1(\CIC1Cos/d6_55 ), 
    .C1(\CIC1Cos/n6032 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_55 ), 
    .D0(\CIC1Cos/d6_54 ), .C0(\CIC1Cos/n6033 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_54 ), .DI1(\CIC1Cos/d7_71_N_1530_55 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_54 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11461 ), .F0(\CIC1Cos/d7_71_N_1530_54 ), 
    .Q0(\CIC1Cos/d7_54 ), .F1(\CIC1Cos/d7_71_N_1530_55 ), .Q1(\CIC1Cos/d7_55 ), 
    .FCO(\CIC1Cos/n11462 ));
  CIC1Cos_SLICE_1236 \CIC1Cos/SLICE_1236 ( .D1(\CIC1Cos/d6_53 ), 
    .C1(\CIC1Cos/n6034 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_53 ), 
    .D0(\CIC1Cos/d6_52 ), .C0(\CIC1Cos/n6035 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_52 ), .DI1(\CIC1Cos/d7_71_N_1530_53 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_52 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11460 ), .F0(\CIC1Cos/d7_71_N_1530_52 ), 
    .Q0(\CIC1Cos/d7_52 ), .F1(\CIC1Cos/d7_71_N_1530_53 ), .Q1(\CIC1Cos/d7_53 ), 
    .FCO(\CIC1Cos/n11461 ));
  CIC1Cos_SLICE_1237 \CIC1Cos/SLICE_1237 ( .D1(\CIC1Cos/d6_51 ), 
    .C1(\CIC1Cos/n6036 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_51 ), 
    .D0(\CIC1Cos/d6_50 ), .C0(\CIC1Cos/n6037 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_50 ), .DI1(\CIC1Cos/d7_71_N_1530_51 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_50 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11459 ), .F0(\CIC1Cos/d7_71_N_1530_50 ), 
    .Q0(\CIC1Cos/d7_50 ), .F1(\CIC1Cos/d7_71_N_1530_51 ), .Q1(\CIC1Cos/d7_51 ), 
    .FCO(\CIC1Cos/n11460 ));
  CIC1Cos_SLICE_1238 \CIC1Cos/SLICE_1238 ( .D1(\CIC1Cos/d6_49 ), 
    .C1(\CIC1Cos/n6038 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_49 ), 
    .D0(\CIC1Cos/d6_48 ), .C0(\CIC1Cos/n6039 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_48 ), .DI1(\CIC1Cos/d7_71_N_1530_49 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_48 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11458 ), .F0(\CIC1Cos/d7_71_N_1530_48 ), 
    .Q0(\CIC1Cos/d7_48 ), .F1(\CIC1Cos/d7_71_N_1530_49 ), .Q1(\CIC1Cos/d7_49 ), 
    .FCO(\CIC1Cos/n11459 ));
  CIC1Cos_SLICE_1239 \CIC1Cos/SLICE_1239 ( .D1(\CIC1Cos/d6_47 ), 
    .C1(\CIC1Cos/n6040 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_47 ), 
    .D0(\CIC1Cos/d6_46 ), .C0(\CIC1Cos/n6041 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_46 ), .DI1(\CIC1Cos/d7_71_N_1530_47 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_46 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11457 ), .F0(\CIC1Cos/d7_71_N_1530_46 ), 
    .Q0(\CIC1Cos/d7_46 ), .F1(\CIC1Cos/d7_71_N_1530_47 ), .Q1(\CIC1Cos/d7_47 ), 
    .FCO(\CIC1Cos/n11458 ));
  CIC1Cos_SLICE_1240 \CIC1Cos/SLICE_1240 ( .D1(\CIC1Cos/d6_45 ), 
    .C1(\CIC1Cos/n6042 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_45 ), 
    .D0(\CIC1Cos/d6_44 ), .C0(\CIC1Cos/n6043 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_44 ), .DI1(\CIC1Cos/d7_71_N_1530_45 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_44 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11456 ), .F0(\CIC1Cos/d7_71_N_1530_44 ), 
    .Q0(\CIC1Cos/d7_44 ), .F1(\CIC1Cos/d7_71_N_1530_45 ), .Q1(\CIC1Cos/d7_45 ), 
    .FCO(\CIC1Cos/n11457 ));
  CIC1Cos_SLICE_1241 \CIC1Cos/SLICE_1241 ( .D1(\CIC1Cos/d6_43 ), 
    .C1(\CIC1Cos/n6044 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_43 ), 
    .D0(\CIC1Cos/d6_42 ), .C0(\CIC1Cos/n6045 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_42 ), .DI1(\CIC1Cos/d7_71_N_1530_43 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_42 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11455 ), .F0(\CIC1Cos/d7_71_N_1530_42 ), 
    .Q0(\CIC1Cos/d7_42 ), .F1(\CIC1Cos/d7_71_N_1530_43 ), .Q1(\CIC1Cos/d7_43 ), 
    .FCO(\CIC1Cos/n11456 ));
  CIC1Cos_SLICE_1242 \CIC1Cos/SLICE_1242 ( .D1(\CIC1Cos/d6_41 ), 
    .C1(\CIC1Cos/n6046 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_41 ), 
    .D0(\CIC1Cos/d6_40 ), .C0(\CIC1Cos/n6047 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_40 ), .DI1(\CIC1Cos/d7_71_N_1530_41 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_40 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11454 ), .F0(\CIC1Cos/d7_71_N_1530_40 ), 
    .Q0(\CIC1Cos/d7_40 ), .F1(\CIC1Cos/d7_71_N_1530_41 ), .Q1(\CIC1Cos/d7_41 ), 
    .FCO(\CIC1Cos/n11455 ));
  CIC1Cos_SLICE_1243 \CIC1Cos/SLICE_1243 ( .D1(\CIC1Cos/d6_39 ), 
    .C1(\CIC1Cos/n6048 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_39 ), 
    .D0(\CIC1Cos/d6_38 ), .C0(\CIC1Cos/n6049 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_38 ), .DI1(\CIC1Cos/d7_71_N_1530_39 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_38 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11453 ), .F0(\CIC1Cos/d7_71_N_1530_38 ), 
    .Q0(\CIC1Cos/d7_38 ), .F1(\CIC1Cos/d7_71_N_1530_39 ), .Q1(\CIC1Cos/d7_39 ), 
    .FCO(\CIC1Cos/n11454 ));
  CIC1Cos_SLICE_1244 \CIC1Cos/SLICE_1244 ( .D1(\CIC1Cos/d6_37 ), 
    .C1(\CIC1Cos/n6050 ), .B1(\CIC1Cos/n6014 ), .A1(\CIC1Cos/d_d6_37 ), 
    .D0(\CIC1Cos/d6_36 ), .C0(\CIC1Cos/n6051 ), .B0(\CIC1Cos/n6014 ), 
    .A0(\CIC1Cos/d_d6_36 ), .DI1(\CIC1Cos/d7_71_N_1530_37 ), 
    .DI0(\CIC1Cos/d7_71_N_1530_36 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11452 ), .F0(\CIC1Cos/d7_71_N_1530_36 ), 
    .Q0(\CIC1Cos/d7_36 ), .F1(\CIC1Cos/d7_71_N_1530_37 ), .Q1(\CIC1Cos/d7_37 ), 
    .FCO(\CIC1Cos/n11453 ));
  CIC1Cos_SLICE_1245 \CIC1Cos/SLICE_1245 ( .A1(\CIC1Cos/n6014 ), 
    .FCO(\CIC1Cos/n11452 ));
  CIC1Cos_SLICE_1246 \CIC1Cos/SLICE_1246 ( .B0(\CIC1Cos/d_d_tmp_71 ), 
    .A0(\CIC1Cos/d_tmp_71 ), .FCI(\CIC1Cos/n11448 ), .F0(\CIC1Cos/n6168 ));
  CIC1Cos_SLICE_1247 \CIC1Cos/SLICE_1247 ( .B1(\CIC1Cos/d_d_tmp_70 ), 
    .A1(\CIC1Cos/d_tmp_70 ), .B0(\CIC1Cos/d_d_tmp_69 ), 
    .A0(\CIC1Cos/d_tmp_69 ), .FCI(\CIC1Cos/n11447 ), .F0(\CIC1Cos/n6170 ), 
    .F1(\CIC1Cos/n6169 ), .FCO(\CIC1Cos/n11448 ));
  CIC1Cos_SLICE_1248 \CIC1Cos/SLICE_1248 ( .B1(\CIC1Cos/d_d_tmp_68 ), 
    .A1(\CIC1Cos/d_tmp_68 ), .B0(\CIC1Cos/d_d_tmp_67 ), 
    .A0(\CIC1Cos/d_tmp_67 ), .FCI(\CIC1Cos/n11446 ), .F0(\CIC1Cos/n6172 ), 
    .F1(\CIC1Cos/n6171 ), .FCO(\CIC1Cos/n11447 ));
  CIC1Cos_SLICE_1249 \CIC1Cos/SLICE_1249 ( .B1(\CIC1Cos/d_d_tmp_66 ), 
    .A1(\CIC1Cos/d_tmp_66 ), .B0(\CIC1Cos/d_d_tmp_65 ), 
    .A0(\CIC1Cos/d_tmp_65 ), .FCI(\CIC1Cos/n11445 ), .F0(\CIC1Cos/n6174 ), 
    .F1(\CIC1Cos/n6173 ), .FCO(\CIC1Cos/n11446 ));
  CIC1Cos_SLICE_1250 \CIC1Cos/SLICE_1250 ( .B1(\CIC1Cos/d_d_tmp_64 ), 
    .A1(\CIC1Cos/d_tmp_64 ), .B0(\CIC1Cos/d_d_tmp_63 ), 
    .A0(\CIC1Cos/d_tmp_63 ), .FCI(\CIC1Cos/n11444 ), .F0(\CIC1Cos/n6176 ), 
    .F1(\CIC1Cos/n6175 ), .FCO(\CIC1Cos/n11445 ));
  CIC1Cos_SLICE_1251 \CIC1Cos/SLICE_1251 ( .B1(\CIC1Cos/d_d_tmp_62 ), 
    .A1(\CIC1Cos/d_tmp_62 ), .B0(\CIC1Cos/d_d_tmp_61 ), 
    .A0(\CIC1Cos/d_tmp_61 ), .FCI(\CIC1Cos/n11443 ), .F0(\CIC1Cos/n6178 ), 
    .F1(\CIC1Cos/n6177 ), .FCO(\CIC1Cos/n11444 ));
  CIC1Cos_SLICE_1252 \CIC1Cos/SLICE_1252 ( .B1(\CIC1Cos/d_d_tmp_60 ), 
    .A1(\CIC1Cos/d_tmp_60 ), .B0(\CIC1Cos/d_d_tmp_59 ), 
    .A0(\CIC1Cos/d_tmp_59 ), .FCI(\CIC1Cos/n11442 ), .F0(\CIC1Cos/n6180 ), 
    .F1(\CIC1Cos/n6179 ), .FCO(\CIC1Cos/n11443 ));
  CIC1Cos_SLICE_1253 \CIC1Cos/SLICE_1253 ( .B1(\CIC1Cos/d_d_tmp_58 ), 
    .A1(\CIC1Cos/d_tmp_58 ), .B0(\CIC1Cos/d_d_tmp_57 ), 
    .A0(\CIC1Cos/d_tmp_57 ), .FCI(\CIC1Cos/n11441 ), .F0(\CIC1Cos/n6182 ), 
    .F1(\CIC1Cos/n6181 ), .FCO(\CIC1Cos/n11442 ));
  CIC1Cos_SLICE_1254 \CIC1Cos/SLICE_1254 ( .B1(\CIC1Cos/d_d_tmp_56 ), 
    .A1(\CIC1Cos/d_tmp_56 ), .B0(\CIC1Cos/d_d_tmp_55 ), 
    .A0(\CIC1Cos/d_tmp_55 ), .FCI(\CIC1Cos/n11440 ), .F0(\CIC1Cos/n6184 ), 
    .F1(\CIC1Cos/n6183 ), .FCO(\CIC1Cos/n11441 ));
  CIC1Cos_SLICE_1255 \CIC1Cos/SLICE_1255 ( .B1(\CIC1Cos/d_d_tmp_54 ), 
    .A1(\CIC1Cos/d_tmp_54 ), .B0(\CIC1Cos/d_d_tmp_53 ), 
    .A0(\CIC1Cos/d_tmp_53 ), .FCI(\CIC1Cos/n11439 ), .F0(\CIC1Cos/n6186 ), 
    .F1(\CIC1Cos/n6185 ), .FCO(\CIC1Cos/n11440 ));
  CIC1Cos_SLICE_1256 \CIC1Cos/SLICE_1256 ( .B1(\CIC1Cos/d_d_tmp_52 ), 
    .A1(\CIC1Cos/d_tmp_52 ), .B0(\CIC1Cos/d_d_tmp_51 ), 
    .A0(\CIC1Cos/d_tmp_51 ), .FCI(\CIC1Cos/n11438 ), .F0(\CIC1Cos/n6188 ), 
    .F1(\CIC1Cos/n6187 ), .FCO(\CIC1Cos/n11439 ));
  CIC1Cos_SLICE_1257 \CIC1Cos/SLICE_1257 ( .B1(\CIC1Cos/d_d_tmp_50 ), 
    .A1(\CIC1Cos/d_tmp_50 ), .B0(\CIC1Cos/d_d_tmp_49 ), 
    .A0(\CIC1Cos/d_tmp_49 ), .FCI(\CIC1Cos/n11437 ), .F0(\CIC1Cos/n6190 ), 
    .F1(\CIC1Cos/n6189 ), .FCO(\CIC1Cos/n11438 ));
  CIC1Cos_SLICE_1258 \CIC1Cos/SLICE_1258 ( .B1(\CIC1Cos/d_d_tmp_48 ), 
    .A1(\CIC1Cos/d_tmp_48 ), .B0(\CIC1Cos/d_d_tmp_47 ), 
    .A0(\CIC1Cos/d_tmp_47 ), .FCI(\CIC1Cos/n11436 ), .F0(\CIC1Cos/n6192 ), 
    .F1(\CIC1Cos/n6191 ), .FCO(\CIC1Cos/n11437 ));
  CIC1Cos_SLICE_1259 \CIC1Cos/SLICE_1259 ( .B1(\CIC1Cos/d2_41 ), 
    .A1(\CIC1Cos/d1_41 ), .B0(\CIC1Cos/d2_40 ), .A0(\CIC1Cos/d1_40 ), 
    .FCI(\CIC1Cos/n11894 ), .F0(\CIC1Cos/n4983 ), .F1(\CIC1Cos/n4982 ), 
    .FCO(\CIC1Cos/n11895 ));
  CIC1Cos_SLICE_1260 \CIC1Cos/SLICE_1260 ( .B1(\CIC1Cos/d2_51 ), 
    .A1(\CIC1Cos/d1_51 ), .B0(\CIC1Cos/d2_50 ), .A0(\CIC1Cos/d1_50 ), 
    .FCI(\CIC1Cos/n11899 ), .F0(\CIC1Cos/n4973 ), .F1(\CIC1Cos/n4972 ), 
    .FCO(\CIC1Cos/n11900 ));
  CIC1Cos_SLICE_1261 \CIC1Cos/SLICE_1261 ( .B1(\CIC1Cos/d2_49 ), 
    .A1(\CIC1Cos/d1_49 ), .B0(\CIC1Cos/d2_48 ), .A0(\CIC1Cos/d1_48 ), 
    .FCI(\CIC1Cos/n11898 ), .F0(\CIC1Cos/n4975 ), .F1(\CIC1Cos/n4974 ), 
    .FCO(\CIC1Cos/n11899 ));
  CIC1Cos_SLICE_1262 \CIC1Cos/SLICE_1262 ( .D1(\CIC1Cos/d2_65 ), 
    .C1(\CIC1Cos/n5110 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_65 ), 
    .D0(\CIC1Cos/d2_64 ), .C0(\CIC1Cos/n5111 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_64 ), .DI1(\CIC1Cos/d3_71_N_561_65 ), 
    .DI0(\CIC1Cos/d3_71_N_561_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11846 ), 
    .F0(\CIC1Cos/d3_71_N_561_64 ), .Q0(\CIC1Cos/d3_64 ), 
    .F1(\CIC1Cos/d3_71_N_561_65 ), .Q1(\CIC1Cos/d3_65 ), 
    .FCO(\CIC1Cos/n11847 ));
  CIC1Cos_SLICE_1263 \CIC1Cos/SLICE_1263 ( .D1(\CIC1Cos/d2_69 ), 
    .C1(\CIC1Cos/n5106 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_69 ), 
    .D0(\CIC1Cos/d2_68 ), .C0(\CIC1Cos/n5107 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_68 ), .DI1(\CIC1Cos/d3_71_N_561_69 ), 
    .DI0(\CIC1Cos/d3_71_N_561_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11848 ), 
    .F0(\CIC1Cos/d3_71_N_561_68 ), .Q0(\CIC1Cos/d3_68 ), 
    .F1(\CIC1Cos/d3_71_N_561_69 ), .Q1(\CIC1Cos/d3_69 ), 
    .FCO(\CIC1Cos/n11849 ));
  CIC1Cos_SLICE_1264 \CIC1Cos/SLICE_1264 ( .B1(\CIC1Cos/d3_37 ), 
    .A1(\CIC1Cos/d2_37 ), .B0(\CIC1Cos/d3_36 ), .A0(\CIC1Cos/d2_36 ), 
    .F1(\CIC1Cos/n5138 ), .FCO(\CIC1Cos/n11852 ));
  CIC1Cos_SLICE_1265 \CIC1Cos/SLICE_1265 ( .B1(\CIC1Cos/d3_69 ), 
    .A1(\CIC1Cos/d2_69 ), .B0(\CIC1Cos/d3_68 ), .A0(\CIC1Cos/d2_68 ), 
    .FCI(\CIC1Cos/n11867 ), .F0(\CIC1Cos/n5107 ), .F1(\CIC1Cos/n5106 ), 
    .FCO(\CIC1Cos/n11868 ));
  CIC1Cos_SLICE_1266 \CIC1Cos/SLICE_1266 ( .B1(\CIC1Cos/d3_71 ), 
    .A1(\CIC1Cos/d2_71 ), .B0(\CIC1Cos/d3_70 ), .A0(\CIC1Cos/d2_70 ), 
    .FCI(\CIC1Cos/n11868 ), .F0(\CIC1Cos/n5105 ), .F1(\CIC1Cos/n5104 ));
  CIC1Cos_SLICE_1267 \CIC1Cos/SLICE_1267 ( .B1(\CIC1Cos/d3_65 ), 
    .A1(\CIC1Cos/d2_65 ), .B0(\CIC1Cos/d3_64 ), .A0(\CIC1Cos/d2_64 ), 
    .FCI(\CIC1Cos/n11865 ), .F0(\CIC1Cos/n5111 ), .F1(\CIC1Cos/n5110 ), 
    .FCO(\CIC1Cos/n11866 ));
  CIC1Cos_SLICE_1268 \CIC1Cos/SLICE_1268 ( .B1(\CIC1Cos/d3_67 ), 
    .A1(\CIC1Cos/d2_67 ), .B0(\CIC1Cos/d3_66 ), .A0(\CIC1Cos/d2_66 ), 
    .FCI(\CIC1Cos/n11866 ), .F0(\CIC1Cos/n5109 ), .F1(\CIC1Cos/n5108 ), 
    .FCO(\CIC1Cos/n11867 ));
  CIC1Cos_SLICE_1269 \CIC1Cos/SLICE_1269 ( .B1(\CIC1Cos/d3_61 ), 
    .A1(\CIC1Cos/d2_61 ), .B0(\CIC1Cos/d3_60 ), .A0(\CIC1Cos/d2_60 ), 
    .FCI(\CIC1Cos/n11863 ), .F0(\CIC1Cos/n5115 ), .F1(\CIC1Cos/n5114 ), 
    .FCO(\CIC1Cos/n11864 ));
  CIC1Cos_SLICE_1270 \CIC1Cos/SLICE_1270 ( .B1(\CIC1Cos/d3_63 ), 
    .A1(\CIC1Cos/d2_63 ), .B0(\CIC1Cos/d3_62 ), .A0(\CIC1Cos/d2_62 ), 
    .FCI(\CIC1Cos/n11864 ), .F0(\CIC1Cos/n5113 ), .F1(\CIC1Cos/n5112 ), 
    .FCO(\CIC1Cos/n11865 ));
  CIC1Cos_SLICE_1271 \CIC1Cos/SLICE_1271 ( .B1(\CIC1Cos/d3_57 ), 
    .A1(\CIC1Cos/d2_57 ), .B0(\CIC1Cos/d3_56 ), .A0(\CIC1Cos/d2_56 ), 
    .FCI(\CIC1Cos/n11861 ), .F0(\CIC1Cos/n5119 ), .F1(\CIC1Cos/n5118 ), 
    .FCO(\CIC1Cos/n11862 ));
  CIC1Cos_SLICE_1272 \CIC1Cos/SLICE_1272 ( .B1(\CIC1Cos/d3_59 ), 
    .A1(\CIC1Cos/d2_59 ), .B0(\CIC1Cos/d3_58 ), .A0(\CIC1Cos/d2_58 ), 
    .FCI(\CIC1Cos/n11862 ), .F0(\CIC1Cos/n5117 ), .F1(\CIC1Cos/n5116 ), 
    .FCO(\CIC1Cos/n11863 ));
  CIC1Cos_SLICE_1273 \CIC1Cos/SLICE_1273 ( .B1(\CIC1Cos/d3_53 ), 
    .A1(\CIC1Cos/d2_53 ), .B0(\CIC1Cos/d3_52 ), .A0(\CIC1Cos/d2_52 ), 
    .FCI(\CIC1Cos/n11859 ), .F0(\CIC1Cos/n5123 ), .F1(\CIC1Cos/n5122 ), 
    .FCO(\CIC1Cos/n11860 ));
  CIC1Cos_SLICE_1274 \CIC1Cos/SLICE_1274 ( .B1(\CIC1Cos/d3_55 ), 
    .A1(\CIC1Cos/d2_55 ), .B0(\CIC1Cos/d3_54 ), .A0(\CIC1Cos/d2_54 ), 
    .FCI(\CIC1Cos/n11860 ), .F0(\CIC1Cos/n5121 ), .F1(\CIC1Cos/n5120 ), 
    .FCO(\CIC1Cos/n11861 ));
  CIC1Cos_SLICE_1275 \CIC1Cos/SLICE_1275 ( .B1(\CIC1Cos/d3_49 ), 
    .A1(\CIC1Cos/d2_49 ), .B0(\CIC1Cos/d3_48 ), .A0(\CIC1Cos/d2_48 ), 
    .FCI(\CIC1Cos/n11857 ), .F0(\CIC1Cos/n5127 ), .F1(\CIC1Cos/n5126 ), 
    .FCO(\CIC1Cos/n11858 ));
  CIC1Cos_SLICE_1276 \CIC1Cos/SLICE_1276 ( .B1(\CIC1Cos/d3_51 ), 
    .A1(\CIC1Cos/d2_51 ), .B0(\CIC1Cos/d3_50 ), .A0(\CIC1Cos/d2_50 ), 
    .FCI(\CIC1Cos/n11858 ), .F0(\CIC1Cos/n5125 ), .F1(\CIC1Cos/n5124 ), 
    .FCO(\CIC1Cos/n11859 ));
  CIC1Cos_SLICE_1277 \CIC1Cos/SLICE_1277 ( .B1(\CIC1Cos/d3_45 ), 
    .A1(\CIC1Cos/d2_45 ), .B0(\CIC1Cos/d3_44 ), .A0(\CIC1Cos/d2_44 ), 
    .FCI(\CIC1Cos/n11855 ), .F0(\CIC1Cos/n5131 ), .F1(\CIC1Cos/n5130 ), 
    .FCO(\CIC1Cos/n11856 ));
  CIC1Cos_SLICE_1278 \CIC1Cos/SLICE_1278 ( .B1(\CIC1Cos/d3_47 ), 
    .A1(\CIC1Cos/d2_47 ), .B0(\CIC1Cos/d3_46 ), .A0(\CIC1Cos/d2_46 ), 
    .FCI(\CIC1Cos/n11856 ), .F0(\CIC1Cos/n5129 ), .F1(\CIC1Cos/n5128 ), 
    .FCO(\CIC1Cos/n11857 ));
  CIC1Cos_SLICE_1279 \CIC1Cos/SLICE_1279 ( .B1(\CIC1Cos/d3_43 ), 
    .A1(\CIC1Cos/d2_43 ), .B0(\CIC1Cos/d3_42 ), .A0(\CIC1Cos/d2_42 ), 
    .FCI(\CIC1Cos/n11854 ), .F0(\CIC1Cos/n5133 ), .F1(\CIC1Cos/n5132 ), 
    .FCO(\CIC1Cos/n11855 ));
  CIC1Cos_SLICE_1280 \CIC1Cos/SLICE_1280 ( .B1(\CIC1Cos/d2_47 ), 
    .A1(\CIC1Cos/d1_47 ), .B0(\CIC1Cos/d2_46 ), .A0(\CIC1Cos/d1_46 ), 
    .FCI(\CIC1Cos/n11897 ), .F0(\CIC1Cos/n4977 ), .F1(\CIC1Cos/n4976 ), 
    .FCO(\CIC1Cos/n11898 ));
  CIC1Cos_SLICE_1281 \CIC1Cos/SLICE_1281 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4828 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_43 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4829 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_42 ), .DI1(\CIC1Cos/d1_71_N_417_43 ), 
    .DI0(\CIC1Cos/d1_71_N_417_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11917 ), 
    .F0(\CIC1Cos/d1_71_N_417_42 ), .Q0(\CIC1Cos/d1_42 ), 
    .F1(\CIC1Cos/d1_71_N_417_43 ), .Q1(\CIC1Cos/d1_43 ), 
    .FCO(\CIC1Cos/n11918 ));
  CIC1Cos_SLICE_1282 \CIC1Cos/SLICE_1282 ( .B1(\CIC1Cos/d1_71 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_70 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11950 ), .F0(\CIC1Cos/n4801 ), .F1(\CIC1Cos/n4800 ));
  CIC1Cos_SLICE_1283 \CIC1Cos/SLICE_1283 ( .B1(\CIC1Cos/d1_69 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_68 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11949 ), .F0(\CIC1Cos/n4803 ), .F1(\CIC1Cos/n4802 ), 
    .FCO(\CIC1Cos/n11950 ));
  CIC1Cos_SLICE_1284 \CIC1Cos/SLICE_1284 ( .B1(\CIC1Cos/d1_67 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_66 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11948 ), .F0(\CIC1Cos/n4805 ), .F1(\CIC1Cos/n4804 ), 
    .FCO(\CIC1Cos/n11949 ));
  CIC1Cos_SLICE_1285 \CIC1Cos/SLICE_1285 ( .B1(\CIC1Cos/d1_65 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_64 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11947 ), .F0(\CIC1Cos/n4807 ), .F1(\CIC1Cos/n4806 ), 
    .FCO(\CIC1Cos/n11948 ));
  CIC1Cos_SLICE_1286 \CIC1Cos/SLICE_1286 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4830 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_41 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4831 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_40 ), .DI1(\CIC1Cos/d1_71_N_417_41 ), 
    .DI0(\CIC1Cos/d1_71_N_417_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11916 ), 
    .F0(\CIC1Cos/d1_71_N_417_40 ), .Q0(\CIC1Cos/d1_40 ), 
    .F1(\CIC1Cos/d1_71_N_417_41 ), .Q1(\CIC1Cos/d1_41 ), 
    .FCO(\CIC1Cos/n11917 ));
  CIC1Cos_SLICE_1287 \CIC1Cos/SLICE_1287 ( .B1(\CIC1Cos/d1_63 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_62 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11946 ), .F0(\CIC1Cos/n4809 ), .F1(\CIC1Cos/n4808 ), 
    .FCO(\CIC1Cos/n11947 ));
  CIC1Cos_SLICE_1288 \CIC1Cos/SLICE_1288 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4832 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_39 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4833 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_38 ), .DI1(\CIC1Cos/d1_71_N_417_39 ), 
    .DI0(\CIC1Cos/d1_71_N_417_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11915 ), 
    .F0(\CIC1Cos/d1_71_N_417_38 ), .Q0(\CIC1Cos/d1_38 ), 
    .F1(\CIC1Cos/d1_71_N_417_39 ), .Q1(\CIC1Cos/d1_39 ), 
    .FCO(\CIC1Cos/n11916 ));
  CIC1Cos_SLICE_1289 \CIC1Cos/SLICE_1289 ( .B1(\CIC1Cos/d1_61 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_60 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11945 ), .F0(\CIC1Cos/n4811 ), .F1(\CIC1Cos/n4810 ), 
    .FCO(\CIC1Cos/n11946 ));
  CIC1Cos_SLICE_1290 \CIC1Cos/SLICE_1290 ( .B1(\CIC1Cos/d1_59 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_58 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11944 ), .F0(\CIC1Cos/n4813 ), .F1(\CIC1Cos/n4812 ), 
    .FCO(\CIC1Cos/n11945 ));
  CIC1Cos_SLICE_1291 \CIC1Cos/SLICE_1291 ( .B1(\CIC1Cos/d1_57 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_56 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11943 ), .F0(\CIC1Cos/n4815 ), .F1(\CIC1Cos/n4814 ), 
    .FCO(\CIC1Cos/n11944 ));
  CIC1Cos_SLICE_1292 \CIC1Cos/SLICE_1292 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4834 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_37 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4835 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_36 ), .DI1(\CIC1Cos/d1_71_N_417_37 ), 
    .DI0(\CIC1Cos/d1_71_N_417_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11914 ), 
    .F0(\CIC1Cos/d1_71_N_417_36 ), .Q0(\CIC1Cos/d1_36 ), 
    .F1(\CIC1Cos/d1_71_N_417_37 ), .Q1(\CIC1Cos/d1_37 ), 
    .FCO(\CIC1Cos/n11915 ));
  CIC1Cos_SLICE_1293 \CIC1Cos/SLICE_1293 ( .B1(\CIC1Cos/d1_55 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_54 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11942 ), .F0(\CIC1Cos/n4817 ), .F1(\CIC1Cos/n4816 ), 
    .FCO(\CIC1Cos/n11943 ));
  CIC1Cos_SLICE_1294 \CIC1Cos/SLICE_1294 ( .B1(\CIC1Cos/d1_53 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_52 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11941 ), .F0(\CIC1Cos/n4819 ), .F1(\CIC1Cos/n4818 ), 
    .FCO(\CIC1Cos/n11942 ));
  CIC1Cos_SLICE_1295 \CIC1Cos/SLICE_1295 ( .B1(\CIC1Cos/d1_51 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_50 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11940 ), .F0(\CIC1Cos/n4821 ), .F1(\CIC1Cos/n4820 ), 
    .FCO(\CIC1Cos/n11941 ));
  CIC1Cos_SLICE_1296 \CIC1Cos/SLICE_1296 ( .B1(\CIC1Cos/d1_49 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_48 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11939 ), .F0(\CIC1Cos/n4823 ), .F1(\CIC1Cos/n4822 ), 
    .FCO(\CIC1Cos/n11940 ));
  CIC1Cos_SLICE_1297 \CIC1Cos/SLICE_1297 ( .B1(\CIC1Cos/d1_47 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_46 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11938 ), .F0(\CIC1Cos/n4825 ), .F1(\CIC1Cos/n4824 ), 
    .FCO(\CIC1Cos/n11939 ));
  CIC1Cos_SLICE_1298 \CIC1Cos/SLICE_1298 ( .B1(\CIC1Cos/d1_45 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_44 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11937 ), .F0(\CIC1Cos/n4827 ), .F1(\CIC1Cos/n4826 ), 
    .FCO(\CIC1Cos/n11938 ));
  CIC1Cos_SLICE_1299 \CIC1Cos/SLICE_1299 ( .B1(\CIC1Cos/d1_43 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_42 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11936 ), .F0(\CIC1Cos/n4829 ), .F1(\CIC1Cos/n4828 ), 
    .FCO(\CIC1Cos/n11937 ));
  CIC1Cos_SLICE_1300 \CIC1Cos/SLICE_1300 ( .B1(\CIC1Cos/d1_41 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_40 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11935 ), .F0(\CIC1Cos/n4831 ), .F1(\CIC1Cos/n4830 ), 
    .FCO(\CIC1Cos/n11936 ));
  CIC1Cos_SLICE_1301 \CIC1Cos/SLICE_1301 ( .B1(\CIC1Cos/d1_39 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_38 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n11934 ), .F0(\CIC1Cos/n4833 ), .F1(\CIC1Cos/n4832 ), 
    .FCO(\CIC1Cos/n11935 ));
  CIC1Cos_SLICE_1302 \CIC1Cos/SLICE_1302 ( .B1(\CIC1Cos/d2_45 ), 
    .A1(\CIC1Cos/d1_45 ), .B0(\CIC1Cos/d2_44 ), .A0(\CIC1Cos/d1_44 ), 
    .FCI(\CIC1Cos/n11896 ), .F0(\CIC1Cos/n4979 ), .F1(\CIC1Cos/n4978 ), 
    .FCO(\CIC1Cos/n11897 ));
  CIC1Cos_SLICE_1303 \CIC1Cos/SLICE_1303 ( .B1(\CIC1Cos/d1_37 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_36 ), .A0(MixerOutCos_11), 
    .F1(\CIC1Cos/n4834 ), .FCO(\CIC1Cos/n11934 ));
  CIC1Cos_SLICE_1304 \CIC1Cos/SLICE_1304 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4800 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_71 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4801 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_70 ), .DI1(\CIC1Cos/d1_71_N_417_71 ), 
    .DI0(\CIC1Cos/d1_71_N_417_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11931 ), 
    .F0(\CIC1Cos/d1_71_N_417_70 ), .Q0(\CIC1Cos/d1_70 ), 
    .F1(\CIC1Cos/d1_71_N_417_71 ), .Q1(\CIC1Cos/d1_71 ));
  CIC1Cos_SLICE_1305 \CIC1Cos/SLICE_1305 ( .B1(\CIC1Cos/d2_43 ), 
    .A1(\CIC1Cos/d1_43 ), .B0(\CIC1Cos/d2_42 ), .A0(\CIC1Cos/d1_42 ), 
    .FCI(\CIC1Cos/n11895 ), .F0(\CIC1Cos/n4981 ), .F1(\CIC1Cos/n4980 ), 
    .FCO(\CIC1Cos/n11896 ));
  CIC1Cos_SLICE_1306 \CIC1Cos/SLICE_1306 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4802 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_69 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4803 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_68 ), .DI1(\CIC1Cos/d1_71_N_417_69 ), 
    .DI0(\CIC1Cos/d1_71_N_417_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11930 ), 
    .F0(\CIC1Cos/d1_71_N_417_68 ), .Q0(\CIC1Cos/d1_68 ), 
    .F1(\CIC1Cos/d1_71_N_417_69 ), .Q1(\CIC1Cos/d1_69 ), 
    .FCO(\CIC1Cos/n11931 ));
  CIC1Cos_SLICE_1307 \CIC1Cos/SLICE_1307 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4804 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_67 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4805 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_66 ), .DI1(\CIC1Cos/d1_71_N_417_67 ), 
    .DI0(\CIC1Cos/d1_71_N_417_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11929 ), 
    .F0(\CIC1Cos/d1_71_N_417_66 ), .Q0(\CIC1Cos/d1_66 ), 
    .F1(\CIC1Cos/d1_71_N_417_67 ), .Q1(\CIC1Cos/d1_67 ), 
    .FCO(\CIC1Cos/n11930 ));
  CIC1Cos_SLICE_1308 \CIC1Cos/SLICE_1308 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4806 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_65 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4807 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_64 ), .DI1(\CIC1Cos/d1_71_N_417_65 ), 
    .DI0(\CIC1Cos/d1_71_N_417_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11928 ), 
    .F0(\CIC1Cos/d1_71_N_417_64 ), .Q0(\CIC1Cos/d1_64 ), 
    .F1(\CIC1Cos/d1_71_N_417_65 ), .Q1(\CIC1Cos/d1_65 ), 
    .FCO(\CIC1Cos/n11929 ));
  CIC1Cos_SLICE_1309 \CIC1Cos/SLICE_1309 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4808 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_63 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4809 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_62 ), .DI1(\CIC1Cos/d1_71_N_417_63 ), 
    .DI0(\CIC1Cos/d1_71_N_417_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11927 ), 
    .F0(\CIC1Cos/d1_71_N_417_62 ), .Q0(\CIC1Cos/d1_62 ), 
    .F1(\CIC1Cos/d1_71_N_417_63 ), .Q1(\CIC1Cos/d1_63 ), 
    .FCO(\CIC1Cos/n11928 ));
  CIC1Cos_SLICE_1310 \CIC1Cos/SLICE_1310 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4810 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_61 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4811 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_60 ), .DI1(\CIC1Cos/d1_71_N_417_61 ), 
    .DI0(\CIC1Cos/d1_71_N_417_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11926 ), 
    .F0(\CIC1Cos/d1_71_N_417_60 ), .Q0(\CIC1Cos/d1_60 ), 
    .F1(\CIC1Cos/d1_71_N_417_61 ), .Q1(\CIC1Cos/d1_61 ), 
    .FCO(\CIC1Cos/n11927 ));
  CIC1Cos_SLICE_1311 \CIC1Cos/SLICE_1311 ( .A1(\CIC1Cos/n4798 ), 
    .FCO(\CIC1Cos/n11914 ));
  CIC1Cos_SLICE_1312 \CIC1Cos/SLICE_1312 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4812 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_59 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4813 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_58 ), .DI1(\CIC1Cos/d1_71_N_417_59 ), 
    .DI0(\CIC1Cos/d1_71_N_417_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11925 ), 
    .F0(\CIC1Cos/d1_71_N_417_58 ), .Q0(\CIC1Cos/d1_58 ), 
    .F1(\CIC1Cos/d1_71_N_417_59 ), .Q1(\CIC1Cos/d1_59 ), 
    .FCO(\CIC1Cos/n11926 ));
  CIC1Cos_SLICE_1313 \CIC1Cos/SLICE_1313 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4814 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_57 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4815 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_56 ), .DI1(\CIC1Cos/d1_71_N_417_57 ), 
    .DI0(\CIC1Cos/d1_71_N_417_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11924 ), 
    .F0(\CIC1Cos/d1_71_N_417_56 ), .Q0(\CIC1Cos/d1_56 ), 
    .F1(\CIC1Cos/d1_71_N_417_57 ), .Q1(\CIC1Cos/d1_57 ), 
    .FCO(\CIC1Cos/n11925 ));
  CIC1Cos_SLICE_1314 \CIC1Cos/SLICE_1314 ( .B1(\CIC1Cos/d3_41 ), 
    .A1(\CIC1Cos/d2_41 ), .B0(\CIC1Cos/d3_40 ), .A0(\CIC1Cos/d2_40 ), 
    .FCI(\CIC1Cos/n11853 ), .F0(\CIC1Cos/n5135 ), .F1(\CIC1Cos/n5134 ), 
    .FCO(\CIC1Cos/n11854 ));
  CIC1Cos_SLICE_1315 \CIC1Cos/SLICE_1315 ( .B1(\CIC1Cos/d2_71 ), 
    .A1(\CIC1Cos/d1_71 ), .B0(\CIC1Cos/d2_70 ), .A0(\CIC1Cos/d1_70 ), 
    .FCI(\CIC1Cos/n11909 ), .F0(\CIC1Cos/n4953 ), .F1(\CIC1Cos/n4952 ));
  CIC1Cos_SLICE_1316 \CIC1Cos/SLICE_1316 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4816 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_55 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4817 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_54 ), .DI1(\CIC1Cos/d1_71_N_417_55 ), 
    .DI0(\CIC1Cos/d1_71_N_417_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11923 ), 
    .F0(\CIC1Cos/d1_71_N_417_54 ), .Q0(\CIC1Cos/d1_54 ), 
    .F1(\CIC1Cos/d1_71_N_417_55 ), .Q1(\CIC1Cos/d1_55 ), 
    .FCO(\CIC1Cos/n11924 ));
  CIC1Cos_SLICE_1317 \CIC1Cos/SLICE_1317 ( .B1(\CIC1Cos/d2_69 ), 
    .A1(\CIC1Cos/d1_69 ), .B0(\CIC1Cos/d2_68 ), .A0(\CIC1Cos/d1_68 ), 
    .FCI(\CIC1Cos/n11908 ), .F0(\CIC1Cos/n4955 ), .F1(\CIC1Cos/n4954 ), 
    .FCO(\CIC1Cos/n11909 ));
  CIC1Cos_SLICE_1318 \CIC1Cos/SLICE_1318 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4818 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_53 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4819 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_52 ), .DI1(\CIC1Cos/d1_71_N_417_53 ), 
    .DI0(\CIC1Cos/d1_71_N_417_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11922 ), 
    .F0(\CIC1Cos/d1_71_N_417_52 ), .Q0(\CIC1Cos/d1_52 ), 
    .F1(\CIC1Cos/d1_71_N_417_53 ), .Q1(\CIC1Cos/d1_53 ), 
    .FCO(\CIC1Cos/n11923 ));
  CIC1Cos_SLICE_1319 \CIC1Cos/SLICE_1319 ( .B1(\CIC1Cos/d2_67 ), 
    .A1(\CIC1Cos/d1_67 ), .B0(\CIC1Cos/d2_66 ), .A0(\CIC1Cos/d1_66 ), 
    .FCI(\CIC1Cos/n11907 ), .F0(\CIC1Cos/n4957 ), .F1(\CIC1Cos/n4956 ), 
    .FCO(\CIC1Cos/n11908 ));
  CIC1Cos_SLICE_1320 \CIC1Cos/SLICE_1320 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4820 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_51 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4821 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_50 ), .DI1(\CIC1Cos/d1_71_N_417_51 ), 
    .DI0(\CIC1Cos/d1_71_N_417_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11921 ), 
    .F0(\CIC1Cos/d1_71_N_417_50 ), .Q0(\CIC1Cos/d1_50 ), 
    .F1(\CIC1Cos/d1_71_N_417_51 ), .Q1(\CIC1Cos/d1_51 ), 
    .FCO(\CIC1Cos/n11922 ));
  CIC1Cos_SLICE_1321 \CIC1Cos/SLICE_1321 ( .B1(\CIC1Cos/d2_65 ), 
    .A1(\CIC1Cos/d1_65 ), .B0(\CIC1Cos/d2_64 ), .A0(\CIC1Cos/d1_64 ), 
    .FCI(\CIC1Cos/n11906 ), .F0(\CIC1Cos/n4959 ), .F1(\CIC1Cos/n4958 ), 
    .FCO(\CIC1Cos/n11907 ));
  CIC1Cos_SLICE_1322 \CIC1Cos/SLICE_1322 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4822 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_49 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4823 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_48 ), .DI1(\CIC1Cos/d1_71_N_417_49 ), 
    .DI0(\CIC1Cos/d1_71_N_417_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11920 ), 
    .F0(\CIC1Cos/d1_71_N_417_48 ), .Q0(\CIC1Cos/d1_48 ), 
    .F1(\CIC1Cos/d1_71_N_417_49 ), .Q1(\CIC1Cos/d1_49 ), 
    .FCO(\CIC1Cos/n11921 ));
  CIC1Cos_SLICE_1323 \CIC1Cos/SLICE_1323 ( .B1(\CIC1Cos/d2_63 ), 
    .A1(\CIC1Cos/d1_63 ), .B0(\CIC1Cos/d2_62 ), .A0(\CIC1Cos/d1_62 ), 
    .FCI(\CIC1Cos/n11905 ), .F0(\CIC1Cos/n4961 ), .F1(\CIC1Cos/n4960 ), 
    .FCO(\CIC1Cos/n11906 ));
  CIC1Cos_SLICE_1324 \CIC1Cos/SLICE_1324 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4824 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_47 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4825 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_46 ), .DI1(\CIC1Cos/d1_71_N_417_47 ), 
    .DI0(\CIC1Cos/d1_71_N_417_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11919 ), 
    .F0(\CIC1Cos/d1_71_N_417_46 ), .Q0(\CIC1Cos/d1_46 ), 
    .F1(\CIC1Cos/d1_71_N_417_47 ), .Q1(\CIC1Cos/d1_47 ), 
    .FCO(\CIC1Cos/n11920 ));
  CIC1Cos_SLICE_1325 \CIC1Cos/SLICE_1325 ( .B1(\CIC1Cos/d2_61 ), 
    .A1(\CIC1Cos/d1_61 ), .B0(\CIC1Cos/d2_60 ), .A0(\CIC1Cos/d1_60 ), 
    .FCI(\CIC1Cos/n11904 ), .F0(\CIC1Cos/n4963 ), .F1(\CIC1Cos/n4962 ), 
    .FCO(\CIC1Cos/n11905 ));
  CIC1Cos_SLICE_1326 \CIC1Cos/SLICE_1326 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n4826 ), .B1(\CIC1Cos/n4798 ), .A1(\CIC1Cos/d1_45 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n4827 ), .B0(\CIC1Cos/n4798 ), 
    .A0(\CIC1Cos/d1_44 ), .DI1(\CIC1Cos/d1_71_N_417_45 ), 
    .DI0(\CIC1Cos/d1_71_N_417_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11918 ), 
    .F0(\CIC1Cos/d1_71_N_417_44 ), .Q0(\CIC1Cos/d1_44 ), 
    .F1(\CIC1Cos/d1_71_N_417_45 ), .Q1(\CIC1Cos/d1_45 ), 
    .FCO(\CIC1Cos/n11919 ));
  CIC1Cos_SLICE_1327 \CIC1Cos/SLICE_1327 ( .B1(\CIC1Cos/d3_39 ), 
    .A1(\CIC1Cos/d2_39 ), .B0(\CIC1Cos/d3_38 ), .A0(\CIC1Cos/d2_38 ), 
    .FCI(\CIC1Cos/n11852 ), .F0(\CIC1Cos/n5137 ), .F1(\CIC1Cos/n5136 ), 
    .FCO(\CIC1Cos/n11853 ));
  CIC1Cos_SLICE_1328 \CIC1Cos/SLICE_1328 ( .D1(\CIC1Cos/d2_71 ), 
    .C1(\CIC1Cos/n5104 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_71 ), 
    .D0(\CIC1Cos/d2_70 ), .C0(\CIC1Cos/n5105 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_70 ), .DI1(\CIC1Cos/d3_71_N_561_71 ), 
    .DI0(\CIC1Cos/d3_71_N_561_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11849 ), 
    .F0(\CIC1Cos/d3_71_N_561_70 ), .Q0(\CIC1Cos/d3_70 ), 
    .F1(\CIC1Cos/d3_71_N_561_71 ), .Q1(\CIC1Cos/d3_71 ));
  CIC1Cos_SLICE_1329 \CIC1Cos/SLICE_1329 ( .D1(\CIC1Cos/d2_67 ), 
    .C1(\CIC1Cos/n5108 ), .B1(\CIC1Cos/n5102 ), .A1(\CIC1Cos/d3_67 ), 
    .D0(\CIC1Cos/d2_66 ), .C0(\CIC1Cos/n5109 ), .B0(\CIC1Cos/n5102 ), 
    .A0(\CIC1Cos/d3_66 ), .DI1(\CIC1Cos/d3_71_N_561_67 ), 
    .DI0(\CIC1Cos/d3_71_N_561_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11847 ), 
    .F0(\CIC1Cos/d3_71_N_561_66 ), .Q0(\CIC1Cos/d3_66 ), 
    .F1(\CIC1Cos/d3_71_N_561_67 ), .Q1(\CIC1Cos/d3_67 ), 
    .FCO(\CIC1Cos/n11848 ));
  uart_rx1_SLICE_1330 \uart_rx1/SLICE_1330 ( .A0(\uart_rx1/r_Clock_Count_15 ), 
    .DI0(\uart_rx1/n70 ), .CE(\uart_rx1/UartClk_2_enable_56 ), 
    .LSR(\uart_rx1/n8362 ), .CLK(\uart_tx1/UartClk[2] ), 
    .FCI(\uart_rx1/n11624 ), .F0(\uart_rx1/n70 ), 
    .Q0(\uart_rx1/r_Clock_Count_15 ));
  uart_rx1_SLICE_1331 \uart_rx1/SLICE_1331 ( .A1(\uart_rx1/r_Clock_Count_14 ), 
    .A0(\uart_rx1/r_Clock_Count_13 ), .DI1(\uart_rx1/n71 ), 
    .DI0(\uart_rx1/n72 ), .CE(\uart_rx1/UartClk_2_enable_56 ), 
    .LSR(\uart_rx1/n8362 ), .CLK(\uart_tx1/UartClk[2] ), 
    .FCI(\uart_rx1/n11623 ), .F0(\uart_rx1/n72 ), 
    .Q0(\uart_rx1/r_Clock_Count_13 ), .F1(\uart_rx1/n71 ), 
    .Q1(\uart_rx1/r_Clock_Count_14 ), .FCO(\uart_rx1/n11624 ));
  uart_rx1_SLICE_1332 \uart_rx1/SLICE_1332 ( .A1(\uart_rx1/r_Clock_Count_12 ), 
    .A0(\uart_rx1/r_Clock_Count_11 ), .DI1(\uart_rx1/n73 ), 
    .DI0(\uart_rx1/n74 ), .CE(\uart_rx1/UartClk_2_enable_56 ), 
    .LSR(\uart_rx1/n8362 ), .CLK(\uart_tx1/UartClk[2] ), 
    .FCI(\uart_rx1/n11622 ), .F0(\uart_rx1/n74 ), 
    .Q0(\uart_rx1/r_Clock_Count_11 ), .F1(\uart_rx1/n73 ), 
    .Q1(\uart_rx1/r_Clock_Count_12 ), .FCO(\uart_rx1/n11623 ));
  uart_rx1_SLICE_1333 \uart_rx1/SLICE_1333 ( .A1(\uart_rx1/r_Clock_Count_10 ), 
    .A0(\uart_rx1/r_Clock_Count_9 ), .DI1(\uart_rx1/n75 ), 
    .DI0(\uart_rx1/n76 ), .CE(\uart_rx1/UartClk_2_enable_56 ), 
    .LSR(\uart_rx1/n8362 ), .CLK(\uart_tx1/UartClk[2] ), 
    .FCI(\uart_rx1/n11621 ), .F0(\uart_rx1/n76 ), 
    .Q0(\uart_rx1/r_Clock_Count_9 ), .F1(\uart_rx1/n75 ), 
    .Q1(\uart_rx1/r_Clock_Count_10 ), .FCO(\uart_rx1/n11622 ));
  uart_rx1_SLICE_1334 \uart_rx1/SLICE_1334 ( .A1(\uart_rx1/r_Clock_Count_8 ), 
    .A0(\uart_rx1/r_Clock_Count_7 ), .DI1(\uart_rx1/n77 ), 
    .DI0(\uart_rx1/n78 ), .CE(\uart_rx1/UartClk_2_enable_56 ), 
    .LSR(\uart_rx1/n8362 ), .CLK(\uart_tx1/UartClk[2] ), 
    .FCI(\uart_rx1/n11620 ), .F0(\uart_rx1/n78 ), 
    .Q0(\uart_rx1/r_Clock_Count_7 ), .F1(\uart_rx1/n77 ), 
    .Q1(\uart_rx1/r_Clock_Count_8 ), .FCO(\uart_rx1/n11621 ));
  uart_rx1_SLICE_1335 \uart_rx1/SLICE_1335 ( .A1(\uart_rx1/r_Clock_Count_6 ), 
    .A0(\uart_rx1/r_Clock_Count_5 ), .DI1(\uart_rx1/n79 ), 
    .DI0(\uart_rx1/n80 ), .CE(\uart_rx1/UartClk_2_enable_56 ), 
    .LSR(\uart_rx1/n8362 ), .CLK(\uart_tx1/UartClk[2] ), 
    .FCI(\uart_rx1/n11619 ), .F0(\uart_rx1/n80 ), 
    .Q0(\uart_rx1/r_Clock_Count_5 ), .F1(\uart_rx1/n79 ), 
    .Q1(\uart_rx1/r_Clock_Count_6 ), .FCO(\uart_rx1/n11620 ));
  uart_rx1_SLICE_1336 \uart_rx1/SLICE_1336 ( .A1(\uart_rx1/r_Clock_Count_4 ), 
    .A0(\uart_rx1/r_Clock_Count_3 ), .DI1(\uart_rx1/n81 ), 
    .DI0(\uart_rx1/n82 ), .CE(\uart_rx1/UartClk_2_enable_56 ), 
    .LSR(\uart_rx1/n8362 ), .CLK(\uart_tx1/UartClk[2] ), 
    .FCI(\uart_rx1/n11618 ), .F0(\uart_rx1/n82 ), 
    .Q0(\uart_rx1/r_Clock_Count_3 ), .F1(\uart_rx1/n81 ), 
    .Q1(\uart_rx1/r_Clock_Count_4 ), .FCO(\uart_rx1/n11619 ));
  uart_rx1_SLICE_1337 \uart_rx1/SLICE_1337 ( .A1(\uart_rx1/r_Clock_Count_2 ), 
    .A0(\uart_rx1/r_Clock_Count_1 ), .DI1(\uart_rx1/n83 ), 
    .DI0(\uart_rx1/n84 ), .CE(\uart_rx1/UartClk_2_enable_56 ), 
    .LSR(\uart_rx1/n8362 ), .CLK(\uart_tx1/UartClk[2] ), 
    .FCI(\uart_rx1/n11617 ), .F0(\uart_rx1/n84 ), 
    .Q0(\uart_rx1/r_Clock_Count_1 ), .F1(\uart_rx1/n83 ), 
    .Q1(\uart_rx1/r_Clock_Count_2 ), .FCO(\uart_rx1/n11618 ));
  uart_rx1_SLICE_1338 \uart_rx1/SLICE_1338 ( .A1(\uart_rx1/r_Clock_Count_0 ), 
    .DI1(\uart_rx1/n85 ), .CE(\uart_rx1/UartClk_2_enable_56 ), 
    .LSR(\uart_rx1/n8362 ), .CLK(\uart_tx1/UartClk[2] ), .F1(\uart_rx1/n85 ), 
    .Q1(\uart_rx1/r_Clock_Count_0 ), .FCO(\uart_rx1/n11617 ));
  AMDemodulator1_SLICE_1339 \AMDemodulator1/SLICE_1339 ( 
    .FCI(\AMDemodulator1/n12275 ), .F0(\AMDemodulator1/d_out_d_11_N_1871_17 ));
  AMDemodulator1_SLICE_1340 \AMDemodulator1/SLICE_1340 ( 
    .B0(\AMDemodulator1/ISquare_31 ), .A0(\AMDemodulator1/n209 ), 
    .FCI(\AMDemodulator1/n12274 ), .F0(\AMDemodulator1/n323 ), 
    .F1(\AMDemodulator1/n322 ), .FCO(\AMDemodulator1/n12275 ));
  AMDemodulator1_SLICE_1341 \AMDemodulator1/SLICE_1341 ( 
    .A1(\AMDemodulator1/ISquare_31 ), .B0(\AMDemodulator1/ISquare_31 ), 
    .A0(\AMDemodulator1/n209 ), .FCI(\AMDemodulator1/n12273 ), 
    .F0(\AMDemodulator1/n325 ), .F1(\AMDemodulator1/n324 ), 
    .FCO(\AMDemodulator1/n12274 ));
  AMDemodulator1_SLICE_1342 \AMDemodulator1/SLICE_1342 ( 
    .B0(\AMDemodulator1/ISquare_22 ), .A0(\AMDemodulator1/ISquare_23 ), 
    .F1(\AMDemodulator1/n326 ), .FCO(\AMDemodulator1/n12273 ));
  AMDemodulator1_SLICE_1343 \AMDemodulator1/SLICE_1343 ( 
    .A1(\AMDemodulator1/n912 ), .B0(\AMDemodulator1/ISquare_31 ), 
    .A0(\AMDemodulator1/n913 ), .FCI(\AMDemodulator1/n12269 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_2352_17 ));
  AMDemodulator1_SLICE_1344 \AMDemodulator1/SLICE_1344 ( 
    .B1(\AMDemodulator1/ISquare_31 ), .A1(\AMDemodulator1/n914 ), 
    .B0(\AMDemodulator1/ISquare_31 ), .A0(\AMDemodulator1/n915 ), 
    .FCI(\AMDemodulator1/n12268 ), .FCO(\AMDemodulator1/n12269 ));
  AMDemodulator1_SLICE_1345 \AMDemodulator1/SLICE_1345 ( 
    .A1(\AMDemodulator1/n916 ), .B0(\AMDemodulator1/d_out_d_11_N_1871_17 ), 
    .A0(\AMDemodulator1/n917 ), .FCI(\AMDemodulator1/n12267 ), 
    .FCO(\AMDemodulator1/n12268 ));
  AMDemodulator1_SLICE_1346 \AMDemodulator1/SLICE_1346 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1873_17 ), .A1(\AMDemodulator1/n918 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1875_17 ), .A0(\AMDemodulator1/n919 ), 
    .FCI(\AMDemodulator1/n12266 ), .FCO(\AMDemodulator1/n12267 ));
  AMDemodulator1_SLICE_1347 \AMDemodulator1/SLICE_1347 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1877_17 ), .A1(\AMDemodulator1/n920 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1879_17 ), .A0(\AMDemodulator1/n921 ), 
    .FCI(\AMDemodulator1/n12265 ), .FCO(\AMDemodulator1/n12266 ));
  AMDemodulator1_SLICE_1348 \AMDemodulator1/SLICE_1348 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A1(\AMDemodulator1/n922 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), .A0(\AMDemodulator1/n923 ), 
    .FCI(\AMDemodulator1/n12264 ), .FCO(\AMDemodulator1/n12265 ));
  AMDemodulator1_SLICE_1349 \AMDemodulator1/SLICE_1349 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), .A1(\AMDemodulator1/n924 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), .A0(\AMDemodulator1/n925 ), 
    .FCI(\AMDemodulator1/n12263 ), .FCO(\AMDemodulator1/n12264 ));
  AMDemodulator1_SLICE_1350 \AMDemodulator1/SLICE_1350 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), .A1(\AMDemodulator1/n926 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1891_17 ), .A0(\AMDemodulator1/n927 ), 
    .FCI(\AMDemodulator1/n12262 ), .FCO(\AMDemodulator1/n12263 ));
  AMDemodulator1_SLICE_1351 \AMDemodulator1/SLICE_1351 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1891_17 ), 
    .A1(\AMDemodulator1/ISquare_1 ), .A0(\AMDemodulator1/ISquare_0 ), 
    .FCO(\AMDemodulator1/n12262 ));
  AMDemodulator1_SLICE_1352 \AMDemodulator1/SLICE_1352 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1887_17 ), .A1(\AMDemodulator1/n792 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), .A0(\AMDemodulator1/n793 ), 
    .FCI(\AMDemodulator1/n11209 ), .F0(\AMDemodulator1/n852 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1889_17 ));
  AMDemodulator1_SLICE_1353 \AMDemodulator1/SLICE_1353 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1887_17 ), .A1(\AMDemodulator1/n794 ), 
    .C0(\AMDemodulator1/n795 ), .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11208 ), 
    .F0(\AMDemodulator1/n854 ), .F1(\AMDemodulator1/n853 ), 
    .FCO(\AMDemodulator1/n11209 ));
  AMDemodulator1_SLICE_1354 \AMDemodulator1/SLICE_1354 ( 
    .C1(\AMDemodulator1/n796 ), .B1(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n797 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11207 ), 
    .F0(\AMDemodulator1/n856 ), .F1(\AMDemodulator1/n855 ), 
    .FCO(\AMDemodulator1/n11208 ));
  AMDemodulator1_SLICE_1355 \AMDemodulator1/SLICE_1355 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1887_17 ), .A1(\AMDemodulator1/n798 ), 
    .C0(\AMDemodulator1/n799 ), .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1871_17 ), .FCI(\AMDemodulator1/n11206 ), 
    .F0(\AMDemodulator1/n858 ), .F1(\AMDemodulator1/n857 ), 
    .FCO(\AMDemodulator1/n11207 ));
  AMDemodulator1_SLICE_1356 \AMDemodulator1/SLICE_1356 ( 
    .C1(\AMDemodulator1/n800 ), .B1(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1873_17 ), .C0(\AMDemodulator1/n801 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1875_17 ), .FCI(\AMDemodulator1/n11205 ), 
    .F0(\AMDemodulator1/n860 ), .F1(\AMDemodulator1/n859 ), 
    .FCO(\AMDemodulator1/n11206 ));
  AMDemodulator1_SLICE_1357 \AMDemodulator1/SLICE_1357 ( 
    .C1(\AMDemodulator1/n802 ), .B1(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1877_17 ), .C0(\AMDemodulator1/n803 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1879_17 ), .FCI(\AMDemodulator1/n11204 ), 
    .F0(\AMDemodulator1/n862 ), .F1(\AMDemodulator1/n861 ), 
    .FCO(\AMDemodulator1/n11205 ));
  AMDemodulator1_SLICE_1358 \AMDemodulator1/SLICE_1358 ( 
    .C1(\AMDemodulator1/n804 ), .B1(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1881_17 ), .C0(\AMDemodulator1/n805 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1883_17 ), .FCI(\AMDemodulator1/n11203 ), 
    .F0(\AMDemodulator1/n864 ), .F1(\AMDemodulator1/n863 ), 
    .FCO(\AMDemodulator1/n11204 ));
  AMDemodulator1_SLICE_1359 \AMDemodulator1/SLICE_1359 ( 
    .C1(\AMDemodulator1/n806 ), .B1(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1885_17 ), .A0(\AMDemodulator1/n807 ), 
    .FCI(\AMDemodulator1/n11202 ), .F0(\AMDemodulator1/n866 ), 
    .F1(\AMDemodulator1/n865 ), .FCO(\AMDemodulator1/n11203 ));
  AMDemodulator1_SLICE_1360 \AMDemodulator1/SLICE_1360 ( 
    .A1(\AMDemodulator1/ISquare_5 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A0(\AMDemodulator1/ISquare_4 ), .FCI(\AMDemodulator1/n11201 ), 
    .F1(\AMDemodulator1/n867 ), .FCO(\AMDemodulator1/n11202 ));
  AMDemodulator1_SLICE_1361 \AMDemodulator1/SLICE_1361 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1887_17 ), .FCO(\AMDemodulator1/n11201 ));
  AMDemodulator1_SLICE_1362 \AMDemodulator1/SLICE_1362 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), .A1(\AMDemodulator1/n732 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1885_17 ), .A0(\AMDemodulator1/n733 ), 
    .FCI(\AMDemodulator1/n12233 ), .F0(\AMDemodulator1/n792 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1887_17 ));
  AMDemodulator1_SLICE_1363 \AMDemodulator1/SLICE_1363 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), .A1(\AMDemodulator1/n734 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1885_17 ), .A0(\AMDemodulator1/n735 ), 
    .FCI(\AMDemodulator1/n12232 ), .F0(\AMDemodulator1/n794 ), 
    .F1(\AMDemodulator1/n793 ), .FCO(\AMDemodulator1/n12233 ));
  AMDemodulator1_SLICE_1364 \AMDemodulator1/SLICE_1364 ( 
    .C1(\AMDemodulator1/n736 ), .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n737 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12231 ), 
    .F0(\AMDemodulator1/n796 ), .F1(\AMDemodulator1/n795 ), 
    .FCO(\AMDemodulator1/n12232 ));
  AMDemodulator1_SLICE_1365 \AMDemodulator1/SLICE_1365 ( 
    .C1(\AMDemodulator1/n738 ), .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1885_17 ), .A0(\AMDemodulator1/n739 ), 
    .FCI(\AMDemodulator1/n12230 ), .F0(\AMDemodulator1/n798 ), 
    .F1(\AMDemodulator1/n797 ), .FCO(\AMDemodulator1/n12231 ));
  AMDemodulator1_SLICE_1366 \AMDemodulator1/SLICE_1366 ( 
    .C1(\AMDemodulator1/n740 ), .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1871_17 ), .C0(\AMDemodulator1/n741 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1873_17 ), .FCI(\AMDemodulator1/n12229 ), 
    .F0(\AMDemodulator1/n800 ), .F1(\AMDemodulator1/n799 ), 
    .FCO(\AMDemodulator1/n12230 ));
  AMDemodulator1_SLICE_1367 \AMDemodulator1/SLICE_1367 ( 
    .C1(\AMDemodulator1/n742 ), .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1875_17 ), .C0(\AMDemodulator1/n743 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1877_17 ), .FCI(\AMDemodulator1/n12228 ), 
    .F0(\AMDemodulator1/n802 ), .F1(\AMDemodulator1/n801 ), 
    .FCO(\AMDemodulator1/n12229 ));
  AMDemodulator1_SLICE_1368 \AMDemodulator1/SLICE_1368 ( 
    .C1(\AMDemodulator1/n744 ), .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1879_17 ), .C0(\AMDemodulator1/n745 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1881_17 ), .FCI(\AMDemodulator1/n12227 ), 
    .F0(\AMDemodulator1/n804 ), .F1(\AMDemodulator1/n803 ), 
    .FCO(\AMDemodulator1/n12228 ));
  AMDemodulator1_SLICE_1369 \AMDemodulator1/SLICE_1369 ( 
    .C1(\AMDemodulator1/n746 ), .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1883_17 ), .A0(\AMDemodulator1/n747 ), 
    .FCI(\AMDemodulator1/n12226 ), .F0(\AMDemodulator1/n806 ), 
    .F1(\AMDemodulator1/n805 ), .FCO(\AMDemodulator1/n12227 ));
  AMDemodulator1_SLICE_1370 \AMDemodulator1/SLICE_1370 ( 
    .A1(\AMDemodulator1/ISquare_7 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .A0(\AMDemodulator1/ISquare_6 ), .FCI(\AMDemodulator1/n12225 ), 
    .F1(\AMDemodulator1/n807 ), .FCO(\AMDemodulator1/n12226 ));
  AMDemodulator1_SLICE_1371 \AMDemodulator1/SLICE_1371 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1885_17 ), .FCO(\AMDemodulator1/n12225 ));
  AMDemodulator1_SLICE_1372 \AMDemodulator1/SLICE_1372 ( 
    .B0(\AMDemodulator1/MultResult2_23 ), .A0(\AMDemodulator1/MultResult1_23 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_24 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11001 ), .F0(\AMDemodulator1/ISquare_31_N_1894_24 ), 
    .Q0(\AMDemodulator1/ISquare_31 ));
  AMDemodulator1_SLICE_1373 \AMDemodulator1/SLICE_1373 ( 
    .B1(\AMDemodulator1/MultResult2_23 ), .A1(\AMDemodulator1/MultResult1_23 ), 
    .B0(\AMDemodulator1/MultResult2_22 ), .A0(\AMDemodulator1/MultResult1_22 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_23 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_22 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11000 ), .F0(\AMDemodulator1/ISquare_31_N_1894_22 ), 
    .Q0(\AMDemodulator1/ISquare_22 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1894_23 ), 
    .Q1(\AMDemodulator1/ISquare_23 ), .FCO(\AMDemodulator1/n11001 ));
  AMDemodulator1_SLICE_1374 \AMDemodulator1/SLICE_1374 ( 
    .B1(\AMDemodulator1/MultResult2_21 ), .A1(\AMDemodulator1/MultResult1_21 ), 
    .B0(\AMDemodulator1/MultResult2_20 ), .A0(\AMDemodulator1/MultResult1_20 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_21 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_20 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10999 ), .F0(\AMDemodulator1/ISquare_31_N_1894_20 ), 
    .Q0(\AMDemodulator1/ISquare_20 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1894_21 ), 
    .Q1(\AMDemodulator1/ISquare_21 ), .FCO(\AMDemodulator1/n11000 ));
  AMDemodulator1_SLICE_1375 \AMDemodulator1/SLICE_1375 ( 
    .B1(\AMDemodulator1/MultResult2_19 ), .A1(\AMDemodulator1/MultResult1_19 ), 
    .B0(\AMDemodulator1/MultResult2_18 ), .A0(\AMDemodulator1/MultResult1_18 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_19 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_18 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10998 ), .F0(\AMDemodulator1/ISquare_31_N_1894_18 ), 
    .Q0(\AMDemodulator1/ISquare_18 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1894_19 ), 
    .Q1(\AMDemodulator1/ISquare_19 ), .FCO(\AMDemodulator1/n10999 ));
  AMDemodulator1_SLICE_1376 \AMDemodulator1/SLICE_1376 ( 
    .B1(\AMDemodulator1/MultResult2_17 ), .A1(\AMDemodulator1/MultResult1_17 ), 
    .B0(\AMDemodulator1/MultResult2_16 ), .A0(\AMDemodulator1/MultResult1_16 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_17 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_16 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10997 ), .F0(\AMDemodulator1/ISquare_31_N_1894_16 ), 
    .Q0(\AMDemodulator1/ISquare_16 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1894_17 ), 
    .Q1(\AMDemodulator1/ISquare_17 ), .FCO(\AMDemodulator1/n10998 ));
  AMDemodulator1_SLICE_1377 \AMDemodulator1/SLICE_1377 ( 
    .B1(\AMDemodulator1/MultResult2_15 ), .A1(\AMDemodulator1/MultResult1_15 ), 
    .B0(\AMDemodulator1/MultResult2_14 ), .A0(\AMDemodulator1/MultResult1_14 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_15 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_14 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10996 ), .F0(\AMDemodulator1/ISquare_31_N_1894_14 ), 
    .Q0(\AMDemodulator1/ISquare_14 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1894_15 ), 
    .Q1(\AMDemodulator1/ISquare_15 ), .FCO(\AMDemodulator1/n10997 ));
  AMDemodulator1_SLICE_1378 \AMDemodulator1/SLICE_1378 ( 
    .B1(\AMDemodulator1/MultResult2_13 ), .A1(\AMDemodulator1/MultResult1_13 ), 
    .B0(\AMDemodulator1/MultResult2_12 ), .A0(\AMDemodulator1/MultResult1_12 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_13 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_12 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10995 ), .F0(\AMDemodulator1/ISquare_31_N_1894_12 ), 
    .Q0(\AMDemodulator1/ISquare_12 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1894_13 ), 
    .Q1(\AMDemodulator1/ISquare_13 ), .FCO(\AMDemodulator1/n10996 ));
  AMDemodulator1_SLICE_1379 \AMDemodulator1/SLICE_1379 ( 
    .B1(\AMDemodulator1/MultResult2_11 ), .A1(\AMDemodulator1/MultResult1_11 ), 
    .B0(\AMDemodulator1/MultResult2_10 ), .A0(\AMDemodulator1/MultResult1_10 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_11 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_10 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10994 ), .F0(\AMDemodulator1/ISquare_31_N_1894_10 ), 
    .Q0(\AMDemodulator1/ISquare_10 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1894_11 ), 
    .Q1(\AMDemodulator1/ISquare_11 ), .FCO(\AMDemodulator1/n10995 ));
  AMDemodulator1_SLICE_1380 \AMDemodulator1/SLICE_1380 ( 
    .B1(\AMDemodulator1/MultResult2_9 ), .A1(\AMDemodulator1/MultResult1_9 ), 
    .B0(\AMDemodulator1/MultResult2_8 ), .A0(\AMDemodulator1/MultResult1_8 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_9 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_8 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10993 ), .F0(\AMDemodulator1/ISquare_31_N_1894_8 ), 
    .Q0(\AMDemodulator1/ISquare_8 ), .F1(\AMDemodulator1/ISquare_31_N_1894_9 ), 
    .Q1(\AMDemodulator1/ISquare_9 ), .FCO(\AMDemodulator1/n10994 ));
  AMDemodulator1_SLICE_1381 \AMDemodulator1/SLICE_1381 ( 
    .B1(\AMDemodulator1/MultResult2_7 ), .A1(\AMDemodulator1/MultResult1_7 ), 
    .B0(\AMDemodulator1/MultResult2_6 ), .A0(\AMDemodulator1/MultResult1_6 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_7 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_6 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10992 ), .F0(\AMDemodulator1/ISquare_31_N_1894_6 ), 
    .Q0(\AMDemodulator1/ISquare_6 ), .F1(\AMDemodulator1/ISquare_31_N_1894_7 ), 
    .Q1(\AMDemodulator1/ISquare_7 ), .FCO(\AMDemodulator1/n10993 ));
  AMDemodulator1_SLICE_1382 \AMDemodulator1/SLICE_1382 ( 
    .B1(\AMDemodulator1/MultResult2_5 ), .A1(\AMDemodulator1/MultResult1_5 ), 
    .B0(\AMDemodulator1/MultResult2_4 ), .A0(\AMDemodulator1/MultResult1_4 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_5 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_4 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10991 ), .F0(\AMDemodulator1/ISquare_31_N_1894_4 ), 
    .Q0(\AMDemodulator1/ISquare_4 ), .F1(\AMDemodulator1/ISquare_31_N_1894_5 ), 
    .Q1(\AMDemodulator1/ISquare_5 ), .FCO(\AMDemodulator1/n10992 ));
  AMDemodulator1_SLICE_1383 \AMDemodulator1/SLICE_1383 ( 
    .B1(\AMDemodulator1/MultResult2_3 ), .A1(\AMDemodulator1/MultResult1_3 ), 
    .B0(\AMDemodulator1/MultResult2_2 ), .A0(\AMDemodulator1/MultResult1_2 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_3 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_2 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n10990 ), .F0(\AMDemodulator1/ISquare_31_N_1894_2 ), 
    .Q0(\AMDemodulator1/ISquare_2 ), .F1(\AMDemodulator1/ISquare_31_N_1894_3 ), 
    .Q1(\AMDemodulator1/ISquare_3 ), .FCO(\AMDemodulator1/n10991 ));
  AMDemodulator1_SLICE_1384 \AMDemodulator1/SLICE_1384 ( 
    .B1(\AMDemodulator1/MultResult2_1 ), .A1(\AMDemodulator1/MultResult1_1 ), 
    .B0(\AMDemodulator1/MultResult2_0 ), .A0(\AMDemodulator1/MultResult1_0 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1894_1 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/ISquare_31_N_1894_1 ), .Q1(\AMDemodulator1/ISquare_1 ), 
    .FCO(\AMDemodulator1/n10990 ));
  AMDemodulator1_SLICE_1385 \AMDemodulator1/SLICE_1385 ( 
    .A1(\AMDemodulator1/n912 ), .B0(\AMDemodulator1/ISquare_31 ), 
    .A0(\AMDemodulator1/n913 ), .FCI(\AMDemodulator1/n12184 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_2334_17 ));
  AMDemodulator1_SLICE_1386 \AMDemodulator1/SLICE_1386 ( 
    .B1(\AMDemodulator1/ISquare_31 ), .A1(\AMDemodulator1/n914 ), 
    .B0(\AMDemodulator1/ISquare_31 ), .A0(\AMDemodulator1/n915 ), 
    .FCI(\AMDemodulator1/n12183 ), .FCO(\AMDemodulator1/n12184 ));
  AMDemodulator1_SLICE_1387 \AMDemodulator1/SLICE_1387 ( 
    .A1(\AMDemodulator1/n916 ), .B0(\AMDemodulator1/d_out_d_11_N_1871_17 ), 
    .A0(\AMDemodulator1/n917 ), .FCI(\AMDemodulator1/n12182 ), 
    .FCO(\AMDemodulator1/n12183 ));
  AMDemodulator1_SLICE_1388 \AMDemodulator1/SLICE_1388 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1873_17 ), .A1(\AMDemodulator1/n918 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1875_17 ), .A0(\AMDemodulator1/n919 ), 
    .FCI(\AMDemodulator1/n12181 ), .FCO(\AMDemodulator1/n12182 ));
  AMDemodulator1_SLICE_1389 \AMDemodulator1/SLICE_1389 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1877_17 ), .A1(\AMDemodulator1/n920 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1879_17 ), .A0(\AMDemodulator1/n921 ), 
    .FCI(\AMDemodulator1/n12180 ), .FCO(\AMDemodulator1/n12181 ));
  AMDemodulator1_SLICE_1390 \AMDemodulator1/SLICE_1390 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1874 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1875_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1874 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1875_17 ), .FCI(\AMDemodulator1/n11548 ), 
    .F0(\AMDemodulator1/n496 ), .F1(\AMDemodulator1/d_out_d_11_N_1877_17 ));
  AMDemodulator1_SLICE_1391 \AMDemodulator1/SLICE_1391 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1875_17 ), .A1(\AMDemodulator1/n438 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1875_17 ), .A0(\AMDemodulator1/n439 ), 
    .FCI(\AMDemodulator1/n11547 ), .F0(\AMDemodulator1/n498 ), 
    .F1(\AMDemodulator1/n497 ), .FCO(\AMDemodulator1/n11548 ));
  AMDemodulator1_SLICE_1392 \AMDemodulator1/SLICE_1392 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1875_17 ), .A1(\AMDemodulator1/n440 ), 
    .C0(\AMDemodulator1/n441 ), .B0(\AMDemodulator1/d_out_d_11_N_1875_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11546 ), 
    .F0(\AMDemodulator1/n500 ), .F1(\AMDemodulator1/n499 ), 
    .FCO(\AMDemodulator1/n11547 ));
  AMDemodulator1_SLICE_1393 \AMDemodulator1/SLICE_1393 ( 
    .C1(\AMDemodulator1/n442 ), .B1(\AMDemodulator1/d_out_d_11_N_1875_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n443 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1875_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11545 ), 
    .F0(\AMDemodulator1/n502 ), .F1(\AMDemodulator1/n501 ), 
    .FCO(\AMDemodulator1/n11546 ));
  AMDemodulator1_SLICE_1394 \AMDemodulator1/SLICE_1394 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1875_17 ), .A1(\AMDemodulator1/n444 ), 
    .C0(\AMDemodulator1/n445 ), .B0(\AMDemodulator1/d_out_d_11_N_1875_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1871_17 ), .FCI(\AMDemodulator1/n11544 ), 
    .F0(\AMDemodulator1/n504 ), .F1(\AMDemodulator1/n503 ), 
    .FCO(\AMDemodulator1/n11545 ));
  AMDemodulator1_SLICE_1395 \AMDemodulator1/SLICE_1395 ( 
    .C1(\AMDemodulator1/n446 ), .B1(\AMDemodulator1/d_out_d_11_N_1875_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1873_17 ), .A0(\AMDemodulator1/n447 ), 
    .FCI(\AMDemodulator1/n11543 ), .F0(\AMDemodulator1/n506 ), 
    .F1(\AMDemodulator1/n505 ), .FCO(\AMDemodulator1/n11544 ));
  AMDemodulator1_SLICE_1396 \AMDemodulator1/SLICE_1396 ( 
    .A1(\AMDemodulator1/ISquare_17 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1875_17 ), 
    .A0(\AMDemodulator1/ISquare_16 ), .FCI(\AMDemodulator1/n11542 ), 
    .F1(\AMDemodulator1/n507 ), .FCO(\AMDemodulator1/n11543 ));
  AMDemodulator1_SLICE_1397 \AMDemodulator1/SLICE_1397 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1875_17 ), .FCO(\AMDemodulator1/n11542 ));
  AMDemodulator1_SLICE_1398 \AMDemodulator1/SLICE_1398 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1872 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1873_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1872 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1873_17 ), .FCI(\AMDemodulator1/n11536 ), 
    .F0(\AMDemodulator1/n438 ), .F1(\AMDemodulator1/d_out_d_11_N_1875_17 ));
  AMDemodulator1_SLICE_1399 \AMDemodulator1/SLICE_1399 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1873_17 ), .A1(\AMDemodulator1/n380 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1873_17 ), .A0(\AMDemodulator1/n381 ), 
    .FCI(\AMDemodulator1/n11535 ), .F0(\AMDemodulator1/n440 ), 
    .F1(\AMDemodulator1/n439 ), .FCO(\AMDemodulator1/n11536 ));
  AMDemodulator1_SLICE_1400 \AMDemodulator1/SLICE_1400 ( 
    .C1(\AMDemodulator1/n382 ), .B1(\AMDemodulator1/d_out_d_11_N_1873_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n383 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1873_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11534 ), 
    .F0(\AMDemodulator1/n442 ), .F1(\AMDemodulator1/n441 ), 
    .FCO(\AMDemodulator1/n11535 ));
  AMDemodulator1_SLICE_1401 \AMDemodulator1/SLICE_1401 ( 
    .C1(\AMDemodulator1/n384 ), .B1(\AMDemodulator1/d_out_d_11_N_1873_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1873_17 ), .A0(\AMDemodulator1/n385 ), 
    .FCI(\AMDemodulator1/n11533 ), .F0(\AMDemodulator1/n444 ), 
    .F1(\AMDemodulator1/n443 ), .FCO(\AMDemodulator1/n11534 ));
  AMDemodulator1_SLICE_1402 \AMDemodulator1/SLICE_1402 ( 
    .C1(\AMDemodulator1/n386 ), .B1(\AMDemodulator1/d_out_d_11_N_1873_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1871_17 ), .A0(\AMDemodulator1/n387 ), 
    .FCI(\AMDemodulator1/n11532 ), .F0(\AMDemodulator1/n446 ), 
    .F1(\AMDemodulator1/n445 ), .FCO(\AMDemodulator1/n11533 ));
  AMDemodulator1_SLICE_1403 \AMDemodulator1/SLICE_1403 ( 
    .A1(\AMDemodulator1/ISquare_19 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1873_17 ), 
    .A0(\AMDemodulator1/ISquare_18 ), .FCI(\AMDemodulator1/n11531 ), 
    .F1(\AMDemodulator1/n447 ), .FCO(\AMDemodulator1/n11532 ));
  AMDemodulator1_SLICE_1404 \AMDemodulator1/SLICE_1404 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1873_17 ), .FCO(\AMDemodulator1/n11531 ));
  AMDemodulator1_SLICE_1405 \AMDemodulator1/SLICE_1405 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1870 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1871_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1870 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1871_17 ), .FCI(\AMDemodulator1/n11525 ), 
    .F0(\AMDemodulator1/n380 ), .F1(\AMDemodulator1/d_out_d_11_N_1873_17 ));
  AMDemodulator1_SLICE_1406 \AMDemodulator1/SLICE_1406 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1871_17 ), .A1(\AMDemodulator1/n322 ), 
    .C0(\AMDemodulator1/n323 ), .B0(\AMDemodulator1/d_out_d_11_N_1871_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11524 ), 
    .F0(\AMDemodulator1/n382 ), .F1(\AMDemodulator1/n381 ), 
    .FCO(\AMDemodulator1/n11525 ));
  AMDemodulator1_SLICE_1407 \AMDemodulator1/SLICE_1407 ( 
    .C1(\AMDemodulator1/n324 ), .B1(\AMDemodulator1/d_out_d_11_N_1871_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n325 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1871_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11523 ), 
    .F0(\AMDemodulator1/n384 ), .F1(\AMDemodulator1/n383 ), 
    .FCO(\AMDemodulator1/n11524 ));
  AMDemodulator1_SLICE_1408 \AMDemodulator1/SLICE_1408 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1871_17 ), .A1(\AMDemodulator1/n326 ), 
    .A0(\AMDemodulator1/n12271 ), .FCI(\AMDemodulator1/n11522 ), 
    .F0(\AMDemodulator1/n386 ), .F1(\AMDemodulator1/n385 ), 
    .FCO(\AMDemodulator1/n11523 ));
  AMDemodulator1_SLICE_1409 \AMDemodulator1/SLICE_1409 ( 
    .A1(\AMDemodulator1/ISquare_21 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1871_17 ), 
    .A0(\AMDemodulator1/ISquare_20 ), .FCI(\AMDemodulator1/n11521 ), 
    .F1(\AMDemodulator1/n387 ), .FCO(\AMDemodulator1/n11522 ));
  AMDemodulator1_SLICE_1410 \AMDemodulator1/SLICE_1410 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1871_17 ), .FCO(\AMDemodulator1/n11521 ));
  AMDemodulator1_SLICE_1411 \AMDemodulator1/SLICE_1411 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1878 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1878 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1879_17 ), .FCI(\AMDemodulator1/n11515 ), 
    .F0(\AMDemodulator1/n612 ), .F1(\AMDemodulator1/d_out_d_11_N_1881_17 ));
  AMDemodulator1_SLICE_1412 \AMDemodulator1/SLICE_1412 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1879_17 ), .A1(\AMDemodulator1/n554 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1879_17 ), .A0(\AMDemodulator1/n555 ), 
    .FCI(\AMDemodulator1/n11514 ), .F0(\AMDemodulator1/n614 ), 
    .F1(\AMDemodulator1/n613 ), .FCO(\AMDemodulator1/n11515 ));
  AMDemodulator1_SLICE_1413 \AMDemodulator1/SLICE_1413 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1879_17 ), .A1(\AMDemodulator1/n556 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1879_17 ), .A0(\AMDemodulator1/n557 ), 
    .FCI(\AMDemodulator1/n11513 ), .F0(\AMDemodulator1/n616 ), 
    .F1(\AMDemodulator1/n615 ), .FCO(\AMDemodulator1/n11514 ));
  AMDemodulator1_SLICE_1414 \AMDemodulator1/SLICE_1414 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1879_17 ), .A1(\AMDemodulator1/n558 ), 
    .C0(\AMDemodulator1/n559 ), .B0(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11512 ), 
    .F0(\AMDemodulator1/n618 ), .F1(\AMDemodulator1/n617 ), 
    .FCO(\AMDemodulator1/n11513 ));
  AMDemodulator1_SLICE_1415 \AMDemodulator1/SLICE_1415 ( 
    .C1(\AMDemodulator1/n560 ), .B1(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n561 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11511 ), 
    .F0(\AMDemodulator1/n620 ), .F1(\AMDemodulator1/n619 ), 
    .FCO(\AMDemodulator1/n11512 ));
  AMDemodulator1_SLICE_1416 \AMDemodulator1/SLICE_1416 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1879_17 ), .A1(\AMDemodulator1/n562 ), 
    .C0(\AMDemodulator1/n563 ), .B0(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1871_17 ), .FCI(\AMDemodulator1/n11510 ), 
    .F0(\AMDemodulator1/n622 ), .F1(\AMDemodulator1/n621 ), 
    .FCO(\AMDemodulator1/n11511 ));
  AMDemodulator1_SLICE_1417 \AMDemodulator1/SLICE_1417 ( 
    .C1(\AMDemodulator1/n564 ), .B1(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1873_17 ), .C0(\AMDemodulator1/n565 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1875_17 ), .FCI(\AMDemodulator1/n11509 ), 
    .F0(\AMDemodulator1/n624 ), .F1(\AMDemodulator1/n623 ), 
    .FCO(\AMDemodulator1/n11510 ));
  AMDemodulator1_SLICE_1418 \AMDemodulator1/SLICE_1418 ( 
    .C1(\AMDemodulator1/n566 ), .B1(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1877_17 ), .A0(\AMDemodulator1/n567 ), 
    .FCI(\AMDemodulator1/n11508 ), .F0(\AMDemodulator1/n626 ), 
    .F1(\AMDemodulator1/n625 ), .FCO(\AMDemodulator1/n11509 ));
  AMDemodulator1_SLICE_1419 \AMDemodulator1/SLICE_1419 ( 
    .A1(\AMDemodulator1/ISquare_13 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .A0(\AMDemodulator1/ISquare_12 ), .FCI(\AMDemodulator1/n11507 ), 
    .F1(\AMDemodulator1/n627 ), .FCO(\AMDemodulator1/n11508 ));
  AMDemodulator1_SLICE_1420 \AMDemodulator1/SLICE_1420 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1879_17 ), .FCO(\AMDemodulator1/n11507 ));
  AMDemodulator1_SLICE_1421 \AMDemodulator1/SLICE_1421 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1883_17 ), .A1(\AMDemodulator1/n672 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), .A0(\AMDemodulator1/n673 ), 
    .FCI(\AMDemodulator1/n11501 ), .F0(\AMDemodulator1/n732 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1885_17 ));
  AMDemodulator1_SLICE_1422 \AMDemodulator1/SLICE_1422 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1883_17 ), .A1(\AMDemodulator1/n674 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), .A0(\AMDemodulator1/n675 ), 
    .FCI(\AMDemodulator1/n11500 ), .F0(\AMDemodulator1/n734 ), 
    .F1(\AMDemodulator1/n733 ), .FCO(\AMDemodulator1/n11501 ));
  AMDemodulator1_SLICE_1423 \AMDemodulator1/SLICE_1423 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1883_17 ), .A1(\AMDemodulator1/n676 ), 
    .C0(\AMDemodulator1/n677 ), .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11499 ), 
    .F0(\AMDemodulator1/n736 ), .F1(\AMDemodulator1/n735 ), 
    .FCO(\AMDemodulator1/n11500 ));
  AMDemodulator1_SLICE_1424 \AMDemodulator1/SLICE_1424 ( 
    .C1(\AMDemodulator1/n678 ), .B1(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n679 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11498 ), 
    .F0(\AMDemodulator1/n738 ), .F1(\AMDemodulator1/n737 ), 
    .FCO(\AMDemodulator1/n11499 ));
  AMDemodulator1_SLICE_1425 \AMDemodulator1/SLICE_1425 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1883_17 ), .A1(\AMDemodulator1/n680 ), 
    .C0(\AMDemodulator1/n681 ), .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1871_17 ), .FCI(\AMDemodulator1/n11497 ), 
    .F0(\AMDemodulator1/n740 ), .F1(\AMDemodulator1/n739 ), 
    .FCO(\AMDemodulator1/n11498 ));
  AMDemodulator1_SLICE_1426 \AMDemodulator1/SLICE_1426 ( 
    .C1(\AMDemodulator1/n682 ), .B1(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1873_17 ), .C0(\AMDemodulator1/n683 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1875_17 ), .FCI(\AMDemodulator1/n11496 ), 
    .F0(\AMDemodulator1/n742 ), .F1(\AMDemodulator1/n741 ), 
    .FCO(\AMDemodulator1/n11497 ));
  AMDemodulator1_SLICE_1427 \AMDemodulator1/SLICE_1427 ( 
    .C1(\AMDemodulator1/n684 ), .B1(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1877_17 ), .C0(\AMDemodulator1/n685 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1879_17 ), .FCI(\AMDemodulator1/n11495 ), 
    .F0(\AMDemodulator1/n744 ), .F1(\AMDemodulator1/n743 ), 
    .FCO(\AMDemodulator1/n11496 ));
  AMDemodulator1_SLICE_1428 \AMDemodulator1/SLICE_1428 ( 
    .C1(\AMDemodulator1/n686 ), .B1(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A0(\AMDemodulator1/n687 ), 
    .FCI(\AMDemodulator1/n11494 ), .F0(\AMDemodulator1/n746 ), 
    .F1(\AMDemodulator1/n745 ), .FCO(\AMDemodulator1/n11495 ));
  AMDemodulator1_SLICE_1429 \AMDemodulator1/SLICE_1429 ( 
    .A1(\AMDemodulator1/ISquare_9 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A0(\AMDemodulator1/ISquare_8 ), .FCI(\AMDemodulator1/n11493 ), 
    .F1(\AMDemodulator1/n747 ), .FCO(\AMDemodulator1/n11494 ));
  AMDemodulator1_SLICE_1430 \AMDemodulator1/SLICE_1430 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1883_17 ), .FCO(\AMDemodulator1/n11493 ));
  AMDemodulator1_SLICE_1431 \AMDemodulator1/SLICE_1431 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A1(\AMDemodulator1/n922 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1883_17 ), .A0(\AMDemodulator1/n923 ), 
    .FCI(\AMDemodulator1/n12179 ), .FCO(\AMDemodulator1/n12180 ));
  AMDemodulator1_SLICE_1432 \AMDemodulator1/SLICE_1432 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1885_17 ), .A1(\AMDemodulator1/n924 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1887_17 ), .A0(\AMDemodulator1/n925 ), 
    .FCI(\AMDemodulator1/n12178 ), .FCO(\AMDemodulator1/n12179 ));
  AMDemodulator1_SLICE_1433 \AMDemodulator1/SLICE_1433 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), .A1(\AMDemodulator1/n926 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1891_17 ), .A0(\AMDemodulator1/n927 ), 
    .FCI(\AMDemodulator1/n12177 ), .FCO(\AMDemodulator1/n12178 ));
  AMDemodulator1_SLICE_1434 \AMDemodulator1/SLICE_1434 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1891_17 ), 
    .A1(\AMDemodulator1/ISquare_1 ), .A0(\AMDemodulator1/ISquare_0 ), 
    .FCO(\AMDemodulator1/n12177 ));
  AMDemodulator1_SLICE_1435 \AMDemodulator1/SLICE_1435 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1876 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1877_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1876 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1877_17 ), .FCI(\AMDemodulator1/n12175 ), 
    .F0(\AMDemodulator1/n554 ), .F1(\AMDemodulator1/d_out_d_11_N_1879_17 ));
  AMDemodulator1_SLICE_1436 \AMDemodulator1/SLICE_1436 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1877_17 ), .A1(\AMDemodulator1/n496 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1877_17 ), .A0(\AMDemodulator1/n497 ), 
    .FCI(\AMDemodulator1/n12174 ), .F0(\AMDemodulator1/n556 ), 
    .F1(\AMDemodulator1/n555 ), .FCO(\AMDemodulator1/n12175 ));
  AMDemodulator1_SLICE_1437 \AMDemodulator1/SLICE_1437 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1877_17 ), .A1(\AMDemodulator1/n498 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1877_17 ), .A0(\AMDemodulator1/n499 ), 
    .FCI(\AMDemodulator1/n12173 ), .F0(\AMDemodulator1/n558 ), 
    .F1(\AMDemodulator1/n557 ), .FCO(\AMDemodulator1/n12174 ));
  AMDemodulator1_SLICE_1438 \AMDemodulator1/SLICE_1438 ( 
    .C1(\AMDemodulator1/n500 ), .B1(\AMDemodulator1/d_out_d_11_N_1877_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n501 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1877_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12172 ), 
    .F0(\AMDemodulator1/n560 ), .F1(\AMDemodulator1/n559 ), 
    .FCO(\AMDemodulator1/n12173 ));
  AMDemodulator1_SLICE_1439 \AMDemodulator1/SLICE_1439 ( 
    .C1(\AMDemodulator1/n502 ), .B1(\AMDemodulator1/d_out_d_11_N_1877_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1877_17 ), .A0(\AMDemodulator1/n503 ), 
    .FCI(\AMDemodulator1/n12171 ), .F0(\AMDemodulator1/n562 ), 
    .F1(\AMDemodulator1/n561 ), .FCO(\AMDemodulator1/n12172 ));
  AMDemodulator1_SLICE_1440 \AMDemodulator1/SLICE_1440 ( 
    .C1(\AMDemodulator1/n504 ), .B1(\AMDemodulator1/d_out_d_11_N_1877_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1871_17 ), .C0(\AMDemodulator1/n505 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1877_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1873_17 ), .FCI(\AMDemodulator1/n12170 ), 
    .F0(\AMDemodulator1/n564 ), .F1(\AMDemodulator1/n563 ), 
    .FCO(\AMDemodulator1/n12171 ));
  AMDemodulator1_SLICE_1441 \AMDemodulator1/SLICE_1441 ( 
    .C1(\AMDemodulator1/n506 ), .B1(\AMDemodulator1/d_out_d_11_N_1877_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1875_17 ), .A0(\AMDemodulator1/n507 ), 
    .FCI(\AMDemodulator1/n12169 ), .F0(\AMDemodulator1/n566 ), 
    .F1(\AMDemodulator1/n565 ), .FCO(\AMDemodulator1/n12170 ));
  AMDemodulator1_SLICE_1442 \AMDemodulator1/SLICE_1442 ( 
    .A1(\AMDemodulator1/ISquare_15 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1877_17 ), 
    .A0(\AMDemodulator1/ISquare_14 ), .FCI(\AMDemodulator1/n12168 ), 
    .F1(\AMDemodulator1/n567 ), .FCO(\AMDemodulator1/n12169 ));
  AMDemodulator1_SLICE_1443 \AMDemodulator1/SLICE_1443 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1877_17 ), .FCO(\AMDemodulator1/n12168 ));
  AMDemodulator1_SLICE_1444 \AMDemodulator1/SLICE_1444 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), .A1(\AMDemodulator1/n852 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1889_17 ), .A0(\AMDemodulator1/n853 ), 
    .FCI(\AMDemodulator1/n12162 ), .F0(\AMDemodulator1/n912 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1891_17 ));
  AMDemodulator1_SLICE_1445 \AMDemodulator1/SLICE_1445 ( 
    .C1(\AMDemodulator1/n854 ), .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n855 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12161 ), 
    .F0(\AMDemodulator1/n914 ), .F1(\AMDemodulator1/n913 ), 
    .FCO(\AMDemodulator1/n12162 ));
  AMDemodulator1_SLICE_1446 \AMDemodulator1/SLICE_1446 ( 
    .C1(\AMDemodulator1/n856 ), .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1889_17 ), .A0(\AMDemodulator1/n857 ), 
    .FCI(\AMDemodulator1/n12160 ), .F0(\AMDemodulator1/n916 ), 
    .F1(\AMDemodulator1/n915 ), .FCO(\AMDemodulator1/n12161 ));
  AMDemodulator1_SLICE_1447 \AMDemodulator1/SLICE_1447 ( 
    .C1(\AMDemodulator1/n858 ), .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1871_17 ), .C0(\AMDemodulator1/n859 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1873_17 ), .FCI(\AMDemodulator1/n12159 ), 
    .F0(\AMDemodulator1/n918 ), .F1(\AMDemodulator1/n917 ), 
    .FCO(\AMDemodulator1/n12160 ));
  AMDemodulator1_SLICE_1448 \AMDemodulator1/SLICE_1448 ( 
    .C1(\AMDemodulator1/n860 ), .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1875_17 ), .C0(\AMDemodulator1/n861 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1877_17 ), .FCI(\AMDemodulator1/n12158 ), 
    .F0(\AMDemodulator1/n920 ), .F1(\AMDemodulator1/n919 ), 
    .FCO(\AMDemodulator1/n12159 ));
  AMDemodulator1_SLICE_1449 \AMDemodulator1/SLICE_1449 ( 
    .C1(\AMDemodulator1/n862 ), .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1879_17 ), .C0(\AMDemodulator1/n863 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1881_17 ), .FCI(\AMDemodulator1/n12157 ), 
    .F0(\AMDemodulator1/n922 ), .F1(\AMDemodulator1/n921 ), 
    .FCO(\AMDemodulator1/n12158 ));
  AMDemodulator1_SLICE_1450 \AMDemodulator1/SLICE_1450 ( 
    .C1(\AMDemodulator1/n864 ), .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1883_17 ), .C0(\AMDemodulator1/n865 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1885_17 ), .FCI(\AMDemodulator1/n12156 ), 
    .F0(\AMDemodulator1/n924 ), .F1(\AMDemodulator1/n923 ), 
    .FCO(\AMDemodulator1/n12157 ));
  AMDemodulator1_SLICE_1451 \AMDemodulator1/SLICE_1451 ( 
    .C1(\AMDemodulator1/n866 ), .B1(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1887_17 ), .A0(\AMDemodulator1/n867 ), 
    .FCI(\AMDemodulator1/n12155 ), .F0(\AMDemodulator1/n926 ), 
    .F1(\AMDemodulator1/n925 ), .FCO(\AMDemodulator1/n12156 ));
  AMDemodulator1_SLICE_1452 \AMDemodulator1/SLICE_1452 ( 
    .A1(\AMDemodulator1/ISquare_3 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .A0(\AMDemodulator1/ISquare_2 ), .FCI(\AMDemodulator1/n12154 ), 
    .F1(\AMDemodulator1/n927 ), .FCO(\AMDemodulator1/n12155 ));
  AMDemodulator1_SLICE_1453 \AMDemodulator1/SLICE_1453 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1889_17 ), .FCO(\AMDemodulator1/n12154 ));
  AMDemodulator1_SLICE_1454 \AMDemodulator1/SLICE_1454 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A1(\AMDemodulator1/n612 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A0(\AMDemodulator1/n613 ), 
    .FCI(\AMDemodulator1/n12148 ), .F0(\AMDemodulator1/n672 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1883_17 ));
  AMDemodulator1_SLICE_1455 \AMDemodulator1/SLICE_1455 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A1(\AMDemodulator1/n614 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A0(\AMDemodulator1/n615 ), 
    .FCI(\AMDemodulator1/n12147 ), .F0(\AMDemodulator1/n674 ), 
    .F1(\AMDemodulator1/n673 ), .FCO(\AMDemodulator1/n12148 ));
  AMDemodulator1_SLICE_1456 \AMDemodulator1/SLICE_1456 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A1(\AMDemodulator1/n616 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A0(\AMDemodulator1/n617 ), 
    .FCI(\AMDemodulator1/n12146 ), .F0(\AMDemodulator1/n676 ), 
    .F1(\AMDemodulator1/n675 ), .FCO(\AMDemodulator1/n12147 ));
  AMDemodulator1_SLICE_1457 \AMDemodulator1/SLICE_1457 ( 
    .C1(\AMDemodulator1/n618 ), .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n619 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12145 ), 
    .F0(\AMDemodulator1/n678 ), .F1(\AMDemodulator1/n677 ), 
    .FCO(\AMDemodulator1/n12146 ));
  AMDemodulator1_SLICE_1458 \AMDemodulator1/SLICE_1458 ( 
    .C1(\AMDemodulator1/n620 ), .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1881_17 ), .A0(\AMDemodulator1/n621 ), 
    .FCI(\AMDemodulator1/n12144 ), .F0(\AMDemodulator1/n680 ), 
    .F1(\AMDemodulator1/n679 ), .FCO(\AMDemodulator1/n12145 ));
  AMDemodulator1_SLICE_1459 \AMDemodulator1/SLICE_1459 ( 
    .C1(\AMDemodulator1/n622 ), .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1871_17 ), .C0(\AMDemodulator1/n623 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1873_17 ), .FCI(\AMDemodulator1/n12143 ), 
    .F0(\AMDemodulator1/n682 ), .F1(\AMDemodulator1/n681 ), 
    .FCO(\AMDemodulator1/n12144 ));
  AMDemodulator1_SLICE_1460 \AMDemodulator1/SLICE_1460 ( 
    .C1(\AMDemodulator1/n624 ), .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1875_17 ), .C0(\AMDemodulator1/n625 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1877_17 ), .FCI(\AMDemodulator1/n12142 ), 
    .F0(\AMDemodulator1/n684 ), .F1(\AMDemodulator1/n683 ), 
    .FCO(\AMDemodulator1/n12143 ));
  AMDemodulator1_SLICE_1461 \AMDemodulator1/SLICE_1461 ( 
    .C1(\AMDemodulator1/n626 ), .B1(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1879_17 ), .A0(\AMDemodulator1/n627 ), 
    .FCI(\AMDemodulator1/n12141 ), .F0(\AMDemodulator1/n686 ), 
    .F1(\AMDemodulator1/n685 ), .FCO(\AMDemodulator1/n12142 ));
  AMDemodulator1_SLICE_1462 \AMDemodulator1/SLICE_1462 ( 
    .A1(\AMDemodulator1/ISquare_11 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .A0(\AMDemodulator1/ISquare_10 ), .FCI(\AMDemodulator1/n12140 ), 
    .F1(\AMDemodulator1/n687 ), .FCO(\AMDemodulator1/n12141 ));
  AMDemodulator1_SLICE_1463 \AMDemodulator1/SLICE_1463 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1881_17 ), .FCO(\AMDemodulator1/n12140 ));
  AMDemodulator1_Multiplier2_SLICE_1464 
    \AMDemodulator1/Multiplier2/SLICE_1464 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_0 ));
  AMDemodulator1_Multiplier2_SLICE_1465 
    \AMDemodulator1/Multiplier2/SLICE_1465 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_13 ));
  AMDemodulator1_Multiplier2_SLICE_1466 
    \AMDemodulator1/Multiplier2/SLICE_1466 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_2 ));
  AMDemodulator1_Multiplier2_SLICE_1467 
    \AMDemodulator1/Multiplier2/SLICE_1467 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_1 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_15 ));
  AMDemodulator1_Multiplier2_SLICE_1468 
    \AMDemodulator1/Multiplier2/SLICE_1468 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_4 ));
  AMDemodulator1_Multiplier2_SLICE_1469 
    \AMDemodulator1/Multiplier2/SLICE_1469 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_17 ));
  AMDemodulator1_Multiplier2_SLICE_1470 
    \AMDemodulator1/Multiplier2/SLICE_1470 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_6 ));
  AMDemodulator1_Multiplier2_SLICE_1471 
    \AMDemodulator1/Multiplier2/SLICE_1471 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_3 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_19 ));
  AMDemodulator1_Multiplier2_SLICE_1472 
    \AMDemodulator1/Multiplier2/SLICE_1472 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_8 ));
  AMDemodulator1_Multiplier2_SLICE_1473 
    \AMDemodulator1/Multiplier2/SLICE_1473 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_21 ));
  AMDemodulator1_Multiplier2_SLICE_1474 
    \AMDemodulator1/Multiplier2/SLICE_1474 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_10 ));
  AMDemodulator1_Multiplier2_SLICE_1475 
    \AMDemodulator1/Multiplier2/SLICE_1475 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_5 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_23 ));
  AMDemodulator1_Multiplier2_SLICE_1476 
    \AMDemodulator1/Multiplier2/SLICE_1476 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_2 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_2 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_2 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_2 ), 
    .Q1(\AMDemodulator1/Multiplier2/rego_o_2 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_1 ));
  AMDemodulator1_Multiplier2_SLICE_1477 
    \AMDemodulator1/Multiplier2/SLICE_1477 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_4 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_4 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_3 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_3 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_4 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_3 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_1 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_3 ), 
    .Q0(\AMDemodulator1/Multiplier2/rego_o_3 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_4 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_2 ));
  AMDemodulator1_Multiplier2_SLICE_1478 
    \AMDemodulator1/Multiplier2/SLICE_1478 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_6 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_6 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_5 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_6 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_2 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_5 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_5 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_6 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_3 ));
  AMDemodulator1_Multiplier2_SLICE_1479 
    \AMDemodulator1/Multiplier2/SLICE_1479 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_8 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_8 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_7 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_7 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_8 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_7 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_7 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_8 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_4 ));
  AMDemodulator1_Multiplier2_SLICE_1480 
    \AMDemodulator1/Multiplier2/SLICE_1480 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_10 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_10 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_9 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_9 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_10 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_9 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_9 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_5 ));
  AMDemodulator1_Multiplier2_SLICE_1481 
    \AMDemodulator1/Multiplier2/SLICE_1481 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_12 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_12 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_11 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_11 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_12 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_6 ));
  AMDemodulator1_Multiplier2_SLICE_1482 
    \AMDemodulator1/Multiplier2/SLICE_1482 ( 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_14 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_13 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_13 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_14 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_7 ));
  AMDemodulator1_Multiplier2_SLICE_1483 
    \AMDemodulator1/Multiplier2/SLICE_1483 ( 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_15 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_16 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_8 ));
  AMDemodulator1_Multiplier2_SLICE_1484 
    \AMDemodulator1/Multiplier2/SLICE_1484 ( 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_8 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_17 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_17 ));
  AMDemodulator1_Multiplier2_SLICE_1485 
    \AMDemodulator1/Multiplier2/SLICE_1485 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_6 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_6 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_6 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_6 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_1 ));
  AMDemodulator1_Multiplier2_SLICE_1486 
    \AMDemodulator1/Multiplier2/SLICE_1486 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_8 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_8 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_7 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_7 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_8 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_1 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_7 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_7 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_8 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_2 ));
  AMDemodulator1_Multiplier2_SLICE_1487 
    \AMDemodulator1/Multiplier2/SLICE_1487 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_10 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_10 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_9 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_9 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_10 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_2 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_9 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_9 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_3 ));
  AMDemodulator1_Multiplier2_SLICE_1488 
    \AMDemodulator1/Multiplier2/SLICE_1488 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_12 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_12 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_11 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_11 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_12 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_4 ));
  AMDemodulator1_Multiplier2_SLICE_1489 
    \AMDemodulator1/Multiplier2/SLICE_1489 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_14 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_14 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_13 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_13 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_14 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_5 ));
  AMDemodulator1_Multiplier2_SLICE_1490 
    \AMDemodulator1/Multiplier2/SLICE_1490 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_16 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_16 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_15 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_15 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_16 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_6 ));
  AMDemodulator1_Multiplier2_SLICE_1491 
    \AMDemodulator1/Multiplier2/SLICE_1491 ( 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_18 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_17 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_18 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_17 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_17 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_18 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_7 ));
  AMDemodulator1_Multiplier2_SLICE_1492 
    \AMDemodulator1/Multiplier2/SLICE_1492 ( 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_20 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_19 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_19 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_20 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_8 ));
  AMDemodulator1_Multiplier2_SLICE_1493 
    \AMDemodulator1/Multiplier2/SLICE_1493 ( 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_8 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_21 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_21 ));
  AMDemodulator1_Multiplier2_SLICE_1494 
    \AMDemodulator1/Multiplier2/SLICE_1494 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_10 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_10 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_10 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_1 ));
  AMDemodulator1_Multiplier2_SLICE_1495 
    \AMDemodulator1/Multiplier2/SLICE_1495 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_12 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_12 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_11 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_1 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_11 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_12 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_2 ));
  AMDemodulator1_Multiplier2_SLICE_1496 
    \AMDemodulator1/Multiplier2/SLICE_1496 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_14 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_14 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_13 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_2 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_13 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_14 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_3 ));
  AMDemodulator1_Multiplier2_SLICE_1497 
    \AMDemodulator1/Multiplier2/SLICE_1497 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_16 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_16 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_15 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_15 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_16 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_4 ));
  AMDemodulator1_Multiplier2_SLICE_1498 
    \AMDemodulator1/Multiplier2/SLICE_1498 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_18 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_18 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_17 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_17 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_18 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_17 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_17 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_18 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_5 ));
  AMDemodulator1_Multiplier2_SLICE_1499 
    \AMDemodulator1/Multiplier2/SLICE_1499 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_20 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_20 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_19 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_19 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_20 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_19 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_19 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_20 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_6 ));
  AMDemodulator1_Multiplier2_SLICE_1500 
    \AMDemodulator1/Multiplier2/SLICE_1500 ( 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_22 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_21 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_21 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_22 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_21 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_21 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_22 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_7 ));
  AMDemodulator1_Multiplier2_SLICE_1501 
    \AMDemodulator1/Multiplier2/SLICE_1501 ( 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_23 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_23 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_23 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_23 ));
  AMDemodulator1_Multiplier2_SLICE_1502 
    \AMDemodulator1/Multiplier2/SLICE_1502 ( 
    .B1(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_4 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_4 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_4 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_4 ), 
    .Q1(\AMDemodulator1/MultResult2_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_1 ));
  AMDemodulator1_Multiplier2_SLICE_1503 
    \AMDemodulator1/Multiplier2/SLICE_1503 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_6 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_6 ), 
    .B0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_5 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_6 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_5 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_1 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_5 ), 
    .Q0(\AMDemodulator1/MultResult2_5 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_6 ), 
    .Q1(\AMDemodulator1/MultResult2_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_2 ));
  AMDemodulator1_Multiplier2_SLICE_1504 
    \AMDemodulator1/Multiplier2/SLICE_1504 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_8 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_8 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_7 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_7 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_7 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_2 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_7 ), 
    .Q0(\AMDemodulator1/MultResult2_7 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_3 ));
  AMDemodulator1_Multiplier2_SLICE_1505 
    \AMDemodulator1/Multiplier2/SLICE_1505 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_10 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_10 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_9 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_9 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_9 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_4 ));
  AMDemodulator1_Multiplier2_SLICE_1506 
    \AMDemodulator1/Multiplier2/SLICE_1506 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_12 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_12 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_11 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_11 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_5 ));
  AMDemodulator1_Multiplier2_SLICE_1507 
    \AMDemodulator1/Multiplier2/SLICE_1507 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_14 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_14 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_13 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_13 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_6 ));
  AMDemodulator1_Multiplier2_SLICE_1508 
    \AMDemodulator1/Multiplier2/SLICE_1508 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_16 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_16 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_15 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_15 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_7 ));
  AMDemodulator1_Multiplier2_SLICE_1509 
    \AMDemodulator1/Multiplier2/SLICE_1509 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_18 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_17 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_17 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_17 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_8 ));
  AMDemodulator1_Multiplier2_SLICE_1510 
    \AMDemodulator1/Multiplier2/SLICE_1510 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_20 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_19 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_8 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_19 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_9 ));
  AMDemodulator1_Multiplier2_SLICE_1511 
    \AMDemodulator1/Multiplier2/SLICE_1511 ( 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_21 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_9 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_21 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_10 ));
  AMDemodulator1_Multiplier2_SLICE_1512 
    \AMDemodulator1/Multiplier2/SLICE_1512 ( 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_10 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_23 ));
  AMDemodulator1_Multiplier2_SLICE_1513 
    \AMDemodulator1/Multiplier2/SLICE_1513 ( 
    .B1(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_8 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_8 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_8 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_8 ), 
    .Q1(\AMDemodulator1/MultResult2_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_1 ));
  AMDemodulator1_Multiplier2_SLICE_1514 
    \AMDemodulator1/Multiplier2/SLICE_1514 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_10 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_10 ), 
    .B0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_9 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_9 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_10 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_9 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_1 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_9 ), 
    .Q0(\AMDemodulator1/MultResult2_9 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_10 ), 
    .Q1(\AMDemodulator1/MultResult2_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_2 ));
  AMDemodulator1_Multiplier2_SLICE_1515 
    \AMDemodulator1/Multiplier2/SLICE_1515 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_12 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_12 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_11 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_11 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_2 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_11 ), 
    .Q0(\AMDemodulator1/MultResult2_11 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_12 ), 
    .Q1(\AMDemodulator1/MultResult2_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_3 ));
  AMDemodulator1_Multiplier2_SLICE_1516 
    \AMDemodulator1/Multiplier2/SLICE_1516 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_14 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_14 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_13 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_13 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_3 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_13 ), 
    .Q0(\AMDemodulator1/MultResult2_13 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_14 ), 
    .Q1(\AMDemodulator1/MultResult2_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_4 ));
  AMDemodulator1_Multiplier2_SLICE_1517 
    \AMDemodulator1/Multiplier2/SLICE_1517 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_16 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_16 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_15 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_15 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_4 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_15 ), 
    .Q0(\AMDemodulator1/MultResult2_15 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_16 ), 
    .Q1(\AMDemodulator1/MultResult2_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_5 ));
  AMDemodulator1_Multiplier2_SLICE_1518 
    \AMDemodulator1/Multiplier2/SLICE_1518 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_18 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_18 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_17 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_18 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_17 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_5 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_17 ), 
    .Q0(\AMDemodulator1/MultResult2_17 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_18 ), 
    .Q1(\AMDemodulator1/MultResult2_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_6 ));
  AMDemodulator1_Multiplier2_SLICE_1519 
    \AMDemodulator1/Multiplier2/SLICE_1519 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_20 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_20 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_19 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_20 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_19 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_6 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_19 ), 
    .Q0(\AMDemodulator1/MultResult2_19 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_20 ), 
    .Q1(\AMDemodulator1/MultResult2_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_7 ));
  AMDemodulator1_Multiplier2_SLICE_1520 
    \AMDemodulator1/Multiplier2/SLICE_1520 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_22 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_22 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_21 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_21 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_22 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_21 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_7 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_21 ), 
    .Q0(\AMDemodulator1/MultResult2_21 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_22 ), 
    .Q1(\AMDemodulator1/MultResult2_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_8 ));
  AMDemodulator1_Multiplier2_SLICE_1521 
    \AMDemodulator1/Multiplier2/SLICE_1521 ( 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_23 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_23 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_23 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_8 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_23 ), 
    .Q0(\AMDemodulator1/MultResult2_23 ));
  AMDemodulator1_Multiplier2_SLICE_1522 
    \AMDemodulator1/Multiplier2/SLICE_1522 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_1 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_1 ), 
    .Q0(\AMDemodulator1/Multiplier2/rego_o_1 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_2 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco ));
  AMDemodulator1_Multiplier2_SLICE_1523 
    \AMDemodulator1/Multiplier2/SLICE_1523 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_3 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_1 ));
  AMDemodulator1_Multiplier2_SLICE_1524 
    \AMDemodulator1/Multiplier2/SLICE_1524 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_1 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_5 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_2 ));
  AMDemodulator1_Multiplier2_SLICE_1525 
    \AMDemodulator1/Multiplier2/SLICE_1525 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_3 ));
  AMDemodulator1_Multiplier2_SLICE_1526 
    \AMDemodulator1/Multiplier2/SLICE_1526 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_3 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_4 ));
  AMDemodulator1_Multiplier2_SLICE_1527 
    \AMDemodulator1/Multiplier2/SLICE_1527 ( .D1(VCC_net), .C1(VCC_net), 
    .B1(VCC_net), .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n1 ), 
    .D0(VCC_net), .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco ));
  AMDemodulator1_Multiplier2_SLICE_1528 
    \AMDemodulator1/Multiplier2/SLICE_1528 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_3 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_5 ));
  AMDemodulator1_Multiplier2_SLICE_1529 
    \AMDemodulator1/Multiplier2/SLICE_1529 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_5 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_5 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_6 ));
  AMDemodulator1_Multiplier2_SLICE_1530 
    \AMDemodulator1/Multiplier2/SLICE_1530 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_6 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_7 ));
  AMDemodulator1_Multiplier2_SLICE_1531 
    \AMDemodulator1/Multiplier2/SLICE_1531 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_7 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_8 ));
  AMDemodulator1_Multiplier2_SLICE_1532 
    \AMDemodulator1/Multiplier2/SLICE_1532 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_8 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_9 ));
  AMDemodulator1_Multiplier2_SLICE_1533 
    \AMDemodulator1/Multiplier2/SLICE_1533 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_9 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_1 ));
  AMDemodulator1_Multiplier2_SLICE_1534 
    \AMDemodulator1/Multiplier2/SLICE_1534 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_5 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_5 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_10 ));
  AMDemodulator1_Multiplier2_SLICE_1535 
    \AMDemodulator1/Multiplier2/SLICE_1535 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_10 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_11 ));
  AMDemodulator1_Multiplier2_SLICE_1536 
    \AMDemodulator1/Multiplier2/SLICE_1536 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_12 ));
  AMDemodulator1_Multiplier2_SLICE_1537 
    \AMDemodulator1/Multiplier2/SLICE_1537 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_12 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_13 ));
  AMDemodulator1_Multiplier2_SLICE_1538 
    \AMDemodulator1/Multiplier2/SLICE_1538 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_13 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_14 ));
  AMDemodulator1_Multiplier2_SLICE_1539 
    \AMDemodulator1/Multiplier2/SLICE_1539 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_14 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_2 ));
  AMDemodulator1_Multiplier2_SLICE_1540 
    \AMDemodulator1/Multiplier2/SLICE_1540 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_6 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_15 ));
  AMDemodulator1_Multiplier2_SLICE_1541 
    \AMDemodulator1/Multiplier2/SLICE_1541 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_15 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_16 ));
  AMDemodulator1_Multiplier2_SLICE_1542 
    \AMDemodulator1/Multiplier2/SLICE_1542 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_16 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_17 ));
  AMDemodulator1_Multiplier2_SLICE_1543 
    \AMDemodulator1/Multiplier2/SLICE_1543 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_17 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_18 ));
  AMDemodulator1_Multiplier2_SLICE_1544 
    \AMDemodulator1/Multiplier2/SLICE_1544 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_18 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_19 ));
  AMDemodulator1_Multiplier2_SLICE_1545 
    \AMDemodulator1/Multiplier2/SLICE_1545 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_19 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_17 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_3 ));
  AMDemodulator1_Multiplier2_SLICE_1546 
    \AMDemodulator1/Multiplier2/SLICE_1546 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_8 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_9 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_20 ));
  AMDemodulator1_Multiplier2_SLICE_1547 
    \AMDemodulator1/Multiplier2/SLICE_1547 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_20 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_21 ));
  AMDemodulator1_Multiplier2_SLICE_1548 
    \AMDemodulator1/Multiplier2/SLICE_1548 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_21 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_22 ));
  AMDemodulator1_Multiplier2_SLICE_1549 
    \AMDemodulator1/Multiplier2/SLICE_1549 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_22 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_23 ));
  AMDemodulator1_Multiplier2_SLICE_1550 
    \AMDemodulator1/Multiplier2/SLICE_1550 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_23 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_17 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_24 ));
  AMDemodulator1_Multiplier2_SLICE_1551 
    \AMDemodulator1/Multiplier2/SLICE_1551 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_24 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_19 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_4 ));
  AMDemodulator1_Multiplier2_SLICE_1552 
    \AMDemodulator1/Multiplier2/SLICE_1552 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_10 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_25 ));
  AMDemodulator1_Multiplier2_SLICE_1553 
    \AMDemodulator1/Multiplier2/SLICE_1553 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_25 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_26 ));
  AMDemodulator1_Multiplier2_SLICE_1554 
    \AMDemodulator1/Multiplier2/SLICE_1554 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_26 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_27 ));
  AMDemodulator1_Multiplier2_SLICE_1555 
    \AMDemodulator1/Multiplier2/SLICE_1555 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_27 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_17 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_28 ));
  AMDemodulator1_Multiplier2_SLICE_1556 
    \AMDemodulator1/Multiplier2/SLICE_1556 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_28 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_19 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_29 ));
  AMDemodulator1_Multiplier2_SLICE_1557 
    \AMDemodulator1/Multiplier2/SLICE_1557 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_11 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n2 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_29 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_21 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_5 ));
  AMDemodulator1_Multiplier1_SLICE_1558 
    \AMDemodulator1/Multiplier1/SLICE_1558 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_0 ));
  AMDemodulator1_Multiplier1_SLICE_1559 
    \AMDemodulator1/Multiplier1/SLICE_1559 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_13 ));
  AMDemodulator1_Multiplier1_SLICE_1560 
    \AMDemodulator1/Multiplier1/SLICE_1560 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_2 ));
  AMDemodulator1_Multiplier1_SLICE_1561 
    \AMDemodulator1/Multiplier1/SLICE_1561 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_1 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_15 ));
  AMDemodulator1_Multiplier1_SLICE_1562 
    \AMDemodulator1/Multiplier1/SLICE_1562 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_4 ));
  AMDemodulator1_Multiplier1_SLICE_1563 
    \AMDemodulator1/Multiplier1/SLICE_1563 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_17 ));
  AMDemodulator1_Multiplier1_SLICE_1564 
    \AMDemodulator1/Multiplier1/SLICE_1564 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_6 ));
  AMDemodulator1_Multiplier1_SLICE_1565 
    \AMDemodulator1/Multiplier1/SLICE_1565 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_3 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_19 ));
  AMDemodulator1_Multiplier1_SLICE_1566 
    \AMDemodulator1/Multiplier1/SLICE_1566 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_8 ));
  AMDemodulator1_Multiplier1_SLICE_1567 
    \AMDemodulator1/Multiplier1/SLICE_1567 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_21 ));
  AMDemodulator1_Multiplier1_SLICE_1568 
    \AMDemodulator1/Multiplier1/SLICE_1568 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_10 ));
  AMDemodulator1_Multiplier1_SLICE_1569 
    \AMDemodulator1/Multiplier1/SLICE_1569 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_5 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_23 ));
  AMDemodulator1_Multiplier1_SLICE_1570 
    \AMDemodulator1/Multiplier1/SLICE_1570 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_2 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_2 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_2 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_2 ), 
    .Q1(\AMDemodulator1/Multiplier1/rego_o_2 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_1 ));
  AMDemodulator1_Multiplier1_SLICE_1571 
    \AMDemodulator1/Multiplier1/SLICE_1571 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_4 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_4 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_3 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_3 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_4 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_3 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_1 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_3 ), 
    .Q0(\AMDemodulator1/Multiplier1/rego_o_3 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_4 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_2 ));
  AMDemodulator1_Multiplier1_SLICE_1572 
    \AMDemodulator1/Multiplier1/SLICE_1572 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_6 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_6 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_5 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_6 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_2 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_5 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_5 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_6 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_3 ));
  AMDemodulator1_Multiplier1_SLICE_1573 
    \AMDemodulator1/Multiplier1/SLICE_1573 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_8 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_8 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_7 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_7 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_8 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_7 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_7 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_8 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_4 ));
  AMDemodulator1_Multiplier1_SLICE_1574 
    \AMDemodulator1/Multiplier1/SLICE_1574 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_10 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_10 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_9 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_9 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_10 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_9 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_9 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_5 ));
  AMDemodulator1_Multiplier1_SLICE_1575 
    \AMDemodulator1/Multiplier1/SLICE_1575 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_12 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_12 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_11 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_11 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_12 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_6 ));
  AMDemodulator1_Multiplier1_SLICE_1576 
    \AMDemodulator1/Multiplier1/SLICE_1576 ( 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_14 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_13 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_13 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_14 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_7 ));
  AMDemodulator1_Multiplier1_SLICE_1577 
    \AMDemodulator1/Multiplier1/SLICE_1577 ( 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_15 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_16 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_8 ));
  AMDemodulator1_Multiplier1_SLICE_1578 
    \AMDemodulator1/Multiplier1/SLICE_1578 ( 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_8 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_17 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_17 ));
  AMDemodulator1_Multiplier1_SLICE_1579 
    \AMDemodulator1/Multiplier1/SLICE_1579 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_6 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_6 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_6 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_6 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_1 ));
  AMDemodulator1_Multiplier1_SLICE_1580 
    \AMDemodulator1/Multiplier1/SLICE_1580 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_8 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_8 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_7 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_7 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_8 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_1 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_7 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_7 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_8 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_2 ));
  AMDemodulator1_Multiplier1_SLICE_1581 
    \AMDemodulator1/Multiplier1/SLICE_1581 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_10 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_10 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_9 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_9 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_10 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_2 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_9 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_9 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_3 ));
  AMDemodulator1_Multiplier1_SLICE_1582 
    \AMDemodulator1/Multiplier1/SLICE_1582 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_12 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_12 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_11 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_11 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_12 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_4 ));
  AMDemodulator1_Multiplier1_SLICE_1583 
    \AMDemodulator1/Multiplier1/SLICE_1583 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_14 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_14 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_13 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_13 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_14 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_5 ));
  AMDemodulator1_Multiplier1_SLICE_1584 
    \AMDemodulator1/Multiplier1/SLICE_1584 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_16 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_16 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_15 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_15 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_16 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_6 ));
  AMDemodulator1_Multiplier1_SLICE_1585 
    \AMDemodulator1/Multiplier1/SLICE_1585 ( 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_18 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_17 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_18 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_17 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_17 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_18 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_7 ));
  AMDemodulator1_Multiplier1_SLICE_1586 
    \AMDemodulator1/Multiplier1/SLICE_1586 ( 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_20 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_19 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_19 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_20 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_8 ));
  AMDemodulator1_Multiplier1_SLICE_1587 
    \AMDemodulator1/Multiplier1/SLICE_1587 ( 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_8 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_21 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_21 ));
  AMDemodulator1_Multiplier1_SLICE_1588 
    \AMDemodulator1/Multiplier1/SLICE_1588 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_10 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_10 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_10 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_1 ));
  AMDemodulator1_Multiplier1_SLICE_1589 
    \AMDemodulator1/Multiplier1/SLICE_1589 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_12 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_12 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_11 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_1 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_11 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_12 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_2 ));
  AMDemodulator1_Multiplier1_SLICE_1590 
    \AMDemodulator1/Multiplier1/SLICE_1590 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_14 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_14 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_13 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_2 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_13 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_14 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_3 ));
  AMDemodulator1_Multiplier1_SLICE_1591 
    \AMDemodulator1/Multiplier1/SLICE_1591 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_16 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_16 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_15 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_15 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_16 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_4 ));
  AMDemodulator1_Multiplier1_SLICE_1592 
    \AMDemodulator1/Multiplier1/SLICE_1592 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_18 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_18 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_17 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_17 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_18 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_17 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_17 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_18 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_5 ));
  AMDemodulator1_Multiplier1_SLICE_1593 
    \AMDemodulator1/Multiplier1/SLICE_1593 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_20 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_20 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_19 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_19 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_20 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_19 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_19 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_20 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_6 ));
  AMDemodulator1_Multiplier1_SLICE_1594 
    \AMDemodulator1/Multiplier1/SLICE_1594 ( 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_22 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_21 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_21 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_22 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_21 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_21 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_22 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_7 ));
  AMDemodulator1_Multiplier1_SLICE_1595 
    \AMDemodulator1/Multiplier1/SLICE_1595 ( 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_23 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_23 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_23 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_23 ));
  AMDemodulator1_Multiplier1_SLICE_1596 
    \AMDemodulator1/Multiplier1/SLICE_1596 ( 
    .B1(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_4 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_4 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_4 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_4 ), 
    .Q1(\AMDemodulator1/MultResult1_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_1 ));
  AMDemodulator1_Multiplier1_SLICE_1597 
    \AMDemodulator1/Multiplier1/SLICE_1597 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_6 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_6 ), 
    .B0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_5 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_6 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_5 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_1 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_5 ), 
    .Q0(\AMDemodulator1/MultResult1_5 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_6 ), 
    .Q1(\AMDemodulator1/MultResult1_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_2 ));
  AMDemodulator1_Multiplier1_SLICE_1598 
    \AMDemodulator1/Multiplier1/SLICE_1598 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_8 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_8 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_7 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_7 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_7 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_2 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_7 ), 
    .Q0(\AMDemodulator1/MultResult1_7 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_3 ));
  AMDemodulator1_Multiplier1_SLICE_1599 
    \AMDemodulator1/Multiplier1/SLICE_1599 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_10 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_10 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_9 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_9 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_9 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_4 ));
  AMDemodulator1_Multiplier1_SLICE_1600 
    \AMDemodulator1/Multiplier1/SLICE_1600 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_12 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_12 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_11 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_11 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_5 ));
  AMDemodulator1_Multiplier1_SLICE_1601 
    \AMDemodulator1/Multiplier1/SLICE_1601 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_14 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_14 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_13 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_13 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_6 ));
  AMDemodulator1_Multiplier1_SLICE_1602 
    \AMDemodulator1/Multiplier1/SLICE_1602 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_16 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_16 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_15 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_15 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_7 ));
  AMDemodulator1_Multiplier1_SLICE_1603 
    \AMDemodulator1/Multiplier1/SLICE_1603 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_18 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_17 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_17 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_17 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_8 ));
  AMDemodulator1_Multiplier1_SLICE_1604 
    \AMDemodulator1/Multiplier1/SLICE_1604 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_20 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_19 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_8 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_19 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_9 ));
  AMDemodulator1_Multiplier1_SLICE_1605 
    \AMDemodulator1/Multiplier1/SLICE_1605 ( 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_21 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_9 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_21 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_10 ));
  AMDemodulator1_Multiplier1_SLICE_1606 
    \AMDemodulator1/Multiplier1/SLICE_1606 ( 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_10 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_23 ));
  AMDemodulator1_Multiplier1_SLICE_1607 
    \AMDemodulator1/Multiplier1/SLICE_1607 ( 
    .B1(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_8 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_8 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_8 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_8 ), 
    .Q1(\AMDemodulator1/MultResult1_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_1 ));
  AMDemodulator1_Multiplier1_SLICE_1608 
    \AMDemodulator1/Multiplier1/SLICE_1608 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_10 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_10 ), 
    .B0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_9 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_9 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_10 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_9 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_1 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_9 ), 
    .Q0(\AMDemodulator1/MultResult1_9 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_10 ), 
    .Q1(\AMDemodulator1/MultResult1_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_2 ));
  AMDemodulator1_Multiplier1_SLICE_1609 
    \AMDemodulator1/Multiplier1/SLICE_1609 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_12 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_12 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_11 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_11 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_2 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_11 ), 
    .Q0(\AMDemodulator1/MultResult1_11 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_12 ), 
    .Q1(\AMDemodulator1/MultResult1_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_3 ));
  AMDemodulator1_Multiplier1_SLICE_1610 
    \AMDemodulator1/Multiplier1/SLICE_1610 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_14 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_14 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_13 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_13 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_3 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_13 ), 
    .Q0(\AMDemodulator1/MultResult1_13 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_14 ), 
    .Q1(\AMDemodulator1/MultResult1_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_4 ));
  AMDemodulator1_Multiplier1_SLICE_1611 
    \AMDemodulator1/Multiplier1/SLICE_1611 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_16 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_16 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_15 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_15 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_4 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_15 ), 
    .Q0(\AMDemodulator1/MultResult1_15 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_16 ), 
    .Q1(\AMDemodulator1/MultResult1_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_5 ));
  AMDemodulator1_Multiplier1_SLICE_1612 
    \AMDemodulator1/Multiplier1/SLICE_1612 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_18 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_18 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_17 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_18 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_17 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_5 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_17 ), 
    .Q0(\AMDemodulator1/MultResult1_17 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_18 ), 
    .Q1(\AMDemodulator1/MultResult1_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_6 ));
  AMDemodulator1_Multiplier1_SLICE_1613 
    \AMDemodulator1/Multiplier1/SLICE_1613 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_20 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_20 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_19 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_20 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_19 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_6 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_19 ), 
    .Q0(\AMDemodulator1/MultResult1_19 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_20 ), 
    .Q1(\AMDemodulator1/MultResult1_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_7 ));
  AMDemodulator1_Multiplier1_SLICE_1614 
    \AMDemodulator1/Multiplier1/SLICE_1614 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_22 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_22 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_21 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_21 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_22 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_21 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_7 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_21 ), 
    .Q0(\AMDemodulator1/MultResult1_21 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_22 ), 
    .Q1(\AMDemodulator1/MultResult1_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_8 ));
  AMDemodulator1_Multiplier1_SLICE_1615 
    \AMDemodulator1/Multiplier1/SLICE_1615 ( 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_23 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_23 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_23 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_8 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_23 ), 
    .Q0(\AMDemodulator1/MultResult1_23 ));
  AMDemodulator1_Multiplier1_SLICE_1616 
    \AMDemodulator1/Multiplier1/SLICE_1616 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_1 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_1 ), 
    .Q0(\AMDemodulator1/Multiplier1/rego_o_1 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_2 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco ));
  AMDemodulator1_Multiplier1_SLICE_1617 
    \AMDemodulator1/Multiplier1/SLICE_1617 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_3 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_1 ));
  AMDemodulator1_Multiplier1_SLICE_1618 
    \AMDemodulator1/Multiplier1/SLICE_1618 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_1 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_5 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_2 ));
  AMDemodulator1_Multiplier1_SLICE_1619 
    \AMDemodulator1/Multiplier1/SLICE_1619 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_3 ));
  AMDemodulator1_Multiplier1_SLICE_1620 
    \AMDemodulator1/Multiplier1/SLICE_1620 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_3 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_4 ));
  AMDemodulator1_Multiplier1_SLICE_1621 
    \AMDemodulator1/Multiplier1/SLICE_1621 ( .D1(VCC_net), .C1(VCC_net), 
    .B1(VCC_net), .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n1 ), 
    .D0(VCC_net), .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco ));
  AMDemodulator1_Multiplier1_SLICE_1622 
    \AMDemodulator1/Multiplier1/SLICE_1622 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_3 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_5 ));
  AMDemodulator1_Multiplier1_SLICE_1623 
    \AMDemodulator1/Multiplier1/SLICE_1623 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_5 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_5 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_6 ));
  AMDemodulator1_Multiplier1_SLICE_1624 
    \AMDemodulator1/Multiplier1/SLICE_1624 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_6 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_7 ));
  AMDemodulator1_Multiplier1_SLICE_1625 
    \AMDemodulator1/Multiplier1/SLICE_1625 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_7 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_8 ));
  AMDemodulator1_Multiplier1_SLICE_1626 
    \AMDemodulator1/Multiplier1/SLICE_1626 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_8 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_9 ));
  AMDemodulator1_Multiplier1_SLICE_1627 
    \AMDemodulator1/Multiplier1/SLICE_1627 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_9 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_1 ));
  AMDemodulator1_Multiplier1_SLICE_1628 
    \AMDemodulator1/Multiplier1/SLICE_1628 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_5 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_5 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_10 ));
  AMDemodulator1_Multiplier1_SLICE_1629 
    \AMDemodulator1/Multiplier1/SLICE_1629 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_10 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_11 ));
  AMDemodulator1_Multiplier1_SLICE_1630 
    \AMDemodulator1/Multiplier1/SLICE_1630 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_12 ));
  AMDemodulator1_Multiplier1_SLICE_1631 
    \AMDemodulator1/Multiplier1/SLICE_1631 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_12 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_13 ));
  AMDemodulator1_Multiplier1_SLICE_1632 
    \AMDemodulator1/Multiplier1/SLICE_1632 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_13 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_14 ));
  AMDemodulator1_Multiplier1_SLICE_1633 
    \AMDemodulator1/Multiplier1/SLICE_1633 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_14 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_2 ));
  AMDemodulator1_Multiplier1_SLICE_1634 
    \AMDemodulator1/Multiplier1/SLICE_1634 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_6 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_15 ));
  AMDemodulator1_Multiplier1_SLICE_1635 
    \AMDemodulator1/Multiplier1/SLICE_1635 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_15 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_16 ));
  AMDemodulator1_Multiplier1_SLICE_1636 
    \AMDemodulator1/Multiplier1/SLICE_1636 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_16 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_17 ));
  AMDemodulator1_Multiplier1_SLICE_1637 
    \AMDemodulator1/Multiplier1/SLICE_1637 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_17 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_18 ));
  AMDemodulator1_Multiplier1_SLICE_1638 
    \AMDemodulator1/Multiplier1/SLICE_1638 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_18 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_19 ));
  AMDemodulator1_Multiplier1_SLICE_1639 
    \AMDemodulator1/Multiplier1/SLICE_1639 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_19 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_17 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_3 ));
  AMDemodulator1_Multiplier1_SLICE_1640 
    \AMDemodulator1/Multiplier1/SLICE_1640 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_8 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_9 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_20 ));
  AMDemodulator1_Multiplier1_SLICE_1641 
    \AMDemodulator1/Multiplier1/SLICE_1641 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_20 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_21 ));
  AMDemodulator1_Multiplier1_SLICE_1642 
    \AMDemodulator1/Multiplier1/SLICE_1642 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_21 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_22 ));
  AMDemodulator1_Multiplier1_SLICE_1643 
    \AMDemodulator1/Multiplier1/SLICE_1643 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_22 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_23 ));
  AMDemodulator1_Multiplier1_SLICE_1644 
    \AMDemodulator1/Multiplier1/SLICE_1644 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_23 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_17 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_24 ));
  AMDemodulator1_Multiplier1_SLICE_1645 
    \AMDemodulator1/Multiplier1/SLICE_1645 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_24 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_19 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_4 ));
  AMDemodulator1_Multiplier1_SLICE_1646 
    \AMDemodulator1/Multiplier1/SLICE_1646 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_10 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_25 ));
  AMDemodulator1_Multiplier1_SLICE_1647 
    \AMDemodulator1/Multiplier1/SLICE_1647 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_25 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_26 ));
  AMDemodulator1_Multiplier1_SLICE_1648 
    \AMDemodulator1/Multiplier1/SLICE_1648 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_26 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_27 ));
  AMDemodulator1_Multiplier1_SLICE_1649 
    \AMDemodulator1/Multiplier1/SLICE_1649 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_27 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_17 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_28 ));
  AMDemodulator1_Multiplier1_SLICE_1650 
    \AMDemodulator1/Multiplier1/SLICE_1650 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_28 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_19 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_29 ));
  AMDemodulator1_Multiplier1_SLICE_1651 
    \AMDemodulator1/Multiplier1/SLICE_1651 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_11 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n2 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_29 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_21 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_5 ));
  AMDemodulator1_SLICE_1652 \AMDemodulator1/SLICE_1652 ( 
    .B0(\AMDemodulator1/MultResult2_0 ), .A0(\AMDemodulator1/MultResult1_0 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1894_0 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/ISquare_31_N_1894_0 ), .Q0(\AMDemodulator1/ISquare_0 ));
  AMDemodulator1_SLICE_1653 \AMDemodulator1/SLICE_1653 ( .M1(CIC1_outSin_1), 
    .M0(CIC1_outSin_0), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataB_0 ), .Q1(\AMDemodulator1/MultDataB_1 ));
  AMDemodulator1_SLICE_1654 \AMDemodulator1/SLICE_1654 ( .M1(CIC1_outSin_3), 
    .M0(CIC1_outSin_2), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataB_2 ), .Q1(\AMDemodulator1/MultDataB_3 ));
  AMDemodulator1_SLICE_1655 \AMDemodulator1/SLICE_1655 ( .M1(CIC1_outSin_5), 
    .M0(CIC1_outSin_4), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataB_4 ), .Q1(\AMDemodulator1/MultDataB_5 ));
  AMDemodulator1_SLICE_1656 \AMDemodulator1/SLICE_1656 ( .M1(MYLED_c_1), 
    .M0(MYLED_c_0), .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/MultDataB_6 ), 
    .Q1(\AMDemodulator1/MultDataB_7 ));
  AMDemodulator1_SLICE_1657 \AMDemodulator1/SLICE_1657 ( .M1(MYLED_c_3), 
    .M0(MYLED_c_2), .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/MultDataB_8 ), 
    .Q1(\AMDemodulator1/MultDataB_9 ));
  AMDemodulator1_SLICE_1658 \AMDemodulator1/SLICE_1658 ( .M1(MYLED_c_5), 
    .M0(MYLED_c_4), .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/MultDataB_10 ), 
    .Q1(\AMDemodulator1/MultDataB_11 ));
  AMDemodulator1_SLICE_1659 \AMDemodulator1/SLICE_1659 ( .M1(CIC1_outCos_1), 
    .M0(CIC1_outCos_0), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_0 ), .Q1(\AMDemodulator1/MultDataC_1 ));
  AMDemodulator1_SLICE_1660 \AMDemodulator1/SLICE_1660 ( .M1(CIC1_outCos_3), 
    .M0(CIC1_outCos_2), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_2 ), .Q1(\AMDemodulator1/MultDataC_3 ));
  AMDemodulator1_SLICE_1661 \AMDemodulator1/SLICE_1661 ( .M1(CIC1_outCos_5), 
    .M0(CIC1_outCos_4), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_4 ), .Q1(\AMDemodulator1/MultDataC_5 ));
  AMDemodulator1_SLICE_1662 \AMDemodulator1/SLICE_1662 ( .M1(CIC1_outCos_7), 
    .M0(CIC1_outCos_6), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_6 ), .Q1(\AMDemodulator1/MultDataC_7 ));
  AMDemodulator1_SLICE_1663 \AMDemodulator1/SLICE_1663 ( .M1(CIC1_outCos_9), 
    .M0(CIC1_outCos_8), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_8 ), .Q1(\AMDemodulator1/MultDataC_9 ));
  AMDemodulator1_SLICE_1664 \AMDemodulator1/SLICE_1664 ( .M1(CIC1_outCos_11), 
    .M0(CIC1_outCos_10), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_10 ), .Q1(\AMDemodulator1/MultDataC_11 ));
  AMDemodulator1_Multiplier1_SLICE_1665 
    \AMDemodulator1/Multiplier1/SLICE_1665 ( 
    .M1(\AMDemodulator1/Multiplier1/rego_o_1 ), 
    .M0(\AMDemodulator1/Multiplier1/rego_o_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult1_0 ), .Q1(\AMDemodulator1/MultResult1_1 ));
  AMDemodulator1_Multiplier1_SLICE_1666 
    \AMDemodulator1/Multiplier1/SLICE_1666 ( 
    .M1(\AMDemodulator1/Multiplier1/rego_o_3 ), 
    .M0(\AMDemodulator1/Multiplier1/rego_o_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult1_2 ), .Q1(\AMDemodulator1/MultResult1_3 ));
  AMDemodulator1_Multiplier2_SLICE_1667 
    \AMDemodulator1/Multiplier2/SLICE_1667 ( 
    .M1(\AMDemodulator1/Multiplier2/rego_o_1 ), 
    .M0(\AMDemodulator1/Multiplier2/rego_o_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult2_0 ), .Q1(\AMDemodulator1/MultResult2_1 ));
  AMDemodulator1_Multiplier2_SLICE_1668 
    \AMDemodulator1/Multiplier2/SLICE_1668 ( 
    .M1(\AMDemodulator1/Multiplier2/rego_o_3 ), 
    .M0(\AMDemodulator1/Multiplier2/rego_o_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult2_2 ), .Q1(\AMDemodulator1/MultResult2_3 ));
  AMDemodulator1_Multiplier1_SLICE_1669 
    \AMDemodulator1/Multiplier1/SLICE_1669 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_4 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_4 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_4 ));
  AMDemodulator1_Multiplier1_SLICE_1670 
    \AMDemodulator1/Multiplier1/SLICE_1670 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_8 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_8 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_8 ));
  AMDemodulator1_Multiplier1_SLICE_1671 
    \AMDemodulator1/Multiplier1/SLICE_1671 ( .M1(\AMDemodulator1/MultDataB_2 ), 
    .M0(\AMDemodulator1/MultDataB_1 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_2 ));
  AMDemodulator1_Multiplier1_SLICE_1672 
    \AMDemodulator1/Multiplier1/SLICE_1672 ( .M1(\AMDemodulator1/MultDataB_4 ), 
    .M0(\AMDemodulator1/MultDataB_3 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_4 ));
  AMDemodulator1_Multiplier1_SLICE_1673 
    \AMDemodulator1/Multiplier1/SLICE_1673 ( .M1(\AMDemodulator1/MultDataB_6 ), 
    .M0(\AMDemodulator1/MultDataB_5 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_6 ));
  AMDemodulator1_Multiplier1_SLICE_1674 
    \AMDemodulator1/Multiplier1/SLICE_1674 ( .M1(\AMDemodulator1/MultDataB_8 ), 
    .M0(\AMDemodulator1/MultDataB_7 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_8 ));
  AMDemodulator1_Multiplier1_SLICE_1675 
    \AMDemodulator1/Multiplier1/SLICE_1675 ( 
    .M1(\AMDemodulator1/MultDataB_10 ), .M0(\AMDemodulator1/MultDataB_9 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_10 ));
  AMDemodulator1_Multiplier1_SLICE_1677 
    \AMDemodulator1/Multiplier1/SLICE_1677 ( .M1(\AMDemodulator1/MultDataB_1 ), 
    .M0(\AMDemodulator1/MultDataB_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_1 ));
  AMDemodulator1_Multiplier1_SLICE_1678 
    \AMDemodulator1/Multiplier1/SLICE_1678 ( .M1(\AMDemodulator1/MultDataB_3 ), 
    .M0(\AMDemodulator1/MultDataB_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_3 ));
  AMDemodulator1_Multiplier1_SLICE_1679 
    \AMDemodulator1/Multiplier1/SLICE_1679 ( .M1(\AMDemodulator1/MultDataB_5 ), 
    .M0(\AMDemodulator1/MultDataB_4 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_5 ));
  AMDemodulator1_Multiplier1_SLICE_1680 
    \AMDemodulator1/Multiplier1/SLICE_1680 ( .M1(\AMDemodulator1/MultDataB_7 ), 
    .M0(\AMDemodulator1/MultDataB_6 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_7 ));
  AMDemodulator1_Multiplier1_SLICE_1681 
    \AMDemodulator1/Multiplier1/SLICE_1681 ( .M1(\AMDemodulator1/MultDataB_9 ), 
    .M0(\AMDemodulator1/MultDataB_8 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_9 ));
  AMDemodulator1_Multiplier1_SLICE_1682 
    \AMDemodulator1/Multiplier1/SLICE_1682 ( 
    .M1(\AMDemodulator1/MultDataB_11 ), .M0(\AMDemodulator1/MultDataB_10 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_11 ));
  AMDemodulator1_Multiplier1_SLICE_1683 
    \AMDemodulator1/Multiplier1/SLICE_1683 ( 
    .M0(\AMDemodulator1/Multiplier1/regb_b_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rego_o_0 ));
  AMDemodulator1_Multiplier2_SLICE_1684 
    \AMDemodulator1/Multiplier2/SLICE_1684 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_4 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_4 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_4 ));
  AMDemodulator1_Multiplier2_SLICE_1685 
    \AMDemodulator1/Multiplier2/SLICE_1685 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_8 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_8 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_8 ));
  AMDemodulator1_Multiplier2_SLICE_1686 
    \AMDemodulator1/Multiplier2/SLICE_1686 ( .M1(\AMDemodulator1/MultDataC_2 ), 
    .M0(\AMDemodulator1/MultDataC_1 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_2 ));
  AMDemodulator1_Multiplier2_SLICE_1687 
    \AMDemodulator1/Multiplier2/SLICE_1687 ( .M1(\AMDemodulator1/MultDataC_4 ), 
    .M0(\AMDemodulator1/MultDataC_3 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_4 ));
  AMDemodulator1_Multiplier2_SLICE_1688 
    \AMDemodulator1/Multiplier2/SLICE_1688 ( .M1(\AMDemodulator1/MultDataC_6 ), 
    .M0(\AMDemodulator1/MultDataC_5 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_6 ));
  AMDemodulator1_Multiplier2_SLICE_1689 
    \AMDemodulator1/Multiplier2/SLICE_1689 ( .M1(\AMDemodulator1/MultDataC_8 ), 
    .M0(\AMDemodulator1/MultDataC_7 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_8 ));
  AMDemodulator1_Multiplier2_SLICE_1690 
    \AMDemodulator1/Multiplier2/SLICE_1690 ( 
    .M1(\AMDemodulator1/MultDataC_10 ), .M0(\AMDemodulator1/MultDataC_9 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_10 ));
  AMDemodulator1_Multiplier2_SLICE_1692 
    \AMDemodulator1/Multiplier2/SLICE_1692 ( .M1(\AMDemodulator1/MultDataC_1 ), 
    .M0(\AMDemodulator1/MultDataC_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_1 ));
  AMDemodulator1_Multiplier2_SLICE_1693 
    \AMDemodulator1/Multiplier2/SLICE_1693 ( .M1(\AMDemodulator1/MultDataC_3 ), 
    .M0(\AMDemodulator1/MultDataC_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_3 ));
  AMDemodulator1_Multiplier2_SLICE_1694 
    \AMDemodulator1/Multiplier2/SLICE_1694 ( .M1(\AMDemodulator1/MultDataC_5 ), 
    .M0(\AMDemodulator1/MultDataC_4 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_5 ));
  AMDemodulator1_Multiplier2_SLICE_1695 
    \AMDemodulator1/Multiplier2/SLICE_1695 ( .M1(\AMDemodulator1/MultDataC_7 ), 
    .M0(\AMDemodulator1/MultDataC_6 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_7 ));
  AMDemodulator1_Multiplier2_SLICE_1696 
    \AMDemodulator1/Multiplier2/SLICE_1696 ( .M1(\AMDemodulator1/MultDataC_9 ), 
    .M0(\AMDemodulator1/MultDataC_8 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_9 ));
  AMDemodulator1_Multiplier2_SLICE_1697 
    \AMDemodulator1/Multiplier2/SLICE_1697 ( 
    .M1(\AMDemodulator1/MultDataC_11 ), .M0(\AMDemodulator1/MultDataC_10 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_11 ));
  AMDemodulator1_Multiplier2_SLICE_1698 
    \AMDemodulator1/Multiplier2/SLICE_1698 ( 
    .M0(\AMDemodulator1/Multiplier2/regb_b_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rego_o_0 ));
  AMDemodulator1_SLICE_1699 \AMDemodulator1/SLICE_1699 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1891_17 ), 
    .C0(\AMDemodulator1/d_out_d_11_N_1891_17 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_2352_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_2334_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1890 ), 
    .DI0(\AMDemodulator1/d_out_d_11_N_1893_17 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11_N_1893_17 ), 
    .Q0(\AMDemodulator1/d_out_d_0 ), .F1(\AMDemodulator1/d_out_d_11__N_1890 ), 
    .Q1(\AMDemodulator1/d_out_d_1 ));
  AMDemodulator1_SLICE_1700 \AMDemodulator1/SLICE_1700 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1887_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1889_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1886 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1888 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1888 ), .Q0(\AMDemodulator1/d_out_d_2 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1886 ), .Q1(\AMDemodulator1/d_out_d_3 ));
  AMDemodulator1_SLICE_1701 \AMDemodulator1/SLICE_1701 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1883_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1885_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1882 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1884 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1884 ), .Q0(\AMDemodulator1/d_out_d_4 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1882 ), .Q1(\AMDemodulator1/d_out_d_5 ));
  AMDemodulator1_SLICE_1702 \AMDemodulator1/SLICE_1702 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1879_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1881_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1878 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1880 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1880 ), .Q0(\AMDemodulator1/d_out_d_6 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1878 ), .Q1(\AMDemodulator1/d_out_d_7 ));
  AMDemodulator1_SLICE_1703 \AMDemodulator1/SLICE_1703 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1875_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1877_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1874 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1876 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1876 ), .Q0(\AMDemodulator1/d_out_d_8 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1874 ), .Q1(\AMDemodulator1/d_out_d_9 ));
  CIC1Cos_SLICE_1704 \CIC1Cos/SLICE_1704 ( .D1(\CIC1Cos/count_6 ), 
    .C1(\CIC1Cos/count_5 ), .B1(\CIC1Cos/count_1 ), .A1(\CIC1Cos/count_10 ), 
    .B0(\CIC1Cos/n31 ), .A0(\CIC1Cos/n391 ), .DI0(\CIC1Cos/count_15_N_1441_0 ), 
    .LSR(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/count_15_N_1441_0 ), .Q0(\CIC1Cos/count_0 ), 
    .F1(\CIC1Cos/n19 ));
  CIC1Cos_SLICE_1705 \CIC1Cos/SLICE_1705 ( .B1(\CIC1Cos/count_7 ), 
    .A1(\CIC1Cos/count_8 ), .B0(\CIC1Cos/n31 ), .A0(\CIC1Cos/n380 ), 
    .DI0(\CIC1Cos/count_15_N_1441_11 ), .LSR(\CIC1Cos/count_15__N_1457 ), 
    .CLK(osc_clk), .F0(\CIC1Cos/count_15_N_1441_11 ), .Q0(\CIC1Cos/count_11 ), 
    .F1(\CIC1Cos/n15 ));
  CIC1Cos_SLICE_1706 \CIC1Cos/SLICE_1706 ( .C0(\CIC1Cos/n6774 ), 
    .B0(\CIC1Cos/n6828 ), .A0(\CIC1Cos/n6790 ), 
    .DI0(\CIC1Cos/d10_71_N_1746_57 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), 
    .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1746_57 ), .Q0(\CIC1Cos/d10_57 ));
  CIC1Cos_SLICE_1707 \CIC1Cos/SLICE_1707 ( .C0(\CIC1Cos/n6774 ), 
    .B0(\CIC1Cos/n6827 ), .A0(\CIC1Cos/n6789 ), 
    .DI0(\CIC1Cos/d10_71_N_1746_58 ), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d10_71_N_1746_58 ), .Q0(\CIC1Cos/d10_58 ));
  CIC1Cos_SLICE_1708 \CIC1Cos/SLICE_1708 ( .B0(\CIC1Cos/d1_0 ), 
    .A0(MixerOutCos_0), .DI0(\CIC1Cos/d1_71_N_417_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d1_71_N_417_0 ), .Q0(\CIC1Cos/d1_0 ));
  CIC1Cos_SLICE_1709 \CIC1Cos/SLICE_1709 ( .B0(\CIC1Cos/d2_0 ), 
    .A0(\CIC1Cos/d1_0 ), .DI0(\CIC1Cos/d2_71_N_489_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d2_71_N_489_0 ), .Q0(\CIC1Cos/d2_0 ));
  CIC1Cos_SLICE_1710 \CIC1Cos/SLICE_1710 ( .B0(\CIC1Cos/d3_0 ), 
    .A0(\CIC1Cos/d2_0 ), .DI0(\CIC1Cos/d3_71_N_561_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d3_71_N_561_0 ), .Q0(\CIC1Cos/d3_0 ));
  CIC1Cos_SLICE_1711 \CIC1Cos/SLICE_1711 ( .B0(\CIC1Cos/d4_0 ), 
    .A0(\CIC1Cos/d3_0 ), .DI0(\CIC1Cos/d4_71_N_633_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d4_71_N_633_0 ), .Q0(\CIC1Cos/d4_0 ));
  CIC1Cos_SLICE_1712 \CIC1Cos/SLICE_1712 ( .B0(\CIC1Cos/d5_0 ), 
    .A0(\CIC1Cos/d4_0 ), .DI0(\CIC1Cos/d5_71_N_705_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d5_71_N_705_0 ), .Q0(\CIC1Cos/d5_0 ));
  CIC1Cos_SLICE_1713 \CIC1Cos/SLICE_1713 ( .M0(\CIC1Cos/d6_71_N_1458_20 ), 
    .CE(\CIC1Cos/osc_clk_enable_883 ), .CLK(osc_clk), .Q0(\CIC1Cos/d6_20 ));
  CIC1Cos_SLICE_1714 \CIC1Cos/SLICE_1714 ( .M0(\CIC1Cos/d7_71_N_1530_28 ), 
    .CE(\CIC1Cos/osc_clk_enable_1033 ), .CLK(osc_clk), .Q0(\CIC1Cos/d7_28 ));
  CIC1Cos_SLICE_1715 \CIC1Cos/SLICE_1715 ( .M0(\CIC1Cos/d6_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d6_0 ));
  CIC1Cos_SLICE_1716 \CIC1Cos/SLICE_1716 ( .M1(\CIC1Cos/d6_2 ), 
    .M0(\CIC1Cos/d6_1 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_1 ), .Q1(\CIC1Cos/d_d6_2 ));
  CIC1Cos_SLICE_1717 \CIC1Cos/SLICE_1717 ( .M1(\CIC1Cos/d6_4 ), 
    .M0(\CIC1Cos/d6_3 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_3 ), .Q1(\CIC1Cos/d_d6_4 ));
  CIC1Cos_SLICE_1718 \CIC1Cos/SLICE_1718 ( .M1(\CIC1Cos/d6_6 ), 
    .M0(\CIC1Cos/d6_5 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_5 ), .Q1(\CIC1Cos/d_d6_6 ));
  CIC1Cos_SLICE_1719 \CIC1Cos/SLICE_1719 ( .M1(\CIC1Cos/d6_8 ), 
    .M0(\CIC1Cos/d6_7 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_7 ), .Q1(\CIC1Cos/d_d6_8 ));
  CIC1Cos_SLICE_1720 \CIC1Cos/SLICE_1720 ( .M1(\CIC1Cos/d6_10 ), 
    .M0(\CIC1Cos/d6_9 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_9 ), .Q1(\CIC1Cos/d_d6_10 ));
  CIC1Cos_SLICE_1721 \CIC1Cos/SLICE_1721 ( .M1(\CIC1Cos/d6_12 ), 
    .M0(\CIC1Cos/d6_11 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_11 ), .Q1(\CIC1Cos/d_d6_12 ));
  CIC1Cos_SLICE_1722 \CIC1Cos/SLICE_1722 ( .M1(\CIC1Cos/d6_14 ), 
    .M0(\CIC1Cos/d6_13 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_13 ), .Q1(\CIC1Cos/d_d6_14 ));
  CIC1Cos_SLICE_1723 \CIC1Cos/SLICE_1723 ( .M1(\CIC1Cos/d6_16 ), 
    .M0(\CIC1Cos/d6_15 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_15 ), .Q1(\CIC1Cos/d_d6_16 ));
  CIC1Cos_SLICE_1724 \CIC1Cos/SLICE_1724 ( .M1(\CIC1Cos/d6_18 ), 
    .M0(\CIC1Cos/d6_17 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_17 ), .Q1(\CIC1Cos/d_d6_18 ));
  CIC1Cos_SLICE_1725 \CIC1Cos/SLICE_1725 ( .M1(\CIC1Cos/d6_20 ), 
    .M0(\CIC1Cos/d6_19 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_19 ), .Q1(\CIC1Cos/d_d6_20 ));
  CIC1Cos_SLICE_1726 \CIC1Cos/SLICE_1726 ( .M1(\CIC1Cos/d6_22 ), 
    .M0(\CIC1Cos/d6_21 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_21 ), .Q1(\CIC1Cos/d_d6_22 ));
  CIC1Cos_SLICE_1727 \CIC1Cos/SLICE_1727 ( .M1(\CIC1Cos/d6_24 ), 
    .M0(\CIC1Cos/d6_23 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_23 ), .Q1(\CIC1Cos/d_d6_24 ));
  CIC1Cos_SLICE_1728 \CIC1Cos/SLICE_1728 ( .M1(\CIC1Cos/d6_26 ), 
    .M0(\CIC1Cos/d6_25 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_25 ), .Q1(\CIC1Cos/d_d6_26 ));
  CIC1Cos_SLICE_1729 \CIC1Cos/SLICE_1729 ( .M1(\CIC1Cos/d6_28 ), 
    .M0(\CIC1Cos/d6_27 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_27 ), .Q1(\CIC1Cos/d_d6_28 ));
  CIC1Cos_SLICE_1730 \CIC1Cos/SLICE_1730 ( .M1(\CIC1Cos/d6_30 ), 
    .M0(\CIC1Cos/d6_29 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_29 ), .Q1(\CIC1Cos/d_d6_30 ));
  CIC1Cos_SLICE_1731 \CIC1Cos/SLICE_1731 ( .M1(\CIC1Cos/d6_32 ), 
    .M0(\CIC1Cos/d6_31 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_31 ), .Q1(\CIC1Cos/d_d6_32 ));
  CIC1Cos_SLICE_1732 \CIC1Cos/SLICE_1732 ( .M1(\CIC1Cos/d6_34 ), 
    .M0(\CIC1Cos/d6_33 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_33 ), .Q1(\CIC1Cos/d_d6_34 ));
  CIC1Cos_SLICE_1733 \CIC1Cos/SLICE_1733 ( .M1(\CIC1Cos/d6_36 ), 
    .M0(\CIC1Cos/d6_35 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_35 ), .Q1(\CIC1Cos/d_d6_36 ));
  CIC1Cos_SLICE_1734 \CIC1Cos/SLICE_1734 ( .M1(\CIC1Cos/d6_38 ), 
    .M0(\CIC1Cos/d6_37 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_37 ), .Q1(\CIC1Cos/d_d6_38 ));
  CIC1Cos_SLICE_1735 \CIC1Cos/SLICE_1735 ( .M1(\CIC1Cos/d6_40 ), 
    .M0(\CIC1Cos/d6_39 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_39 ), .Q1(\CIC1Cos/d_d6_40 ));
  CIC1Cos_SLICE_1736 \CIC1Cos/SLICE_1736 ( .M1(\CIC1Cos/d6_42 ), 
    .M0(\CIC1Cos/d6_41 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_41 ), .Q1(\CIC1Cos/d_d6_42 ));
  CIC1Cos_SLICE_1737 \CIC1Cos/SLICE_1737 ( .M1(\CIC1Cos/d6_44 ), 
    .M0(\CIC1Cos/d6_43 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_43 ), .Q1(\CIC1Cos/d_d6_44 ));
  CIC1Cos_SLICE_1738 \CIC1Cos/SLICE_1738 ( .M1(\CIC1Cos/d6_46 ), 
    .M0(\CIC1Cos/d6_45 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_45 ), .Q1(\CIC1Cos/d_d6_46 ));
  CIC1Cos_SLICE_1739 \CIC1Cos/SLICE_1739 ( .M1(\CIC1Cos/d6_48 ), 
    .M0(\CIC1Cos/d6_47 ), .CE(\CIC1Cos/osc_clk_enable_933 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_47 ), .Q1(\CIC1Cos/d_d6_48 ));
  CIC1Cos_SLICE_1740 \CIC1Cos/SLICE_1740 ( .M1(\CIC1Cos/d6_50 ), 
    .M0(\CIC1Cos/d6_49 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_49 ), .Q1(\CIC1Cos/d_d6_50 ));
  CIC1Cos_SLICE_1741 \CIC1Cos/SLICE_1741 ( .M1(\CIC1Cos/d6_52 ), 
    .M0(\CIC1Cos/d6_51 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_51 ), .Q1(\CIC1Cos/d_d6_52 ));
  CIC1Cos_SLICE_1742 \CIC1Cos/SLICE_1742 ( .M1(\CIC1Cos/d6_54 ), 
    .M0(\CIC1Cos/d6_53 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_53 ), .Q1(\CIC1Cos/d_d6_54 ));
  CIC1Cos_SLICE_1743 \CIC1Cos/SLICE_1743 ( .M1(\CIC1Cos/d6_56 ), 
    .M0(\CIC1Cos/d6_55 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_55 ), .Q1(\CIC1Cos/d_d6_56 ));
  CIC1Cos_SLICE_1744 \CIC1Cos/SLICE_1744 ( .M1(\CIC1Cos/d6_58 ), 
    .M0(\CIC1Cos/d6_57 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_57 ), .Q1(\CIC1Cos/d_d6_58 ));
  CIC1Cos_SLICE_1745 \CIC1Cos/SLICE_1745 ( .M1(\CIC1Cos/d6_60 ), 
    .M0(\CIC1Cos/d6_59 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_59 ), .Q1(\CIC1Cos/d_d6_60 ));
  CIC1Cos_SLICE_1746 \CIC1Cos/SLICE_1746 ( .M1(\CIC1Cos/d6_62 ), 
    .M0(\CIC1Cos/d6_61 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_61 ), .Q1(\CIC1Cos/d_d6_62 ));
  CIC1Cos_SLICE_1747 \CIC1Cos/SLICE_1747 ( .M1(\CIC1Cos/d6_64 ), 
    .M0(\CIC1Cos/d6_63 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_63 ), .Q1(\CIC1Cos/d_d6_64 ));
  CIC1Cos_SLICE_1748 \CIC1Cos/SLICE_1748 ( .M1(\CIC1Cos/d6_66 ), 
    .M0(\CIC1Cos/d6_65 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_65 ), .Q1(\CIC1Cos/d_d6_66 ));
  CIC1Cos_SLICE_1749 \CIC1Cos/SLICE_1749 ( .M1(\CIC1Cos/d6_68 ), 
    .M0(\CIC1Cos/d6_67 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_67 ), .Q1(\CIC1Cos/d_d6_68 ));
  CIC1Cos_SLICE_1750 \CIC1Cos/SLICE_1750 ( .M1(\CIC1Cos/d6_70 ), 
    .M0(\CIC1Cos/d6_69 ), .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_69 ), .Q1(\CIC1Cos/d_d6_70 ));
  CIC1Cos_SLICE_1751 \CIC1Cos/SLICE_1751 ( .M0(\CIC1Cos/d6_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_983 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d6_71 ));
  CIC1Cos_SLICE_1752 \CIC1Cos/SLICE_1752 ( .M0(\CIC1Cos/d7_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d7_0 ));
  CIC1Cos_SLICE_1753 \CIC1Cos/SLICE_1753 ( .M1(\CIC1Cos/d7_2 ), 
    .M0(\CIC1Cos/d7_1 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_1 ), .Q1(\CIC1Cos/d_d7_2 ));
  CIC1Cos_SLICE_1754 \CIC1Cos/SLICE_1754 ( .M1(\CIC1Cos/d7_4 ), 
    .M0(\CIC1Cos/d7_3 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_3 ), .Q1(\CIC1Cos/d_d7_4 ));
  CIC1Cos_SLICE_1755 \CIC1Cos/SLICE_1755 ( .M1(\CIC1Cos/d7_6 ), 
    .M0(\CIC1Cos/d7_5 ), .CE(\CIC1Cos/osc_clk_enable_1033 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_5 ), .Q1(\CIC1Cos/d_d7_6 ));
  CIC1Cos_SLICE_1756 \CIC1Cos/SLICE_1756 ( .M1(\CIC1Cos/d7_8 ), 
    .M0(\CIC1Cos/d7_7 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_7 ), .Q1(\CIC1Cos/d_d7_8 ));
  CIC1Cos_SLICE_1757 \CIC1Cos/SLICE_1757 ( .M1(\CIC1Cos/d7_10 ), 
    .M0(\CIC1Cos/d7_9 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_9 ), .Q1(\CIC1Cos/d_d7_10 ));
  CIC1Cos_SLICE_1758 \CIC1Cos/SLICE_1758 ( .M1(\CIC1Cos/d7_12 ), 
    .M0(\CIC1Cos/d7_11 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_11 ), .Q1(\CIC1Cos/d_d7_12 ));
  CIC1Cos_SLICE_1759 \CIC1Cos/SLICE_1759 ( .M1(\CIC1Cos/d7_14 ), 
    .M0(\CIC1Cos/d7_13 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_13 ), .Q1(\CIC1Cos/d_d7_14 ));
  CIC1Cos_SLICE_1760 \CIC1Cos/SLICE_1760 ( .M1(\CIC1Cos/d7_16 ), 
    .M0(\CIC1Cos/d7_15 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_15 ), .Q1(\CIC1Cos/d_d7_16 ));
  CIC1Cos_SLICE_1761 \CIC1Cos/SLICE_1761 ( .M1(\CIC1Cos/d7_18 ), 
    .M0(\CIC1Cos/d7_17 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_17 ), .Q1(\CIC1Cos/d_d7_18 ));
  CIC1Cos_SLICE_1762 \CIC1Cos/SLICE_1762 ( .M1(\CIC1Cos/d7_20 ), 
    .M0(\CIC1Cos/d7_19 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_19 ), .Q1(\CIC1Cos/d_d7_20 ));
  CIC1Cos_SLICE_1763 \CIC1Cos/SLICE_1763 ( .M1(\CIC1Cos/d7_22 ), 
    .M0(\CIC1Cos/d7_21 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_21 ), .Q1(\CIC1Cos/d_d7_22 ));
  CIC1Cos_SLICE_1764 \CIC1Cos/SLICE_1764 ( .M1(\CIC1Cos/d7_24 ), 
    .M0(\CIC1Cos/d7_23 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_23 ), .Q1(\CIC1Cos/d_d7_24 ));
  CIC1Cos_SLICE_1765 \CIC1Cos/SLICE_1765 ( .M1(\CIC1Cos/d7_26 ), 
    .M0(\CIC1Cos/d7_25 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_25 ), .Q1(\CIC1Cos/d_d7_26 ));
  CIC1Cos_SLICE_1766 \CIC1Cos/SLICE_1766 ( .M1(\CIC1Cos/d7_28 ), 
    .M0(\CIC1Cos/d7_27 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_27 ), .Q1(\CIC1Cos/d_d7_28 ));
  CIC1Cos_SLICE_1767 \CIC1Cos/SLICE_1767 ( .M1(\CIC1Cos/d7_30 ), 
    .M0(\CIC1Cos/d7_29 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_29 ), .Q1(\CIC1Cos/d_d7_30 ));
  CIC1Cos_SLICE_1768 \CIC1Cos/SLICE_1768 ( .M1(\CIC1Cos/d7_32 ), 
    .M0(\CIC1Cos/d7_31 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_31 ), .Q1(\CIC1Cos/d_d7_32 ));
  CIC1Cos_SLICE_1769 \CIC1Cos/SLICE_1769 ( .M1(\CIC1Cos/d7_34 ), 
    .M0(\CIC1Cos/d7_33 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_33 ), .Q1(\CIC1Cos/d_d7_34 ));
  CIC1Cos_SLICE_1770 \CIC1Cos/SLICE_1770 ( .M1(\CIC1Cos/d7_36 ), 
    .M0(\CIC1Cos/d7_35 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_35 ), .Q1(\CIC1Cos/d_d7_36 ));
  CIC1Cos_SLICE_1771 \CIC1Cos/SLICE_1771 ( .M1(\CIC1Cos/d7_38 ), 
    .M0(\CIC1Cos/d7_37 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_37 ), .Q1(\CIC1Cos/d_d7_38 ));
  CIC1Cos_SLICE_1772 \CIC1Cos/SLICE_1772 ( .M1(\CIC1Cos/d7_40 ), 
    .M0(\CIC1Cos/d7_39 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_39 ), .Q1(\CIC1Cos/d_d7_40 ));
  CIC1Cos_SLICE_1773 \CIC1Cos/SLICE_1773 ( .M1(\CIC1Cos/d7_42 ), 
    .M0(\CIC1Cos/d7_41 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_41 ), .Q1(\CIC1Cos/d_d7_42 ));
  CIC1Cos_SLICE_1774 \CIC1Cos/SLICE_1774 ( .M1(\CIC1Cos/d7_44 ), 
    .M0(\CIC1Cos/d7_43 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_43 ), .Q1(\CIC1Cos/d_d7_44 ));
  CIC1Cos_SLICE_1775 \CIC1Cos/SLICE_1775 ( .M1(\CIC1Cos/d7_46 ), 
    .M0(\CIC1Cos/d7_45 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_45 ), .Q1(\CIC1Cos/d_d7_46 ));
  CIC1Cos_SLICE_1776 \CIC1Cos/SLICE_1776 ( .M1(\CIC1Cos/d7_48 ), 
    .M0(\CIC1Cos/d7_47 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_47 ), .Q1(\CIC1Cos/d_d7_48 ));
  CIC1Cos_SLICE_1777 \CIC1Cos/SLICE_1777 ( .M1(\CIC1Cos/d7_50 ), 
    .M0(\CIC1Cos/d7_49 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_49 ), .Q1(\CIC1Cos/d_d7_50 ));
  CIC1Cos_SLICE_1778 \CIC1Cos/SLICE_1778 ( .M1(\CIC1Cos/d7_52 ), 
    .M0(\CIC1Cos/d7_51 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_51 ), .Q1(\CIC1Cos/d_d7_52 ));
  CIC1Cos_SLICE_1779 \CIC1Cos/SLICE_1779 ( .M1(\CIC1Cos/d7_54 ), 
    .M0(\CIC1Cos/d7_53 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_53 ), .Q1(\CIC1Cos/d_d7_54 ));
  CIC1Cos_SLICE_1780 \CIC1Cos/SLICE_1780 ( .M1(\CIC1Cos/d7_56 ), 
    .M0(\CIC1Cos/d7_55 ), .CE(\CIC1Cos/osc_clk_enable_1083 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_55 ), .Q1(\CIC1Cos/d_d7_56 ));
  CIC1Cos_SLICE_1781 \CIC1Cos/SLICE_1781 ( .M1(\CIC1Cos/d7_58 ), 
    .M0(\CIC1Cos/d7_57 ), .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_57 ), .Q1(\CIC1Cos/d_d7_58 ));
  CIC1Cos_SLICE_1782 \CIC1Cos/SLICE_1782 ( .M1(\CIC1Cos/d7_60 ), 
    .M0(\CIC1Cos/d7_59 ), .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_59 ), .Q1(\CIC1Cos/d_d7_60 ));
  CIC1Cos_SLICE_1783 \CIC1Cos/SLICE_1783 ( .M1(\CIC1Cos/d7_62 ), 
    .M0(\CIC1Cos/d7_61 ), .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_61 ), .Q1(\CIC1Cos/d_d7_62 ));
  CIC1Cos_SLICE_1784 \CIC1Cos/SLICE_1784 ( .M1(\CIC1Cos/d7_64 ), 
    .M0(\CIC1Cos/d7_63 ), .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_63 ), .Q1(\CIC1Cos/d_d7_64 ));
  CIC1Cos_SLICE_1785 \CIC1Cos/SLICE_1785 ( .M1(\CIC1Cos/d7_66 ), 
    .M0(\CIC1Cos/d7_65 ), .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_65 ), .Q1(\CIC1Cos/d_d7_66 ));
  CIC1Cos_SLICE_1786 \CIC1Cos/SLICE_1786 ( .M1(\CIC1Cos/d7_68 ), 
    .M0(\CIC1Cos/d7_67 ), .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_67 ), .Q1(\CIC1Cos/d_d7_68 ));
  CIC1Cos_SLICE_1787 \CIC1Cos/SLICE_1787 ( .M1(\CIC1Cos/d7_70 ), 
    .M0(\CIC1Cos/d7_69 ), .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_69 ), .Q1(\CIC1Cos/d_d7_70 ));
  CIC1Cos_SLICE_1788 \CIC1Cos/SLICE_1788 ( .M0(\CIC1Cos/d7_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_1133 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d7_71 ));
  CIC1Cos_SLICE_1789 \CIC1Cos/SLICE_1789 ( .M0(\CIC1Cos/d8_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d8_0 ));
  CIC1Cos_SLICE_1790 \CIC1Cos/SLICE_1790 ( .M1(\CIC1Cos/d8_2 ), 
    .M0(\CIC1Cos/d8_1 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_1 ), .Q1(\CIC1Cos/d_d8_2 ));
  CIC1Cos_SLICE_1791 \CIC1Cos/SLICE_1791 ( .M1(\CIC1Cos/d8_4 ), 
    .M0(\CIC1Cos/d8_3 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_3 ), .Q1(\CIC1Cos/d_d8_4 ));
  CIC1Cos_SLICE_1792 \CIC1Cos/SLICE_1792 ( .M1(\CIC1Cos/d8_6 ), 
    .M0(\CIC1Cos/d8_5 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_5 ), .Q1(\CIC1Cos/d_d8_6 ));
  CIC1Cos_SLICE_1793 \CIC1Cos/SLICE_1793 ( .M1(\CIC1Cos/d8_8 ), 
    .M0(\CIC1Cos/d8_7 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_7 ), .Q1(\CIC1Cos/d_d8_8 ));
  CIC1Cos_SLICE_1794 \CIC1Cos/SLICE_1794 ( .M1(\CIC1Cos/d8_10 ), 
    .M0(\CIC1Cos/d8_9 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_9 ), .Q1(\CIC1Cos/d_d8_10 ));
  CIC1Cos_SLICE_1795 \CIC1Cos/SLICE_1795 ( .M1(\CIC1Cos/d8_12 ), 
    .M0(\CIC1Cos/d8_11 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_11 ), .Q1(\CIC1Cos/d_d8_12 ));
  CIC1Cos_SLICE_1796 \CIC1Cos/SLICE_1796 ( .M1(\CIC1Cos/d8_14 ), 
    .M0(\CIC1Cos/d8_13 ), .CE(\CIC1Cos/osc_clk_enable_1183 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_13 ), .Q1(\CIC1Cos/d_d8_14 ));
  CIC1Cos_SLICE_1797 \CIC1Cos/SLICE_1797 ( .M1(\CIC1Cos/d8_16 ), 
    .M0(\CIC1Cos/d8_15 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_15 ), .Q1(\CIC1Cos/d_d8_16 ));
  CIC1Cos_SLICE_1798 \CIC1Cos/SLICE_1798 ( .M1(\CIC1Cos/d8_18 ), 
    .M0(\CIC1Cos/d8_17 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_17 ), .Q1(\CIC1Cos/d_d8_18 ));
  CIC1Cos_SLICE_1799 \CIC1Cos/SLICE_1799 ( .M1(\CIC1Cos/d8_20 ), 
    .M0(\CIC1Cos/d8_19 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_19 ), .Q1(\CIC1Cos/d_d8_20 ));
  CIC1Cos_SLICE_1800 \CIC1Cos/SLICE_1800 ( .M1(\CIC1Cos/d8_22 ), 
    .M0(\CIC1Cos/d8_21 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_21 ), .Q1(\CIC1Cos/d_d8_22 ));
  CIC1Cos_SLICE_1801 \CIC1Cos/SLICE_1801 ( .M1(\CIC1Cos/d8_24 ), 
    .M0(\CIC1Cos/d8_23 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_23 ), .Q1(\CIC1Cos/d_d8_24 ));
  CIC1Cos_SLICE_1802 \CIC1Cos/SLICE_1802 ( .M1(\CIC1Cos/d8_26 ), 
    .M0(\CIC1Cos/d8_25 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_25 ), .Q1(\CIC1Cos/d_d8_26 ));
  CIC1Cos_SLICE_1803 \CIC1Cos/SLICE_1803 ( .M1(\CIC1Cos/d8_28 ), 
    .M0(\CIC1Cos/d8_27 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_27 ), .Q1(\CIC1Cos/d_d8_28 ));
  CIC1Cos_SLICE_1804 \CIC1Cos/SLICE_1804 ( .M1(\CIC1Cos/d8_30 ), 
    .M0(\CIC1Cos/d8_29 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_29 ), .Q1(\CIC1Cos/d_d8_30 ));
  CIC1Cos_SLICE_1805 \CIC1Cos/SLICE_1805 ( .M1(\CIC1Cos/d8_32 ), 
    .M0(\CIC1Cos/d8_31 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_31 ), .Q1(\CIC1Cos/d_d8_32 ));
  CIC1Cos_SLICE_1806 \CIC1Cos/SLICE_1806 ( .M1(\CIC1Cos/d8_34 ), 
    .M0(\CIC1Cos/d8_33 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_33 ), .Q1(\CIC1Cos/d_d8_34 ));
  CIC1Cos_SLICE_1807 \CIC1Cos/SLICE_1807 ( .M1(\CIC1Cos/d8_36 ), 
    .M0(\CIC1Cos/d8_35 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_35 ), .Q1(\CIC1Cos/d_d8_36 ));
  CIC1Cos_SLICE_1808 \CIC1Cos/SLICE_1808 ( .M1(\CIC1Cos/d8_38 ), 
    .M0(\CIC1Cos/d8_37 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_37 ), .Q1(\CIC1Cos/d_d8_38 ));
  CIC1Cos_SLICE_1809 \CIC1Cos/SLICE_1809 ( .M1(\CIC1Cos/d8_40 ), 
    .M0(\CIC1Cos/d8_39 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_39 ), .Q1(\CIC1Cos/d_d8_40 ));
  CIC1Cos_SLICE_1810 \CIC1Cos/SLICE_1810 ( .M1(\CIC1Cos/d8_42 ), 
    .M0(\CIC1Cos/d8_41 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_41 ), .Q1(\CIC1Cos/d_d8_42 ));
  CIC1Cos_SLICE_1811 \CIC1Cos/SLICE_1811 ( .M1(\CIC1Cos/d8_44 ), 
    .M0(\CIC1Cos/d8_43 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_43 ), .Q1(\CIC1Cos/d_d8_44 ));
  CIC1Cos_SLICE_1812 \CIC1Cos/SLICE_1812 ( .M1(\CIC1Cos/d8_46 ), 
    .M0(\CIC1Cos/d8_45 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_45 ), .Q1(\CIC1Cos/d_d8_46 ));
  CIC1Cos_SLICE_1813 \CIC1Cos/SLICE_1813 ( .M1(\CIC1Cos/d8_48 ), 
    .M0(\CIC1Cos/d8_47 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_47 ), .Q1(\CIC1Cos/d_d8_48 ));
  CIC1Cos_SLICE_1814 \CIC1Cos/SLICE_1814 ( .M1(\CIC1Cos/d8_50 ), 
    .M0(\CIC1Cos/d8_49 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_49 ), .Q1(\CIC1Cos/d_d8_50 ));
  CIC1Cos_SLICE_1815 \CIC1Cos/SLICE_1815 ( .M1(\CIC1Cos/d8_52 ), 
    .M0(\CIC1Cos/d8_51 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_51 ), .Q1(\CIC1Cos/d_d8_52 ));
  CIC1Cos_SLICE_1816 \CIC1Cos/SLICE_1816 ( .M1(\CIC1Cos/d8_54 ), 
    .M0(\CIC1Cos/d8_53 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_53 ), .Q1(\CIC1Cos/d_d8_54 ));
  CIC1Cos_SLICE_1817 \CIC1Cos/SLICE_1817 ( .M1(\CIC1Cos/d8_56 ), 
    .M0(\CIC1Cos/d8_55 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_55 ), .Q1(\CIC1Cos/d_d8_56 ));
  CIC1Cos_SLICE_1818 \CIC1Cos/SLICE_1818 ( .M1(\CIC1Cos/d8_58 ), 
    .M0(\CIC1Cos/d8_57 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_57 ), .Q1(\CIC1Cos/d_d8_58 ));
  CIC1Cos_SLICE_1819 \CIC1Cos/SLICE_1819 ( .M1(\CIC1Cos/d8_60 ), 
    .M0(\CIC1Cos/d8_59 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_59 ), .Q1(\CIC1Cos/d_d8_60 ));
  CIC1Cos_SLICE_1820 \CIC1Cos/SLICE_1820 ( .M1(\CIC1Cos/d8_62 ), 
    .M0(\CIC1Cos/d8_61 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_61 ), .Q1(\CIC1Cos/d_d8_62 ));
  CIC1Cos_SLICE_1821 \CIC1Cos/SLICE_1821 ( .M1(\CIC1Cos/d8_64 ), 
    .M0(\CIC1Cos/d8_63 ), .CE(\CIC1Cos/osc_clk_enable_1233 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_63 ), .Q1(\CIC1Cos/d_d8_64 ));
  CIC1Cos_SLICE_1822 \CIC1Cos/SLICE_1822 ( .M1(\CIC1Cos/d8_66 ), 
    .M0(\CIC1Cos/d8_65 ), .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_65 ), .Q1(\CIC1Cos/d_d8_66 ));
  CIC1Cos_SLICE_1823 \CIC1Cos/SLICE_1823 ( .M1(\CIC1Cos/d8_68 ), 
    .M0(\CIC1Cos/d8_67 ), .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_67 ), .Q1(\CIC1Cos/d_d8_68 ));
  CIC1Cos_SLICE_1824 \CIC1Cos/SLICE_1824 ( .M1(\CIC1Cos/d8_70 ), 
    .M0(\CIC1Cos/d8_69 ), .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_69 ), .Q1(\CIC1Cos/d_d8_70 ));
  CIC1Cos_SLICE_1825 \CIC1Cos/SLICE_1825 ( .M0(\CIC1Cos/d8_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_1283 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d8_71 ));
  CIC1Cos_SLICE_1826 \CIC1Cos/SLICE_1826 ( .M0(\CIC1Cos/d9_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d9_0 ));
  CIC1Cos_SLICE_1827 \CIC1Cos/SLICE_1827 ( .M1(\CIC1Cos/d9_2 ), 
    .M0(\CIC1Cos/d9_1 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_1 ), .Q1(\CIC1Cos/d_d9_2 ));
  CIC1Cos_SLICE_1828 \CIC1Cos/SLICE_1828 ( .M1(\CIC1Cos/d9_4 ), 
    .M0(\CIC1Cos/d9_3 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_3 ), .Q1(\CIC1Cos/d_d9_4 ));
  CIC1Cos_SLICE_1829 \CIC1Cos/SLICE_1829 ( .M1(\CIC1Cos/d9_6 ), 
    .M0(\CIC1Cos/d9_5 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_5 ), .Q1(\CIC1Cos/d_d9_6 ));
  CIC1Cos_SLICE_1830 \CIC1Cos/SLICE_1830 ( .M1(\CIC1Cos/d9_8 ), 
    .M0(\CIC1Cos/d9_7 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_7 ), .Q1(\CIC1Cos/d_d9_8 ));
  CIC1Cos_SLICE_1831 \CIC1Cos/SLICE_1831 ( .M1(\CIC1Cos/d9_10 ), 
    .M0(\CIC1Cos/d9_9 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_9 ), .Q1(\CIC1Cos/d_d9_10 ));
  CIC1Cos_SLICE_1832 \CIC1Cos/SLICE_1832 ( .M1(\CIC1Cos/d9_12 ), 
    .M0(\CIC1Cos/d9_11 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_11 ), .Q1(\CIC1Cos/d_d9_12 ));
  CIC1Cos_SLICE_1833 \CIC1Cos/SLICE_1833 ( .M1(\CIC1Cos/d9_14 ), 
    .M0(\CIC1Cos/d9_13 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_13 ), .Q1(\CIC1Cos/d_d9_14 ));
  CIC1Cos_SLICE_1834 \CIC1Cos/SLICE_1834 ( .M1(\CIC1Cos/d9_16 ), 
    .M0(\CIC1Cos/d9_15 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_15 ), .Q1(\CIC1Cos/d_d9_16 ));
  CIC1Cos_SLICE_1835 \CIC1Cos/SLICE_1835 ( .M1(\CIC1Cos/d9_18 ), 
    .M0(\CIC1Cos/d9_17 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_17 ), .Q1(\CIC1Cos/d_d9_18 ));
  CIC1Cos_SLICE_1836 \CIC1Cos/SLICE_1836 ( .M1(\CIC1Cos/d9_20 ), 
    .M0(\CIC1Cos/d9_19 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_19 ), .Q1(\CIC1Cos/d_d9_20 ));
  CIC1Cos_SLICE_1837 \CIC1Cos/SLICE_1837 ( .M1(\CIC1Cos/d9_22 ), 
    .M0(\CIC1Cos/d9_21 ), .CE(\CIC1Cos/osc_clk_enable_1333 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_21 ), .Q1(\CIC1Cos/d_d9_22 ));
  CIC1Cos_SLICE_1838 \CIC1Cos/SLICE_1838 ( .M1(\CIC1Cos/d9_24 ), 
    .M0(\CIC1Cos/d9_23 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_23 ), .Q1(\CIC1Cos/d_d9_24 ));
  CIC1Cos_SLICE_1839 \CIC1Cos/SLICE_1839 ( .M1(\CIC1Cos/d9_26 ), 
    .M0(\CIC1Cos/d9_25 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_25 ), .Q1(\CIC1Cos/d_d9_26 ));
  CIC1Cos_SLICE_1840 \CIC1Cos/SLICE_1840 ( .M1(\CIC1Cos/d9_28 ), 
    .M0(\CIC1Cos/d9_27 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_27 ), .Q1(\CIC1Cos/d_d9_28 ));
  CIC1Cos_SLICE_1841 \CIC1Cos/SLICE_1841 ( .M1(\CIC1Cos/d9_30 ), 
    .M0(\CIC1Cos/d9_29 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_29 ), .Q1(\CIC1Cos/d_d9_30 ));
  CIC1Cos_SLICE_1842 \CIC1Cos/SLICE_1842 ( .M1(\CIC1Cos/d9_32 ), 
    .M0(\CIC1Cos/d9_31 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_31 ), .Q1(\CIC1Cos/d_d9_32 ));
  CIC1Cos_SLICE_1843 \CIC1Cos/SLICE_1843 ( .M1(\CIC1Cos/d9_34 ), 
    .M0(\CIC1Cos/d9_33 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_33 ), .Q1(\CIC1Cos/d_d9_34 ));
  CIC1Cos_SLICE_1844 \CIC1Cos/SLICE_1844 ( .M1(\CIC1Cos/d9_36 ), 
    .M0(\CIC1Cos/d9_35 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_35 ), .Q1(\CIC1Cos/d_d9_36 ));
  CIC1Cos_SLICE_1845 \CIC1Cos/SLICE_1845 ( .M1(\CIC1Cos/d9_38 ), 
    .M0(\CIC1Cos/d9_37 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_37 ), .Q1(\CIC1Cos/d_d9_38 ));
  CIC1Cos_SLICE_1846 \CIC1Cos/SLICE_1846 ( .M1(\CIC1Cos/d9_40 ), 
    .M0(\CIC1Cos/d9_39 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_39 ), .Q1(\CIC1Cos/d_d9_40 ));
  CIC1Cos_SLICE_1847 \CIC1Cos/SLICE_1847 ( .M1(\CIC1Cos/d9_42 ), 
    .M0(\CIC1Cos/d9_41 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_41 ), .Q1(\CIC1Cos/d_d9_42 ));
  CIC1Cos_SLICE_1848 \CIC1Cos/SLICE_1848 ( .M1(\CIC1Cos/d9_44 ), 
    .M0(\CIC1Cos/d9_43 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_43 ), .Q1(\CIC1Cos/d_d9_44 ));
  CIC1Cos_SLICE_1849 \CIC1Cos/SLICE_1849 ( .M1(\CIC1Cos/d9_46 ), 
    .M0(\CIC1Cos/d9_45 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_45 ), .Q1(\CIC1Cos/d_d9_46 ));
  CIC1Cos_SLICE_1850 \CIC1Cos/SLICE_1850 ( .M1(\CIC1Cos/d9_48 ), 
    .M0(\CIC1Cos/d9_47 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_47 ), .Q1(\CIC1Cos/d_d9_48 ));
  CIC1Cos_SLICE_1851 \CIC1Cos/SLICE_1851 ( .M1(\CIC1Cos/d9_50 ), 
    .M0(\CIC1Cos/d9_49 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_49 ), .Q1(\CIC1Cos/d_d9_50 ));
  CIC1Cos_SLICE_1852 \CIC1Cos/SLICE_1852 ( .M1(\CIC1Cos/d9_52 ), 
    .M0(\CIC1Cos/d9_51 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_51 ), .Q1(\CIC1Cos/d_d9_52 ));
  CIC1Cos_SLICE_1853 \CIC1Cos/SLICE_1853 ( .M1(\CIC1Cos/d9_54 ), 
    .M0(\CIC1Cos/d9_53 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_53 ), .Q1(\CIC1Cos/d_d9_54 ));
  CIC1Cos_SLICE_1854 \CIC1Cos/SLICE_1854 ( .M1(\CIC1Cos/d9_56 ), 
    .M0(\CIC1Cos/d9_55 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_55 ), .Q1(\CIC1Cos/d_d9_56 ));
  CIC1Cos_SLICE_1855 \CIC1Cos/SLICE_1855 ( .M1(\CIC1Cos/d9_58 ), 
    .M0(\CIC1Cos/d9_57 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_57 ), .Q1(\CIC1Cos/d_d9_58 ));
  CIC1Cos_SLICE_1856 \CIC1Cos/SLICE_1856 ( .M1(\CIC1Cos/d9_60 ), 
    .M0(\CIC1Cos/d9_59 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_59 ), .Q1(\CIC1Cos/d_d9_60 ));
  CIC1Cos_SLICE_1857 \CIC1Cos/SLICE_1857 ( .M1(\CIC1Cos/d9_62 ), 
    .M0(\CIC1Cos/d9_61 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_61 ), .Q1(\CIC1Cos/d_d9_62 ));
  CIC1Cos_SLICE_1858 \CIC1Cos/SLICE_1858 ( .M1(\CIC1Cos/d9_64 ), 
    .M0(\CIC1Cos/d9_63 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_63 ), .Q1(\CIC1Cos/d_d9_64 ));
  CIC1Cos_SLICE_1859 \CIC1Cos/SLICE_1859 ( .M1(\CIC1Cos/d9_66 ), 
    .M0(\CIC1Cos/d9_65 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_65 ), .Q1(\CIC1Cos/d_d9_66 ));
  CIC1Cos_SLICE_1860 \CIC1Cos/SLICE_1860 ( .M1(\CIC1Cos/d9_68 ), 
    .M0(\CIC1Cos/d9_67 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_67 ), .Q1(\CIC1Cos/d_d9_68 ));
  CIC1Cos_SLICE_1861 \CIC1Cos/SLICE_1861 ( .M1(\CIC1Cos/d9_70 ), 
    .M0(\CIC1Cos/d9_69 ), .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_69 ), .Q1(\CIC1Cos/d_d9_70 ));
  CIC1Cos_SLICE_1862 \CIC1Cos/SLICE_1862 ( .M0(\CIC1Cos/d9_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_1383 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d9_71 ));
  CIC1Cos_SLICE_1863 \CIC1Cos/SLICE_1863 ( .M1(\CIC1Cos/d_tmp_1 ), 
    .M0(\CIC1Cos/d_tmp_0 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_0 ), .Q1(\CIC1Cos/d_d_tmp_1 ));
  CIC1Cos_SLICE_1864 \CIC1Cos/SLICE_1864 ( .M1(\CIC1Cos/d_tmp_3 ), 
    .M0(\CIC1Cos/d_tmp_2 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_2 ), .Q1(\CIC1Cos/d_d_tmp_3 ));
  CIC1Cos_SLICE_1865 \CIC1Cos/SLICE_1865 ( .M1(\CIC1Cos/d_tmp_5 ), 
    .M0(\CIC1Cos/d_tmp_4 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_4 ), .Q1(\CIC1Cos/d_d_tmp_5 ));
  CIC1Cos_SLICE_1866 \CIC1Cos/SLICE_1866 ( .M1(\CIC1Cos/d_tmp_7 ), 
    .M0(\CIC1Cos/d_tmp_6 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_6 ), .Q1(\CIC1Cos/d_d_tmp_7 ));
  CIC1Cos_SLICE_1867 \CIC1Cos/SLICE_1867 ( .M1(\CIC1Cos/d_tmp_9 ), 
    .M0(\CIC1Cos/d_tmp_8 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_8 ), .Q1(\CIC1Cos/d_d_tmp_9 ));
  CIC1Cos_SLICE_1868 \CIC1Cos/SLICE_1868 ( .M1(\CIC1Cos/d_tmp_11 ), 
    .M0(\CIC1Cos/d_tmp_10 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_10 ), .Q1(\CIC1Cos/d_d_tmp_11 ));
  CIC1Cos_SLICE_1869 \CIC1Cos/SLICE_1869 ( .M1(\CIC1Cos/d_tmp_13 ), 
    .M0(\CIC1Cos/d_tmp_12 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_12 ), .Q1(\CIC1Cos/d_d_tmp_13 ));
  CIC1Cos_SLICE_1870 \CIC1Cos/SLICE_1870 ( .M1(\CIC1Cos/d_tmp_15 ), 
    .M0(\CIC1Cos/d_tmp_14 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_14 ), .Q1(\CIC1Cos/d_d_tmp_15 ));
  CIC1Cos_SLICE_1871 \CIC1Cos/SLICE_1871 ( .M1(\CIC1Cos/d_tmp_17 ), 
    .M0(\CIC1Cos/d_tmp_16 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_16 ), .Q1(\CIC1Cos/d_d_tmp_17 ));
  CIC1Cos_SLICE_1872 \CIC1Cos/SLICE_1872 ( .M1(\CIC1Cos/d_tmp_19 ), 
    .M0(\CIC1Cos/d_tmp_18 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_18 ), .Q1(\CIC1Cos/d_d_tmp_19 ));
  CIC1Cos_SLICE_1873 \CIC1Cos/SLICE_1873 ( .M1(\CIC1Cos/d_tmp_21 ), 
    .M0(\CIC1Cos/d_tmp_20 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_20 ), .Q1(\CIC1Cos/d_d_tmp_21 ));
  CIC1Cos_SLICE_1874 \CIC1Cos/SLICE_1874 ( .M1(\CIC1Cos/d_tmp_23 ), 
    .M0(\CIC1Cos/d_tmp_22 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_22 ), .Q1(\CIC1Cos/d_d_tmp_23 ));
  CIC1Cos_SLICE_1875 \CIC1Cos/SLICE_1875 ( .M1(\CIC1Cos/d_tmp_25 ), 
    .M0(\CIC1Cos/d_tmp_24 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_24 ), .Q1(\CIC1Cos/d_d_tmp_25 ));
  CIC1Cos_SLICE_1876 \CIC1Cos/SLICE_1876 ( .M1(\CIC1Cos/d_tmp_27 ), 
    .M0(\CIC1Cos/d_tmp_26 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_26 ), .Q1(\CIC1Cos/d_d_tmp_27 ));
  CIC1Cos_SLICE_1877 \CIC1Cos/SLICE_1877 ( .M1(\CIC1Cos/d_tmp_29 ), 
    .M0(\CIC1Cos/d_tmp_28 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_28 ), .Q1(\CIC1Cos/d_d_tmp_29 ));
  CIC1Cos_SLICE_1878 \CIC1Cos/SLICE_1878 ( .M1(\CIC1Cos/d_tmp_31 ), 
    .M0(\CIC1Cos/d_tmp_30 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_30 ), .Q1(\CIC1Cos/d_d_tmp_31 ));
  CIC1Cos_SLICE_1879 \CIC1Cos/SLICE_1879 ( .M1(\CIC1Cos/d_tmp_33 ), 
    .M0(\CIC1Cos/d_tmp_32 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_32 ), .Q1(\CIC1Cos/d_d_tmp_33 ));
  CIC1Cos_SLICE_1880 \CIC1Cos/SLICE_1880 ( .M1(\CIC1Cos/d_tmp_35 ), 
    .M0(\CIC1Cos/d_tmp_34 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_34 ), .Q1(\CIC1Cos/d_d_tmp_35 ));
  CIC1Cos_SLICE_1881 \CIC1Cos/SLICE_1881 ( .M1(\CIC1Cos/d_tmp_37 ), 
    .M0(\CIC1Cos/d_tmp_36 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_36 ), .Q1(\CIC1Cos/d_d_tmp_37 ));
  CIC1Cos_SLICE_1882 \CIC1Cos/SLICE_1882 ( .M1(\CIC1Cos/d_tmp_39 ), 
    .M0(\CIC1Cos/d_tmp_38 ), .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_38 ), .Q1(\CIC1Cos/d_d_tmp_39 ));
  CIC1Cos_SLICE_1883 \CIC1Cos/SLICE_1883 ( .M0(\CIC1Cos/d_tmp_40 ), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_40 ));
  CIC1Cos_SLICE_1884 \CIC1Cos/SLICE_1884 ( .M1(\CIC1Cos/d_tmp_42 ), 
    .M0(\CIC1Cos/d_tmp_41 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_41 ), .Q1(\CIC1Cos/d_d_tmp_42 ));
  CIC1Cos_SLICE_1885 \CIC1Cos/SLICE_1885 ( .M1(\CIC1Cos/d_tmp_44 ), 
    .M0(\CIC1Cos/d_tmp_43 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_43 ), .Q1(\CIC1Cos/d_d_tmp_44 ));
  CIC1Cos_SLICE_1886 \CIC1Cos/SLICE_1886 ( .M1(\CIC1Cos/d_tmp_46 ), 
    .M0(\CIC1Cos/d_tmp_45 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_45 ), .Q1(\CIC1Cos/d_d_tmp_46 ));
  CIC1Cos_SLICE_1887 \CIC1Cos/SLICE_1887 ( .M1(\CIC1Cos/d_tmp_48 ), 
    .M0(\CIC1Cos/d_tmp_47 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_47 ), .Q1(\CIC1Cos/d_d_tmp_48 ));
  CIC1Cos_SLICE_1888 \CIC1Cos/SLICE_1888 ( .M1(\CIC1Cos/d_tmp_50 ), 
    .M0(\CIC1Cos/d_tmp_49 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_49 ), .Q1(\CIC1Cos/d_d_tmp_50 ));
  CIC1Cos_SLICE_1889 \CIC1Cos/SLICE_1889 ( .M1(\CIC1Cos/d_tmp_52 ), 
    .M0(\CIC1Cos/d_tmp_51 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_51 ), .Q1(\CIC1Cos/d_d_tmp_52 ));
  CIC1Cos_SLICE_1890 \CIC1Cos/SLICE_1890 ( .M1(\CIC1Cos/d_tmp_54 ), 
    .M0(\CIC1Cos/d_tmp_53 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_53 ), .Q1(\CIC1Cos/d_d_tmp_54 ));
  CIC1Cos_SLICE_1891 \CIC1Cos/SLICE_1891 ( .M1(\CIC1Cos/d_tmp_56 ), 
    .M0(\CIC1Cos/d_tmp_55 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_55 ), .Q1(\CIC1Cos/d_d_tmp_56 ));
  CIC1Cos_SLICE_1892 \CIC1Cos/SLICE_1892 ( .M1(\CIC1Cos/d_tmp_58 ), 
    .M0(\CIC1Cos/d_tmp_57 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_57 ), .Q1(\CIC1Cos/d_d_tmp_58 ));
  CIC1Cos_SLICE_1893 \CIC1Cos/SLICE_1893 ( .M1(\CIC1Cos/d_tmp_60 ), 
    .M0(\CIC1Cos/d_tmp_59 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_59 ), .Q1(\CIC1Cos/d_d_tmp_60 ));
  CIC1Cos_SLICE_1894 \CIC1Cos/SLICE_1894 ( .M1(\CIC1Cos/d_tmp_62 ), 
    .M0(\CIC1Cos/d_tmp_61 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_61 ), .Q1(\CIC1Cos/d_d_tmp_62 ));
  CIC1Cos_SLICE_1895 \CIC1Cos/SLICE_1895 ( .M1(\CIC1Cos/d_tmp_64 ), 
    .M0(\CIC1Cos/d_tmp_63 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_63 ), .Q1(\CIC1Cos/d_d_tmp_64 ));
  CIC1Cos_SLICE_1896 \CIC1Cos/SLICE_1896 ( .M1(\CIC1Cos/d_tmp_66 ), 
    .M0(\CIC1Cos/d_tmp_65 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_65 ), .Q1(\CIC1Cos/d_d_tmp_66 ));
  CIC1Cos_SLICE_1897 \CIC1Cos/SLICE_1897 ( .M1(\CIC1Cos/d_tmp_68 ), 
    .M0(\CIC1Cos/d_tmp_67 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_67 ), .Q1(\CIC1Cos/d_d_tmp_68 ));
  CIC1Cos_SLICE_1898 \CIC1Cos/SLICE_1898 ( .M1(\CIC1Cos/d_tmp_70 ), 
    .M0(\CIC1Cos/d_tmp_69 ), .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_69 ), .Q1(\CIC1Cos/d_d_tmp_70 ));
  CIC1Cos_SLICE_1899 \CIC1Cos/SLICE_1899 ( .M0(\CIC1Cos/d_tmp_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_833 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_71 ));
  CIC1Cos_SLICE_1900 \CIC1Cos/SLICE_1900 ( .M1(\CIC1Cos/d5_1 ), 
    .M0(\CIC1Cos/d5_0 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_0 ), .Q1(\CIC1Cos/d_tmp_1 ));
  CIC1Cos_SLICE_1901 \CIC1Cos/SLICE_1901 ( .M1(\CIC1Cos/d5_3 ), 
    .M0(\CIC1Cos/d5_2 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_2 ), .Q1(\CIC1Cos/d_tmp_3 ));
  CIC1Cos_SLICE_1902 \CIC1Cos/SLICE_1902 ( .M1(\CIC1Cos/d5_5 ), 
    .M0(\CIC1Cos/d5_4 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_4 ), .Q1(\CIC1Cos/d_tmp_5 ));
  CIC1Cos_SLICE_1903 \CIC1Cos/SLICE_1903 ( .M1(\CIC1Cos/d5_7 ), 
    .M0(\CIC1Cos/d5_6 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_6 ), .Q1(\CIC1Cos/d_tmp_7 ));
  CIC1Cos_SLICE_1904 \CIC1Cos/SLICE_1904 ( .M1(\CIC1Cos/d5_9 ), 
    .M0(\CIC1Cos/d5_8 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_8 ), .Q1(\CIC1Cos/d_tmp_9 ));
  CIC1Cos_SLICE_1905 \CIC1Cos/SLICE_1905 ( .M1(\CIC1Cos/d5_11 ), 
    .M0(\CIC1Cos/d5_10 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_10 ), .Q1(\CIC1Cos/d_tmp_11 ));
  CIC1Cos_SLICE_1906 \CIC1Cos/SLICE_1906 ( .M1(\CIC1Cos/d5_13 ), 
    .M0(\CIC1Cos/d5_12 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_12 ), .Q1(\CIC1Cos/d_tmp_13 ));
  CIC1Cos_SLICE_1907 \CIC1Cos/SLICE_1907 ( .M1(\CIC1Cos/d5_15 ), 
    .M0(\CIC1Cos/d5_14 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_14 ), .Q1(\CIC1Cos/d_tmp_15 ));
  CIC1Cos_SLICE_1908 \CIC1Cos/SLICE_1908 ( .M1(\CIC1Cos/d5_17 ), 
    .M0(\CIC1Cos/d5_16 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_16 ), .Q1(\CIC1Cos/d_tmp_17 ));
  CIC1Cos_SLICE_1909 \CIC1Cos/SLICE_1909 ( .M1(\CIC1Cos/d5_19 ), 
    .M0(\CIC1Cos/d5_18 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_18 ), .Q1(\CIC1Cos/d_tmp_19 ));
  CIC1Cos_SLICE_1910 \CIC1Cos/SLICE_1910 ( .M1(\CIC1Cos/d5_21 ), 
    .M0(\CIC1Cos/d5_20 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_20 ), .Q1(\CIC1Cos/d_tmp_21 ));
  CIC1Cos_SLICE_1911 \CIC1Cos/SLICE_1911 ( .M1(\CIC1Cos/d5_23 ), 
    .M0(\CIC1Cos/d5_22 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_22 ), .Q1(\CIC1Cos/d_tmp_23 ));
  CIC1Cos_SLICE_1912 \CIC1Cos/SLICE_1912 ( .M1(\CIC1Cos/d5_25 ), 
    .M0(\CIC1Cos/d5_24 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_24 ), .Q1(\CIC1Cos/d_tmp_25 ));
  CIC1Cos_SLICE_1913 \CIC1Cos/SLICE_1913 ( .M1(\CIC1Cos/d5_27 ), 
    .M0(\CIC1Cos/d5_26 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_26 ), .Q1(\CIC1Cos/d_tmp_27 ));
  CIC1Cos_SLICE_1914 \CIC1Cos/SLICE_1914 ( .M1(\CIC1Cos/d5_29 ), 
    .M0(\CIC1Cos/d5_28 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_28 ), .Q1(\CIC1Cos/d_tmp_29 ));
  CIC1Cos_SLICE_1915 \CIC1Cos/SLICE_1915 ( .M1(\CIC1Cos/d5_31 ), 
    .M0(\CIC1Cos/d5_30 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_30 ), .Q1(\CIC1Cos/d_tmp_31 ));
  CIC1Cos_SLICE_1916 \CIC1Cos/SLICE_1916 ( .M1(\CIC1Cos/d5_33 ), 
    .M0(\CIC1Cos/d5_32 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_32 ), .Q1(\CIC1Cos/d_tmp_33 ));
  CIC1Cos_SLICE_1917 \CIC1Cos/SLICE_1917 ( .M1(\CIC1Cos/d5_35 ), 
    .M0(\CIC1Cos/d5_34 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_34 ), .Q1(\CIC1Cos/d_tmp_35 ));
  CIC1Cos_SLICE_1918 \CIC1Cos/SLICE_1918 ( .M1(\CIC1Cos/d5_37 ), 
    .M0(\CIC1Cos/d5_36 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_36 ), .Q1(\CIC1Cos/d_tmp_37 ));
  CIC1Cos_SLICE_1919 \CIC1Cos/SLICE_1919 ( .M1(\CIC1Cos/d5_39 ), 
    .M0(\CIC1Cos/d5_38 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_38 ), .Q1(\CIC1Cos/d_tmp_39 ));
  CIC1Cos_SLICE_1920 \CIC1Cos/SLICE_1920 ( .M1(\CIC1Cos/d5_41 ), 
    .M0(\CIC1Cos/d5_40 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_40 ), .Q1(\CIC1Cos/d_tmp_41 ));
  CIC1Cos_SLICE_1921 \CIC1Cos/SLICE_1921 ( .M1(\CIC1Cos/d5_43 ), 
    .M0(\CIC1Cos/d5_42 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_42 ), .Q1(\CIC1Cos/d_tmp_43 ));
  CIC1Cos_SLICE_1922 \CIC1Cos/SLICE_1922 ( .M1(\CIC1Cos/d5_45 ), 
    .M0(\CIC1Cos/d5_44 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_44 ), .Q1(\CIC1Cos/d_tmp_45 ));
  CIC1Cos_SLICE_1923 \CIC1Cos/SLICE_1923 ( .M1(\CIC1Cos/d5_47 ), 
    .M0(\CIC1Cos/d5_46 ), .CE(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_46 ), .Q1(\CIC1Cos/d_tmp_47 ));
  CIC1Cos_SLICE_1924 \CIC1Cos/SLICE_1924 ( .M1(\CIC1Cos/d5_49 ), 
    .M0(\CIC1Cos/d5_48 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_48 ), .Q1(\CIC1Cos/d_tmp_49 ));
  CIC1Cos_SLICE_1925 \CIC1Cos/SLICE_1925 ( .M1(\CIC1Cos/d5_51 ), 
    .M0(\CIC1Cos/d5_50 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_50 ), .Q1(\CIC1Cos/d_tmp_51 ));
  CIC1Cos_SLICE_1926 \CIC1Cos/SLICE_1926 ( .M1(\CIC1Cos/d5_53 ), 
    .M0(\CIC1Cos/d5_52 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_52 ), .Q1(\CIC1Cos/d_tmp_53 ));
  CIC1Cos_SLICE_1927 \CIC1Cos/SLICE_1927 ( .M1(\CIC1Cos/d5_55 ), 
    .M0(\CIC1Cos/d5_54 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_54 ), .Q1(\CIC1Cos/d_tmp_55 ));
  CIC1Cos_SLICE_1928 \CIC1Cos/SLICE_1928 ( .M1(\CIC1Cos/d5_57 ), 
    .M0(\CIC1Cos/d5_56 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_56 ), .Q1(\CIC1Cos/d_tmp_57 ));
  CIC1Cos_SLICE_1929 \CIC1Cos/SLICE_1929 ( .M1(\CIC1Cos/d5_59 ), 
    .M0(\CIC1Cos/d5_58 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_58 ), .Q1(\CIC1Cos/d_tmp_59 ));
  CIC1Cos_SLICE_1930 \CIC1Cos/SLICE_1930 ( .M1(\CIC1Cos/d5_61 ), 
    .M0(\CIC1Cos/d5_60 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_60 ), .Q1(\CIC1Cos/d_tmp_61 ));
  CIC1Cos_SLICE_1931 \CIC1Cos/SLICE_1931 ( .M1(\CIC1Cos/d5_63 ), 
    .M0(\CIC1Cos/d5_62 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_62 ), .Q1(\CIC1Cos/d_tmp_63 ));
  CIC1Cos_SLICE_1932 \CIC1Cos/SLICE_1932 ( .M1(\CIC1Cos/d5_65 ), 
    .M0(\CIC1Cos/d5_64 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_64 ), .Q1(\CIC1Cos/d_tmp_65 ));
  CIC1Cos_SLICE_1933 \CIC1Cos/SLICE_1933 ( .M1(\CIC1Cos/d5_67 ), 
    .M0(\CIC1Cos/d5_66 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_66 ), .Q1(\CIC1Cos/d_tmp_67 ));
  CIC1Cos_SLICE_1934 \CIC1Cos/SLICE_1934 ( .M1(\CIC1Cos/d5_69 ), 
    .M0(\CIC1Cos/d5_68 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_68 ), .Q1(\CIC1Cos/d_tmp_69 ));
  CIC1Cos_SLICE_1935 \CIC1Cos/SLICE_1935 ( .M1(\CIC1Cos/d5_71 ), 
    .M0(\CIC1Cos/d5_70 ), .CE(\CIC1Cos/count_15__N_1457 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_70 ), .Q1(\CIC1Cos/d_tmp_71 ));
  CIC1Cos_SLICE_1936 \CIC1Cos/SLICE_1936 ( .D1(\CIC1Cos/count_7 ), 
    .C1(\CIC1Cos/count_1 ), .B1(\CIC1Cos/count_8 ), .A1(\CIC1Cos/count_0 ), 
    .D0(\CIC1Cos/n13228 ), .C0(\CIC1Cos/n13250 ), .B0(\CIC1Cos/n13 ), 
    .A0(\CIC1Cos/n13248 ), .DI0(\CIC1Cos/osc_clk_enable_743 ), 
    .M1(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/osc_clk_enable_743 ), .Q0(\CIC1Cos/osc_clk_enable_783 ), 
    .F1(\CIC1Cos/n13248 ), .Q1(\CIC1Cos/osc_clk_enable_833 ));
  CIC1Cos_SLICE_1937 \CIC1Cos/SLICE_1937 ( .M1(\CIC1Cos/osc_clk_enable_743 ), 
    .M0(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_883 ), .Q1(\CIC1Cos/osc_clk_enable_933 ));
  CIC1Cos_SLICE_1938 \CIC1Cos/SLICE_1938 ( .M1(\CIC1Cos/osc_clk_enable_743 ), 
    .M0(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_983 ), .Q1(\CIC1Cos/osc_clk_enable_1033 ));
  CIC1Cos_SLICE_1939 \CIC1Cos/SLICE_1939 ( .M1(\CIC1Cos/osc_clk_enable_743 ), 
    .M0(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_1083 ), .Q1(\CIC1Cos/osc_clk_enable_1133 ));
  CIC1Cos_SLICE_1940 \CIC1Cos/SLICE_1940 ( .M1(\CIC1Cos/osc_clk_enable_743 ), 
    .M0(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_1183 ), .Q1(\CIC1Cos/osc_clk_enable_1233 ));
  CIC1Cos_SLICE_1941 \CIC1Cos/SLICE_1941 ( .M1(\CIC1Cos/osc_clk_enable_743 ), 
    .M0(\CIC1Cos/osc_clk_enable_743 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_1283 ), .Q1(\CIC1Cos/osc_clk_enable_1333 ));
  CIC1Cos_SLICE_1942 \CIC1Cos/SLICE_1942 ( .M0(\CIC1Cos/osc_clk_enable_743 ), 
    .CLK(osc_clk), .Q0(\CIC1Cos/osc_clk_enable_1383 ));
  CIC1Cos_SLICE_1943 \CIC1Cos/SLICE_1943 ( .M0(\CIC1Cos/osc_clk_enable_743 ), 
    .CLK(osc_clk), .Q0(\CIC1Cos/v_comb ));
  CIC1Sin_SLICE_1944 \CIC1Sin/SLICE_1944 ( .D1(\CIC1Sin/count_0 ), 
    .C1(\CIC1Sin/count_4 ), .B1(\CIC1Sin/count_3 ), .A1(\CIC1Sin/count_9 ), 
    .B0(\CIC1Sin/n31 ), .A0(\CIC1Sin/n391 ), .DI0(\CIC1Sin/count_15_N_1441_0 ), 
    .LSR(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/count_15_N_1441_0 ), .Q0(\CIC1Sin/count_0 ), 
    .F1(\CIC1Sin/n21 ));
  CIC1Sin_SLICE_1945 \CIC1Sin/SLICE_1945 ( .B1(\CIC1Sin/count_7 ), 
    .A1(\CIC1Sin/count_8 ), .B0(\CIC1Sin/n31 ), .A0(\CIC1Sin/n380 ), 
    .DI0(\CIC1Sin/count_15_N_1441_11 ), .LSR(\CIC1Sin/d_clk_tmp_N_1830 ), 
    .CLK(osc_clk), .F0(\CIC1Sin/count_15_N_1441_11 ), .Q0(\CIC1Sin/count_11 ), 
    .F1(\CIC1Sin/n15 ));
  CIC1Sin_SLICE_1946 \CIC1Sin/SLICE_1946 ( .C0(\CIC1Sin/n6318 ), 
    .B0(\CIC1Sin/n6372 ), .A0(\CIC1Sin/n6334 ), 
    .DI0(\CIC1Sin/d10_71_N_1746_57 ), .CE(\CIC1Sin/osc_clk_enable_696 ), 
    .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1746_57 ), .Q0(\CIC1Sin/d10_57 ));
  CIC1Sin_SLICE_1947 \CIC1Sin/SLICE_1947 ( .C1(\CIC1Sin/n6318 ), 
    .B1(\CIC1Sin/n6370 ), .A1(\CIC1Sin/n6332 ), .C0(\CIC1Sin/n6318 ), 
    .B0(\CIC1Sin/n6371 ), .A0(\CIC1Sin/n6333 ), 
    .DI1(\CIC1Sin/d10_71_N_1746_59 ), .DI0(\CIC1Sin/d10_71_N_1746_58 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1746_58 ), 
    .Q0(\CIC1Sin/d10_58 ), .F1(\CIC1Sin/d10_71_N_1746_59 ), 
    .Q1(\CIC1Sin/d10_59 ));
  CIC1Sin_SLICE_1948 \CIC1Sin/SLICE_1948 ( .C1(\CIC1Sin/n6318 ), 
    .B1(\CIC1Sin/n6368 ), .A1(\CIC1Sin/n6330 ), .C0(\CIC1Sin/n6318 ), 
    .B0(\CIC1Sin/n6369 ), .A0(\CIC1Sin/n6331 ), 
    .DI1(\CIC1Sin/d10_71_N_1746_61 ), .DI0(\CIC1Sin/d10_71_N_1746_60 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1746_60 ), 
    .Q0(\CIC1Sin/d10_60 ), .F1(\CIC1Sin/d10_71_N_1746_61 ), 
    .Q1(\CIC1Sin/d10_61 ));
  CIC1Sin_SLICE_1949 \CIC1Sin/SLICE_1949 ( .C1(\CIC1Sin/n6318 ), 
    .B1(\CIC1Sin/n6366 ), .A1(\CIC1Sin/n6328 ), .C0(\CIC1Sin/n6318 ), 
    .B0(\CIC1Sin/n6367 ), .A0(\CIC1Sin/n6329 ), 
    .DI1(\CIC1Sin/d10_71_N_1746_63 ), .DI0(\CIC1Sin/d10_71_N_1746_62 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1746_62 ), 
    .Q0(\CIC1Sin/d10_62 ), .F1(\CIC1Sin/d10_71_N_1746_63 ), 
    .Q1(\CIC1Sin/d10_63 ));
  CIC1Sin_SLICE_1950 \CIC1Sin/SLICE_1950 ( .C1(\CIC1Sin/n6318 ), 
    .B1(\CIC1Sin/n6364 ), .A1(\CIC1Sin/n6326 ), .C0(\CIC1Sin/n6318 ), 
    .B0(\CIC1Sin/n6365 ), .A0(\CIC1Sin/n6327 ), 
    .DI1(\CIC1Sin/d10_71_N_1746_65 ), .DI0(\CIC1Sin/d10_71_N_1746_64 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1746_64 ), 
    .Q0(\CIC1Sin/d10_64 ), .F1(\CIC1Sin/d10_71_N_1746_65 ), 
    .Q1(\CIC1Sin/d10_65 ));
  CIC1Sin_SLICE_1951 \CIC1Sin/SLICE_1951 ( .C1(\CIC1Sin/n6318 ), 
    .B1(\CIC1Sin/n6362 ), .A1(\CIC1Sin/n6324 ), .C0(\CIC1Sin/n6318 ), 
    .B0(\CIC1Sin/n6363 ), .A0(\CIC1Sin/n6325 ), 
    .DI1(\CIC1Sin/d10_71_N_1746_67 ), .DI0(\CIC1Sin/d10_71_N_1746_66 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1746_66 ), 
    .Q0(\CIC1Sin/d10_66 ), .F1(\CIC1Sin/d10_71_N_1746_67 ), 
    .Q1(\CIC1Sin/d10_67 ));
  CIC1Sin_SLICE_1952 \CIC1Sin/SLICE_1952 ( .C1(\CIC1Sin/n6318 ), 
    .B1(\CIC1Sin/n6360 ), .A1(\CIC1Sin/n6322 ), .C0(\CIC1Sin/n6318 ), 
    .B0(\CIC1Sin/n6361 ), .A0(\CIC1Sin/n6323 ), 
    .DI1(\CIC1Sin/d10_71_N_1746_69 ), .DI0(\CIC1Sin/d10_71_N_1746_68 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1746_68 ), 
    .Q0(\CIC1Sin/d10_68 ), .F1(\CIC1Sin/d10_71_N_1746_69 ), 
    .Q1(\CIC1Sin/d10_69 ));
  CIC1Sin_SLICE_1953 \CIC1Sin/SLICE_1953 ( .C1(\CIC1Sin/n6318 ), 
    .B1(\CIC1Sin/n6358 ), .A1(\CIC1Sin/n6320 ), .C0(\CIC1Sin/n6318 ), 
    .B0(\CIC1Sin/n6359 ), .A0(\CIC1Sin/n6321 ), 
    .DI1(\CIC1Sin/d10_71_N_1746_71 ), .DI0(\CIC1Sin/d10_71_N_1746_70 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1746_70 ), 
    .Q0(\CIC1Sin/d10_70 ), .F1(\CIC1Sin/d10_71_N_1746_71 ), 
    .Q1(\CIC1Sin/d10_71 ));
  CIC1Sin_SLICE_1954 \CIC1Sin/SLICE_1954 ( .B0(\CIC1Sin/d1_0 ), 
    .A0(MixerOutSin_0), .DI0(\CIC1Sin/d1_71_N_417_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d1_71_N_417_0 ), .Q0(\CIC1Sin/d1_0 ));
  CIC1Sin_SLICE_1955 \CIC1Sin/SLICE_1955 ( .B0(\CIC1Sin/d2_0 ), 
    .A0(\CIC1Sin/d1_0 ), .DI0(\CIC1Sin/d2_71_N_489_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d2_71_N_489_0 ), .Q0(\CIC1Sin/d2_0 ));
  CIC1Sin_SLICE_1956 \CIC1Sin/SLICE_1956 ( .B0(\CIC1Sin/d3_0 ), 
    .A0(\CIC1Sin/d2_0 ), .DI0(\CIC1Sin/d3_71_N_561_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d3_71_N_561_0 ), .Q0(\CIC1Sin/d3_0 ));
  CIC1Sin_SLICE_1957 \CIC1Sin/SLICE_1957 ( .B0(\CIC1Sin/d4_0 ), 
    .A0(\CIC1Sin/d3_0 ), .DI0(\CIC1Sin/d4_71_N_633_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d4_71_N_633_0 ), .Q0(\CIC1Sin/d4_0 ));
  CIC1Sin_SLICE_1958 \CIC1Sin/SLICE_1958 ( .B0(\CIC1Sin/d5_0 ), 
    .A0(\CIC1Sin/d4_0 ), .DI0(\CIC1Sin/d5_71_N_705_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d5_71_N_705_0 ), .Q0(\CIC1Sin/d5_0 ));
  CIC1Sin_SLICE_1959 \CIC1Sin/SLICE_1959 ( .M0(\CIC1Sin/d6_71_N_1458_20 ), 
    .CE(\CIC1Sin/osc_clk_enable_196 ), .CLK(osc_clk), .Q0(\CIC1Sin/d6_20 ));
  CIC1Sin_SLICE_1960 \CIC1Sin/SLICE_1960 ( .M0(\CIC1Sin/d7_71_N_1530_28 ), 
    .CE(\CIC1Sin/osc_clk_enable_346 ), .CLK(osc_clk), .Q0(\CIC1Sin/d7_28 ));
  CIC1Sin_SLICE_1961 \CIC1Sin/SLICE_1961 ( .D1(\CIC1Sin/n16 ), 
    .C1(\CIC1Sin/n15 ), .B1(\CIC1Sin/n19 ), .A1(\CIC1Sin/n21 ), 
    .B0(\CIC1Sin/d_clk_tmp ), .A0(\CIC1Sin/n31 ), .DI0(\CIC1Sin/n8331 ), 
    .LSR(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), .F0(\CIC1Sin/n8331 ), 
    .Q0(\CIC1Sin/d_clk_tmp ), .F1(\CIC1Sin/n31 ));
  CIC1Sin_SLICE_1962 \CIC1Sin/SLICE_1962 ( .M0(\CIC1Sin/d6_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d6_0 ));
  CIC1Sin_SLICE_1963 \CIC1Sin/SLICE_1963 ( .M1(\CIC1Sin/d6_2 ), 
    .M0(\CIC1Sin/d6_1 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_1 ), .Q1(\CIC1Sin/d_d6_2 ));
  CIC1Sin_SLICE_1964 \CIC1Sin/SLICE_1964 ( .M1(\CIC1Sin/d6_4 ), 
    .M0(\CIC1Sin/d6_3 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_3 ), .Q1(\CIC1Sin/d_d6_4 ));
  CIC1Sin_SLICE_1965 \CIC1Sin/SLICE_1965 ( .M1(\CIC1Sin/d6_6 ), 
    .M0(\CIC1Sin/d6_5 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_5 ), .Q1(\CIC1Sin/d_d6_6 ));
  CIC1Sin_SLICE_1966 \CIC1Sin/SLICE_1966 ( .M1(\CIC1Sin/d6_8 ), 
    .M0(\CIC1Sin/d6_7 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_7 ), .Q1(\CIC1Sin/d_d6_8 ));
  CIC1Sin_SLICE_1967 \CIC1Sin/SLICE_1967 ( .M1(\CIC1Sin/d6_10 ), 
    .M0(\CIC1Sin/d6_9 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_9 ), .Q1(\CIC1Sin/d_d6_10 ));
  CIC1Sin_SLICE_1968 \CIC1Sin/SLICE_1968 ( .M1(\CIC1Sin/d6_12 ), 
    .M0(\CIC1Sin/d6_11 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_11 ), .Q1(\CIC1Sin/d_d6_12 ));
  CIC1Sin_SLICE_1969 \CIC1Sin/SLICE_1969 ( .M1(\CIC1Sin/d6_14 ), 
    .M0(\CIC1Sin/d6_13 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_13 ), .Q1(\CIC1Sin/d_d6_14 ));
  CIC1Sin_SLICE_1970 \CIC1Sin/SLICE_1970 ( .M1(\CIC1Sin/d6_16 ), 
    .M0(\CIC1Sin/d6_15 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_15 ), .Q1(\CIC1Sin/d_d6_16 ));
  CIC1Sin_SLICE_1971 \CIC1Sin/SLICE_1971 ( .M1(\CIC1Sin/d6_18 ), 
    .M0(\CIC1Sin/d6_17 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_17 ), .Q1(\CIC1Sin/d_d6_18 ));
  CIC1Sin_SLICE_1972 \CIC1Sin/SLICE_1972 ( .M1(\CIC1Sin/d6_20 ), 
    .M0(\CIC1Sin/d6_19 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_19 ), .Q1(\CIC1Sin/d_d6_20 ));
  CIC1Sin_SLICE_1973 \CIC1Sin/SLICE_1973 ( .M1(\CIC1Sin/d6_22 ), 
    .M0(\CIC1Sin/d6_21 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_21 ), .Q1(\CIC1Sin/d_d6_22 ));
  CIC1Sin_SLICE_1974 \CIC1Sin/SLICE_1974 ( .M1(\CIC1Sin/d6_24 ), 
    .M0(\CIC1Sin/d6_23 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_23 ), .Q1(\CIC1Sin/d_d6_24 ));
  CIC1Sin_SLICE_1975 \CIC1Sin/SLICE_1975 ( .M1(\CIC1Sin/d6_26 ), 
    .M0(\CIC1Sin/d6_25 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_25 ), .Q1(\CIC1Sin/d_d6_26 ));
  CIC1Sin_SLICE_1976 \CIC1Sin/SLICE_1976 ( .M1(\CIC1Sin/d6_28 ), 
    .M0(\CIC1Sin/d6_27 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_27 ), .Q1(\CIC1Sin/d_d6_28 ));
  CIC1Sin_SLICE_1977 \CIC1Sin/SLICE_1977 ( .M1(\CIC1Sin/d6_30 ), 
    .M0(\CIC1Sin/d6_29 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_29 ), .Q1(\CIC1Sin/d_d6_30 ));
  CIC1Sin_SLICE_1978 \CIC1Sin/SLICE_1978 ( .M1(\CIC1Sin/d6_32 ), 
    .M0(\CIC1Sin/d6_31 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_31 ), .Q1(\CIC1Sin/d_d6_32 ));
  CIC1Sin_SLICE_1979 \CIC1Sin/SLICE_1979 ( .M1(\CIC1Sin/d6_34 ), 
    .M0(\CIC1Sin/d6_33 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_33 ), .Q1(\CIC1Sin/d_d6_34 ));
  CIC1Sin_SLICE_1980 \CIC1Sin/SLICE_1980 ( .M1(\CIC1Sin/d6_36 ), 
    .M0(\CIC1Sin/d6_35 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_35 ), .Q1(\CIC1Sin/d_d6_36 ));
  CIC1Sin_SLICE_1981 \CIC1Sin/SLICE_1981 ( .M1(\CIC1Sin/d6_38 ), 
    .M0(\CIC1Sin/d6_37 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_37 ), .Q1(\CIC1Sin/d_d6_38 ));
  CIC1Sin_SLICE_1982 \CIC1Sin/SLICE_1982 ( .M1(\CIC1Sin/d6_40 ), 
    .M0(\CIC1Sin/d6_39 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_39 ), .Q1(\CIC1Sin/d_d6_40 ));
  CIC1Sin_SLICE_1983 \CIC1Sin/SLICE_1983 ( .M1(\CIC1Sin/d6_42 ), 
    .M0(\CIC1Sin/d6_41 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_41 ), .Q1(\CIC1Sin/d_d6_42 ));
  CIC1Sin_SLICE_1984 \CIC1Sin/SLICE_1984 ( .M1(\CIC1Sin/d6_44 ), 
    .M0(\CIC1Sin/d6_43 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_43 ), .Q1(\CIC1Sin/d_d6_44 ));
  CIC1Sin_SLICE_1985 \CIC1Sin/SLICE_1985 ( .M1(\CIC1Sin/d6_46 ), 
    .M0(\CIC1Sin/d6_45 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_45 ), .Q1(\CIC1Sin/d_d6_46 ));
  CIC1Sin_SLICE_1986 \CIC1Sin/SLICE_1986 ( .M1(\CIC1Sin/d6_48 ), 
    .M0(\CIC1Sin/d6_47 ), .CE(\CIC1Sin/osc_clk_enable_246 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_47 ), .Q1(\CIC1Sin/d_d6_48 ));
  CIC1Sin_SLICE_1987 \CIC1Sin/SLICE_1987 ( .M1(\CIC1Sin/d6_50 ), 
    .M0(\CIC1Sin/d6_49 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_49 ), .Q1(\CIC1Sin/d_d6_50 ));
  CIC1Sin_SLICE_1988 \CIC1Sin/SLICE_1988 ( .M1(\CIC1Sin/d6_52 ), 
    .M0(\CIC1Sin/d6_51 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_51 ), .Q1(\CIC1Sin/d_d6_52 ));
  CIC1Sin_SLICE_1989 \CIC1Sin/SLICE_1989 ( .M1(\CIC1Sin/d6_54 ), 
    .M0(\CIC1Sin/d6_53 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_53 ), .Q1(\CIC1Sin/d_d6_54 ));
  CIC1Sin_SLICE_1990 \CIC1Sin/SLICE_1990 ( .M1(\CIC1Sin/d6_56 ), 
    .M0(\CIC1Sin/d6_55 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_55 ), .Q1(\CIC1Sin/d_d6_56 ));
  CIC1Sin_SLICE_1991 \CIC1Sin/SLICE_1991 ( .M1(\CIC1Sin/d6_58 ), 
    .M0(\CIC1Sin/d6_57 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_57 ), .Q1(\CIC1Sin/d_d6_58 ));
  CIC1Sin_SLICE_1992 \CIC1Sin/SLICE_1992 ( .M1(\CIC1Sin/d6_60 ), 
    .M0(\CIC1Sin/d6_59 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_59 ), .Q1(\CIC1Sin/d_d6_60 ));
  CIC1Sin_SLICE_1993 \CIC1Sin/SLICE_1993 ( .M1(\CIC1Sin/d6_62 ), 
    .M0(\CIC1Sin/d6_61 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_61 ), .Q1(\CIC1Sin/d_d6_62 ));
  CIC1Sin_SLICE_1994 \CIC1Sin/SLICE_1994 ( .M1(\CIC1Sin/d6_64 ), 
    .M0(\CIC1Sin/d6_63 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_63 ), .Q1(\CIC1Sin/d_d6_64 ));
  CIC1Sin_SLICE_1995 \CIC1Sin/SLICE_1995 ( .M1(\CIC1Sin/d6_66 ), 
    .M0(\CIC1Sin/d6_65 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_65 ), .Q1(\CIC1Sin/d_d6_66 ));
  CIC1Sin_SLICE_1996 \CIC1Sin/SLICE_1996 ( .M1(\CIC1Sin/d6_68 ), 
    .M0(\CIC1Sin/d6_67 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_67 ), .Q1(\CIC1Sin/d_d6_68 ));
  CIC1Sin_SLICE_1997 \CIC1Sin/SLICE_1997 ( .M1(\CIC1Sin/d6_70 ), 
    .M0(\CIC1Sin/d6_69 ), .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_69 ), .Q1(\CIC1Sin/d_d6_70 ));
  CIC1Sin_SLICE_1998 \CIC1Sin/SLICE_1998 ( .M0(\CIC1Sin/d6_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_296 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d6_71 ));
  CIC1Sin_SLICE_1999 \CIC1Sin/SLICE_1999 ( .M0(\CIC1Sin/d7_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d7_0 ));
  CIC1Sin_SLICE_2000 \CIC1Sin/SLICE_2000 ( .M1(\CIC1Sin/d7_2 ), 
    .M0(\CIC1Sin/d7_1 ), .CE(\CIC1Sin/osc_clk_enable_346 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_1 ), .Q1(\CIC1Sin/d_d7_2 ));
  CIC1Sin_SLICE_2001 \CIC1Sin/SLICE_2001 ( .M1(\CIC1Sin/d7_4 ), 
    .M0(\CIC1Sin/d7_3 ), .CE(\CIC1Sin/osc_clk_enable_346 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_3 ), .Q1(\CIC1Sin/d_d7_4 ));
  CIC1Sin_SLICE_2002 \CIC1Sin/SLICE_2002 ( .M1(\CIC1Sin/d7_6 ), 
    .M0(\CIC1Sin/d7_5 ), .CE(\CIC1Sin/osc_clk_enable_346 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_5 ), .Q1(\CIC1Sin/d_d7_6 ));
  CIC1Sin_SLICE_2003 \CIC1Sin/SLICE_2003 ( .M1(\CIC1Sin/d7_8 ), 
    .M0(\CIC1Sin/d7_7 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_7 ), .Q1(\CIC1Sin/d_d7_8 ));
  CIC1Sin_SLICE_2004 \CIC1Sin/SLICE_2004 ( .M1(\CIC1Sin/d7_10 ), 
    .M0(\CIC1Sin/d7_9 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_9 ), .Q1(\CIC1Sin/d_d7_10 ));
  CIC1Sin_SLICE_2005 \CIC1Sin/SLICE_2005 ( .M1(\CIC1Sin/d7_12 ), 
    .M0(\CIC1Sin/d7_11 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_11 ), .Q1(\CIC1Sin/d_d7_12 ));
  CIC1Sin_SLICE_2006 \CIC1Sin/SLICE_2006 ( .M1(\CIC1Sin/d7_14 ), 
    .M0(\CIC1Sin/d7_13 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_13 ), .Q1(\CIC1Sin/d_d7_14 ));
  CIC1Sin_SLICE_2007 \CIC1Sin/SLICE_2007 ( .M1(\CIC1Sin/d7_16 ), 
    .M0(\CIC1Sin/d7_15 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_15 ), .Q1(\CIC1Sin/d_d7_16 ));
  CIC1Sin_SLICE_2008 \CIC1Sin/SLICE_2008 ( .M1(\CIC1Sin/d7_18 ), 
    .M0(\CIC1Sin/d7_17 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_17 ), .Q1(\CIC1Sin/d_d7_18 ));
  CIC1Sin_SLICE_2009 \CIC1Sin/SLICE_2009 ( .M1(\CIC1Sin/d7_20 ), 
    .M0(\CIC1Sin/d7_19 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_19 ), .Q1(\CIC1Sin/d_d7_20 ));
  CIC1Sin_SLICE_2010 \CIC1Sin/SLICE_2010 ( .M1(\CIC1Sin/d7_22 ), 
    .M0(\CIC1Sin/d7_21 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_21 ), .Q1(\CIC1Sin/d_d7_22 ));
  CIC1Sin_SLICE_2011 \CIC1Sin/SLICE_2011 ( .M1(\CIC1Sin/d7_24 ), 
    .M0(\CIC1Sin/d7_23 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_23 ), .Q1(\CIC1Sin/d_d7_24 ));
  CIC1Sin_SLICE_2012 \CIC1Sin/SLICE_2012 ( .M1(\CIC1Sin/d7_26 ), 
    .M0(\CIC1Sin/d7_25 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_25 ), .Q1(\CIC1Sin/d_d7_26 ));
  CIC1Sin_SLICE_2013 \CIC1Sin/SLICE_2013 ( .M1(\CIC1Sin/d7_28 ), 
    .M0(\CIC1Sin/d7_27 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_27 ), .Q1(\CIC1Sin/d_d7_28 ));
  CIC1Sin_SLICE_2014 \CIC1Sin/SLICE_2014 ( .M1(\CIC1Sin/d7_30 ), 
    .M0(\CIC1Sin/d7_29 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_29 ), .Q1(\CIC1Sin/d_d7_30 ));
  CIC1Sin_SLICE_2015 \CIC1Sin/SLICE_2015 ( .M1(\CIC1Sin/d7_32 ), 
    .M0(\CIC1Sin/d7_31 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_31 ), .Q1(\CIC1Sin/d_d7_32 ));
  CIC1Sin_SLICE_2016 \CIC1Sin/SLICE_2016 ( .M1(\CIC1Sin/d7_34 ), 
    .M0(\CIC1Sin/d7_33 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_33 ), .Q1(\CIC1Sin/d_d7_34 ));
  CIC1Sin_SLICE_2017 \CIC1Sin/SLICE_2017 ( .M1(\CIC1Sin/d7_36 ), 
    .M0(\CIC1Sin/d7_35 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_35 ), .Q1(\CIC1Sin/d_d7_36 ));
  CIC1Sin_SLICE_2018 \CIC1Sin/SLICE_2018 ( .M1(\CIC1Sin/d7_38 ), 
    .M0(\CIC1Sin/d7_37 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_37 ), .Q1(\CIC1Sin/d_d7_38 ));
  CIC1Sin_SLICE_2019 \CIC1Sin/SLICE_2019 ( .M1(\CIC1Sin/d7_40 ), 
    .M0(\CIC1Sin/d7_39 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_39 ), .Q1(\CIC1Sin/d_d7_40 ));
  CIC1Sin_SLICE_2020 \CIC1Sin/SLICE_2020 ( .M1(\CIC1Sin/d7_42 ), 
    .M0(\CIC1Sin/d7_41 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_41 ), .Q1(\CIC1Sin/d_d7_42 ));
  CIC1Sin_SLICE_2021 \CIC1Sin/SLICE_2021 ( .M1(\CIC1Sin/d7_44 ), 
    .M0(\CIC1Sin/d7_43 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_43 ), .Q1(\CIC1Sin/d_d7_44 ));
  CIC1Sin_SLICE_2022 \CIC1Sin/SLICE_2022 ( .M1(\CIC1Sin/d7_46 ), 
    .M0(\CIC1Sin/d7_45 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_45 ), .Q1(\CIC1Sin/d_d7_46 ));
  CIC1Sin_SLICE_2023 \CIC1Sin/SLICE_2023 ( .M1(\CIC1Sin/d7_48 ), 
    .M0(\CIC1Sin/d7_47 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_47 ), .Q1(\CIC1Sin/d_d7_48 ));
  CIC1Sin_SLICE_2024 \CIC1Sin/SLICE_2024 ( .M1(\CIC1Sin/d7_50 ), 
    .M0(\CIC1Sin/d7_49 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_49 ), .Q1(\CIC1Sin/d_d7_50 ));
  CIC1Sin_SLICE_2025 \CIC1Sin/SLICE_2025 ( .M1(\CIC1Sin/d7_52 ), 
    .M0(\CIC1Sin/d7_51 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_51 ), .Q1(\CIC1Sin/d_d7_52 ));
  CIC1Sin_SLICE_2026 \CIC1Sin/SLICE_2026 ( .M1(\CIC1Sin/d7_54 ), 
    .M0(\CIC1Sin/d7_53 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_53 ), .Q1(\CIC1Sin/d_d7_54 ));
  CIC1Sin_SLICE_2027 \CIC1Sin/SLICE_2027 ( .M1(\CIC1Sin/d7_56 ), 
    .M0(\CIC1Sin/d7_55 ), .CE(\CIC1Sin/osc_clk_enable_396 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_55 ), .Q1(\CIC1Sin/d_d7_56 ));
  CIC1Sin_SLICE_2028 \CIC1Sin/SLICE_2028 ( .M1(\CIC1Sin/d7_58 ), 
    .M0(\CIC1Sin/d7_57 ), .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_57 ), .Q1(\CIC1Sin/d_d7_58 ));
  CIC1Sin_SLICE_2029 \CIC1Sin/SLICE_2029 ( .M1(\CIC1Sin/d7_60 ), 
    .M0(\CIC1Sin/d7_59 ), .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_59 ), .Q1(\CIC1Sin/d_d7_60 ));
  CIC1Sin_SLICE_2030 \CIC1Sin/SLICE_2030 ( .M1(\CIC1Sin/d7_62 ), 
    .M0(\CIC1Sin/d7_61 ), .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_61 ), .Q1(\CIC1Sin/d_d7_62 ));
  CIC1Sin_SLICE_2031 \CIC1Sin/SLICE_2031 ( .M1(\CIC1Sin/d7_64 ), 
    .M0(\CIC1Sin/d7_63 ), .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_63 ), .Q1(\CIC1Sin/d_d7_64 ));
  CIC1Sin_SLICE_2032 \CIC1Sin/SLICE_2032 ( .M1(\CIC1Sin/d7_66 ), 
    .M0(\CIC1Sin/d7_65 ), .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_65 ), .Q1(\CIC1Sin/d_d7_66 ));
  CIC1Sin_SLICE_2033 \CIC1Sin/SLICE_2033 ( .M1(\CIC1Sin/d7_68 ), 
    .M0(\CIC1Sin/d7_67 ), .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_67 ), .Q1(\CIC1Sin/d_d7_68 ));
  CIC1Sin_SLICE_2034 \CIC1Sin/SLICE_2034 ( .M1(\CIC1Sin/d7_70 ), 
    .M0(\CIC1Sin/d7_69 ), .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_69 ), .Q1(\CIC1Sin/d_d7_70 ));
  CIC1Sin_SLICE_2035 \CIC1Sin/SLICE_2035 ( .M0(\CIC1Sin/d7_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_446 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d7_71 ));
  CIC1Sin_SLICE_2036 \CIC1Sin/SLICE_2036 ( .M0(\CIC1Sin/d8_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d8_0 ));
  CIC1Sin_SLICE_2037 \CIC1Sin/SLICE_2037 ( .M1(\CIC1Sin/d8_2 ), 
    .M0(\CIC1Sin/d8_1 ), .CE(\CIC1Sin/osc_clk_enable_496 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_1 ), .Q1(\CIC1Sin/d_d8_2 ));
  CIC1Sin_SLICE_2038 \CIC1Sin/SLICE_2038 ( .M1(\CIC1Sin/d8_4 ), 
    .M0(\CIC1Sin/d8_3 ), .CE(\CIC1Sin/osc_clk_enable_496 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_3 ), .Q1(\CIC1Sin/d_d8_4 ));
  CIC1Sin_SLICE_2039 \CIC1Sin/SLICE_2039 ( .M1(\CIC1Sin/d8_6 ), 
    .M0(\CIC1Sin/d8_5 ), .CE(\CIC1Sin/osc_clk_enable_496 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_5 ), .Q1(\CIC1Sin/d_d8_6 ));
  CIC1Sin_SLICE_2040 \CIC1Sin/SLICE_2040 ( .M1(\CIC1Sin/d8_8 ), 
    .M0(\CIC1Sin/d8_7 ), .CE(\CIC1Sin/osc_clk_enable_496 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_7 ), .Q1(\CIC1Sin/d_d8_8 ));
  CIC1Sin_SLICE_2041 \CIC1Sin/SLICE_2041 ( .M1(\CIC1Sin/d8_10 ), 
    .M0(\CIC1Sin/d8_9 ), .CE(\CIC1Sin/osc_clk_enable_496 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_9 ), .Q1(\CIC1Sin/d_d8_10 ));
  CIC1Sin_SLICE_2042 \CIC1Sin/SLICE_2042 ( .M1(\CIC1Sin/d8_12 ), 
    .M0(\CIC1Sin/d8_11 ), .CE(\CIC1Sin/osc_clk_enable_496 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_11 ), .Q1(\CIC1Sin/d_d8_12 ));
  CIC1Sin_SLICE_2043 \CIC1Sin/SLICE_2043 ( .M1(\CIC1Sin/d8_14 ), 
    .M0(\CIC1Sin/d8_13 ), .CE(\CIC1Sin/osc_clk_enable_496 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_13 ), .Q1(\CIC1Sin/d_d8_14 ));
  CIC1Sin_SLICE_2044 \CIC1Sin/SLICE_2044 ( .M1(\CIC1Sin/d8_16 ), 
    .M0(\CIC1Sin/d8_15 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_15 ), .Q1(\CIC1Sin/d_d8_16 ));
  CIC1Sin_SLICE_2045 \CIC1Sin/SLICE_2045 ( .M1(\CIC1Sin/d8_18 ), 
    .M0(\CIC1Sin/d8_17 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_17 ), .Q1(\CIC1Sin/d_d8_18 ));
  CIC1Sin_SLICE_2046 \CIC1Sin/SLICE_2046 ( .M1(\CIC1Sin/d8_20 ), 
    .M0(\CIC1Sin/d8_19 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_19 ), .Q1(\CIC1Sin/d_d8_20 ));
  CIC1Sin_SLICE_2047 \CIC1Sin/SLICE_2047 ( .M1(\CIC1Sin/d8_22 ), 
    .M0(\CIC1Sin/d8_21 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_21 ), .Q1(\CIC1Sin/d_d8_22 ));
  CIC1Sin_SLICE_2048 \CIC1Sin/SLICE_2048 ( .M1(\CIC1Sin/d8_24 ), 
    .M0(\CIC1Sin/d8_23 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_23 ), .Q1(\CIC1Sin/d_d8_24 ));
  CIC1Sin_SLICE_2049 \CIC1Sin/SLICE_2049 ( .M1(\CIC1Sin/d8_26 ), 
    .M0(\CIC1Sin/d8_25 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_25 ), .Q1(\CIC1Sin/d_d8_26 ));
  CIC1Sin_SLICE_2050 \CIC1Sin/SLICE_2050 ( .M1(\CIC1Sin/d8_28 ), 
    .M0(\CIC1Sin/d8_27 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_27 ), .Q1(\CIC1Sin/d_d8_28 ));
  CIC1Sin_SLICE_2051 \CIC1Sin/SLICE_2051 ( .M1(\CIC1Sin/d8_30 ), 
    .M0(\CIC1Sin/d8_29 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_29 ), .Q1(\CIC1Sin/d_d8_30 ));
  CIC1Sin_SLICE_2052 \CIC1Sin/SLICE_2052 ( .M1(\CIC1Sin/d8_32 ), 
    .M0(\CIC1Sin/d8_31 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_31 ), .Q1(\CIC1Sin/d_d8_32 ));
  CIC1Sin_SLICE_2053 \CIC1Sin/SLICE_2053 ( .M1(\CIC1Sin/d8_34 ), 
    .M0(\CIC1Sin/d8_33 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_33 ), .Q1(\CIC1Sin/d_d8_34 ));
  CIC1Sin_SLICE_2054 \CIC1Sin/SLICE_2054 ( .M1(\CIC1Sin/d8_36 ), 
    .M0(\CIC1Sin/d8_35 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_35 ), .Q1(\CIC1Sin/d_d8_36 ));
  CIC1Sin_SLICE_2055 \CIC1Sin/SLICE_2055 ( .M1(\CIC1Sin/d8_38 ), 
    .M0(\CIC1Sin/d8_37 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_37 ), .Q1(\CIC1Sin/d_d8_38 ));
  CIC1Sin_SLICE_2056 \CIC1Sin/SLICE_2056 ( .M1(\CIC1Sin/d8_40 ), 
    .M0(\CIC1Sin/d8_39 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_39 ), .Q1(\CIC1Sin/d_d8_40 ));
  CIC1Sin_SLICE_2057 \CIC1Sin/SLICE_2057 ( .M1(\CIC1Sin/d8_42 ), 
    .M0(\CIC1Sin/d8_41 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_41 ), .Q1(\CIC1Sin/d_d8_42 ));
  CIC1Sin_SLICE_2058 \CIC1Sin/SLICE_2058 ( .M1(\CIC1Sin/d8_44 ), 
    .M0(\CIC1Sin/d8_43 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_43 ), .Q1(\CIC1Sin/d_d8_44 ));
  CIC1Sin_SLICE_2059 \CIC1Sin/SLICE_2059 ( .M1(\CIC1Sin/d8_46 ), 
    .M0(\CIC1Sin/d8_45 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_45 ), .Q1(\CIC1Sin/d_d8_46 ));
  CIC1Sin_SLICE_2060 \CIC1Sin/SLICE_2060 ( .M1(\CIC1Sin/d8_48 ), 
    .M0(\CIC1Sin/d8_47 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_47 ), .Q1(\CIC1Sin/d_d8_48 ));
  CIC1Sin_SLICE_2061 \CIC1Sin/SLICE_2061 ( .M1(\CIC1Sin/d8_50 ), 
    .M0(\CIC1Sin/d8_49 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_49 ), .Q1(\CIC1Sin/d_d8_50 ));
  CIC1Sin_SLICE_2062 \CIC1Sin/SLICE_2062 ( .M1(\CIC1Sin/d8_52 ), 
    .M0(\CIC1Sin/d8_51 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_51 ), .Q1(\CIC1Sin/d_d8_52 ));
  CIC1Sin_SLICE_2063 \CIC1Sin/SLICE_2063 ( .M1(\CIC1Sin/d8_54 ), 
    .M0(\CIC1Sin/d8_53 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_53 ), .Q1(\CIC1Sin/d_d8_54 ));
  CIC1Sin_SLICE_2064 \CIC1Sin/SLICE_2064 ( .M1(\CIC1Sin/d8_56 ), 
    .M0(\CIC1Sin/d8_55 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_55 ), .Q1(\CIC1Sin/d_d8_56 ));
  CIC1Sin_SLICE_2065 \CIC1Sin/SLICE_2065 ( .M1(\CIC1Sin/d8_58 ), 
    .M0(\CIC1Sin/d8_57 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_57 ), .Q1(\CIC1Sin/d_d8_58 ));
  CIC1Sin_SLICE_2066 \CIC1Sin/SLICE_2066 ( .M1(\CIC1Sin/d8_60 ), 
    .M0(\CIC1Sin/d8_59 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_59 ), .Q1(\CIC1Sin/d_d8_60 ));
  CIC1Sin_SLICE_2067 \CIC1Sin/SLICE_2067 ( .M1(\CIC1Sin/d8_62 ), 
    .M0(\CIC1Sin/d8_61 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_61 ), .Q1(\CIC1Sin/d_d8_62 ));
  CIC1Sin_SLICE_2068 \CIC1Sin/SLICE_2068 ( .M1(\CIC1Sin/d8_64 ), 
    .M0(\CIC1Sin/d8_63 ), .CE(\CIC1Sin/osc_clk_enable_546 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_63 ), .Q1(\CIC1Sin/d_d8_64 ));
  CIC1Sin_SLICE_2069 \CIC1Sin/SLICE_2069 ( .M1(\CIC1Sin/d8_66 ), 
    .M0(\CIC1Sin/d8_65 ), .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_65 ), .Q1(\CIC1Sin/d_d8_66 ));
  CIC1Sin_SLICE_2070 \CIC1Sin/SLICE_2070 ( .M1(\CIC1Sin/d8_68 ), 
    .M0(\CIC1Sin/d8_67 ), .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_67 ), .Q1(\CIC1Sin/d_d8_68 ));
  CIC1Sin_SLICE_2071 \CIC1Sin/SLICE_2071 ( .M1(\CIC1Sin/d8_70 ), 
    .M0(\CIC1Sin/d8_69 ), .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_69 ), .Q1(\CIC1Sin/d_d8_70 ));
  CIC1Sin_SLICE_2072 \CIC1Sin/SLICE_2072 ( .M0(\CIC1Sin/d8_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_596 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d8_71 ));
  CIC1Sin_SLICE_2073 \CIC1Sin/SLICE_2073 ( .M0(\CIC1Sin/d9_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d9_0 ));
  CIC1Sin_SLICE_2074 \CIC1Sin/SLICE_2074 ( .M1(\CIC1Sin/d9_2 ), 
    .M0(\CIC1Sin/d9_1 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_1 ), .Q1(\CIC1Sin/d_d9_2 ));
  CIC1Sin_SLICE_2075 \CIC1Sin/SLICE_2075 ( .M1(\CIC1Sin/d9_4 ), 
    .M0(\CIC1Sin/d9_3 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_3 ), .Q1(\CIC1Sin/d_d9_4 ));
  CIC1Sin_SLICE_2076 \CIC1Sin/SLICE_2076 ( .M1(\CIC1Sin/d9_6 ), 
    .M0(\CIC1Sin/d9_5 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_5 ), .Q1(\CIC1Sin/d_d9_6 ));
  CIC1Sin_SLICE_2077 \CIC1Sin/SLICE_2077 ( .M1(\CIC1Sin/d9_8 ), 
    .M0(\CIC1Sin/d9_7 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_7 ), .Q1(\CIC1Sin/d_d9_8 ));
  CIC1Sin_SLICE_2078 \CIC1Sin/SLICE_2078 ( .M1(\CIC1Sin/d9_10 ), 
    .M0(\CIC1Sin/d9_9 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_9 ), .Q1(\CIC1Sin/d_d9_10 ));
  CIC1Sin_SLICE_2079 \CIC1Sin/SLICE_2079 ( .M1(\CIC1Sin/d9_12 ), 
    .M0(\CIC1Sin/d9_11 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_11 ), .Q1(\CIC1Sin/d_d9_12 ));
  CIC1Sin_SLICE_2080 \CIC1Sin/SLICE_2080 ( .M1(\CIC1Sin/d9_14 ), 
    .M0(\CIC1Sin/d9_13 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_13 ), .Q1(\CIC1Sin/d_d9_14 ));
  CIC1Sin_SLICE_2081 \CIC1Sin/SLICE_2081 ( .M1(\CIC1Sin/d9_16 ), 
    .M0(\CIC1Sin/d9_15 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_15 ), .Q1(\CIC1Sin/d_d9_16 ));
  CIC1Sin_SLICE_2082 \CIC1Sin/SLICE_2082 ( .M1(\CIC1Sin/d9_18 ), 
    .M0(\CIC1Sin/d9_17 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_17 ), .Q1(\CIC1Sin/d_d9_18 ));
  CIC1Sin_SLICE_2083 \CIC1Sin/SLICE_2083 ( .M1(\CIC1Sin/d9_20 ), 
    .M0(\CIC1Sin/d9_19 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_19 ), .Q1(\CIC1Sin/d_d9_20 ));
  CIC1Sin_SLICE_2084 \CIC1Sin/SLICE_2084 ( .M1(\CIC1Sin/d9_22 ), 
    .M0(\CIC1Sin/d9_21 ), .CE(\CIC1Sin/osc_clk_enable_646 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_21 ), .Q1(\CIC1Sin/d_d9_22 ));
  CIC1Sin_SLICE_2085 \CIC1Sin/SLICE_2085 ( .M1(\CIC1Sin/d9_24 ), 
    .M0(\CIC1Sin/d9_23 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_23 ), .Q1(\CIC1Sin/d_d9_24 ));
  CIC1Sin_SLICE_2086 \CIC1Sin/SLICE_2086 ( .M1(\CIC1Sin/d9_26 ), 
    .M0(\CIC1Sin/d9_25 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_25 ), .Q1(\CIC1Sin/d_d9_26 ));
  CIC1Sin_SLICE_2087 \CIC1Sin/SLICE_2087 ( .M1(\CIC1Sin/d9_28 ), 
    .M0(\CIC1Sin/d9_27 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_27 ), .Q1(\CIC1Sin/d_d9_28 ));
  CIC1Sin_SLICE_2088 \CIC1Sin/SLICE_2088 ( .M1(\CIC1Sin/d9_30 ), 
    .M0(\CIC1Sin/d9_29 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_29 ), .Q1(\CIC1Sin/d_d9_30 ));
  CIC1Sin_SLICE_2089 \CIC1Sin/SLICE_2089 ( .M1(\CIC1Sin/d9_32 ), 
    .M0(\CIC1Sin/d9_31 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_31 ), .Q1(\CIC1Sin/d_d9_32 ));
  CIC1Sin_SLICE_2090 \CIC1Sin/SLICE_2090 ( .M1(\CIC1Sin/d9_34 ), 
    .M0(\CIC1Sin/d9_33 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_33 ), .Q1(\CIC1Sin/d_d9_34 ));
  CIC1Sin_SLICE_2091 \CIC1Sin/SLICE_2091 ( .M1(\CIC1Sin/d9_36 ), 
    .M0(\CIC1Sin/d9_35 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_35 ), .Q1(\CIC1Sin/d_d9_36 ));
  CIC1Sin_SLICE_2092 \CIC1Sin/SLICE_2092 ( .M1(\CIC1Sin/d9_38 ), 
    .M0(\CIC1Sin/d9_37 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_37 ), .Q1(\CIC1Sin/d_d9_38 ));
  CIC1Sin_SLICE_2093 \CIC1Sin/SLICE_2093 ( .M1(\CIC1Sin/d9_40 ), 
    .M0(\CIC1Sin/d9_39 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_39 ), .Q1(\CIC1Sin/d_d9_40 ));
  CIC1Sin_SLICE_2094 \CIC1Sin/SLICE_2094 ( .M1(\CIC1Sin/d9_42 ), 
    .M0(\CIC1Sin/d9_41 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_41 ), .Q1(\CIC1Sin/d_d9_42 ));
  CIC1Sin_SLICE_2095 \CIC1Sin/SLICE_2095 ( .M1(\CIC1Sin/d9_44 ), 
    .M0(\CIC1Sin/d9_43 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_43 ), .Q1(\CIC1Sin/d_d9_44 ));
  CIC1Sin_SLICE_2096 \CIC1Sin/SLICE_2096 ( .M1(\CIC1Sin/d9_46 ), 
    .M0(\CIC1Sin/d9_45 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_45 ), .Q1(\CIC1Sin/d_d9_46 ));
  CIC1Sin_SLICE_2097 \CIC1Sin/SLICE_2097 ( .M1(\CIC1Sin/d9_48 ), 
    .M0(\CIC1Sin/d9_47 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_47 ), .Q1(\CIC1Sin/d_d9_48 ));
  CIC1Sin_SLICE_2098 \CIC1Sin/SLICE_2098 ( .M1(\CIC1Sin/d9_50 ), 
    .M0(\CIC1Sin/d9_49 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_49 ), .Q1(\CIC1Sin/d_d9_50 ));
  CIC1Sin_SLICE_2099 \CIC1Sin/SLICE_2099 ( .M1(\CIC1Sin/d9_52 ), 
    .M0(\CIC1Sin/d9_51 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_51 ), .Q1(\CIC1Sin/d_d9_52 ));
  CIC1Sin_SLICE_2100 \CIC1Sin/SLICE_2100 ( .M1(\CIC1Sin/d9_54 ), 
    .M0(\CIC1Sin/d9_53 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_53 ), .Q1(\CIC1Sin/d_d9_54 ));
  CIC1Sin_SLICE_2101 \CIC1Sin/SLICE_2101 ( .M1(\CIC1Sin/d9_56 ), 
    .M0(\CIC1Sin/d9_55 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_55 ), .Q1(\CIC1Sin/d_d9_56 ));
  CIC1Sin_SLICE_2102 \CIC1Sin/SLICE_2102 ( .M1(\CIC1Sin/d9_58 ), 
    .M0(\CIC1Sin/d9_57 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_57 ), .Q1(\CIC1Sin/d_d9_58 ));
  CIC1Sin_SLICE_2103 \CIC1Sin/SLICE_2103 ( .M1(\CIC1Sin/d9_60 ), 
    .M0(\CIC1Sin/d9_59 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_59 ), .Q1(\CIC1Sin/d_d9_60 ));
  CIC1Sin_SLICE_2104 \CIC1Sin/SLICE_2104 ( .M1(\CIC1Sin/d9_62 ), 
    .M0(\CIC1Sin/d9_61 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_61 ), .Q1(\CIC1Sin/d_d9_62 ));
  CIC1Sin_SLICE_2105 \CIC1Sin/SLICE_2105 ( .M1(\CIC1Sin/d9_64 ), 
    .M0(\CIC1Sin/d9_63 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_63 ), .Q1(\CIC1Sin/d_d9_64 ));
  CIC1Sin_SLICE_2106 \CIC1Sin/SLICE_2106 ( .M1(\CIC1Sin/d9_66 ), 
    .M0(\CIC1Sin/d9_65 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_65 ), .Q1(\CIC1Sin/d_d9_66 ));
  CIC1Sin_SLICE_2107 \CIC1Sin/SLICE_2107 ( .M1(\CIC1Sin/d9_68 ), 
    .M0(\CIC1Sin/d9_67 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_67 ), .Q1(\CIC1Sin/d_d9_68 ));
  CIC1Sin_SLICE_2108 \CIC1Sin/SLICE_2108 ( .M1(\CIC1Sin/d9_70 ), 
    .M0(\CIC1Sin/d9_69 ), .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_69 ), .Q1(\CIC1Sin/d_d9_70 ));
  CIC1Sin_SLICE_2109 \CIC1Sin/SLICE_2109 ( .M0(\CIC1Sin/d9_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_696 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d9_71 ));
  CIC1Sin_SLICE_2110 \CIC1Sin/SLICE_2110 ( .M1(\CIC1Sin/d_tmp_1 ), 
    .M0(\CIC1Sin/d_tmp_0 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_0 ), .Q1(\CIC1Sin/d_d_tmp_1 ));
  CIC1Sin_SLICE_2111 \CIC1Sin/SLICE_2111 ( .M1(\CIC1Sin/d_tmp_3 ), 
    .M0(\CIC1Sin/d_tmp_2 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_2 ), .Q1(\CIC1Sin/d_d_tmp_3 ));
  CIC1Sin_SLICE_2112 \CIC1Sin/SLICE_2112 ( .M1(\CIC1Sin/d_tmp_5 ), 
    .M0(\CIC1Sin/d_tmp_4 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_4 ), .Q1(\CIC1Sin/d_d_tmp_5 ));
  CIC1Sin_SLICE_2113 \CIC1Sin/SLICE_2113 ( .M0(\CIC1Sin/d_tmp_6 ), 
    .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_6 ));
  CIC1Sin_SLICE_2114 \CIC1Sin/SLICE_2114 ( .M1(\CIC1Sin/d_tmp_8 ), 
    .M0(\CIC1Sin/d_tmp_7 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_7 ), .Q1(\CIC1Sin/d_d_tmp_8 ));
  CIC1Sin_SLICE_2115 \CIC1Sin/SLICE_2115 ( .M1(\CIC1Sin/d_tmp_10 ), 
    .M0(\CIC1Sin/d_tmp_9 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_9 ), .Q1(\CIC1Sin/d_d_tmp_10 ));
  CIC1Sin_SLICE_2116 \CIC1Sin/SLICE_2116 ( .M1(\CIC1Sin/d_tmp_12 ), 
    .M0(\CIC1Sin/d_tmp_11 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_11 ), .Q1(\CIC1Sin/d_d_tmp_12 ));
  CIC1Sin_SLICE_2117 \CIC1Sin/SLICE_2117 ( .M1(\CIC1Sin/d_tmp_14 ), 
    .M0(\CIC1Sin/d_tmp_13 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_13 ), .Q1(\CIC1Sin/d_d_tmp_14 ));
  CIC1Sin_SLICE_2118 \CIC1Sin/SLICE_2118 ( .M1(\CIC1Sin/d_tmp_16 ), 
    .M0(\CIC1Sin/d_tmp_15 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_15 ), .Q1(\CIC1Sin/d_d_tmp_16 ));
  CIC1Sin_SLICE_2119 \CIC1Sin/SLICE_2119 ( .M1(\CIC1Sin/d_tmp_18 ), 
    .M0(\CIC1Sin/d_tmp_17 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_17 ), .Q1(\CIC1Sin/d_d_tmp_18 ));
  CIC1Sin_SLICE_2120 \CIC1Sin/SLICE_2120 ( .M1(\CIC1Sin/d_tmp_20 ), 
    .M0(\CIC1Sin/d_tmp_19 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_19 ), .Q1(\CIC1Sin/d_d_tmp_20 ));
  CIC1Sin_SLICE_2121 \CIC1Sin/SLICE_2121 ( .M1(\CIC1Sin/d_tmp_22 ), 
    .M0(\CIC1Sin/d_tmp_21 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_21 ), .Q1(\CIC1Sin/d_d_tmp_22 ));
  CIC1Sin_SLICE_2122 \CIC1Sin/SLICE_2122 ( .M1(\CIC1Sin/d_tmp_24 ), 
    .M0(\CIC1Sin/d_tmp_23 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_23 ), .Q1(\CIC1Sin/d_d_tmp_24 ));
  CIC1Sin_SLICE_2123 \CIC1Sin/SLICE_2123 ( .M1(\CIC1Sin/d_tmp_26 ), 
    .M0(\CIC1Sin/d_tmp_25 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_25 ), .Q1(\CIC1Sin/d_d_tmp_26 ));
  CIC1Sin_SLICE_2124 \CIC1Sin/SLICE_2124 ( .M1(\CIC1Sin/d_tmp_28 ), 
    .M0(\CIC1Sin/d_tmp_27 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_27 ), .Q1(\CIC1Sin/d_d_tmp_28 ));
  CIC1Sin_SLICE_2125 \CIC1Sin/SLICE_2125 ( .M1(\CIC1Sin/d_tmp_30 ), 
    .M0(\CIC1Sin/d_tmp_29 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_29 ), .Q1(\CIC1Sin/d_d_tmp_30 ));
  CIC1Sin_SLICE_2126 \CIC1Sin/SLICE_2126 ( .M1(\CIC1Sin/d_tmp_32 ), 
    .M0(\CIC1Sin/d_tmp_31 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_31 ), .Q1(\CIC1Sin/d_d_tmp_32 ));
  CIC1Sin_SLICE_2127 \CIC1Sin/SLICE_2127 ( .M1(\CIC1Sin/d_tmp_34 ), 
    .M0(\CIC1Sin/d_tmp_33 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_33 ), .Q1(\CIC1Sin/d_d_tmp_34 ));
  CIC1Sin_SLICE_2128 \CIC1Sin/SLICE_2128 ( .M1(\CIC1Sin/d_tmp_36 ), 
    .M0(\CIC1Sin/d_tmp_35 ), .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_35 ), .Q1(\CIC1Sin/d_d_tmp_36 ));
  CIC1Sin_SLICE_2129 \CIC1Sin/SLICE_2129 ( .M0(\CIC1Sin/d_tmp_37 ), 
    .CE(\CIC1Sin/osc_clk_enable_146 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_37 ));
  CIC1Sin_SLICE_2130 \CIC1Sin/SLICE_2130 ( .M1(\CIC1Sin/d_tmp_39 ), 
    .M0(\CIC1Sin/d_tmp_38 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_38 ), .Q1(\CIC1Sin/d_d_tmp_39 ));
  CIC1Sin_SLICE_2131 \CIC1Sin/SLICE_2131 ( .M1(\CIC1Sin/d_tmp_41 ), 
    .M0(\CIC1Sin/d_tmp_40 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_40 ), .Q1(\CIC1Sin/d_d_tmp_41 ));
  CIC1Sin_SLICE_2132 \CIC1Sin/SLICE_2132 ( .M1(\CIC1Sin/d_tmp_43 ), 
    .M0(\CIC1Sin/d_tmp_42 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_42 ), .Q1(\CIC1Sin/d_d_tmp_43 ));
  CIC1Sin_SLICE_2133 \CIC1Sin/SLICE_2133 ( .M1(\CIC1Sin/d_tmp_45 ), 
    .M0(\CIC1Sin/d_tmp_44 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_44 ), .Q1(\CIC1Sin/d_d_tmp_45 ));
  CIC1Sin_SLICE_2134 \CIC1Sin/SLICE_2134 ( .M1(\CIC1Sin/d_tmp_47 ), 
    .M0(\CIC1Sin/d_tmp_46 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_46 ), .Q1(\CIC1Sin/d_d_tmp_47 ));
  CIC1Sin_SLICE_2135 \CIC1Sin/SLICE_2135 ( .M1(\CIC1Sin/d_tmp_49 ), 
    .M0(\CIC1Sin/d_tmp_48 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_48 ), .Q1(\CIC1Sin/d_d_tmp_49 ));
  CIC1Sin_SLICE_2136 \CIC1Sin/SLICE_2136 ( .M1(\CIC1Sin/d_tmp_51 ), 
    .M0(\CIC1Sin/d_tmp_50 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_50 ), .Q1(\CIC1Sin/d_d_tmp_51 ));
  CIC1Sin_SLICE_2137 \CIC1Sin/SLICE_2137 ( .M1(\CIC1Sin/d_tmp_53 ), 
    .M0(\CIC1Sin/d_tmp_52 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_52 ), .Q1(\CIC1Sin/d_d_tmp_53 ));
  CIC1Sin_SLICE_2138 \CIC1Sin/SLICE_2138 ( .M1(\CIC1Sin/d_tmp_55 ), 
    .M0(\CIC1Sin/d_tmp_54 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_54 ), .Q1(\CIC1Sin/d_d_tmp_55 ));
  CIC1Sin_SLICE_2139 \CIC1Sin/SLICE_2139 ( .M1(\CIC1Sin/d_tmp_57 ), 
    .M0(\CIC1Sin/d_tmp_56 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_56 ), .Q1(\CIC1Sin/d_d_tmp_57 ));
  CIC1Sin_SLICE_2140 \CIC1Sin/SLICE_2140 ( .M1(\CIC1Sin/d_tmp_59 ), 
    .M0(\CIC1Sin/d_tmp_58 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_58 ), .Q1(\CIC1Sin/d_d_tmp_59 ));
  CIC1Sin_SLICE_2141 \CIC1Sin/SLICE_2141 ( .M1(\CIC1Sin/d_tmp_61 ), 
    .M0(\CIC1Sin/d_tmp_60 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_60 ), .Q1(\CIC1Sin/d_d_tmp_61 ));
  CIC1Sin_SLICE_2142 \CIC1Sin/SLICE_2142 ( .M1(\CIC1Sin/d_tmp_63 ), 
    .M0(\CIC1Sin/d_tmp_62 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_62 ), .Q1(\CIC1Sin/d_d_tmp_63 ));
  CIC1Sin_SLICE_2143 \CIC1Sin/SLICE_2143 ( .M1(\CIC1Sin/d_tmp_65 ), 
    .M0(\CIC1Sin/d_tmp_64 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_64 ), .Q1(\CIC1Sin/d_d_tmp_65 ));
  CIC1Sin_SLICE_2144 \CIC1Sin/SLICE_2144 ( .M1(\CIC1Sin/d_tmp_67 ), 
    .M0(\CIC1Sin/d_tmp_66 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_66 ), .Q1(\CIC1Sin/d_d_tmp_67 ));
  CIC1Sin_SLICE_2145 \CIC1Sin/SLICE_2145 ( .M1(\CIC1Sin/d_tmp_69 ), 
    .M0(\CIC1Sin/d_tmp_68 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_68 ), .Q1(\CIC1Sin/d_d_tmp_69 ));
  CIC1Sin_SLICE_2146 \CIC1Sin/SLICE_2146 ( .M1(\CIC1Sin/d_tmp_71 ), 
    .M0(\CIC1Sin/d_tmp_70 ), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_70 ), .Q1(\CIC1Sin/d_d_tmp_71 ));
  CIC1Sin_SLICE_2147 \CIC1Sin/SLICE_2147 ( .M1(\CIC1Sin/d5_1 ), 
    .M0(\CIC1Sin/d5_0 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_0 ), .Q1(\CIC1Sin/d_tmp_1 ));
  CIC1Sin_SLICE_2148 \CIC1Sin/SLICE_2148 ( .M1(\CIC1Sin/d5_3 ), 
    .M0(\CIC1Sin/d5_2 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_2 ), .Q1(\CIC1Sin/d_tmp_3 ));
  CIC1Sin_SLICE_2149 \CIC1Sin/SLICE_2149 ( .M1(\CIC1Sin/d5_5 ), 
    .M0(\CIC1Sin/d5_4 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_4 ), .Q1(\CIC1Sin/d_tmp_5 ));
  CIC1Sin_SLICE_2150 \CIC1Sin/SLICE_2150 ( .M1(\CIC1Sin/d5_7 ), 
    .M0(\CIC1Sin/d5_6 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_6 ), .Q1(\CIC1Sin/d_tmp_7 ));
  CIC1Sin_SLICE_2151 \CIC1Sin/SLICE_2151 ( .M1(\CIC1Sin/d5_9 ), 
    .M0(\CIC1Sin/d5_8 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_8 ), .Q1(\CIC1Sin/d_tmp_9 ));
  CIC1Sin_SLICE_2152 \CIC1Sin/SLICE_2152 ( .M1(\CIC1Sin/d5_11 ), 
    .M0(\CIC1Sin/d5_10 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_10 ), .Q1(\CIC1Sin/d_tmp_11 ));
  CIC1Sin_SLICE_2153 \CIC1Sin/SLICE_2153 ( .M1(\CIC1Sin/d5_13 ), 
    .M0(\CIC1Sin/d5_12 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_12 ), .Q1(\CIC1Sin/d_tmp_13 ));
  CIC1Sin_SLICE_2154 \CIC1Sin/SLICE_2154 ( .M1(\CIC1Sin/d5_15 ), 
    .M0(\CIC1Sin/d5_14 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_14 ), .Q1(\CIC1Sin/d_tmp_15 ));
  CIC1Sin_SLICE_2155 \CIC1Sin/SLICE_2155 ( .M1(\CIC1Sin/d5_17 ), 
    .M0(\CIC1Sin/d5_16 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_16 ), .Q1(\CIC1Sin/d_tmp_17 ));
  CIC1Sin_SLICE_2156 \CIC1Sin/SLICE_2156 ( .M1(\CIC1Sin/d5_19 ), 
    .M0(\CIC1Sin/d5_18 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_18 ), .Q1(\CIC1Sin/d_tmp_19 ));
  CIC1Sin_SLICE_2157 \CIC1Sin/SLICE_2157 ( .M1(\CIC1Sin/d5_21 ), 
    .M0(\CIC1Sin/d5_20 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_20 ), .Q1(\CIC1Sin/d_tmp_21 ));
  CIC1Sin_SLICE_2158 \CIC1Sin/SLICE_2158 ( .M1(\CIC1Sin/d5_23 ), 
    .M0(\CIC1Sin/d5_22 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_22 ), .Q1(\CIC1Sin/d_tmp_23 ));
  CIC1Sin_SLICE_2159 \CIC1Sin/SLICE_2159 ( .M1(\CIC1Sin/d5_25 ), 
    .M0(\CIC1Sin/d5_24 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_24 ), .Q1(\CIC1Sin/d_tmp_25 ));
  CIC1Sin_SLICE_2160 \CIC1Sin/SLICE_2160 ( .M1(\CIC1Sin/d5_27 ), 
    .M0(\CIC1Sin/d5_26 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_26 ), .Q1(\CIC1Sin/d_tmp_27 ));
  CIC1Sin_SLICE_2161 \CIC1Sin/SLICE_2161 ( .M1(\CIC1Sin/d5_29 ), 
    .M0(\CIC1Sin/d5_28 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_28 ), .Q1(\CIC1Sin/d_tmp_29 ));
  CIC1Sin_SLICE_2162 \CIC1Sin/SLICE_2162 ( .M1(\CIC1Sin/d5_31 ), 
    .M0(\CIC1Sin/d5_30 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_30 ), .Q1(\CIC1Sin/d_tmp_31 ));
  CIC1Sin_SLICE_2163 \CIC1Sin/SLICE_2163 ( .M1(\CIC1Sin/d5_33 ), 
    .M0(\CIC1Sin/d5_32 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_32 ), .Q1(\CIC1Sin/d_tmp_33 ));
  CIC1Sin_SLICE_2164 \CIC1Sin/SLICE_2164 ( .M1(\CIC1Sin/d5_35 ), 
    .M0(\CIC1Sin/d5_34 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_34 ), .Q1(\CIC1Sin/d_tmp_35 ));
  CIC1Sin_SLICE_2165 \CIC1Sin/SLICE_2165 ( .M1(\CIC1Sin/d5_37 ), 
    .M0(\CIC1Sin/d5_36 ), .CE(\CIC1Sin/d_clk_tmp_N_1830 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_36 ), .Q1(\CIC1Sin/d_tmp_37 ));
  CIC1Sin_SLICE_2166 \CIC1Sin/SLICE_2166 ( .M1(\CIC1Sin/d5_39 ), 
    .M0(\CIC1Sin/d5_38 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_38 ), .Q1(\CIC1Sin/d_tmp_39 ));
  CIC1Sin_SLICE_2167 \CIC1Sin/SLICE_2167 ( .M1(\CIC1Sin/d5_41 ), 
    .M0(\CIC1Sin/d5_40 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_40 ), .Q1(\CIC1Sin/d_tmp_41 ));
  CIC1Sin_SLICE_2168 \CIC1Sin/SLICE_2168 ( .M1(\CIC1Sin/d5_43 ), 
    .M0(\CIC1Sin/d5_42 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_42 ), .Q1(\CIC1Sin/d_tmp_43 ));
  CIC1Sin_SLICE_2169 \CIC1Sin/SLICE_2169 ( .M1(\CIC1Sin/d5_45 ), 
    .M0(\CIC1Sin/d5_44 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_44 ), .Q1(\CIC1Sin/d_tmp_45 ));
  CIC1Sin_SLICE_2170 \CIC1Sin/SLICE_2170 ( .M1(\CIC1Sin/d5_47 ), 
    .M0(\CIC1Sin/d5_46 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_46 ), .Q1(\CIC1Sin/d_tmp_47 ));
  CIC1Sin_SLICE_2171 \CIC1Sin/SLICE_2171 ( .M1(\CIC1Sin/d5_49 ), 
    .M0(\CIC1Sin/d5_48 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_48 ), .Q1(\CIC1Sin/d_tmp_49 ));
  CIC1Sin_SLICE_2172 \CIC1Sin/SLICE_2172 ( .M1(\CIC1Sin/d5_51 ), 
    .M0(\CIC1Sin/d5_50 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_50 ), .Q1(\CIC1Sin/d_tmp_51 ));
  CIC1Sin_SLICE_2173 \CIC1Sin/SLICE_2173 ( .M1(\CIC1Sin/d5_53 ), 
    .M0(\CIC1Sin/d5_52 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_52 ), .Q1(\CIC1Sin/d_tmp_53 ));
  CIC1Sin_SLICE_2174 \CIC1Sin/SLICE_2174 ( .M1(\CIC1Sin/d5_55 ), 
    .M0(\CIC1Sin/d5_54 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_54 ), .Q1(\CIC1Sin/d_tmp_55 ));
  CIC1Sin_SLICE_2175 \CIC1Sin/SLICE_2175 ( .M1(\CIC1Sin/d5_57 ), 
    .M0(\CIC1Sin/d5_56 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_56 ), .Q1(\CIC1Sin/d_tmp_57 ));
  CIC1Sin_SLICE_2176 \CIC1Sin/SLICE_2176 ( .M1(\CIC1Sin/d5_59 ), 
    .M0(\CIC1Sin/d5_58 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_58 ), .Q1(\CIC1Sin/d_tmp_59 ));
  CIC1Sin_SLICE_2177 \CIC1Sin/SLICE_2177 ( .M1(\CIC1Sin/d5_61 ), 
    .M0(\CIC1Sin/d5_60 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_60 ), .Q1(\CIC1Sin/d_tmp_61 ));
  CIC1Sin_SLICE_2178 \CIC1Sin/SLICE_2178 ( .M1(\CIC1Sin/d5_63 ), 
    .M0(\CIC1Sin/d5_62 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_62 ), .Q1(\CIC1Sin/d_tmp_63 ));
  CIC1Sin_SLICE_2179 \CIC1Sin/SLICE_2179 ( .M1(\CIC1Sin/d5_65 ), 
    .M0(\CIC1Sin/d5_64 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_64 ), .Q1(\CIC1Sin/d_tmp_65 ));
  CIC1Sin_SLICE_2180 \CIC1Sin/SLICE_2180 ( .M1(\CIC1Sin/d5_67 ), 
    .M0(\CIC1Sin/d5_66 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_66 ), .Q1(\CIC1Sin/d_tmp_67 ));
  CIC1Sin_SLICE_2181 \CIC1Sin/SLICE_2181 ( .M1(\CIC1Sin/d5_69 ), 
    .M0(\CIC1Sin/d5_68 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_68 ), .Q1(\CIC1Sin/d_tmp_69 ));
  CIC1Sin_SLICE_2182 \CIC1Sin/SLICE_2182 ( .M1(\CIC1Sin/d5_71 ), 
    .M0(\CIC1Sin/d5_70 ), .CE(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_70 ), .Q1(\CIC1Sin/d_tmp_71 ));
  CIC1Sin_SLICE_2183 \CIC1Sin/SLICE_2183 ( .D1(\CIC1Sin/count_1 ), 
    .C1(\CIC1Sin/count_7 ), .B1(\CIC1Sin/count_2 ), .A1(\CIC1Sin/count_9 ), 
    .D0(\CIC1Sin/n13238 ), .C0(\CIC1Sin/n13254 ), .B0(\CIC1Sin/n13 ), 
    .A0(\CIC1Sin/n13252 ), .DI0(\CIC1Sin/osc_clk_enable_62 ), 
    .M1(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/osc_clk_enable_62 ), .Q0(\CIC1Sin/osc_clk_enable_146 ), 
    .F1(\CIC1Sin/n13254 ), .Q1(\CIC1Sin/osc_clk_enable_196 ));
  CIC1Sin_SLICE_2184 \CIC1Sin/SLICE_2184 ( .M1(\CIC1Sin/osc_clk_enable_62 ), 
    .M0(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_246 ), .Q1(\CIC1Sin/osc_clk_enable_296 ));
  CIC1Sin_SLICE_2185 \CIC1Sin/SLICE_2185 ( .M1(\CIC1Sin/osc_clk_enable_62 ), 
    .M0(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_346 ), .Q1(\CIC1Sin/osc_clk_enable_396 ));
  CIC1Sin_SLICE_2186 \CIC1Sin/SLICE_2186 ( .M1(\CIC1Sin/osc_clk_enable_62 ), 
    .M0(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_446 ), .Q1(\CIC1Sin/osc_clk_enable_496 ));
  CIC1Sin_SLICE_2187 \CIC1Sin/SLICE_2187 ( .M1(\CIC1Sin/osc_clk_enable_62 ), 
    .M0(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_546 ), .Q1(\CIC1Sin/osc_clk_enable_596 ));
  CIC1Sin_SLICE_2188 \CIC1Sin/SLICE_2188 ( .M1(\CIC1Sin/osc_clk_enable_62 ), 
    .M0(\CIC1Sin/osc_clk_enable_62 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_646 ), .Q1(\CIC1Sin/osc_clk_enable_696 ));
  CIC1Sin_SLICE_2189 \CIC1Sin/SLICE_2189 ( .M0(\CIC1Sin/osc_clk_enable_62 ), 
    .CLK(osc_clk), .Q0(\CIC1Sin/osc_clk_enable_1395 ));
  CIC1Sin_SLICE_2190 \CIC1Sin/SLICE_2190 ( .M0(\CIC1Sin/osc_clk_enable_62 ), 
    .CLK(osc_clk), .Q0(\CIC1Sin/v_comb ));
  CIC1Cos_SLICE_2191 \CIC1Cos/SLICE_2191 ( .C1(\CIC1Cos/d10_57 ), .B1(d10_59), 
    .A1(CICGain_1), .C0(\CIC1Cos/d10_58 ), .B0(CICGain_1), .A0(n61), 
    .DI0(\CIC1Cos/d_out_11_N_1818_0 ), .M0(CICGain_0), 
    .CE(\CIC1Cos/osc_clk_enable_783 ), .CLK(osc_clk), 
    .OFX0(\CIC1Cos/d_out_11_N_1818_0 ), .Q0(CIC1_outCos_0));
  CIC1Cos_SLICE_2192 \CIC1Cos/SLICE_2192 ( .C1(\CIC1Cos/d10_58 ), .B1(d10_60), 
    .A1(CICGain_1), .C0(d10_59), .B0(CICGain_1), .A0(n62), 
    .DI0(\CIC1Cos/d_out_11_N_1818_1 ), .M0(CICGain_0), .CE(\CIC1Cos/v_comb ), 
    .CLK(osc_clk), .OFX0(\CIC1Cos/d_out_11_N_1818_1 ), .Q0(CIC1_outCos_1));
  SLICE_2193 SLICE_2193( .D1(\CIC1Sin/n132_adj_2579 ), .C1(n64), 
    .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n131_adj_2576 ), .C0(n63), 
    .B0(CICGain_0), .A0(CICGain_1), .DI1(d_out_11_N_1818_3), 
    .DI0(d_out_11_N_1818_2), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1818_2), .Q0(CIC1_outCos_2), .F1(d_out_11_N_1818_3), 
    .Q1(CIC1_outCos_3));
  SLICE_2194 SLICE_2194( .D1(\CIC1Sin/n134_adj_2598 ), .C1(n66), 
    .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n133_adj_2596 ), .C0(n65), 
    .B0(CICGain_0), .A0(CICGain_1), .DI1(d_out_11_N_1818_5), 
    .DI0(d_out_11_N_1818_4), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1818_4), .Q0(CIC1_outCos_4), .F1(d_out_11_N_1818_5), 
    .Q1(CIC1_outCos_5));
  SLICE_2195 SLICE_2195( .D1(\CIC1Sin/n136_adj_2594 ), .C1(n68), 
    .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n135_adj_2591 ), .C0(n67), 
    .B0(CICGain_0), .A0(CICGain_1), .DI1(d_out_11_N_1818_7), 
    .DI0(d_out_11_N_1818_6), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1818_6), .Q0(CIC1_outCos_6), .F1(d_out_11_N_1818_7), 
    .Q1(CIC1_outCos_7));
  SLICE_2196 SLICE_2196( .D1(\CIC1Sin/n138_adj_2588 ), .C1(n70), 
    .B1(CICGain_0), .A1(CICGain_1), .D0(d10_68), .C0(\CIC1Sin/n137_adj_2585 ), 
    .B0(CICGain_0), .A0(CICGain_1), .DI1(d_out_11_N_1818_9), 
    .DI0(d_out_11_N_1818_8), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1818_8), .Q0(CIC1_outCos_8), .F1(d_out_11_N_1818_9), 
    .Q1(CIC1_outCos_9));
  SLICE_2197 SLICE_2197( .C1(d10_68), .B1(d10_67), .A1(CICGain_0), .C0(d10_70), 
    .B0(d10_69), .A0(CICGain_0), .DI0(d_out_11_N_1818_10), .M0(CICGain_1), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .OFX0(d_out_11_N_1818_10), 
    .Q0(CIC1_outCos_10));
  SLICE_2198 SLICE_2198( .D1(d10_68), .C1(n70), .B1(CICGain_0), .A1(CICGain_1), 
    .D0(\CIC1Sin/n140_adj_2582 ), .C0(d10_71), .B0(CICGain_0), .A0(CICGain_1), 
    .DI0(d_out_11_N_1818_11), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1818_11), .Q0(CIC1_outCos_11), .F1(\CIC1Sin/n140_adj_2582 ));
  CIC1Sin_SLICE_2199 \CIC1Sin/SLICE_2199 ( .C1(\CIC1Sin/d10_57 ), 
    .B1(\CIC1Sin/d10_59 ), .A1(CICGain_1), .C0(\CIC1Sin/d10_58 ), 
    .B0(CICGain_1), .A0(\CIC1Sin/n61 ), .DI0(\CIC1Sin/d_out_11_N_1818_0 ), 
    .M0(CICGain_0), .CE(\CIC1Sin/osc_clk_enable_1395 ), .CLK(osc_clk), 
    .OFX0(\CIC1Sin/d_out_11_N_1818_0 ), .Q0(CIC1_outSin_0));
  CIC1Sin_SLICE_2200 \CIC1Sin/SLICE_2200 ( .C1(\CIC1Sin/d10_58 ), 
    .B1(\CIC1Sin/d10_60 ), .A1(CICGain_1), .C0(\CIC1Sin/d10_59 ), 
    .B0(CICGain_1), .A0(\CIC1Sin/n62 ), .DI0(\CIC1Sin/d_out_11_N_1818_1 ), 
    .M0(CICGain_0), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .OFX0(\CIC1Sin/d_out_11_N_1818_1 ), .Q0(CIC1_outSin_1));
  CIC1Sin_SLICE_2201 \CIC1Sin/SLICE_2201 ( .D1(\CIC1Sin/n132 ), 
    .C1(\CIC1Sin/n64 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n131 ), 
    .C0(\CIC1Sin/n63 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI1(\CIC1Sin/d_out_11_N_1818_3 ), .DI0(\CIC1Sin/d_out_11_N_1818_2 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d_out_11_N_1818_2 ), 
    .Q0(CIC1_outSin_2), .F1(\CIC1Sin/d_out_11_N_1818_3 ), .Q1(CIC1_outSin_3));
  CIC1Sin_SLICE_2202 \CIC1Sin/SLICE_2202 ( .D1(\CIC1Sin/n134 ), 
    .C1(\CIC1Sin/n66 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n133 ), 
    .C0(\CIC1Sin/n65 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI1(\CIC1Sin/d_out_11_N_1818_5 ), .DI0(\CIC1Sin/d_out_11_N_1818_4 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d_out_11_N_1818_4 ), 
    .Q0(CIC1_outSin_4), .F1(\CIC1Sin/d_out_11_N_1818_5 ), .Q1(CIC1_outSin_5));
  CIC1Sin_SLICE_2203 \CIC1Sin/SLICE_2203 ( .M0(\CIC1Sin/d_clk_tmp ), 
    .CLK(osc_clk), .Q0(CIC1_out_clkSin));
  SLICE_2204 SLICE_2204( .M1(n7319), .M0(o_Rx_Byte_c_0), 
    .CE(osc_clk_enable_1393), .CLK(osc_clk), .Q0(CICGain_0), .Q1(CICGain_1));
  AMDemodulator1_SLICE_2205 \AMDemodulator1/SLICE_2205 ( 
    .M1(\AMDemodulator1/d_out_d_1 ), .M0(\AMDemodulator1/d_out_d_0 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1855_0), 
    .Q1(DataInReg_11_N_1855_1));
  AMDemodulator1_SLICE_2206 \AMDemodulator1/SLICE_2206 ( 
    .M1(\AMDemodulator1/d_out_d_3 ), .M0(\AMDemodulator1/d_out_d_2 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1855_2), 
    .Q1(DataInReg_11_N_1855_3));
  AMDemodulator1_SLICE_2207 \AMDemodulator1/SLICE_2207 ( 
    .M1(\AMDemodulator1/d_out_d_5 ), .M0(\AMDemodulator1/d_out_d_4 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1855_4), 
    .Q1(DataInReg_11_N_1855_5));
  AMDemodulator1_SLICE_2208 \AMDemodulator1/SLICE_2208 ( 
    .M1(\AMDemodulator1/d_out_d_7 ), .M0(\AMDemodulator1/d_out_d_6 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1855_6), 
    .Q1(DataInReg_11_N_1855_7));
  AMDemodulator1_SLICE_2209 \AMDemodulator1/SLICE_2209 ( 
    .M0(\AMDemodulator1/d_out_d_8 ), .CLK(CIC1_out_clkSin), 
    .Q0(DataInReg_11_N_1855_8));
  AMDemodulator1_SLICE_2210 \AMDemodulator1/SLICE_2210 ( 
    .M0(\AMDemodulator1/d_out_d_9 ), .CLK(CIC1_out_clkSin), .Q0(DemodOut_9));
  SinCos1_SLICE_2212 \SinCos1/SLICE_2212 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_2 ), 
    .A1(\SinCos1/rom_dout_15 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_1 ), 
    .A0(\SinCos1/rom_dout_14 ), .DI1(\SinCos1/cosout_pre_2 ), 
    .DI0(\SinCos1/cosout_pre_1 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_1 ), 
    .Q0(LOCosine_1), .F1(\SinCos1/cosout_pre_2 ), .Q1(LOCosine_2));
  SinCos1_SLICE_2213 \SinCos1/SLICE_2213 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_4 ), 
    .A1(\SinCos1/rom_dout_17 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_3 ), 
    .A0(\SinCos1/rom_dout_16 ), .DI1(\SinCos1/cosout_pre_4 ), 
    .DI0(\SinCos1/cosout_pre_3 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_3 ), 
    .Q0(LOCosine_3), .F1(\SinCos1/cosout_pre_4 ), .Q1(LOCosine_4));
  SinCos1_SLICE_2214 \SinCos1/SLICE_2214 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_6 ), 
    .A1(\SinCos1/rom_dout_19 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_5 ), 
    .A0(\SinCos1/rom_dout_18 ), .DI1(\SinCos1/cosout_pre_6 ), 
    .DI0(\SinCos1/cosout_pre_5 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_5 ), 
    .Q0(LOCosine_5), .F1(\SinCos1/cosout_pre_6 ), .Q1(LOCosine_6));
  SinCos1_SLICE_2215 \SinCos1/SLICE_2215 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_8 ), 
    .A1(\SinCos1/rom_dout_21 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_7 ), 
    .A0(\SinCos1/rom_dout_20 ), .DI1(\SinCos1/cosout_pre_8 ), 
    .DI0(\SinCos1/cosout_pre_7 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_7 ), 
    .Q0(LOCosine_7), .F1(\SinCos1/cosout_pre_8 ), .Q1(LOCosine_8));
  SinCos1_SLICE_2216 \SinCos1/SLICE_2216 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_10 ), 
    .A1(\SinCos1/rom_dout_23 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_9 ), 
    .A0(\SinCos1/rom_dout_22 ), .DI1(\SinCos1/cosout_pre_10 ), 
    .DI0(\SinCos1/cosout_pre_9 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_9 ), 
    .Q0(LOCosine_9), .F1(\SinCos1/cosout_pre_10 ), .Q1(LOCosine_10));
  SinCos1_SLICE_2217 \SinCos1/SLICE_2217 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_12 ), 
    .A1(\SinCos1/rom_dout_25 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_11 ), 
    .A0(\SinCos1/rom_dout_24 ), .DI1(\SinCos1/cosout_pre_12 ), 
    .DI0(\SinCos1/cosout_pre_11 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_11 ), 
    .Q0(LOCosine_11), .F1(\SinCos1/cosout_pre_12 ), .Q1(LOCosine_12));
  SinCos1_SLICE_2218 \SinCos1/SLICE_2218 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_2 ), 
    .A1(\SinCos1/rom_dout_2 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_1 ), 
    .A0(\SinCos1/rom_dout_1 ), .DI1(\SinCos1/sinout_pre_2 ), 
    .DI0(\SinCos1/sinout_pre_1 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_1 ), 
    .Q0(LOSine_1), .F1(\SinCos1/sinout_pre_2 ), .Q1(LOSine_2));
  SinCos1_SLICE_2219 \SinCos1/SLICE_2219 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_4 ), 
    .A1(\SinCos1/rom_dout_4 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_3 ), 
    .A0(\SinCos1/rom_dout_3 ), .DI1(\SinCos1/sinout_pre_4 ), 
    .DI0(\SinCos1/sinout_pre_3 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_3 ), 
    .Q0(LOSine_3), .F1(\SinCos1/sinout_pre_4 ), .Q1(LOSine_4));
  SinCos1_SLICE_2220 \SinCos1/SLICE_2220 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_6 ), 
    .A1(\SinCos1/rom_dout_6 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_5 ), 
    .A0(\SinCos1/rom_dout_5 ), .DI1(\SinCos1/sinout_pre_6 ), 
    .DI0(\SinCos1/sinout_pre_5 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_5 ), 
    .Q0(LOSine_5), .F1(\SinCos1/sinout_pre_6 ), .Q1(LOSine_6));
  SinCos1_SLICE_2221 \SinCos1/SLICE_2221 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_8 ), 
    .A1(\SinCos1/rom_dout_8 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_7 ), 
    .A0(\SinCos1/rom_dout_7 ), .DI1(\SinCos1/sinout_pre_8 ), 
    .DI0(\SinCos1/sinout_pre_7 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_7 ), 
    .Q0(LOSine_7), .F1(\SinCos1/sinout_pre_8 ), .Q1(LOSine_8));
  SinCos1_SLICE_2222 \SinCos1/SLICE_2222 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_10 ), 
    .A1(\SinCos1/rom_dout_10 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_9 ), 
    .A0(\SinCos1/rom_dout_9 ), .DI1(\SinCos1/sinout_pre_10 ), 
    .DI0(\SinCos1/sinout_pre_9 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_9 ), 
    .Q0(LOSine_9), .F1(\SinCos1/sinout_pre_10 ), .Q1(LOSine_10));
  SinCos1_SLICE_2223 \SinCos1/SLICE_2223 ( .C1(\SinCos1/out_sel ), 
    .B1(\SinCos1/mx_ctrl_r_1 ), .A1(\SinCos1/rom_dout_s_12 ), 
    .D0(\SinCos1/out_sel ), .C0(\SinCos1/sinromoutsel ), 
    .B0(\SinCos1/rom_dout_s_n_11 ), .A0(\SinCos1/rom_dout_11 ), 
    .DI1(\SinCos1/sinout_pre_12 ), .DI0(\SinCos1/sinout_pre_11 ), 
    .CLK(osc_clk), .F0(\SinCos1/sinout_pre_11 ), .Q0(LOSine_11), 
    .F1(\SinCos1/sinout_pre_12 ), .Q1(LOSine_12));
  CIC1Sin_SLICE_2224 \CIC1Sin/SLICE_2224 ( .D1(\CIC1Sin/n136 ), 
    .C1(\CIC1Sin/n68 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n135 ), 
    .C0(\CIC1Sin/n67 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI1(\CIC1Sin/d_out_11_N_1818_7 ), .DI0(\CIC1Sin/d_out_11_N_1818_6 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d_out_11_N_1818_6 ), 
    .Q0(MYLED_c_0), .F1(\CIC1Sin/d_out_11_N_1818_7 ), .Q1(MYLED_c_1));
  CIC1Sin_SLICE_2225 \CIC1Sin/SLICE_2225 ( .D1(\CIC1Sin/n138 ), 
    .C1(\CIC1Sin/n70 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/d10_68 ), 
    .C0(\CIC1Sin/n137 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI1(\CIC1Sin/d_out_11_N_1818_9 ), .DI0(\CIC1Sin/d_out_11_N_1818_8 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d_out_11_N_1818_8 ), 
    .Q0(MYLED_c_2), .F1(\CIC1Sin/d_out_11_N_1818_9 ), .Q1(MYLED_c_3));
  CIC1Sin_SLICE_2226 \CIC1Sin/SLICE_2226 ( .C1(\CIC1Sin/d10_68 ), 
    .B1(\CIC1Sin/d10_67 ), .A1(CICGain_0), .C0(\CIC1Sin/d10_70 ), 
    .B0(\CIC1Sin/d10_69 ), .A0(CICGain_0), .DI0(\CIC1Sin/d_out_11_N_1818_10 ), 
    .M0(CICGain_1), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .OFX0(\CIC1Sin/d_out_11_N_1818_10 ), .Q0(MYLED_c_4));
  CIC1Sin_SLICE_2227 \CIC1Sin/SLICE_2227 ( .D1(\CIC1Sin/d10_68 ), 
    .C1(\CIC1Sin/n70 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n140 ), 
    .C0(\CIC1Sin/d10_71 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI0(\CIC1Sin/d_out_11_N_1818_11 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d_out_11_N_1818_11 ), .Q0(MYLED_c_5), .F1(\CIC1Sin/n140 ));
  Mixer1_SLICE_2228 \Mixer1/SLICE_2228 ( .M1(RFIn_c), .M0(DiffOut_c), 
    .CLK(osc_clk), .Q0(\Mixer1/RFInR ), .Q1(DiffOut_c));
  Mixer1_SLICE_2229 \Mixer1/SLICE_2229 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_249_1 ), .A1(LOCosine_2), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_249_0 ), .A0(LOCosine_1), 
    .DI1(\Mixer1/MixerOutCos_11_N_223_1 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_223_0 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_223_0 ), .Q0(MixerOutCos_0), 
    .F1(\Mixer1/MixerOutCos_11_N_223_1 ), .Q1(MixerOutCos_1));
  Mixer1_SLICE_2230 \Mixer1/SLICE_2230 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_249_3 ), .A1(LOCosine_4), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_249_2 ), .A0(LOCosine_3), 
    .DI1(\Mixer1/MixerOutCos_11_N_223_3 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_223_2 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_223_2 ), .Q0(MixerOutCos_2), 
    .F1(\Mixer1/MixerOutCos_11_N_223_3 ), .Q1(MixerOutCos_3));
  Mixer1_SLICE_2231 \Mixer1/SLICE_2231 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_249_5 ), .A1(LOCosine_6), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_249_4 ), .A0(LOCosine_5), 
    .DI1(\Mixer1/MixerOutCos_11_N_223_5 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_223_4 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_223_4 ), .Q0(MixerOutCos_4), 
    .F1(\Mixer1/MixerOutCos_11_N_223_5 ), .Q1(MixerOutCos_5));
  Mixer1_SLICE_2232 \Mixer1/SLICE_2232 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_249_7 ), .A1(LOCosine_8), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_249_6 ), .A0(LOCosine_7), 
    .DI1(\Mixer1/MixerOutCos_11_N_223_7 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_223_6 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_223_6 ), .Q0(MixerOutCos_6), 
    .F1(\Mixer1/MixerOutCos_11_N_223_7 ), .Q1(MixerOutCos_7));
  Mixer1_SLICE_2233 \Mixer1/SLICE_2233 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_249_9 ), .A1(LOCosine_10), 
    .C0(\Mixer1/RFInR ), .B0(\Mixer1/MixerOutCos_11_N_249_8 ), .A0(LOCosine_9), 
    .DI1(\Mixer1/MixerOutCos_11_N_223_9 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_223_8 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_223_8 ), .Q0(MixerOutCos_8), 
    .F1(\Mixer1/MixerOutCos_11_N_223_9 ), .Q1(MixerOutCos_9));
  Mixer1_SLICE_2234 \Mixer1/SLICE_2234 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_249_11 ), .A1(LOCosine_12), 
    .C0(\Mixer1/RFInR ), .B0(\Mixer1/MixerOutCos_11_N_249_10 ), 
    .A0(LOCosine_11), .DI1(\Mixer1/MixerOutCos_11_N_223_11 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_223_10 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_223_10 ), .Q0(MixerOutCos_10), 
    .F1(\Mixer1/MixerOutCos_11_N_223_11 ), .Q1(MixerOutCos_11));
  Mixer1_SLICE_2235 \Mixer1/SLICE_2235 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_235_1 ), .A1(LOSine_2), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_235_0 ), .A0(LOSine_1), 
    .DI1(\Mixer1/MixerOutSin_11_N_211_1 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_211_0 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_211_0 ), .Q0(MixerOutSin_0), 
    .F1(\Mixer1/MixerOutSin_11_N_211_1 ), .Q1(MixerOutSin_1));
  Mixer1_SLICE_2236 \Mixer1/SLICE_2236 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_235_3 ), .A1(LOSine_4), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_235_2 ), .A0(LOSine_3), 
    .DI1(\Mixer1/MixerOutSin_11_N_211_3 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_211_2 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_211_2 ), .Q0(MixerOutSin_2), 
    .F1(\Mixer1/MixerOutSin_11_N_211_3 ), .Q1(MixerOutSin_3));
  Mixer1_SLICE_2237 \Mixer1/SLICE_2237 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_235_5 ), .A1(LOSine_6), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_235_4 ), .A0(LOSine_5), 
    .DI1(\Mixer1/MixerOutSin_11_N_211_5 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_211_4 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_211_4 ), .Q0(MixerOutSin_4), 
    .F1(\Mixer1/MixerOutSin_11_N_211_5 ), .Q1(MixerOutSin_5));
  Mixer1_SLICE_2238 \Mixer1/SLICE_2238 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_235_7 ), .A1(LOSine_8), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_235_6 ), .A0(LOSine_7), 
    .DI1(\Mixer1/MixerOutSin_11_N_211_7 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_211_6 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_211_6 ), .Q0(MixerOutSin_6), 
    .F1(\Mixer1/MixerOutSin_11_N_211_7 ), .Q1(MixerOutSin_7));
  Mixer1_SLICE_2239 \Mixer1/SLICE_2239 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_235_9 ), .A1(LOSine_10), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_235_8 ), .A0(LOSine_9), 
    .DI1(\Mixer1/MixerOutSin_11_N_211_9 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_211_8 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_211_8 ), .Q0(MixerOutSin_8), 
    .F1(\Mixer1/MixerOutSin_11_N_211_9 ), .Q1(MixerOutSin_9));
  Mixer1_SLICE_2240 \Mixer1/SLICE_2240 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_235_11 ), .A1(LOSine_12), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_235_10 ), .A0(LOSine_11), 
    .DI1(\Mixer1/MixerOutSin_11_N_211_11 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_211_10 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_211_10 ), .Q0(MixerOutSin_10), 
    .F1(\Mixer1/MixerOutSin_11_N_211_11 ), .Q1(MixerOutSin_11));
  PWM1_SLICE_2241 \PWM1/SLICE_2241 ( .M1(DataInReg_11_N_1855_1), 
    .M0(DataInReg_11_N_1855_0), .CE(\PWM1/osc_clk_enable_1392 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_0 ), .Q1(\PWM1/DataInReg_1 ));
  PWM1_SLICE_2242 \PWM1/SLICE_2242 ( .M1(DataInReg_11_N_1855_3), 
    .M0(DataInReg_11_N_1855_2), .CE(\PWM1/osc_clk_enable_1392 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_2 ), .Q1(\PWM1/DataInReg_3 ));
  PWM1_SLICE_2243 \PWM1/SLICE_2243 ( .M1(DataInReg_11_N_1855_5), 
    .M0(DataInReg_11_N_1855_4), .CE(\PWM1/osc_clk_enable_1392 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_4 ), .Q1(\PWM1/DataInReg_5 ));
  PWM1_SLICE_2244 \PWM1/SLICE_2244 ( .M1(DataInReg_11_N_1855_7), 
    .M0(DataInReg_11_N_1855_6), .CE(\PWM1/osc_clk_enable_1392 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_6 ), .Q1(\PWM1/DataInReg_7 ));
  PWM1_SLICE_2245 \PWM1/SLICE_2245 ( .M0(DataInReg_11_N_1855_8), 
    .CE(\PWM1/osc_clk_enable_1392 ), .CLK(osc_clk), .Q0(\PWM1/DataInReg_8 ));
  PWM1_SLICE_2246 \PWM1/SLICE_2246 ( .A0(DemodOut_9), .DI0(\PWM1/n3825 ), 
    .CE(\PWM1/osc_clk_enable_1392 ), .CLK(osc_clk), .F0(\PWM1/n3825 ), 
    .Q0(\PWM1/DataInReg_9 ));
  SinCos1_SLICE_2247 \SinCos1/SLICE_2247 ( .B0(\SinCos1/mx_ctrl_r_1 ), 
    .A0(\SinCos1/mx_ctrl_r ), .DI0(\SinCos1/cosromoutsel_i ), .CLK(osc_clk), 
    .F0(\SinCos1/cosromoutsel_i ), .Q0(\SinCos1/cosromoutsel ));
  SinCos1_SLICE_2250 \SinCos1/SLICE_2250 ( .C1(\SinCos1/mx_ctrl_r ), 
    .B1(\SinCos1/rom_addr0_r_n_4 ), .A1(\SinCos1/rom_addr0_r_4 ), 
    .D0(\SinCos1/mx_ctrl_r ), .C0(\SinCos1/func_or_inet ), 
    .B0(\SinCos1/rom_addr0_r_10 ), .A0(\SinCos1/rom_addr0_r_11 ), 
    .DI0(\SinCos1/out_sel_i ), .CLK(osc_clk), .F0(\SinCos1/out_sel_i ), 
    .Q0(\SinCos1/out_sel ), .F1(\SinCos1/rom_addr0_r_10 ));
  SinCos1_SLICE_2251 \SinCos1/SLICE_2251 ( .M1(phase_accum_59), 
    .M0(phase_accum_57), .CLK(osc_clk), .Q0(\SinCos1/rom_addr0_r_1 ), 
    .Q1(\SinCos1/rom_addr0_r_3 ));
  SinCos1_SLICE_2252 \SinCos1/SLICE_2252 ( .M0(phase_accum_61), .CLK(osc_clk), 
    .Q0(\SinCos1/rom_addr0_r_5 ));
  SinCos1_SLICE_2253 \SinCos1/SLICE_2253 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_13_1_f5b ), .FXA(\SinCos1/triglut_1_0_13_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_13_1_f5b ), 
    .Q1(\SinCos1/rom_dout ), .OFX1(\SinCos1/rom_dout_ffin ));
  SinCos1_SLICE_2254 \SinCos1/SLICE_2254 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_1_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_14_1_f5b ), .FXA(\SinCos1/triglut_1_0_14_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_14_1_f5b ), 
    .Q1(\SinCos1/rom_dout_1 ), .OFX1(\SinCos1/rom_dout_1_ffin ));
  SinCos1_SLICE_2255 \SinCos1/SLICE_2255 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_2_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_15_1_f5b ), .FXA(\SinCos1/triglut_1_0_15_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_15_1_f5b ), 
    .Q1(\SinCos1/rom_dout_2 ), .OFX1(\SinCos1/rom_dout_2_ffin ));
  SinCos1_SLICE_2256 \SinCos1/SLICE_2256 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_3_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_16_1_f5b ), .FXA(\SinCos1/triglut_1_0_16_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_16_1_f5b ), 
    .Q1(\SinCos1/rom_dout_3 ), .OFX1(\SinCos1/rom_dout_3_ffin ));
  SinCos1_SLICE_2257 \SinCos1/SLICE_2257 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_4_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_17_1_f5b ), .FXA(\SinCos1/triglut_1_0_17_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_17_1_f5b ), 
    .Q1(\SinCos1/rom_dout_4 ), .OFX1(\SinCos1/rom_dout_4_ffin ));
  SinCos1_SLICE_2258 \SinCos1/SLICE_2258 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_5_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_18_1_f5b ), .FXA(\SinCos1/triglut_1_0_18_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_18_1_f5b ), 
    .Q1(\SinCos1/rom_dout_5 ), .OFX1(\SinCos1/rom_dout_5_ffin ));
  SinCos1_SLICE_2259 \SinCos1/SLICE_2259 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_6_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_19_1_f5b ), .FXA(\SinCos1/triglut_1_0_19_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_19_1_f5b ), 
    .Q1(\SinCos1/rom_dout_6 ), .OFX1(\SinCos1/rom_dout_6_ffin ));
  SinCos1_SLICE_2260 \SinCos1/SLICE_2260 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_7_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_20_1_f5b ), .FXA(\SinCos1/triglut_1_0_20_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_20_1_f5b ), 
    .Q1(\SinCos1/rom_dout_7 ), .OFX1(\SinCos1/rom_dout_7_ffin ));
  SinCos1_SLICE_2261 \SinCos1/SLICE_2261 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_8_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_21_1_f5b ), .FXA(\SinCos1/triglut_1_0_21_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_21_1_f5b ), 
    .Q1(\SinCos1/rom_dout_8 ), .OFX1(\SinCos1/rom_dout_8_ffin ));
  SinCos1_SLICE_2262 \SinCos1/SLICE_2262 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_9_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_22_1_f5b ), .FXA(\SinCos1/triglut_1_0_22_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_22_1_f5b ), 
    .Q1(\SinCos1/rom_dout_9 ), .OFX1(\SinCos1/rom_dout_9_ffin ));
  SinCos1_SLICE_2263 \SinCos1/SLICE_2263 ( .DI1(\SinCos1/rom_dout_10_ffin ), 
    .M1(\SinCos1/rom_addr0_r_11 ), .FXB(\SinCos1/triglut_1_0_23_1_f5b ), 
    .FXA(\SinCos1/triglut_1_0_23_0_f5a ), .CLK(osc_clk), 
    .OFX0(\SinCos1/triglut_1_0_23_1_f5b ), .Q1(\SinCos1/rom_dout_10 ), 
    .OFX1(\SinCos1/rom_dout_10_ffin ));
  SinCos1_SLICE_2264 \SinCos1/SLICE_2264 ( .CLK(osc_clk), 
    .Q0(\SinCos1/rom_dout_11 ), .Q1(\SinCos1/rom_dout_12 ));
  SinCos1_SLICE_2265 \SinCos1/SLICE_2265 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_13_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_0_1_f5b ), .FXA(\SinCos1/triglut_1_0_0_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_0_1_f5b ), 
    .Q1(\SinCos1/rom_dout_13 ), .OFX1(\SinCos1/rom_dout_13_ffin ));
  SinCos1_SLICE_2266 \SinCos1/SLICE_2266 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_14_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_1_1_f5b ), .FXA(\SinCos1/triglut_1_0_1_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_1_1_f5b ), 
    .Q1(\SinCos1/rom_dout_14 ), .OFX1(\SinCos1/rom_dout_14_ffin ));
  SinCos1_SLICE_2267 \SinCos1/SLICE_2267 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_15_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_2_1_f5b ), .FXA(\SinCos1/triglut_1_0_2_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_2_1_f5b ), 
    .Q1(\SinCos1/rom_dout_15 ), .OFX1(\SinCos1/rom_dout_15_ffin ));
  SinCos1_SLICE_2268 \SinCos1/SLICE_2268 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_16_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_3_1_f5b ), .FXA(\SinCos1/triglut_1_0_3_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_3_1_f5b ), 
    .Q1(\SinCos1/rom_dout_16 ), .OFX1(\SinCos1/rom_dout_16_ffin ));
  SinCos1_SLICE_2269 \SinCos1/SLICE_2269 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_17_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_4_1_f5b ), .FXA(\SinCos1/triglut_1_0_4_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_4_1_f5b ), 
    .Q1(\SinCos1/rom_dout_17 ), .OFX1(\SinCos1/rom_dout_17_ffin ));
  SinCos1_SLICE_2270 \SinCos1/SLICE_2270 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_18_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_5_1_f5b ), .FXA(\SinCos1/triglut_1_0_5_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_5_1_f5b ), 
    .Q1(\SinCos1/rom_dout_18 ), .OFX1(\SinCos1/rom_dout_18_ffin ));
  SinCos1_SLICE_2271 \SinCos1/SLICE_2271 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_19_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_6_1_f5b ), .FXA(\SinCos1/triglut_1_0_6_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_6_1_f5b ), 
    .Q1(\SinCos1/rom_dout_19 ), .OFX1(\SinCos1/rom_dout_19_ffin ));
  SinCos1_SLICE_2272 \SinCos1/SLICE_2272 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_20_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_7_1_f5b ), .FXA(\SinCos1/triglut_1_0_7_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_7_1_f5b ), 
    .Q1(\SinCos1/rom_dout_20 ), .OFX1(\SinCos1/rom_dout_20_ffin ));
  SinCos1_SLICE_2273 \SinCos1/SLICE_2273 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_21_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_8_1_f5b ), .FXA(\SinCos1/triglut_1_0_8_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_8_1_f5b ), 
    .Q1(\SinCos1/rom_dout_21 ), .OFX1(\SinCos1/rom_dout_21_ffin ));
  SinCos1_SLICE_2274 \SinCos1/SLICE_2274 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_22_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_9_1_f5b ), .FXA(\SinCos1/triglut_1_0_9_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_9_1_f5b ), 
    .Q1(\SinCos1/rom_dout_22 ), .OFX1(\SinCos1/rom_dout_22_ffin ));
  SinCos1_SLICE_2275 \SinCos1/SLICE_2275 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_23_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_10_1_f5b ), .FXA(\SinCos1/triglut_1_0_10_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_10_1_f5b ), 
    .Q1(\SinCos1/rom_dout_23 ), .OFX1(\SinCos1/rom_dout_23_ffin ));
  SinCos1_SLICE_2276 \SinCos1/SLICE_2276 ( .DI1(\SinCos1/rom_dout_24_ffin ), 
    .M1(\SinCos1/rom_addr0_r_11 ), .FXB(\SinCos1/triglut_1_0_11_1_f5b ), 
    .FXA(\SinCos1/triglut_1_0_11_0_f5a ), .CLK(osc_clk), 
    .OFX0(\SinCos1/triglut_1_0_11_1_f5b ), .Q1(\SinCos1/rom_dout_24 ), 
    .OFX1(\SinCos1/rom_dout_24_ffin ));
  SinCos1_SLICE_2277 \SinCos1/SLICE_2277 ( .CLK(osc_clk), 
    .Q0(\SinCos1/rom_dout_25 ));
  SinCos1_SLICE_2278 \SinCos1/SLICE_2278 ( .M1(phase_accum_63), 
    .M0(\SinCos1/mx_ctrl_r_1 ), .CLK(osc_clk), .Q0(\SinCos1/sinromoutsel ), 
    .Q1(\SinCos1/mx_ctrl_r_1 ));
  CIC1Cos_SLICE_2279 \CIC1Cos/SLICE_2279 ( .C1(\CIC1Cos/n6774 ), 
    .B1(\CIC1Cos/n6825 ), .A1(\CIC1Cos/n6787 ), .C0(\CIC1Cos/n6774 ), 
    .B0(\CIC1Cos/n6826 ), .A0(\CIC1Cos/n6788 ), 
    .DI1(\CIC1Cos/d10_71_N_1746_60 ), .DI0(\CIC1Cos/d10_71_N_1746_59 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1746_59 ), 
    .Q0(d10_59), .F1(\CIC1Cos/d10_71_N_1746_60 ), .Q1(d10_60));
  CIC1Cos_SLICE_2280 \CIC1Cos/SLICE_2280 ( .C1(\CIC1Cos/n6774 ), 
    .B1(\CIC1Cos/n6823 ), .A1(\CIC1Cos/n6785 ), .C0(\CIC1Cos/n6774 ), 
    .B0(\CIC1Cos/n6824 ), .A0(\CIC1Cos/n6786 ), 
    .DI1(\CIC1Cos/d10_71_N_1746_62 ), .DI0(\CIC1Cos/d10_71_N_1746_61 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1746_61 ), 
    .Q0(d10_61), .F1(\CIC1Cos/d10_71_N_1746_62 ), .Q1(d10_62));
  CIC1Cos_SLICE_2281 \CIC1Cos/SLICE_2281 ( .C1(\CIC1Cos/n6774 ), 
    .B1(\CIC1Cos/n6821 ), .A1(\CIC1Cos/n6783 ), .C0(\CIC1Cos/n6774 ), 
    .B0(\CIC1Cos/n6822 ), .A0(\CIC1Cos/n6784 ), 
    .DI1(\CIC1Cos/d10_71_N_1746_64 ), .DI0(\CIC1Cos/d10_71_N_1746_63 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1746_63 ), 
    .Q0(d10_63), .F1(\CIC1Cos/d10_71_N_1746_64 ), .Q1(d10_64));
  CIC1Cos_SLICE_2282 \CIC1Cos/SLICE_2282 ( .C1(\CIC1Cos/n6774 ), 
    .B1(\CIC1Cos/n6819 ), .A1(\CIC1Cos/n6781 ), .C0(\CIC1Cos/n6774 ), 
    .B0(\CIC1Cos/n6820 ), .A0(\CIC1Cos/n6782 ), 
    .DI1(\CIC1Cos/d10_71_N_1746_66 ), .DI0(\CIC1Cos/d10_71_N_1746_65 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1746_65 ), 
    .Q0(d10_65), .F1(\CIC1Cos/d10_71_N_1746_66 ), .Q1(d10_66));
  CIC1Cos_SLICE_2283 \CIC1Cos/SLICE_2283 ( .C1(\CIC1Cos/n6774 ), 
    .B1(\CIC1Cos/n6817 ), .A1(\CIC1Cos/n6779 ), .C0(\CIC1Cos/n6774 ), 
    .B0(\CIC1Cos/n6818 ), .A0(\CIC1Cos/n6780 ), 
    .DI1(\CIC1Cos/d10_71_N_1746_68 ), .DI0(\CIC1Cos/d10_71_N_1746_67 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1746_67 ), 
    .Q0(d10_67), .F1(\CIC1Cos/d10_71_N_1746_68 ), .Q1(d10_68));
  CIC1Cos_SLICE_2284 \CIC1Cos/SLICE_2284 ( .C1(\CIC1Cos/n6774 ), 
    .B1(\CIC1Cos/n6815 ), .A1(\CIC1Cos/n6777 ), .C0(\CIC1Cos/n6774 ), 
    .B0(\CIC1Cos/n6816 ), .A0(\CIC1Cos/n6778 ), 
    .DI1(\CIC1Cos/d10_71_N_1746_70 ), .DI0(\CIC1Cos/d10_71_N_1746_69 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1746_69 ), 
    .Q0(d10_69), .F1(\CIC1Cos/d10_71_N_1746_70 ), .Q1(d10_70));
  CIC1Cos_SLICE_2285 \CIC1Cos/SLICE_2285 ( .C0(\CIC1Cos/n6774 ), 
    .B0(\CIC1Cos/n6814 ), .A0(\CIC1Cos/n6776 ), 
    .DI0(\CIC1Cos/d10_71_N_1746_71 ), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d10_71_N_1746_71 ), .Q0(d10_71));
  ncoGen_SLICE_2287 \ncoGen/SLICE_2287 ( .B0(phase_inc_carrGen1_0), 
    .A0(\ncoGen/phase_accum_0 ), .DI0(\ncoGen/phase_accum_63_N_145_0 ), 
    .CLK(osc_clk), .F0(\ncoGen/phase_accum_63_N_145_0 ), 
    .Q0(\ncoGen/phase_accum_0 ));
  uart_rx1_SLICE_2288 \uart_rx1/SLICE_2288 ( .M1(\uart_rx1/r_Rx_Byte_2 ), 
    .M0(\uart_rx1/r_Rx_Byte_0 ), .CE(\uart_rx1/r_Rx_DV_N_2483 ), 
    .CLK(\uart_tx1/UartClk[2] ), .Q0(o_Rx_Byte_c_0), .Q1(o_Rx_Byte_c_2));
  uart_rx1_SLICE_2289 \uart_rx1/SLICE_2289 ( .M1(\uart_rx1/r_Rx_Byte_4 ), 
    .M0(\uart_rx1/r_Rx_Byte_3 ), .CE(\uart_rx1/r_Rx_DV_N_2483 ), 
    .CLK(\uart_tx1/UartClk[2] ), .Q0(o_Rx_Byte_c_3), .Q1(o_Rx_Byte_c_4));
  uart_rx1_SLICE_2290 \uart_rx1/SLICE_2290 ( .M1(\uart_rx1/r_Rx_Byte_6 ), 
    .M0(\uart_rx1/r_Rx_Byte_5 ), .CE(\uart_rx1/r_Rx_DV_N_2483 ), 
    .CLK(\uart_tx1/UartClk[2] ), .Q0(o_Rx_Byte_c_5), .Q1(o_Rx_Byte_c_6));
  uart_rx1_SLICE_2292 \uart_rx1/SLICE_2292 ( .A0(\uart_rx1/r_Rx_DV_last ), 
    .DI0(\uart_rx1/r_Rx_DV_last_N_2482 ), .LSR(\uart_rx1/r_Rx_DV ), 
    .CLK(osc_clk), .F0(\uart_rx1/r_Rx_DV_last_N_2482 ), .Q0(o_Rx_DV_c_0));
  uart_tx1_SLICE_2293 \uart_tx1/SLICE_2293 ( .C1(\uart_tx1/r_Bit_Index_1 ), 
    .B1(\uart_tx1/r_Bit_Index_2 ), .A1(\uart_tx1/r_Bit_Index_0 ), 
    .C0(\uart_tx1/r_SM_Main_1 ), .B0(\uart_tx1/n9244 ), 
    .A0(\uart_tx1/r_SM_Main_0 ), .DI0(\uart_tx1/n39 ), 
    .CE(\uart_tx1/r_SM_Main_2 ), .CLK(\uart_tx1/UartClk[2] ), 
    .F0(\uart_tx1/n39 ), .Q0(o_Tx_Serial_c), .F1(\uart_tx1/n13766 ));
  SLICE_2294 SLICE_2294( .M1(phase_inc_carrGen_1), .M0(phase_inc_carrGen_0), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_0), .Q1(phase_inc_carrGen1_1));
  SLICE_2295 SLICE_2295( .M1(phase_inc_carrGen_3), .M0(phase_inc_carrGen_2), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_2), .Q1(phase_inc_carrGen1_3));
  SLICE_2296 SLICE_2296( .M1(phase_inc_carrGen_5), .M0(phase_inc_carrGen_4), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_4), .Q1(phase_inc_carrGen1_5));
  SLICE_2297 SLICE_2297( .M1(phase_inc_carrGen_7), .M0(phase_inc_carrGen_6), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_6), .Q1(phase_inc_carrGen1_7));
  SLICE_2298 SLICE_2298( .M1(phase_inc_carrGen_9), .M0(phase_inc_carrGen_8), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_8), .Q1(phase_inc_carrGen1_9));
  SLICE_2299 SLICE_2299( .M1(phase_inc_carrGen_11), .M0(phase_inc_carrGen_10), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_10), .Q1(phase_inc_carrGen1_11));
  SLICE_2300 SLICE_2300( .M1(phase_inc_carrGen_13), .M0(phase_inc_carrGen_12), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_12), .Q1(phase_inc_carrGen1_13));
  SLICE_2301 SLICE_2301( .M1(phase_inc_carrGen_15), .M0(phase_inc_carrGen_14), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_14), .Q1(phase_inc_carrGen1_15));
  SLICE_2302 SLICE_2302( .M1(phase_inc_carrGen_17), .M0(phase_inc_carrGen_16), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_16), .Q1(phase_inc_carrGen1_17));
  SLICE_2303 SLICE_2303( .M1(phase_inc_carrGen_19), .M0(phase_inc_carrGen_18), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_18), .Q1(phase_inc_carrGen1_19));
  SLICE_2304 SLICE_2304( .M1(phase_inc_carrGen_21), .M0(phase_inc_carrGen_20), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_20), .Q1(phase_inc_carrGen1_21));
  SLICE_2305 SLICE_2305( .M1(phase_inc_carrGen_23), .M0(phase_inc_carrGen_22), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_22), .Q1(phase_inc_carrGen1_23));
  SLICE_2306 SLICE_2306( .M1(phase_inc_carrGen_25), .M0(phase_inc_carrGen_24), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_24), .Q1(phase_inc_carrGen1_25));
  SLICE_2307 SLICE_2307( .M1(phase_inc_carrGen_27), .M0(phase_inc_carrGen_26), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_26), .Q1(phase_inc_carrGen1_27));
  SLICE_2308 SLICE_2308( .M1(phase_inc_carrGen_29), .M0(phase_inc_carrGen_28), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_28), .Q1(phase_inc_carrGen1_29));
  SLICE_2309 SLICE_2309( .M1(phase_inc_carrGen_31), .M0(phase_inc_carrGen_30), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_30), .Q1(phase_inc_carrGen1_31));
  SLICE_2310 SLICE_2310( .M1(phase_inc_carrGen_33), .M0(phase_inc_carrGen_32), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_32), .Q1(phase_inc_carrGen1_33));
  SLICE_2311 SLICE_2311( .M1(phase_inc_carrGen_35), .M0(phase_inc_carrGen_34), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_34), .Q1(phase_inc_carrGen1_35));
  SLICE_2312 SLICE_2312( .M1(phase_inc_carrGen_37), .M0(phase_inc_carrGen_36), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_36), .Q1(phase_inc_carrGen1_37));
  SLICE_2313 SLICE_2313( .M1(phase_inc_carrGen_39), .M0(phase_inc_carrGen_38), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_38), .Q1(phase_inc_carrGen1_39));
  SLICE_2314 SLICE_2314( .M1(phase_inc_carrGen_41), .M0(phase_inc_carrGen_40), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_40), .Q1(phase_inc_carrGen1_41));
  SLICE_2315 SLICE_2315( .M1(phase_inc_carrGen_43), .M0(phase_inc_carrGen_42), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_42), .Q1(phase_inc_carrGen1_43));
  SLICE_2316 SLICE_2316( .M1(phase_inc_carrGen_45), .M0(phase_inc_carrGen_44), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_44), .Q1(phase_inc_carrGen1_45));
  SLICE_2317 SLICE_2317( .M1(phase_inc_carrGen_47), .M0(phase_inc_carrGen_46), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_46), .Q1(phase_inc_carrGen1_47));
  SLICE_2318 SLICE_2318( .M1(phase_inc_carrGen_49), .M0(phase_inc_carrGen_48), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_48), .Q1(phase_inc_carrGen1_49));
  SLICE_2319 SLICE_2319( .M1(phase_inc_carrGen_51), .M0(phase_inc_carrGen_50), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_50), .Q1(phase_inc_carrGen1_51));
  SLICE_2320 SLICE_2320( .M1(phase_inc_carrGen_53), .M0(phase_inc_carrGen_52), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_52), .Q1(phase_inc_carrGen1_53));
  SLICE_2321 SLICE_2321( .M1(phase_inc_carrGen_55), .M0(phase_inc_carrGen_54), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_54), .Q1(phase_inc_carrGen1_55));
  SLICE_2322 SLICE_2322( .M1(phase_inc_carrGen_57), .M0(phase_inc_carrGen_56), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_56), .Q1(phase_inc_carrGen1_57));
  SLICE_2323 SLICE_2323( .M1(phase_inc_carrGen_59), .M0(phase_inc_carrGen_58), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_58), .Q1(phase_inc_carrGen1_59));
  SLICE_2324 SLICE_2324( .M1(phase_inc_carrGen_61), .M0(phase_inc_carrGen_60), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_60), .Q1(phase_inc_carrGen1_61));
  SLICE_2325 SLICE_2325( .M1(phase_inc_carrGen_63), .M0(phase_inc_carrGen_62), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_62), .Q1(phase_inc_carrGen1_63));
  SLICE_2326 SLICE_2326( .B1(o_Rx_Byte_c_3), .A1(o_Rx_Byte_c_2), .D0(n7319), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .DI1(n2738), 
    .DI0(n2739), .CE(osc_clk_enable_1458), .LSR(n8366), .CLK(osc_clk), 
    .F0(n2739), .Q0(phase_inc_carrGen_0), .F1(n2738), .Q1(phase_inc_carrGen_1));
  SLICE_2327 SLICE_2327( .M0(n2935), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .Q0(phase_inc_carrGen_3));
  uart_rx1_SLICE_2328 \uart_rx1/SLICE_2328 ( .D1(\uart_rx1/r_SM_Main_1 ), 
    .C1(\uart_rx1/r_SM_Main_0 ), .B1(\uart_rx1/n10 ), 
    .A1(\uart_rx1/r_SM_Main_2_N_2417_2 ), .D0(\uart_rx1/r_SM_Main_1 ), 
    .C0(\uart_rx1/r_Bit_Index_0 ), .B0(\uart_rx1/r_SM_Main_0 ), 
    .A0(\uart_rx1/r_SM_Main_2_N_2417_2 ), .DI1(\uart_rx1/n13050 ), 
    .DI0(\uart_rx1/n13030 ), .CE(\uart_rx1/UartClk_2_enable_10 ), 
    .CLK(\uart_tx1/UartClk[2] ), .F0(\uart_rx1/n13030 ), 
    .Q0(\uart_rx1/r_Bit_Index_0 ), .F1(\uart_rx1/n13050 ), 
    .Q1(\uart_rx1/r_Bit_Index_1 ));
  uart_rx1_SLICE_2329 \uart_rx1/SLICE_2329 ( .D1(\uart_rx1/r_Bit_Index_2 ), 
    .C1(\uart_rx1/r_SM_Main_0 ), .B1(\uart_rx1/r_Bit_Index_0 ), 
    .A1(\uart_rx1/r_Bit_Index_1 ), .C0(\uart_rx1/r_SM_Main_2_N_2417_2 ), 
    .B0(\uart_rx1/r_SM_Main_1 ), .A0(\uart_rx1/n13870 ), 
    .DI0(\uart_rx1/n13872 ), .CE(\uart_rx1/UartClk_2_enable_10 ), 
    .CLK(\uart_tx1/UartClk[2] ), .F0(\uart_rx1/n13872 ), 
    .Q0(\uart_rx1/r_Bit_Index_2 ), .F1(\uart_rx1/n13870 ));
  uart_rx1_SLICE_2330 \uart_rx1/SLICE_2330 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_52 ), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_0 ));
  uart_rx1_SLICE_2331 \uart_rx1/SLICE_2331 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_29 ), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_1 ));
  uart_rx1_SLICE_2332 \uart_rx1/SLICE_2332 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_22 ), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_2 ));
  uart_rx1_SLICE_2333 \uart_rx1/SLICE_2333 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_21 ), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_3 ));
  uart_rx1_SLICE_2334 \uart_rx1/SLICE_2334 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_18 ), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_4 ));
  uart_rx1_SLICE_2335 \uart_rx1/SLICE_2335 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_15 ), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_5 ));
  uart_rx1_SLICE_2336 \uart_rx1/SLICE_2336 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_13 ), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_6 ));
  uart_rx1_SLICE_2337 \uart_rx1/SLICE_2337 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_11 ), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_7 ));
  uart_rx1_SLICE_2338 \uart_rx1/SLICE_2338 ( 
    .D1(\uart_rx1/r_SM_Main_2_N_2417_2 ), .C1(\uart_rx1/r_SM_Main_0 ), 
    .B1(\uart_rx1/r_SM_Main_2 ), .A1(\uart_rx1/r_SM_Main_1 ), 
    .D0(\uart_rx1/r_SM_Main_2_N_2417_2 ), .C0(\uart_rx1/r_SM_Main_0 ), 
    .B0(\uart_rx1/r_SM_Main_1 ), .A0(\uart_rx1/r_SM_Main_2 ), 
    .DI0(\uart_rx1/r_Rx_DV_N_2483 ), .CE(\uart_rx1/UartClk_2_enable_17 ), 
    .CLK(\uart_tx1/UartClk[2] ), .F0(\uart_rx1/r_Rx_DV_N_2483 ), 
    .Q0(\uart_rx1/r_Rx_DV ), .F1(\uart_rx1/UartClk_2_enable_17 ));
  uart_rx1_SLICE_2339 \uart_rx1/SLICE_2339 ( .M0(\uart_rx1/r_Rx_DV ), 
    .CLK(osc_clk), .Q0(\uart_rx1/r_Rx_DV_last ));
  uart_rx1_SLICE_2341 \uart_rx1/SLICE_2341 ( .M1(\uart_rx1/r_Rx_Data_R ), 
    .M0(i_Rx_Serial_c), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Data_R ), .Q1(\uart_rx1/r_Rx_Data ));
  uart_rx1_SLICE_2342 \uart_rx1/SLICE_2342 ( .C1(\uart_rx1/n8940 ), 
    .B1(\uart_rx1/r_SM_Main_2_N_2417_2 ), .A1(\uart_rx1/r_SM_Main_0 ), 
    .D0(\uart_rx1/r_Rx_Data ), .C0(\uart_rx1/r_SM_Main_0 ), 
    .B0(\uart_rx1/n12362 ), .A0(\uart_rx1/n13769 ), .DI0(\uart_rx1/n13545 ), 
    .M0(\uart_rx1/r_SM_Main_1 ), .LSR(\uart_rx1/r_SM_Main_2 ), 
    .CLK(\uart_tx1/UartClk[2] ), .OFX0(\uart_rx1/n13545 ), 
    .Q0(\uart_rx1/r_SM_Main_0 ));
  uart_rx1_SLICE_2343 \uart_rx1/SLICE_2343 ( .D1(\uart_rx1/r_Rx_Data ), 
    .C1(\uart_rx1/n13756 ), .B1(\uart_rx1/r_SM_Main_1 ), 
    .A1(\uart_rx1/r_SM_Main_2_N_2417_2 ), .C0(\uart_rx1/r_SM_Main_0 ), 
    .B0(\uart_rx1/n13781 ), .A0(\uart_rx1/r_SM_Main_1 ), 
    .DI0(\uart_rx1/n13782 ), .LSR(\uart_rx1/r_SM_Main_2 ), 
    .CLK(\uart_tx1/UartClk[2] ), .F0(\uart_rx1/n13782 ), 
    .Q0(\uart_rx1/r_SM_Main_1 ), .F1(\uart_rx1/n13781 ));
  uart_rx1_SLICE_2344 \uart_rx1/SLICE_2344 ( .D1(\uart_rx1/r_SM_Main_1 ), 
    .C1(\uart_rx1/r_SM_Main_2 ), .B1(\uart_rx1/r_SM_Main_2_N_2417_2 ), 
    .A1(\uart_rx1/r_SM_Main_0 ), .D0(\uart_rx1/r_Clock_Count_5 ), 
    .C0(\uart_rx1/r_Clock_Count_6 ), .B0(\uart_rx1/n12870 ), 
    .A0(\uart_rx1/n8998 ), .DI0(\uart_rx1/r_SM_Main_2_N_2417_2 ), 
    .LSR(\uart_rx1/n12904 ), .CLK(\uart_tx1/UartClk[2] ), 
    .F0(\uart_rx1/r_SM_Main_2_N_2417_2 ), .Q0(\uart_rx1/r_SM_Main_2 ), 
    .F1(\uart_rx1/UartClk_2_enable_10 ));
  uart_tx1_SLICE_2345 \uart_tx1/SLICE_2345 ( .C1(\uart_tx1/n13755 ), 
    .B1(\uart_tx1/r_Bit_Index_1 ), .A1(\uart_tx1/r_Bit_Index_0 ), 
    .D0(\uart_tx1/r_Bit_Index_0 ), .C0(\uart_tx1/r_SM_Main_1 ), 
    .B0(\uart_tx1/r_SM_Main_2_N_2530_1 ), .A0(\uart_tx1/r_SM_Main_0 ), 
    .DI1(\uart_tx1/n13046 ), .DI0(\uart_tx1/n3_adj_2612 ), 
    .CE(\uart_tx1/UartClk_2_enable_5 ), .CLK(\uart_tx1/UartClk[2] ), 
    .F0(\uart_tx1/n3_adj_2612 ), .Q0(\uart_tx1/r_Bit_Index_0 ), 
    .F1(\uart_tx1/n13046 ), .Q1(\uart_tx1/r_Bit_Index_1 ));
  uart_tx1_SLICE_2346 \uart_tx1/SLICE_2346 ( .C1(\uart_tx1/r_SM_Main_1 ), 
    .B1(\uart_tx1/r_SM_Main_2_N_2530_1 ), .A1(\uart_tx1/r_SM_Main_0 ), 
    .D0(\uart_tx1/r_Bit_Index_0 ), .C0(\uart_tx1/r_Bit_Index_1 ), 
    .B0(\uart_tx1/r_Bit_Index_2 ), .A0(\uart_tx1/n13755 ), .DI0(\uart_tx1/n3 ), 
    .CE(\uart_tx1/UartClk_2_enable_5 ), .CLK(\uart_tx1/UartClk[2] ), 
    .F0(\uart_tx1/n3 ), .Q0(\uart_tx1/r_Bit_Index_2 ), .F1(\uart_tx1/n13755 ));
  uart_tx1_SLICE_2347 \uart_tx1/SLICE_2347 ( 
    .C1(\uart_tx1/r_SM_Main_2_N_2530_1 ), .B1(\uart_tx1/r_SM_Main_1 ), 
    .A1(\uart_tx1/r_SM_Main_0 ), .C0(\uart_tx1/r_SM_Main_0 ), 
    .B0(\uart_tx1/r_SM_Main_2_N_2530_1 ), .A0(\uart_tx1/n3_adj_2615 ), 
    .DI1(\uart_tx1/n3_adj_2614 ), .DI0(\uart_tx1/n7667 ), 
    .LSR(\uart_tx1/r_SM_Main_2 ), .CLK(\uart_tx1/UartClk[2] ), 
    .F0(\uart_tx1/n7667 ), .Q0(\uart_tx1/r_SM_Main_0 ), 
    .F1(\uart_tx1/n3_adj_2614 ), .Q1(\uart_tx1/r_SM_Main_1 ));
  uart_tx1_SLICE_2348 \uart_tx1/SLICE_2348 ( 
    .D1(\uart_tx1/r_SM_Main_2_N_2530_1 ), .C1(\uart_tx1/r_SM_Main_1 ), 
    .B1(\uart_tx1/n13766 ), .A1(o_Rx_DV_c_0), .D0(\uart_tx1/n6 ), 
    .C0(\uart_tx1/r_Clock_Count_11 ), .B0(\uart_tx1/n50 ), .A0(\uart_tx1/n7 ), 
    .DI0(\uart_tx1/r_SM_Main_2_N_2530_1 ), .LSR(\uart_tx1/n13013 ), 
    .CLK(\uart_tx1/UartClk[2] ), .F0(\uart_tx1/r_SM_Main_2_N_2530_1 ), 
    .Q0(\uart_tx1/r_SM_Main_2 ), .F1(\uart_tx1/n3_adj_2615 ));
  uart_tx1_SLICE_2349 \uart_tx1/SLICE_2349 ( .M1(n7319), .M0(o_Rx_Byte_c_0), 
    .CE(\uart_tx1/UartClk_2_enable_40 ), .CLK(\uart_tx1/UartClk[2] ), 
    .Q0(\uart_tx1/r_Tx_Data_0 ), .Q1(\uart_tx1/r_Tx_Data_1 ));
  uart_tx1_SLICE_2350 \uart_tx1/SLICE_2350 ( .M1(o_Rx_Byte_c_3), 
    .M0(o_Rx_Byte_c_2), .CE(\uart_tx1/UartClk_2_enable_40 ), 
    .CLK(\uart_tx1/UartClk[2] ), .Q0(\uart_tx1/r_Tx_Data_2 ), 
    .Q1(\uart_tx1/r_Tx_Data_3 ));
  uart_tx1_SLICE_2351 \uart_tx1/SLICE_2351 ( .M1(o_Rx_Byte_c_5), 
    .M0(o_Rx_Byte_c_4), .CE(\uart_tx1/UartClk_2_enable_40 ), 
    .CLK(\uart_tx1/UartClk[2] ), .Q0(\uart_tx1/r_Tx_Data_4 ), 
    .Q1(\uart_tx1/r_Tx_Data_5 ));
  uart_tx1_SLICE_2352 \uart_tx1/SLICE_2352 ( .M1(o_Rx_Byte_c_7), 
    .M0(o_Rx_Byte_c_6), .CE(\uart_tx1/UartClk_2_enable_40 ), 
    .CLK(\uart_tx1/UartClk[2] ), .Q0(\uart_tx1/r_Tx_Data_6 ), 
    .Q1(\uart_tx1/r_Tx_Data_7 ));
  uart_tx1_i5814_SLICE_2353 \uart_tx1/i5814/SLICE_2353 ( 
    .C1(\uart_tx1/r_Tx_Data_7 ), .B1(\uart_tx1/r_Tx_Data_6 ), 
    .A1(\uart_tx1/r_Bit_Index_0 ), .C0(\uart_tx1/r_Bit_Index_0 ), 
    .B0(\uart_tx1/r_Tx_Data_3 ), .A0(\uart_tx1/r_Tx_Data_2 ), 
    .M1(\uart_tx1/r_Bit_Index_1 ), .M0(\uart_tx1/r_Bit_Index_2 ), 
    .FXB(\uart_tx1/n13263 ), .FXA(\uart_tx1/n13260 ), .OFX0(\uart_tx1/n13263 ), 
    .OFX1(\uart_tx1/n9244 ));
  uart_tx1_i5811_SLICE_2354 \uart_tx1/i5811/SLICE_2354 ( 
    .C1(\uart_tx1/r_Tx_Data_5 ), .B1(\uart_tx1/r_Tx_Data_1 ), 
    .A1(\uart_tx1/r_Bit_Index_2 ), .C0(\uart_tx1/r_Bit_Index_2 ), 
    .B0(\uart_tx1/r_Tx_Data_4 ), .A0(\uart_tx1/r_Tx_Data_0 ), 
    .M0(\uart_tx1/r_Bit_Index_0 ), .OFX0(\uart_tx1/n13260 ));
  i6062_SLICE_2355 \i6062/SLICE_2355 ( .D1(n7319), .C1(o_Rx_Byte_c_2), 
    .B1(o_Rx_Byte_c_3), .A1(n901), .D0(n7319), .C0(o_Rx_Byte_c_2), 
    .B0(o_Rx_Byte_c_3), .A0(n901), .M0(o_Rx_Byte_c_0), .OFX0(n13833));
  i6052_SLICE_2356 \i6052/SLICE_2356 ( .D1(o_Rx_Byte_c_0), .C1(n7319), 
    .B1(o_Rx_Byte_c_3), .A1(o_Rx_Byte_c_2), .D0(o_Rx_Byte_c_0), .C0(n7319), 
    .B0(o_Rx_Byte_c_3), .A0(o_Rx_Byte_c_2), .M0(n920), .OFX0(n13818));
  i6175_SLICE_2357 \i6175/SLICE_2357 ( .D1(n7319), .C1(o_Rx_Byte_c_2), 
    .B1(o_Rx_Byte_c_3), .A1(n937), .D0(n7319), .C0(o_Rx_Byte_c_2), 
    .B0(o_Rx_Byte_c_3), .A0(n937), .M0(o_Rx_Byte_c_0), .OFX0(n14097));
  i6044_SLICE_2358 \i6044/SLICE_2358 ( .D1(o_Rx_Byte_c_2), .C1(o_Rx_Byte_c_3), 
    .B1(o_Rx_Byte_c_4), .A1(o_Rx_Byte_c_0), .C0(o_Rx_Byte_c_3), 
    .B0(o_Rx_Byte_c_4), .A0(o_Rx_Byte_c_0), .M0(n7319), .OFX0(n13806));
  i6042_SLICE_2359 \i6042/SLICE_2359 ( .D1(n7319), .C1(o_Rx_Byte_c_2), 
    .B1(o_Rx_Byte_c_3), .A1(n933), .D0(n7319), .C0(o_Rx_Byte_c_2), 
    .B0(o_Rx_Byte_c_3), .A0(n933), .M0(o_Rx_Byte_c_0), .OFX0(n13803));
  i6038_SLICE_2360 \i6038/SLICE_2360 ( .D1(o_Rx_Byte_c_0), .C1(n7319), 
    .B1(o_Rx_Byte_c_3), .A1(o_Rx_Byte_c_2), .D0(o_Rx_Byte_c_0), .C0(n7319), 
    .B0(o_Rx_Byte_c_3), .A0(o_Rx_Byte_c_2), .M0(n934), .OFX0(n13797));
  i6036_SLICE_2361 \i6036/SLICE_2361 ( .D1(o_Rx_Byte_c_2), .C1(o_Rx_Byte_c_4), 
    .B1(o_Rx_Byte_c_0), .A1(o_Rx_Byte_c_3), .D0(o_Rx_Byte_c_2), 
    .C0(o_Rx_Byte_c_4), .B0(o_Rx_Byte_c_0), .A0(o_Rx_Byte_c_3), .M0(n7319), 
    .OFX0(n41));
  i6179_SLICE_2362 \i6179/SLICE_2362 ( .D1(n7319), .C1(o_Rx_Byte_c_2), 
    .B1(o_Rx_Byte_c_3), .A1(n910), .D0(n7319), .C0(o_Rx_Byte_c_2), 
    .B0(o_Rx_Byte_c_3), .A0(n910), .M0(o_Rx_Byte_c_0), .OFX0(n14103));
  i6177_SLICE_2363 \i6177/SLICE_2363 ( .D1(n7319), .C1(o_Rx_Byte_c_2), 
    .B1(o_Rx_Byte_c_3), .A1(n922), .D0(n7319), .C0(o_Rx_Byte_c_2), 
    .B0(o_Rx_Byte_c_3), .A0(n922), .M0(o_Rx_Byte_c_0), .OFX0(n14100));
  SinCos1_SLICE_2364 \SinCos1/SLICE_2364 ( .C1(\SinCos1/mx_ctrl_r ), 
    .B1(\SinCos1/rom_addr0_r_n_1 ), .A1(\SinCos1/rom_addr0_r_1 ), 
    .D0(\SinCos1/rom_addr0_r_10 ), .C0(\SinCos1/rom_addr0_r_9 ), 
    .B0(\SinCos1/rom_addr0_r_8 ), .A0(\SinCos1/rom_addr0_r_7 ), 
    .OFX0(\SinCos1/triglut_1_0_23_0_f5a ), .F1(\SinCos1/rom_addr0_r_7 ));
  SinCos1_SLICE_2365 \SinCos1/SLICE_2365 ( .C1(\SinCos1/rom_addr0_r_9 ), 
    .B1(\SinCos1/rom_addr0_r_8 ), .A1(\SinCos1/rom_addr0_r_10 ), 
    .D0(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/rom_addr0_r_8 ), 
    .B0(\SinCos1/rom_addr0_r_7 ), .A0(\SinCos1/rom_addr0_r_10 ), 
    .M0(\SinCos1/rom_addr0_r_11 ), .OFX0(\SinCos1/triglut_1_0_22_0_f5a ));
  SinCos1_SLICE_2366 \SinCos1/SLICE_2366 ( .C1(\SinCos1/rom_addr0_r_9 ), 
    .B1(\SinCos1/rom_addr0_r_8 ), .A1(\SinCos1/rom_addr0_r_10 ), 
    .D0(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/rom_addr0_r_8 ), 
    .B0(\SinCos1/rom_addr0_r_7 ), .A0(\SinCos1/rom_addr0_r_10 ), 
    .M0(\SinCos1/rom_addr0_r_11 ), .OFX0(\SinCos1/triglut_1_0_21_0_f5a ));
  SinCos1_SLICE_2367 \SinCos1/SLICE_2367 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_20_0_f5a ));
  SinCos1_SLICE_2368 \SinCos1/SLICE_2368 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_19_0_f5a ));
  SinCos1_SLICE_2369 \SinCos1/SLICE_2369 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_18_0_f5a ));
  SinCos1_SLICE_2370 \SinCos1/SLICE_2370 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_17_0_f5a ));
  SinCos1_SLICE_2371 \SinCos1/SLICE_2371 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_16_0_f5a ));
  SinCos1_SLICE_2372 \SinCos1/SLICE_2372 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_15_0_f5a ));
  SinCos1_SLICE_2373 \SinCos1/SLICE_2373 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_14_0_f5a ));
  SinCos1_SLICE_2374 \SinCos1/SLICE_2374 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_13_0_f5a ));
  SinCos1_SLICE_2375 \SinCos1/SLICE_2375 ( .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_10 ), 
    .OFX0(\SinCos1/triglut_1_0_11_0_f5a ));
  SinCos1_SLICE_2376 \SinCos1/SLICE_2376 ( .C1(\SinCos1/rom_addr0_r_9 ), 
    .B1(\SinCos1/rom_addr0_r_8 ), .A1(\SinCos1/rom_addr0_r_10 ), 
    .D0(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/rom_addr0_r_8 ), 
    .B0(\SinCos1/rom_addr0_r_7 ), .A0(\SinCos1/rom_addr0_r_10 ), 
    .M0(\SinCos1/rom_addr0_r_11 ), .OFX0(\SinCos1/triglut_1_0_10_0_f5a ));
  SinCos1_SLICE_2377 \SinCos1/SLICE_2377 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_9_0_f5a ));
  SinCos1_SLICE_2378 \SinCos1/SLICE_2378 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_8_0_f5a ));
  SinCos1_SLICE_2379 \SinCos1/SLICE_2379 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_7_0_f5a ));
  SinCos1_SLICE_2380 \SinCos1/SLICE_2380 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_6_0_f5a ));
  SinCos1_SLICE_2381 \SinCos1/SLICE_2381 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_5_0_f5a ));
  SinCos1_SLICE_2382 \SinCos1/SLICE_2382 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_4_0_f5a ));
  SinCos1_SLICE_2383 \SinCos1/SLICE_2383 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_3_0_f5a ));
  SinCos1_SLICE_2384 \SinCos1/SLICE_2384 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_2_0_f5a ));
  SinCos1_SLICE_2385 \SinCos1/SLICE_2385 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_1_0_f5a ));
  SinCos1_SLICE_2386 \SinCos1/SLICE_2386 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_0_0_f5a ));
  SLICE_2387 SLICE_2387( .C1(o_Rx_Byte_c_2), .B1(n914), .A1(n7319), .D0(n2579), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2710), 
    .F1(n2579));
  SLICE_2388 SLICE_2388( .C1(o_Rx_Byte_c_2), .B1(n900), .A1(n7319), .D0(n2565), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2696), 
    .F1(n2565));
  SLICE_2389 SLICE_2389( .C1(o_Rx_Byte_c_2), .B1(n916), .A1(n7319), .D0(n2581), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2712), 
    .F1(n2581));
  SLICE_2390 SLICE_2390( .C1(o_Rx_Byte_c_2), .B1(n921), .A1(n7319), .D0(n2586), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2717), 
    .F1(n2586));
  SLICE_2391 SLICE_2391( .D1(n2601), .C1(o_Rx_Byte_c_3), .B1(o_Rx_Byte_c_2), 
    .A1(o_Rx_Byte_c_0), .C0(o_Rx_Byte_c_2), .B0(n936), .A0(n7319), .F0(n2601), 
    .F1(n2732));
  SLICE_2392 SLICE_2392( .C1(o_Rx_Byte_c_2), .B1(n935), .A1(n7319), .D0(n2600), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2731), 
    .F1(n2600));
  SLICE_2393 SLICE_2393( .C1(o_Rx_Byte_c_2), .B1(n902), .A1(n7319), .D0(n2567), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2698), 
    .F1(n2567));
  SLICE_2394 SLICE_2394( .C1(o_Rx_Byte_c_2), .B1(n908), .A1(n7319), .D0(n2573), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2704), 
    .F1(n2573));
  SLICE_2395 SLICE_2395( .C1(o_Rx_Byte_c_2), .B1(n905), .A1(n7319), .D0(n2570), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2701), 
    .F1(n2570));
  SLICE_2396 SLICE_2396( .C1(n941), .B1(n7319), .A1(o_Rx_Byte_c_2), 
    .D0(o_Rx_Byte_c_3), .C0(n8967), .B0(n13757), .A0(o_Rx_Byte_c_2), 
    .F0(n2803), .F1(n8967));
  uart_tx1_SLICE_2397 \uart_tx1/SLICE_2397 ( .D1(o_Rx_Byte_c_2), 
    .C1(o_Rx_Byte_c_0), .B1(n12872), .A1(n13765), .D0(o_Rx_Byte_c_2), 
    .C0(o_Rx_Byte_c_7), .B0(o_Rx_DV_c_0), .A0(\uart_tx1/n13147 ), .F0(n12872), 
    .F1(n13151));
  SLICE_2398 SLICE_2398( .D1(n13765), .C1(o_Rx_Byte_c_3), .B1(o_Rx_Byte_c_2), 
    .A1(o_Rx_Byte_c_0), .D0(n4), .C0(o_Rx_Byte_c_2), .B0(n12896), .A0(n12900), 
    .F0(n12897), .F1(n12900));
  SLICE_2399 SLICE_2399( .D1(n12872), .C1(o_Rx_Byte_c_0), .B1(o_Rx_Byte_c_4), 
    .A1(n7319), .C0(n7319), .B0(n13757), .A0(o_Rx_Byte_c_3), .F0(n12946), 
    .F1(n13757));
  SLICE_2400 SLICE_2400( .C1(o_Rx_Byte_c_2), .B1(n886), .A1(n7319), .D0(n2551), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2682), 
    .F1(n2551));
  SLICE_2401 SLICE_2401( .C1(o_Rx_Byte_c_2), .B1(n912), .A1(n7319), .D0(n2577), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2708), 
    .F1(n2577));
  SLICE_2402 SLICE_2402( .C1(o_Rx_Byte_c_2), .B1(n887), .A1(n7319), .D0(n2552), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2683), 
    .F1(n2552));
  SLICE_2403 SLICE_2403( .C1(o_Rx_Byte_c_2), .B1(n926), .A1(n7319), .D0(n2591), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2722), 
    .F1(n2591));
  SLICE_2404 SLICE_2404( .C1(o_Rx_Byte_c_2), .B1(n929), .A1(n7319), .D0(n2594), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2725), 
    .F1(n2594));
  SLICE_2405 SLICE_2405( .C1(o_Rx_Byte_c_2), .B1(n885), .A1(n7319), .D0(n2550), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2681), 
    .F1(n2550));
  SLICE_2406 SLICE_2406( .C1(o_Rx_Byte_c_2), .B1(n915), .A1(n7319), .D0(n2580), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2711), 
    .F1(n2580));
  SLICE_2407 SLICE_2407( .C1(o_Rx_Byte_c_2), .B1(n931), .A1(n7319), .D0(n2596), 
    .C0(o_Rx_Byte_c_3), .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2727), 
    .F1(n2596));
  CIC1Sin_SLICE_2408 \CIC1Sin/SLICE_2408 ( .C1(CICGain_0), 
    .B1(\CIC1Sin/d10_68 ), .A1(\CIC1Sin/d10_67 ), .D0(\CIC1Sin/d10_66 ), 
    .C0(\CIC1Sin/n68 ), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n138 ), 
    .F1(\CIC1Sin/n68 ));
  CIC1Sin_SLICE_2409 \CIC1Sin/SLICE_2409 ( .D1(\CIC1Sin/d10_59 ), 
    .C1(\CIC1Sin/n61 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_61 ), .A0(\CIC1Sin/d10_60 ), .F0(\CIC1Sin/n61 ), 
    .F1(\CIC1Sin/n131 ));
  CIC1Sin_SLICE_2410 \CIC1Sin/SLICE_2410 ( .D1(\CIC1Sin/d10_60 ), 
    .C1(\CIC1Sin/n62 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_62 ), .A0(\CIC1Sin/d10_61 ), .F0(\CIC1Sin/n62 ), 
    .F1(\CIC1Sin/n132 ));
  CIC1Sin_SLICE_2411 \CIC1Sin/SLICE_2411 ( .D1(\CIC1Sin/d10_61 ), 
    .C1(\CIC1Sin/n63 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_63 ), .A0(\CIC1Sin/d10_62 ), .F0(\CIC1Sin/n63 ), 
    .F1(\CIC1Sin/n133 ));
  CIC1Sin_SLICE_2412 \CIC1Sin/SLICE_2412 ( .D1(\CIC1Sin/d10_62 ), 
    .C1(\CIC1Sin/n64 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_64 ), .A0(\CIC1Sin/d10_63 ), .F0(\CIC1Sin/n64 ), 
    .F1(\CIC1Sin/n134 ));
  CIC1Sin_SLICE_2413 \CIC1Sin/SLICE_2413 ( .D1(\CIC1Sin/d10_63 ), 
    .C1(\CIC1Sin/n65 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_65 ), .A0(\CIC1Sin/d10_64 ), .F0(\CIC1Sin/n65 ), 
    .F1(\CIC1Sin/n135 ));
  CIC1Sin_SLICE_2414 \CIC1Sin/SLICE_2414 ( .D1(\CIC1Sin/d10_64 ), 
    .C1(\CIC1Sin/n66 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_66 ), .A0(\CIC1Sin/d10_65 ), .F0(\CIC1Sin/n66 ), 
    .F1(\CIC1Sin/n136 ));
  CIC1Sin_SLICE_2415 \CIC1Sin/SLICE_2415 ( .D1(\CIC1Sin/d10_65 ), 
    .C1(\CIC1Sin/n67 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_67 ), .A0(\CIC1Sin/d10_66 ), .F0(\CIC1Sin/n67 ), 
    .F1(\CIC1Sin/n137 ));
  SLICE_2416 SLICE_2416( .C1(CICGain_0), .B1(d10_67), .A1(d10_66), .D0(d10_65), 
    .C0(n67), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n137_adj_2585 ), 
    .F1(n67));
  SLICE_2417 SLICE_2417( .C1(CICGain_0), .B1(d10_68), .A1(d10_67), .D0(d10_66), 
    .C0(n68), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n138_adj_2588 ), 
    .F1(n68));
  SLICE_2418 SLICE_2418( .C1(CICGain_0), .B1(d10_65), .A1(d10_64), .D0(d10_63), 
    .C0(n65), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n135_adj_2591 ), 
    .F1(n65));
  SLICE_2419 SLICE_2419( .C1(CICGain_0), .B1(d10_66), .A1(d10_65), .D0(d10_64), 
    .C0(n66), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n136_adj_2594 ), 
    .F1(n66));
  SLICE_2420 SLICE_2420( .C1(CICGain_0), .B1(d10_63), .A1(d10_62), .D0(d10_61), 
    .C0(n63), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n133_adj_2596 ), 
    .F1(n63));
  SLICE_2421 SLICE_2421( .C1(CICGain_0), .B1(d10_64), .A1(d10_63), .D0(d10_62), 
    .C0(n64), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n134_adj_2598 ), 
    .F1(n64));
  SLICE_2422 SLICE_2422( .C1(CICGain_0), .B1(d10_61), .A1(d10_60), .D0(d10_59), 
    .C0(n61), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n131_adj_2576 ), 
    .F1(n61));
  SLICE_2423 SLICE_2423( .C1(CICGain_0), .B1(d10_62), .A1(d10_61), .D0(d10_60), 
    .C0(n62), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n132_adj_2579 ), 
    .F1(n62));
  PWM1_SLICE_2424 \PWM1/SLICE_2424 ( .D1(\PWM1/n12 ), .C1(\PWM1/n11 ), 
    .B1(\PWM1/n15 ), .A1(\PWM1/n17 ), .B0(\PWM1/counter_9 ), 
    .A0(\PWM1/counter_2 ), .F0(\PWM1/n15 ), .F1(\PWM1/osc_clk_enable_1392 ));
  SLICE_2425 SLICE_2425( .D1(n13757), .C1(n2215), .B1(n995), .A1(n2728), 
    .D0(o_Rx_Byte_c_2), .C0(o_Rx_Byte_c_3), .B0(n2335), .A0(o_Rx_Byte_c_0), 
    .F0(n2728), .F1(n2269));
  SLICE_2426 SLICE_2426( .D1(o_Rx_Byte_c_4), .C1(n7319), .B1(n12872), 
    .A1(o_Rx_Byte_c_0), .D0(n13757), .C0(n2215), .B0(n999), .A0(n2732), 
    .F0(n2273), .F1(n2215));
  SLICE_2427 SLICE_2427( .B1(n7319), .A1(n911), .D0(n2314), .C0(o_Rx_Byte_c_3), 
    .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2707), .F1(n2314));
  SLICE_2428 SLICE_2428( .C1(n939), .B1(n13811), .A1(n13810), .D0(n13757), 
    .C0(n2215), .B0(n1002), .A0(n13791), .F0(n2276), .F1(n13791));
  SLICE_2429 SLICE_2429( .B1(n7319), .A1(n898), .D0(n2301), .C0(o_Rx_Byte_c_3), 
    .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2694), .F1(n2301));
  SLICE_2430 SLICE_2430( .B1(n7319), .A1(n913), .D0(n2316), .C0(o_Rx_Byte_c_3), 
    .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2709), .F1(n2316));
  SLICE_2431 SLICE_2431( .B1(n7319), .A1(n896), .D0(n2299), .C0(o_Rx_Byte_c_3), 
    .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2692), .F1(n2299));
  SLICE_2432 SLICE_2432( .C1(n938), .B1(n13838), .A1(n13837), .D0(n13757), 
    .C0(n2215), .B0(n1001), .A0(n13788), .F0(n2275), .F1(n13788));
  SLICE_2433 SLICE_2433( .D1(n57), .C1(o_Rx_Byte_c_4), .B1(n12896), 
    .A1(n13806), .C0(n9004), .B0(osc_clk_enable_1457), .A0(n2215), 
    .F0(osc_clk_enable_1396), .F1(n9004));
  SLICE_2434 SLICE_2434( .D1(n7319), .C1(o_Rx_Byte_c_2), .B1(o_Rx_Byte_c_3), 
    .A1(n891), .D0(n13757), .C0(n2215), .B0(n954), .A0(n2687), .F0(n2228), 
    .F1(n2687));
  SLICE_2435 SLICE_2435( .D1(n13753), .C1(n2215), .B1(n993), .A1(n2595), 
    .D0(o_Rx_Byte_c_3), .C0(o_Rx_Byte_c_0), .B0(n12872), .A0(n13765), 
    .F0(n13753), .F1(n2267));
  uart_tx1_SLICE_2436 \uart_tx1/SLICE_2436 ( .C1(\uart_tx1/r_Clock_Count_2 ), 
    .B1(\uart_tx1/r_Clock_Count_3 ), .A1(\uart_tx1/r_Clock_Count_1 ), 
    .D0(\uart_tx1/r_Clock_Count_4 ), .C0(\uart_tx1/n8994 ), 
    .B0(\uart_tx1/r_Clock_Count_6 ), .A0(\uart_tx1/r_Clock_Count_5 ), 
    .F0(\uart_tx1/n50 ), .F1(\uart_tx1/n8994 ));
  uart_tx1_SLICE_2437 \uart_tx1/SLICE_2437 ( .C1(\uart_tx1/r_Clock_Count_10 ), 
    .B1(\uart_tx1/r_Clock_Count_14 ), .A1(\uart_tx1/r_Clock_Count_12 ), 
    .D0(\uart_tx1/n13031 ), .C0(\uart_tx1/r_Clock_Count_13 ), 
    .B0(\uart_tx1/r_Clock_Count_8 ), .A0(\uart_tx1/r_Clock_Count_7 ), 
    .F0(\uart_tx1/n6 ), .F1(\uart_tx1/n13031 ));
  SLICE_2438 SLICE_2438( .C1(n940), .B1(n13775), .A1(n13783), .D0(n13757), 
    .C0(n2215), .B0(n1003), .A0(n13785), .F0(n2277), .F1(n13785));
  SLICE_2439 SLICE_2439( .D1(n2215), .C1(osc_clk_enable_1457), .B1(n7986), 
    .A1(n9004), .C0(n41), .B0(n8210), .A0(o_Rx_Byte_c_6), 
    .F0(osc_clk_enable_1457), .F1(osc_clk_enable_1458));
  SLICE_2440 SLICE_2440( .B1(n7319), .A1(n906), .D0(n2309), .C0(o_Rx_Byte_c_3), 
    .B0(o_Rx_Byte_c_2), .A0(o_Rx_Byte_c_0), .F0(n2702), .F1(n2309));
  SLICE_2441 SLICE_2441( .C1(o_Rx_Byte_c_7), .B1(o_Rx_DV_c_0), 
    .A1(o_Rx_Byte_c_5), .D0(o_Rx_Byte_c_6), .C0(o_Rx_Byte_c_4), .B0(n8210), 
    .A0(n22), .F0(n13061), .F1(n8210));
  SLICE_2442 SLICE_2442( .C1(n7319), .B1(o_Rx_Byte_c_2), .A1(n890), 
    .D0(n13753), .C0(n2215), .B0(n953), .A0(n2555), .F0(n2227), .F1(n2555));
  SLICE_2443 SLICE_2443( .D1(n2296), .C1(o_Rx_Byte_c_3), .B1(o_Rx_Byte_c_2), 
    .A1(o_Rx_Byte_c_0), .D0(n13757), .C0(n2215), .B0(n956), .A0(n2689), 
    .F0(n2230), .F1(n2689));
  SLICE_2444 SLICE_2444( .D1(n2295), .C1(o_Rx_Byte_c_3), .B1(o_Rx_Byte_c_2), 
    .A1(o_Rx_Byte_c_0), .D0(n13757), .C0(n2215), .B0(n955), .A0(n2688), 
    .F0(n2229), .F1(n2688));
  SLICE_2445 SLICE_2445( .C1(n895), .B1(n13838), .A1(n13837), .D0(n13757), 
    .C0(n2215), .B0(n958), .A0(n13839), .F0(n2232), .F1(n13839));
  SLICE_2446 SLICE_2446( .C1(n889), .B1(n13775), .A1(n13783), 
    .D0(o_Rx_Byte_c_0), .C0(n7319), .B0(o_Rx_Byte_c_3), .A0(o_Rx_Byte_c_2), 
    .F0(n13783), .F1(n13776));
  SLICE_2447 SLICE_2447( .C1(o_Rx_Byte_c_3), .B1(n2559), .A1(o_Rx_Byte_c_0), 
    .D0(n13757), .C0(n2215), .B0(n957), .A0(n2690), .F0(n2231), .F1(n2690));
  SLICE_2448 SLICE_2448( .D1(n7319), .C1(o_Rx_Byte_c_3), .B1(n897), 
    .A1(o_Rx_Byte_c_2), .D0(n13757), .C0(n2215), .B0(n960), .A0(n2693), 
    .F0(n2234), .F1(n2693));
  SLICE_2449 SLICE_2449( .C1(n899), .B1(n13823), .A1(n13822), .D0(n13757), 
    .C0(n2215), .B0(n962), .A0(n13836), .F0(n2236), .F1(n13836));
  SLICE_2450 SLICE_2450( .C1(n924), .B1(n13811), .A1(n13810), 
    .D0(o_Rx_Byte_c_0), .C0(n7319), .B0(o_Rx_Byte_c_3), .A0(o_Rx_Byte_c_2), 
    .F0(n13811), .F1(n13812));
  SinCos1_SLICE_2451 \SinCos1/SLICE_2451 ( .D1(\SinCos1/rom_addr0_r_6 ), 
    .C1(\SinCos1/rom_addr0_r_7 ), .B1(\SinCos1/rom_addr0_r_8 ), 
    .A1(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/mx_ctrl_r ), 
    .B0(\SinCos1/rom_addr0_r_n ), .A0(\SinCos1/rom_addr0_r ), 
    .F0(\SinCos1/rom_addr0_r_6 ), .F1(\SinCos1/func_or_inet ));
  SLICE_2452 SLICE_2452( .D1(n903), .C1(o_Rx_Byte_c_3), .B1(n7319), 
    .A1(o_Rx_Byte_c_2), .D0(n13757), .C0(n2215), .B0(n966), .A0(n2699), 
    .F0(n2240), .F1(n2699));
  SLICE_2453 SLICE_2453( .D1(o_Rx_Byte_c_3), .C1(n13757), .B1(o_Rx_Byte_c_2), 
    .A1(n7319), .D0(n7986), .C0(n2215), .B0(n944), .A0(n881), .F0(n2218), 
    .F1(n7986));
  SLICE_2454 SLICE_2454( .D1(o_Rx_Byte_c_2), .C1(n904), .B1(o_Rx_Byte_c_3), 
    .A1(n7319), .D0(n13757), .C0(n2215), .B0(n967), .A0(n2700), .F0(n2241), 
    .F1(n2700));
  SLICE_2455 SLICE_2455( .C1(o_Rx_Byte_c_2), .B1(n883), .A1(n7319), 
    .D0(n13753), .C0(n2215), .B0(n946), .A0(n2548), .F0(n2220), .F1(n2548));
  SLICE_2456 SLICE_2456( .D1(o_Rx_Byte_c_3), .C1(n2310), .B1(o_Rx_Byte_c_2), 
    .A1(o_Rx_Byte_c_0), .D0(n13757), .C0(n2215), .B0(n970), .A0(n7695), 
    .F0(n2244), .F1(n7695));
  CIC1Sin_SLICE_2457 \CIC1Sin/SLICE_2457 ( .D1(\CIC1Sin/count_14 ), 
    .C1(\CIC1Sin/count_11 ), .B1(\CIC1Sin/count_15 ), .A1(\CIC1Sin/n7 ), 
    .B0(\CIC1Sin/count_2 ), .A0(\CIC1Sin/n12864 ), .F0(\CIC1Sin/n16 ), 
    .F1(\CIC1Sin/n12864 ));
  CIC1Sin_SLICE_2458 \CIC1Sin/SLICE_2458 ( .B1(\CIC1Sin/count_3 ), 
    .A1(\CIC1Sin/n12864 ), .D0(\CIC1Sin/n13238 ), .C0(\CIC1Sin/n13254 ), 
    .B0(\CIC1Sin/n13 ), .A0(\CIC1Sin/n13252 ), .F0(\CIC1Sin/n14123 ), 
    .F1(\CIC1Sin/n13 ));
  CIC1Sin_SLICE_2459 \CIC1Sin/SLICE_2459 ( .D1(\CIC1Sin/n13238 ), 
    .C1(\CIC1Sin/n13254 ), .B1(\CIC1Sin/n13 ), .A1(\CIC1Sin/n13252 ), 
    .B0(\CIC1Sin/count_5 ), .A0(\CIC1Sin/count_10 ), .F0(\CIC1Sin/n13238 ), 
    .F1(\CIC1Sin/d_clk_tmp_N_1830 ));
  SLICE_2460 SLICE_2460( .B1(o_Rx_Byte_c_4), .A1(o_Rx_Byte_c_2), .D0(n6), 
    .C0(o_Rx_Byte_c_6), .B0(o_Rx_Byte_c_3), .A0(n8210), 
    .F0(osc_clk_enable_1393), .F1(n6));
  SLICE_2461 SLICE_2461( .C1(n7319), .B1(o_Rx_Byte_c_3), .A1(n909), .D0(n9), 
    .C0(n2215), .B0(n972), .A0(n13151), .F0(n2246), .F1(n9));
  SLICE_2462 SLICE_2462( .C1(n925), .B1(n13823), .A1(n13822), 
    .D0(o_Rx_Byte_c_0), .C0(n7319), .B0(o_Rx_Byte_c_3), .A0(o_Rx_Byte_c_2), 
    .F0(n13823), .F1(n13815));
  SLICE_2463 SLICE_2463( .C1(n917), .B1(n13823), .A1(n13822), 
    .D0(o_Rx_Byte_c_0), .C0(n7319), .B0(o_Rx_Byte_c_3), .A0(o_Rx_Byte_c_2), 
    .F0(n13822), .F1(n13824));
  SLICE_2464 SLICE_2464( .D1(n13763), .C1(o_Rx_Byte_c_3), .B1(n918), 
    .A1(o_Rx_Byte_c_0), .B0(o_Rx_Byte_c_2), .A0(n7319), .F0(n13763), 
    .F1(n2714));
  SLICE_2465 SLICE_2465( .B1(n888), .A1(o_Rx_Byte_c_2), .D0(n12946), 
    .C0(n2215), .B0(n951), .A0(n8992), .F0(n2225), .F1(n8992));
  SLICE_2466 SLICE_2466( .C1(o_Rx_Byte_c_7), .B1(o_Rx_DV_c_0), 
    .A1(o_Rx_Byte_c_5), .D0(n13767), .C0(n13757), .B0(n7), .A0(n9_adj_2616), 
    .F0(n8366), .F1(n13767));
  SLICE_2467 SLICE_2467( .D1(n7319), .C1(o_Rx_Byte_c_2), .B1(o_Rx_Byte_c_3), 
    .A1(n919), .D0(n13757), .C0(n2215), .B0(n982), .A0(n2715), .F0(n2256), 
    .F1(n2715));
  SLICE_2468 SLICE_2468( .B1(n923), .A1(o_Rx_Byte_c_2), .D0(n12946), 
    .C0(n2215), .B0(n986), .A0(n8980), .F0(n2260), .F1(n8980));
  SLICE_2469 SLICE_2469( .D1(o_Rx_Byte_c_2), .C1(o_Rx_Byte_c_3), .B1(n2330), 
    .A1(o_Rx_Byte_c_0), .D0(n13757), .C0(n2215), .B0(n990), .A0(n2723), 
    .F0(n2264), .F1(n2723));
  SLICE_2470 SLICE_2470( .D1(o_Rx_Byte_c_2), .C1(o_Rx_Byte_c_3), .B1(n2331), 
    .A1(o_Rx_Byte_c_0), .D0(n13757), .C0(n2215), .B0(n991), .A0(n2724), 
    .F0(n2265), .F1(n2724));
  CIC1Cos_SLICE_2471 \CIC1Cos/SLICE_2471 ( .D1(\CIC1Cos/n16 ), 
    .C1(\CIC1Cos/n15 ), .B1(\CIC1Cos/n19 ), .A1(\CIC1Cos/n21 ), 
    .B0(\CIC1Cos/count_2 ), .A0(\CIC1Cos/n12867 ), .F0(\CIC1Cos/n16 ), 
    .F1(\CIC1Cos/n31 ));
  CIC1Cos_SLICE_2472 \CIC1Cos/SLICE_2472 ( .B1(\CIC1Cos/count_5 ), 
    .A1(\CIC1Cos/count_10 ), .D0(\CIC1Cos/n13228 ), .C0(\CIC1Cos/n13250 ), 
    .B0(\CIC1Cos/n13 ), .A0(\CIC1Cos/n13248 ), .F0(\CIC1Cos/count_15__N_1457 ), 
    .F1(\CIC1Cos/n13228 ));
  CIC1Cos_SLICE_2473 \CIC1Cos/SLICE_2473 ( .D1(\CIC1Cos/n13228 ), 
    .C1(\CIC1Cos/n13250 ), .B1(\CIC1Cos/n13 ), .A1(\CIC1Cos/n13248 ), 
    .B0(\CIC1Cos/n14125 ), .A0(\CIC1Cos/n31 ), .F0(\CIC1Cos/n8412 ), 
    .F1(\CIC1Cos/n14125 ));
  CIC1Cos_SLICE_2474 \CIC1Cos/SLICE_2474 ( .D1(\CIC1Cos/count_14 ), 
    .C1(\CIC1Cos/count_11 ), .B1(\CIC1Cos/count_15 ), .A1(\CIC1Cos/n7 ), 
    .B0(\CIC1Cos/count_3 ), .A0(\CIC1Cos/n12867 ), .F0(\CIC1Cos/n13 ), 
    .F1(\CIC1Cos/n12867 ));
  uart_rx1_SLICE_2475 \uart_rx1/SLICE_2475 ( .D1(\uart_rx1/r_Bit_Index_2 ), 
    .C1(\uart_rx1/n12914 ), .B1(\uart_rx1/n13754 ), 
    .A1(\uart_rx1/r_SM_Main_0 ), .B0(\uart_rx1/r_Bit_Index_0 ), 
    .A0(\uart_rx1/r_Bit_Index_1 ), .F0(\uart_rx1/n12914 ), 
    .F1(\uart_rx1/UartClk_2_enable_29 ));
  uart_rx1_SLICE_2476 \uart_rx1/SLICE_2476 ( .D1(\uart_rx1/n13769 ), 
    .C1(\uart_rx1/n12362 ), .B1(\uart_rx1/r_SM_Main_0 ), 
    .A1(\uart_rx1/r_Rx_Data ), .C0(\uart_rx1/r_Clock_Count_0 ), 
    .B0(\uart_rx1/r_Clock_Count_5 ), .A0(\uart_rx1/r_Clock_Count_3 ), 
    .F0(\uart_rx1/n13769 ), .F1(\uart_rx1/n24 ));
  uart_rx1_SLICE_2477 \uart_rx1/SLICE_2477 ( .D1(\uart_rx1/r_Clock_Count_6 ), 
    .C1(\uart_rx1/n13187 ), .B1(\uart_rx1/n12870 ), 
    .A1(\uart_rx1/r_Clock_Count_1 ), .D0(\uart_rx1/n12362 ), 
    .C0(\uart_rx1/r_Clock_Count_0 ), .B0(\uart_rx1/r_Clock_Count_5 ), 
    .A0(\uart_rx1/r_Clock_Count_3 ), .F0(\uart_rx1/n13756 ), 
    .F1(\uart_rx1/n12362 ));
  uart_rx1_SLICE_2478 \uart_rx1/SLICE_2478 ( 
    .D1(\uart_rx1/r_SM_Main_2_N_2417_2 ), .C1(\uart_rx1/r_SM_Main_0 ), 
    .B1(\uart_rx1/r_SM_Main_1 ), .A1(\uart_rx1/r_SM_Main_2 ), 
    .D0(\uart_rx1/r_Bit_Index_0 ), .C0(\uart_rx1/r_Bit_Index_1 ), 
    .B0(\uart_rx1/n13750 ), .A0(\uart_rx1/r_Bit_Index_2 ), 
    .F0(\uart_rx1/UartClk_2_enable_22 ), .F1(\uart_rx1/n13750 ));
  uart_rx1_SLICE_2479 \uart_rx1/SLICE_2479 ( 
    .C1(\uart_rx1/r_SM_Main_2_N_2417_2 ), .B1(\uart_rx1/r_SM_Main_1 ), 
    .A1(\uart_rx1/r_SM_Main_2 ), .D0(\uart_rx1/r_Bit_Index_2 ), 
    .C0(\uart_rx1/n12914 ), .B0(\uart_rx1/n13754 ), 
    .A0(\uart_rx1/r_SM_Main_0 ), .F0(\uart_rx1/UartClk_2_enable_15 ), 
    .F1(\uart_rx1/n13754 ));
  uart_rx1_SLICE_2480 \uart_rx1/SLICE_2480 ( .B1(\uart_rx1/r_Bit_Index_0 ), 
    .A1(\uart_rx1/r_Bit_Index_1 ), .D0(\uart_rx1/r_Bit_Index_2 ), 
    .C0(\uart_rx1/n13760 ), .B0(\uart_rx1/n13754 ), 
    .A0(\uart_rx1/r_SM_Main_0 ), .F0(\uart_rx1/UartClk_2_enable_11 ), 
    .F1(\uart_rx1/n13760 ));
  uart_rx1_SLICE_2481 \uart_rx1/SLICE_2481 ( .B1(\uart_rx1/r_SM_Main_0 ), 
    .A1(\uart_rx1/r_Rx_Data ), .D0(\uart_rx1/n13179 ), .C0(\uart_rx1/n13756 ), 
    .B0(\uart_rx1/r_SM_Main_1 ), .A0(\uart_rx1/r_SM_Main_2 ), 
    .F0(\uart_rx1/UartClk_2_enable_56 ), .F1(\uart_rx1/n13179 ));
  uart_rx1_SLICE_2482 \uart_rx1/SLICE_2482 ( .B1(\uart_rx1/r_Clock_Count_10 ), 
    .A1(\uart_rx1/r_Clock_Count_13 ), .D0(\uart_rx1/r_Clock_Count_11 ), 
    .C0(\uart_rx1/n13161 ), .B0(\uart_rx1/n13163 ), .A0(\uart_rx1/n13171 ), 
    .F0(\uart_rx1/n12870 ), .F1(\uart_rx1/n13161 ));
  uart_tx1_SLICE_2483 \uart_tx1/SLICE_2483 ( .D1(\uart_tx1/r_SM_Main_1 ), 
    .C1(\uart_tx1/r_SM_Main_2_N_2530_1 ), .B1(\uart_tx1/r_SM_Main_2 ), 
    .A1(\uart_tx1/r_SM_Main_0 ), .D0(\uart_tx1/r_SM_Main_2_N_2530_1 ), 
    .C0(\uart_tx1/r_SM_Main_1 ), .B0(\uart_tx1/r_SM_Main_0 ), 
    .A0(\uart_tx1/r_SM_Main_2 ), .F0(\uart_tx1/n8364 ), 
    .F1(\uart_tx1/UartClk_2_enable_5 ));
  SLICE_2484 SLICE_2484( .D1(o_Rx_Byte_c_3), .C1(o_Rx_Byte_c_2), .B1(n7319), 
    .A1(o_Rx_Byte_c_0), .D0(n7319), .C0(o_Rx_Byte_c_2), .B0(o_Rx_Byte_c_0), 
    .A0(o_Rx_Byte_c_3), .M0(\uart_rx1/r_Rx_Byte_1 ), 
    .CE(\uart_rx1/r_Rx_DV_N_2483 ), .CLK(\uart_tx1/UartClk[2] ), .F0(n22), 
    .Q0(n7319), .F1(n57));
  SLICE_2485 SLICE_2485( .D1(o_Rx_Byte_c_0), .C1(n7319), .B1(o_Rx_Byte_c_3), 
    .A1(o_Rx_Byte_c_2), .D0(o_Rx_Byte_c_0), .C0(n7319), .B0(o_Rx_Byte_c_3), 
    .A0(o_Rx_Byte_c_2), .F0(n13810), .F1(n13837));
  SLICE_2486 SLICE_2486( .D1(o_Rx_Byte_c_0), .C1(n7319), .B1(o_Rx_Byte_c_3), 
    .A1(o_Rx_Byte_c_2), .D0(o_Rx_Byte_c_0), .C0(n7319), .B0(o_Rx_Byte_c_3), 
    .A0(o_Rx_Byte_c_2), .F0(n13775), .F1(n13838));
  uart_rx1_SLICE_2487 \uart_rx1/SLICE_2487 ( .D1(\uart_rx1/r_Bit_Index_0 ), 
    .C1(\uart_rx1/r_Bit_Index_1 ), .B1(\uart_rx1/n13750 ), 
    .A1(\uart_rx1/r_Bit_Index_2 ), .D0(\uart_rx1/r_Bit_Index_0 ), 
    .C0(\uart_rx1/r_Bit_Index_1 ), .B0(\uart_rx1/n13750 ), 
    .A0(\uart_rx1/r_Bit_Index_2 ), .F0(\uart_rx1/UartClk_2_enable_52 ), 
    .F1(\uart_rx1/UartClk_2_enable_18 ));
  uart_tx1_SLICE_2488 \uart_tx1/SLICE_2488 ( .D1(\uart_tx1/r_SM_Main_1 ), 
    .C1(o_Rx_DV_c_0), .B1(\uart_tx1/r_SM_Main_2 ), .A1(\uart_tx1/r_SM_Main_0 ), 
    .C0(\uart_tx1/r_SM_Main_0 ), .B0(\uart_tx1/r_SM_Main_1 ), 
    .A0(\uart_tx1/r_SM_Main_2 ), .F0(\uart_tx1/n13013 ), 
    .F1(\uart_tx1/UartClk_2_enable_40 ));
  uart_rx1_SLICE_2489 \uart_rx1/SLICE_2489 ( .C1(\uart_rx1/r_Bit_Index_0 ), 
    .B1(\uart_rx1/r_Bit_Index_2 ), .A1(\uart_rx1/r_Bit_Index_1 ), 
    .D0(\uart_rx1/r_Bit_Index_0 ), .C0(\uart_rx1/r_Bit_Index_1 ), 
    .B0(\uart_rx1/n13750 ), .A0(\uart_rx1/r_Bit_Index_2 ), 
    .F0(\uart_rx1/UartClk_2_enable_13 ), .F1(\uart_rx1/n8940 ));
  uart_rx1_SLICE_2490 \uart_rx1/SLICE_2490 ( .D1(\uart_rx1/r_Clock_Count_15 ), 
    .C1(\uart_rx1/r_Clock_Count_7 ), .B1(\uart_rx1/r_Clock_Count_14 ), 
    .A1(\uart_rx1/r_Clock_Count_9 ), .B0(\uart_rx1/r_Clock_Count_8 ), 
    .A0(\uart_rx1/r_Clock_Count_12 ), .F0(\uart_rx1/n13163 ), 
    .F1(\uart_rx1/n13171 ));
  PWM1_SLICE_2491 \PWM1/SLICE_2491 ( .B1(\PWM1/counter_5 ), 
    .A1(\PWM1/counter_0 ), .B0(\PWM1/counter_3 ), .A0(\PWM1/counter_7 ), 
    .F0(\PWM1/n12 ), .F1(\PWM1/n11 ));
  uart_rx1_SLICE_2492 \uart_rx1/SLICE_2492 ( .D1(\uart_rx1/r_Clock_Count_2 ), 
    .C1(\uart_rx1/r_Clock_Count_3 ), .B1(\uart_rx1/r_Clock_Count_4 ), 
    .A1(\uart_rx1/r_Clock_Count_1 ), .B0(\uart_rx1/r_Clock_Count_4 ), 
    .A0(\uart_rx1/r_Clock_Count_2 ), .F0(\uart_rx1/n13187 ), 
    .F1(\uart_rx1/n8998 ));
  CIC1Sin_SLICE_2493 \CIC1Sin/SLICE_2493 ( .B1(\CIC1Sin/n14123 ), 
    .A1(\CIC1Sin/n31 ), .D0(\CIC1Sin/count_6 ), .C0(\CIC1Sin/count_4 ), 
    .B0(\CIC1Sin/count_0 ), .A0(\CIC1Sin/count_8 ), .F0(\CIC1Sin/n13252 ), 
    .F1(\CIC1Sin/n8367 ));
  uart_rx1_SLICE_2494 \uart_rx1/SLICE_2494 ( .D1(\uart_rx1/r_Bit_Index_2 ), 
    .C1(\uart_rx1/n13760 ), .B1(\uart_rx1/n13754 ), 
    .A1(\uart_rx1/r_SM_Main_0 ), .D0(\uart_rx1/r_SM_Main_1 ), 
    .C0(\uart_rx1/r_SM_Main_2_N_2417_2 ), .B0(\uart_rx1/n24 ), 
    .A0(\uart_rx1/r_SM_Main_2 ), .F0(\uart_rx1/n8362 ), 
    .F1(\uart_rx1/UartClk_2_enable_21 ));
  SLICE_2495 SLICE_2495( .B1(n2215), .A1(n9004), .D0(o_Rx_Byte_c_6), 
    .C0(o_Rx_Byte_c_7), .B0(o_Rx_DV_c_0), .A0(o_Rx_Byte_c_5), 
    .M0(\uart_rx1/r_Rx_Byte_7 ), .CE(\uart_rx1/r_Rx_DV_N_2483 ), 
    .CLK(\uart_tx1/UartClk[2] ), .F0(n12896), .Q0(o_Rx_Byte_c_7), .F1(n7));
  SinCos1_SLICE_2496 \SinCos1/SLICE_2496 ( .C1(\SinCos1/mx_ctrl_r ), 
    .B1(\SinCos1/rom_addr0_r_n_2 ), .A1(\SinCos1/rom_addr0_r_2 ), 
    .C0(\SinCos1/mx_ctrl_r ), .B0(\SinCos1/rom_addr0_r_n_3 ), 
    .A0(\SinCos1/rom_addr0_r_3 ), .F0(\SinCos1/rom_addr0_r_9 ), 
    .F1(\SinCos1/rom_addr0_r_8 ));
  SLICE_2497 SLICE_2497( .D1(n13757), .C1(n2215), .B1(n979), .A1(n2712), 
    .B0(n41), .A0(o_Rx_Byte_c_6), .F0(n9_adj_2616), .F1(n2253));
  PWM1_SLICE_2498 \PWM1/SLICE_2498 ( .D0(\PWM1/counter_8 ), 
    .C0(\PWM1/counter_6 ), .B0(\PWM1/counter_1 ), .A0(\PWM1/counter_4 ), 
    .F0(\PWM1/n17 ));
  SLICE_2499 SLICE_2499( .B0(n7319), .A0(n932), .F0(n2335));
  SLICE_2500 SLICE_2500( .D0(n13757), .C0(n2215), .B0(n998), .A0(n2731), 
    .F0(n2272));
  SLICE_2501 SLICE_2501( .D0(n13757), .C0(n2215), .B0(n997), .A0(n13797), 
    .F0(n2271));
  uart_tx1_SLICE_2502 \uart_tx1/SLICE_2502 ( .C0(o_Rx_Byte_c_3), 
    .B0(o_Rx_Byte_c_5), .A0(o_Rx_Byte_c_6), .F0(\uart_tx1/n13147 ));
  uart_tx1_SLICE_2503 \uart_tx1/SLICE_2503 ( .B0(\uart_tx1/r_Clock_Count_15 ), 
    .A0(\uart_tx1/r_Clock_Count_9 ), .F0(\uart_tx1/n7 ));
  SLICE_2504 SLICE_2504( .D0(n13757), .C0(n2215), .B0(n1000), .A0(n14097), 
    .F0(n2274));
  SLICE_2505 SLICE_2505( .B0(n7319), .A0(n893), .F0(n2296));
  SLICE_2506 SLICE_2506( .B0(n7319), .A0(n892), .F0(n2295));
  SLICE_2507 SLICE_2507( .C0(o_Rx_Byte_c_2), .B0(n894), .A0(n7319), .F0(n2559));
  SLICE_2508 SLICE_2508( .D0(n13757), .C0(n2215), .B0(n959), .A0(n2692), 
    .F0(n2233));
  SLICE_2509 SLICE_2509( .D0(n13757), .C0(n2215), .B0(n961), .A0(n2694), 
    .F0(n2235));
  SLICE_2510 SLICE_2510( .D0(n13757), .C0(n2215), .B0(n964), .A0(n13833), 
    .F0(n2238));
  SLICE_2511 SLICE_2511( .D0(n13757), .C0(n2215), .B0(n963), .A0(n2696), 
    .F0(n2237));
  SLICE_2512 SLICE_2512( .D0(o_Rx_Byte_c_0), .C0(o_Rx_Byte_c_4), 
    .B0(o_Rx_Byte_c_3), .A0(n7319), .F0(n4));
  SinCos1_SLICE_2513 \SinCos1/SLICE_2513 ( .C0(\SinCos1/mx_ctrl_r ), 
    .B0(\SinCos1/rom_addr0_r_n_5 ), .A0(\SinCos1/rom_addr0_r_5 ), 
    .M0(phase_accum_62), .CLK(osc_clk), .F0(\SinCos1/rom_addr0_r_11 ), 
    .Q0(\SinCos1/mx_ctrl_r ));
  SinCos1_muxb_39_SLICE_2514 \SinCos1/muxb_39/SLICE_2514 ( 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_12 ), 
    .A0(\SinCos1/rom_dout_12 ), .F0(\SinCos1/rom_dout_s_12 ));
  SLICE_2515 SLICE_2515( .D0(n13757), .C0(n2215), .B0(n965), .A0(n2698), 
    .F0(n2239));
  SLICE_2516 SLICE_2516( .D0(n13757), .C0(n2215), .B0(n968), .A0(n2701), 
    .F0(n2242));
  SLICE_2517 SLICE_2517( .D0(n7986), .C0(n2215), .B0(n943), .A0(n880), 
    .F0(n2217));
  SLICE_2518 SLICE_2518( .D0(n7986), .C0(n2215), .B0(n945), .A0(n882), 
    .F0(n2219));
  SLICE_2519 SLICE_2519( .D0(n13757), .C0(n2215), .B0(n948), .A0(n2681), 
    .F0(n2222));
  CIC1Sin_SLICE_2520 \CIC1Sin/SLICE_2520 ( .D0(\CIC1Sin/count_6 ), 
    .C0(\CIC1Sin/count_5 ), .B0(\CIC1Sin/count_1 ), .A0(\CIC1Sin/count_10 ), 
    .F0(\CIC1Sin/n19 ));
  CIC1Sin_SLICE_2521 \CIC1Sin/SLICE_2521 ( .B0(\CIC1Sin/d2_36 ), 
    .A0(\CIC1Sin/d1_36 ), .F0(\CIC1Sin/n4227 ));
  CIC1Sin_SLICE_2522 \CIC1Sin/SLICE_2522 ( .B0(\CIC1Sin/d4_36 ), 
    .A0(\CIC1Sin/d3_36 ), .F0(\CIC1Sin/n4531 ));
  CIC1Sin_SLICE_2523 \CIC1Sin/SLICE_2523 ( .B0(\CIC1Sin/count_12 ), 
    .A0(\CIC1Sin/count_13 ), .F0(\CIC1Sin/n7 ));
  CIC1Sin_SLICE_2524 \CIC1Sin/SLICE_2524 ( .B0(\CIC1Sin/d5_36 ), 
    .A0(\CIC1Sin/d4_36 ), .F0(\CIC1Sin/n4683 ));
  CIC1Sin_SLICE_2525 \CIC1Sin/SLICE_2525 ( .B0(\CIC1Sin/d1_36 ), 
    .A0(MixerOutSin_11), .F0(\CIC1Sin/n12116 ));
  CIC1Sin_SLICE_2526 \CIC1Sin/SLICE_2526 ( .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_70 ), .A0(\CIC1Sin/d10_69 ), .F0(\CIC1Sin/n70 ));
  CIC1Sin_SLICE_2527 \CIC1Sin/SLICE_2527 ( .B0(\CIC1Sin/d3_36 ), 
    .A0(\CIC1Sin/d2_36 ), .F0(\CIC1Sin/n4379 ));
  SLICE_2528 SLICE_2528( .D0(n7986), .C0(n2215), .B0(n947), .A0(n884), 
    .F0(n2221));
  SLICE_2529 SLICE_2529( .D0(n13757), .C0(n2215), .B0(n950), .A0(n2683), 
    .F0(n2224));
  SLICE_2530 SLICE_2530( .B0(n7319), .A0(n907), .F0(n2310));
  SLICE_2531 SLICE_2531( .D0(n13757), .C0(n2215), .B0(n969), .A0(n2702), 
    .F0(n2243));
  SLICE_2532 SLICE_2532( .D0(n13757), .C0(n2215), .B0(n949), .A0(n2682), 
    .F0(n2223));
  SLICE_2533 SLICE_2533( .D0(n13757), .C0(n2215), .B0(n971), .A0(n2704), 
    .F0(n2245));
  SLICE_2534 SLICE_2534( .D0(n13757), .C0(n2215), .B0(n952), .A0(n13776), 
    .F0(n2226));
  SLICE_2535 SLICE_2535( .D0(n13757), .C0(n2215), .B0(n974), .A0(n2707), 
    .F0(n2248));
  SLICE_2536 SLICE_2536( .D0(n13757), .C0(n2215), .B0(n973), .A0(n14103), 
    .F0(n2247));
  SLICE_2537 SLICE_2537( .D0(n13757), .C0(n2215), .B0(n976), .A0(n2709), 
    .F0(n2250));
  SLICE_2538 SLICE_2538( .D0(n13757), .C0(n2215), .B0(n975), .A0(n2708), 
    .F0(n2249));
  SLICE_2539 SLICE_2539( .D0(n13757), .C0(n2215), .B0(n978), .A0(n2711), 
    .F0(n2252));
  SLICE_2540 SLICE_2540( .D0(n13757), .C0(n2215), .B0(n977), .A0(n2710), 
    .F0(n2251));
  SLICE_2541 SLICE_2541( .D0(n13757), .C0(n2215), .B0(n980), .A0(n13824), 
    .F0(n2254));
  SLICE_2542 SLICE_2542( .D0(n13757), .C0(n2215), .B0(n981), .A0(n2714), 
    .F0(n2255));
  SLICE_2543 SLICE_2543( .D0(n13757), .C0(n2215), .B0(n984), .A0(n2717), 
    .F0(n2258));
  SLICE_2544 SLICE_2544( .D0(n13757), .C0(n2215), .B0(n983), .A0(n13818), 
    .F0(n2257));
  SLICE_2545 SLICE_2545( .D0(n13757), .C0(n2215), .B0(n985), .A0(n14100), 
    .F0(n2259));
  SLICE_2546 SLICE_2546( .D0(n13757), .C0(n2215), .B0(n988), .A0(n13815), 
    .F0(n2262));
  SLICE_2547 SLICE_2547( .D0(n13757), .C0(n2215), .B0(n987), .A0(n13812), 
    .F0(n2261));
  SLICE_2548 SLICE_2548( .B0(n7319), .A0(n927), .F0(n2330));
  SLICE_2549 SLICE_2549( .D0(n13757), .C0(n2215), .B0(n989), .A0(n2722), 
    .F0(n2263));
  SLICE_2550 SLICE_2550( .B0(o_Rx_Byte_c_4), .A0(n7319), .F0(n13765));
  SLICE_2551 SLICE_2551( .D0(n13757), .C0(n2215), .B0(n992), .A0(n2725), 
    .F0(n2266));
  SLICE_2552 SLICE_2552( .B0(n7319), .A0(n928), .F0(n2331));
  SLICE_2553 SLICE_2553( .D0(n13757), .C0(n2215), .B0(n994), .A0(n2727), 
    .F0(n2268));
  ncoGen_SLICE_2554 \ncoGen/SLICE_2554 ( .A0(phase_accum_63), .F0(sinGen_c));
  SLICE_2555 SLICE_2555( .C0(n7319), .B0(o_Rx_Byte_c_2), .A0(n930), .F0(n2595));
  SLICE_2556 SLICE_2556( .D0(n13757), .C0(n2215), .B0(n996), .A0(n13803), 
    .F0(n2270));
  CIC1Cos_SLICE_2557 \CIC1Cos/SLICE_2557 ( .B0(\CIC1Cos/d5_36 ), 
    .A0(\CIC1Cos/d4_36 ), .F0(\CIC1Cos/n5443 ));
  CIC1Cos_SLICE_2558 \CIC1Cos/SLICE_2558 ( .D0(\CIC1Cos/count_6 ), 
    .C0(\CIC1Cos/count_4 ), .B0(\CIC1Cos/count_2 ), .A0(\CIC1Cos/count_9 ), 
    .F0(\CIC1Cos/n13250 ));
  CIC1Cos_SLICE_2559 \CIC1Cos/SLICE_2559 ( .B0(\CIC1Cos/d1_36 ), 
    .A0(MixerOutCos_11), .F0(\CIC1Cos/n4835 ));
  CIC1Cos_SLICE_2560 \CIC1Cos/SLICE_2560 ( .B0(\CIC1Cos/count_12 ), 
    .A0(\CIC1Cos/count_13 ), .F0(\CIC1Cos/n7 ));
  CIC1Cos_SLICE_2561 \CIC1Cos/SLICE_2561 ( .B0(\CIC1Cos/d2_36 ), 
    .A0(\CIC1Cos/d1_36 ), .F0(\CIC1Cos/n4987 ));
  CIC1Cos_SLICE_2562 \CIC1Cos/SLICE_2562 ( .B0(\CIC1Cos/d4_36 ), 
    .A0(\CIC1Cos/d3_36 ), .F0(\CIC1Cos/n5291 ));
  CIC1Cos_SLICE_2563 \CIC1Cos/SLICE_2563 ( .D0(\CIC1Cos/count_0 ), 
    .C0(\CIC1Cos/count_4 ), .B0(\CIC1Cos/count_3 ), .A0(\CIC1Cos/count_9 ), 
    .F0(\CIC1Cos/n21 ));
  CIC1Cos_SLICE_2564 \CIC1Cos/SLICE_2564 ( .C0(CICGain_0), .B0(d10_70), 
    .A0(d10_69), .F0(n70));
  CIC1Cos_SLICE_2565 \CIC1Cos/SLICE_2565 ( .B0(\CIC1Cos/d3_36 ), 
    .A0(\CIC1Cos/d2_36 ), .F0(\CIC1Cos/n5139 ));
  uart_rx1_SLICE_2566 \uart_rx1/SLICE_2566 ( .C0(\uart_rx1/r_SM_Main_0 ), 
    .B0(\uart_rx1/r_SM_Main_2 ), .A0(\uart_rx1/r_SM_Main_1 ), 
    .F0(\uart_rx1/n12904 ));
  uart_rx1_SLICE_2567 \uart_rx1/SLICE_2567 ( .B0(\uart_rx1/r_Bit_Index_1 ), 
    .A0(\uart_rx1/r_Bit_Index_0 ), .F0(\uart_rx1/n10 ));
  AMDemodulator1_SLICE_2568 \AMDemodulator1/SLICE_2568 ( 
    .A0(\AMDemodulator1/d_out_d_11_N_1873_17 ), 
    .F0(\AMDemodulator1/d_out_d_11__N_1872 ));
  AMDemodulator1_SLICE_2569 \AMDemodulator1/SLICE_2569 ( 
    .A0(\AMDemodulator1/d_out_d_11_N_1871_17 ), 
    .F0(\AMDemodulator1/d_out_d_11__N_1870 ));
  AMDemodulator1_SLICE_2570 \AMDemodulator1/SLICE_2570 ( 
    .B0(\AMDemodulator1/ISquare_22 ), .A0(\AMDemodulator1/ISquare_23 ), 
    .F0(\AMDemodulator1/n12271 ));
  AMDemodulator1_SLICE_2571 \AMDemodulator1/SLICE_2571 ( 
    .A0(\AMDemodulator1/ISquare_31 ), .F0(\AMDemodulator1/n209 ));
  AMDemodulator1_Multiplier2_SLICE_2572 
    \AMDemodulator1/Multiplier2/SLICE_2572 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2573 
    \AMDemodulator1/Multiplier2/SLICE_2573 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_2 ));
  AMDemodulator1_Multiplier2_SLICE_2574 
    \AMDemodulator1/Multiplier2/SLICE_2574 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2575 
    \AMDemodulator1/Multiplier2/SLICE_2575 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2576 
    \AMDemodulator1/Multiplier2/SLICE_2576 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_6 ));
  AMDemodulator1_Multiplier2_SLICE_2577 
    \AMDemodulator1/Multiplier2/SLICE_2577 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2578 
    \AMDemodulator1/Multiplier2/SLICE_2578 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2579 
    \AMDemodulator1/Multiplier2/SLICE_2579 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_10 ));
  AMDemodulator1_Multiplier2_SLICE_2580 
    \AMDemodulator1/Multiplier2/SLICE_2580 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2581 
    \AMDemodulator1/Multiplier2/SLICE_2581 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2582 
    \AMDemodulator1/Multiplier2/SLICE_2582 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2583 
    \AMDemodulator1/Multiplier2/SLICE_2583 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2584 
    \AMDemodulator1/Multiplier2/SLICE_2584 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2585 
    \AMDemodulator1/Multiplier2/SLICE_2585 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2586 
    \AMDemodulator1/Multiplier2/SLICE_2586 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2587 
    \AMDemodulator1/Multiplier2/SLICE_2587 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2588 
    \AMDemodulator1/Multiplier2/SLICE_2588 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2589 
    \AMDemodulator1/Multiplier2/SLICE_2589 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2590 
    \AMDemodulator1/Multiplier2/SLICE_2590 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2591 
    \AMDemodulator1/Multiplier2/SLICE_2591 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2592 
    \AMDemodulator1/Multiplier2/SLICE_2592 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2593 
    \AMDemodulator1/Multiplier2/SLICE_2593 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2594 
    \AMDemodulator1/Multiplier2/SLICE_2594 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2595 
    \AMDemodulator1/Multiplier2/SLICE_2595 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .M0(\AMDemodulator1/MultDataC_11 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n2 ), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_11 ));
  AMDemodulator1_Multiplier2_SLICE_2596 
    \AMDemodulator1/Multiplier2/SLICE_2596 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2597 
    \AMDemodulator1/Multiplier1/SLICE_2597 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2598 
    \AMDemodulator1/Multiplier1/SLICE_2598 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_2 ));
  AMDemodulator1_Multiplier1_SLICE_2599 
    \AMDemodulator1/Multiplier1/SLICE_2599 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2600 
    \AMDemodulator1/Multiplier1/SLICE_2600 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2601 
    \AMDemodulator1/Multiplier1/SLICE_2601 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_6 ));
  AMDemodulator1_Multiplier1_SLICE_2602 
    \AMDemodulator1/Multiplier1/SLICE_2602 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2603 
    \AMDemodulator1/Multiplier1/SLICE_2603 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2604 
    \AMDemodulator1/Multiplier1/SLICE_2604 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_10 ));
  AMDemodulator1_Multiplier1_SLICE_2605 
    \AMDemodulator1/Multiplier1/SLICE_2605 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2606 
    \AMDemodulator1/Multiplier1/SLICE_2606 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2607 
    \AMDemodulator1/Multiplier1/SLICE_2607 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2608 
    \AMDemodulator1/Multiplier1/SLICE_2608 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2609 
    \AMDemodulator1/Multiplier1/SLICE_2609 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2610 
    \AMDemodulator1/Multiplier1/SLICE_2610 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2611 
    \AMDemodulator1/Multiplier1/SLICE_2611 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2612 
    \AMDemodulator1/Multiplier1/SLICE_2612 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2613 
    \AMDemodulator1/Multiplier1/SLICE_2613 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2614 
    \AMDemodulator1/Multiplier1/SLICE_2614 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2615 
    \AMDemodulator1/Multiplier1/SLICE_2615 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2616 
    \AMDemodulator1/Multiplier1/SLICE_2616 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2617 
    \AMDemodulator1/Multiplier1/SLICE_2617 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2618 
    \AMDemodulator1/Multiplier1/SLICE_2618 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2619 
    \AMDemodulator1/Multiplier1/SLICE_2619 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2620 
    \AMDemodulator1/Multiplier1/SLICE_2620 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .M0(\AMDemodulator1/MultDataB_11 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n2 ), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_11 ));
  AMDemodulator1_Multiplier1_SLICE_2621 
    \AMDemodulator1/Multiplier1/SLICE_2621 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n1 ));
  SLICE_2622 SLICE_2622( .F0(VCC_net));
  SLICE_2623 SLICE_2623( .F0(GND_net));
  o_Rx_Byte_6_ \o_Rx_Byte[6]_I ( .PADDO(o_Rx_Byte_c_6), 
    .oRxByte6(o_Rx_Byte[6]));
  o_Rx_Byte_5_ \o_Rx_Byte[5]_I ( .PADDO(o_Rx_Byte_c_5), 
    .oRxByte5(o_Rx_Byte[5]));
  o_Rx_Byte_7_ \o_Rx_Byte[7]_I ( .PADDO(o_Rx_Byte_c_7), 
    .oRxByte7(o_Rx_Byte[7]));
  o_Rx_DV o_Rx_DV_I( .PADDO(o_Rx_DV_c_0), .o_Rx_DV(o_Rx_DV));
  o_Tx_Serial o_Tx_Serial_I( .PADDO(o_Tx_Serial_c), .o_Tx_Serial(o_Tx_Serial));
  o_Rx_Byte_4_ \o_Rx_Byte[4]_I ( .PADDO(o_Rx_Byte_c_4), 
    .oRxByte4(o_Rx_Byte[4]));
  o_Rx_Byte_3_ \o_Rx_Byte[3]_I ( .PADDO(o_Rx_Byte_c_3), 
    .oRxByte3(o_Rx_Byte[3]));
  o_Rx_Byte_2_ \o_Rx_Byte[2]_I ( .PADDO(o_Rx_Byte_c_2), 
    .oRxByte2(o_Rx_Byte[2]));
  o_Rx_Byte_1_ \o_Rx_Byte[1]_I ( .PADDO(n7319), .oRxByte1(o_Rx_Byte[1]));
  o_Rx_Byte_0_ \o_Rx_Byte[0]_I ( .PADDO(o_Rx_Byte_c_0), 
    .oRxByte0(o_Rx_Byte[0]));
  MYLED_7_ \MYLED[7]_I ( .PADDO(GND_net), .MYLED7(MYLED[7]));
  MYLED_6_ \MYLED[6]_I ( .PADDO(n7319), .MYLED6(MYLED[6]));
  MYLED_5_ \MYLED[5]_I ( .PADDO(MYLED_c_5), .MYLED5(MYLED[5]));
  MYLED_4_ \MYLED[4]_I ( .PADDO(MYLED_c_4), .MYLED4(MYLED[4]));
  MYLED_3_ \MYLED[3]_I ( .PADDO(MYLED_c_3), .MYLED3(MYLED[3]));
  MYLED_2_ \MYLED[2]_I ( .PADDO(MYLED_c_2), .MYLED2(MYLED[2]));
  MYLED_1_ \MYLED[1]_I ( .PADDO(MYLED_c_1), .MYLED1(MYLED[1]));
  MYLED_0_ \MYLED[0]_I ( .PADDO(MYLED_c_0), .MYLED0(MYLED[0]));
  XOut XOut_I( .PADDO(GND_net), .XOut(XOut));
  DiffOut DiffOut_I( .PADDO(DiffOut_c), .DiffOut(DiffOut));
  PWMOut PWMOut_I( .PADDO(PWMOut_c), .PWMOut(PWMOut));
  sinGen sinGen_I( .PADDO(sinGen_c), .sinGen(sinGen));
  sin_out sin_out_I( .PADDO(GND_net), .sin_out(sin_out));
  CIC_out_clkSin CIC_out_clkSin_I( .PADDO(GND_net), 
    .CIC_out_clkSin(CIC_out_clkSin));
  i_Rx_Serial i_Rx_Serial_I( .PADDI(i_Rx_Serial_c), .i_Rx_Serial(i_Rx_Serial));
  XIn XIn_I( .PADDI(XIn_c), .XIn(XIn));
  RFIn RFIn_I( .PADDI(RFIn_c), .RFIn(RFIn));
  PLL1_PLLInst_0 \PLL1/PLLInst_0 ( .CLKI(XIn_c), .CLKFB(osc_clk), 
    .CLKOP(osc_clk));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCC_net));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module Mixer1_SLICE_0 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu2 \Mixer1/unary_minus_7_add_3_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module Mixer1_SLICE_1 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_7_add_3_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module Mixer1_SLICE_2 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_7_add_3_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_3 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_7_add_3_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_4 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_7_add_3_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_5 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_7_add_3_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_6 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20002 \Mixer1/unary_minus_7_add_3_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module Mixer1_SLICE_7 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu2 \Mixer1/unary_minus_6_add_3_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_8 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_6_add_3_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_9 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_6_add_3_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_10 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_6_add_3_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_11 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_6_add_3_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_12 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \Mixer1/unary_minus_6_add_3_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_13 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20002 \Mixer1/unary_minus_6_add_3_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_14 ( input B0, A0, DI1, CLK, FCI, output F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \PWM1/PWMOut_15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \PWM1/sub_718_add_2_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_15 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_718_add_2_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_16 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_718_add_2_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_17 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_718_add_2_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_18 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_718_add_2_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_19 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \PWM1/sub_718_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_20 ( input A0, DI0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \PWM1/counter_929__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20006 \PWM1/counter_929_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_21 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_929__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_929__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \PWM1/counter_929_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_22 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_929__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_929__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \PWM1/counter_929_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_23 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_929__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_929__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \PWM1/counter_929_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_24 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_929__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_929__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \PWM1/counter_929_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_25 ( input A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \PWM1/counter_929__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20008 \PWM1/counter_929_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module uart_tx1_SLICE_26 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CE_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  ccu20006 \uart_tx1/r_Clock_Count_935_add_4_17 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0009 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module uart_tx1_SLICE_27 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_tx1/r_Clock_Count_935_add_4_15 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_28 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_tx1/r_Clock_Count_935_add_4_13 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_29 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_tx1/r_Clock_Count_935_add_4_11 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_30 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_tx1/r_Clock_Count_935_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_31 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_tx1/r_Clock_Count_935_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_32 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_tx1/r_Clock_Count_935_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_33 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_tx1/r_Clock_Count_935_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_34 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/r_Clock_Count_935__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  ccu20008 \uart_tx1/r_Clock_Count_935_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_35 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \uart_tx1/UartClk_933_965__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/UartClk_933_965__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \uart_tx1/UartClk_933_965_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_36 ( input A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \uart_tx1/UartClk_933_965__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20008 \uart_tx1/UartClk_933_965_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_37 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i63( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i62( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_63( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h569a;
  defparam inst1.INIT1 = 16'h569a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_38 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i61( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i60( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_61( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_39 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i59( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i58( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_59( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_40 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i57( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i56( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_57( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_41 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i55( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i54( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_55( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_42 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i53( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i52( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_53( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_43 ( input D1, C1, B1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i51( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i50( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 add_702_51( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hb874;
  defparam inst1.INIT1 = 16'h569a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_44 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i49( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i48( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_702_49( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hb874;
  defparam inst1.INIT1 = 16'hb874;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_45 ( input D1, C1, B1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i47( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i46( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 add_702_47( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_46 ( input D1, C1, B1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i45( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i44( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_45( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_47 ( input A1, M1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, A1_NOTIN, M1_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \SinCos1/neg_rom_addr0_r_n_0 ( .A0(GNDI), .A1(A1_NOTIN), .B0(GNDI), 
    .B1(VCCI), .CI(), .S0(), .S1(F1), .CO1(FCO));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module alu2_mult ( input A0, A1, B0, B1, CI, output S0, S1, CO1 );

  FADD2B INST01( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(CI), .COUT(CO1), 
    .S0(S0), .S1(S1));
endmodule

module SinCos1_SLICE_48 ( input A1, A0, M1, CLK, FCI, output F0, F1, Q1, FCO );
  wire   VCCI, GNDI, A0_NOTIN, A1_NOTIN, M1_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \SinCos1/neg_rom_addr0_r_n_1 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_49 ( input A1, A0, M1, CLK, FCI, output F0, F1, Q1, FCO );
  wire   VCCI, GNDI, A0_NOTIN, A1_NOTIN, M1_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \SinCos1/neg_rom_addr0_r_n_2 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_50 ( input A0, FCI, output F0 );
  wire   A0_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_addr0_r_n_3 ( .A0(A0_NOTIN), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_51 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_1 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_52 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_2 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_53 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_3 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_54 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_4 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_55 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_5 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_56 ( input A1, A0, FCI, output F0, F1 );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_6 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_57 ( input A1, output FCO );
  wire   GNDI, A1_NOTIN, VCCI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_0 ( .A0(GNDI), .A1(A1_NOTIN), .B0(GNDI), 
    .B1(VCCI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_58 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_1 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_59 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_2 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_60 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_3 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_61 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_4 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_62 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_5 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_63 ( input A1, A0, FCI, output F0, F1 );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_6 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_64 ( input A1, output FCO );
  wire   GNDI, A1_NOTIN, VCCI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_0 ( .A0(GNDI), .A1(A1_NOTIN), .B0(GNDI), 
    .B1(VCCI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_65 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i43( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i42( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 add_702_43( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h569a;
  defparam inst1.INIT1 = 16'hb874;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_66 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i41( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i40( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_702_41( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_67 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i39( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i38( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 add_702_39( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h569a;
  defparam inst1.INIT1 = 16'h74b8;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_68 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i37( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i36( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_702_37( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h74b8;
  defparam inst1.INIT1 = 16'h569a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_69 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i35( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i34( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 add_702_35( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_70 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i33( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i32( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_702_33( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i31( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i30( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 add_702_31( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i29( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i28( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 add_702_29( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_73 ( input D1, C1, B1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i27( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i26( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_702_27( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i25( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i24( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20016 add_702_25( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h74b8;
  defparam inst1.INIT1 = 16'hb874;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_75 ( input D1, C1, B1, A1, D0, C0, B0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i23( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i22( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 add_702_23( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_76 ( input D1, C1, B1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i21( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i20( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 add_702_21( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i19( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i18( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 add_702_19( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_78 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i17( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i16( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_702_17( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i15( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i14( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_15( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_80 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i13( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 add_702_13( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_81 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_11( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_82 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i9( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i8( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_702_9( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 add_702_7( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_84 ( input D1, C1, B1, A1, D0, C0, B0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 add_702_5( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_85 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20017 add_702_3( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hb874;
  defparam inst1.INIT1 = 16'h74b8;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_86 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20018 add_702_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'hffff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_87 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20019 sub_37_add_2_63( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_88 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_37_add_2_61( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_89 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_37_add_2_59( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_90 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_37_add_2_57( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_91 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_37_add_2_55( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_92 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_37_add_2_53( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_93 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_37_add_2_51( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_94 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_49( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20021 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_95 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_37_add_2_47( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20022 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_96 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_37_add_2_45( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_97 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_43( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_98 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_41( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_99 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_37_add_2_39( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_100 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_37( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_101 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 sub_37_add_2_35( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_102 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_103 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_104 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_37_add_2_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_105 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_37_add_2_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_106 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 sub_37_add_2_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_107 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_37_add_2_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_108 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_37_add_2_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_109 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_110 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_111 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_112 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_113 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_37_add_2_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_114 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 sub_37_add_2_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_115 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 sub_37_add_2_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_116 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_37_add_2_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_117 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_37_add_2_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_118 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20024 sub_37_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20024 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_119 ( input A1, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20020 sub_38_add_2_61( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_120 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_59( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_121 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_57( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_122 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_55( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_123 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_53( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_124 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_51( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_125 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_49( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_126 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_47( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_127 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_45( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_128 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 sub_38_add_2_43( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_129 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 sub_38_add_2_41( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_130 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_39( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_131 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_38_add_2_37( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_132 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_38_add_2_35( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_133 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_38_add_2_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_134 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_135 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_38_add_2_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_136 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_38_add_2_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_137 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 sub_38_add_2_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_138 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 sub_38_add_2_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_139 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_38_add_2_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_140 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_141 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_38_add_2_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_142 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_143 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_38_add_2_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_144 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_38_add_2_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_145 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_38_add_2_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_146 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 sub_38_add_2_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_147 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 sub_38_add_2_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_148 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 sub_38_add_2_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_149 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20024 sub_38_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_150 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20025 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h74b8;
  defparam inst1.INIT1 = 16'h74b8;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_151 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_152 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_153 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_154 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_155 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_156 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_157 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_158 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_159 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_160 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_161 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_163 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Sin/add_989_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_164 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20026 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_165 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_166 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_168 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_169 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_170 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_171 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_172 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_173 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_174 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_175 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_176 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_177 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_180 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Sin/add_1034_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_181 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1038_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_182 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_183 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_184 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_185 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_186 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_187 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_188 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_189 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_190 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_191 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_192 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_193 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_194 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_195 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_196 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_197 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_198 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_199 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_982_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20027 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_200 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_201 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_202 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_203 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1033_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_204 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_205 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_206 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_207 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_208 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_209 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_210 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_211 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_212 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_213 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_214 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_215 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_216 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_217 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_218 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_219 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_220 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1033_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_221 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1033_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20028 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_222 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_223 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_224 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_225 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_226 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_227 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_228 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_229 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_230 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_231 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_232 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_233 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_234 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_993_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_235 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20029 \CIC1Sin/add_993_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20029 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_236 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_237 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_238 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_239 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_240 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_241 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_242 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_243 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_244 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_245 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_246 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_247 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_248 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_249 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_250 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_251 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1058_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_252 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_253 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_254 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_255 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_256 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_257 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_258 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_259 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_260 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_261 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_262 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_263 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_264 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_265 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_266 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_267 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_268 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1058_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_269 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1058_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_270 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1059_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_271 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_272 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_273 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_274 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_275 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_276 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_277 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_278 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_279 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_280 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_281 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_282 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_283 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_284 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_285 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_286 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_287 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1059_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_288 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Sin/add_1059_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_289 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1063_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_290 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_291 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_292 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_293 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_294 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_295 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_296 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_297 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_298 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_299 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_300 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_301 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_302 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_303 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_304 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_305 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_306 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_307 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_308 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_309 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_310 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_311 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_312 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_313 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_314 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_315 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_316 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_317 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_318 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_319 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_994_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_320 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Sin/add_994_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_321 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_322 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_323 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_324 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_325 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_326 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_982_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_327 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_328 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d1_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Sin/add_982_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_329 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1038_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_330 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1038_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_331 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_332 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_333 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_334 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_335 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_336 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_337 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_338 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_339 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_340 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_341 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_342 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_343 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_344 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_345 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_346 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_347 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_348 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_349 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_350 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1063_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_351 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1063_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_352 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_353 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_354 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_355 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_356 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_357 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_358 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_359 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_360 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_361 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_362 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_363 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_364 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_365 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_366 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_367 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_368 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_369 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1064_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_370 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Sin/add_1064_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_371 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1078_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_372 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_373 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_374 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_375 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_376 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_377 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_378 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_379 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_380 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_381 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_382 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_383 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_384 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_385 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_386 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_387 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_388 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1078_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_389 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1078_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_390 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_391 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_392 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_393 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_394 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_395 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_396 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_397 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_398 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_399 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_400 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_401 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_402 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_403 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_404 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_405 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_406 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_407 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1079_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_408 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Sin/add_1079_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_409 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20030 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hd1e2;
  defparam inst1.INIT1 = 16'hd1e2;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_410 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_411 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_412 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_413 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_414 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_415 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_416 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_417 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_418 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_998_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_419 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20029 \CIC1Sin/add_998_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_420 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_421 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_422 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_423 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_424 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_425 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_426 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_427 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_428 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_429 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_430 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_431 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_432 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_433 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_434 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_435 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_436 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_437 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_438 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_439 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_440 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1039_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_441 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Sin/add_1039_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_442 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_443 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_444 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_445 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_446 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_447 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_448 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_449 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_450 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_451 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_452 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_453 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CIC1Sin/add_983_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_454 ( input A1, output FCO );
  wire   GNDI;

  ccu20031 \CIC1Sin/add_983_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20031 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_455 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1077_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_456 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_457 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_458 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_459 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_460 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_461 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_462 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_463 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Sin/add_1077_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_464 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_465 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_466 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_467 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_468 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_469 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_470 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_471 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_472 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1077_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_473 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1077_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_474 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1062_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_475 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_476 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_477 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_478 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_479 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_480 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_481 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_482 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_483 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_484 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_485 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_486 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_487 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_488 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_489 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_490 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_491 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1062_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_492 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1062_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_493 ( input B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1057_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_494 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_495 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_496 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_497 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_498 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_499 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_500 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_501 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_502 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_503 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_504 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_505 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_506 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_507 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_508 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_509 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_510 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1057_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_511 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Sin/add_1057_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_512 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1037_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_513 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_514 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_515 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_516 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_517 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_518 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_519 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_520 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_521 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_522 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_523 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_524 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_525 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_526 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_527 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_528 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_529 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1037_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_530 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1037_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_531 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1032_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_532 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_533 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_534 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_535 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Sin/add_1032_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_536 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_537 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_538 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_539 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_540 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_541 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_542 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_543 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_544 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_545 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_546 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_547 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_548 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1032_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_549 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1032_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_550 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0009 \CIC1Sin/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20032 \CIC1Sin/add_10_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20032 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_551 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Sin/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Sin/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Sin/add_10_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_552 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0009 \CIC1Sin/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20021 \CIC1Sin/add_10_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_553 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Sin/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Sin/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Sin/add_10_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_554 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Sin/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Sin/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Sin/add_10_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_555 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Sin/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Sin/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Sin/add_10_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_556 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Sin/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Sin/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Sin/add_10_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_557 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Sin/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Sin/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Sin/add_10_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_558 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_10_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_559 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_1002_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_560 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_561 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_562 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_563 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_564 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_565 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_566 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_567 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_568 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_569 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_570 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_571 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_572 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_573 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_574 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_575 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_576 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_1002_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_577 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d5_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Sin/add_1002_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_578 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_997_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_579 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_580 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_581 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_582 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_583 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_584 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_585 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_586 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_587 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_588 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_589 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_590 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_591 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_592 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_593 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_594 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_595 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_997_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_596 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d4_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Sin/add_997_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_597 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_992_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_598 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_599 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_600 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_601 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_602 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_603 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_604 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_605 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_606 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_607 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_608 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_609 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_610 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_611 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_612 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_613 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_614 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_992_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_615 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d3_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Sin/add_992_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_616 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Sin/add_987_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_617 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_618 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_619 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_620 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_621 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_622 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_623 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_624 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_625 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_626 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_627 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_628 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_629 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_630 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_631 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_632 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_633 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Sin/add_987_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_634 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d2_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Sin/add_987_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_635 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_636 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_637 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_638 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_639 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_640 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_641 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_642 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_999_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_643 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Sin/add_999_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_644 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_645 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_646 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_647 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_648 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_649 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_650 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_651 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_652 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_653 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_654 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_655 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_656 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_657 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_658 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_659 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_660 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_661 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_662 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_663 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_664 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_665 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_666 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_667 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_668 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_669 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_670 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_671 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_672 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_673 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_984_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_674 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20033 \CIC1Sin/add_984_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20033 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_675 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_676 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_677 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_678 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_679 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_680 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_681 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_682 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_683 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_684 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_685 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_686 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_687 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_688 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_689 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_690 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_691 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_692 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_693 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_694 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_988_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_695 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20029 \CIC1Sin/add_988_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_696 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_697 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1034_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_698 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_699 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1003_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_700 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_701 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20029 \CIC1Sin/add_1003_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_702 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_703 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_704 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_705 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_706 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_707 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_708 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_709 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_710 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_711 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_712 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_713 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_714 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_715 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_716 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_717 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_718 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_719 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_720 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_1004_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_721 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Sin/add_1004_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_722 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_723 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Sin/add_989_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_724 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_64 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_725 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_62 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_726 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_60 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_727 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_58 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_728 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_56 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_729 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_54 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_730 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_52 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_731 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_50 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_732 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_48 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_733 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_46 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_734 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_44 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_735 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_42 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_736 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_40 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_737 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_38 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_738 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_36 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_739 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_34 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_740 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_32 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_741 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_30 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_742 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_28 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_743 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_26 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_744 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_24 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_745 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_22 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_746 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_20 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_747 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_18 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_748 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_16 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_749 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_14 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_750 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_12 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_751 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_752 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_753 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_754 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \ncoGen/phase_accum_63__I_0_12_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_755 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \ncoGen/phase_accum_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \ncoGen/phase_accum_63__I_0_12_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_756 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_757 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_758 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_759 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_760 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_761 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_762 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_763 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20029 \CIC1Cos/add_1013_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_764 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_765 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_766 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_767 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_768 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_769 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_770 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_771 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_772 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_773 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_774 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_775 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_776 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_777 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_778 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_779 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_780 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_781 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_782 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_783 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_784 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Cos/add_1019_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_785 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_786 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_787 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_788 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_789 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_790 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_791 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_792 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_793 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_794 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_795 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_796 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_797 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_798 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_799 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_800 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_801 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_802 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_803 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_804 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_805 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1023_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_806 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_807 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_808 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_809 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20029 \CIC1Cos/add_1023_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_810 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_811 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Cos/add_1024_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_812 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_813 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_814 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_815 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_816 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_817 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_818 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_819 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_820 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_821 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_822 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_823 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_824 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_825 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_826 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_827 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1024_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_828 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_829 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_830 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_831 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_832 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_833 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_834 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_835 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1053_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_836 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_837 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_838 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_839 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_840 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_841 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_842 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_843 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_844 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_845 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_846 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_847 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_848 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_849 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_850 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_851 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_852 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_853 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_854 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_855 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1014_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_856 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_857 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_858 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_859 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_860 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_861 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_862 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_863 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_864 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1028_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_865 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20029 \CIC1Cos/add_1028_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_866 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_867 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_868 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_869 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_870 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_871 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_872 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_873 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_874 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_875 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_876 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_877 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_878 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_879 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_880 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_881 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_882 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_883 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1029_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_884 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Cos/add_1029_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_885 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_886 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_887 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_888 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_889 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_890 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_891 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1054_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_892 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Cos/add_1054_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_893 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Cos/add_1014_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_894 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1068_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_895 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_896 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_897 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_898 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_899 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_900 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_901 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_902 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_903 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_904 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_905 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_906 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_907 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_908 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_909 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_910 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_911 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1068_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_912 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1068_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_913 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_914 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_915 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_916 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_917 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_918 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_919 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_920 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_921 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_922 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_923 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_924 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_925 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_926 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_927 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_928 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_929 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_930 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1069_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_931 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Cos/add_1069_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_932 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1073_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_933 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_934 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_935 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_936 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_937 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_938 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_939 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_940 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_941 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_942 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_943 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_944 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_945 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_946 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_947 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_948 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_949 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1073_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_950 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1073_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_951 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1074_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_952 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_953 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_954 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_955 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_956 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_957 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_958 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_959 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_960 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_961 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_962 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_963 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_964 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_965 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_966 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_967 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_968 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1074_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_969 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Cos/add_1074_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_970 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_971 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1043_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_972 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_973 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_974 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_975 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_976 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_977 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_978 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_979 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_980 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_981 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_982 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_983 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_984 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_985 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_986 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_987 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_988 ( input B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1072_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_989 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_990 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_991 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_992 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_993 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_994 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_995 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_996 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_997 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_998 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_999 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1000 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1001 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1002 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1003 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1004 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1005 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1072_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1006 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Cos/add_1072_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1007 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1067_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1008 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1009 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1010 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1011 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1012 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1013 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1014 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1015 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1016 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1017 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1018 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1019 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1020 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1021 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1022 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1023 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1024 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1067_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1025 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1067_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1026 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1052_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1027 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1028 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1029 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1030 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1031 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1032 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1033 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1034 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Cos/add_1052_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1035 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1036 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1037 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1038 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1039 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1040 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1041 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1042 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1043 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1052_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1044 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1052_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1045 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1047_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1046 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1047 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1048 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1049 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Cos/add_1047_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1050 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1051 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1052 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1053 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1054 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1055 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1056 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1057 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1058 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1059 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1060 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1061 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1062 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1047_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1063 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1047_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1064 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1042_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1065 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1066 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1067 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1068 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1069 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1070 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1071 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1072 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1073 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1074 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1075 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1076 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1077 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1078 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1079 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1080 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1081 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1042_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1082 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1042_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1083 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0009 \CIC1Cos/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20032 \CIC1Cos/add_10_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1084 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Cos/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Cos/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Cos/add_10_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1085 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0009 \CIC1Cos/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20021 \CIC1Cos/add_10_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1086 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Cos/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Cos/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Cos/add_10_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1087 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Cos/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Cos/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Cos/add_10_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1088 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Cos/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Cos/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Cos/add_10_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1089 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Cos/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Cos/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Cos/add_10_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1090 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \CIC1Cos/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \CIC1Cos/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20021 \CIC1Cos/add_10_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1091 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_10_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1092 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1027_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1093 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1094 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1095 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1096 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1097 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1098 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1099 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1100 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1101 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1102 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1103 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1104 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1105 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1106 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1107 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1108 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1109 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1027_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1110 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d5_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Cos/add_1027_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1111 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1022_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1112 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1113 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1114 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1115 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1116 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1117 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1118 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1119 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1120 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1121 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1122 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1123 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1124 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1125 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1126 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1127 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1128 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1022_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1129 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d4_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Cos/add_1022_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1130 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1017_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1131 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1132 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1133 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1134 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1135 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1136 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1137 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1138 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1139 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1140 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1141 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1142 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1143 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1144 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1145 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1146 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1147 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1017_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1148 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d3_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Cos/add_1017_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1149 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1012_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1150 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1151 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1152 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1153 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1154 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1155 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1156 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1157 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1158 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1159 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1160 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1161 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1162 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1163 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1164 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1165 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1166 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1012_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1167 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d2_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Cos/add_1012_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1168 ( input FCI, output F0 );
  wire   GNDI;

  ccu20027 \CIC1Cos/add_1007_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1169 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1170 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1171 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1172 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1173 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1174 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1175 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1176 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1177 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1178 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1179 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1180 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1181 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1182 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1183 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1184 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1185 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \CIC1Cos/add_1007_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1186 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d1_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \CIC1Cos/add_1007_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1187 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1043_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1188 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1043_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1189 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1190 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1191 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1192 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1193 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1194 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1195 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1196 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1197 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1198 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1199 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1200 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1201 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1202 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1203 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1204 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1205 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1206 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1044_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1207 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Cos/add_1044_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1208 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1048_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1209 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1210 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1211 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1212 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1213 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1214 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1215 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1216 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1217 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1218 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1219 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1220 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1221 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1222 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1223 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1224 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1225 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1048_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1226 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1048_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1227 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1228 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1229 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1230 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1231 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1232 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1233 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1234 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1235 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1236 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1237 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1238 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1239 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1240 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1241 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1242 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1243 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1244 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1049_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1245 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Cos/add_1049_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1246 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1053_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1247 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1248 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1249 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1250 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1251 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1252 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1253 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1254 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1255 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1256 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1257 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1258 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1053_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1259 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1260 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1261 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1262 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1263 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1264 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20029 \CIC1Cos/add_1018_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1265 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1266 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1267 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1268 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1269 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1270 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1271 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1272 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1273 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1274 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1275 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1276 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1277 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1278 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1279 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1280 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1281 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1282 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1283 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1284 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1285 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1286 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1287 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1288 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1289 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1290 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1291 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1292 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1293 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1294 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1295 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1296 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1297 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1298 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1299 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1300 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1301 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1008_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1302 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1303 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20029 \CIC1Cos/add_1008_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1304 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1305 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1306 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1307 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1308 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1309 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1310 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1311 ( input A1, output FCO );
  wire   GNDI;

  ccu20008 \CIC1Cos/add_1009_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1312 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1313 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1314 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1315 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1316 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1317 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1318 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1319 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1320 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1321 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1322 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1323 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1324 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1325 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1013_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1326 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1009_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1327 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1018_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1328 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1329 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \CIC1Cos/add_1019_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_1330 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20006 \uart_rx1/r_Clock_Count_932_add_4_17 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_1331 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_rx1/r_Clock_Count_932_add_4_15 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_1332 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_rx1/r_Clock_Count_932_add_4_13 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_1333 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_rx1/r_Clock_Count_932_add_4_11 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_1334 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_rx1/r_Clock_Count_932_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_1335 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_rx1/r_Clock_Count_932_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_1336 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_rx1/r_Clock_Count_932_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_1337 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20007 \uart_rx1/r_Clock_Count_932_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_1338 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \uart_rx1/r_Clock_Count_932__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20008 \uart_rx1/r_Clock_Count_932_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1339 ( input FCI, output F0 );
  wire   GNDI;

  ccu20034 \AMDemodulator1/add_3288_8 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20034 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0fff;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1340 ( input B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20035 \AMDemodulator1/add_3288_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20035 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1341 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \AMDemodulator1/add_3288_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20036 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1342 ( input B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20037 \AMDemodulator1/add_3288_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20037 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1000;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1343 ( input A1, B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20038 \AMDemodulator1/add_148_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20038 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1344 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20026 \AMDemodulator1/add_148_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1345 ( input A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20039 \AMDemodulator1/add_148_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20039 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1346 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_148_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1347 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_148_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1348 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_148_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1349 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_148_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1350 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_148_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1351 ( input B1, A1, A0, output FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_148_1 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20040 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1352 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_437_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1353 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_437_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20041 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h6969;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1354 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_437_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20042 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h6969;
  defparam inst1.INIT1 = 16'h6969;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1355 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20043 \AMDemodulator1/add_437_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20043 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1356 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_437_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20044 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1357 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_437_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1358 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_437_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1359 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_437_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20045 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1360 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_437_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20046 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1361 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_437_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1362 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_457_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1363 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_457_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1364 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_457_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1365 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20047 \AMDemodulator1/add_457_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20047 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h6969;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1366 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_457_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1367 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_457_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1368 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_457_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1369 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_457_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1370 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_457_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1371 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_457_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1372 ( input B0, A0, DI0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/ISquare_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20048 \AMDemodulator1/MultResult1_23__I_0_26 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20048 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1373 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_24 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1374 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_22 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1375 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_20 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1376 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_18 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1377 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_16 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1378 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_14 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1379 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_12 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1380 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_10 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1381 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1382 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1383 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \AMDemodulator1/MultResult1_23__I_0_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1384 ( input B1, A1, B0, A0, DI1, CLK, output F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/ISquare_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20029 \AMDemodulator1/MultResult1_23__I_0_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1385 ( input A1, B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20049 \AMDemodulator1/sub_78_add_2_18 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20049 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1386 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/sub_78_add_2_16 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1387 ( input A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/sub_78_add_2_14 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1388 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20026 \AMDemodulator1/sub_78_add_2_12 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1389 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20026 \AMDemodulator1/sub_78_add_2_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1390 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \AMDemodulator1/add_577_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1391 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_577_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1392 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_577_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1393 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_577_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1394 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20043 \AMDemodulator1/add_577_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1395 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_577_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1396 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_577_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1397 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_577_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1398 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \AMDemodulator1/add_597_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1399 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_597_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1400 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_597_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1401 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20047 \AMDemodulator1/add_597_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1402 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_597_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1403 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_597_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1404 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_597_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1405 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \AMDemodulator1/add_617_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1406 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_617_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1407 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_617_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1408 ( input B1, A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20050 \AMDemodulator1/add_617_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20050 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1409 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_617_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1410 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_617_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1411 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \AMDemodulator1/add_537_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1412 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_537_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1413 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_537_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1414 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_537_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1415 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_537_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1416 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20043 \AMDemodulator1/add_537_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1417 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_537_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1418 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_537_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1419 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_537_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1420 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_537_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1421 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_477_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1422 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_477_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1423 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_477_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1424 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_477_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1425 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20043 \AMDemodulator1/add_477_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1426 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_477_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1427 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_477_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1428 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_477_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1429 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_477_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1430 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_477_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1431 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20026 \AMDemodulator1/sub_78_add_2_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1432 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20026 \AMDemodulator1/sub_78_add_2_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1433 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20026 \AMDemodulator1/sub_78_add_2_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1434 ( input B1, A1, A0, output FCO );
  wire   GNDI;

  ccu20051 \AMDemodulator1/sub_78_add_2_2 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20051 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1435 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20026 \AMDemodulator1/add_557_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1436 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_557_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1437 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_557_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1438 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_557_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1439 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20047 \AMDemodulator1/add_557_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1440 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_557_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1441 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_557_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1442 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_557_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1443 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_557_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1444 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_497_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1445 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_497_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1446 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20047 \AMDemodulator1/add_497_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1447 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_497_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1448 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_497_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1449 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_497_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1450 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_497_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1451 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_497_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1452 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_497_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1453 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_497_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1454 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_517_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1455 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_517_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1456 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_517_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1457 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_517_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1458 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20047 \AMDemodulator1/add_517_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1459 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_517_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1460 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_517_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1461 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/add_517_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1462 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_517_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1463 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \AMDemodulator1/add_517_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1464 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_0 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1465 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_0_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1466 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_2 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1467 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_2_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1468 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_4 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1469 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_4_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1470 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1471 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_6_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1472 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_8 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1473 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_8_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1474 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1475 ( input FCI, output F0 );
  wire   VCCI, GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_10_6 ( .A0(VCCI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1476 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_49 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_0_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1477 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_47 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_48 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1478 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_45 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_46 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1479 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_43 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_44 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1480 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_41 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_42 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1481 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_39 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_40 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1482 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_37 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_38 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1483 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_35 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_36 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1484 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_34 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_0_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1485 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_31 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_1_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1486 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_29 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_30 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1487 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_27 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_28 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1488 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_25 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_26 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1489 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1490 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1491 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1492 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1493 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_1_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1494 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_2_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1495 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1496 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1497 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1498 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1499 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1500 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1501 ( input A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1502 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_71 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_3_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1503 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_69 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_70 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1504 ( input B1, A1, B0, A0, DI0, CLK, 
    FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_68 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1505 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1506 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1507 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1508 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1509 ( input B1, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_8 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1510 ( input B1, B0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1511 ( input B0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1512 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_3_11 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1513 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_67 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_t_Multiplier_0_4_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1514 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_65 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_66 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1515 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_63 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_64 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1516 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_61 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_62 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1517 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_59 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_60 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1518 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_57 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_58 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1519 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_55 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_56 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1520 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_53 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_54 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_8 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1521 ( input B0, A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_52 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_9 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1522 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_50 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module alu2_mult0052 ( input A0, A1, C0, C1, B0, B1, D0, D1, CI, output S0, S1, 
    CO1 );

  MULT2 INST01( .A0(A0), .A1(C0), .A2(A1), .A3(C1), .B0(B0), .B1(D0), .B2(B1), 
    .B3(D1), .CI(CI), .P0(S0), .P1(S1), .CO(CO1));
endmodule

module AMDemodulator1_Multiplier2_SLICE_1523 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1524 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1525 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1526 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1527 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1528 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1529 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1530 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1531 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1532 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1533 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1534 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_32 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1535 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1536 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1537 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1538 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1539 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1540 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1541 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1542 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1543 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1544 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1545 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1546 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1547 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1548 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1549 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1550 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1551 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1552 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1553 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1554 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1555 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1556 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1557 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1558 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_0 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1559 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_0_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1560 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_2 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1561 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_2_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1562 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_4 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1563 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_4_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1564 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1565 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_6_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1566 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_8 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1567 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_8_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1568 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1569 ( input FCI, output F0 );
  wire   VCCI, GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_10_6 ( .A0(VCCI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1570 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_49 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_0_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1571 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_47 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_48 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1572 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_45 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_46 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1573 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_43 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_44 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1574 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_41 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_42 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1575 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_39 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_40 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1576 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_37 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_38 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1577 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_35 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_36 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1578 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_34 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_0_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1579 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_31 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_1_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1580 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_29 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_30 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1581 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_27 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_28 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1582 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_25 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_26 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1583 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1584 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1585 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1586 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1587 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_1_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1588 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_2_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1589 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1590 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1591 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1592 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1593 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1594 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1595 ( input A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1596 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_71 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_3_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1597 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_69 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_70 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1598 ( input B1, A1, B0, A0, DI0, CLK, 
    FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_68 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1599 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1600 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1601 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1602 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1603 ( input B1, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_8 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1604 ( input B1, B0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1605 ( input B0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1606 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_3_11 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1607 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_67 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_t_Multiplier_0_4_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1608 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_65 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_66 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1609 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_63 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_64 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1610 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_61 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_62 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1611 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_59 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_60 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1612 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_57 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_58 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1613 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_55 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_56 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1614 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_53 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_54 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_8 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1615 ( input B0, A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_52 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_9 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1616 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_50 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1617 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1618 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1619 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1620 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1621 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1622 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1623 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1624 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1625 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1626 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1627 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1628 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_32 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1629 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1630 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1631 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1632 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1633 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1634 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1635 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1636 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1637 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1638 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1639 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1640 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1641 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1642 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1643 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1644 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1645 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1646 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1647 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1648 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1649 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1650 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1651 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0052 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1652 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \AMDemodulator1/i4758_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_SLICE_1653 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1654 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1655 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1656 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1657 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1658 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1659 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1660 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1661 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1662 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1663 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1664 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1665 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_74 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_75 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1666 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_72 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_73 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1667 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_74 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_75 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1668 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_72 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_73 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1669 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40053 \AMDemodulator1/Multiplier1/AND2_t21 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_Multiplier1_SLICE_1670 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40053 \AMDemodulator1/Multiplier1/AND2_t15 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1671 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_97 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_98 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1672 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_95 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_96 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1673 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_93 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_94 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1674 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_91 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_92 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1675 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_89 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_90 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1677 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_86 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_87 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1678 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_84 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_85 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1679 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_82 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_83 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1680 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_80 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_81 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1681 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_78 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_79 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1682 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_76 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_77 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1683 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_51 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1684 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40053 \AMDemodulator1/Multiplier2/AND2_t21 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1685 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40053 \AMDemodulator1/Multiplier2/AND2_t15 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1686 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_97 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_98 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1687 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_95 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_96 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1688 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_93 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_94 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1689 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_91 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_92 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1690 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_89 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_90 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1692 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_86 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_87 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1693 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_84 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_85 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1694 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_82 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_83 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1695 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_80 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_81 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1696 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_78 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_79 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1697 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_76 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_77 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1698 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_51 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1699 ( input A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \AMDemodulator1/d_out_d_11__I_10_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 \AMDemodulator1/mux_74_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3535) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_SLICE_1700 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \AMDemodulator1/d_out_d_11__I_8_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \AMDemodulator1/d_out_d_11__I_9_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1701 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \AMDemodulator1/d_out_d_11__I_6_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \AMDemodulator1/d_out_d_11__I_7_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1702 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \AMDemodulator1/d_out_d_11__I_4_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \AMDemodulator1/d_out_d_11__I_5_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1703 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \AMDemodulator1/d_out_d_11__I_2_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \AMDemodulator1/d_out_d_11__I_3_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1704 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40056 \CIC1Cos/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \CIC1Cos/i2670_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \CIC1Cos/count__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1705 ( input B1, A1, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40058 \CIC1Cos/i3_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 \CIC1Cos/i2723_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0009 \CIC1Cos/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1706 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40059 \CIC1Cos/mux_1207_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d10__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1707 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40059 \CIC1Cos/mux_1207_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d10__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1708 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4753_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1709 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4754_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1710 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4755_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1711 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4756_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1712 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4757_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1713 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1714 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1715 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1716 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1717 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1718 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1719 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1720 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1721 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1722 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1723 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1724 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1725 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1726 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1727 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1728 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1729 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1730 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1731 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1732 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1733 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1734 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1735 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1736 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1737 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1738 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1739 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1740 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1741 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1742 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1743 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1744 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1745 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1746 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1747 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1748 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1749 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1750 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1751 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1752 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1753 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1754 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1755 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1756 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1757 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1758 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1759 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1760 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1761 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1762 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1763 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1764 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1765 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1766 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1767 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1768 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1769 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1770 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1771 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1772 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1773 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1774 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1775 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1776 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1777 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1778 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1779 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1780 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1781 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1782 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1783 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1784 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1785 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1786 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1787 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1788 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1789 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1790 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1791 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1792 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1793 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1794 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1795 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1796 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1797 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1798 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1799 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1800 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1801 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1802 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1803 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1804 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1805 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1806 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1807 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1808 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1809 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1810 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1811 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1812 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1813 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1814 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1815 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1816 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1817 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1818 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1819 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1820 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1821 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1822 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1823 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1824 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1825 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1826 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1827 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1828 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1829 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1830 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1831 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1832 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1833 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1834 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1835 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1836 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1837 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1838 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1839 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1840 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1841 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1842 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1843 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1844 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1845 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1846 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1847 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1848 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1849 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1850 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1851 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1852 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1853 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1854 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1855 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1856 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1857 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1858 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1859 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1860 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1861 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1862 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1863 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1864 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1865 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1866 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1867 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1868 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1869 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1870 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1871 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1872 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i19 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i18 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1873 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1874 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i23 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1875 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i25 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i24 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1876 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1877 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1878 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i30 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1879 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i33 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1880 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i34 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1881 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1882 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1883 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1884 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1885 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1886 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1887 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1888 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1889 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1890 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1891 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1892 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1893 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1894 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1895 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1896 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1897 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1898 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1899 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1900 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1901 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1902 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1903 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1904 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1905 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1906 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1907 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1908 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1909 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i19 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i18 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1910 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1911 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i23 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1912 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i25 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i24 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1913 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1914 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1915 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i30 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1916 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i33 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1917 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i34 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1918 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1919 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1920 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i41 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1921 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i43 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i42 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1922 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i45 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i44 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1923 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i47 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i46 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1924 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i49 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i48 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1925 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i51 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i50 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1926 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i53 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i52 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1927 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i54 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1928 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i57 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1929 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i58 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1930 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i61 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1931 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i63 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i62 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1932 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i65 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i64 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1933 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1934 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1935 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i71 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i70 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1936 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40060 \CIC1Cos/i5799_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \CIC1Cos/i5849_4_lut_rep_198 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \CIC1Cos/v_comb_66_rep_201 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_200 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1937 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_203 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_202 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1938 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_205 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_204 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1939 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_207 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_206 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1940 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_209 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_208 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1941 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_211 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_210 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1942 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_212 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1943 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Cos/v_comb_66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1944 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40056 \CIC1Sin/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \CIC1Sin/i2666_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \CIC1Sin/count__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1945 ( input B1, A1, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40058 \CIC1Sin/i3_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 \CIC1Sin/i2722_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0009 \CIC1Sin/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1946 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40059 \CIC1Sin/mux_1208_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1947 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/mux_1208_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Sin/mux_1208_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1948 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/mux_1208_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Sin/mux_1208_i5_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1949 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/mux_1208_i8_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Sin/mux_1208_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1950 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/mux_1208_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Sin/mux_1208_i9_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1951 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/mux_1208_i12_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Sin/mux_1208_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1952 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/mux_1208_i14_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Sin/mux_1208_i13_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1953 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Sin/mux_1208_i16_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Sin/mux_1208_i15_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1954 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4828_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1955 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4749_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1956 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4750_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1957 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4751_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1958 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4752_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1959 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1960 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1961 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40056 \CIC1Sin/i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \CIC1Sin/i2328_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0062 \CIC1Sin/d_clk_tmp_65 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0062 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module CIC1Sin_SLICE_1962 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1963 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1964 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1965 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1966 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1967 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1968 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1969 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1970 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1971 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1972 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1973 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1974 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1975 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1976 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1977 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1978 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1979 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1980 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1981 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1982 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1983 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1984 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1985 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1986 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1987 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1988 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1989 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1990 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1991 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1992 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1993 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1994 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1995 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1996 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1997 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1998 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1999 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2000 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2001 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2002 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2003 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2004 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2005 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2006 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2007 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2008 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2009 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2010 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2011 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2012 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2013 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2014 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2015 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2016 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2017 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2018 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2019 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2020 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2021 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2022 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2023 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2024 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2025 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2026 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2027 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2028 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2029 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2030 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2031 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2032 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2033 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2034 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2035 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2036 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2037 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2038 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2039 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2040 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2041 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2042 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2043 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2044 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2045 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2046 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2047 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2048 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2049 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2050 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2051 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2052 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2053 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2054 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2055 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2056 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2057 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2058 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2059 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2060 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2061 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2062 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2063 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2064 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2065 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2066 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2067 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2068 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2069 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2070 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2071 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2072 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2073 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2074 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2075 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2076 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2077 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2078 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2079 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2080 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2081 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2082 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2083 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2084 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2085 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2086 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2087 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2088 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2089 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2090 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2091 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2092 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2093 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2094 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2095 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2096 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2097 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2098 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2099 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2100 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2101 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2102 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2103 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2104 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2105 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2106 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2107 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2108 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2109 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2110 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2111 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2112 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2113 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2114 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2115 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2116 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2117 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2118 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2119 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2120 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2121 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2122 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2123 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2124 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2125 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2126 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2127 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2128 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2129 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2130 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2131 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i41 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2132 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i43 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i42 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2133 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i45 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i44 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2134 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i47 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i46 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2135 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i49 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i48 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2136 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i51 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i50 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2137 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i53 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i52 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2138 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i54 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2139 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i57 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2140 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i58 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2141 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i61 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2142 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i63 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i62 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2143 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i65 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i64 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2144 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2145 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2146 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i71 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i70 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2147 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2148 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2149 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2150 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2151 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2152 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2153 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2154 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2155 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2156 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i19 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i18 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2157 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2158 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i23 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2159 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i25 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i24 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2160 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2161 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2162 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i30 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2163 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i33 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2164 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i34 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2165 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2166 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2167 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i41 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2168 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i43 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i42 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2169 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i45 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i44 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2170 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i47 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i46 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2171 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i49 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i48 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2172 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i51 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i50 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2173 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i53 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i52 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2174 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i54 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2175 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i57 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2176 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i58 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2177 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i61 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2178 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i63 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i62 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2179 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i65 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i64 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2180 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2181 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2182 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i71 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i70 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2183 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40060 \CIC1Sin/i5805_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \CIC1Sin/i5855_4_lut_rep_196 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \CIC1Sin/v_comb_66_rep_184 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_183 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2184 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_186 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_185 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2185 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_188 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_187 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2186 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_190 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_189 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2187 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_192 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_191 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2188 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_194 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_193 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2189 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_182 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2190 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Sin/v_comb_66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2191 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Cos/SLICE_2191/CIC1Cos/SLICE_2191_K1_H1 , 
         \CIC1Cos/SLICE_2191/CIC1Cos/i6058/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40063 \CIC1Cos/SLICE_2191_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2191/CIC1Cos/SLICE_2191_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \CIC1Cos/i6058/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2191/CIC1Cos/i6058/GATE_H0 ));
  vmuxregsre \CIC1Cos/d_out_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Cos/SLICE_2191_K0K1MUX ( 
    .D0(\CIC1Cos/SLICE_2191/CIC1Cos/i6058/GATE_H0 ), 
    .D1(\CIC1Cos/SLICE_2191/CIC1Cos/SLICE_2191_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module CIC1Cos_SLICE_2192 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Cos/SLICE_2192/CIC1Cos/SLICE_2192_K1_H1 , 
         \CIC1Cos/SLICE_2192/CIC1Cos/i6060/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40063 \CIC1Cos/SLICE_2192_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2192/CIC1Cos/SLICE_2192_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \CIC1Cos/i6060/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2192/CIC1Cos/i6060/GATE_H0 ));
  vmuxregsre \CIC1Cos/d_out_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Cos/SLICE_2192_K0K1MUX ( 
    .D0(\CIC1Cos/SLICE_2192/CIC1Cos/i6060/GATE_H0 ), 
    .D1(\CIC1Cos/SLICE_2192/CIC1Cos/SLICE_2192_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2193 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 \CIC1Sin/shift_right_31_i204_3_lut_4_lut_adj_38 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40065 \CIC1Sin/shift_right_31_i203_3_lut_4_lut_adj_37 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2194 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 \CIC1Sin/shift_right_31_i206_3_lut_4_lut_adj_48 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40065 \CIC1Sin/shift_right_31_i205_3_lut_4_lut_adj_49 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2195 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 \CIC1Sin/shift_right_31_i208_3_lut_4_lut_adj_51 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40065 \CIC1Sin/shift_right_31_i207_3_lut_4_lut_adj_50 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2196 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 \CIC1Sin/shift_right_31_i210_3_lut_4_lut_adj_53 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40066 \CIC1Sin/shift_right_31_i141_3_lut_4_lut_adj_52 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2197 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   GNDI, \SLICE_2197/SLICE_2197_K1_H1 , 
         \SLICE_2197/CIC1Sin/i6046/GATE_H0 , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40067 SLICE_2197_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_2197/SLICE_2197_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \CIC1Sin/i6046/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_2197/CIC1Sin/i6046/GATE_H0 ));
  vmuxregsre \CIC1Cos/d_out_i0_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_2197_K0K1MUX( .D0(\SLICE_2197/CIC1Sin/i6046/GATE_H0 ), 
    .D1(\SLICE_2197/SLICE_2197_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2198 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40068 \CIC1Sin/shift_right_31_i140_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40065 \CIC1Sin/shift_right_31_i212_3_lut_4_lut_adj_54 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF960) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2199 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Sin/SLICE_2199/CIC1Sin/SLICE_2199_K1_H1 , 
         \CIC1Sin/SLICE_2199/CIC1Sin/i6040/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40063 \CIC1Sin/SLICE_2199_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2199/CIC1Sin/SLICE_2199_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \CIC1Sin/i6040/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2199/CIC1Sin/i6040/GATE_H0 ));
  vmuxregsre \CIC1Sin/d_out_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Sin/SLICE_2199_K0K1MUX ( 
    .D0(\CIC1Sin/SLICE_2199/CIC1Sin/i6040/GATE_H0 ), 
    .D1(\CIC1Sin/SLICE_2199/CIC1Sin/SLICE_2199_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2200 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Sin/SLICE_2200/CIC1Sin/SLICE_2200_K1_H1 , 
         \CIC1Sin/SLICE_2200/CIC1Sin/i6054/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40063 \CIC1Sin/SLICE_2200_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2200/CIC1Sin/SLICE_2200_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \CIC1Sin/i6054/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2200/CIC1Sin/i6054/GATE_H0 ));
  vmuxregsre \CIC1Sin/d_out_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Sin/SLICE_2200_K0K1MUX ( 
    .D0(\CIC1Sin/SLICE_2200/CIC1Sin/i6054/GATE_H0 ), 
    .D1(\CIC1Sin/SLICE_2200/CIC1Sin/SLICE_2200_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2201 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 \CIC1Sin/shift_right_31_i204_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40065 \CIC1Sin/shift_right_31_i203_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2202 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 \CIC1Sin/shift_right_31_i206_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40065 \CIC1Sin/shift_right_31_i205_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2203 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d_clk_67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2204 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre CICGain__i2( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre CICGain__i1( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2205 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2206 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2207 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2208 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2209 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/d_out_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2210 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/d_out_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2212 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_10/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_11/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2213 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_8/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_9/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2214 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_6/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_7/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2215 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_4/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_5/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2216 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_2/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2217 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_0/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_1/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2218 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_23/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_24/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2219 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_21/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_22/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2220 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_19/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_20/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2221 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_17/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_18/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2222 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40069 \SinCos1/muxb_15/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \SinCos1/muxb_16/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2223 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \SinCos1/muxb_13/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 \SinCos1/muxb_14/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \SinCos1/FF_14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2224 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 \CIC1Sin/shift_right_31_i208_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40065 \CIC1Sin/shift_right_31_i207_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2225 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 \CIC1Sin/shift_right_31_i210_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40066 \CIC1Sin/shift_right_31_i141_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2226 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Sin/SLICE_2226/CIC1Sin/SLICE_2226_K1_H1 , 
         \CIC1Sin/SLICE_2226/CIC1Sin/i6026/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40067 \CIC1Sin/SLICE_2226_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2226/CIC1Sin/SLICE_2226_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \CIC1Sin/i6026/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2226/CIC1Sin/i6026/GATE_H0 ));
  vmuxregsre \CIC1Sin/d_out_i0_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Sin/SLICE_2226_K0K1MUX ( 
    .D0(\CIC1Sin/SLICE_2226/CIC1Sin/i6026/GATE_H0 ), 
    .D1(\CIC1Sin/SLICE_2226/CIC1Sin/SLICE_2226_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2227 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40068 \CIC1Sin/shift_right_31_i140_3_lut_4_lut_adj_44 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40065 \CIC1Sin/shift_right_31_i212_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2228 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0071 \Mixer1/RFInR1_13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0071 \Mixer1/RFInR_14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0071 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module Mixer1_SLICE_2229 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutCos_11__I_0_i2_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutCos_11__I_0_i1_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2230 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutCos_11__I_0_i4_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutCos_11__I_0_i3_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2231 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutCos_11__I_0_i6_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutCos_11__I_0_i5_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2232 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutCos_11__I_0_i8_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutCos_11__I_0_i7_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2233 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutCos_11__I_0_i10_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutCos_11__I_0_i9_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2234 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutCos_11__I_0_i12_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutCos_11__I_0_i11_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2235 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutSin_11__I_0_i2_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutSin_11__I_0_i1_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2236 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutSin_11__I_0_i4_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutSin_11__I_0_i3_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2237 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutSin_11__I_0_i6_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutSin_11__I_0_i5_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2238 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutSin_11__I_0_i8_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutSin_11__I_0_i7_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2239 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutSin_11__I_0_i10_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutSin_11__I_0_i9_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2240 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \Mixer1/MixerOutSin_11__I_0_i12_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \Mixer1/MixerOutSin_11__I_0_i11_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2241 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2242 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2243 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2244 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2245 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2246 ( input A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \PWM1/i1091_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2247 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \SinCos1/XOR2_t1 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2250 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40059 \SinCos1/muxb_53/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 \SinCos1/AND2_t0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2251 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \SinCos1/FF_59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2252 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2253 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2253/SinCos1/triglut_1_0_13_1_H1 , 
         \SinCos1/SLICE_2253/SinCos1/SLICE_2253_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40073 \SinCos1/triglut_1_0_13_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2253/SinCos1/triglut_1_0_13_1_H1 ));
  lut40074 \SinCos1/SLICE_2253_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2253/SinCos1/SLICE_2253_K0_H0 ));
  vmuxregsre \SinCos1/FF_42 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2253_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2253/SinCos1/SLICE_2253_K0_H0 ), 
    .D1(\SinCos1/SLICE_2253/SinCos1/triglut_1_0_13_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2253_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h981F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h433C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2254 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2254/SinCos1/triglut_1_0_14_1_H1 , 
         \SinCos1/SLICE_2254/SinCos1/SLICE_2254_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40075 \SinCos1/triglut_1_0_14_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2254/SinCos1/triglut_1_0_14_1_H1 ));
  lut40076 \SinCos1/SLICE_2254_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2254/SinCos1/SLICE_2254_K0_H0 ));
  vmuxregsre \SinCos1/FF_43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2254_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2254/SinCos1/SLICE_2254_K0_H0 ), 
    .D1(\SinCos1/SLICE_2254/SinCos1/triglut_1_0_14_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2254_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3657) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2255 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2255/SinCos1/triglut_1_0_15_1_H1 , 
         \SinCos1/SLICE_2255/SinCos1/SLICE_2255_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40077 \SinCos1/triglut_1_0_15_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2255/SinCos1/triglut_1_0_15_1_H1 ));
  lut40078 \SinCos1/SLICE_2255_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2255/SinCos1/SLICE_2255_K0_H0 ));
  vmuxregsre \SinCos1/FF_44 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2255_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2255/SinCos1/SLICE_2255_K0_H0 ), 
    .D1(\SinCos1/SLICE_2255/SinCos1/triglut_1_0_15_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2255_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h94B6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8846) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2256 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2256/SinCos1/triglut_1_0_16_1_H1 , 
         \SinCos1/SLICE_2256/SinCos1/SLICE_2256_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40079 \SinCos1/triglut_1_0_16_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2256/SinCos1/triglut_1_0_16_1_H1 ));
  lut40080 \SinCos1/SLICE_2256_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2256/SinCos1/SLICE_2256_K0_H0 ));
  vmuxregsre \SinCos1/FF_45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2256_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2256/SinCos1/SLICE_2256_K0_H0 ), 
    .D1(\SinCos1/SLICE_2256/SinCos1/triglut_1_0_16_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2256_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0DD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2ADA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2257 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2257/SinCos1/triglut_1_0_17_1_H1 , 
         \SinCos1/SLICE_2257/SinCos1/SLICE_2257_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40081 \SinCos1/triglut_1_0_17_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2257/SinCos1/triglut_1_0_17_1_H1 ));
  lut40082 \SinCos1/SLICE_2257_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2257/SinCos1/SLICE_2257_K0_H0 ));
  vmuxregsre \SinCos1/FF_46 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2257_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2257/SinCos1/SLICE_2257_K0_H0 ), 
    .D1(\SinCos1/SLICE_2257/SinCos1/triglut_1_0_17_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2257_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEC2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h227F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2258 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2258/SinCos1/triglut_1_0_18_1_H1 , 
         \SinCos1/SLICE_2258/SinCos1/SLICE_2258_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40083 \SinCos1/triglut_1_0_18_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2258/SinCos1/triglut_1_0_18_1_H1 ));
  lut40084 \SinCos1/SLICE_2258_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2258/SinCos1/SLICE_2258_K0_H0 ));
  vmuxregsre \SinCos1/FF_47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2258_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2258/SinCos1/SLICE_2258_K0_H0 ), 
    .D1(\SinCos1/SLICE_2258/SinCos1/triglut_1_0_18_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2258_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2259 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2259/SinCos1/triglut_1_0_19_1_H1 , 
         \SinCos1/SLICE_2259/SinCos1/SLICE_2259_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40085 \SinCos1/triglut_1_0_19_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2259/SinCos1/triglut_1_0_19_1_H1 ));
  lut40086 \SinCos1/SLICE_2259_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2259/SinCos1/SLICE_2259_K0_H0 ));
  vmuxregsre \SinCos1/FF_48 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2259_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2259/SinCos1/SLICE_2259_K0_H0 ), 
    .D1(\SinCos1/SLICE_2259/SinCos1/triglut_1_0_19_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2259_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEF93) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h49F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2260 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2260/SinCos1/triglut_1_0_20_1_H1 , 
         \SinCos1/SLICE_2260/SinCos1/SLICE_2260_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40087 \SinCos1/triglut_1_0_20_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2260/SinCos1/triglut_1_0_20_1_H1 ));
  lut40088 \SinCos1/SLICE_2260_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2260/SinCos1/SLICE_2260_K0_H0 ));
  vmuxregsre \SinCos1/FF_49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2260_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2260/SinCos1/SLICE_2260_K0_H0 ), 
    .D1(\SinCos1/SLICE_2260/SinCos1/triglut_1_0_20_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2260_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFE9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDB3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2261 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2261/SinCos1/triglut_1_0_21_1_H1 , 
         \SinCos1/SLICE_2261/SinCos1/SLICE_2261_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40089 \SinCos1/triglut_1_0_21_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2261/SinCos1/triglut_1_0_21_1_H1 ));
  lut40090 \SinCos1/SLICE_2261_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2261/SinCos1/SLICE_2261_K0_H0 ));
  vmuxregsre \SinCos1/FF_50 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2261_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2261/SinCos1/SLICE_2261_K0_H0 ), 
    .D1(\SinCos1/SLICE_2261/SinCos1/triglut_1_0_21_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2261_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAAB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA16A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2262 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2262/SinCos1/triglut_1_0_22_1_H1 , 
         \SinCos1/SLICE_2262/SinCos1/SLICE_2262_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40091 \SinCos1/triglut_1_0_22_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2262/SinCos1/triglut_1_0_22_1_H1 ));
  lut40092 \SinCos1/SLICE_2262_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2262/SinCos1/SLICE_2262_K0_H0 ));
  vmuxregsre \SinCos1/FF_51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2262_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2262/SinCos1/SLICE_2262_K0_H0 ), 
    .D1(\SinCos1/SLICE_2262/SinCos1/triglut_1_0_22_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2262_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h542A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2263 ( input DI1, M1, FXB, FXA, CLK, output OFX0, Q1, 
    OFX1 );
  wire   GNDI, \SinCos1/SLICE_2263/SinCos1/triglut_1_0_23_1_H0 , VCCI, DI1_dly, 
         CLK_dly;

  lut40093 \SinCos1/triglut_1_0_23_1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2263/SinCos1/triglut_1_0_23_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_52 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux20094 \SinCos1/SLICE_2263_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2263/SinCos1/triglut_1_0_23_1_H0 ), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2263_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux20094 ( input D0, output Z );

  BUFBA INST1( .A(D0), .Z(Z));
endmodule

module SinCos1_SLICE_2264 ( input CLK, output Q0, Q1 );
  wire   GNDI, VCCI;

  vmuxregsre \SinCos1/FF_54 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \SinCos1/FF_53 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2265 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2265/SinCos1/triglut_1_0_0_1_H1 , 
         \SinCos1/SLICE_2265/SinCos1/SLICE_2265_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40095 \SinCos1/triglut_1_0_0_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2265/SinCos1/triglut_1_0_0_1_H1 ));
  lut40096 \SinCos1/SLICE_2265_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2265/SinCos1/SLICE_2265_K0_H0 ));
  vmuxregsre \SinCos1/FF_29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2265_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2265/SinCos1/SLICE_2265_K0_H0 ), 
    .D1(\SinCos1/SLICE_2265/SinCos1/triglut_1_0_0_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2265_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3CC2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF819) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2266 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2266/SinCos1/triglut_1_0_1_1_H1 , 
         \SinCos1/SLICE_2266/SinCos1/SLICE_2266_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40097 \SinCos1/triglut_1_0_1_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2266/SinCos1/triglut_1_0_1_1_H1 ));
  lut40098 \SinCos1/SLICE_2266_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2266/SinCos1/SLICE_2266_K0_H0 ));
  vmuxregsre \SinCos1/FF_30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2266_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2266/SinCos1/SLICE_2266_K0_H0 ), 
    .D1(\SinCos1/SLICE_2266/SinCos1/triglut_1_0_1_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2266_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEA6C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFE5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2267 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2267/SinCos1/triglut_1_0_2_1_H1 , 
         \SinCos1/SLICE_2267/SinCos1/SLICE_2267_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40099 \SinCos1/triglut_1_0_2_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2267/SinCos1/triglut_1_0_2_1_H1 ));
  lut40100 \SinCos1/SLICE_2267_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2267/SinCos1/SLICE_2267_K0_H0 ));
  vmuxregsre \SinCos1/FF_31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2267_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2267/SinCos1/SLICE_2267_K0_H0 ), 
    .D1(\SinCos1/SLICE_2267/SinCos1/triglut_1_0_2_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2267_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6211) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6D29) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2268 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2268/SinCos1/triglut_1_0_3_1_H1 , 
         \SinCos1/SLICE_2268/SinCos1/SLICE_2268_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40101 \SinCos1/triglut_1_0_3_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2268/SinCos1/triglut_1_0_3_1_H1 ));
  lut40102 \SinCos1/SLICE_2268_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2268/SinCos1/SLICE_2268_K0_H0 ));
  vmuxregsre \SinCos1/FF_32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2268_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2268/SinCos1/SLICE_2268_K0_H0 ), 
    .D1(\SinCos1/SLICE_2268/SinCos1/triglut_1_0_3_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2268_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5B54) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2269 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2269/SinCos1/triglut_1_0_4_1_H1 , 
         \SinCos1/SLICE_2269/SinCos1/SLICE_2269_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40103 \SinCos1/triglut_1_0_4_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2269/SinCos1/triglut_1_0_4_1_H1 ));
  lut40104 \SinCos1/SLICE_2269_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2269/SinCos1/SLICE_2269_K0_H0 ));
  vmuxregsre \SinCos1/FF_33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2269_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2269/SinCos1/SLICE_2269_K0_H0 ), 
    .D1(\SinCos1/SLICE_2269/SinCos1/triglut_1_0_4_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2269_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5437) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2270 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2270/SinCos1/triglut_1_0_5_1_H1 , 
         \SinCos1/SLICE_2270/SinCos1/SLICE_2270_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40105 \SinCos1/triglut_1_0_5_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2270/SinCos1/triglut_1_0_5_1_H1 ));
  lut40106 \SinCos1/SLICE_2270_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2270/SinCos1/SLICE_2270_K0_H0 ));
  vmuxregsre \SinCos1/FF_34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2270_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2270/SinCos1/SLICE_2270_K0_H0 ), 
    .D1(\SinCos1/SLICE_2270/SinCos1/triglut_1_0_5_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2270_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC36) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h447D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2271 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2271/SinCos1/triglut_1_0_6_1_H1 , 
         \SinCos1/SLICE_2271/SinCos1/SLICE_2271_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40107 \SinCos1/triglut_1_0_6_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2271/SinCos1/triglut_1_0_6_1_H1 ));
  lut40108 \SinCos1/SLICE_2271_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2271/SinCos1/SLICE_2271_K0_H0 ));
  vmuxregsre \SinCos1/FF_35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2271_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2271/SinCos1/SLICE_2271_K0_H0 ), 
    .D1(\SinCos1/SLICE_2271/SinCos1/triglut_1_0_6_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2271_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F92) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC9F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2272 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2272/SinCos1/triglut_1_0_7_1_H1 , 
         \SinCos1/SLICE_2272/SinCos1/SLICE_2272_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40109 \SinCos1/triglut_1_0_7_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2272/SinCos1/triglut_1_0_7_1_H1 ));
  lut40110 \SinCos1/SLICE_2272_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2272/SinCos1/SLICE_2272_K0_H0 ));
  vmuxregsre \SinCos1/FF_36 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2272_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2272/SinCos1/SLICE_2272_K0_H0 ), 
    .D1(\SinCos1/SLICE_2272/SinCos1/triglut_1_0_7_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2272_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3CDB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h97F5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2273 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2273/SinCos1/triglut_1_0_8_1_H1 , 
         \SinCos1/SLICE_2273/SinCos1/SLICE_2273_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40111 \SinCos1/triglut_1_0_8_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2273/SinCos1/triglut_1_0_8_1_H1 ));
  lut40112 \SinCos1/SLICE_2273_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2273/SinCos1/SLICE_2273_K0_H0 ));
  vmuxregsre \SinCos1/FF_37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2273_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2273/SinCos1/SLICE_2273_K0_H0 ), 
    .D1(\SinCos1/SLICE_2273/SinCos1/triglut_1_0_8_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2273_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5685) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD55F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2274 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2274/SinCos1/triglut_1_0_9_1_H1 , 
         \SinCos1/SLICE_2274/SinCos1/SLICE_2274_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40092 \SinCos1/triglut_1_0_9_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2274/SinCos1/triglut_1_0_9_1_H1 ));
  lut40113 \SinCos1/SLICE_2274_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2274/SinCos1/SLICE_2274_K0_H0 ));
  vmuxregsre \SinCos1/FF_38 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2274_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2274/SinCos1/SLICE_2274_K0_H0 ), 
    .D1(\SinCos1/SLICE_2274/SinCos1/triglut_1_0_9_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2274_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2275 ( input D1, C1, B1, A1, DI1, M1, M0, FXB, FXA, CLK, 
    output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2275/SinCos1/triglut_1_0_10_1_H1 , GNDI, 
         \SinCos1/SLICE_2275/SinCos1/SLICE_2275_K0_H0 , VCCI, DI1_dly, CLK_dly;

  lut40114 \SinCos1/triglut_1_0_10_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2275/SinCos1/triglut_1_0_10_1_H1 ));
  lut40093 \SinCos1/SLICE_2275_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2275/SinCos1/SLICE_2275_K0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \SinCos1/SLICE_2275_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2275/SinCos1/SLICE_2275_K0_H0 ), 
    .D1(\SinCos1/SLICE_2275/SinCos1/triglut_1_0_10_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2275_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0155) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2276 ( input DI1, M1, FXB, FXA, CLK, output OFX0, Q1, 
    OFX1 );
  wire   GNDI, \SinCos1/SLICE_2276/SinCos1/triglut_1_0_11_1_H0 , VCCI, DI1_dly, 
         CLK_dly;

  lut40115 \SinCos1/triglut_1_0_11_1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2276/SinCos1/triglut_1_0_11_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_40 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux20094 \SinCos1/SLICE_2276_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2276/SinCos1/triglut_1_0_11_1_H0 ), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2276_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2277 ( input CLK, output Q0 );
  wire   GNDI, VCCI;

  vmuxregsre \SinCos1/FF_41 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK), .LSR(GNDI), .Q(Q0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2278 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \SinCos1/FF_55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2279 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Cos/mux_1207_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Cos/mux_1207_i4_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2280 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Cos/mux_1207_i7_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Cos/mux_1207_i6_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2281 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Cos/mux_1207_i9_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Cos/mux_1207_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2282 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Cos/mux_1207_i11_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Cos/mux_1207_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2283 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Cos/mux_1207_i13_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Cos/mux_1207_i12_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2284 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 \CIC1Cos/mux_1207_i15_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Cos/mux_1207_i14_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2285 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40059 \CIC1Cos/mux_1207_i16_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d10__i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_2287 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \ncoGen/i4748_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2288 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2289 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2290 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2292 ( input A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40054 \uart_rx1/r_Rx_DV_last_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \uart_rx1/o_Rx_DV_59 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_2293 ( input C1, B1, A1, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CE_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40116 \uart_tx1/i2_3_lut_rep_173 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40117 \uart_tx1/i3244_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \uart_tx1/o_Tx_Serial_47 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE5E5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2294 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i1( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2295 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i2( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2296 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i5( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i4( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2297 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i7( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i6( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2298 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i9( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i8( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2299 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i11( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i10( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2300 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i13( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i12( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2301 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i15( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i14( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2302 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i17( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i16( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2303 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i19( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i18( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2304 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i21( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i20( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2305 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i23( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i22( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2306 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i25( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i24( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2307 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i27( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i26( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2308 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i29( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i28( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2309 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i31( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i30( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2310 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i33( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i32( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2311 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i35( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i34( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2312 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i37( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i36( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2313 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i39( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i38( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2314 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i41( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i40( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2315 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i43( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i42( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2316 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i45( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i44( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2317 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i47( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i46( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2318 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i49( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i48( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2319 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i51( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i50( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2320 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i53( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i52( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2321 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i55( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i54( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2322 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i57( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i56( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2323 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i59( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i58( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2324 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i61( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i60( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2325 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i63( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i62( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2326 ( input B1, A1, D0, C0, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 i2355_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 mux_378_i1_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0062 phase_inc_carrGen_i0_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0062 phase_inc_carrGen_i0_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h09C9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2327 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i3( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2328 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40119 \uart_rx1/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40120 \uart_rx1/i5860_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \uart_rx1/r_Bit_Index_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/r_Bit_Index_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2329 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40121 \uart_rx1/r_Bit_Index_1__bdd_4_lut_6136 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40116 \uart_rx1/CIC_out_clkSin_c_bdd_2_lut_6085_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/r_Bit_Index_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0708) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2330 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2331 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2332 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2333 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2334 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2335 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2336 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2337 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2338 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40122 \uart_rx1/i14_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40123 \uart_rx1/i5852_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \uart_rx1/r_Rx_DV_64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2339 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \uart_rx1/r_Rx_DV_last_60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2341 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0071 \uart_rx1/r_Rx_Data_62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0071 \uart_rx1/r_Rx_Data_R_61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2342 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, LSR, 
    CLK, output OFX0, Q0 );
  wire   GNDI, \uart_rx1/SLICE_2342/uart_rx1/SLICE_2342_K1_H1 , 
         \uart_rx1/SLICE_2342/uart_rx1/i5927/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         LSR_dly;

  lut40124 \uart_rx1/SLICE_2342_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\uart_rx1/SLICE_2342/uart_rx1/SLICE_2342_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 \uart_rx1/i5927/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\uart_rx1/SLICE_2342/uart_rx1/i5927/GATE_H0 ));
  vmuxregsre0009 \uart_rx1/r_SM_Main_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \uart_rx1/SLICE_2342_K0K1MUX ( 
    .D0(\uart_rx1/SLICE_2342/uart_rx1/i5927/GATE_H0 ), 
    .D1(\uart_rx1/SLICE_2342/uart_rx1/SLICE_2342_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6262) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD0DF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2343 ( input D1, C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40126 \uart_rx1/r_SM_Main_2__I_0_69_Mux_1_i3_4_lut_then_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \uart_rx1/i6028/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \uart_rx1/r_SM_Main_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4447) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2344 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40127 \uart_rx1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40128 \uart_rx1/i1_4_lut_adj_30 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \uart_rx1/r_SM_Main_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0405) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_2345 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40129 \uart_tx1/i1_4_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40130 \uart_tx1/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_tx1/r_Bit_Index_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_tx1/r_Bit_Index_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6060) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_2346 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40131 \uart_tx1/i1_3_lut_rep_162 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40132 \uart_tx1/i1_4_lut_adj_57 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_tx1/r_Bit_Index_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_2347 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40133 \uart_tx1/i20_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40134 \uart_tx1/i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0009 \uart_tx1/r_SM_Main_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_tx1/r_SM_Main_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C6C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3A3A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_2348 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40135 \uart_tx1/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \uart_tx1/i1_4_lut_adj_58 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \uart_tx1/r_SM_Main_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_2349 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_tx1/r_Tx_Data_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/r_Tx_Data_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_2350 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_tx1/r_Tx_Data_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/r_Tx_Data_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_2351 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_tx1/r_Tx_Data_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/r_Tx_Data_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_2352 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_tx1/r_Tx_Data_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/r_Tx_Data_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_i5814_SLICE_2353 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   GNDI, \uart_tx1/i5814/SLICE_2353/uart_tx1/i5814/SLICE_2353_K1_H1 , 
         \uart_tx1/i5814/SLICE_2353/uart_tx1/i5814/GATE_H0 ;

  lut40136 \uart_tx1/i5814/SLICE_2353_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\uart_tx1/i5814/SLICE_2353/uart_tx1/i5814/SLICE_2353_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40137 \uart_tx1/i5814/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\uart_tx1/i5814/SLICE_2353/uart_tx1/i5814/GATE_H0 ));
  selmux2 \uart_tx1/i5814/SLICE_2353_K0K1MUX ( 
    .D0(\uart_tx1/i5814/SLICE_2353/uart_tx1/i5814/GATE_H0 ), 
    .D1(\uart_tx1/i5814/SLICE_2353/uart_tx1/i5814/SLICE_2353_K1_H1 ), .SD(M0), 
    .Z(OFX0));
  selmux2 \uart_tx1/i5814/SLICE_2353_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_i5811_SLICE_2354 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \uart_tx1/i5811/SLICE_2354/uart_tx1/i5811/SLICE_2354_K1_H1 , 
         \uart_tx1/i5811/SLICE_2354/uart_tx1/i5811/GATE_H0 ;

  lut40136 \uart_tx1/i5811/SLICE_2354_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\uart_tx1/i5811/SLICE_2354/uart_tx1/i5811/SLICE_2354_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40137 \uart_tx1/i5811/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\uart_tx1/i5811/SLICE_2354/uart_tx1/i5811/GATE_H0 ));
  selmux2 \uart_tx1/i5811/SLICE_2354_K0K1MUX ( 
    .D0(\uart_tx1/i5811/SLICE_2354/uart_tx1/i5811/GATE_H0 ), 
    .D1(\uart_tx1/i5811/SLICE_2354/uart_tx1/i5811/SLICE_2354_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i6062_SLICE_2355 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i6062/SLICE_2355/i6062/SLICE_2355_K1_H1 , 
         \i6062/SLICE_2355/i6062/GATE_H0 ;

  lut40138 \i6062/SLICE_2355_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6062/SLICE_2355/i6062/SLICE_2355_K1_H1 ));
  lut40139 \i6062/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6062/SLICE_2355/i6062/GATE_H0 ));
  selmux2 \i6062/SLICE_2355_K0K1MUX ( .D0(\i6062/SLICE_2355/i6062/GATE_H0 ), 
    .D1(\i6062/SLICE_2355/i6062/SLICE_2355_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBCFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8FCF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6052_SLICE_2356 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i6052/SLICE_2356/i6052/SLICE_2356_K1_H1 , 
         \i6052/SLICE_2356/i6052/GATE_H0 ;

  lut40140 \i6052/SLICE_2356_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6052/SLICE_2356/i6052/SLICE_2356_K1_H1 ));
  lut40141 \i6052/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6052/SLICE_2356/i6052/GATE_H0 ));
  selmux2 \i6052/SLICE_2356_K0K1MUX ( .D0(\i6052/SLICE_2356/i6052/GATE_H0 ), 
    .D1(\i6052/SLICE_2356/i6052/SLICE_2356_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD1C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5140) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6175_SLICE_2357 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i6175/SLICE_2357/i6175/SLICE_2357_K1_H1 , 
         \i6175/SLICE_2357/i6175/GATE_H0 ;

  lut40142 \i6175/SLICE_2357_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6175/SLICE_2357/i6175/SLICE_2357_K1_H1 ));
  lut40143 \i6175/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6175/SLICE_2357/i6175/GATE_H0 ));
  selmux2 \i6175/SLICE_2357_K0K1MUX ( .D0(\i6175/SLICE_2357/i6175/GATE_H0 ), 
    .D1(\i6175/SLICE_2357/i6175/SLICE_2357_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8303) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6044_SLICE_2358 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i6044/SLICE_2358/i6044/SLICE_2358_K1_H1 , GNDI, 
         \i6044/SLICE_2358/i6044/GATE_H0 ;

  lut40144 \i6044/SLICE_2358_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6044/SLICE_2358/i6044/SLICE_2358_K1_H1 ));
  lut40145 \i6044/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i6044/SLICE_2358/i6044/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i6044/SLICE_2358_K0K1MUX ( .D0(\i6044/SLICE_2358/i6044/GATE_H0 ), 
    .D1(\i6044/SLICE_2358/i6044/SLICE_2358_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1005) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6042_SLICE_2359 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i6042/SLICE_2359/i6042/SLICE_2359_K1_H1 , 
         \i6042/SLICE_2359/i6042/GATE_H0 ;

  lut40146 \i6042/SLICE_2359_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6042/SLICE_2359/i6042/SLICE_2359_K1_H1 ));
  lut40139 \i6042/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6042/SLICE_2359/i6042/GATE_H0 ));
  selmux2 \i6042/SLICE_2359_K0K1MUX ( .D0(\i6042/SLICE_2359/i6042/GATE_H0 ), 
    .D1(\i6042/SLICE_2359/i6042/SLICE_2359_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8CCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6038_SLICE_2360 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i6038/SLICE_2360/i6038/SLICE_2360_K1_H1 , 
         \i6038/SLICE_2360/i6038/GATE_H0 ;

  lut40147 \i6038/SLICE_2360_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6038/SLICE_2360/i6038/SLICE_2360_K1_H1 ));
  lut40148 \i6038/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6038/SLICE_2360/i6038/GATE_H0 ));
  selmux2 \i6038/SLICE_2360_K0K1MUX ( .D0(\i6038/SLICE_2360/i6038/GATE_H0 ), 
    .D1(\i6038/SLICE_2360/i6038/SLICE_2360_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD1E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5162) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6036_SLICE_2361 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i6036/SLICE_2361/i6036/SLICE_2361_K1_H1 , 
         \i6036/SLICE_2361/i6036/GATE_H0 ;

  lut40149 \i6036/SLICE_2361_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6036/SLICE_2361/i6036/SLICE_2361_K1_H1 ));
  lut40150 \i6036/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6036/SLICE_2361/i6036/GATE_H0 ));
  selmux2 \i6036/SLICE_2361_K0K1MUX ( .D0(\i6036/SLICE_2361/i6036/GATE_H0 ), 
    .D1(\i6036/SLICE_2361/i6036/SLICE_2361_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h021D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1F06) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6179_SLICE_2362 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i6179/SLICE_2362/i6179/SLICE_2362_K1_H1 , 
         \i6179/SLICE_2362/i6179/GATE_H0 ;

  lut40142 \i6179/SLICE_2362_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6179/SLICE_2362/i6179/SLICE_2362_K1_H1 ));
  lut40151 \i6179/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6179/SLICE_2362/i6179/GATE_H0 ));
  selmux2 \i6179/SLICE_2362_K0K1MUX ( .D0(\i6179/SLICE_2362/i6179/GATE_H0 ), 
    .D1(\i6179/SLICE_2362/i6179/SLICE_2362_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6177_SLICE_2363 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i6177/SLICE_2363/i6177/SLICE_2363_K1_H1 , 
         \i6177/SLICE_2363/i6177/GATE_H0 ;

  lut40138 \i6177/SLICE_2363_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6177/SLICE_2363/i6177/SLICE_2363_K1_H1 ));
  lut40152 \i6177/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6177/SLICE_2363/i6177/GATE_H0 ));
  selmux2 \i6177/SLICE_2363_K0K1MUX ( .D0(\i6177/SLICE_2363/i6177/GATE_H0 ), 
    .D1(\i6177/SLICE_2363/i6177/SLICE_2363_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2364 ( input C1, B1, A1, D0, C0, B0, A0, output OFX0, F1 );
  wire   GNDI, \SinCos1/SLICE_2364/SinCos1/triglut_1_0_23_0_H0 ;

  lut40059 \SinCos1/muxb_56/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40153 \SinCos1/triglut_1_0_23_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2364/SinCos1/triglut_1_0_23_0_H0 ));
  selmux20094 \SinCos1/SLICE_2364_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2364/SinCos1/triglut_1_0_23_0_H0 ), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2365 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2365/SinCos1/SLICE_2365_K1_H1 , 
         \SinCos1/SLICE_2365/SinCos1/triglut_1_0_22_0_H0 ;

  lut40154 \SinCos1/SLICE_2365_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SinCos1/SLICE_2365/SinCos1/SLICE_2365_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40155 \SinCos1/triglut_1_0_22_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2365/SinCos1/triglut_1_0_22_0_H0 ));
  selmux2 \SinCos1/SLICE_2365_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2365/SinCos1/triglut_1_0_22_0_H0 ), 
    .D1(\SinCos1/SLICE_2365/SinCos1/SLICE_2365_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h502A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2366 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2366/SinCos1/SLICE_2366_K1_H1 , 
         \SinCos1/SLICE_2366/SinCos1/triglut_1_0_21_0_H0 ;

  lut40156 \SinCos1/SLICE_2366_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SinCos1/SLICE_2366/SinCos1/SLICE_2366_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40157 \SinCos1/triglut_1_0_21_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2366/SinCos1/triglut_1_0_21_0_H0 ));
  selmux2 \SinCos1/SLICE_2366_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2366/SinCos1/triglut_1_0_21_0_H0 ), 
    .D1(\SinCos1/SLICE_2366/SinCos1/SLICE_2366_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEBEB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA56A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2367 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2367/SinCos1/SLICE_2367_K1_H1 , 
         \SinCos1/SLICE_2367/SinCos1/triglut_1_0_20_0_H0 ;

  lut40158 \SinCos1/SLICE_2367_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2367/SinCos1/SLICE_2367_K1_H1 ));
  lut40159 \SinCos1/triglut_1_0_20_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2367/SinCos1/triglut_1_0_20_0_H0 ));
  selmux2 \SinCos1/SLICE_2367_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2367/SinCos1/triglut_1_0_20_0_H0 ), 
    .D1(\SinCos1/SLICE_2367/SinCos1/SLICE_2367_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFAD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4D30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2368 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2368/SinCos1/SLICE_2368_K1_H1 , 
         \SinCos1/SLICE_2368/SinCos1/triglut_1_0_19_0_H0 ;

  lut40160 \SinCos1/SLICE_2368_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2368/SinCos1/SLICE_2368_K1_H1 ));
  lut40161 \SinCos1/triglut_1_0_19_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2368/SinCos1/triglut_1_0_19_0_H0 ));
  selmux2 \SinCos1/SLICE_2368_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2368/SinCos1/triglut_1_0_19_0_H0 ), 
    .D1(\SinCos1/SLICE_2368/SinCos1/SLICE_2368_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEC6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9E3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2369 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2369/SinCos1/SLICE_2369_K1_H1 , 
         \SinCos1/SLICE_2369/SinCos1/triglut_1_0_18_0_H0 ;

  lut40162 \SinCos1/SLICE_2369_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2369/SinCos1/SLICE_2369_K1_H1 ));
  lut40163 \SinCos1/triglut_1_0_18_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2369/SinCos1/triglut_1_0_18_0_H0 ));
  selmux2 \SinCos1/SLICE_2369_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2369/SinCos1/triglut_1_0_18_0_H0 ), 
    .D1(\SinCos1/SLICE_2369/SinCos1/SLICE_2369_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE977) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h464C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2370 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2370/SinCos1/SLICE_2370_K1_H1 , 
         \SinCos1/SLICE_2370/SinCos1/triglut_1_0_17_0_H0 ;

  lut40164 \SinCos1/SLICE_2370_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2370/SinCos1/SLICE_2370_K1_H1 ));
  lut40165 \SinCos1/triglut_1_0_17_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2370/SinCos1/triglut_1_0_17_0_H0 ));
  selmux2 \SinCos1/SLICE_2370_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2370/SinCos1/triglut_1_0_17_0_H0 ), 
    .D1(\SinCos1/SLICE_2370/SinCos1/SLICE_2370_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE600) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF782) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2371 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2371/SinCos1/SLICE_2371_K1_H1 , 
         \SinCos1/SLICE_2371/SinCos1/triglut_1_0_16_0_H0 ;

  lut40166 \SinCos1/SLICE_2371_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2371/SinCos1/SLICE_2371_K1_H1 ));
  lut40167 \SinCos1/triglut_1_0_16_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2371/SinCos1/triglut_1_0_16_0_H0 ));
  selmux2 \SinCos1/SLICE_2371_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2371/SinCos1/triglut_1_0_16_0_H0 ), 
    .D1(\SinCos1/SLICE_2371/SinCos1/SLICE_2371_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDE7D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h80D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2372 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2372/SinCos1/SLICE_2372_K1_H1 , 
         \SinCos1/SLICE_2372/SinCos1/triglut_1_0_15_0_H0 ;

  lut40168 \SinCos1/SLICE_2372_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2372/SinCos1/SLICE_2372_K1_H1 ));
  lut40169 \SinCos1/triglut_1_0_15_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2372/SinCos1/triglut_1_0_15_0_H0 ));
  selmux2 \SinCos1/SLICE_2372_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2372/SinCos1/triglut_1_0_15_0_H0 ), 
    .D1(\SinCos1/SLICE_2372/SinCos1/SLICE_2372_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB556) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2373 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2373/SinCos1/SLICE_2373_K1_H1 , 
         \SinCos1/SLICE_2373/SinCos1/triglut_1_0_14_0_H0 ;

  lut40170 \SinCos1/SLICE_2373_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2373/SinCos1/SLICE_2373_K1_H1 ));
  lut40171 \SinCos1/triglut_1_0_14_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2373/SinCos1/triglut_1_0_14_0_H0 ));
  selmux2 \SinCos1/SLICE_2373_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2373/SinCos1/triglut_1_0_14_0_H0 ), 
    .D1(\SinCos1/SLICE_2373/SinCos1/SLICE_2373_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF990) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF600) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2374 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2374/SinCos1/SLICE_2374_K1_H1 , 
         \SinCos1/SLICE_2374/SinCos1/triglut_1_0_13_0_H0 ;

  lut40172 \SinCos1/SLICE_2374_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2374/SinCos1/SLICE_2374_K1_H1 ));
  lut40173 \SinCos1/triglut_1_0_13_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2374/SinCos1/triglut_1_0_13_0_H0 ));
  selmux2 \SinCos1/SLICE_2374_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2374/SinCos1/triglut_1_0_13_0_H0 ), 
    .D1(\SinCos1/SLICE_2374/SinCos1/SLICE_2374_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h47D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2375 ( input D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2375/SinCos1/SLICE_2375_K1_H1 , 
         \SinCos1/SLICE_2375/SinCos1/triglut_1_0_11_0_H0 ;

  lut40115 \SinCos1/SLICE_2375_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2375/SinCos1/SLICE_2375_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 \SinCos1/triglut_1_0_11_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2375/SinCos1/triglut_1_0_11_0_H0 ));
  selmux2 \SinCos1/SLICE_2375_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2375/SinCos1/triglut_1_0_11_0_H0 ), 
    .D1(\SinCos1/SLICE_2375/SinCos1/SLICE_2375_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2376 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2376/SinCos1/SLICE_2376_K1_H1 , 
         \SinCos1/SLICE_2376/SinCos1/triglut_1_0_10_0_H0 ;

  lut40175 \SinCos1/SLICE_2376_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SinCos1/SLICE_2376/SinCos1/SLICE_2376_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \SinCos1/triglut_1_0_10_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2376/SinCos1/triglut_1_0_10_0_H0 ));
  selmux2 \SinCos1/SLICE_2376_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2376/SinCos1/triglut_1_0_10_0_H0 ), 
    .D1(\SinCos1/SLICE_2376/SinCos1/SLICE_2376_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1515) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2377 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2377/SinCos1/SLICE_2377_K1_H1 , 
         \SinCos1/SLICE_2377/SinCos1/triglut_1_0_9_0_H0 ;

  lut40155 \SinCos1/SLICE_2377_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2377/SinCos1/SLICE_2377_K1_H1 ));
  lut40176 \SinCos1/triglut_1_0_9_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2377/SinCos1/triglut_1_0_9_0_H0 ));
  selmux2 \SinCos1/SLICE_2377_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2377/SinCos1/triglut_1_0_9_0_H0 ), 
    .D1(\SinCos1/SLICE_2377/SinCos1/SLICE_2377_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2378 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2378/SinCos1/SLICE_2378_K1_H1 , 
         \SinCos1/SLICE_2378/SinCos1/triglut_1_0_8_0_H0 ;

  lut40177 \SinCos1/SLICE_2378_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2378/SinCos1/SLICE_2378_K1_H1 ));
  lut40178 \SinCos1/triglut_1_0_8_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2378/SinCos1/triglut_1_0_8_0_H0 ));
  selmux2 \SinCos1/SLICE_2378_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2378/SinCos1/triglut_1_0_8_0_H0 ), 
    .D1(\SinCos1/SLICE_2378/SinCos1/SLICE_2378_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A97) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD57E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2379 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2379/SinCos1/SLICE_2379_K1_H1 , 
         \SinCos1/SLICE_2379/SinCos1/triglut_1_0_7_0_H0 ;

  lut40179 \SinCos1/SLICE_2379_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2379/SinCos1/SLICE_2379_K1_H1 ));
  lut40180 \SinCos1/triglut_1_0_7_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2379/SinCos1/triglut_1_0_7_0_H0 ));
  selmux2 \SinCos1/SLICE_2379_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2379/SinCos1/triglut_1_0_7_0_H0 ), 
    .D1(\SinCos1/SLICE_2379/SinCos1/SLICE_2379_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h32C9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD7D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2380 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2380/SinCos1/SLICE_2380_K1_H1 , 
         \SinCos1/SLICE_2380/SinCos1/triglut_1_0_6_0_H0 ;

  lut40181 \SinCos1/SLICE_2380_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2380/SinCos1/SLICE_2380_K1_H1 ));
  lut40182 \SinCos1/triglut_1_0_6_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2380/SinCos1/triglut_1_0_6_0_H0 ));
  selmux2 \SinCos1/SLICE_2380_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2380/SinCos1/triglut_1_0_6_0_H0 ), 
    .D1(\SinCos1/SLICE_2380/SinCos1/SLICE_2380_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8DD6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2381 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2381/SinCos1/SLICE_2381_K1_H1 , 
         \SinCos1/SLICE_2381/SinCos1/triglut_1_0_5_0_H0 ;

  lut40183 \SinCos1/SLICE_2381_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2381/SinCos1/SLICE_2381_K1_H1 ));
  lut40184 \SinCos1/triglut_1_0_5_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2381/SinCos1/triglut_1_0_5_0_H0 ));
  selmux2 \SinCos1/SLICE_2381_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2381/SinCos1/triglut_1_0_5_0_H0 ), 
    .D1(\SinCos1/SLICE_2381/SinCos1/SLICE_2381_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC989) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBA5E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2382 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2382/SinCos1/SLICE_2382_K1_H1 , 
         \SinCos1/SLICE_2382/SinCos1/triglut_1_0_4_0_H0 ;

  lut40185 \SinCos1/SLICE_2382_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2382/SinCos1/SLICE_2382_K1_H1 ));
  lut40186 \SinCos1/triglut_1_0_4_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2382/SinCos1/triglut_1_0_4_0_H0 ));
  selmux2 \SinCos1/SLICE_2382_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2382/SinCos1/triglut_1_0_4_0_H0 ), 
    .D1(\SinCos1/SLICE_2382/SinCos1/SLICE_2382_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h07BE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h019C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2383 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2383/SinCos1/SLICE_2383_K1_H1 , 
         \SinCos1/SLICE_2383/SinCos1/triglut_1_0_3_0_H0 ;

  lut40187 \SinCos1/SLICE_2383_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2383/SinCos1/SLICE_2383_K1_H1 ));
  lut40188 \SinCos1/triglut_1_0_3_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2383/SinCos1/triglut_1_0_3_0_H0 ));
  selmux2 \SinCos1/SLICE_2383_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2383/SinCos1/triglut_1_0_3_0_H0 ), 
    .D1(\SinCos1/SLICE_2383/SinCos1/SLICE_2383_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF9EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2384 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2384/SinCos1/SLICE_2384_K1_H1 , 
         \SinCos1/SLICE_2384/SinCos1/triglut_1_0_2_0_H0 ;

  lut40189 \SinCos1/SLICE_2384_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2384/SinCos1/SLICE_2384_K1_H1 ));
  lut40190 \SinCos1/triglut_1_0_2_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2384/SinCos1/triglut_1_0_2_0_H0 ));
  selmux2 \SinCos1/SLICE_2384_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2384/SinCos1/triglut_1_0_2_0_H0 ), 
    .D1(\SinCos1/SLICE_2384/SinCos1/SLICE_2384_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDC44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAB6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2385 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2385/SinCos1/SLICE_2385_K1_H1 , 
         \SinCos1/SLICE_2385/SinCos1/triglut_1_0_1_0_H0 ;

  lut40191 \SinCos1/SLICE_2385_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2385/SinCos1/SLICE_2385_K1_H1 ));
  lut40192 \SinCos1/triglut_1_0_1_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2385/SinCos1/triglut_1_0_1_0_H0 ));
  selmux2 \SinCos1/SLICE_2385_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2385/SinCos1/triglut_1_0_1_0_H0 ), 
    .D1(\SinCos1/SLICE_2385/SinCos1/SLICE_2385_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h01BC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h267C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2386 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2386/SinCos1/SLICE_2386_K1_H1 , 
         \SinCos1/SLICE_2386/SinCos1/triglut_1_0_0_0_H0 ;

  lut40193 \SinCos1/SLICE_2386_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2386/SinCos1/SLICE_2386_K1_H1 ));
  lut40194 \SinCos1/triglut_1_0_0_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2386/SinCos1/triglut_1_0_0_0_H0 ));
  selmux2 \SinCos1/SLICE_2386_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2386/SinCos1/triglut_1_0_0_0_H0 ), 
    .D1(\SinCos1/SLICE_2386/SinCos1/SLICE_2386_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3C34) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAF88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2387 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i30_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40196 mux_378_i30_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDADA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFB0B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2388 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i44_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40196 mux_378_i44_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2389 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i28_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40196 mux_378_i28_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2390 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i23_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40196 mux_378_i23_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2391 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40196 mux_378_i8_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40195 mux_375_i8_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2392 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i9_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40197 mux_378_i9_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD0D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2393 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i42_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40196 mux_378_i42_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2394 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40198 mux_375_i36_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40199 mux_378_i36_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8585) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF606) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2395 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40198 mux_375_i39_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40199 mux_378_i39_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2396 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40200 i2964_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40201 i2745_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC4C4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_2397 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40202 \uart_tx1/i1_2_lut_4_lut_adj_56 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40203 \uart_tx1/i1_4_lut_adj_55 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2398 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40204 i1_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40205 i5890_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h001A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7377) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2399 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40206 i1_3_lut_rep_164_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40207 i5499_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2400 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i58_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40208 mux_378_i58_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2401 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40198 mux_375_i32_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40208 mux_378_i32_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2402 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i57_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40209 mux_378_i57_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2403 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40198 mux_375_i18_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40210 mux_378_i18_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2404 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i15_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40209 mux_378_i15_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2405 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i59_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40211 mux_378_i59_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2406 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i29_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40212 mux_378_i29_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF707) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2407 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40198 mux_375_i13_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40211 mux_378_i13_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2408 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \CIC1Sin/shift_right_31_i68_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \CIC1Sin/shift_right_31_i138_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2409 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \CIC1Sin/shift_right_31_i131_3_lut_4_lut_adj_47 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i61_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2410 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \CIC1Sin/shift_right_31_i132_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i62_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2411 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \CIC1Sin/shift_right_31_i133_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i63_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2412 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \CIC1Sin/shift_right_31_i134_3_lut_4_lut_adj_46 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i64_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2413 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \CIC1Sin/shift_right_31_i135_3_lut_4_lut_adj_45 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i65_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2414 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \CIC1Sin/shift_right_31_i136_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i66_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2415 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40068 \CIC1Sin/shift_right_31_i137_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40059 \CIC1Sin/shift_right_31_i67_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2416 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \CIC1Cos/shift_right_31_i67_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \CIC1Sin/shift_right_31_i137_3_lut_4_lut_adj_39 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2417 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \CIC1Cos/shift_right_31_i68_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \CIC1Sin/shift_right_31_i138_3_lut_4_lut_adj_40 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2418 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \CIC1Cos/shift_right_31_i65_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \CIC1Sin/shift_right_31_i135_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2419 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \CIC1Cos/shift_right_31_i66_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \CIC1Sin/shift_right_31_i136_3_lut_4_lut_adj_41 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2420 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \CIC1Cos/shift_right_31_i63_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \CIC1Sin/shift_right_31_i133_3_lut_4_lut_adj_42 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2421 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \CIC1Cos/shift_right_31_i64_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \CIC1Sin/shift_right_31_i134_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2422 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \CIC1Cos/shift_right_31_i61_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \CIC1Sin/shift_right_31_i131_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2423 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \CIC1Cos/shift_right_31_i62_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \CIC1Sin/shift_right_31_i132_3_lut_4_lut_adj_43 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2424 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40213 \PWM1/i5915_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \PWM1/i5_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2425 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40214 mux_367_i12_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40215 mux_378_i12_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2426 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40123 \uart_tx1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40214 mux_367_i8_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2427 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 i2842_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40216 mux_378_i33_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCD0D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2428 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \i6034/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40214 mux_367_i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2429 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 i2852_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40217 mux_378_i46_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40217 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF636) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2430 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 i2840_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40217 mux_378_i31_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2431 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 i2854_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40218 mux_378_i48_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40218 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF434) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2432 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \i6032/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40214 mux_367_i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2433 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40205 i5897_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40200 i5907_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2434 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40219 i2800_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40214 mux_367_i53_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40219 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB3F3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2435 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40220 mux_367_i14_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40202 \uart_tx1/i1679_2_lut_rep_160_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40220 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_2436 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40221 \uart_tx1/i2991_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40222 \uart_tx1/i72_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40221 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40222 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_2437 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40223 \uart_tx1/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \uart_tx1/i1_4_lut_adj_59 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40223 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2438 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \i6030/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40214 mux_367_i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2439 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40224 i5863_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40207 i5867_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40224 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2440 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 i2845_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40225 mux_378_i38_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40225 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCB0B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2441 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40226 i1_3_lut_adj_62( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40227 i5892_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40226 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40227 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2442 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40228 i2815_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40220 mux_367_i54_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40228 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C8C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2443 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40229 mux_378_i51_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40214 mux_367_i51_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40229 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE3E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2444 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40230 mux_378_i52_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40214 mux_367_i52_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40230 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC707) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2445 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \i6066/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40231 mux_367_i49_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40231 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2446 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \i6024/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40232 mux_378_i4_4_lut_else_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40232 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6240) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2447 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40233 mux_378_i50_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40214 mux_367_i50_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40233 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2448 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40234 mux_378_i47_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40231 mux_367_i47_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40234 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h85A5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2449 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \i6064/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40214 mux_367_i45_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2450 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \i6048/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40235 mux_378_i20_4_lut_then_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40235 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9DBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2451 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 \SinCos1/LUT4_1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \SinCos1/muxb_57/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2452 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40236 mux_378_i41_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40231 mux_367_i41_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9A1A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2453 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40119 i1_2_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40237 mux_367_i63_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40237 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2454 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40238 i2799_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40231 mux_367_i40_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2455 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40195 mux_375_i61_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 mux_367_i61_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2456 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40239 i2699_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40214 mux_367_i37_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40239 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF377) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2457 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40240 \CIC1Sin/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \CIC1Sin/i4_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40240 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2458 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 \CIC1Sin/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 \CIC1Sin/i5855_4_lut_rep_195 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2459 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40061 \CIC1Sin/i5855_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \CIC1Sin/i5789_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2460 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 i1_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40213 i5912_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2461 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40241 i1_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40242 mux_367_i35_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40241 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7373) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40242 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5CF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2462 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \i6050/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40243 mux_378_i27_4_lut_then_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40243 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2463 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \i6056/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40244 mux_378_i27_4_lut_else_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2E3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2464 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40245 mux_378_i26_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 i1709_2_lut_rep_170( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40245 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5F5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2465 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 i2989_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40220 mux_367_i56_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2466 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40246 i1_3_lut_rep_174( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40246 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2467 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40219 i2798_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40214 mux_367_i25_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2468 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 i2977_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40220 mux_367_i21_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2469 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40247 mux_378_i17_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40214 mux_367_i17_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40247 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2470 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40215 mux_378_i16_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40231 mux_367_i16_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2471 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 \CIC1Cos/i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \CIC1Cos/i4_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2472 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Cos/i5779_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 \CIC1Cos/i5849_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2473 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40061 \CIC1Cos/i5849_4_lut_rep_197 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40248 \CIC1Cos/i5901_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_2474 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40240 \CIC1Cos/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \CIC1Cos/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2475 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40213 \uart_rx1/i5873_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40057 \uart_rx1/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2476 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40249 \uart_rx1/i1_4_lut_adj_27 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40116 \uart_rx1/i1_3_lut_rep_176 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40249 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3733) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2477 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40250 \uart_rx1/i1_4_lut_adj_28 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40251 \uart_rx1/i1_2_lut_rep_163_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40250 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40251 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2478 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40252 \uart_rx1/i1_2_lut_rep_157_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40224 \uart_rx1/i5875_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40252 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2479 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40253 \uart_rx1/i1_2_lut_rep_161_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40254 \uart_rx1/i5883_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40253 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40254 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2480 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \uart_rx1/i1103_2_lut_rep_167 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40206 \uart_rx1/i5887_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2481 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \uart_rx1/i1_2_lut_adj_25 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40255 \uart_rx1/i5904_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40255 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5455) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2482 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 \uart_rx1/i1_2_lut_adj_34 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \uart_rx1/i1_4_lut_adj_31 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_2483 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40256 \uart_tx1/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40257 \uart_tx1/i2361_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40256 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40257 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5501) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2484 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40258 i74_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40259 i33_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/o_Rx_Byte_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40258 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h083A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40259 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2830) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2485 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40260 mux_378_i49_4_lut_else_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40261 mux_378_i20_4_lut_else_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40260 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4062) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40261 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1D3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2486 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40262 mux_378_i49_4_lut_then_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40263 mux_378_i55_4_lut_then_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40262 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40263 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2487 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40264 \uart_rx1/i5880_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40213 \uart_rx1/i5846_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40264 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_2488 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40224 \uart_tx1/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40253 \uart_tx1/i5899_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2489 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40116 \uart_rx1/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40265 \uart_rx1/i5885_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40265 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2490 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 \uart_rx1/i1_4_lut_adj_32 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \uart_rx1/i1_2_lut_adj_33 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2491 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 \PWM1/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \PWM1/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2492 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40266 \uart_rx1/i2995_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \uart_rx1/i1_2_lut_adj_29 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40266 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2493 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40248 \CIC1Sin/i5857_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 \CIC1Sin/i5803_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2494 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40224 \uart_rx1/i5877_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40267 \uart_rx1/i1_4_lut_adj_26 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40267 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2495 ( input B1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40268 i1_2_lut_adj_63( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40119 i1_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/o_Rx_Byte_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40268 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2496 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40059 \SinCos1/muxb_55/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \SinCos1/muxb_54/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2497 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40214 mux_367_i28_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 i3_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2498 ( input D0, C0, B0, A0, output F0 );

  lut40056 \PWM1/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2499 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40057 i2823_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2500 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i9_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2501 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i10_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_2502 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40246 \uart_tx1/i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_2503 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40058 \uart_tx1/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2504 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2505 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40053 i2857_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2506 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40057 i2858_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2507 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40195 mux_375_i50_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2508 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i48_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2509 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i46_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2510 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i43_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2511 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i44_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2512 ( input D0, C0, B0, A0, output F0 );

  lut40269 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40269 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0322) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2513 ( input C0, B0, A0, M0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40059 \SinCos1/muxb_52/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_muxb_39_SLICE_2514 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40059 \SinCos1/muxb_39/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2515 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i42_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2516 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i39_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2517 ( input D0, C0, B0, A0, output F0 );

  lut40237 mux_367_i64_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2518 ( input D0, C0, B0, A0, output F0 );

  lut40237 mux_367_i62_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2519 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i59_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2520 ( input D0, C0, B0, A0, output F0 );

  lut40056 \CIC1Sin/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2521 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4815_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2522 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4809_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2523 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40058 \CIC1Sin/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2524 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4806_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2525 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40270 \CIC1Sin/i4816_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40270 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2526 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40059 \CIC1Sin/shift_right_31_i70_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2527 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4812_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2528 ( input D0, C0, B0, A0, output F0 );

  lut40237 mux_367_i60_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2529 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i57_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2530 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40057 i2844_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2531 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i38_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2532 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i58_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2533 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i36_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2534 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i55_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2535 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i33_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2536 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i34_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2537 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i31_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2538 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i32_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2539 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i29_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2540 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i30_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2541 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i27_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2542 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i26_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2543 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i23_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2544 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i24_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2545 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i22_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2546 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i19_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2547 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i20_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2548 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40053 i2828_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2549 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i18_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2550 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40058 i5489_2_lut_rep_172( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2551 ( input D0, C0, B0, A0, output F0 );

  lut40231 mux_367_i15_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2552 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40057 i2827_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2553 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i13_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_2554 ( input A0, output F0 );
  wire   GNDI;

  lut40054 \ncoGen/phase_accum_63__I_0_13_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2555 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40228 i2802_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2556 ( input D0, C0, B0, A0, output F0 );

  lut40214 mux_367_i11_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2557 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4791_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2558 ( input D0, C0, B0, A0, output F0 );

  lut40060 \CIC1Cos/i5801_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2559 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4803_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2560 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40058 \CIC1Cos/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2561 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4800_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2562 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4794_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2563 ( input D0, C0, B0, A0, output F0 );

  lut40056 \CIC1Cos/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2564 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40059 \CIC1Cos/shift_right_31_i70_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2565 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4797_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2566 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40271 \uart_rx1/i5870_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40271 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2567 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \uart_rx1/i24_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2568 ( input A0, output F0 );
  wire   GNDI;

  lut40054 \AMDemodulator1/d_out_d_11__I_1_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2569 ( input A0, output F0 );
  wire   GNDI;

  lut40054 \AMDemodulator1/d_out_d_11__I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2570 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40270 \AMDemodulator1/i4829_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2571 ( input A0, output F0 );
  wire   GNDI;

  lut40054 \AMDemodulator1/i1326_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2572 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t25 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40272 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_Multiplier2_SLICE_2573 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40053 \AMDemodulator1/Multiplier2/AND2_t24 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2574 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t22 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2575 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t19 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2576 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40053 \AMDemodulator1/Multiplier2/AND2_t18 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2577 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t16 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2578 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t13 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2579 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40053 \AMDemodulator1/Multiplier2/AND2_t12 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2580 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t10 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2581 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t9 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2582 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t8 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2583 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t7 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2584 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t6 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2585 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t5 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2586 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t4 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2587 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t3 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2588 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t2 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2589 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t1 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2590 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t0 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2591 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t26 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2592 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t23 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2593 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t20 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2594 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t17 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2595 ( input B0, A0, M0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t14 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_88 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2596 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier2/ND2_t11 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2597 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t25 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2598 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40053 \AMDemodulator1/Multiplier1/AND2_t24 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2599 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t22 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2600 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t19 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2601 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40053 \AMDemodulator1/Multiplier1/AND2_t18 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2602 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t16 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2603 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t13 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2604 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40053 \AMDemodulator1/Multiplier1/AND2_t12 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2605 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t10 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2606 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t9 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2607 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t8 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2608 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t7 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2609 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t6 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2610 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t5 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2611 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t4 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2612 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t3 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2613 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t2 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2614 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t1 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2615 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t0 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2616 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t26 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2617 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t23 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2618 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t20 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2619 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t17 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2620 ( input B0, A0, M0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t14 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_88 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2621 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40272 \AMDemodulator1/Multiplier1/ND2_t11 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2622 ( output F0 );
  wire   GNDI;

  lut40093 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_2623 ( output F0 );
  wire   GNDI;

  lut40115 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module o_Rx_Byte_6_ ( input PADDO, output oRxByte6 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_6( .I(PADDO), .T(GNDI), .PAD(oRxByte6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte6) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module o_Rx_Byte_5_ ( input PADDO, output oRxByte5 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_5( .I(PADDO), .T(GNDI), .PAD(oRxByte5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte5) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_7_ ( input PADDO, output oRxByte7 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_7( .I(PADDO), .T(GNDI), .PAD(oRxByte7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte7) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_DV ( input PADDO, output o_Rx_DV );
  wire   GNDI;

  xo2iobuf o_Rx_DV_pad( .I(PADDO), .T(GNDI), .PAD(o_Rx_DV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_Rx_DV) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Tx_Serial ( input PADDO, output o_Tx_Serial );
  wire   GNDI;

  xo2iobuf0273 o_Tx_Serial_pad( .I(PADDO), .T(GNDI), .PAD(o_Tx_Serial));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_Tx_Serial) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0273 ( input I, T, output PAD );

  OBZPU INST5( .I(I), .T(T), .O(PAD));
endmodule

module o_Rx_Byte_4_ ( input PADDO, output oRxByte4 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_4( .I(PADDO), .T(GNDI), .PAD(oRxByte4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte4) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_3_ ( input PADDO, output oRxByte3 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_3( .I(PADDO), .T(GNDI), .PAD(oRxByte3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte3) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_2_ ( input PADDO, output oRxByte2 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_2( .I(PADDO), .T(GNDI), .PAD(oRxByte2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte2) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_1_ ( input PADDO, output oRxByte1 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_1( .I(PADDO), .T(GNDI), .PAD(oRxByte1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte1) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_0_ ( input PADDO, output oRxByte0 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_0( .I(PADDO), .T(GNDI), .PAD(oRxByte0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_7_ ( input PADDO, output MYLED7 );
  wire   GNDI;

  xo2iobuf0274 MYLED_pad_7( .I(PADDO), .T(GNDI), .PAD(MYLED7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED7) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0274 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module MYLED_6_ ( input PADDO, output MYLED6 );
  wire   GNDI;

  xo2iobuf0274 MYLED_pad_6( .I(PADDO), .T(GNDI), .PAD(MYLED6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED6) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_5_ ( input PADDO, output MYLED5 );
  wire   GNDI;

  xo2iobuf0274 MYLED_pad_5( .I(PADDO), .T(GNDI), .PAD(MYLED5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED5) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_4_ ( input PADDO, output MYLED4 );
  wire   GNDI;

  xo2iobuf0274 MYLED_pad_4( .I(PADDO), .T(GNDI), .PAD(MYLED4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED4) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_3_ ( input PADDO, output MYLED3 );
  wire   GNDI;

  xo2iobuf0274 MYLED_pad_3( .I(PADDO), .T(GNDI), .PAD(MYLED3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED3) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_2_ ( input PADDO, output MYLED2 );
  wire   GNDI;

  xo2iobuf0274 MYLED_pad_2( .I(PADDO), .T(GNDI), .PAD(MYLED2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED2) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_1_ ( input PADDO, output MYLED1 );
  wire   GNDI;

  xo2iobuf0274 MYLED_pad_1( .I(PADDO), .T(GNDI), .PAD(MYLED1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED1) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_0_ ( input PADDO, output MYLED0 );
  wire   GNDI;

  xo2iobuf0274 MYLED_pad_0( .I(PADDO), .T(GNDI), .PAD(MYLED0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED0) = (0:0:0,0:0:0);
  endspecify

endmodule

module XOut ( input PADDO, output XOut );
  wire   GNDI;

  xo2iobuf XOut_pad( .I(PADDO), .T(GNDI), .PAD(XOut));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => XOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module DiffOut ( input PADDO, output DiffOut );
  wire   GNDI;

  xo2iobuf DiffOut_pad( .I(PADDO), .T(GNDI), .PAD(DiffOut));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => DiffOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOut ( input PADDO, output PWMOut );
  wire   GNDI;

  xo2iobuf PWMOut_pad( .I(PADDO), .T(GNDI), .PAD(PWMOut));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module sinGen ( input PADDO, output sinGen );
  wire   GNDI;

  xo2iobuf sinGen_pad( .I(PADDO), .T(GNDI), .PAD(sinGen));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sinGen) = (0:0:0,0:0:0);
  endspecify

endmodule

module sin_out ( input PADDO, output sin_out );
  wire   GNDI;

  xo2iobuf sin_out_pad( .I(PADDO), .T(GNDI), .PAD(sin_out));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sin_out) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC_out_clkSin ( input PADDO, output CIC_out_clkSin );
  wire   GNDI;

  xo2iobuf CIC_out_clkSin_pad( .I(PADDO), .T(GNDI), .PAD(CIC_out_clkSin));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => CIC_out_clkSin) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_Rx_Serial ( output PADDI, input i_Rx_Serial );

  xo2iobuf0275 i_Rx_Serial_pad( .Z(PADDI), .PAD(i_Rx_Serial));

  specify
    (i_Rx_Serial => PADDI) = (0:0:0,0:0:0);
    $width (posedge i_Rx_Serial, 0:0:0);
    $width (negedge i_Rx_Serial, 0:0:0);
  endspecify

endmodule

module xo2iobuf0275 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module XIn ( output PADDI, input XIn );

  xo2iobuf0276 XIn_pad( .Z(PADDI), .PAD(XIn));

  specify
    (XIn => PADDI) = (0:0:0,0:0:0);
    $width (posedge XIn, 0:0:0);
    $width (negedge XIn, 0:0:0);
  endspecify

endmodule

module xo2iobuf0276 ( output Z, input PAD );

  IBPU INST1( .I(PAD), .O(Z));
endmodule

module RFIn ( output PADDI, input RFIn );

  xo2iobuf0277 RFIn_pad( .Z(PADDI), .PAD(RFIn));

  specify
    (RFIn => PADDI) = (0:0:0,0:0:0);
    $width (posedge RFIn, 0:0:0);
    $width (negedge RFIn, 0:0:0);
  endspecify

endmodule

module xo2iobuf0277 ( output Z, input PAD );

  IB INST1( .I(PAD), .O(Z));
endmodule

module PLL1_PLLInst_0 ( input CLKI, CLKFB, output CLKOP );
  wire   GNDI;

  EHXPLLJ_B \PLL1/PLLInst_0_EHXPLLJ ( .CLKI(CLKI), .CLKFB(CLKFB), 
    .PHASESEL1(GNDI), .PHASESEL0(GNDI), .PHASEDIR(GNDI), .PHASESTEP(GNDI), 
    .LOADREG(GNDI), .STDBY(GNDI), .PLLWAKESYNC(GNDI), .RST(GNDI), 
    .RESETM(GNDI), .RESETC(GNDI), .RESETD(GNDI), .ENCLKOP(GNDI), 
    .ENCLKOS(GNDI), .ENCLKOS2(GNDI), .ENCLKOS3(GNDI), .PLLCLK(GNDI), 
    .PLLRST(GNDI), .PLLSTB(GNDI), .PLLWE(GNDI), .PLLDATI7(GNDI), 
    .PLLDATI6(GNDI), .PLLDATI5(GNDI), .PLLDATI4(GNDI), .PLLDATI3(GNDI), 
    .PLLDATI2(GNDI), .PLLDATI1(GNDI), .PLLDATI0(GNDI), .PLLADDR4(GNDI), 
    .PLLADDR3(GNDI), .PLLADDR2(GNDI), .PLLADDR1(GNDI), .PLLADDR0(GNDI), 
    .CLKOP(CLKOP), .CLKOS(), .CLKOS2(), .CLKOS3(), .LOCK(), .INTLOCK(), 
    .REFCLK(), .CLKINTFB(), .DPHSRC(), .PLLDATO7(), .PLLDATO6(), .PLLDATO5(), 
    .PLLDATO4(), .PLLDATO3(), .PLLDATO2(), .PLLDATO1(), .PLLDATO0(), .PLLACK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKI => CLKOP) = (0:0:0,0:0:0);
    (CLKFB => CLKOP) = (0:0:0,0:0:0);
  endspecify

endmodule

module EHXPLLJ_B ( input CLKI, CLKFB, PHASESEL1, PHASESEL0, PHASEDIR, 
    PHASESTEP, LOADREG, STDBY, PLLWAKESYNC, RST, RESETM, RESETC, RESETD, 
    ENCLKOP, ENCLKOS, ENCLKOS2, ENCLKOS3, PLLCLK, PLLRST, PLLSTB, PLLWE, 
    PLLDATI7, PLLDATI6, PLLDATI5, PLLDATI4, PLLDATI3, PLLDATI2, PLLDATI1, 
    PLLDATI0, PLLADDR4, PLLADDR3, PLLADDR2, PLLADDR1, PLLADDR0, output CLKOP, 
    CLKOS, CLKOS2, CLKOS3, LOCK, INTLOCK, REFCLK, CLKINTFB, DPHSRC, PLLDATO7, 
    PLLDATO6, PLLDATO5, PLLDATO4, PLLDATO3, PLLDATO2, PLLDATO1, PLLDATO0, 
    PLLACK );

  EHXPLLJ INST10( .CLKI(CLKI), .CLKFB(CLKFB), .PHASESEL1(PHASESEL1), 
    .PHASESEL0(PHASESEL0), .PHASEDIR(PHASEDIR), .PHASESTEP(PHASESTEP), 
    .LOADREG(LOADREG), .STDBY(STDBY), .PLLWAKESYNC(PLLWAKESYNC), .RST(RST), 
    .RESETM(RESETM), .RESETC(RESETC), .RESETD(RESETD), .ENCLKOP(ENCLKOP), 
    .ENCLKOS(ENCLKOS), .ENCLKOS2(ENCLKOS2), .ENCLKOS3(ENCLKOS3), 
    .PLLCLK(PLLCLK), .PLLRST(PLLRST), .PLLSTB(PLLSTB), .PLLWE(PLLWE), 
    .PLLADDR4(PLLADDR4), .PLLADDR3(PLLADDR3), .PLLADDR2(PLLADDR2), 
    .PLLADDR1(PLLADDR1), .PLLADDR0(PLLADDR0), .PLLDATI7(PLLDATI7), 
    .PLLDATI6(PLLDATI6), .PLLDATI5(PLLDATI5), .PLLDATI4(PLLDATI4), 
    .PLLDATI3(PLLDATI3), .PLLDATI2(PLLDATI2), .PLLDATI1(PLLDATI1), 
    .PLLDATI0(PLLDATI0), .CLKOP(CLKOP), .CLKOS(CLKOS), .CLKOS2(CLKOS2), 
    .CLKOS3(CLKOS3), .LOCK(LOCK), .REFCLK(REFCLK), .INTLOCK(INTLOCK), 
    .PLLDATO7(PLLDATO7), .PLLDATO6(PLLDATO6), .PLLDATO5(PLLDATO5), 
    .PLLDATO4(PLLDATO4), .PLLDATO3(PLLDATO3), .PLLDATO2(PLLDATO2), 
    .PLLDATO1(PLLDATO1), .PLLDATO0(PLLDATO0), .PLLACK(PLLACK), .DPHSRC(DPHSRC), 
    .CLKINTFB(CLKINTFB));
  defparam INST10.CLKFB_DIV = 10;
  defparam INST10.CLKI_DIV = 1;
  defparam INST10.CLKOP_CPHASE = 5;
  defparam INST10.CLKOP_DIV = 6;
  defparam INST10.CLKOP_ENABLE = "ENABLED";
  defparam INST10.CLKOP_FPHASE = 0;
  defparam INST10.CLKOP_TRIM_DELAY = 0;
  defparam INST10.CLKOP_TRIM_POL = "RISING";
  defparam INST10.CLKOS2_CPHASE = 0;
  defparam INST10.CLKOS2_DIV = 1;
  defparam INST10.CLKOS2_ENABLE = "DISABLED";
  defparam INST10.CLKOS2_FPHASE = 0;
  defparam INST10.CLKOS3_CPHASE = 0;
  defparam INST10.CLKOS3_DIV = 1;
  defparam INST10.CLKOS3_ENABLE = "DISABLED";
  defparam INST10.CLKOS3_FPHASE = 0;
  defparam INST10.CLKOS_CPHASE = 0;
  defparam INST10.CLKOS_DIV = 1;
  defparam INST10.CLKOS_ENABLE = "DISABLED";
  defparam INST10.CLKOS_FPHASE = 0;
  defparam INST10.CLKOS_TRIM_DELAY = 0;
  defparam INST10.CLKOS_TRIM_POL = "FALLING";
  defparam INST10.DCRST_ENA = "DISABLED";
  defparam INST10.DDRST_ENA = "DISABLED";
  defparam INST10.DPHASE_SOURCE = "DISABLED";
  defparam INST10.FEEDBK_PATH = "CLKOP";
  defparam INST10.FRACN_DIV = 0;
  defparam INST10.FRACN_ENABLE = "DISABLED";
  defparam INST10.INTFB_WAKE = "DISABLED";
  defparam INST10.MRST_ENA = "DISABLED";
  defparam INST10.OUTDIVIDER_MUXA2 = "DIVA";
  defparam INST10.OUTDIVIDER_MUXB2 = "DIVB";
  defparam INST10.OUTDIVIDER_MUXC2 = "DIVC";
  defparam INST10.OUTDIVIDER_MUXD2 = "DIVD";
  defparam INST10.PLLRST_ENA = "DISABLED";
  defparam INST10.PLL_LOCK_MODE = 0;
  defparam INST10.PLL_USE_WB = "DISABLED";
  defparam INST10.PREDIVIDER_MUXA1 = 0;
  defparam INST10.PREDIVIDER_MUXB1 = 0;
  defparam INST10.PREDIVIDER_MUXC1 = 0;
  defparam INST10.PREDIVIDER_MUXD1 = 0;
  defparam INST10.STDBY_ENABLE = "DISABLED";
  defparam INST10.VCO_BYPASS_A0 = "DISABLED";
  defparam INST10.VCO_BYPASS_B0 = "DISABLED";
  defparam INST10.VCO_BYPASS_C0 = "DISABLED";
  defparam INST10.VCO_BYPASS_D0 = "DISABLED";
endmodule
