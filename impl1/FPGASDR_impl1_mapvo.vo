
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.11.2.446

// ldbanno -n Verilog -o FPGASDR_impl1_mapvo.vo -w -neg -gui -msgset C:/Users/user/lattice/1BitADCFPGASDR/promote.xml FPGASDR_impl1_map.ncd 
// Netlist created on Sun Apr 05 22:59:53 2020
// Netlist written on Sun Apr 05 23:00:07 2020
// Design is for device LCMXO2-7000HE
// Design is for package TQFP144
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module top ( i_Rx_Serial, o_Tx_Serial, o_Rx_DV, o_Rx_Byte, MYLED, XOut, RFIn, 
             DiffOut, PWMOut, PWMOutP1, PWMOutP2, PWMOutP3, PWMOutP4, PWMOutN1, 
             PWMOutN2, PWMOutN3, PWMOutN4, sinGen, sin_out, CIC_out_clkSin );
  input  i_Rx_Serial, RFIn;
  output o_Tx_Serial, o_Rx_DV;
  output [7:0] o_Rx_Byte;
  output [7:0] MYLED;
  output XOut, DiffOut, PWMOut, PWMOutP1, PWMOutP2, PWMOutP3, PWMOutP4, 
         PWMOutN1, PWMOutN2, PWMOutN3, PWMOutN4, sinGen, sin_out, 
         CIC_out_clkSin;
  wire   \PWM1/counter_9 , \PWM1/n46 , osc_clk, \PWM1/n11802 , 
         \PWM1/counter_8 , \PWM1/counter_7 , \PWM1/n47 , \PWM1/n48 , 
         \PWM1/n11801 , \PWM1/counter_6 , \PWM1/counter_5 , \PWM1/n49 , 
         \PWM1/n50 , \PWM1/n11800 , \PWM1/counter_4 , \PWM1/counter_3 , 
         \PWM1/n51 , \PWM1/n52 , \PWM1/n11799 , \PWM1/counter_2 , 
         \PWM1/counter_1 , \PWM1/n53 , \PWM1/n54 , \PWM1/n11798 , 
         \PWM1/counter_0 , \PWM1/n55 , \PWM1/DataInReg_9 , 
         \PWM1/PWMOut_N_1869 , \PWM1/n11267 , PWMOutP4_c, \PWM1/DataInReg_8 , 
         \PWM1/DataInReg_7 , \PWM1/n11266 , \PWM1/DataInReg_6 , 
         \PWM1/DataInReg_5 , \PWM1/n11265 , \PWM1/DataInReg_4 , 
         \PWM1/DataInReg_3 , \PWM1/n11264 , \PWM1/DataInReg_2 , 
         \PWM1/DataInReg_1 , \PWM1/n11263 , \PWM1/DataInReg_0 , 
         \uart_rx1/UartClk[2] , \uart_rx1/n2 , \uart_rx1/n18 , \uart_rx1/n19 , 
         \uart_rx1/n11803 , \uart_rx1/n3_adj_2527 , \uart_rx1/n20 , 
         \uart_rx1/r_Clock_Count_15 , \uart_rx1/n70 , 
         \uart_rx1/UartClk_2_enable_23 , \uart_rx1/n8374 , \uart_rx1/n12406 , 
         \uart_rx1/r_Clock_Count_14 , \uart_rx1/r_Clock_Count_13 , 
         \uart_rx1/n71 , \uart_rx1/n72 , \uart_rx1/n12405 , 
         \uart_rx1/r_Clock_Count_12 , \uart_rx1/r_Clock_Count_11 , 
         \uart_rx1/n73 , \uart_rx1/n74 , \uart_rx1/n12404 , 
         \uart_rx1/r_Clock_Count_10 , \uart_rx1/r_Clock_Count_9 , 
         \uart_rx1/n75 , \uart_rx1/n76 , \uart_rx1/n12403 , 
         \uart_rx1/r_Clock_Count_8 , \uart_rx1/r_Clock_Count_7 , 
         \uart_rx1/n77 , \uart_rx1/n78 , \uart_rx1/n12402 , 
         \uart_rx1/r_Clock_Count_6 , \uart_rx1/r_Clock_Count_5 , 
         \uart_rx1/n79 , \uart_rx1/n80 , \uart_rx1/n12401 , 
         \uart_rx1/r_Clock_Count_4 , \uart_rx1/r_Clock_Count_3 , 
         \uart_rx1/n81 , \uart_rx1/n82 , \uart_rx1/n12400 , 
         \uart_rx1/r_Clock_Count_2 , \uart_rx1/r_Clock_Count_1 , 
         \uart_rx1/n83 , \uart_rx1/n84 , \uart_rx1/n12399 , 
         \uart_rx1/r_Clock_Count_0 , \uart_rx1/n85 , phase_inc_carrGen_63, 
         phase_inc_carrGen_62, n11340, n1073, n1072, phase_inc_carrGen_61, 
         phase_inc_carrGen_60, n11339, n1075, n1074, phase_inc_carrGen_59, 
         phase_inc_carrGen_58, n11338, n1077, n1076, phase_inc_carrGen_57, 
         phase_inc_carrGen_56, n11337, n1079, n1078, phase_inc_carrGen_55, 
         phase_inc_carrGen_54, n11336, n1081, n1080, phase_inc_carrGen_53, 
         phase_inc_carrGen_52, n11335, n1083, n1082, phase_inc_carrGen_51, 
         phase_inc_carrGen_50, n11334, n1085, n1084, phase_inc_carrGen_49, 
         phase_inc_carrGen_48, n11333, n1087, n1086, phase_inc_carrGen_47, 
         phase_inc_carrGen_46, n11332, n1089, n1088, phase_inc_carrGen_45, 
         phase_inc_carrGen_44, n11331, n1091, n1090, phase_inc_carrGen_43, 
         phase_inc_carrGen_42, n11330, n1093, n1092, phase_inc_carrGen_41, 
         phase_inc_carrGen_40, n11329, n1095, n1094, phase_inc_carrGen_39, 
         phase_inc_carrGen_38, n11328, n1097, n1096, phase_inc_carrGen_37, 
         phase_inc_carrGen_36, n11327, n1099, n1098, phase_inc_carrGen_35, 
         phase_inc_carrGen_34, n11326, n1101, n1100, phase_inc_carrGen_33, 
         phase_inc_carrGen_32, n11325, n1103, n1102, phase_inc_carrGen_31, 
         phase_inc_carrGen_30, n11324, n1105, n1104, phase_inc_carrGen_29, 
         phase_inc_carrGen_28, n11323, n1107, n1106, phase_inc_carrGen_27, 
         phase_inc_carrGen_26, n11322, n1109, n1108, phase_inc_carrGen_25, 
         phase_inc_carrGen_24, n11321, n1111, n1110, phase_inc_carrGen_23, 
         phase_inc_carrGen_22, n11320, n1113, n1112, phase_inc_carrGen_21, 
         phase_inc_carrGen_20, n11319, n1115, n1114, phase_inc_carrGen_19, 
         phase_inc_carrGen_18, n11318, n1117, n1116, phase_inc_carrGen_17, 
         phase_inc_carrGen_16, n11317, n1119, n1118, phase_inc_carrGen_15, 
         phase_inc_carrGen_14, n11316, n1121, n1120, phase_inc_carrGen_13, 
         phase_inc_carrGen_12, n11315, n1123, n1122, phase_inc_carrGen_11, 
         phase_inc_carrGen_10, n11314, n1125, n1124, phase_inc_carrGen_9, 
         phase_inc_carrGen_8, n11313, n1127, n1126, phase_inc_carrGen_7, 
         phase_inc_carrGen_6, n11312, n1129, n1128, phase_inc_carrGen_5, 
         phase_inc_carrGen_4, n11311, n1131, n1130, phase_inc_carrGen_3, 
         phase_inc_carrGen_2, n11310, n1133, n1132, phase_inc_carrGen_1, n1134, 
         n8016, n9000, n3614, n8014, n2797, n2798, osc_clk_enable_1457, n11302, 
         n8012, n2282, n2799, n2800, n11301, n2283, n2284, n2801, n2802, 
         n11300, n2285, n2286, n2803, n2804, n11299, n2287, n2288, n2805, 
         n2806, n11298, n2289, n8010, n2807, n2808, osc_clk_enable_1447, 
         n11297, n2291, n2292, n3628, n2809, n2810, n11296, n2293, n2294, 
         n2811, n2812, n11295, n2295, n3632, n2296, n2813, n2814, n11294, 
         n2297, n2298, n2815, n2816, n11293, n2299, n3653, n2300, n2817, n2818, 
         n11292, n8008, n2302, n2819, n2820, n11291, n2303, n2304, n2821, 
         n2822, n11290, o_Rx_Byte_c_4, n2795, n9527, n2306, n2823, n2824, 
         n11289, n2307, n2308, n2825, n2826, n11288, n9535, n2310, n2827, 
         n2828, n11287, n2311, n3663, n2312, n2829, n2830, n11286, n2313, 
         n2314, n2831, n2832, n11285, n9547, n2316, n2833, n2834, n11284, 
         n2317, n2318, n2835, n2836, n11283, n2319, n2320, n2837, n2838, 
         n11282, n2321, n2322, n2839, n2840, n11281, n9563, n2324, n2841, 
         n2842, n11280, n8004, n2326, n2843, n2844, n11279, n9571, n2328, 
         n2845, n2846, n11278, n8002, n2330, n2847, n2848, n11277, n2331, 
         n2332, n2849, n2850, n11276, n2333, n2334, n2851, n2852, n11275, 
         n13411, n9589, n2853, n2854, n11274, n9591, n9593, n2855, n2856, 
         n11273, n2339, n2340, n2857, n2858, osc_clk_enable_1397, n11272, 
         n2341, phase_inc_carrGen_0, n2608, n2860, osc_clk_enable_128, n11271, 
         n2859, n11129, n1011, n11128, n1013, n1012, n11127, n1015, n1014, 
         n11126, n1017, n1016, n11125, n1019, n1018, n11124, n1021, n1020, 
         n11123, n1023, n1022, n11122, n1025, n1024, n11121, n1027, n1026, 
         n11120, n1029, n1028, n11119, n1031, n1030, n11118, n1033, n1032, 
         n11117, n1035, n1034, n11116, n1037, n1036, n11115, n1039, n1038, 
         n11114, n1041, n1040, n11113, n1043, n1042, n11112, n1045, n1044, 
         n11111, n1047, n1046, n11110, n1049, n1048, n11109, n1051, n1050, 
         n11108, n1053, n1052, n11107, n1055, n1054, n11106, n1057, n1056, 
         n11105, n1059, n1058, n11104, n1061, n1060, n11103, n1063, n1062, 
         n11102, n1065, n1064, n11101, n1067, n1066, n11100, n1069, n1068, 
         n1070, \SinCos1/rom_addr0_r , phase_accum_56, \SinCos1/rom_addr0_r_n , 
         \SinCos1/co0 , \SinCos1/rom_addr0_r_2 , \SinCos1/rom_addr0_r_1 , 
         phase_accum_58, \SinCos1/rom_addr0_r_n_1 , \SinCos1/rom_addr0_r_n_2 , 
         \SinCos1/co1 , \SinCos1/rom_addr0_r_4 , \SinCos1/rom_addr0_r_3 , 
         phase_accum_60, \SinCos1/rom_addr0_r_n_3 , \SinCos1/rom_addr0_r_n_4 , 
         \SinCos1/co2 , \SinCos1/rom_addr0_r_5 , \SinCos1/rom_addr0_r_n_5 , 
         \SinCos1/rom_dout_2 , \SinCos1/rom_dout_1 , \SinCos1/co0_1 , 
         \SinCos1/rom_dout_s_n_1 , \SinCos1/rom_dout_s_n_2 , \SinCos1/co1_1 , 
         \SinCos1/rom_dout_4 , \SinCos1/rom_dout_3 , \SinCos1/rom_dout_s_n_3 , 
         \SinCos1/rom_dout_s_n_4 , \SinCos1/co2_1 , \SinCos1/rom_dout_6 , 
         \SinCos1/rom_dout_5 , \SinCos1/rom_dout_s_n_5 , 
         \SinCos1/rom_dout_s_n_6 , \SinCos1/co3 , \SinCos1/rom_dout_8 , 
         \SinCos1/rom_dout_7 , \SinCos1/rom_dout_s_n_7 , 
         \SinCos1/rom_dout_s_n_8 , \SinCos1/co4 , \SinCos1/rom_dout_10 , 
         \SinCos1/rom_dout_9 , \SinCos1/rom_dout_s_n_9 , 
         \SinCos1/rom_dout_s_n_10 , \SinCos1/co5 , \SinCos1/rom_dout_12 , 
         \SinCos1/rom_dout_11 , \SinCos1/rom_dout_s_n_11 , 
         \SinCos1/rom_dout_s_n_12 , \SinCos1/rom_dout_13 , \SinCos1/co0_2 , 
         \SinCos1/rom_dout_15 , \SinCos1/rom_dout_14 , 
         \SinCos1/rom_dout_c_n_1 , \SinCos1/rom_dout_c_n_2 , \SinCos1/co1_2 , 
         \SinCos1/rom_dout_17 , \SinCos1/rom_dout_16 , 
         \SinCos1/rom_dout_c_n_3 , \SinCos1/rom_dout_c_n_4 , \SinCos1/co2_2 , 
         \SinCos1/rom_dout_19 , \SinCos1/rom_dout_18 , 
         \SinCos1/rom_dout_c_n_5 , \SinCos1/rom_dout_c_n_6 , \SinCos1/co3_1 , 
         \SinCos1/rom_dout_21 , \SinCos1/rom_dout_20 , 
         \SinCos1/rom_dout_c_n_7 , \SinCos1/rom_dout_c_n_8 , \SinCos1/co4_1 , 
         \SinCos1/rom_dout_23 , \SinCos1/rom_dout_22 , 
         \SinCos1/rom_dout_c_n_9 , \SinCos1/rom_dout_c_n_10 , \SinCos1/co5_1 , 
         \SinCos1/rom_dout_25 , \SinCos1/rom_dout_24 , 
         \SinCos1/rom_dout_c_n_11 , \SinCos1/rom_dout_c_n_12 , 
         \SinCos1/rom_dout , LOCosine_12, \Mixer1/n11347 , 
         \Mixer1/MixerOutCos_11_N_250_11 , LOCosine_11, LOCosine_10, 
         \Mixer1/n11346 , \Mixer1/MixerOutCos_11_N_250_9 , 
         \Mixer1/MixerOutCos_11_N_250_10 , LOCosine_9, LOCosine_8, 
         \Mixer1/n11345 , \Mixer1/MixerOutCos_11_N_250_7 , 
         \Mixer1/MixerOutCos_11_N_250_8 , LOCosine_7, LOCosine_6, 
         \Mixer1/n11344 , \Mixer1/MixerOutCos_11_N_250_5 , 
         \Mixer1/MixerOutCos_11_N_250_6 , LOCosine_5, LOCosine_4, 
         \Mixer1/n11343 , \Mixer1/MixerOutCos_11_N_250_3 , 
         \Mixer1/MixerOutCos_11_N_250_4 , LOCosine_3, LOCosine_2, 
         \Mixer1/n11342 , \Mixer1/MixerOutCos_11_N_250_1 , 
         \Mixer1/MixerOutCos_11_N_250_2 , LOCosine_1, 
         \Mixer1/MixerOutCos_11_N_250_0 , LOSine_12, \Mixer1/n11309 , 
         \Mixer1/MixerOutSin_11_N_236_11 , LOSine_11, LOSine_10, 
         \Mixer1/n11308 , \Mixer1/MixerOutSin_11_N_236_9 , 
         \Mixer1/MixerOutSin_11_N_236_10 , LOSine_9, LOSine_8, \Mixer1/n11307 , 
         \Mixer1/MixerOutSin_11_N_236_7 , \Mixer1/MixerOutSin_11_N_236_8 , 
         LOSine_7, LOSine_6, \Mixer1/n11306 , \Mixer1/MixerOutSin_11_N_236_5 , 
         \Mixer1/MixerOutSin_11_N_236_6 , LOSine_5, LOSine_4, \Mixer1/n11305 , 
         \Mixer1/MixerOutSin_11_N_236_3 , \Mixer1/MixerOutSin_11_N_236_4 , 
         LOSine_3, LOSine_2, \Mixer1/n11304 , \Mixer1/MixerOutSin_11_N_236_1 , 
         \Mixer1/MixerOutSin_11_N_236_2 , LOSine_1, 
         \Mixer1/MixerOutSin_11_N_236_0 , phase_inc_carrGen1_63, 
         phase_accum_63, phase_inc_carrGen1_62, phase_accum_62, 
         \ncoGen/phase_accum_63_N_146_63 , \ncoGen/phase_accum_63_N_146_62 , 
         \ncoGen/n10985 , phase_inc_carrGen1_61, phase_accum_61, 
         phase_inc_carrGen1_60, \ncoGen/phase_accum_63_N_146_61 , 
         \ncoGen/phase_accum_63_N_146_60 , \ncoGen/n10984 , 
         phase_inc_carrGen1_59, phase_accum_59, phase_inc_carrGen1_58, 
         \ncoGen/phase_accum_63_N_146_59 , \ncoGen/phase_accum_63_N_146_58 , 
         \ncoGen/n10983 , phase_inc_carrGen1_57, phase_accum_57, 
         phase_inc_carrGen1_56, \ncoGen/phase_accum_63_N_146_57 , 
         \ncoGen/phase_accum_63_N_146_56 , \ncoGen/n10982 , 
         phase_inc_carrGen1_55, \ncoGen/phase_accum_55 , phase_inc_carrGen1_54, 
         \ncoGen/phase_accum_54 , \ncoGen/phase_accum_63_N_146_55 , 
         \ncoGen/phase_accum_63_N_146_54 , \ncoGen/n10981 , 
         phase_inc_carrGen1_53, \ncoGen/phase_accum_53 , phase_inc_carrGen1_52, 
         \ncoGen/phase_accum_52 , \ncoGen/phase_accum_63_N_146_53 , 
         \ncoGen/phase_accum_63_N_146_52 , \ncoGen/n10980 , 
         phase_inc_carrGen1_51, \ncoGen/phase_accum_51 , phase_inc_carrGen1_50, 
         \ncoGen/phase_accum_50 , \ncoGen/phase_accum_63_N_146_51 , 
         \ncoGen/phase_accum_63_N_146_50 , \ncoGen/n10979 , 
         phase_inc_carrGen1_49, \ncoGen/phase_accum_49 , phase_inc_carrGen1_48, 
         \ncoGen/phase_accum_48 , \ncoGen/phase_accum_63_N_146_49 , 
         \ncoGen/phase_accum_63_N_146_48 , \ncoGen/n10978 , 
         phase_inc_carrGen1_47, \ncoGen/phase_accum_47 , phase_inc_carrGen1_46, 
         \ncoGen/phase_accum_46 , \ncoGen/phase_accum_63_N_146_47 , 
         \ncoGen/phase_accum_63_N_146_46 , \ncoGen/n10977 , 
         phase_inc_carrGen1_45, \ncoGen/phase_accum_45 , phase_inc_carrGen1_44, 
         \ncoGen/phase_accum_44 , \ncoGen/phase_accum_63_N_146_45 , 
         \ncoGen/phase_accum_63_N_146_44 , \ncoGen/n10976 , 
         phase_inc_carrGen1_43, \ncoGen/phase_accum_43 , phase_inc_carrGen1_42, 
         \ncoGen/phase_accum_42 , \ncoGen/phase_accum_63_N_146_43 , 
         \ncoGen/phase_accum_63_N_146_42 , \ncoGen/n10975 , 
         phase_inc_carrGen1_41, \ncoGen/phase_accum_41 , phase_inc_carrGen1_40, 
         \ncoGen/phase_accum_40 , \ncoGen/phase_accum_63_N_146_41 , 
         \ncoGen/phase_accum_63_N_146_40 , \ncoGen/n10974 , 
         phase_inc_carrGen1_39, \ncoGen/phase_accum_39 , phase_inc_carrGen1_38, 
         \ncoGen/phase_accum_38 , \ncoGen/phase_accum_63_N_146_39 , 
         \ncoGen/phase_accum_63_N_146_38 , \ncoGen/n10973 , 
         phase_inc_carrGen1_37, \ncoGen/phase_accum_37 , phase_inc_carrGen1_36, 
         \ncoGen/phase_accum_36 , \ncoGen/phase_accum_63_N_146_37 , 
         \ncoGen/phase_accum_63_N_146_36 , \ncoGen/n10972 , 
         phase_inc_carrGen1_35, \ncoGen/phase_accum_35 , phase_inc_carrGen1_34, 
         \ncoGen/phase_accum_34 , \ncoGen/phase_accum_63_N_146_35 , 
         \ncoGen/phase_accum_63_N_146_34 , \ncoGen/n10971 , 
         phase_inc_carrGen1_33, \ncoGen/phase_accum_33 , phase_inc_carrGen1_32, 
         \ncoGen/phase_accum_32 , \ncoGen/phase_accum_63_N_146_33 , 
         \ncoGen/phase_accum_63_N_146_32 , \ncoGen/n10970 , 
         phase_inc_carrGen1_31, \ncoGen/phase_accum_31 , phase_inc_carrGen1_30, 
         \ncoGen/phase_accum_30 , \ncoGen/phase_accum_63_N_146_31 , 
         \ncoGen/phase_accum_63_N_146_30 , \ncoGen/n10969 , 
         phase_inc_carrGen1_29, \ncoGen/phase_accum_29 , phase_inc_carrGen1_28, 
         \ncoGen/phase_accum_28 , \ncoGen/phase_accum_63_N_146_29 , 
         \ncoGen/phase_accum_63_N_146_28 , \ncoGen/n10968 , 
         phase_inc_carrGen1_27, \ncoGen/phase_accum_27 , phase_inc_carrGen1_26, 
         \ncoGen/phase_accum_26 , \ncoGen/phase_accum_63_N_146_27 , 
         \ncoGen/phase_accum_63_N_146_26 , \ncoGen/n10967 , 
         phase_inc_carrGen1_25, \ncoGen/phase_accum_25 , phase_inc_carrGen1_24, 
         \ncoGen/phase_accum_24 , \ncoGen/phase_accum_63_N_146_25 , 
         \ncoGen/phase_accum_63_N_146_24 , \ncoGen/n10966 , 
         phase_inc_carrGen1_23, \ncoGen/phase_accum_23 , phase_inc_carrGen1_22, 
         \ncoGen/phase_accum_22 , \ncoGen/phase_accum_63_N_146_23 , 
         \ncoGen/phase_accum_63_N_146_22 , \ncoGen/n10965 , 
         phase_inc_carrGen1_21, \ncoGen/phase_accum_21 , phase_inc_carrGen1_20, 
         \ncoGen/phase_accum_20 , \ncoGen/phase_accum_63_N_146_21 , 
         \ncoGen/phase_accum_63_N_146_20 , \ncoGen/n10964 , 
         phase_inc_carrGen1_19, \ncoGen/phase_accum_19 , phase_inc_carrGen1_18, 
         \ncoGen/phase_accum_18 , \ncoGen/phase_accum_63_N_146_19 , 
         \ncoGen/phase_accum_63_N_146_18 , \ncoGen/n10963 , 
         phase_inc_carrGen1_17, \ncoGen/phase_accum_17 , phase_inc_carrGen1_16, 
         \ncoGen/phase_accum_16 , \ncoGen/phase_accum_63_N_146_17 , 
         \ncoGen/phase_accum_63_N_146_16 , \ncoGen/n10962 , 
         phase_inc_carrGen1_15, \ncoGen/phase_accum_15 , phase_inc_carrGen1_14, 
         \ncoGen/phase_accum_14 , \ncoGen/phase_accum_63_N_146_15 , 
         \ncoGen/phase_accum_63_N_146_14 , \ncoGen/n10961 , 
         phase_inc_carrGen1_13, \ncoGen/phase_accum_13 , phase_inc_carrGen1_12, 
         \ncoGen/phase_accum_12 , \ncoGen/phase_accum_63_N_146_13 , 
         \ncoGen/phase_accum_63_N_146_12 , \ncoGen/n10960 , 
         phase_inc_carrGen1_11, \ncoGen/phase_accum_11 , phase_inc_carrGen1_10, 
         \ncoGen/phase_accum_10 , \ncoGen/phase_accum_63_N_146_11 , 
         \ncoGen/phase_accum_63_N_146_10 , \ncoGen/n10959 , 
         phase_inc_carrGen1_9, \ncoGen/phase_accum_9 , phase_inc_carrGen1_8, 
         \ncoGen/phase_accum_8 , \ncoGen/phase_accum_63_N_146_9 , 
         \ncoGen/phase_accum_63_N_146_8 , \ncoGen/n10958 , 
         phase_inc_carrGen1_7, \ncoGen/phase_accum_7 , phase_inc_carrGen1_6, 
         \ncoGen/phase_accum_6 , \ncoGen/phase_accum_63_N_146_7 , 
         \ncoGen/phase_accum_63_N_146_6 , \ncoGen/n10957 , 
         phase_inc_carrGen1_5, \ncoGen/phase_accum_5 , phase_inc_carrGen1_4, 
         \ncoGen/phase_accum_4 , \ncoGen/phase_accum_63_N_146_5 , 
         \ncoGen/phase_accum_63_N_146_4 , \ncoGen/n10956 , 
         phase_inc_carrGen1_3, \ncoGen/phase_accum_3 , phase_inc_carrGen1_2, 
         \ncoGen/phase_accum_2 , \ncoGen/phase_accum_63_N_146_3 , 
         \ncoGen/phase_accum_63_N_146_2 , \ncoGen/n10955 , 
         phase_inc_carrGen1_1, \ncoGen/phase_accum_1 , phase_inc_carrGen1_0, 
         \ncoGen/phase_accum_0 , \ncoGen/phase_accum_63_N_146_1 , 
         MixerOutSin_11, \CIC1Sin/n4292 , \CIC1Sin/n4276 , \CIC1Sin/d1_57 , 
         \CIC1Sin/n4293 , \CIC1Sin/d1_56 , \CIC1Sin/d1_71_N_418_57 , 
         \CIC1Sin/d1_71_N_418_56 , \CIC1Sin/n12263 , \CIC1Sin/n12264 , 
         \CIC1Sin/d_d9_70 , \CIC1Sin/d9_70 , \CIC1Sin/d_d9_69 , 
         \CIC1Sin/d9_69 , \CIC1Sin/n11839 , \CIC1Sin/n5952 , \CIC1Sin/n5951 , 
         \CIC1Sin/n11840 , \CIC1Sin/d_d9_54 , \CIC1Sin/d9_54 , 
         \CIC1Sin/d_d9_53 , \CIC1Sin/d9_53 , \CIC1Sin/n11831 , 
         \CIC1Sin/n11832 , \CIC1Sin/d_d9_10 , \CIC1Sin/d9_10 , 
         \CIC1Sin/d_d9_9 , \CIC1Sin/d9_9 , \CIC1Sin/n11628 , \CIC1Sin/n11629 , 
         \CIC1Sin/n4294 , \CIC1Sin/d1_55 , \CIC1Sin/n4295 , \CIC1Sin/d1_54 , 
         \CIC1Sin/d1_71_N_418_55 , \CIC1Sin/d1_71_N_418_54 , \CIC1Sin/n12262 , 
         \CIC1Sin/n4296 , \CIC1Sin/d1_53 , \CIC1Sin/n4297 , \CIC1Sin/d1_52 , 
         \CIC1Sin/d1_71_N_418_53 , \CIC1Sin/d1_71_N_418_52 , \CIC1Sin/n12261 , 
         \CIC1Sin/n4298 , \CIC1Sin/d1_51 , \CIC1Sin/n4299 , \CIC1Sin/d1_50 , 
         \CIC1Sin/d1_71_N_418_51 , \CIC1Sin/d1_71_N_418_50 , \CIC1Sin/n12260 , 
         \CIC1Sin/n4300 , \CIC1Sin/d1_49 , \CIC1Sin/n4301 , \CIC1Sin/d1_48 , 
         \CIC1Sin/d1_71_N_418_49 , \CIC1Sin/d1_71_N_418_48 , \CIC1Sin/n12259 , 
         \CIC1Sin/n4302 , \CIC1Sin/d1_47 , \CIC1Sin/n4303 , \CIC1Sin/d1_46 , 
         \CIC1Sin/d1_71_N_418_47 , \CIC1Sin/d1_71_N_418_46 , \CIC1Sin/n12258 , 
         \CIC1Sin/n4304 , \CIC1Sin/d1_45 , \CIC1Sin/n4305 , \CIC1Sin/d1_44 , 
         \CIC1Sin/d1_71_N_418_45 , \CIC1Sin/d1_71_N_418_44 , \CIC1Sin/n12257 , 
         \CIC1Sin/n4306 , \CIC1Sin/d1_43 , \CIC1Sin/n4307 , \CIC1Sin/d1_42 , 
         \CIC1Sin/d1_71_N_418_43 , \CIC1Sin/d1_71_N_418_42 , \CIC1Sin/n12256 , 
         \CIC1Sin/n4308 , \CIC1Sin/d1_41 , \CIC1Sin/n4309 , \CIC1Sin/d1_40 , 
         \CIC1Sin/d1_71_N_418_41 , \CIC1Sin/d1_71_N_418_40 , \CIC1Sin/n12255 , 
         \CIC1Sin/n4310 , \CIC1Sin/d1_39 , \CIC1Sin/n4311 , \CIC1Sin/d1_38 , 
         \CIC1Sin/d1_71_N_418_39 , \CIC1Sin/d1_71_N_418_38 , \CIC1Sin/n12254 , 
         \CIC1Sin/n4312 , \CIC1Sin/d1_37 , \CIC1Sin/n4313 , \CIC1Sin/d1_36 , 
         \CIC1Sin/d1_71_N_418_37 , \CIC1Sin/d1_71_N_418_36 , \CIC1Sin/n12253 , 
         \CIC1Sin/d_d9_8 , \CIC1Sin/d9_8 , \CIC1Sin/d_d9_7 , \CIC1Sin/d9_7 , 
         \CIC1Sin/n11627 , \CIC1Sin/d_d9_6 , \CIC1Sin/d9_6 , \CIC1Sin/d_d9_5 , 
         \CIC1Sin/d9_5 , \CIC1Sin/n11626 , \CIC1Sin/d_d9_4 , \CIC1Sin/d9_4 , 
         \CIC1Sin/d_d9_3 , \CIC1Sin/d9_3 , \CIC1Sin/n11625 , \CIC1Sin/d_d9_2 , 
         \CIC1Sin/d9_2 , \CIC1Sin/d_d9_1 , \CIC1Sin/d9_1 , \CIC1Sin/n11624 , 
         \CIC1Sin/d_d9_0 , \CIC1Sin/d9_0 , \CIC1Sin/d_d8_71 , \CIC1Sin/d8_71 , 
         \CIC1Sin/n11880 , \CIC1Sin/n5798 , \CIC1Sin/d_d8_70 , \CIC1Sin/d8_70 , 
         \CIC1Sin/d_d8_69 , \CIC1Sin/d8_69 , \CIC1Sin/n11879 , \CIC1Sin/n5800 , 
         \CIC1Sin/n5799 , \CIC1Sin/d_d8_68 , \CIC1Sin/d8_68 , 
         \CIC1Sin/d_d8_67 , \CIC1Sin/d8_67 , \CIC1Sin/n11878 , \CIC1Sin/n5802 , 
         \CIC1Sin/n5801 , \CIC1Sin/d_d8_66 , \CIC1Sin/d8_66 , 
         \CIC1Sin/d_d8_65 , \CIC1Sin/d8_65 , \CIC1Sin/n11877 , \CIC1Sin/n5804 , 
         \CIC1Sin/n5803 , \CIC1Sin/d_d8_64 , \CIC1Sin/d8_64 , 
         \CIC1Sin/d_d8_63 , \CIC1Sin/d8_63 , \CIC1Sin/n11876 , \CIC1Sin/n5806 , 
         \CIC1Sin/n5805 , \CIC1Sin/d_d8_62 , \CIC1Sin/d8_62 , 
         \CIC1Sin/d_d8_61 , \CIC1Sin/d8_61 , \CIC1Sin/n11875 , \CIC1Sin/n5808 , 
         \CIC1Sin/n5807 , \CIC1Sin/d_d8_60 , \CIC1Sin/d8_60 , 
         \CIC1Sin/d_d8_59 , \CIC1Sin/d8_59 , \CIC1Sin/n11874 , \CIC1Sin/n5810 , 
         \CIC1Sin/n5809 , \CIC1Sin/d_d8_58 , \CIC1Sin/d8_58 , 
         \CIC1Sin/d_d8_57 , \CIC1Sin/d8_57 , \CIC1Sin/n11873 , \CIC1Sin/n5812 , 
         \CIC1Sin/n5811 , \CIC1Sin/d_d8_56 , \CIC1Sin/d8_56 , 
         \CIC1Sin/d_d8_55 , \CIC1Sin/d8_55 , \CIC1Sin/n11872 , \CIC1Sin/n5814 , 
         \CIC1Sin/n5813 , \CIC1Sin/d_d8_54 , \CIC1Sin/d8_54 , 
         \CIC1Sin/d_d8_53 , \CIC1Sin/d8_53 , \CIC1Sin/n11871 , \CIC1Sin/n5816 , 
         \CIC1Sin/n5815 , \CIC1Sin/d_d8_52 , \CIC1Sin/d8_52 , 
         \CIC1Sin/d_d8_51 , \CIC1Sin/d8_51 , \CIC1Sin/n11870 , \CIC1Sin/n5818 , 
         \CIC1Sin/n5817 , \CIC1Sin/d_d8_50 , \CIC1Sin/d8_50 , 
         \CIC1Sin/d_d8_49 , \CIC1Sin/d8_49 , \CIC1Sin/n11869 , \CIC1Sin/n5820 , 
         \CIC1Sin/n5819 , \CIC1Sin/d_d8_48 , \CIC1Sin/d8_48 , 
         \CIC1Sin/d_d8_47 , \CIC1Sin/d8_47 , \CIC1Sin/n11868 , \CIC1Sin/n5822 , 
         \CIC1Sin/n5821 , \CIC1Sin/d_d9_52 , \CIC1Sin/d9_52 , 
         \CIC1Sin/d_d9_51 , \CIC1Sin/d9_51 , \CIC1Sin/n11830 , 
         \CIC1Sin/d_d9_50 , \CIC1Sin/d9_50 , \CIC1Sin/d_d9_49 , 
         \CIC1Sin/d9_49 , \CIC1Sin/n11829 , \CIC1Sin/d_d9_48 , \CIC1Sin/d9_48 , 
         \CIC1Sin/d_d9_47 , \CIC1Sin/d9_47 , \CIC1Sin/n11828 , 
         \CIC1Sin/d_d9_46 , \CIC1Sin/d9_46 , \CIC1Sin/d_d9_45 , 
         \CIC1Sin/d9_45 , \CIC1Sin/n11827 , \CIC1Sin/d_d9_44 , \CIC1Sin/d9_44 , 
         \CIC1Sin/d_d9_43 , \CIC1Sin/d9_43 , \CIC1Sin/n11826 , 
         \CIC1Sin/d_d9_42 , \CIC1Sin/d9_42 , \CIC1Sin/d_d9_41 , 
         \CIC1Sin/d9_41 , \CIC1Sin/n11825 , \CIC1Sin/d_d9_40 , \CIC1Sin/d9_40 , 
         \CIC1Sin/d_d9_39 , \CIC1Sin/d9_39 , \CIC1Sin/n11824 , 
         \CIC1Sin/d_d9_38 , \CIC1Sin/d9_38 , \CIC1Sin/d_d9_37 , 
         \CIC1Sin/d9_37 , \CIC1Sin/n11823 , \CIC1Sin/d_d9_36 , \CIC1Sin/d9_36 , 
         \CIC1Sin/d_d9_71 , \CIC1Sin/d9_71 , \CIC1Sin/n11822 , \CIC1Sin/n5988 , 
         \CIC1Sin/n11821 , \CIC1Sin/n5990 , \CIC1Sin/n5989 , \CIC1Sin/d_d9_68 , 
         \CIC1Sin/d9_68 , \CIC1Sin/d_d9_67 , \CIC1Sin/d9_67 , \CIC1Sin/n11838 , 
         \CIC1Sin/n5954 , \CIC1Sin/n5953 , \CIC1Sin/n11820 , \CIC1Sin/n5992 , 
         \CIC1Sin/n5991 , \CIC1Sin/d_d9_66 , \CIC1Sin/d9_66 , 
         \CIC1Sin/d_d9_65 , \CIC1Sin/d9_65 , \CIC1Sin/n11819 , \CIC1Sin/n5994 , 
         \CIC1Sin/n5993 , \CIC1Sin/d_d9_64 , \CIC1Sin/d9_64 , 
         \CIC1Sin/d_d9_63 , \CIC1Sin/d9_63 , \CIC1Sin/n11818 , \CIC1Sin/n5996 , 
         \CIC1Sin/n5995 , \CIC1Sin/d_d9_62 , \CIC1Sin/d9_62 , 
         \CIC1Sin/d_d9_61 , \CIC1Sin/d9_61 , \CIC1Sin/n11817 , \CIC1Sin/n5998 , 
         \CIC1Sin/n5997 , \CIC1Sin/d_d9_60 , \CIC1Sin/d9_60 , 
         \CIC1Sin/d_d9_59 , \CIC1Sin/d9_59 , \CIC1Sin/n11816 , \CIC1Sin/n6000 , 
         \CIC1Sin/n5999 , \CIC1Sin/d_d8_46 , \CIC1Sin/d8_46 , 
         \CIC1Sin/d_d8_45 , \CIC1Sin/d8_45 , \CIC1Sin/n11867 , \CIC1Sin/n5824 , 
         \CIC1Sin/n5823 , \CIC1Sin/d_d8_44 , \CIC1Sin/d8_44 , 
         \CIC1Sin/d_d8_43 , \CIC1Sin/d8_43 , \CIC1Sin/n11866 , \CIC1Sin/n5826 , 
         \CIC1Sin/n5825 , \CIC1Sin/d_d9_58 , \CIC1Sin/d9_58 , 
         \CIC1Sin/d_d9_57 , \CIC1Sin/d9_57 , \CIC1Sin/n11815 , \CIC1Sin/n6002 , 
         \CIC1Sin/n6001 , \CIC1Sin/d_d8_42 , \CIC1Sin/d8_42 , 
         \CIC1Sin/d_d8_41 , \CIC1Sin/d8_41 , \CIC1Sin/n11865 , \CIC1Sin/n5828 , 
         \CIC1Sin/n5827 , \CIC1Sin/d_d9_56 , \CIC1Sin/d9_56 , 
         \CIC1Sin/d_d9_55 , \CIC1Sin/d9_55 , \CIC1Sin/n11814 , 
         \CIC1Sin/d_d8_40 , \CIC1Sin/d8_40 , \CIC1Sin/d_d8_39 , 
         \CIC1Sin/d8_39 , \CIC1Sin/n11864 , \CIC1Sin/n5830 , \CIC1Sin/n5829 , 
         \CIC1Sin/d_d8_38 , \CIC1Sin/d8_38 , \CIC1Sin/d_d8_37 , 
         \CIC1Sin/d8_37 , \CIC1Sin/n11863 , \CIC1Sin/n5832 , \CIC1Sin/n5831 , 
         \CIC1Sin/d_d8_36 , \CIC1Sin/d8_36 , \CIC1Sin/n5833 , \CIC1Sin/n11813 , 
         \CIC1Sin/n5796 , \CIC1Sin/d9_71_N_1675_71 , \CIC1Sin/d9_71_N_1675_70 , 
         \CIC1Sin/osc_clk_enable_647 , \CIC1Sin/n11861 , 
         \CIC1Sin/d9_71_N_1675_69 , \CIC1Sin/d9_71_N_1675_68 , 
         \CIC1Sin/n11860 , \CIC1Sin/d9_71_N_1675_67 , 
         \CIC1Sin/d9_71_N_1675_66 , \CIC1Sin/n11859 , 
         \CIC1Sin/d9_71_N_1675_65 , \CIC1Sin/d9_71_N_1675_64 , 
         \CIC1Sin/n11858 , \CIC1Sin/d9_71_N_1675_63 , 
         \CIC1Sin/d9_71_N_1675_62 , \CIC1Sin/n11857 , 
         \CIC1Sin/d9_71_N_1675_61 , \CIC1Sin/d9_71_N_1675_60 , 
         \CIC1Sin/n11856 , \CIC1Sin/d9_71_N_1675_59 , 
         \CIC1Sin/d9_71_N_1675_58 , \CIC1Sin/n11855 , 
         \CIC1Sin/d9_71_N_1675_57 , \CIC1Sin/d9_71_N_1675_56 , 
         \CIC1Sin/n11854 , \CIC1Sin/n11812 , \CIC1Sin/d9_71_N_1675_55 , 
         \CIC1Sin/d9_71_N_1675_54 , \CIC1Sin/n11853 , \CIC1Sin/n11811 , 
         \CIC1Sin/d9_71_N_1675_53 , \CIC1Sin/d9_71_N_1675_52 , 
         \CIC1Sin/n11852 , \CIC1Sin/d9_71_N_1675_51 , 
         \CIC1Sin/d9_71_N_1675_50 , \CIC1Sin/n11851 , 
         \CIC1Sin/d9_71_N_1675_49 , \CIC1Sin/d9_71_N_1675_48 , 
         \CIC1Sin/n11850 , \CIC1Sin/d9_71_N_1675_47 , 
         \CIC1Sin/d9_71_N_1675_46 , \CIC1Sin/n11849 , 
         \CIC1Sin/d9_71_N_1675_45 , \CIC1Sin/d9_71_N_1675_44 , 
         \CIC1Sin/n11848 , \CIC1Sin/d9_71_N_1675_43 , 
         \CIC1Sin/d9_71_N_1675_42 , \CIC1Sin/osc_clk_enable_597 , 
         \CIC1Sin/n11847 , \CIC1Sin/d9_71_N_1675_41 , 
         \CIC1Sin/d9_71_N_1675_40 , \CIC1Sin/n11846 , 
         \CIC1Sin/d9_71_N_1675_39 , \CIC1Sin/d9_71_N_1675_38 , 
         \CIC1Sin/n11845 , \CIC1Sin/n11810 , \CIC1Sin/n11809 , 
         \CIC1Sin/n11808 , \CIC1Sin/n11807 , \CIC1Sin/n11806 , \CIC1Sin/d2_71 , 
         \CIC1Sin/d1_71 , \CIC1Sin/d2_70 , \CIC1Sin/d1_70 , \CIC1Sin/n12248 , 
         \CIC1Sin/n4431 , \CIC1Sin/n4430 , \CIC1Sin/n11805 , \CIC1Sin/n11837 , 
         \CIC1Sin/n5956 , \CIC1Sin/n5955 , \CIC1Sin/n11836 , \CIC1Sin/n5958 , 
         \CIC1Sin/n5957 , \CIC1Sin/d2_69 , \CIC1Sin/d1_69 , \CIC1Sin/d2_68 , 
         \CIC1Sin/d1_68 , \CIC1Sin/n12247 , \CIC1Sin/n4433 , \CIC1Sin/n4432 , 
         \CIC1Sin/d2_67 , \CIC1Sin/d1_67 , \CIC1Sin/d2_66 , \CIC1Sin/d1_66 , 
         \CIC1Sin/n12246 , \CIC1Sin/n4435 , \CIC1Sin/n4434 , \CIC1Sin/d2_65 , 
         \CIC1Sin/d1_65 , \CIC1Sin/d2_64 , \CIC1Sin/d1_64 , \CIC1Sin/n12245 , 
         \CIC1Sin/n4437 , \CIC1Sin/n4436 , \CIC1Sin/d2_63 , \CIC1Sin/d1_63 , 
         \CIC1Sin/d2_62 , \CIC1Sin/d1_62 , \CIC1Sin/n12244 , \CIC1Sin/n4439 , 
         \CIC1Sin/n4438 , \CIC1Sin/d2_61 , \CIC1Sin/d1_61 , \CIC1Sin/d2_60 , 
         \CIC1Sin/d1_60 , \CIC1Sin/n12243 , \CIC1Sin/n4441 , \CIC1Sin/n4440 , 
         \CIC1Sin/d2_59 , \CIC1Sin/d1_59 , \CIC1Sin/d2_58 , \CIC1Sin/d1_58 , 
         \CIC1Sin/n12242 , \CIC1Sin/n4443 , \CIC1Sin/n4442 , \CIC1Sin/d2_57 , 
         \CIC1Sin/d2_56 , \CIC1Sin/n12241 , \CIC1Sin/n4445 , \CIC1Sin/n4444 , 
         \CIC1Sin/d2_55 , \CIC1Sin/d2_54 , \CIC1Sin/n12240 , \CIC1Sin/n4447 , 
         \CIC1Sin/n4446 , \CIC1Sin/d2_53 , \CIC1Sin/d2_52 , \CIC1Sin/n12239 , 
         \CIC1Sin/n4449 , \CIC1Sin/n4448 , \CIC1Sin/d2_51 , \CIC1Sin/d2_50 , 
         \CIC1Sin/n12238 , \CIC1Sin/n4451 , \CIC1Sin/n4450 , \CIC1Sin/d2_49 , 
         \CIC1Sin/d2_48 , \CIC1Sin/n12237 , \CIC1Sin/n4453 , \CIC1Sin/n4452 , 
         \CIC1Sin/d2_47 , \CIC1Sin/d2_46 , \CIC1Sin/n12236 , \CIC1Sin/n4455 , 
         \CIC1Sin/n4454 , \CIC1Sin/d2_45 , \CIC1Sin/d2_44 , \CIC1Sin/n12235 , 
         \CIC1Sin/n4457 , \CIC1Sin/n4456 , \CIC1Sin/d2_43 , \CIC1Sin/d2_42 , 
         \CIC1Sin/n12234 , \CIC1Sin/n4459 , \CIC1Sin/n4458 , \CIC1Sin/d2_41 , 
         \CIC1Sin/d2_40 , \CIC1Sin/n12233 , \CIC1Sin/n4461 , \CIC1Sin/n4460 , 
         \CIC1Sin/d2_39 , \CIC1Sin/d2_38 , \CIC1Sin/n12232 , \CIC1Sin/n4463 , 
         \CIC1Sin/n4462 , \CIC1Sin/d2_37 , \CIC1Sin/d2_36 , \CIC1Sin/n4464 , 
         \CIC1Sin/n4428 , \CIC1Sin/d2_71_N_490_71 , \CIC1Sin/d2_71_N_490_70 , 
         \CIC1Sin/n12229 , \CIC1Sin/d2_71_N_490_69 , \CIC1Sin/d2_71_N_490_68 , 
         \CIC1Sin/n12228 , \CIC1Sin/d2_71_N_490_67 , \CIC1Sin/d2_71_N_490_66 , 
         \CIC1Sin/n12227 , \CIC1Sin/d2_71_N_490_65 , \CIC1Sin/d2_71_N_490_64 , 
         \CIC1Sin/n12226 , \CIC1Sin/d2_71_N_490_63 , \CIC1Sin/d2_71_N_490_62 , 
         \CIC1Sin/n12225 , \CIC1Sin/d2_71_N_490_61 , \CIC1Sin/d2_71_N_490_60 , 
         \CIC1Sin/n12224 , \CIC1Sin/d2_71_N_490_59 , \CIC1Sin/d2_71_N_490_58 , 
         \CIC1Sin/n12223 , \CIC1Sin/d2_71_N_490_57 , \CIC1Sin/d2_71_N_490_56 , 
         \CIC1Sin/n12222 , \CIC1Sin/d2_71_N_490_55 , \CIC1Sin/d2_71_N_490_54 , 
         \CIC1Sin/n12221 , \CIC1Sin/d2_71_N_490_53 , \CIC1Sin/d2_71_N_490_52 , 
         \CIC1Sin/n12220 , \CIC1Sin/d2_71_N_490_51 , \CIC1Sin/d2_71_N_490_50 , 
         \CIC1Sin/n12219 , \CIC1Sin/d2_71_N_490_49 , \CIC1Sin/d2_71_N_490_48 , 
         \CIC1Sin/n12218 , \CIC1Sin/d2_71_N_490_47 , \CIC1Sin/d2_71_N_490_46 , 
         \CIC1Sin/n12217 , \CIC1Sin/d2_71_N_490_45 , \CIC1Sin/d2_71_N_490_44 , 
         \CIC1Sin/n12216 , \CIC1Sin/d2_71_N_490_43 , \CIC1Sin/d2_71_N_490_42 , 
         \CIC1Sin/n12215 , \CIC1Sin/d2_71_N_490_41 , \CIC1Sin/d2_71_N_490_40 , 
         \CIC1Sin/n12214 , \CIC1Sin/d2_71_N_490_39 , \CIC1Sin/d2_71_N_490_38 , 
         \CIC1Sin/n12213 , \CIC1Sin/n4465 , \CIC1Sin/d2_71_N_490_37 , 
         \CIC1Sin/d2_71_N_490_36 , \CIC1Sin/n12212 , \CIC1Sin/d9_71_N_1675_37 , 
         \CIC1Sin/d9_71_N_1675_36 , \CIC1Sin/n11844 , \CIC1Sin/n11835 , 
         \CIC1Sin/n5960 , \CIC1Sin/n5959 , \CIC1Sin/n11834 , \CIC1Sin/n5962 , 
         \CIC1Sin/n5961 , \CIC1Sin/n11833 , \CIC1Sin/n5964 , \CIC1Sin/n5963 , 
         \CIC1Sin/d3_71 , \CIC1Sin/d3_70 , \CIC1Sin/n12207 , \CIC1Sin/n4583 , 
         \CIC1Sin/n4582 , \CIC1Sin/d3_69 , \CIC1Sin/d3_68 , \CIC1Sin/n12206 , 
         \CIC1Sin/n4585 , \CIC1Sin/n4584 , \CIC1Sin/d_d7_71 , \CIC1Sin/d7_71 , 
         \CIC1Sin/n11427 , \CIC1Sin/n6862 , \CIC1Sin/d_d7_70 , \CIC1Sin/d7_70 , 
         \CIC1Sin/d_d7_69 , \CIC1Sin/d7_69 , \CIC1Sin/n11426 , \CIC1Sin/n6864 , 
         \CIC1Sin/n6863 , \CIC1Sin/d_d7_68 , \CIC1Sin/d7_68 , 
         \CIC1Sin/d_d7_67 , \CIC1Sin/d7_67 , \CIC1Sin/n11425 , \CIC1Sin/n6866 , 
         \CIC1Sin/n6865 , \CIC1Sin/d_d7_66 , \CIC1Sin/d7_66 , 
         \CIC1Sin/d_d7_65 , \CIC1Sin/d7_65 , \CIC1Sin/n11424 , \CIC1Sin/n6868 , 
         \CIC1Sin/n6867 , \CIC1Sin/d_d7_64 , \CIC1Sin/d7_64 , 
         \CIC1Sin/d_d7_63 , \CIC1Sin/d7_63 , \CIC1Sin/n11423 , \CIC1Sin/n6870 , 
         \CIC1Sin/n6869 , \CIC1Sin/d_d7_62 , \CIC1Sin/d7_62 , 
         \CIC1Sin/d_d7_61 , \CIC1Sin/d7_61 , \CIC1Sin/n11422 , \CIC1Sin/n6872 , 
         \CIC1Sin/n6871 , \CIC1Sin/d_d7_60 , \CIC1Sin/d7_60 , 
         \CIC1Sin/d_d7_59 , \CIC1Sin/d7_59 , \CIC1Sin/n11421 , \CIC1Sin/n6874 , 
         \CIC1Sin/n6873 , \CIC1Sin/d_d7_58 , \CIC1Sin/d7_58 , 
         \CIC1Sin/d_d7_57 , \CIC1Sin/d7_57 , \CIC1Sin/n11420 , \CIC1Sin/n6876 , 
         \CIC1Sin/n6875 , \CIC1Sin/d_d7_56 , \CIC1Sin/d7_56 , 
         \CIC1Sin/d_d7_55 , \CIC1Sin/d7_55 , \CIC1Sin/n11419 , \CIC1Sin/n6878 , 
         \CIC1Sin/n6877 , \CIC1Sin/d_d7_54 , \CIC1Sin/d7_54 , 
         \CIC1Sin/d_d7_53 , \CIC1Sin/d7_53 , \CIC1Sin/n11418 , \CIC1Sin/n6880 , 
         \CIC1Sin/n6879 , \CIC1Sin/d_d7_52 , \CIC1Sin/d7_52 , 
         \CIC1Sin/d_d7_51 , \CIC1Sin/d7_51 , \CIC1Sin/n11417 , \CIC1Sin/n6882 , 
         \CIC1Sin/n6881 , \CIC1Sin/d_d7_50 , \CIC1Sin/d7_50 , 
         \CIC1Sin/d_d7_49 , \CIC1Sin/d7_49 , \CIC1Sin/n11416 , \CIC1Sin/n6884 , 
         \CIC1Sin/n6883 , \CIC1Sin/d_d7_48 , \CIC1Sin/d7_48 , 
         \CIC1Sin/d_d7_47 , \CIC1Sin/d7_47 , \CIC1Sin/n11415 , \CIC1Sin/n6886 , 
         \CIC1Sin/n6885 , \CIC1Sin/d_d7_46 , \CIC1Sin/d7_46 , 
         \CIC1Sin/d_d7_45 , \CIC1Sin/d7_45 , \CIC1Sin/n11414 , \CIC1Sin/n6888 , 
         \CIC1Sin/n6887 , \CIC1Sin/d_d7_44 , \CIC1Sin/d7_44 , 
         \CIC1Sin/d_d7_43 , \CIC1Sin/d7_43 , \CIC1Sin/n11413 , \CIC1Sin/n6890 , 
         \CIC1Sin/n6889 , \CIC1Sin/d_d7_42 , \CIC1Sin/d7_42 , 
         \CIC1Sin/d_d7_41 , \CIC1Sin/d7_41 , \CIC1Sin/n11412 , \CIC1Sin/n6892 , 
         \CIC1Sin/n6891 , \CIC1Sin/d_d7_40 , \CIC1Sin/d7_40 , 
         \CIC1Sin/d_d7_39 , \CIC1Sin/d7_39 , \CIC1Sin/n11411 , \CIC1Sin/n6894 , 
         \CIC1Sin/n6893 , \CIC1Sin/d_d7_38 , \CIC1Sin/d7_38 , 
         \CIC1Sin/d_d7_37 , \CIC1Sin/d7_37 , \CIC1Sin/n11410 , \CIC1Sin/n6896 , 
         \CIC1Sin/n6895 , \CIC1Sin/d_d7_36 , \CIC1Sin/d7_36 , \CIC1Sin/n6897 , 
         \CIC1Sin/n6860 , \CIC1Sin/d8_71_N_1603_71 , \CIC1Sin/d8_71_N_1603_70 , 
         \CIC1Sin/osc_clk_enable_497 , \CIC1Sin/n11408 , 
         \CIC1Sin/d8_71_N_1603_69 , \CIC1Sin/d8_71_N_1603_68 , 
         \CIC1Sin/n11407 , \CIC1Sin/d8_71_N_1603_67 , 
         \CIC1Sin/d8_71_N_1603_66 , \CIC1Sin/n11406 , 
         \CIC1Sin/d8_71_N_1603_65 , \CIC1Sin/d8_71_N_1603_64 , 
         \CIC1Sin/n11405 , \CIC1Sin/d8_71_N_1603_63 , 
         \CIC1Sin/d8_71_N_1603_62 , \CIC1Sin/n11404 , 
         \CIC1Sin/d8_71_N_1603_61 , \CIC1Sin/d8_71_N_1603_60 , 
         \CIC1Sin/n11403 , \CIC1Sin/d8_71_N_1603_59 , 
         \CIC1Sin/d8_71_N_1603_58 , \CIC1Sin/n11402 , 
         \CIC1Sin/d8_71_N_1603_57 , \CIC1Sin/d8_71_N_1603_56 , 
         \CIC1Sin/n11401 , \CIC1Sin/d8_71_N_1603_55 , 
         \CIC1Sin/d8_71_N_1603_54 , \CIC1Sin/n11400 , 
         \CIC1Sin/d8_71_N_1603_53 , \CIC1Sin/d8_71_N_1603_52 , 
         \CIC1Sin/n11399 , \CIC1Sin/d8_71_N_1603_51 , 
         \CIC1Sin/d8_71_N_1603_50 , \CIC1Sin/n11398 , 
         \CIC1Sin/d8_71_N_1603_49 , \CIC1Sin/d8_71_N_1603_48 , 
         \CIC1Sin/n11397 , \CIC1Sin/d8_71_N_1603_47 , 
         \CIC1Sin/d8_71_N_1603_46 , \CIC1Sin/n11396 , 
         \CIC1Sin/d8_71_N_1603_45 , \CIC1Sin/d8_71_N_1603_44 , 
         \CIC1Sin/n11395 , \CIC1Sin/d8_71_N_1603_43 , 
         \CIC1Sin/d8_71_N_1603_42 , \CIC1Sin/n11394 , 
         \CIC1Sin/d8_71_N_1603_41 , \CIC1Sin/d8_71_N_1603_40 , 
         \CIC1Sin/n11393 , \CIC1Sin/d8_71_N_1603_39 , 
         \CIC1Sin/d8_71_N_1603_38 , \CIC1Sin/n11392 , 
         \CIC1Sin/d8_71_N_1603_37 , \CIC1Sin/d8_71_N_1603_36 , 
         \CIC1Sin/n11391 , \CIC1Sin/d_d6_71 , \CIC1Sin/d6_71 , 
         \CIC1Sin/n11387 , \CIC1Sin/n7014 , \CIC1Sin/d_d6_70 , \CIC1Sin/d6_70 , 
         \CIC1Sin/d_d6_69 , \CIC1Sin/d6_69 , \CIC1Sin/n11386 , \CIC1Sin/n7016 , 
         \CIC1Sin/n7015 , \CIC1Sin/d_d6_68 , \CIC1Sin/d6_68 , 
         \CIC1Sin/d_d6_67 , \CIC1Sin/d6_67 , \CIC1Sin/n11385 , \CIC1Sin/n7018 , 
         \CIC1Sin/n7017 , \CIC1Sin/d_d6_66 , \CIC1Sin/d6_66 , 
         \CIC1Sin/d_d6_65 , \CIC1Sin/d6_65 , \CIC1Sin/n11384 , \CIC1Sin/n7020 , 
         \CIC1Sin/n7019 , \CIC1Sin/d_d6_64 , \CIC1Sin/d6_64 , 
         \CIC1Sin/d_d6_63 , \CIC1Sin/d6_63 , \CIC1Sin/n11383 , \CIC1Sin/n7022 , 
         \CIC1Sin/n7021 , \CIC1Sin/d_d6_62 , \CIC1Sin/d6_62 , 
         \CIC1Sin/d_d6_61 , \CIC1Sin/d6_61 , \CIC1Sin/n11382 , \CIC1Sin/n7024 , 
         \CIC1Sin/n7023 , \CIC1Sin/d_d6_60 , \CIC1Sin/d6_60 , 
         \CIC1Sin/d_d6_59 , \CIC1Sin/d6_59 , \CIC1Sin/n11381 , \CIC1Sin/n7026 , 
         \CIC1Sin/n7025 , \CIC1Sin/d_d6_58 , \CIC1Sin/d6_58 , 
         \CIC1Sin/d_d6_57 , \CIC1Sin/d6_57 , \CIC1Sin/n11380 , \CIC1Sin/n7028 , 
         \CIC1Sin/n7027 , \CIC1Sin/d_d6_56 , \CIC1Sin/d6_56 , 
         \CIC1Sin/d_d6_55 , \CIC1Sin/d6_55 , \CIC1Sin/n11379 , \CIC1Sin/n7030 , 
         \CIC1Sin/n7029 , \CIC1Sin/d_d6_54 , \CIC1Sin/d6_54 , 
         \CIC1Sin/d_d6_53 , \CIC1Sin/d6_53 , \CIC1Sin/n11378 , \CIC1Sin/n7032 , 
         \CIC1Sin/n7031 , \CIC1Sin/d_d6_52 , \CIC1Sin/d6_52 , 
         \CIC1Sin/d_d6_51 , \CIC1Sin/d6_51 , \CIC1Sin/n11377 , \CIC1Sin/n7034 , 
         \CIC1Sin/n7033 , \CIC1Sin/d_d6_50 , \CIC1Sin/d6_50 , 
         \CIC1Sin/d_d6_49 , \CIC1Sin/d6_49 , \CIC1Sin/n11376 , \CIC1Sin/n7036 , 
         \CIC1Sin/n7035 , \CIC1Sin/d_d6_48 , \CIC1Sin/d6_48 , 
         \CIC1Sin/d_d6_47 , \CIC1Sin/d6_47 , \CIC1Sin/n11375 , \CIC1Sin/n7038 , 
         \CIC1Sin/n7037 , \CIC1Sin/d_d6_46 , \CIC1Sin/d6_46 , 
         \CIC1Sin/d_d6_45 , \CIC1Sin/d6_45 , \CIC1Sin/n11374 , \CIC1Sin/n7040 , 
         \CIC1Sin/n7039 , \CIC1Sin/d_d6_44 , \CIC1Sin/d6_44 , 
         \CIC1Sin/d_d6_43 , \CIC1Sin/d6_43 , \CIC1Sin/n11373 , \CIC1Sin/n7042 , 
         \CIC1Sin/n7041 , \CIC1Sin/d_d6_42 , \CIC1Sin/d6_42 , 
         \CIC1Sin/d_d6_41 , \CIC1Sin/d6_41 , \CIC1Sin/n11372 , \CIC1Sin/n7044 , 
         \CIC1Sin/n7043 , \CIC1Sin/d_d6_40 , \CIC1Sin/d6_40 , 
         \CIC1Sin/d_d6_39 , \CIC1Sin/d6_39 , \CIC1Sin/n11371 , \CIC1Sin/n7046 , 
         \CIC1Sin/n7045 , \CIC1Sin/d_d6_38 , \CIC1Sin/d6_38 , 
         \CIC1Sin/d_d6_37 , \CIC1Sin/d6_37 , \CIC1Sin/n11370 , \CIC1Sin/n7048 , 
         \CIC1Sin/n7047 , \CIC1Sin/d_d6_36 , \CIC1Sin/d6_36 , \CIC1Sin/n7049 , 
         \CIC1Sin/n7012 , \CIC1Sin/d7_71_N_1531_71 , \CIC1Sin/d7_71_N_1531_70 , 
         \CIC1Sin/osc_clk_enable_347 , \CIC1Sin/n11368 , 
         \CIC1Sin/d7_71_N_1531_69 , \CIC1Sin/d7_71_N_1531_68 , 
         \CIC1Sin/n11367 , \CIC1Sin/d7_71_N_1531_67 , 
         \CIC1Sin/d7_71_N_1531_66 , \CIC1Sin/n11366 , 
         \CIC1Sin/d7_71_N_1531_65 , \CIC1Sin/d7_71_N_1531_64 , 
         \CIC1Sin/n11365 , \CIC1Sin/d7_71_N_1531_63 , 
         \CIC1Sin/d7_71_N_1531_62 , \CIC1Sin/n11364 , 
         \CIC1Sin/d7_71_N_1531_61 , \CIC1Sin/d7_71_N_1531_60 , 
         \CIC1Sin/n11363 , \CIC1Sin/d7_71_N_1531_59 , 
         \CIC1Sin/d7_71_N_1531_58 , \CIC1Sin/n11362 , 
         \CIC1Sin/d7_71_N_1531_57 , \CIC1Sin/d7_71_N_1531_56 , 
         \CIC1Sin/n11361 , \CIC1Sin/d7_71_N_1531_55 , 
         \CIC1Sin/d7_71_N_1531_54 , \CIC1Sin/n11360 , 
         \CIC1Sin/d7_71_N_1531_53 , \CIC1Sin/d7_71_N_1531_52 , 
         \CIC1Sin/n11359 , \CIC1Sin/d7_71_N_1531_51 , 
         \CIC1Sin/d7_71_N_1531_50 , \CIC1Sin/n11358 , 
         \CIC1Sin/d7_71_N_1531_49 , \CIC1Sin/d7_71_N_1531_48 , 
         \CIC1Sin/n11357 , \CIC1Sin/d7_71_N_1531_47 , 
         \CIC1Sin/d7_71_N_1531_46 , \CIC1Sin/n11356 , 
         \CIC1Sin/d7_71_N_1531_45 , \CIC1Sin/d7_71_N_1531_44 , 
         \CIC1Sin/n11355 , \CIC1Sin/d7_71_N_1531_43 , 
         \CIC1Sin/d7_71_N_1531_42 , \CIC1Sin/n11354 , 
         \CIC1Sin/d7_71_N_1531_41 , \CIC1Sin/d7_71_N_1531_40 , 
         \CIC1Sin/n11353 , \CIC1Sin/d7_71_N_1531_39 , 
         \CIC1Sin/d7_71_N_1531_38 , \CIC1Sin/n11352 , 
         \CIC1Sin/d7_71_N_1531_37 , \CIC1Sin/d7_71_N_1531_36 , 
         \CIC1Sin/n11351 , \CIC1Sin/d_d_tmp_35 , \CIC1Sin/d_tmp_35 , 
         \CIC1Sin/d6_71_N_1459_35 , \CIC1Sin/osc_clk_enable_197 , 
         \CIC1Sin/n11262 , \CIC1Sin/d6_35 , \CIC1Sin/n4124 , 
         \CIC1Sin/d_d_tmp_34 , \CIC1Sin/d_tmp_34 , \CIC1Sin/d_d_tmp_33 , 
         \CIC1Sin/d_tmp_33 , \CIC1Sin/d6_71_N_1459_34 , 
         \CIC1Sin/d6_71_N_1459_33 , \CIC1Sin/n11261 , \CIC1Sin/d6_33 , 
         \CIC1Sin/d6_34 , \CIC1Sin/d_d_tmp_32 , \CIC1Sin/d_tmp_32 , 
         \CIC1Sin/d_d_tmp_31 , \CIC1Sin/d_tmp_31 , \CIC1Sin/d6_71_N_1459_32 , 
         \CIC1Sin/d6_71_N_1459_31 , \CIC1Sin/n11260 , \CIC1Sin/d6_31 , 
         \CIC1Sin/d6_32 , \CIC1Sin/d_d_tmp_30 , \CIC1Sin/d_tmp_30 , 
         \CIC1Sin/d_d_tmp_29 , \CIC1Sin/d_tmp_29 , \CIC1Sin/d6_71_N_1459_30 , 
         \CIC1Sin/d6_71_N_1459_29 , \CIC1Sin/n11259 , \CIC1Sin/d6_29 , 
         \CIC1Sin/d6_30 , \CIC1Sin/d_d_tmp_28 , \CIC1Sin/d_tmp_28 , 
         \CIC1Sin/d_d_tmp_27 , \CIC1Sin/d_tmp_27 , \CIC1Sin/d6_71_N_1459_28 , 
         \CIC1Sin/d6_71_N_1459_27 , \CIC1Sin/n11258 , \CIC1Sin/d6_27 , 
         \CIC1Sin/d6_28 , \CIC1Sin/d_d_tmp_26 , \CIC1Sin/d_tmp_26 , 
         \CIC1Sin/d_d_tmp_25 , \CIC1Sin/d_tmp_25 , \CIC1Sin/d6_71_N_1459_26 , 
         \CIC1Sin/d6_71_N_1459_25 , \CIC1Sin/n11257 , \CIC1Sin/d6_25 , 
         \CIC1Sin/d6_26 , \CIC1Sin/d_d_tmp_24 , \CIC1Sin/d_tmp_24 , 
         \CIC1Sin/d_d_tmp_23 , \CIC1Sin/d_tmp_23 , \CIC1Sin/d6_71_N_1459_24 , 
         \CIC1Sin/d6_71_N_1459_23 , \CIC1Sin/n11256 , \CIC1Sin/d6_23 , 
         \CIC1Sin/d6_24 , \CIC1Sin/d_d_tmp_22 , \CIC1Sin/d_tmp_22 , 
         \CIC1Sin/d_d_tmp_21 , \CIC1Sin/d_tmp_21 , \CIC1Sin/d6_71_N_1459_22 , 
         \CIC1Sin/d6_71_N_1459_21 , \CIC1Sin/n11255 , \CIC1Sin/d6_21 , 
         \CIC1Sin/d6_22 , \CIC1Sin/d_d_tmp_20 , \CIC1Sin/d_tmp_20 , 
         \CIC1Sin/d_d_tmp_19 , \CIC1Sin/d_tmp_19 , \CIC1Sin/d6_71_N_1459_19 , 
         \CIC1Sin/osc_clk_enable_147 , \CIC1Sin/n11254 , \CIC1Sin/d6_19 , 
         \CIC1Sin/d6_71_N_1459_20 , \CIC1Sin/d_d_tmp_18 , \CIC1Sin/d_tmp_18 , 
         \CIC1Sin/d_d_tmp_17 , \CIC1Sin/d_tmp_17 , \CIC1Sin/d6_71_N_1459_18 , 
         \CIC1Sin/d6_71_N_1459_17 , \CIC1Sin/n11253 , \CIC1Sin/d6_17 , 
         \CIC1Sin/d6_18 , \CIC1Sin/d_d_tmp_16 , \CIC1Sin/d_tmp_16 , 
         \CIC1Sin/d_d_tmp_15 , \CIC1Sin/d_tmp_15 , \CIC1Sin/d6_71_N_1459_16 , 
         \CIC1Sin/d6_71_N_1459_15 , \CIC1Sin/n11252 , \CIC1Sin/d6_15 , 
         \CIC1Sin/d6_16 , \CIC1Sin/d_d_tmp_14 , \CIC1Sin/d_tmp_14 , 
         \CIC1Sin/d_d_tmp_13 , \CIC1Sin/d_tmp_13 , \CIC1Sin/d6_71_N_1459_14 , 
         \CIC1Sin/d6_71_N_1459_13 , \CIC1Sin/n11251 , \CIC1Sin/d6_13 , 
         \CIC1Sin/d6_14 , \CIC1Sin/d_d_tmp_12 , \CIC1Sin/d_tmp_12 , 
         \CIC1Sin/d_d_tmp_11 , \CIC1Sin/d_tmp_11 , \CIC1Sin/d6_71_N_1459_12 , 
         \CIC1Sin/d6_71_N_1459_11 , \CIC1Sin/n11250 , \CIC1Sin/d6_11 , 
         \CIC1Sin/d6_12 , \CIC1Sin/d_d_tmp_10 , \CIC1Sin/d_tmp_10 , 
         \CIC1Sin/d_d_tmp_9 , \CIC1Sin/d_tmp_9 , \CIC1Sin/d6_71_N_1459_10 , 
         \CIC1Sin/d6_71_N_1459_9 , \CIC1Sin/n11249 , \CIC1Sin/d6_9 , 
         \CIC1Sin/d6_10 , \CIC1Sin/d_d_tmp_8 , \CIC1Sin/d_tmp_8 , 
         \CIC1Sin/d_d_tmp_7 , \CIC1Sin/d_tmp_7 , \CIC1Sin/d6_71_N_1459_8 , 
         \CIC1Sin/d6_71_N_1459_7 , \CIC1Sin/n11248 , \CIC1Sin/d6_7 , 
         \CIC1Sin/d6_8 , \CIC1Sin/d_d_tmp_6 , \CIC1Sin/d_tmp_6 , 
         \CIC1Sin/d_d_tmp_5 , \CIC1Sin/d_tmp_5 , \CIC1Sin/d6_71_N_1459_6 , 
         \CIC1Sin/d6_71_N_1459_5 , \CIC1Sin/n11247 , \CIC1Sin/d6_5 , 
         \CIC1Sin/d6_6 , \CIC1Sin/d_d_tmp_4 , \CIC1Sin/d_tmp_4 , 
         \CIC1Sin/d_d_tmp_3 , \CIC1Sin/d_tmp_3 , \CIC1Sin/d6_71_N_1459_4 , 
         \CIC1Sin/d6_71_N_1459_3 , \CIC1Sin/n11246 , \CIC1Sin/d6_3 , 
         \CIC1Sin/d6_4 , \CIC1Sin/d_d_tmp_2 , \CIC1Sin/d_tmp_2 , 
         \CIC1Sin/d_d_tmp_1 , \CIC1Sin/d_tmp_1 , \CIC1Sin/d6_71_N_1459_2 , 
         \CIC1Sin/d6_71_N_1459_1 , \CIC1Sin/n11245 , \CIC1Sin/d6_1 , 
         \CIC1Sin/d6_2 , \CIC1Sin/d_d_tmp_0 , \CIC1Sin/d_tmp_0 , 
         \CIC1Sin/d6_71_N_1459_0 , \CIC1Sin/osc_clk_enable_75 , \CIC1Sin/d6_0 , 
         \CIC1Sin/d_d8_35 , \CIC1Sin/d8_35 , \CIC1Sin/d9_71_N_1675_35 , 
         \CIC1Sin/n11223 , \CIC1Sin/d9_35 , \CIC1Sin/d_d8_34 , \CIC1Sin/d8_34 , 
         \CIC1Sin/d_d8_33 , \CIC1Sin/d8_33 , \CIC1Sin/d9_71_N_1675_34 , 
         \CIC1Sin/d9_71_N_1675_33 , \CIC1Sin/n11222 , \CIC1Sin/d9_33 , 
         \CIC1Sin/d9_34 , \CIC1Sin/d_d8_32 , \CIC1Sin/d8_32 , 
         \CIC1Sin/d_d8_31 , \CIC1Sin/d8_31 , \CIC1Sin/d9_71_N_1675_32 , 
         \CIC1Sin/d9_71_N_1675_31 , \CIC1Sin/n11221 , \CIC1Sin/d9_31 , 
         \CIC1Sin/d9_32 , \CIC1Sin/d_d8_30 , \CIC1Sin/d8_30 , 
         \CIC1Sin/d_d8_29 , \CIC1Sin/d8_29 , \CIC1Sin/d9_71_N_1675_30 , 
         \CIC1Sin/d9_71_N_1675_29 , \CIC1Sin/n11220 , \CIC1Sin/d9_29 , 
         \CIC1Sin/d9_30 , \CIC1Sin/d_d8_28 , \CIC1Sin/d8_28 , 
         \CIC1Sin/d_d8_27 , \CIC1Sin/d8_27 , \CIC1Sin/d9_71_N_1675_28 , 
         \CIC1Sin/d9_71_N_1675_27 , \CIC1Sin/n11219 , \CIC1Sin/d9_27 , 
         \CIC1Sin/d9_28 , \CIC1Sin/d_d8_26 , \CIC1Sin/d8_26 , 
         \CIC1Sin/d_d8_25 , \CIC1Sin/d8_25 , \CIC1Sin/d9_71_N_1675_26 , 
         \CIC1Sin/d9_71_N_1675_25 , \CIC1Sin/n11218 , \CIC1Sin/d9_25 , 
         \CIC1Sin/d9_26 , \CIC1Sin/d_d8_24 , \CIC1Sin/d8_24 , 
         \CIC1Sin/d_d8_23 , \CIC1Sin/d8_23 , \CIC1Sin/d9_71_N_1675_24 , 
         \CIC1Sin/d9_71_N_1675_23 , \CIC1Sin/n11217 , \CIC1Sin/d9_23 , 
         \CIC1Sin/d9_24 , \CIC1Sin/d_d8_22 , \CIC1Sin/d8_22 , 
         \CIC1Sin/d_d8_21 , \CIC1Sin/d8_21 , \CIC1Sin/d9_71_N_1675_22 , 
         \CIC1Sin/d9_71_N_1675_21 , \CIC1Sin/n11216 , \CIC1Sin/d9_21 , 
         \CIC1Sin/d9_22 , \CIC1Sin/d_d8_20 , \CIC1Sin/d8_20 , 
         \CIC1Sin/d_d8_19 , \CIC1Sin/d8_19 , \CIC1Sin/d9_71_N_1675_20 , 
         \CIC1Sin/d9_71_N_1675_19 , \CIC1Sin/n11215 , \CIC1Sin/d9_19 , 
         \CIC1Sin/d9_20 , \CIC1Sin/d_d8_18 , \CIC1Sin/d8_18 , 
         \CIC1Sin/d_d8_17 , \CIC1Sin/d8_17 , \CIC1Sin/d9_71_N_1675_18 , 
         \CIC1Sin/d9_71_N_1675_17 , \CIC1Sin/n11214 , \CIC1Sin/d9_17 , 
         \CIC1Sin/d9_18 , \CIC1Sin/d_d8_16 , \CIC1Sin/d8_16 , 
         \CIC1Sin/d_d8_15 , \CIC1Sin/d8_15 , \CIC1Sin/d9_71_N_1675_16 , 
         \CIC1Sin/d9_71_N_1675_15 , \CIC1Sin/n11213 , \CIC1Sin/d9_15 , 
         \CIC1Sin/d9_16 , \CIC1Sin/d_d8_14 , \CIC1Sin/d8_14 , 
         \CIC1Sin/d_d8_13 , \CIC1Sin/d8_13 , \CIC1Sin/d9_71_N_1675_14 , 
         \CIC1Sin/d9_71_N_1675_13 , \CIC1Sin/n11212 , \CIC1Sin/d9_13 , 
         \CIC1Sin/d9_14 , \CIC1Sin/d_d8_12 , \CIC1Sin/d8_12 , 
         \CIC1Sin/d_d8_11 , \CIC1Sin/d8_11 , \CIC1Sin/d9_71_N_1675_12 , 
         \CIC1Sin/d9_71_N_1675_11 , \CIC1Sin/n11211 , \CIC1Sin/d9_11 , 
         \CIC1Sin/d9_12 , \CIC1Sin/d_d8_10 , \CIC1Sin/d8_10 , \CIC1Sin/d_d8_9 , 
         \CIC1Sin/d8_9 , \CIC1Sin/d9_71_N_1675_10 , \CIC1Sin/d9_71_N_1675_9 , 
         \CIC1Sin/n11210 , \CIC1Sin/d_d8_8 , \CIC1Sin/d8_8 , \CIC1Sin/d_d8_7 , 
         \CIC1Sin/d8_7 , \CIC1Sin/d9_71_N_1675_8 , \CIC1Sin/d9_71_N_1675_7 , 
         \CIC1Sin/n11209 , \CIC1Sin/d_d8_6 , \CIC1Sin/d8_6 , \CIC1Sin/d_d8_5 , 
         \CIC1Sin/d8_5 , \CIC1Sin/d9_71_N_1675_6 , \CIC1Sin/d9_71_N_1675_5 , 
         \CIC1Sin/n11208 , \CIC1Sin/d_d8_4 , \CIC1Sin/d8_4 , \CIC1Sin/d_d8_3 , 
         \CIC1Sin/d8_3 , \CIC1Sin/d9_71_N_1675_4 , \CIC1Sin/d9_71_N_1675_3 , 
         \CIC1Sin/n11207 , \CIC1Sin/d_d8_2 , \CIC1Sin/d8_2 , \CIC1Sin/d_d8_1 , 
         \CIC1Sin/d8_1 , \CIC1Sin/d9_71_N_1675_2 , \CIC1Sin/d9_71_N_1675_1 , 
         \CIC1Sin/n11206 , \CIC1Sin/d_d8_0 , \CIC1Sin/d8_0 , 
         \CIC1Sin/d9_71_N_1675_0 , \CIC1Sin/count_15 , \CIC1Sin/n376 , 
         \CIC1Sin/n8376 , \CIC1Sin/n11099 , \CIC1Sin/count_14 , 
         \CIC1Sin/count_13 , \CIC1Sin/n377 , \CIC1Sin/n378 , \CIC1Sin/n11098 , 
         \CIC1Sin/count_12 , \CIC1Sin/count_11 , \CIC1Sin/n379 , 
         \CIC1Sin/n11097 , \CIC1Sin/n380 , \CIC1Sin/count_10 , 
         \CIC1Sin/count_9 , \CIC1Sin/n381 , \CIC1Sin/n382 , \CIC1Sin/n11096 , 
         \CIC1Sin/count_8 , \CIC1Sin/count_7 , \CIC1Sin/n383 , \CIC1Sin/n384 , 
         \CIC1Sin/n11095 , \CIC1Sin/count_6 , \CIC1Sin/count_5 , 
         \CIC1Sin/n385 , \CIC1Sin/n386 , \CIC1Sin/n11094 , \CIC1Sin/count_4 , 
         \CIC1Sin/count_3 , \CIC1Sin/n387 , \CIC1Sin/n388 , \CIC1Sin/n11093 , 
         \CIC1Sin/count_2 , \CIC1Sin/count_1 , \CIC1Sin/n389 , \CIC1Sin/n390 , 
         \CIC1Sin/n11092 , \CIC1Sin/count_0 , \CIC1Sin/n391 , \CIC1Sin/n11072 , 
         \CIC1Sin/n4884 , \CIC1Sin/d5_35 , \CIC1Sin/d4_35 , \CIC1Sin/d5_34 , 
         \CIC1Sin/d4_34 , \CIC1Sin/d5_71_N_706_35 , \CIC1Sin/d5_71_N_706_34 , 
         \CIC1Sin/n11071 , \CIC1Sin/d5_33 , \CIC1Sin/d4_33 , \CIC1Sin/d5_32 , 
         \CIC1Sin/d4_32 , \CIC1Sin/d5_71_N_706_33 , \CIC1Sin/d5_71_N_706_32 , 
         \CIC1Sin/n11070 , \CIC1Sin/d5_31 , \CIC1Sin/d4_31 , \CIC1Sin/d5_30 , 
         \CIC1Sin/d4_30 , \CIC1Sin/d5_71_N_706_31 , \CIC1Sin/d5_71_N_706_30 , 
         \CIC1Sin/n11069 , \CIC1Sin/d5_29 , \CIC1Sin/d4_29 , \CIC1Sin/d5_28 , 
         \CIC1Sin/d4_28 , \CIC1Sin/d5_71_N_706_29 , \CIC1Sin/d5_71_N_706_28 , 
         \CIC1Sin/n11068 , \CIC1Sin/d5_27 , \CIC1Sin/d4_27 , \CIC1Sin/d5_26 , 
         \CIC1Sin/d4_26 , \CIC1Sin/d5_71_N_706_27 , \CIC1Sin/d5_71_N_706_26 , 
         \CIC1Sin/n11067 , \CIC1Sin/d5_25 , \CIC1Sin/d4_25 , \CIC1Sin/d5_24 , 
         \CIC1Sin/d4_24 , \CIC1Sin/d5_71_N_706_25 , \CIC1Sin/d5_71_N_706_24 , 
         \CIC1Sin/n11066 , \CIC1Sin/d5_23 , \CIC1Sin/d4_23 , \CIC1Sin/d5_22 , 
         \CIC1Sin/d4_22 , \CIC1Sin/d5_71_N_706_23 , \CIC1Sin/d5_71_N_706_22 , 
         \CIC1Sin/n11065 , \CIC1Sin/d5_21 , \CIC1Sin/d4_21 , \CIC1Sin/d5_20 , 
         \CIC1Sin/d4_20 , \CIC1Sin/d5_71_N_706_21 , \CIC1Sin/d5_71_N_706_20 , 
         \CIC1Sin/n11064 , \CIC1Sin/d5_19 , \CIC1Sin/d4_19 , \CIC1Sin/d5_18 , 
         \CIC1Sin/d4_18 , \CIC1Sin/d5_71_N_706_19 , \CIC1Sin/d5_71_N_706_18 , 
         \CIC1Sin/n11063 , \CIC1Sin/d5_17 , \CIC1Sin/d4_17 , \CIC1Sin/d5_16 , 
         \CIC1Sin/d4_16 , \CIC1Sin/d5_71_N_706_17 , \CIC1Sin/d5_71_N_706_16 , 
         \CIC1Sin/n11062 , \CIC1Sin/d5_15 , \CIC1Sin/d4_15 , \CIC1Sin/d5_14 , 
         \CIC1Sin/d4_14 , \CIC1Sin/d5_71_N_706_15 , \CIC1Sin/d5_71_N_706_14 , 
         \CIC1Sin/n11061 , \CIC1Sin/d5_13 , \CIC1Sin/d4_13 , \CIC1Sin/d5_12 , 
         \CIC1Sin/d4_12 , \CIC1Sin/d5_71_N_706_13 , \CIC1Sin/d5_71_N_706_12 , 
         \CIC1Sin/n11060 , \CIC1Sin/d5_11 , \CIC1Sin/d4_11 , \CIC1Sin/d5_10 , 
         \CIC1Sin/d4_10 , \CIC1Sin/d5_71_N_706_11 , \CIC1Sin/d5_71_N_706_10 , 
         \CIC1Sin/n11059 , \CIC1Sin/d5_9 , \CIC1Sin/d4_9 , \CIC1Sin/d5_8 , 
         \CIC1Sin/d4_8 , \CIC1Sin/d5_71_N_706_9 , \CIC1Sin/d5_71_N_706_8 , 
         \CIC1Sin/n11058 , \CIC1Sin/d5_7 , \CIC1Sin/d4_7 , \CIC1Sin/d5_6 , 
         \CIC1Sin/d4_6 , \CIC1Sin/d5_71_N_706_7 , \CIC1Sin/d5_71_N_706_6 , 
         \CIC1Sin/n11057 , \CIC1Sin/d5_5 , \CIC1Sin/d4_5 , \CIC1Sin/d5_4 , 
         \CIC1Sin/d4_4 , \CIC1Sin/d5_71_N_706_5 , \CIC1Sin/d5_71_N_706_4 , 
         \CIC1Sin/n11056 , \CIC1Sin/d5_3 , \CIC1Sin/d4_3 , \CIC1Sin/d5_2 , 
         \CIC1Sin/d4_2 , \CIC1Sin/d5_71_N_706_3 , \CIC1Sin/d5_71_N_706_2 , 
         \CIC1Sin/n11055 , \CIC1Sin/d5_1 , \CIC1Sin/d4_1 , \CIC1Sin/d5_0 , 
         \CIC1Sin/d4_0 , \CIC1Sin/d5_71_N_706_1 , \CIC1Sin/n11053 , 
         \CIC1Sin/n4732 , \CIC1Sin/d3_35 , \CIC1Sin/d3_34 , 
         \CIC1Sin/d4_71_N_634_35 , \CIC1Sin/d4_71_N_634_34 , \CIC1Sin/n11052 , 
         \CIC1Sin/d3_33 , \CIC1Sin/d3_32 , \CIC1Sin/d4_71_N_634_33 , 
         \CIC1Sin/d4_71_N_634_32 , \CIC1Sin/n11051 , \CIC1Sin/d3_31 , 
         \CIC1Sin/d3_30 , \CIC1Sin/d4_71_N_634_31 , \CIC1Sin/d4_71_N_634_30 , 
         \CIC1Sin/n11050 , \CIC1Sin/d3_29 , \CIC1Sin/d3_28 , 
         \CIC1Sin/d4_71_N_634_29 , \CIC1Sin/d4_71_N_634_28 , \CIC1Sin/n11049 , 
         \CIC1Sin/d3_27 , \CIC1Sin/d3_26 , \CIC1Sin/d4_71_N_634_27 , 
         \CIC1Sin/d4_71_N_634_26 , \CIC1Sin/n11048 , \CIC1Sin/d3_25 , 
         \CIC1Sin/d3_24 , \CIC1Sin/d4_71_N_634_25 , \CIC1Sin/d4_71_N_634_24 , 
         \CIC1Sin/n11047 , \CIC1Sin/d3_23 , \CIC1Sin/d3_22 , 
         \CIC1Sin/d4_71_N_634_23 , \CIC1Sin/d4_71_N_634_22 , \CIC1Sin/n11046 , 
         \CIC1Sin/d3_21 , \CIC1Sin/d3_20 , \CIC1Sin/d4_71_N_634_21 , 
         \CIC1Sin/d4_71_N_634_20 , \CIC1Sin/n11045 , \CIC1Sin/d3_19 , 
         \CIC1Sin/d3_18 , \CIC1Sin/d4_71_N_634_19 , \CIC1Sin/d4_71_N_634_18 , 
         \CIC1Sin/n11044 , \CIC1Sin/d3_17 , \CIC1Sin/d3_16 , 
         \CIC1Sin/d4_71_N_634_17 , \CIC1Sin/d4_71_N_634_16 , \CIC1Sin/n11043 , 
         \CIC1Sin/d3_15 , \CIC1Sin/d3_14 , \CIC1Sin/d4_71_N_634_15 , 
         \CIC1Sin/d4_71_N_634_14 , \CIC1Sin/n11042 , \CIC1Sin/d3_13 , 
         \CIC1Sin/d3_12 , \CIC1Sin/d4_71_N_634_13 , \CIC1Sin/d4_71_N_634_12 , 
         \CIC1Sin/n11041 , \CIC1Sin/d3_11 , \CIC1Sin/d3_10 , 
         \CIC1Sin/d4_71_N_634_11 , \CIC1Sin/d4_71_N_634_10 , \CIC1Sin/n11040 , 
         \CIC1Sin/d3_9 , \CIC1Sin/d3_8 , \CIC1Sin/d4_71_N_634_9 , 
         \CIC1Sin/d4_71_N_634_8 , \CIC1Sin/n11039 , \CIC1Sin/d3_7 , 
         \CIC1Sin/d3_6 , \CIC1Sin/d4_71_N_634_7 , \CIC1Sin/d4_71_N_634_6 , 
         \CIC1Sin/n11038 , \CIC1Sin/d3_5 , \CIC1Sin/d3_4 , 
         \CIC1Sin/d4_71_N_634_5 , \CIC1Sin/d4_71_N_634_4 , \CIC1Sin/n11037 , 
         \CIC1Sin/d3_3 , \CIC1Sin/d3_2 , \CIC1Sin/d4_71_N_634_3 , 
         \CIC1Sin/d4_71_N_634_2 , \CIC1Sin/n11036 , \CIC1Sin/d3_1 , 
         \CIC1Sin/d3_0 , \CIC1Sin/d4_71_N_634_1 , \CIC1Sin/n11034 , 
         \CIC1Sin/n4580 , \CIC1Sin/d2_35 , \CIC1Sin/d2_34 , 
         \CIC1Sin/d3_71_N_562_35 , \CIC1Sin/d3_71_N_562_34 , \CIC1Sin/n11033 , 
         \CIC1Sin/d2_33 , \CIC1Sin/d2_32 , \CIC1Sin/d3_71_N_562_33 , 
         \CIC1Sin/d3_71_N_562_32 , \CIC1Sin/n11032 , \CIC1Sin/d2_31 , 
         \CIC1Sin/d2_30 , \CIC1Sin/d3_71_N_562_31 , \CIC1Sin/d3_71_N_562_30 , 
         \CIC1Sin/n11031 , \CIC1Sin/d2_29 , \CIC1Sin/d2_28 , 
         \CIC1Sin/d3_71_N_562_29 , \CIC1Sin/d3_71_N_562_28 , \CIC1Sin/n11030 , 
         \CIC1Sin/d2_27 , \CIC1Sin/d2_26 , \CIC1Sin/d3_71_N_562_27 , 
         \CIC1Sin/d3_71_N_562_26 , \CIC1Sin/n11029 , \CIC1Sin/d2_25 , 
         \CIC1Sin/d2_24 , \CIC1Sin/d3_71_N_562_25 , \CIC1Sin/d3_71_N_562_24 , 
         \CIC1Sin/n11028 , \CIC1Sin/d2_23 , \CIC1Sin/d2_22 , 
         \CIC1Sin/d3_71_N_562_23 , \CIC1Sin/d3_71_N_562_22 , \CIC1Sin/n11027 , 
         \CIC1Sin/d2_21 , \CIC1Sin/d2_20 , \CIC1Sin/d3_71_N_562_21 , 
         \CIC1Sin/d3_71_N_562_20 , \CIC1Sin/n11026 , \CIC1Sin/d2_19 , 
         \CIC1Sin/d2_18 , \CIC1Sin/d3_71_N_562_19 , \CIC1Sin/d3_71_N_562_18 , 
         \CIC1Sin/n11025 , \CIC1Sin/d2_17 , \CIC1Sin/d2_16 , 
         \CIC1Sin/d3_71_N_562_17 , \CIC1Sin/d3_71_N_562_16 , \CIC1Sin/n11024 , 
         \CIC1Sin/d2_15 , \CIC1Sin/d2_14 , \CIC1Sin/d3_71_N_562_15 , 
         \CIC1Sin/d3_71_N_562_14 , \CIC1Sin/n11023 , \CIC1Sin/d2_13 , 
         \CIC1Sin/d2_12 , \CIC1Sin/d3_71_N_562_13 , \CIC1Sin/d3_71_N_562_12 , 
         \CIC1Sin/n11022 , \CIC1Sin/d2_11 , \CIC1Sin/d2_10 , 
         \CIC1Sin/d3_71_N_562_11 , \CIC1Sin/d3_71_N_562_10 , \CIC1Sin/n11021 , 
         \CIC1Sin/d2_9 , \CIC1Sin/d2_8 , \CIC1Sin/d3_71_N_562_9 , 
         \CIC1Sin/d3_71_N_562_8 , \CIC1Sin/n11020 , \CIC1Sin/d2_7 , 
         \CIC1Sin/d2_6 , \CIC1Sin/d3_71_N_562_7 , \CIC1Sin/d3_71_N_562_6 , 
         \CIC1Sin/n11019 , \CIC1Sin/d2_5 , \CIC1Sin/d2_4 , 
         \CIC1Sin/d3_71_N_562_5 , \CIC1Sin/d3_71_N_562_4 , \CIC1Sin/n11018 , 
         \CIC1Sin/d2_3 , \CIC1Sin/d2_2 , \CIC1Sin/d3_71_N_562_3 , 
         \CIC1Sin/d3_71_N_562_2 , \CIC1Sin/n11017 , \CIC1Sin/d2_1 , 
         \CIC1Sin/d2_0 , \CIC1Sin/d3_71_N_562_1 , \CIC1Sin/n11015 , 
         \CIC1Sin/d1_35 , \CIC1Sin/d1_34 , \CIC1Sin/d2_71_N_490_35 , 
         \CIC1Sin/d2_71_N_490_34 , \CIC1Sin/n11014 , \CIC1Sin/d1_33 , 
         \CIC1Sin/d1_32 , \CIC1Sin/d2_71_N_490_33 , \CIC1Sin/d2_71_N_490_32 , 
         \CIC1Sin/n11013 , \CIC1Sin/d1_31 , \CIC1Sin/d1_30 , 
         \CIC1Sin/d2_71_N_490_31 , \CIC1Sin/d2_71_N_490_30 , \CIC1Sin/n11012 , 
         \CIC1Sin/d1_29 , \CIC1Sin/d1_28 , \CIC1Sin/d2_71_N_490_29 , 
         \CIC1Sin/d2_71_N_490_28 , \CIC1Sin/n11011 , \CIC1Sin/d1_27 , 
         \CIC1Sin/d1_26 , \CIC1Sin/d2_71_N_490_27 , \CIC1Sin/d2_71_N_490_26 , 
         \CIC1Sin/n11010 , \CIC1Sin/d1_25 , \CIC1Sin/d1_24 , 
         \CIC1Sin/d2_71_N_490_25 , \CIC1Sin/d2_71_N_490_24 , \CIC1Sin/n11009 , 
         \CIC1Sin/d1_23 , \CIC1Sin/d1_22 , \CIC1Sin/d2_71_N_490_23 , 
         \CIC1Sin/d2_71_N_490_22 , \CIC1Sin/n11008 , \CIC1Sin/d1_21 , 
         \CIC1Sin/d1_20 , \CIC1Sin/d2_71_N_490_21 , \CIC1Sin/d2_71_N_490_20 , 
         \CIC1Sin/n11007 , \CIC1Sin/d1_19 , \CIC1Sin/d1_18 , 
         \CIC1Sin/d2_71_N_490_19 , \CIC1Sin/d2_71_N_490_18 , \CIC1Sin/n11006 , 
         \CIC1Sin/d1_17 , \CIC1Sin/d1_16 , \CIC1Sin/d2_71_N_490_17 , 
         \CIC1Sin/d2_71_N_490_16 , \CIC1Sin/n11005 , \CIC1Sin/d1_15 , 
         \CIC1Sin/d1_14 , \CIC1Sin/d2_71_N_490_15 , \CIC1Sin/d2_71_N_490_14 , 
         \CIC1Sin/n11004 , \CIC1Sin/d1_13 , \CIC1Sin/d1_12 , 
         \CIC1Sin/d2_71_N_490_13 , \CIC1Sin/d2_71_N_490_12 , \CIC1Sin/n11003 , 
         \CIC1Sin/d1_11 , \CIC1Sin/d1_10 , \CIC1Sin/d2_71_N_490_11 , 
         \CIC1Sin/d2_71_N_490_10 , \CIC1Sin/n11002 , \CIC1Sin/d1_9 , 
         \CIC1Sin/d1_8 , \CIC1Sin/d2_71_N_490_9 , \CIC1Sin/d2_71_N_490_8 , 
         \CIC1Sin/n11001 , \CIC1Sin/d1_7 , \CIC1Sin/d1_6 , 
         \CIC1Sin/d2_71_N_490_7 , \CIC1Sin/d2_71_N_490_6 , \CIC1Sin/n11000 , 
         \CIC1Sin/d1_5 , \CIC1Sin/d1_4 , \CIC1Sin/d2_71_N_490_5 , 
         \CIC1Sin/d2_71_N_490_4 , \CIC1Sin/n10999 , \CIC1Sin/d1_3 , 
         \CIC1Sin/d1_2 , \CIC1Sin/d2_71_N_490_3 , \CIC1Sin/d2_71_N_490_2 , 
         \CIC1Sin/n10998 , \CIC1Sin/d1_1 , \CIC1Sin/d1_0 , 
         \CIC1Sin/d2_71_N_490_1 , \CIC1Sin/n10953 , \CIC1Sin/d1_71_N_418_35 , 
         \CIC1Sin/d1_71_N_418_34 , \CIC1Sin/n10952 , \CIC1Sin/d1_71_N_418_33 , 
         \CIC1Sin/d1_71_N_418_32 , \CIC1Sin/n10951 , \CIC1Sin/d1_71_N_418_31 , 
         \CIC1Sin/d1_71_N_418_30 , \CIC1Sin/n10950 , \CIC1Sin/d1_71_N_418_29 , 
         \CIC1Sin/d1_71_N_418_28 , \CIC1Sin/n10949 , \CIC1Sin/d1_71_N_418_27 , 
         \CIC1Sin/d1_71_N_418_26 , \CIC1Sin/n10948 , \CIC1Sin/d1_71_N_418_25 , 
         \CIC1Sin/d1_71_N_418_24 , \CIC1Sin/n10947 , \CIC1Sin/d1_71_N_418_23 , 
         \CIC1Sin/d1_71_N_418_22 , \CIC1Sin/n10946 , \CIC1Sin/d1_71_N_418_21 , 
         \CIC1Sin/d1_71_N_418_20 , \CIC1Sin/n10945 , \CIC1Sin/d1_71_N_418_19 , 
         \CIC1Sin/d1_71_N_418_18 , \CIC1Sin/n10944 , \CIC1Sin/d1_71_N_418_17 , 
         \CIC1Sin/d1_71_N_418_16 , \CIC1Sin/n10943 , \CIC1Sin/d1_71_N_418_15 , 
         \CIC1Sin/d1_71_N_418_14 , \CIC1Sin/n10942 , \CIC1Sin/d1_71_N_418_13 , 
         \CIC1Sin/d1_71_N_418_12 , \CIC1Sin/n10941 , MixerOutSin_10, 
         \CIC1Sin/d1_71_N_418_11 , \CIC1Sin/d1_71_N_418_10 , \CIC1Sin/n10940 , 
         MixerOutSin_9, MixerOutSin_8, \CIC1Sin/d1_71_N_418_9 , 
         \CIC1Sin/d1_71_N_418_8 , \CIC1Sin/n10939 , MixerOutSin_7, 
         MixerOutSin_6, \CIC1Sin/d1_71_N_418_7 , \CIC1Sin/d1_71_N_418_6 , 
         \CIC1Sin/n10938 , MixerOutSin_5, MixerOutSin_4, 
         \CIC1Sin/d1_71_N_418_5 , \CIC1Sin/d1_71_N_418_4 , \CIC1Sin/n10937 , 
         MixerOutSin_3, MixerOutSin_2, \CIC1Sin/d1_71_N_418_3 , 
         \CIC1Sin/d1_71_N_418_2 , \CIC1Sin/n10936 , MixerOutSin_1, 
         MixerOutSin_0, \CIC1Sin/d1_71_N_418_1 , \CIC1Sin/d_d6_35 , 
         \CIC1Sin/d7_71_N_1531_35 , \CIC1Sin/n12424 , \CIC1Sin/d7_35 , 
         \CIC1Sin/d_d6_34 , \CIC1Sin/d_d6_33 , \CIC1Sin/d7_71_N_1531_34 , 
         \CIC1Sin/d7_71_N_1531_33 , \CIC1Sin/n12423 , \CIC1Sin/d7_33 , 
         \CIC1Sin/d7_34 , \CIC1Sin/d_d6_32 , \CIC1Sin/d_d6_31 , 
         \CIC1Sin/d7_71_N_1531_32 , \CIC1Sin/d7_71_N_1531_31 , 
         \CIC1Sin/n12422 , \CIC1Sin/d7_31 , \CIC1Sin/d7_32 , \CIC1Sin/d_d7_35 , 
         \CIC1Sin/d8_71_N_1603_35 , \CIC1Sin/osc_clk_enable_447 , 
         \CIC1Sin/n11777 , \CIC1Sin/d_d7_34 , \CIC1Sin/d_d7_33 , 
         \CIC1Sin/d8_71_N_1603_34 , \CIC1Sin/d8_71_N_1603_33 , 
         \CIC1Sin/n11776 , \CIC1Sin/d_d7_32 , \CIC1Sin/d_d7_31 , 
         \CIC1Sin/d8_71_N_1603_32 , \CIC1Sin/d8_71_N_1603_31 , 
         \CIC1Sin/n11775 , \CIC1Sin/d_d7_30 , \CIC1Sin/d7_30 , 
         \CIC1Sin/d_d7_29 , \CIC1Sin/d7_29 , \CIC1Sin/d8_71_N_1603_30 , 
         \CIC1Sin/d8_71_N_1603_29 , \CIC1Sin/n11774 , \CIC1Sin/d_d7_28 , 
         \CIC1Sin/d7_28 , \CIC1Sin/d_d7_27 , \CIC1Sin/d7_27 , 
         \CIC1Sin/d8_71_N_1603_28 , \CIC1Sin/d8_71_N_1603_27 , 
         \CIC1Sin/n11773 , \CIC1Sin/d_d7_26 , \CIC1Sin/d7_26 , 
         \CIC1Sin/d_d7_25 , \CIC1Sin/d7_25 , \CIC1Sin/d8_71_N_1603_26 , 
         \CIC1Sin/d8_71_N_1603_25 , \CIC1Sin/n11772 , \CIC1Sin/d_d7_24 , 
         \CIC1Sin/d7_24 , \CIC1Sin/d_d7_23 , \CIC1Sin/d7_23 , 
         \CIC1Sin/d8_71_N_1603_24 , \CIC1Sin/d8_71_N_1603_23 , 
         \CIC1Sin/n11771 , \CIC1Sin/d_d7_22 , \CIC1Sin/d7_22 , 
         \CIC1Sin/d_d7_21 , \CIC1Sin/d7_21 , \CIC1Sin/d8_71_N_1603_22 , 
         \CIC1Sin/d8_71_N_1603_21 , \CIC1Sin/n11770 , \CIC1Sin/d_d7_20 , 
         \CIC1Sin/d7_20 , \CIC1Sin/d_d7_19 , \CIC1Sin/d7_19 , 
         \CIC1Sin/d8_71_N_1603_20 , \CIC1Sin/d8_71_N_1603_19 , 
         \CIC1Sin/n11769 , \CIC1Sin/d_d7_18 , \CIC1Sin/d7_18 , 
         \CIC1Sin/d_d7_17 , \CIC1Sin/d7_17 , \CIC1Sin/d8_71_N_1603_18 , 
         \CIC1Sin/d8_71_N_1603_17 , \CIC1Sin/n11768 , \CIC1Sin/d_d7_16 , 
         \CIC1Sin/d7_16 , \CIC1Sin/d_d7_15 , \CIC1Sin/d7_15 , 
         \CIC1Sin/d8_71_N_1603_16 , \CIC1Sin/d8_71_N_1603_15 , 
         \CIC1Sin/n11767 , \CIC1Sin/d_d7_14 , \CIC1Sin/d7_14 , 
         \CIC1Sin/d_d7_13 , \CIC1Sin/d7_13 , \CIC1Sin/d8_71_N_1603_14 , 
         \CIC1Sin/d8_71_N_1603_13 , \CIC1Sin/n11766 , \CIC1Sin/d_d7_12 , 
         \CIC1Sin/d7_12 , \CIC1Sin/d_d7_11 , \CIC1Sin/d7_11 , 
         \CIC1Sin/d8_71_N_1603_12 , \CIC1Sin/d8_71_N_1603_11 , 
         \CIC1Sin/n11765 , \CIC1Sin/d_d7_10 , \CIC1Sin/d7_10 , 
         \CIC1Sin/d_d7_9 , \CIC1Sin/d7_9 , \CIC1Sin/d8_71_N_1603_10 , 
         \CIC1Sin/d8_71_N_1603_9 , \CIC1Sin/n11764 , \CIC1Sin/d_d7_8 , 
         \CIC1Sin/d7_8 , \CIC1Sin/d_d7_7 , \CIC1Sin/d7_7 , 
         \CIC1Sin/d8_71_N_1603_8 , \CIC1Sin/d8_71_N_1603_7 , \CIC1Sin/n11763 , 
         \CIC1Sin/d_d7_6 , \CIC1Sin/d7_6 , \CIC1Sin/d_d7_5 , \CIC1Sin/d7_5 , 
         \CIC1Sin/d8_71_N_1603_6 , \CIC1Sin/d8_71_N_1603_5 , \CIC1Sin/n11762 , 
         \CIC1Sin/d_d7_4 , \CIC1Sin/d7_4 , \CIC1Sin/d_d7_3 , \CIC1Sin/d7_3 , 
         \CIC1Sin/d8_71_N_1603_4 , \CIC1Sin/d8_71_N_1603_3 , \CIC1Sin/n11761 , 
         \CIC1Sin/d_d7_2 , \CIC1Sin/d7_2 , \CIC1Sin/d_d7_1 , \CIC1Sin/d7_1 , 
         \CIC1Sin/d8_71_N_1603_2 , \CIC1Sin/d8_71_N_1603_1 , \CIC1Sin/n11760 , 
         \CIC1Sin/d_d7_0 , \CIC1Sin/d7_0 , \CIC1Sin/d8_71_N_1603_0 , 
         \CIC1Sin/d_d9_35 , \CIC1Sin/n11641 , \CIC1Sin/n5948 , 
         \CIC1Sin/d_d9_34 , \CIC1Sin/d_d9_33 , \CIC1Sin/n11640 , 
         \CIC1Sin/d_d9_32 , \CIC1Sin/d_d9_31 , \CIC1Sin/n11639 , 
         \CIC1Sin/d_d9_30 , \CIC1Sin/d_d9_29 , \CIC1Sin/n11638 , 
         \CIC1Sin/d_d9_28 , \CIC1Sin/d_d9_27 , \CIC1Sin/n11637 , 
         \CIC1Sin/d_d9_26 , \CIC1Sin/d_d9_25 , \CIC1Sin/n11636 , 
         \CIC1Sin/d_d9_24 , \CIC1Sin/d_d9_23 , \CIC1Sin/n11635 , 
         \CIC1Sin/d_d9_22 , \CIC1Sin/d_d9_21 , \CIC1Sin/n11634 , 
         \CIC1Sin/d_d9_20 , \CIC1Sin/d_d9_19 , \CIC1Sin/n11633 , 
         \CIC1Sin/d_d9_18 , \CIC1Sin/d_d9_17 , \CIC1Sin/n11632 , 
         \CIC1Sin/d_d9_16 , \CIC1Sin/d_d9_15 , \CIC1Sin/n11631 , 
         \CIC1Sin/d_d9_14 , \CIC1Sin/d_d9_13 , \CIC1Sin/n11630 , 
         \CIC1Sin/d_d9_12 , \CIC1Sin/d_d9_11 , \CIC1Sin/d_d6_30 , 
         \CIC1Sin/d_d6_29 , \CIC1Sin/d7_71_N_1531_30 , 
         \CIC1Sin/d7_71_N_1531_29 , \CIC1Sin/n12421 , \CIC1Sin/d_d6_28 , 
         \CIC1Sin/d_d6_27 , \CIC1Sin/d7_71_N_1531_27 , 
         \CIC1Sin/osc_clk_enable_297 , \CIC1Sin/n12420 , 
         \CIC1Sin/d7_71_N_1531_28 , \CIC1Sin/d_d6_26 , \CIC1Sin/d_d6_25 , 
         \CIC1Sin/d7_71_N_1531_26 , \CIC1Sin/d7_71_N_1531_25 , 
         \CIC1Sin/n12419 , \CIC1Sin/d_d6_24 , \CIC1Sin/d_d6_23 , 
         \CIC1Sin/d7_71_N_1531_24 , \CIC1Sin/d7_71_N_1531_23 , 
         \CIC1Sin/n12418 , \CIC1Sin/d_d6_22 , \CIC1Sin/d_d6_21 , 
         \CIC1Sin/d7_71_N_1531_22 , \CIC1Sin/d7_71_N_1531_21 , 
         \CIC1Sin/n12417 , \CIC1Sin/d_d6_20 , \CIC1Sin/d6_20 , 
         \CIC1Sin/d_d6_19 , \CIC1Sin/d7_71_N_1531_20 , 
         \CIC1Sin/d7_71_N_1531_19 , \CIC1Sin/n12416 , \CIC1Sin/d_d6_18 , 
         \CIC1Sin/d_d6_17 , \CIC1Sin/d7_71_N_1531_18 , 
         \CIC1Sin/d7_71_N_1531_17 , \CIC1Sin/n12415 , \CIC1Sin/d_d6_16 , 
         \CIC1Sin/d_d6_15 , \CIC1Sin/d7_71_N_1531_16 , 
         \CIC1Sin/d7_71_N_1531_15 , \CIC1Sin/n12414 , \CIC1Sin/d_d6_14 , 
         \CIC1Sin/d_d6_13 , \CIC1Sin/d7_71_N_1531_14 , 
         \CIC1Sin/d7_71_N_1531_13 , \CIC1Sin/n12413 , \CIC1Sin/d_d6_12 , 
         \CIC1Sin/d_d6_11 , \CIC1Sin/d7_71_N_1531_12 , 
         \CIC1Sin/d7_71_N_1531_11 , \CIC1Sin/n12412 , \CIC1Sin/d_d6_10 , 
         \CIC1Sin/d_d6_9 , \CIC1Sin/d7_71_N_1531_10 , \CIC1Sin/d7_71_N_1531_9 , 
         \CIC1Sin/n12411 , \CIC1Sin/d_d6_8 , \CIC1Sin/d_d6_7 , 
         \CIC1Sin/d7_71_N_1531_8 , \CIC1Sin/d7_71_N_1531_7 , \CIC1Sin/n12410 , 
         \CIC1Sin/d_d6_6 , \CIC1Sin/d_d6_5 , \CIC1Sin/d7_71_N_1531_6 , 
         \CIC1Sin/d7_71_N_1531_5 , \CIC1Sin/n12409 , \CIC1Sin/d_d6_4 , 
         \CIC1Sin/d_d6_3 , \CIC1Sin/d7_71_N_1531_4 , \CIC1Sin/d7_71_N_1531_3 , 
         \CIC1Sin/n12408 , \CIC1Sin/d_d6_2 , \CIC1Sin/d_d6_1 , 
         \CIC1Sin/d7_71_N_1531_2 , \CIC1Sin/d7_71_N_1531_1 , \CIC1Sin/n12407 , 
         \CIC1Sin/d_d6_0 , \CIC1Sin/d7_71_N_1531_0 , \CIC1Sin/d3_67 , 
         \CIC1Sin/d3_66 , \CIC1Sin/n12205 , \CIC1Sin/n4587 , \CIC1Sin/n4586 , 
         \CIC1Sin/d3_65 , \CIC1Sin/d3_64 , \CIC1Sin/n12204 , \CIC1Sin/n4589 , 
         \CIC1Sin/n4588 , \CIC1Sin/d3_63 , \CIC1Sin/d3_62 , \CIC1Sin/n12203 , 
         \CIC1Sin/n4591 , \CIC1Sin/n4590 , \CIC1Sin/d3_61 , \CIC1Sin/d3_60 , 
         \CIC1Sin/n12202 , \CIC1Sin/n4593 , \CIC1Sin/n4592 , \CIC1Sin/d3_59 , 
         \CIC1Sin/d3_58 , \CIC1Sin/n12201 , \CIC1Sin/n4595 , \CIC1Sin/n4594 , 
         \CIC1Sin/d3_57 , \CIC1Sin/d3_56 , \CIC1Sin/n12200 , \CIC1Sin/n4597 , 
         \CIC1Sin/n4596 , \CIC1Sin/d3_55 , \CIC1Sin/d3_54 , \CIC1Sin/n12199 , 
         \CIC1Sin/n4599 , \CIC1Sin/n4598 , \CIC1Sin/d3_53 , \CIC1Sin/d3_52 , 
         \CIC1Sin/n12198 , \CIC1Sin/n4601 , \CIC1Sin/n4600 , \CIC1Sin/d3_51 , 
         \CIC1Sin/d3_50 , \CIC1Sin/n12197 , \CIC1Sin/n4603 , \CIC1Sin/n4602 , 
         \CIC1Sin/d3_49 , \CIC1Sin/d3_48 , \CIC1Sin/n12196 , \CIC1Sin/n4605 , 
         \CIC1Sin/n4604 , \CIC1Sin/d3_47 , \CIC1Sin/d3_46 , \CIC1Sin/n12195 , 
         \CIC1Sin/n4607 , \CIC1Sin/n4606 , \CIC1Sin/d3_45 , \CIC1Sin/d3_44 , 
         \CIC1Sin/n12194 , \CIC1Sin/n4609 , \CIC1Sin/n4608 , \CIC1Sin/d3_43 , 
         \CIC1Sin/d3_42 , \CIC1Sin/n12193 , \CIC1Sin/n4611 , \CIC1Sin/n4610 , 
         \CIC1Sin/d3_41 , \CIC1Sin/d3_40 , \CIC1Sin/n12192 , \CIC1Sin/n4613 , 
         \CIC1Sin/n4612 , \CIC1Sin/d3_39 , \CIC1Sin/d3_38 , \CIC1Sin/n12191 , 
         \CIC1Sin/n4615 , \CIC1Sin/n4614 , \CIC1Sin/d3_37 , \CIC1Sin/d3_36 , 
         \CIC1Sin/n4616 , \CIC1Sin/d3_71_N_562_71 , \CIC1Sin/d3_71_N_562_70 , 
         \CIC1Sin/n12188 , \CIC1Sin/d3_71_N_562_69 , \CIC1Sin/d3_71_N_562_68 , 
         \CIC1Sin/n12187 , \CIC1Sin/d3_71_N_562_67 , \CIC1Sin/d3_71_N_562_66 , 
         \CIC1Sin/n12186 , \CIC1Sin/d3_71_N_562_65 , \CIC1Sin/d3_71_N_562_64 , 
         \CIC1Sin/n12185 , \CIC1Sin/d3_71_N_562_63 , \CIC1Sin/d3_71_N_562_62 , 
         \CIC1Sin/n12184 , \CIC1Sin/d3_71_N_562_61 , \CIC1Sin/d3_71_N_562_60 , 
         \CIC1Sin/n12183 , \CIC1Sin/d3_71_N_562_59 , \CIC1Sin/d3_71_N_562_58 , 
         \CIC1Sin/n12182 , \CIC1Sin/d3_71_N_562_57 , \CIC1Sin/d3_71_N_562_56 , 
         \CIC1Sin/n12181 , \CIC1Sin/d3_71_N_562_55 , \CIC1Sin/d3_71_N_562_54 , 
         \CIC1Sin/n12180 , \CIC1Sin/d3_71_N_562_53 , \CIC1Sin/d3_71_N_562_52 , 
         \CIC1Sin/n12179 , \CIC1Sin/d3_71_N_562_51 , \CIC1Sin/d3_71_N_562_50 , 
         \CIC1Sin/n12178 , \CIC1Sin/d3_71_N_562_49 , \CIC1Sin/d3_71_N_562_48 , 
         \CIC1Sin/n12177 , \CIC1Sin/d3_71_N_562_47 , \CIC1Sin/d3_71_N_562_46 , 
         \CIC1Sin/n12176 , \CIC1Sin/d3_71_N_562_45 , \CIC1Sin/d3_71_N_562_44 , 
         \CIC1Sin/n12175 , \CIC1Sin/d3_71_N_562_43 , \CIC1Sin/d3_71_N_562_42 , 
         \CIC1Sin/n12174 , \CIC1Sin/d3_71_N_562_41 , \CIC1Sin/d3_71_N_562_40 , 
         \CIC1Sin/n12173 , \CIC1Sin/d3_71_N_562_39 , \CIC1Sin/d3_71_N_562_38 , 
         \CIC1Sin/n12172 , \CIC1Sin/n4617 , \CIC1Sin/d3_71_N_562_37 , 
         \CIC1Sin/d3_71_N_562_36 , \CIC1Sin/n12171 , \CIC1Sin/d4_71 , 
         \CIC1Sin/d4_70 , \CIC1Sin/n12166 , \CIC1Sin/n4735 , \CIC1Sin/n4734 , 
         \CIC1Sin/d4_69 , \CIC1Sin/d4_68 , \CIC1Sin/n12165 , \CIC1Sin/n4737 , 
         \CIC1Sin/n4736 , \CIC1Sin/d4_67 , \CIC1Sin/d4_66 , \CIC1Sin/n12164 , 
         \CIC1Sin/n4739 , \CIC1Sin/n4738 , \CIC1Sin/d4_65 , \CIC1Sin/d4_64 , 
         \CIC1Sin/n12163 , \CIC1Sin/n4741 , \CIC1Sin/n4740 , \CIC1Sin/d4_63 , 
         \CIC1Sin/d4_62 , \CIC1Sin/n12162 , \CIC1Sin/n4743 , \CIC1Sin/n4742 , 
         \CIC1Sin/d4_61 , \CIC1Sin/d4_60 , \CIC1Sin/n12161 , \CIC1Sin/n4745 , 
         \CIC1Sin/n4744 , \CIC1Sin/d4_59 , \CIC1Sin/d4_58 , \CIC1Sin/n12160 , 
         \CIC1Sin/n4747 , \CIC1Sin/n4746 , \CIC1Sin/d4_57 , \CIC1Sin/d4_56 , 
         \CIC1Sin/n12159 , \CIC1Sin/n4749 , \CIC1Sin/n4748 , \CIC1Sin/d4_55 , 
         \CIC1Sin/d4_54 , \CIC1Sin/n12158 , \CIC1Sin/n4751 , \CIC1Sin/n4750 , 
         \CIC1Sin/d4_53 , \CIC1Sin/d4_52 , \CIC1Sin/n12157 , \CIC1Sin/n4753 , 
         \CIC1Sin/n4752 , \CIC1Sin/d4_51 , \CIC1Sin/d4_50 , \CIC1Sin/n12156 , 
         \CIC1Sin/n4755 , \CIC1Sin/n4754 , \CIC1Sin/d4_49 , \CIC1Sin/d4_48 , 
         \CIC1Sin/n12155 , \CIC1Sin/n4757 , \CIC1Sin/n4756 , \CIC1Sin/d4_47 , 
         \CIC1Sin/d4_46 , \CIC1Sin/n12154 , \CIC1Sin/n4759 , \CIC1Sin/n4758 , 
         \CIC1Sin/d4_45 , \CIC1Sin/d4_44 , \CIC1Sin/n12153 , \CIC1Sin/n4761 , 
         \CIC1Sin/n4760 , \CIC1Sin/d4_43 , \CIC1Sin/d4_42 , \CIC1Sin/n12152 , 
         \CIC1Sin/n4763 , \CIC1Sin/n4762 , \CIC1Sin/d4_41 , \CIC1Sin/d4_40 , 
         \CIC1Sin/n12151 , \CIC1Sin/n4765 , \CIC1Sin/n4764 , \CIC1Sin/d4_39 , 
         \CIC1Sin/d4_38 , \CIC1Sin/n12150 , \CIC1Sin/n4767 , \CIC1Sin/n4766 , 
         \CIC1Sin/d4_37 , \CIC1Sin/d4_36 , \CIC1Sin/n4768 , 
         \CIC1Sin/d4_71_N_634_71 , \CIC1Sin/d4_71_N_634_70 , \CIC1Sin/n12147 , 
         \CIC1Sin/d4_71_N_634_69 , \CIC1Sin/d4_71_N_634_68 , \CIC1Sin/n12146 , 
         \CIC1Sin/d_d_tmp_71 , \CIC1Sin/d_tmp_71 , \CIC1Sin/n12330 , 
         \CIC1Sin/n4126 , \CIC1Sin/d_d_tmp_70 , \CIC1Sin/d_tmp_70 , 
         \CIC1Sin/d_d_tmp_69 , \CIC1Sin/d_tmp_69 , \CIC1Sin/n12329 , 
         \CIC1Sin/n4128 , \CIC1Sin/n4127 , \CIC1Sin/d4_71_N_634_67 , 
         \CIC1Sin/d4_71_N_634_66 , \CIC1Sin/n12145 , \CIC1Sin/d_d_tmp_68 , 
         \CIC1Sin/d_tmp_68 , \CIC1Sin/d_d_tmp_67 , \CIC1Sin/d_tmp_67 , 
         \CIC1Sin/n12328 , \CIC1Sin/n4130 , \CIC1Sin/n4129 , 
         \CIC1Sin/d_d_tmp_66 , \CIC1Sin/d_tmp_66 , \CIC1Sin/d_d_tmp_65 , 
         \CIC1Sin/d_tmp_65 , \CIC1Sin/n12327 , \CIC1Sin/n4132 , 
         \CIC1Sin/n4131 , \CIC1Sin/d_d_tmp_64 , \CIC1Sin/d_tmp_64 , 
         \CIC1Sin/d_d_tmp_63 , \CIC1Sin/d_tmp_63 , \CIC1Sin/n12326 , 
         \CIC1Sin/n4134 , \CIC1Sin/n4133 , \CIC1Sin/d4_71_N_634_65 , 
         \CIC1Sin/d4_71_N_634_64 , \CIC1Sin/n12144 , \CIC1Sin/d4_71_N_634_63 , 
         \CIC1Sin/d4_71_N_634_62 , \CIC1Sin/n12143 , \CIC1Sin/d_d_tmp_62 , 
         \CIC1Sin/d_tmp_62 , \CIC1Sin/d_d_tmp_61 , \CIC1Sin/d_tmp_61 , 
         \CIC1Sin/n12325 , \CIC1Sin/n4136 , \CIC1Sin/n4135 , 
         \CIC1Sin/d_d_tmp_60 , \CIC1Sin/d_tmp_60 , \CIC1Sin/d_d_tmp_59 , 
         \CIC1Sin/d_tmp_59 , \CIC1Sin/n12324 , \CIC1Sin/n4138 , 
         \CIC1Sin/n4137 , \CIC1Sin/d_d_tmp_58 , \CIC1Sin/d_tmp_58 , 
         \CIC1Sin/d_d_tmp_57 , \CIC1Sin/d_tmp_57 , \CIC1Sin/n12323 , 
         \CIC1Sin/n4140 , \CIC1Sin/n4139 , \CIC1Sin/d4_71_N_634_61 , 
         \CIC1Sin/d4_71_N_634_60 , \CIC1Sin/n12142 , \CIC1Sin/d_d_tmp_56 , 
         \CIC1Sin/d_tmp_56 , \CIC1Sin/d_d_tmp_55 , \CIC1Sin/d_tmp_55 , 
         \CIC1Sin/n12322 , \CIC1Sin/n4142 , \CIC1Sin/n4141 , 
         \CIC1Sin/d_d_tmp_54 , \CIC1Sin/d_tmp_54 , \CIC1Sin/d_d_tmp_53 , 
         \CIC1Sin/d_tmp_53 , \CIC1Sin/n12321 , \CIC1Sin/n4144 , 
         \CIC1Sin/n4143 , \CIC1Sin/d_d_tmp_52 , \CIC1Sin/d_tmp_52 , 
         \CIC1Sin/d_d_tmp_51 , \CIC1Sin/d_tmp_51 , \CIC1Sin/n12320 , 
         \CIC1Sin/n4146 , \CIC1Sin/n4145 , \CIC1Sin/d4_71_N_634_59 , 
         \CIC1Sin/d4_71_N_634_58 , \CIC1Sin/n12141 , \CIC1Sin/d4_71_N_634_57 , 
         \CIC1Sin/d4_71_N_634_56 , \CIC1Sin/n12140 , \CIC1Sin/d_d_tmp_50 , 
         \CIC1Sin/d_tmp_50 , \CIC1Sin/d_d_tmp_49 , \CIC1Sin/d_tmp_49 , 
         \CIC1Sin/n12319 , \CIC1Sin/n4148 , \CIC1Sin/n4147 , 
         \CIC1Sin/d_d_tmp_48 , \CIC1Sin/d_tmp_48 , \CIC1Sin/d_d_tmp_47 , 
         \CIC1Sin/d_tmp_47 , \CIC1Sin/n12318 , \CIC1Sin/n4150 , 
         \CIC1Sin/n4149 , \CIC1Sin/d_d_tmp_46 , \CIC1Sin/d_tmp_46 , 
         \CIC1Sin/d_d_tmp_45 , \CIC1Sin/d_tmp_45 , \CIC1Sin/n12317 , 
         \CIC1Sin/n4152 , \CIC1Sin/n4151 , \CIC1Sin/d_d_tmp_44 , 
         \CIC1Sin/d_tmp_44 , \CIC1Sin/d_d_tmp_43 , \CIC1Sin/d_tmp_43 , 
         \CIC1Sin/n12316 , \CIC1Sin/n4154 , \CIC1Sin/n4153 , 
         \CIC1Sin/d_d_tmp_42 , \CIC1Sin/d_tmp_42 , \CIC1Sin/d_d_tmp_41 , 
         \CIC1Sin/d_tmp_41 , \CIC1Sin/n12315 , \CIC1Sin/n4156 , 
         \CIC1Sin/n4155 , \CIC1Sin/d_d_tmp_40 , \CIC1Sin/d_tmp_40 , 
         \CIC1Sin/d_d_tmp_39 , \CIC1Sin/d_tmp_39 , \CIC1Sin/n12314 , 
         \CIC1Sin/n4158 , \CIC1Sin/n4157 , \CIC1Sin/d_d_tmp_38 , 
         \CIC1Sin/d_tmp_38 , \CIC1Sin/d_d_tmp_37 , \CIC1Sin/d_tmp_37 , 
         \CIC1Sin/n12313 , \CIC1Sin/n4160 , \CIC1Sin/n4159 , 
         \CIC1Sin/d_d_tmp_36 , \CIC1Sin/d_tmp_36 , \CIC1Sin/n4161 , 
         \CIC1Sin/d6_71_N_1459_71 , \CIC1Sin/d6_71_N_1459_70 , 
         \CIC1Sin/osc_clk_enable_247 , \CIC1Sin/n12311 , 
         \CIC1Sin/d6_71_N_1459_69 , \CIC1Sin/d6_71_N_1459_68 , 
         \CIC1Sin/n12310 , \CIC1Sin/d6_71_N_1459_67 , 
         \CIC1Sin/d6_71_N_1459_66 , \CIC1Sin/n12309 , 
         \CIC1Sin/d6_71_N_1459_65 , \CIC1Sin/d6_71_N_1459_64 , 
         \CIC1Sin/n12308 , \CIC1Sin/d6_71_N_1459_63 , 
         \CIC1Sin/d6_71_N_1459_62 , \CIC1Sin/n12307 , 
         \CIC1Sin/d6_71_N_1459_61 , \CIC1Sin/d6_71_N_1459_60 , 
         \CIC1Sin/n12306 , \CIC1Sin/d6_71_N_1459_59 , 
         \CIC1Sin/d6_71_N_1459_58 , \CIC1Sin/n12305 , 
         \CIC1Sin/d6_71_N_1459_57 , \CIC1Sin/d6_71_N_1459_56 , 
         \CIC1Sin/n12304 , \CIC1Sin/d6_71_N_1459_55 , 
         \CIC1Sin/d6_71_N_1459_54 , \CIC1Sin/n12303 , \CIC1Sin/d4_71_N_634_55 , 
         \CIC1Sin/d4_71_N_634_54 , \CIC1Sin/n12139 , \CIC1Sin/d6_71_N_1459_53 , 
         \CIC1Sin/d6_71_N_1459_52 , \CIC1Sin/n12302 , 
         \CIC1Sin/d6_71_N_1459_51 , \CIC1Sin/d6_71_N_1459_50 , 
         \CIC1Sin/n12301 , \CIC1Sin/d6_71_N_1459_49 , 
         \CIC1Sin/d6_71_N_1459_48 , \CIC1Sin/n12300 , 
         \CIC1Sin/d6_71_N_1459_47 , \CIC1Sin/d6_71_N_1459_46 , 
         \CIC1Sin/n12299 , \CIC1Sin/d6_71_N_1459_45 , 
         \CIC1Sin/d6_71_N_1459_44 , \CIC1Sin/n12298 , 
         \CIC1Sin/d6_71_N_1459_43 , \CIC1Sin/d6_71_N_1459_42 , 
         \CIC1Sin/n12297 , \CIC1Sin/d4_71_N_634_53 , \CIC1Sin/d4_71_N_634_52 , 
         \CIC1Sin/n12138 , \CIC1Sin/d6_71_N_1459_41 , 
         \CIC1Sin/d6_71_N_1459_40 , \CIC1Sin/n12296 , 
         \CIC1Sin/d6_71_N_1459_39 , \CIC1Sin/d6_71_N_1459_38 , 
         \CIC1Sin/n12295 , \CIC1Sin/d6_71_N_1459_37 , 
         \CIC1Sin/d6_71_N_1459_36 , \CIC1Sin/n12294 , \CIC1Sin/n12289 , 
         \CIC1Sin/n4279 , \CIC1Sin/n4278 , \CIC1Sin/d4_71_N_634_51 , 
         \CIC1Sin/d4_71_N_634_50 , \CIC1Sin/n12137 , \CIC1Sin/n12288 , 
         \CIC1Sin/n4281 , \CIC1Sin/n4280 , \CIC1Sin/n12287 , \CIC1Sin/n4283 , 
         \CIC1Sin/n4282 , \CIC1Sin/n12286 , \CIC1Sin/n4285 , \CIC1Sin/n4284 , 
         \CIC1Sin/n12285 , \CIC1Sin/n4287 , \CIC1Sin/n4286 , \CIC1Sin/n5950 , 
         \CIC1Sin/n12284 , \CIC1Sin/n4289 , \CIC1Sin/n4288 , \CIC1Sin/n12283 , 
         \CIC1Sin/n4291 , \CIC1Sin/n4290 , \CIC1Sin/n12282 , \CIC1Sin/n12281 , 
         \CIC1Sin/n12280 , \CIC1Sin/n12279 , \CIC1Sin/n12278 , 
         \CIC1Sin/n12277 , \CIC1Sin/n12276 , \CIC1Sin/n12275 , 
         \CIC1Sin/d4_71_N_634_49 , \CIC1Sin/d4_71_N_634_48 , \CIC1Sin/n12136 , 
         \CIC1Sin/d4_71_N_634_47 , \CIC1Sin/d4_71_N_634_46 , \CIC1Sin/n12135 , 
         \CIC1Sin/d4_71_N_634_45 , \CIC1Sin/d4_71_N_634_44 , \CIC1Sin/n12134 , 
         \CIC1Sin/d4_71_N_634_43 , \CIC1Sin/d4_71_N_634_42 , \CIC1Sin/n12133 , 
         \CIC1Sin/d4_71_N_634_41 , \CIC1Sin/d4_71_N_634_40 , \CIC1Sin/n12132 , 
         \CIC1Sin/d4_71_N_634_39 , \CIC1Sin/d4_71_N_634_38 , \CIC1Sin/n12131 , 
         \CIC1Sin/n4769 , \CIC1Sin/d4_71_N_634_37 , \CIC1Sin/d4_71_N_634_36 , 
         \CIC1Sin/n12130 , \CIC1Sin/d5_71 , \CIC1Sin/d5_70 , \CIC1Sin/n12125 , 
         \CIC1Sin/n4887 , \CIC1Sin/n4886 , \CIC1Sin/d5_69 , \CIC1Sin/d5_68 , 
         \CIC1Sin/n12124 , \CIC1Sin/n4889 , \CIC1Sin/n4888 , \CIC1Sin/d5_67 , 
         \CIC1Sin/d5_66 , \CIC1Sin/n12123 , \CIC1Sin/n4891 , \CIC1Sin/n4890 , 
         \CIC1Sin/d5_65 , \CIC1Sin/d5_64 , \CIC1Sin/n12122 , \CIC1Sin/n4893 , 
         \CIC1Sin/n4892 , \CIC1Sin/d5_63 , \CIC1Sin/d5_62 , \CIC1Sin/n12121 , 
         \CIC1Sin/n4895 , \CIC1Sin/n4894 , \CIC1Sin/d5_61 , \CIC1Sin/d5_60 , 
         \CIC1Sin/n12120 , \CIC1Sin/n4897 , \CIC1Sin/n4896 , \CIC1Sin/d5_59 , 
         \CIC1Sin/d5_58 , \CIC1Sin/n12119 , \CIC1Sin/n4899 , \CIC1Sin/n4898 , 
         \CIC1Sin/d5_57 , \CIC1Sin/d5_56 , \CIC1Sin/n12118 , \CIC1Sin/n4901 , 
         \CIC1Sin/n4900 , \CIC1Sin/d5_55 , \CIC1Sin/d5_54 , \CIC1Sin/n12117 , 
         \CIC1Sin/n4903 , \CIC1Sin/n4902 , \CIC1Sin/d5_53 , \CIC1Sin/d5_52 , 
         \CIC1Sin/n12116 , \CIC1Sin/n4905 , \CIC1Sin/n4904 , \CIC1Sin/d5_51 , 
         \CIC1Sin/d5_50 , \CIC1Sin/n12115 , \CIC1Sin/n4907 , \CIC1Sin/n4906 , 
         \CIC1Sin/d5_49 , \CIC1Sin/d5_48 , \CIC1Sin/n12114 , \CIC1Sin/n4909 , 
         \CIC1Sin/n4908 , \CIC1Sin/d5_47 , \CIC1Sin/d5_46 , \CIC1Sin/n12113 , 
         \CIC1Sin/n4911 , \CIC1Sin/n4910 , \CIC1Sin/d5_45 , \CIC1Sin/d5_44 , 
         \CIC1Sin/n12112 , \CIC1Sin/n4913 , \CIC1Sin/n4912 , \CIC1Sin/d5_43 , 
         \CIC1Sin/d5_42 , \CIC1Sin/n12111 , \CIC1Sin/n4915 , \CIC1Sin/n4914 , 
         \CIC1Sin/d5_41 , \CIC1Sin/d5_40 , \CIC1Sin/n12110 , \CIC1Sin/n4917 , 
         \CIC1Sin/n4916 , \CIC1Sin/d5_39 , \CIC1Sin/d5_38 , \CIC1Sin/n12109 , 
         \CIC1Sin/n4919 , \CIC1Sin/n4918 , \CIC1Sin/d5_37 , \CIC1Sin/d5_36 , 
         \CIC1Sin/n4920 , \CIC1Sin/n12274 , \CIC1Sin/n12273 , 
         \CIC1Sin/d5_71_N_706_71 , \CIC1Sin/d5_71_N_706_70 , \CIC1Sin/n12106 , 
         \CIC1Sin/d5_71_N_706_69 , \CIC1Sin/d5_71_N_706_68 , \CIC1Sin/n12105 , 
         \CIC1Sin/d5_71_N_706_67 , \CIC1Sin/d5_71_N_706_66 , \CIC1Sin/n12104 , 
         \CIC1Sin/d5_71_N_706_65 , \CIC1Sin/d5_71_N_706_64 , \CIC1Sin/n12103 , 
         \CIC1Sin/d5_71_N_706_63 , \CIC1Sin/d5_71_N_706_62 , \CIC1Sin/n12102 , 
         \CIC1Sin/d5_71_N_706_61 , \CIC1Sin/d5_71_N_706_60 , \CIC1Sin/n12101 , 
         \CIC1Sin/d5_71_N_706_59 , \CIC1Sin/d5_71_N_706_58 , \CIC1Sin/n12100 , 
         \CIC1Sin/d5_71_N_706_57 , \CIC1Sin/d5_71_N_706_56 , \CIC1Sin/n12099 , 
         \CIC1Sin/d5_71_N_706_55 , \CIC1Sin/d5_71_N_706_54 , \CIC1Sin/n12098 , 
         \CIC1Sin/d5_71_N_706_53 , \CIC1Sin/d5_71_N_706_52 , \CIC1Sin/n12097 , 
         \CIC1Sin/d5_71_N_706_51 , \CIC1Sin/d5_71_N_706_50 , \CIC1Sin/n12096 , 
         \CIC1Sin/d5_71_N_706_49 , \CIC1Sin/d5_71_N_706_48 , \CIC1Sin/n12095 , 
         \CIC1Sin/d5_71_N_706_47 , \CIC1Sin/d5_71_N_706_46 , \CIC1Sin/n12094 , 
         \CIC1Sin/d5_71_N_706_45 , \CIC1Sin/d5_71_N_706_44 , \CIC1Sin/n12093 , 
         \CIC1Sin/d5_71_N_706_43 , \CIC1Sin/d5_71_N_706_42 , \CIC1Sin/n12092 , 
         \CIC1Sin/d5_71_N_706_41 , \CIC1Sin/d5_71_N_706_40 , \CIC1Sin/n12091 , 
         \CIC1Sin/d5_71_N_706_39 , \CIC1Sin/d5_71_N_706_38 , \CIC1Sin/n12090 , 
         \CIC1Sin/n4921 , \CIC1Sin/d5_71_N_706_37 , \CIC1Sin/d5_71_N_706_36 , 
         \CIC1Sin/n12089 , \CIC1Sin/d1_71_N_418_71 , \CIC1Sin/d1_71_N_418_70 , 
         \CIC1Sin/n12270 , \CIC1Sin/d1_71_N_418_69 , \CIC1Sin/d1_71_N_418_68 , 
         \CIC1Sin/n12269 , \CIC1Sin/d1_71_N_418_67 , \CIC1Sin/d1_71_N_418_66 , 
         \CIC1Sin/n12268 , \CIC1Sin/d1_71_N_418_65 , \CIC1Sin/d1_71_N_418_64 , 
         \CIC1Sin/n12267 , \CIC1Sin/d1_71_N_418_63 , \CIC1Sin/d1_71_N_418_62 , 
         \CIC1Sin/n12266 , \CIC1Sin/d1_71_N_418_61 , \CIC1Sin/d1_71_N_418_60 , 
         \CIC1Sin/n12265 , \CIC1Sin/d1_71_N_418_59 , \CIC1Sin/d1_71_N_418_58 , 
         \CIC1Cos/d2_55 , \CIC1Cos/d1_55 , \CIC1Cos/d2_54 , \CIC1Cos/d1_54 , 
         \CIC1Cos/n12035 , \CIC1Cos/n5207 , \CIC1Cos/n5206 , \CIC1Cos/n12036 , 
         \CIC1Cos/d2_53 , \CIC1Cos/d1_53 , \CIC1Cos/d2_52 , \CIC1Cos/d1_52 , 
         \CIC1Cos/n12034 , \CIC1Cos/n5209 , \CIC1Cos/n5208 , \CIC1Cos/d2_51 , 
         \CIC1Cos/d1_51 , \CIC1Cos/d2_50 , \CIC1Cos/d1_50 , \CIC1Cos/n12033 , 
         \CIC1Cos/n5211 , \CIC1Cos/n5210 , \CIC1Cos/d2_57 , \CIC1Cos/n5356 , 
         \CIC1Cos/n5340 , \CIC1Cos/d3_57 , \CIC1Cos/d2_56 , \CIC1Cos/n5357 , 
         \CIC1Cos/d3_56 , \CIC1Cos/d3_71_N_562_57 , \CIC1Cos/d3_71_N_562_56 , 
         \CIC1Cos/n11976 , \CIC1Cos/n11977 , \CIC1Cos/d4_65 , \CIC1Cos/n5652 , 
         \CIC1Cos/n5644 , \CIC1Cos/d5_65 , \CIC1Cos/d4_64 , \CIC1Cos/n5653 , 
         \CIC1Cos/d5_64 , \CIC1Cos/d5_71_N_706_65 , \CIC1Cos/d5_71_N_706_64 , 
         \CIC1Cos/n11898 , \CIC1Cos/n11899 , MixerOutCos_11, \CIC1Cos/n5060 , 
         \CIC1Cos/n5036 , \CIC1Cos/d1_49 , \CIC1Cos/n5061 , \CIC1Cos/d1_48 , 
         \CIC1Cos/d1_71_N_418_49 , \CIC1Cos/d1_71_N_418_48 , \CIC1Cos/n12054 , 
         \CIC1Cos/n12055 , \CIC1Cos/n5358 , \CIC1Cos/d3_55 , \CIC1Cos/n5359 , 
         \CIC1Cos/d3_54 , \CIC1Cos/d3_71_N_562_55 , \CIC1Cos/d3_71_N_562_54 , 
         \CIC1Cos/n11975 , \CIC1Cos/n5062 , \CIC1Cos/d1_47 , \CIC1Cos/n5063 , 
         \CIC1Cos/d1_46 , \CIC1Cos/d1_71_N_418_47 , \CIC1Cos/d1_71_N_418_46 , 
         \CIC1Cos/n12053 , \CIC1Cos/n5064 , \CIC1Cos/d1_45 , \CIC1Cos/n5065 , 
         \CIC1Cos/d1_44 , \CIC1Cos/d1_71_N_418_45 , \CIC1Cos/d1_71_N_418_44 , 
         \CIC1Cos/n12052 , \CIC1Cos/n5068 , \CIC1Cos/d1_41 , \CIC1Cos/n5069 , 
         \CIC1Cos/d1_40 , \CIC1Cos/d1_71_N_418_41 , \CIC1Cos/d1_71_N_418_40 , 
         \CIC1Cos/n12050 , \CIC1Cos/n12051 , \CIC1Cos/n5066 , \CIC1Cos/d1_43 , 
         \CIC1Cos/n5067 , \CIC1Cos/d1_42 , \CIC1Cos/d1_71_N_418_43 , 
         \CIC1Cos/d1_71_N_418_42 , \CIC1Cos/d5_49 , \CIC1Cos/d4_49 , 
         \CIC1Cos/d5_48 , \CIC1Cos/d4_48 , \CIC1Cos/n11909 , \CIC1Cos/n5669 , 
         \CIC1Cos/n5668 , \CIC1Cos/n11910 , \CIC1Cos/d2_69 , \CIC1Cos/d1_69 , 
         \CIC1Cos/d2_68 , \CIC1Cos/d1_68 , \CIC1Cos/n12042 , \CIC1Cos/n5193 , 
         \CIC1Cos/n5192 , \CIC1Cos/n12043 , \CIC1Cos/d4_71 , \CIC1Cos/n5646 , 
         \CIC1Cos/d5_71 , \CIC1Cos/d4_70 , \CIC1Cos/n5647 , \CIC1Cos/d5_70 , 
         \CIC1Cos/d5_71_N_706_71 , \CIC1Cos/d5_71_N_706_70 , \CIC1Cos/n11901 , 
         \CIC1Cos/d2_67 , \CIC1Cos/d1_67 , \CIC1Cos/d2_66 , \CIC1Cos/d1_66 , 
         \CIC1Cos/n12041 , \CIC1Cos/n5195 , \CIC1Cos/n5194 , \CIC1Cos/d2_65 , 
         \CIC1Cos/d1_65 , \CIC1Cos/d2_64 , \CIC1Cos/d1_64 , \CIC1Cos/n12040 , 
         \CIC1Cos/n5197 , \CIC1Cos/n5196 , \CIC1Cos/d2_63 , \CIC1Cos/d1_63 , 
         \CIC1Cos/d2_62 , \CIC1Cos/d1_62 , \CIC1Cos/n12039 , \CIC1Cos/n5199 , 
         \CIC1Cos/n5198 , \CIC1Cos/d2_61 , \CIC1Cos/d1_61 , \CIC1Cos/d2_60 , 
         \CIC1Cos/d1_60 , \CIC1Cos/n12038 , \CIC1Cos/n5201 , \CIC1Cos/n5200 , 
         \CIC1Cos/n5360 , \CIC1Cos/d3_53 , \CIC1Cos/n5361 , \CIC1Cos/d3_52 , 
         \CIC1Cos/d3_71_N_562_53 , \CIC1Cos/d3_71_N_562_52 , \CIC1Cos/n11974 , 
         \CIC1Cos/d2_59 , \CIC1Cos/d1_59 , \CIC1Cos/d2_58 , \CIC1Cos/d1_58 , 
         \CIC1Cos/n12037 , \CIC1Cos/n5203 , \CIC1Cos/n5202 , \CIC1Cos/n5362 , 
         \CIC1Cos/d3_51 , \CIC1Cos/n5363 , \CIC1Cos/d3_50 , 
         \CIC1Cos/d3_71_N_562_51 , \CIC1Cos/d3_71_N_562_50 , \CIC1Cos/n11973 , 
         \CIC1Cos/d1_57 , \CIC1Cos/d1_56 , \CIC1Cos/n5205 , \CIC1Cos/n5204 , 
         \CIC1Cos/d4_63 , \CIC1Cos/n5654 , \CIC1Cos/d5_63 , \CIC1Cos/d4_62 , 
         \CIC1Cos/n5655 , \CIC1Cos/d5_62 , \CIC1Cos/d5_71_N_706_63 , 
         \CIC1Cos/d5_71_N_706_62 , \CIC1Cos/n11897 , \CIC1Cos/n5188 , 
         \CIC1Cos/d2_71_N_490_61 , \CIC1Cos/d2_71_N_490_60 , \CIC1Cos/n12019 , 
         \CIC1Cos/n12020 , \CIC1Cos/d2_41 , \CIC1Cos/d2_40 , \CIC1Cos/n12028 , 
         \CIC1Cos/n5221 , \CIC1Cos/n5220 , \CIC1Cos/n12029 , \CIC1Cos/d4_61 , 
         \CIC1Cos/n5656 , \CIC1Cos/d5_61 , \CIC1Cos/d4_60 , \CIC1Cos/n5657 , 
         \CIC1Cos/d5_60 , \CIC1Cos/d5_71_N_706_61 , \CIC1Cos/d5_71_N_706_60 , 
         \CIC1Cos/n11896 , \CIC1Cos/d4_59 , \CIC1Cos/n5658 , \CIC1Cos/d5_59 , 
         \CIC1Cos/d4_58 , \CIC1Cos/n5659 , \CIC1Cos/d5_58 , 
         \CIC1Cos/d5_71_N_706_59 , \CIC1Cos/d5_71_N_706_58 , \CIC1Cos/n11895 , 
         \CIC1Cos/d5_47 , \CIC1Cos/d4_47 , \CIC1Cos/d5_46 , \CIC1Cos/d4_46 , 
         \CIC1Cos/n11908 , \CIC1Cos/n5671 , \CIC1Cos/n5670 , \CIC1Cos/d2_49 , 
         \CIC1Cos/n5364 , \CIC1Cos/d3_49 , \CIC1Cos/d2_48 , \CIC1Cos/n5365 , 
         \CIC1Cos/d3_48 , \CIC1Cos/d3_71_N_562_49 , \CIC1Cos/d3_71_N_562_48 , 
         \CIC1Cos/n11972 , \CIC1Cos/d2_71_N_490_57 , \CIC1Cos/d2_71_N_490_56 , 
         \CIC1Cos/n12017 , \CIC1Cos/n12018 , \CIC1Cos/d2_71_N_490_55 , 
         \CIC1Cos/d2_71_N_490_54 , \CIC1Cos/n12016 , \CIC1Cos/n5212 , 
         \CIC1Cos/n5213 , \CIC1Cos/d2_71_N_490_49 , \CIC1Cos/d2_71_N_490_48 , 
         \CIC1Cos/n12013 , \CIC1Cos/n12014 , \CIC1Cos/n5218 , \CIC1Cos/d2_43 , 
         \CIC1Cos/n5219 , \CIC1Cos/d2_42 , \CIC1Cos/d2_71_N_490_43 , 
         \CIC1Cos/d2_71_N_490_42 , \CIC1Cos/n12010 , \CIC1Cos/n12011 , 
         \CIC1Cos/n5214 , \CIC1Cos/d2_47 , \CIC1Cos/n5215 , \CIC1Cos/d2_46 , 
         \CIC1Cos/d2_71_N_490_47 , \CIC1Cos/d2_71_N_490_46 , \CIC1Cos/n12012 , 
         \CIC1Cos/d2_71_N_490_53 , \CIC1Cos/d2_71_N_490_52 , \CIC1Cos/n12015 , 
         \CIC1Cos/n5216 , \CIC1Cos/d2_45 , \CIC1Cos/n5217 , \CIC1Cos/d2_44 , 
         \CIC1Cos/d2_71_N_490_45 , \CIC1Cos/d2_71_N_490_44 , 
         \CIC1Cos/d2_71_N_490_41 , \CIC1Cos/d2_71_N_490_40 , \CIC1Cos/n12009 , 
         \CIC1Cos/d2_71_N_490_51 , \CIC1Cos/d2_71_N_490_50 , \CIC1Cos/n5366 , 
         \CIC1Cos/d3_47 , \CIC1Cos/n5367 , \CIC1Cos/d3_46 , 
         \CIC1Cos/d3_71_N_562_47 , \CIC1Cos/d3_71_N_562_46 , \CIC1Cos/n11971 , 
         \CIC1Cos/n5368 , \CIC1Cos/d3_45 , \CIC1Cos/n5369 , \CIC1Cos/d3_44 , 
         \CIC1Cos/d3_71_N_562_45 , \CIC1Cos/d3_71_N_562_44 , \CIC1Cos/n11970 , 
         \CIC1Cos/d5_45 , \CIC1Cos/d4_45 , \CIC1Cos/d5_44 , \CIC1Cos/d4_44 , 
         \CIC1Cos/n11907 , \CIC1Cos/n5673 , \CIC1Cos/n5672 , 
         \CIC1Cos/d_d_tmp_71 , \CIC1Cos/d_tmp_71 , \CIC1Cos/n11623 , 
         \CIC1Cos/n6102 , \CIC1Cos/n5370 , \CIC1Cos/d3_43 , \CIC1Cos/n5371 , 
         \CIC1Cos/d3_42 , \CIC1Cos/d3_71_N_562_43 , \CIC1Cos/d3_71_N_562_42 , 
         \CIC1Cos/n11969 , \CIC1Cos/n5372 , \CIC1Cos/d3_41 , \CIC1Cos/n5373 , 
         \CIC1Cos/d3_40 , \CIC1Cos/d3_71_N_562_41 , \CIC1Cos/d3_71_N_562_40 , 
         \CIC1Cos/n11968 , \CIC1Cos/d2_39 , \CIC1Cos/n5374 , \CIC1Cos/d3_39 , 
         \CIC1Cos/d2_38 , \CIC1Cos/n5375 , \CIC1Cos/d3_38 , 
         \CIC1Cos/d3_71_N_562_39 , \CIC1Cos/d3_71_N_562_38 , \CIC1Cos/n11967 , 
         \CIC1Cos/d5_43 , \CIC1Cos/d4_43 , \CIC1Cos/d5_42 , \CIC1Cos/d4_42 , 
         \CIC1Cos/n11906 , \CIC1Cos/n5675 , \CIC1Cos/n5674 , \CIC1Cos/d2_37 , 
         \CIC1Cos/n5376 , \CIC1Cos/d3_37 , \CIC1Cos/d2_36 , \CIC1Cos/n5377 , 
         \CIC1Cos/d3_36 , \CIC1Cos/d3_71_N_562_37 , \CIC1Cos/d3_71_N_562_36 , 
         \CIC1Cos/n11966 , \CIC1Cos/d5_41 , \CIC1Cos/d4_41 , \CIC1Cos/d5_40 , 
         \CIC1Cos/d4_40 , \CIC1Cos/n11905 , \CIC1Cos/n5677 , \CIC1Cos/n5676 , 
         \CIC1Cos/d1_39 , \CIC1Cos/n5222 , \CIC1Cos/d1_38 , \CIC1Cos/n5223 , 
         \CIC1Cos/d2_71_N_490_39 , \CIC1Cos/d2_71_N_490_38 , \CIC1Cos/n12008 , 
         \CIC1Cos/d3_71 , \CIC1Cos/d2_71 , \CIC1Cos/d3_70 , \CIC1Cos/d2_70 , 
         \CIC1Cos/n12002 , \CIC1Cos/n5343 , \CIC1Cos/n5342 , \CIC1Cos/d4_57 , 
         \CIC1Cos/n5660 , \CIC1Cos/d5_57 , \CIC1Cos/d4_56 , \CIC1Cos/n5661 , 
         \CIC1Cos/d5_56 , \CIC1Cos/d5_71_N_706_57 , \CIC1Cos/d5_71_N_706_56 , 
         \CIC1Cos/n11894 , \CIC1Cos/n11992 , \CIC1Cos/n11993 , 
         \CIC1Cos/n11991 , \CIC1Cos/n11990 , \CIC1Cos/n11988 , 
         \CIC1Cos/n11989 , \CIC1Cos/n11987 , \CIC1Cos/d5_39 , \CIC1Cos/d4_39 , 
         \CIC1Cos/d5_38 , \CIC1Cos/d4_38 , \CIC1Cos/n11904 , \CIC1Cos/n5679 , 
         \CIC1Cos/n5678 , \CIC1Cos/n11986 , \CIC1Cos/d3_71_N_562_71 , 
         \CIC1Cos/d3_71_N_562_70 , \CIC1Cos/n11983 , \CIC1Cos/n5354 , 
         \CIC1Cos/d3_59 , \CIC1Cos/n5355 , \CIC1Cos/d3_58 , 
         \CIC1Cos/d3_71_N_562_59 , \CIC1Cos/d3_71_N_562_58 , \CIC1Cos/n11978 , 
         \CIC1Cos/n5344 , \CIC1Cos/d3_69 , \CIC1Cos/n5345 , \CIC1Cos/d3_68 , 
         \CIC1Cos/d3_71_N_562_69 , \CIC1Cos/d3_71_N_562_68 , \CIC1Cos/n11982 , 
         \CIC1Cos/n5346 , \CIC1Cos/d3_67 , \CIC1Cos/n5347 , \CIC1Cos/d3_66 , 
         \CIC1Cos/d3_71_N_562_67 , \CIC1Cos/d3_71_N_562_66 , \CIC1Cos/n11981 , 
         \CIC1Cos/n5348 , \CIC1Cos/d3_65 , \CIC1Cos/n5349 , \CIC1Cos/d3_64 , 
         \CIC1Cos/d3_71_N_562_65 , \CIC1Cos/d3_71_N_562_64 , \CIC1Cos/n11980 , 
         \CIC1Cos/n5350 , \CIC1Cos/d3_63 , \CIC1Cos/n5351 , \CIC1Cos/d3_62 , 
         \CIC1Cos/d3_71_N_562_63 , \CIC1Cos/d3_71_N_562_62 , \CIC1Cos/n11979 , 
         \CIC1Cos/n5352 , \CIC1Cos/d3_61 , \CIC1Cos/n5353 , \CIC1Cos/d3_60 , 
         \CIC1Cos/d3_71_N_562_61 , \CIC1Cos/d3_71_N_562_60 , \CIC1Cos/d4_55 , 
         \CIC1Cos/n5662 , \CIC1Cos/d5_55 , \CIC1Cos/d4_54 , \CIC1Cos/n5663 , 
         \CIC1Cos/d5_54 , \CIC1Cos/d5_71_N_706_55 , \CIC1Cos/d5_71_N_706_54 , 
         \CIC1Cos/n11893 , \CIC1Cos/d2_71_N_490_65 , \CIC1Cos/d2_71_N_490_64 , 
         \CIC1Cos/n12021 , \CIC1Cos/n12022 , \CIC1Cos/n12032 , \CIC1Cos/d4_53 , 
         \CIC1Cos/n5664 , \CIC1Cos/d5_53 , \CIC1Cos/d4_52 , \CIC1Cos/n5665 , 
         \CIC1Cos/d5_52 , \CIC1Cos/d5_71_N_706_53 , \CIC1Cos/d5_71_N_706_52 , 
         \CIC1Cos/n11892 , \CIC1Cos/d4_51 , \CIC1Cos/n5666 , \CIC1Cos/d5_51 , 
         \CIC1Cos/d4_50 , \CIC1Cos/n5667 , \CIC1Cos/d5_50 , 
         \CIC1Cos/d5_71_N_706_51 , \CIC1Cos/d5_71_N_706_50 , \CIC1Cos/n11891 , 
         \CIC1Cos/d5_71_N_706_49 , \CIC1Cos/d5_71_N_706_48 , \CIC1Cos/n11890 , 
         \CIC1Cos/d5_71_N_706_47 , \CIC1Cos/d5_71_N_706_46 , \CIC1Cos/n11889 , 
         \CIC1Cos/d5_71_N_706_45 , \CIC1Cos/d5_71_N_706_44 , \CIC1Cos/n11888 , 
         \CIC1Cos/d5_71_N_706_43 , \CIC1Cos/d5_71_N_706_42 , \CIC1Cos/n11887 , 
         \CIC1Cos/d5_71_N_706_41 , \CIC1Cos/d5_71_N_706_40 , \CIC1Cos/n11886 , 
         \CIC1Cos/d5_71_N_706_39 , \CIC1Cos/d5_71_N_706_38 , \CIC1Cos/n11885 , 
         \CIC1Cos/d4_37 , \CIC1Cos/n5680 , \CIC1Cos/d5_37 , \CIC1Cos/d4_36 , 
         \CIC1Cos/n5681 , \CIC1Cos/d5_36 , \CIC1Cos/d5_71_N_706_37 , 
         \CIC1Cos/d5_71_N_706_36 , \CIC1Cos/n11884 , \CIC1Cos/n12031 , 
         \CIC1Cos/n12030 , \CIC1Cos/n12027 , \CIC1Cos/d1_37 , \CIC1Cos/d1_36 , 
         \CIC1Cos/n5224 , \CIC1Cos/d1_71 , \CIC1Cos/n5190 , \CIC1Cos/d1_70 , 
         \CIC1Cos/n5191 , \CIC1Cos/d2_71_N_490_71 , \CIC1Cos/d2_71_N_490_70 , 
         \CIC1Cos/n12024 , \CIC1Cos/d2_71_N_490_69 , \CIC1Cos/d2_71_N_490_68 , 
         \CIC1Cos/n12023 , \CIC1Cos/d_d_tmp_70 , \CIC1Cos/d_tmp_70 , 
         \CIC1Cos/d_d_tmp_69 , \CIC1Cos/d_tmp_69 , \CIC1Cos/n11622 , 
         \CIC1Cos/n6104 , \CIC1Cos/n6103 , \CIC1Cos/d_d_tmp_68 , 
         \CIC1Cos/d_tmp_68 , \CIC1Cos/d_d_tmp_67 , \CIC1Cos/d_tmp_67 , 
         \CIC1Cos/n11621 , \CIC1Cos/n6106 , \CIC1Cos/n6105 , 
         \CIC1Cos/d_d_tmp_66 , \CIC1Cos/d_tmp_66 , \CIC1Cos/d_d_tmp_65 , 
         \CIC1Cos/d_tmp_65 , \CIC1Cos/n11620 , \CIC1Cos/n6108 , 
         \CIC1Cos/n6107 , \CIC1Cos/d_d_tmp_64 , \CIC1Cos/d_tmp_64 , 
         \CIC1Cos/d_d_tmp_63 , \CIC1Cos/d_tmp_63 , \CIC1Cos/n11619 , 
         \CIC1Cos/n6110 , \CIC1Cos/n6109 , \CIC1Cos/d_d_tmp_62 , 
         \CIC1Cos/d_tmp_62 , \CIC1Cos/d_d_tmp_61 , \CIC1Cos/d_tmp_61 , 
         \CIC1Cos/n11618 , \CIC1Cos/n6112 , \CIC1Cos/n6111 , 
         \CIC1Cos/d_d_tmp_60 , \CIC1Cos/d_tmp_60 , \CIC1Cos/d_d_tmp_59 , 
         \CIC1Cos/d_tmp_59 , \CIC1Cos/n11617 , \CIC1Cos/n6114 , 
         \CIC1Cos/n6113 , \CIC1Cos/d_d_tmp_58 , \CIC1Cos/d_tmp_58 , 
         \CIC1Cos/d_d_tmp_57 , \CIC1Cos/d_tmp_57 , \CIC1Cos/n11616 , 
         \CIC1Cos/n6116 , \CIC1Cos/n6115 , \CIC1Cos/d_d_tmp_56 , 
         \CIC1Cos/d_tmp_56 , \CIC1Cos/d_d_tmp_55 , \CIC1Cos/d_tmp_55 , 
         \CIC1Cos/n11615 , \CIC1Cos/n6118 , \CIC1Cos/n6117 , 
         \CIC1Cos/d_d_tmp_54 , \CIC1Cos/d_tmp_54 , \CIC1Cos/d_d_tmp_53 , 
         \CIC1Cos/d_tmp_53 , \CIC1Cos/n11614 , \CIC1Cos/n6120 , 
         \CIC1Cos/n6119 , \CIC1Cos/n11996 , \CIC1Cos/n11997 , 
         \CIC1Cos/d_d_tmp_52 , \CIC1Cos/d_tmp_52 , \CIC1Cos/d_d_tmp_51 , 
         \CIC1Cos/d_tmp_51 , \CIC1Cos/n11613 , \CIC1Cos/n6122 , 
         \CIC1Cos/n6121 , \CIC1Cos/d_d_tmp_50 , \CIC1Cos/d_tmp_50 , 
         \CIC1Cos/d_d_tmp_49 , \CIC1Cos/d_tmp_49 , \CIC1Cos/n11612 , 
         \CIC1Cos/n6124 , \CIC1Cos/n6123 , \CIC1Cos/d_d_tmp_48 , 
         \CIC1Cos/d_tmp_48 , \CIC1Cos/d_d_tmp_47 , \CIC1Cos/d_tmp_47 , 
         \CIC1Cos/n11611 , \CIC1Cos/n6126 , \CIC1Cos/n6125 , \CIC1Cos/n11961 , 
         \CIC1Cos/n5495 , \CIC1Cos/n5494 , \CIC1Cos/n11995 , \CIC1Cos/d4_69 , 
         \CIC1Cos/d4_68 , \CIC1Cos/n11960 , \CIC1Cos/n5497 , \CIC1Cos/n5496 , 
         \CIC1Cos/n12001 , \CIC1Cos/n11994 , \CIC1Cos/n12000 , \CIC1Cos/n5225 , 
         \CIC1Cos/d2_71_N_490_37 , \CIC1Cos/d2_71_N_490_36 , \CIC1Cos/n12007 , 
         \CIC1Cos/n11999 , \CIC1Cos/d4_67 , \CIC1Cos/d4_66 , \CIC1Cos/n11959 , 
         \CIC1Cos/n5499 , \CIC1Cos/n5498 , \CIC1Cos/n11998 , \CIC1Cos/n5070 , 
         \CIC1Cos/n5071 , \CIC1Cos/d1_71_N_418_39 , \CIC1Cos/d1_71_N_418_38 , 
         \CIC1Cos/n12049 , \CIC1Cos/n5072 , \CIC1Cos/n5073 , 
         \CIC1Cos/d1_71_N_418_37 , \CIC1Cos/d1_71_N_418_36 , \CIC1Cos/n12048 , 
         \CIC1Cos/d2_71_N_490_67 , \CIC1Cos/d2_71_N_490_66 , \CIC1Cos/n5648 , 
         \CIC1Cos/d5_69 , \CIC1Cos/n5649 , \CIC1Cos/d5_68 , 
         \CIC1Cos/d5_71_N_706_69 , \CIC1Cos/d5_71_N_706_68 , \CIC1Cos/n11900 , 
         \CIC1Cos/d2_71_N_490_63 , \CIC1Cos/d2_71_N_490_62 , \CIC1Cos/n5650 , 
         \CIC1Cos/d5_67 , \CIC1Cos/n5651 , \CIC1Cos/d5_66 , 
         \CIC1Cos/d5_71_N_706_67 , \CIC1Cos/d5_71_N_706_66 , \CIC1Cos/n11958 , 
         \CIC1Cos/n5501 , \CIC1Cos/n5500 , \CIC1Cos/n11957 , \CIC1Cos/n5503 , 
         \CIC1Cos/n5502 , \CIC1Cos/n11956 , \CIC1Cos/n5505 , \CIC1Cos/n5504 , 
         \CIC1Cos/n11955 , \CIC1Cos/n5507 , \CIC1Cos/n5506 , \CIC1Cos/n11954 , 
         \CIC1Cos/n5509 , \CIC1Cos/n5508 , \CIC1Cos/n11953 , \CIC1Cos/n5511 , 
         \CIC1Cos/n5510 , \CIC1Cos/n11952 , \CIC1Cos/n5513 , \CIC1Cos/n5512 , 
         \CIC1Cos/n11951 , \CIC1Cos/n5515 , \CIC1Cos/n5514 , 
         \CIC1Cos/d_d_tmp_46 , \CIC1Cos/d_tmp_46 , \CIC1Cos/d_d_tmp_45 , 
         \CIC1Cos/d_tmp_45 , \CIC1Cos/n11610 , \CIC1Cos/n6128 , 
         \CIC1Cos/n6127 , \CIC1Cos/n11950 , \CIC1Cos/n5517 , \CIC1Cos/n5516 , 
         \CIC1Cos/n11949 , \CIC1Cos/n5519 , \CIC1Cos/n5518 , \CIC1Cos/n11948 , 
         \CIC1Cos/n5521 , \CIC1Cos/n5520 , \CIC1Cos/n11947 , \CIC1Cos/n5523 , 
         \CIC1Cos/n5522 , \CIC1Cos/n11946 , \CIC1Cos/n5525 , \CIC1Cos/n5524 , 
         \CIC1Cos/n11945 , \CIC1Cos/n5527 , \CIC1Cos/n5526 , \CIC1Cos/n5528 , 
         \CIC1Cos/n5492 , \CIC1Cos/d4_71_N_634_71 , \CIC1Cos/d4_71_N_634_70 , 
         \CIC1Cos/n11942 , \CIC1Cos/d4_71_N_634_69 , \CIC1Cos/d4_71_N_634_68 , 
         \CIC1Cos/n11941 , \CIC1Cos/d4_71_N_634_67 , \CIC1Cos/d4_71_N_634_66 , 
         \CIC1Cos/n11940 , \CIC1Cos/d4_71_N_634_65 , \CIC1Cos/d4_71_N_634_64 , 
         \CIC1Cos/n11939 , \CIC1Cos/d4_71_N_634_63 , \CIC1Cos/d4_71_N_634_62 , 
         \CIC1Cos/n11938 , \CIC1Cos/d4_71_N_634_61 , \CIC1Cos/d4_71_N_634_60 , 
         \CIC1Cos/n11937 , \CIC1Cos/d4_71_N_634_59 , \CIC1Cos/d4_71_N_634_58 , 
         \CIC1Cos/n11936 , \CIC1Cos/d4_71_N_634_57 , \CIC1Cos/d4_71_N_634_56 , 
         \CIC1Cos/n11935 , \CIC1Cos/d4_71_N_634_55 , \CIC1Cos/d4_71_N_634_54 , 
         \CIC1Cos/n11934 , \CIC1Cos/d4_71_N_634_53 , \CIC1Cos/d4_71_N_634_52 , 
         \CIC1Cos/n11933 , \CIC1Cos/d4_71_N_634_51 , \CIC1Cos/d4_71_N_634_50 , 
         \CIC1Cos/n11932 , \CIC1Cos/d4_71_N_634_49 , \CIC1Cos/d4_71_N_634_48 , 
         \CIC1Cos/n11931 , \CIC1Cos/d4_71_N_634_47 , \CIC1Cos/d4_71_N_634_46 , 
         \CIC1Cos/n11930 , \CIC1Cos/d4_71_N_634_45 , \CIC1Cos/d4_71_N_634_44 , 
         \CIC1Cos/n11929 , \CIC1Cos/d4_71_N_634_43 , \CIC1Cos/d4_71_N_634_42 , 
         \CIC1Cos/n11928 , \CIC1Cos/d4_71_N_634_41 , \CIC1Cos/d4_71_N_634_40 , 
         \CIC1Cos/n11927 , \CIC1Cos/d4_71_N_634_39 , \CIC1Cos/d4_71_N_634_38 , 
         \CIC1Cos/n11926 , \CIC1Cos/n5529 , \CIC1Cos/d4_71_N_634_37 , 
         \CIC1Cos/d4_71_N_634_36 , \CIC1Cos/n11925 , \CIC1Cos/n11920 , 
         \CIC1Cos/n11919 , \CIC1Cos/n11918 , \CIC1Cos/n11917 , 
         \CIC1Cos/n11916 , \CIC1Cos/n11915 , \CIC1Cos/n11914 , 
         \CIC1Cos/n11913 , \CIC1Cos/n11912 , \CIC1Cos/d_d_tmp_44 , 
         \CIC1Cos/d_tmp_44 , \CIC1Cos/d_d_tmp_43 , \CIC1Cos/d_tmp_43 , 
         \CIC1Cos/n11609 , \CIC1Cos/n6130 , \CIC1Cos/n6129 , 
         \CIC1Cos/d_d_tmp_42 , \CIC1Cos/d_tmp_42 , \CIC1Cos/d_d_tmp_41 , 
         \CIC1Cos/d_tmp_41 , \CIC1Cos/n11608 , \CIC1Cos/n6132 , 
         \CIC1Cos/n6131 , \CIC1Cos/d_d_tmp_40 , \CIC1Cos/d_tmp_40 , 
         \CIC1Cos/d_d_tmp_39 , \CIC1Cos/d_tmp_39 , \CIC1Cos/n11607 , 
         \CIC1Cos/n6134 , \CIC1Cos/n6133 , \CIC1Cos/d_d_tmp_38 , 
         \CIC1Cos/d_tmp_38 , \CIC1Cos/d_d_tmp_37 , \CIC1Cos/d_tmp_37 , 
         \CIC1Cos/n11606 , \CIC1Cos/n6136 , \CIC1Cos/n6135 , 
         \CIC1Cos/d_d_tmp_36 , \CIC1Cos/d_tmp_36 , \CIC1Cos/n6137 , 
         \CIC1Cos/n6100 , \CIC1Cos/d6_71_N_1459_71 , \CIC1Cos/d6_71_N_1459_70 , 
         \CIC1Cos/osc_clk_enable_934 , \CIC1Cos/n11604 , \CIC1Cos/d6_70 , 
         \CIC1Cos/d6_71 , \CIC1Cos/d6_71_N_1459_69 , \CIC1Cos/d6_71_N_1459_68 , 
         \CIC1Cos/osc_clk_enable_884 , \CIC1Cos/n11603 , \CIC1Cos/d6_68 , 
         \CIC1Cos/d6_69 , \CIC1Cos/d6_71_N_1459_67 , \CIC1Cos/d6_71_N_1459_66 , 
         \CIC1Cos/n11602 , \CIC1Cos/d6_66 , \CIC1Cos/d6_67 , 
         \CIC1Cos/d6_71_N_1459_65 , \CIC1Cos/d6_71_N_1459_64 , 
         \CIC1Cos/n11601 , \CIC1Cos/d6_64 , \CIC1Cos/d6_65 , 
         \CIC1Cos/d6_71_N_1459_63 , \CIC1Cos/d6_71_N_1459_62 , 
         \CIC1Cos/n11600 , \CIC1Cos/d6_62 , \CIC1Cos/d6_63 , 
         \CIC1Cos/d6_71_N_1459_61 , \CIC1Cos/d6_71_N_1459_60 , 
         \CIC1Cos/n11599 , \CIC1Cos/d6_60 , \CIC1Cos/d6_61 , 
         \CIC1Cos/d6_71_N_1459_59 , \CIC1Cos/d6_71_N_1459_58 , 
         \CIC1Cos/n11598 , \CIC1Cos/d6_58 , \CIC1Cos/d6_59 , 
         \CIC1Cos/d6_71_N_1459_57 , \CIC1Cos/d6_71_N_1459_56 , 
         \CIC1Cos/n11597 , \CIC1Cos/d6_56 , \CIC1Cos/d6_57 , 
         \CIC1Cos/d6_71_N_1459_55 , \CIC1Cos/d6_71_N_1459_54 , 
         \CIC1Cos/n11596 , \CIC1Cos/d6_54 , \CIC1Cos/d6_55 , 
         \CIC1Cos/d6_71_N_1459_53 , \CIC1Cos/d6_71_N_1459_52 , 
         \CIC1Cos/n11595 , \CIC1Cos/d6_52 , \CIC1Cos/d6_53 , 
         \CIC1Cos/d6_71_N_1459_51 , \CIC1Cos/d6_71_N_1459_50 , 
         \CIC1Cos/n11594 , \CIC1Cos/d6_50 , \CIC1Cos/d6_51 , 
         \CIC1Cos/d6_71_N_1459_49 , \CIC1Cos/d6_71_N_1459_48 , 
         \CIC1Cos/n11593 , \CIC1Cos/d6_48 , \CIC1Cos/d6_49 , 
         \CIC1Cos/d6_71_N_1459_47 , \CIC1Cos/d6_71_N_1459_46 , 
         \CIC1Cos/n11592 , \CIC1Cos/d6_46 , \CIC1Cos/d6_47 , 
         \CIC1Cos/d6_71_N_1459_45 , \CIC1Cos/d6_71_N_1459_44 , 
         \CIC1Cos/n11591 , \CIC1Cos/d6_44 , \CIC1Cos/d6_45 , 
         \CIC1Cos/d6_71_N_1459_43 , \CIC1Cos/d6_71_N_1459_42 , 
         \CIC1Cos/n11590 , \CIC1Cos/d6_42 , \CIC1Cos/d6_43 , 
         \CIC1Cos/d6_71_N_1459_41 , \CIC1Cos/d6_71_N_1459_40 , 
         \CIC1Cos/n11589 , \CIC1Cos/d6_40 , \CIC1Cos/d6_41 , 
         \CIC1Cos/d6_71_N_1459_39 , \CIC1Cos/d6_71_N_1459_38 , 
         \CIC1Cos/n11588 , \CIC1Cos/d6_38 , \CIC1Cos/d6_39 , 
         \CIC1Cos/d6_71_N_1459_37 , \CIC1Cos/d6_71_N_1459_36 , 
         \CIC1Cos/n11587 , \CIC1Cos/d6_36 , \CIC1Cos/d6_37 , \CIC1Cos/d_d6_71 , 
         \CIC1Cos/n11583 , \CIC1Cos/n6254 , \CIC1Cos/d_d6_70 , 
         \CIC1Cos/d_d6_69 , \CIC1Cos/n11582 , \CIC1Cos/n6256 , \CIC1Cos/n6255 , 
         \CIC1Cos/d_d6_68 , \CIC1Cos/d_d6_67 , \CIC1Cos/n11581 , 
         \CIC1Cos/n6258 , \CIC1Cos/n6257 , \CIC1Cos/d_d6_66 , 
         \CIC1Cos/d_d6_65 , \CIC1Cos/n11580 , \CIC1Cos/n6260 , \CIC1Cos/n6259 , 
         \CIC1Cos/d_d6_64 , \CIC1Cos/d_d6_63 , \CIC1Cos/n11579 , 
         \CIC1Cos/n6262 , \CIC1Cos/n6261 , \CIC1Cos/d_d6_62 , 
         \CIC1Cos/d_d6_61 , \CIC1Cos/n11578 , \CIC1Cos/n6264 , \CIC1Cos/n6263 , 
         \CIC1Cos/d_d6_60 , \CIC1Cos/d_d6_59 , \CIC1Cos/n11577 , 
         \CIC1Cos/n6266 , \CIC1Cos/n6265 , \CIC1Cos/d_d6_58 , 
         \CIC1Cos/d_d6_57 , \CIC1Cos/n11576 , \CIC1Cos/n6268 , \CIC1Cos/n6267 , 
         \CIC1Cos/d_d6_56 , \CIC1Cos/d_d6_55 , \CIC1Cos/n11575 , 
         \CIC1Cos/n6270 , \CIC1Cos/n6269 , \CIC1Cos/d_d6_54 , 
         \CIC1Cos/d_d6_53 , \CIC1Cos/n11574 , \CIC1Cos/n6272 , \CIC1Cos/n6271 , 
         \CIC1Cos/d_d6_52 , \CIC1Cos/d_d6_51 , \CIC1Cos/n11573 , 
         \CIC1Cos/n6274 , \CIC1Cos/n6273 , \CIC1Cos/d_d6_50 , 
         \CIC1Cos/d_d6_49 , \CIC1Cos/n11572 , \CIC1Cos/n6276 , \CIC1Cos/n6275 , 
         \CIC1Cos/d_d6_48 , \CIC1Cos/d_d6_47 , \CIC1Cos/n11571 , 
         \CIC1Cos/n6278 , \CIC1Cos/n6277 , \CIC1Cos/d_d6_46 , 
         \CIC1Cos/d_d6_45 , \CIC1Cos/n11570 , \CIC1Cos/n6280 , \CIC1Cos/n6279 , 
         \CIC1Cos/d_d6_44 , \CIC1Cos/d_d6_43 , \CIC1Cos/n11569 , 
         \CIC1Cos/n6282 , \CIC1Cos/n6281 , \CIC1Cos/d_d6_42 , 
         \CIC1Cos/d_d6_41 , \CIC1Cos/n11568 , \CIC1Cos/n6284 , \CIC1Cos/n6283 , 
         \CIC1Cos/d_d6_40 , \CIC1Cos/d_d6_39 , \CIC1Cos/n11567 , 
         \CIC1Cos/n6286 , \CIC1Cos/n6285 , \CIC1Cos/d_d6_38 , 
         \CIC1Cos/d_d6_37 , \CIC1Cos/n11566 , \CIC1Cos/n6288 , \CIC1Cos/n6287 , 
         \CIC1Cos/d_d6_36 , \CIC1Cos/n6289 , \CIC1Cos/n6252 , 
         \CIC1Cos/d7_71_N_1531_71 , \CIC1Cos/d7_71_N_1531_70 , 
         \CIC1Cos/osc_clk_enable_1034 , \CIC1Cos/n11564 , \CIC1Cos/d7_70 , 
         \CIC1Cos/d7_71 , \CIC1Cos/d7_71_N_1531_69 , \CIC1Cos/d7_71_N_1531_68 , 
         \CIC1Cos/n11563 , \CIC1Cos/d7_68 , \CIC1Cos/d7_69 , 
         \CIC1Cos/d7_71_N_1531_67 , \CIC1Cos/d7_71_N_1531_66 , 
         \CIC1Cos/n11562 , \CIC1Cos/d7_66 , \CIC1Cos/d7_67 , 
         \CIC1Cos/d7_71_N_1531_65 , \CIC1Cos/d7_71_N_1531_64 , 
         \CIC1Cos/n11561 , \CIC1Cos/d7_64 , \CIC1Cos/d7_65 , 
         \CIC1Cos/d7_71_N_1531_63 , \CIC1Cos/d7_71_N_1531_62 , 
         \CIC1Cos/n11560 , \CIC1Cos/d7_62 , \CIC1Cos/d7_63 , 
         \CIC1Cos/d7_71_N_1531_61 , \CIC1Cos/d7_71_N_1531_60 , 
         \CIC1Cos/n11559 , \CIC1Cos/d7_60 , \CIC1Cos/d7_61 , 
         \CIC1Cos/d7_71_N_1531_59 , \CIC1Cos/d7_71_N_1531_58 , 
         \CIC1Cos/n11558 , \CIC1Cos/d7_58 , \CIC1Cos/d7_59 , 
         \CIC1Cos/d7_71_N_1531_57 , \CIC1Cos/d7_71_N_1531_56 , 
         \CIC1Cos/n11557 , \CIC1Cos/d7_56 , \CIC1Cos/d7_57 , 
         \CIC1Cos/d7_71_N_1531_55 , \CIC1Cos/d7_71_N_1531_54 , 
         \CIC1Cos/n11556 , \CIC1Cos/d7_54 , \CIC1Cos/d7_55 , 
         \CIC1Cos/d7_71_N_1531_53 , \CIC1Cos/d7_71_N_1531_52 , 
         \CIC1Cos/n11555 , \CIC1Cos/d7_52 , \CIC1Cos/d7_53 , 
         \CIC1Cos/d7_71_N_1531_51 , \CIC1Cos/d7_71_N_1531_50 , 
         \CIC1Cos/n11554 , \CIC1Cos/d7_50 , \CIC1Cos/d7_51 , 
         \CIC1Cos/d7_71_N_1531_49 , \CIC1Cos/d7_71_N_1531_48 , 
         \CIC1Cos/n11553 , \CIC1Cos/d7_48 , \CIC1Cos/d7_49 , 
         \CIC1Cos/d7_71_N_1531_47 , \CIC1Cos/d7_71_N_1531_46 , 
         \CIC1Cos/n11552 , \CIC1Cos/d7_46 , \CIC1Cos/d7_47 , 
         \CIC1Cos/d7_71_N_1531_45 , \CIC1Cos/d7_71_N_1531_44 , 
         \CIC1Cos/n11551 , \CIC1Cos/d7_44 , \CIC1Cos/d7_45 , 
         \CIC1Cos/d7_71_N_1531_43 , \CIC1Cos/d7_71_N_1531_42 , 
         \CIC1Cos/n11550 , \CIC1Cos/d7_42 , \CIC1Cos/d7_43 , 
         \CIC1Cos/d7_71_N_1531_41 , \CIC1Cos/d7_71_N_1531_40 , 
         \CIC1Cos/n11549 , \CIC1Cos/d7_40 , \CIC1Cos/d7_41 , 
         \CIC1Cos/d7_71_N_1531_39 , \CIC1Cos/d7_71_N_1531_38 , 
         \CIC1Cos/n11548 , \CIC1Cos/d7_38 , \CIC1Cos/d7_39 , 
         \CIC1Cos/d7_71_N_1531_37 , \CIC1Cos/d7_71_N_1531_36 , 
         \CIC1Cos/n11547 , \CIC1Cos/d7_36 , \CIC1Cos/d7_37 , \CIC1Cos/d_d7_71 , 
         \CIC1Cos/n11543 , \CIC1Cos/n6406 , \CIC1Cos/d_d7_70 , 
         \CIC1Cos/d_d7_69 , \CIC1Cos/n11542 , \CIC1Cos/n6408 , \CIC1Cos/n6407 , 
         \CIC1Cos/d_d7_68 , \CIC1Cos/d_d7_67 , \CIC1Cos/n11541 , 
         \CIC1Cos/n6410 , \CIC1Cos/n6409 , \CIC1Cos/d_d7_66 , 
         \CIC1Cos/d_d7_65 , \CIC1Cos/n11540 , \CIC1Cos/n6412 , \CIC1Cos/n6411 , 
         \CIC1Cos/d_d7_64 , \CIC1Cos/d_d7_63 , \CIC1Cos/n11539 , 
         \CIC1Cos/n6414 , \CIC1Cos/n6413 , \CIC1Cos/d_d7_62 , 
         \CIC1Cos/d_d7_61 , \CIC1Cos/n11538 , \CIC1Cos/n6416 , \CIC1Cos/n6415 , 
         \CIC1Cos/d_d7_60 , \CIC1Cos/d_d7_59 , \CIC1Cos/n11537 , 
         \CIC1Cos/n6418 , \CIC1Cos/n6417 , \CIC1Cos/d_d7_58 , 
         \CIC1Cos/d_d7_57 , \CIC1Cos/n11536 , \CIC1Cos/n6420 , \CIC1Cos/n6419 , 
         \CIC1Cos/d_d7_56 , \CIC1Cos/d_d7_55 , \CIC1Cos/n11535 , 
         \CIC1Cos/n6422 , \CIC1Cos/n6421 , \CIC1Cos/d_d7_54 , 
         \CIC1Cos/d_d7_53 , \CIC1Cos/n11534 , \CIC1Cos/n6424 , \CIC1Cos/n6423 , 
         \CIC1Cos/d_d7_52 , \CIC1Cos/d_d7_51 , \CIC1Cos/n11533 , 
         \CIC1Cos/n6426 , \CIC1Cos/n6425 , \CIC1Cos/d_d7_50 , 
         \CIC1Cos/d_d7_49 , \CIC1Cos/n11532 , \CIC1Cos/n6428 , \CIC1Cos/n6427 , 
         \CIC1Cos/d_d7_48 , \CIC1Cos/d_d7_47 , \CIC1Cos/n11531 , 
         \CIC1Cos/n6430 , \CIC1Cos/n6429 , \CIC1Cos/d_d7_46 , 
         \CIC1Cos/d_d7_45 , \CIC1Cos/n11530 , \CIC1Cos/n6432 , \CIC1Cos/n6431 , 
         \CIC1Cos/d_d7_44 , \CIC1Cos/d_d7_43 , \CIC1Cos/n11529 , 
         \CIC1Cos/n6434 , \CIC1Cos/n6433 , \CIC1Cos/d_d7_42 , 
         \CIC1Cos/d_d7_41 , \CIC1Cos/n11528 , \CIC1Cos/n6436 , \CIC1Cos/n6435 , 
         \CIC1Cos/d_d7_40 , \CIC1Cos/d_d7_39 , \CIC1Cos/n11527 , 
         \CIC1Cos/n6438 , \CIC1Cos/n6437 , \CIC1Cos/d_d7_38 , 
         \CIC1Cos/d_d7_37 , \CIC1Cos/n11526 , \CIC1Cos/n6440 , \CIC1Cos/n6439 , 
         \CIC1Cos/d_d7_36 , \CIC1Cos/n6441 , \CIC1Cos/n6404 , 
         \CIC1Cos/d8_71_N_1603_71 , \CIC1Cos/d8_71_N_1603_70 , 
         \CIC1Cos/osc_clk_enable_1184 , \CIC1Cos/n11524 , \CIC1Cos/d8_70 , 
         \CIC1Cos/d8_71 , \CIC1Cos/d8_71_N_1603_69 , \CIC1Cos/d8_71_N_1603_68 , 
         \CIC1Cos/n11523 , \CIC1Cos/d8_68 , \CIC1Cos/d8_69 , 
         \CIC1Cos/d8_71_N_1603_67 , \CIC1Cos/d8_71_N_1603_66 , 
         \CIC1Cos/n11522 , \CIC1Cos/d8_66 , \CIC1Cos/d8_67 , 
         \CIC1Cos/d8_71_N_1603_65 , \CIC1Cos/d8_71_N_1603_64 , 
         \CIC1Cos/n11521 , \CIC1Cos/d8_64 , \CIC1Cos/d8_65 , 
         \CIC1Cos/d8_71_N_1603_63 , \CIC1Cos/d8_71_N_1603_62 , 
         \CIC1Cos/n11520 , \CIC1Cos/d8_62 , \CIC1Cos/d8_63 , 
         \CIC1Cos/d8_71_N_1603_61 , \CIC1Cos/d8_71_N_1603_60 , 
         \CIC1Cos/n11519 , \CIC1Cos/d8_60 , \CIC1Cos/d8_61 , 
         \CIC1Cos/d8_71_N_1603_59 , \CIC1Cos/d8_71_N_1603_58 , 
         \CIC1Cos/n11518 , \CIC1Cos/d8_58 , \CIC1Cos/d8_59 , 
         \CIC1Cos/d8_71_N_1603_57 , \CIC1Cos/d8_71_N_1603_56 , 
         \CIC1Cos/n11517 , \CIC1Cos/d8_56 , \CIC1Cos/d8_57 , 
         \CIC1Cos/d8_71_N_1603_55 , \CIC1Cos/d8_71_N_1603_54 , 
         \CIC1Cos/n11516 , \CIC1Cos/d8_54 , \CIC1Cos/d8_55 , 
         \CIC1Cos/d8_71_N_1603_53 , \CIC1Cos/d8_71_N_1603_52 , 
         \CIC1Cos/n11515 , \CIC1Cos/d8_52 , \CIC1Cos/d8_53 , 
         \CIC1Cos/d8_71_N_1603_51 , \CIC1Cos/d8_71_N_1603_50 , 
         \CIC1Cos/n11514 , \CIC1Cos/d8_50 , \CIC1Cos/d8_51 , 
         \CIC1Cos/d8_71_N_1603_49 , \CIC1Cos/d8_71_N_1603_48 , 
         \CIC1Cos/n11513 , \CIC1Cos/d8_48 , \CIC1Cos/d8_49 , 
         \CIC1Cos/d8_71_N_1603_47 , \CIC1Cos/d8_71_N_1603_46 , 
         \CIC1Cos/n11512 , \CIC1Cos/d8_46 , \CIC1Cos/d8_47 , 
         \CIC1Cos/d8_71_N_1603_45 , \CIC1Cos/d8_71_N_1603_44 , 
         \CIC1Cos/n11511 , \CIC1Cos/d8_44 , \CIC1Cos/d8_45 , 
         \CIC1Cos/d8_71_N_1603_43 , \CIC1Cos/d8_71_N_1603_42 , 
         \CIC1Cos/n11510 , \CIC1Cos/d8_42 , \CIC1Cos/d8_43 , 
         \CIC1Cos/d8_71_N_1603_41 , \CIC1Cos/d8_71_N_1603_40 , 
         \CIC1Cos/n11509 , \CIC1Cos/d8_40 , \CIC1Cos/d8_41 , 
         \CIC1Cos/d8_71_N_1603_39 , \CIC1Cos/d8_71_N_1603_38 , 
         \CIC1Cos/n11508 , \CIC1Cos/d8_38 , \CIC1Cos/d8_39 , 
         \CIC1Cos/d8_71_N_1603_37 , \CIC1Cos/d8_71_N_1603_36 , 
         \CIC1Cos/n11507 , \CIC1Cos/d8_36 , \CIC1Cos/d8_37 , \CIC1Cos/d_d8_71 , 
         \CIC1Cos/n11503 , \CIC1Cos/n6558 , \CIC1Cos/d_d8_70 , 
         \CIC1Cos/d_d8_69 , \CIC1Cos/n11502 , \CIC1Cos/n6560 , \CIC1Cos/n6559 , 
         \CIC1Cos/d_d8_68 , \CIC1Cos/d_d8_67 , \CIC1Cos/n11501 , 
         \CIC1Cos/n6562 , \CIC1Cos/n6561 , \CIC1Cos/d_d8_66 , 
         \CIC1Cos/d_d8_65 , \CIC1Cos/n11500 , \CIC1Cos/n6564 , \CIC1Cos/n6563 , 
         \CIC1Cos/d_d8_64 , \CIC1Cos/d_d8_63 , \CIC1Cos/n11499 , 
         \CIC1Cos/n6566 , \CIC1Cos/n6565 , \CIC1Cos/d_d8_62 , 
         \CIC1Cos/d_d8_61 , \CIC1Cos/n11498 , \CIC1Cos/n6568 , \CIC1Cos/n6567 , 
         \CIC1Cos/d_d8_60 , \CIC1Cos/d_d8_59 , \CIC1Cos/n11497 , 
         \CIC1Cos/n6570 , \CIC1Cos/n6569 , \CIC1Cos/d_d8_58 , 
         \CIC1Cos/d_d8_57 , \CIC1Cos/n11496 , \CIC1Cos/n6572 , \CIC1Cos/n6571 , 
         \CIC1Cos/d_d8_56 , \CIC1Cos/d_d8_55 , \CIC1Cos/n11495 , 
         \CIC1Cos/n6574 , \CIC1Cos/n6573 , \CIC1Cos/d_d8_54 , 
         \CIC1Cos/d_d8_53 , \CIC1Cos/n11494 , \CIC1Cos/n6576 , \CIC1Cos/n6575 , 
         \CIC1Cos/d_d8_52 , \CIC1Cos/d_d8_51 , \CIC1Cos/n11493 , 
         \CIC1Cos/n6578 , \CIC1Cos/n6577 , \CIC1Cos/d_d8_50 , 
         \CIC1Cos/d_d8_49 , \CIC1Cos/n11492 , \CIC1Cos/n6580 , \CIC1Cos/n6579 , 
         \CIC1Cos/d_d8_48 , \CIC1Cos/d_d8_47 , \CIC1Cos/n11491 , 
         \CIC1Cos/n6582 , \CIC1Cos/n6581 , \CIC1Cos/d_d8_46 , 
         \CIC1Cos/d_d8_45 , \CIC1Cos/n11490 , \CIC1Cos/n6584 , \CIC1Cos/n6583 , 
         \CIC1Cos/d_d8_44 , \CIC1Cos/d_d8_43 , \CIC1Cos/n11489 , 
         \CIC1Cos/n6586 , \CIC1Cos/n6585 , \CIC1Cos/d_d8_42 , 
         \CIC1Cos/d_d8_41 , \CIC1Cos/n11488 , \CIC1Cos/n6588 , \CIC1Cos/n6587 , 
         \CIC1Cos/d_d8_40 , \CIC1Cos/d_d8_39 , \CIC1Cos/n11487 , 
         \CIC1Cos/n6590 , \CIC1Cos/n6589 , \CIC1Cos/d_d8_38 , 
         \CIC1Cos/d_d8_37 , \CIC1Cos/n11486 , \CIC1Cos/n6592 , \CIC1Cos/n6591 , 
         \CIC1Cos/d_d8_36 , \CIC1Cos/n6593 , \CIC1Cos/n6556 , 
         \CIC1Cos/d9_71_N_1675_71 , \CIC1Cos/d9_71_N_1675_70 , 
         \CIC1Cos/osc_clk_enable_1334 , \CIC1Cos/n11484 , \CIC1Cos/d9_70 , 
         \CIC1Cos/d9_71 , \CIC1Cos/d9_71_N_1675_69 , \CIC1Cos/d9_71_N_1675_68 , 
         \CIC1Cos/n11483 , \CIC1Cos/d9_68 , \CIC1Cos/d9_69 , 
         \CIC1Cos/d9_71_N_1675_67 , \CIC1Cos/d9_71_N_1675_66 , 
         \CIC1Cos/n11482 , \CIC1Cos/d9_66 , \CIC1Cos/d9_67 , 
         \CIC1Cos/d9_71_N_1675_65 , \CIC1Cos/d9_71_N_1675_64 , 
         \CIC1Cos/n11481 , \CIC1Cos/d9_64 , \CIC1Cos/d9_65 , 
         \CIC1Cos/d9_71_N_1675_63 , \CIC1Cos/d9_71_N_1675_62 , 
         \CIC1Cos/n11480 , \CIC1Cos/d9_62 , \CIC1Cos/d9_63 , 
         \CIC1Cos/d9_71_N_1675_61 , \CIC1Cos/d9_71_N_1675_60 , 
         \CIC1Cos/n11479 , \CIC1Cos/d9_60 , \CIC1Cos/d9_61 , 
         \CIC1Cos/d9_71_N_1675_59 , \CIC1Cos/d9_71_N_1675_58 , 
         \CIC1Cos/n11478 , \CIC1Cos/d9_58 , \CIC1Cos/d9_59 , 
         \CIC1Cos/d9_71_N_1675_57 , \CIC1Cos/d9_71_N_1675_56 , 
         \CIC1Cos/n11477 , \CIC1Cos/d9_56 , \CIC1Cos/d9_57 , 
         \CIC1Cos/d9_71_N_1675_55 , \CIC1Cos/d9_71_N_1675_54 , 
         \CIC1Cos/n11476 , \CIC1Cos/d9_54 , \CIC1Cos/d9_55 , 
         \CIC1Cos/d9_71_N_1675_53 , \CIC1Cos/d9_71_N_1675_52 , 
         \CIC1Cos/n11475 , \CIC1Cos/d9_52 , \CIC1Cos/d9_53 , 
         \CIC1Cos/d9_71_N_1675_51 , \CIC1Cos/d9_71_N_1675_50 , 
         \CIC1Cos/n11474 , \CIC1Cos/d9_50 , \CIC1Cos/d9_51 , 
         \CIC1Cos/d9_71_N_1675_49 , \CIC1Cos/d9_71_N_1675_48 , 
         \CIC1Cos/n11473 , \CIC1Cos/d9_48 , \CIC1Cos/d9_49 , 
         \CIC1Cos/d9_71_N_1675_47 , \CIC1Cos/d9_71_N_1675_46 , 
         \CIC1Cos/n11472 , \CIC1Cos/d9_46 , \CIC1Cos/d9_47 , 
         \CIC1Cos/d9_71_N_1675_45 , \CIC1Cos/d9_71_N_1675_44 , 
         \CIC1Cos/n11471 , \CIC1Cos/d9_44 , \CIC1Cos/d9_45 , 
         \CIC1Cos/d9_71_N_1675_43 , \CIC1Cos/d9_71_N_1675_42 , 
         \CIC1Cos/osc_clk_enable_1284 , \CIC1Cos/n11470 , \CIC1Cos/d9_42 , 
         \CIC1Cos/d9_43 , \CIC1Cos/d9_71_N_1675_41 , \CIC1Cos/d9_71_N_1675_40 , 
         \CIC1Cos/n11469 , \CIC1Cos/d9_40 , \CIC1Cos/d9_41 , 
         \CIC1Cos/d9_71_N_1675_39 , \CIC1Cos/d9_71_N_1675_38 , 
         \CIC1Cos/n11468 , \CIC1Cos/d9_38 , \CIC1Cos/d9_39 , 
         \CIC1Cos/d9_71_N_1675_37 , \CIC1Cos/d9_71_N_1675_36 , 
         \CIC1Cos/n11467 , \CIC1Cos/d9_36 , \CIC1Cos/d9_37 , \CIC1Cos/d_d9_71 , 
         \CIC1Cos/n11463 , \CIC1Cos/n6710 , \CIC1Cos/d_d9_70 , 
         \CIC1Cos/d_d9_69 , \CIC1Cos/n11462 , \CIC1Cos/n6712 , \CIC1Cos/n6711 , 
         \CIC1Cos/d_d9_68 , \CIC1Cos/d_d9_67 , \CIC1Cos/n11461 , 
         \CIC1Cos/n6714 , \CIC1Cos/n6713 , \CIC1Cos/d_d9_66 , 
         \CIC1Cos/d_d9_65 , \CIC1Cos/n11460 , \CIC1Cos/n6716 , \CIC1Cos/n6715 , 
         \CIC1Cos/d_d9_64 , \CIC1Cos/d_d9_63 , \CIC1Cos/n11459 , 
         \CIC1Cos/n6718 , \CIC1Cos/n6717 , \CIC1Cos/d_d9_62 , 
         \CIC1Cos/d_d9_61 , \CIC1Cos/n11458 , \CIC1Cos/n6720 , \CIC1Cos/n6719 , 
         \CIC1Cos/d_d9_60 , \CIC1Cos/d_d9_59 , \CIC1Cos/n11457 , 
         \CIC1Cos/n6722 , \CIC1Cos/n6721 , \CIC1Cos/d_d9_58 , 
         \CIC1Cos/d_d9_57 , \CIC1Cos/n11456 , \CIC1Cos/n6724 , \CIC1Cos/n6723 , 
         \CIC1Cos/d_d9_56 , \CIC1Cos/d_d9_55 , \CIC1Cos/n11455 , 
         \CIC1Cos/d_d9_54 , \CIC1Cos/d_d9_53 , \CIC1Cos/n11454 , 
         \CIC1Cos/d_d9_52 , \CIC1Cos/d_d9_51 , \CIC1Cos/n11453 , 
         \CIC1Cos/d_d9_50 , \CIC1Cos/d_d9_49 , \CIC1Cos/n11452 , 
         \CIC1Cos/d_d9_48 , \CIC1Cos/d_d9_47 , \CIC1Cos/n11451 , 
         \CIC1Cos/d_d9_46 , \CIC1Cos/d_d9_45 , \CIC1Cos/n11450 , 
         \CIC1Cos/d_d9_44 , \CIC1Cos/d_d9_43 , \CIC1Cos/n11449 , 
         \CIC1Cos/d_d9_42 , \CIC1Cos/d_d9_41 , \CIC1Cos/n11448 , 
         \CIC1Cos/d_d9_40 , \CIC1Cos/d_d9_39 , \CIC1Cos/n11447 , 
         \CIC1Cos/d_d9_38 , \CIC1Cos/d_d9_37 , \CIC1Cos/n11446 , 
         \CIC1Cos/d_d9_36 , \CIC1Cos/n11445 , \CIC1Cos/n6748 , 
         \CIC1Cos/n11444 , \CIC1Cos/n6750 , \CIC1Cos/n6749 , \CIC1Cos/n11443 , 
         \CIC1Cos/n6752 , \CIC1Cos/n6751 , \CIC1Cos/n11442 , \CIC1Cos/n6754 , 
         \CIC1Cos/n6753 , \CIC1Cos/n11441 , \CIC1Cos/n6756 , \CIC1Cos/n6755 , 
         \CIC1Cos/n11440 , \CIC1Cos/n6758 , \CIC1Cos/n6757 , \CIC1Cos/n11439 , 
         \CIC1Cos/n6760 , \CIC1Cos/n6759 , \CIC1Cos/n11438 , \CIC1Cos/n6762 , 
         \CIC1Cos/n6761 , \CIC1Cos/n11437 , \CIC1Cos/n11436 , \CIC1Cos/n11435 , 
         \CIC1Cos/n11434 , \CIC1Cos/n11433 , \CIC1Cos/n11432 , 
         \CIC1Cos/n11431 , \CIC1Cos/n11430 , \CIC1Cos/n11429 , 
         \CIC1Cos/n11428 , \CIC1Cos/count_15 , \CIC1Cos/n376 , \CIC1Cos/n8387 , 
         \CIC1Cos/n11231 , \CIC1Cos/count_14 , \CIC1Cos/count_13 , 
         \CIC1Cos/n377 , \CIC1Cos/n378 , \CIC1Cos/n11230 , \CIC1Cos/count_12 , 
         \CIC1Cos/count_11 , \CIC1Cos/n379 , \CIC1Cos/n11229 , \CIC1Cos/n380 , 
         \CIC1Cos/count_10 , \CIC1Cos/count_9 , \CIC1Cos/n381 , \CIC1Cos/n382 , 
         \CIC1Cos/n11228 , \CIC1Cos/count_8 , \CIC1Cos/count_7 , 
         \CIC1Cos/n383 , \CIC1Cos/n384 , \CIC1Cos/n11227 , \CIC1Cos/count_6 , 
         \CIC1Cos/count_5 , \CIC1Cos/n385 , \CIC1Cos/n386 , \CIC1Cos/n11226 , 
         \CIC1Cos/count_4 , \CIC1Cos/count_3 , \CIC1Cos/n387 , \CIC1Cos/n388 , 
         \CIC1Cos/n11225 , \CIC1Cos/count_2 , \CIC1Cos/count_1 , 
         \CIC1Cos/n389 , \CIC1Cos/n390 , \CIC1Cos/n11224 , \CIC1Cos/count_0 , 
         \CIC1Cos/n391 , \CIC1Cos/n11205 , \CIC1Cos/d5_35 , \CIC1Cos/d4_35 , 
         \CIC1Cos/d5_34 , \CIC1Cos/d4_34 , \CIC1Cos/d5_71_N_706_35 , 
         \CIC1Cos/d5_71_N_706_34 , \CIC1Cos/n11204 , \CIC1Cos/d5_33 , 
         \CIC1Cos/d4_33 , \CIC1Cos/d5_32 , \CIC1Cos/d4_32 , 
         \CIC1Cos/d5_71_N_706_33 , \CIC1Cos/d5_71_N_706_32 , \CIC1Cos/n11203 , 
         \CIC1Cos/d5_31 , \CIC1Cos/d4_31 , \CIC1Cos/d5_30 , \CIC1Cos/d4_30 , 
         \CIC1Cos/d5_71_N_706_31 , \CIC1Cos/d5_71_N_706_30 , \CIC1Cos/n11202 , 
         \CIC1Cos/d5_29 , \CIC1Cos/d4_29 , \CIC1Cos/d5_28 , \CIC1Cos/d4_28 , 
         \CIC1Cos/d5_71_N_706_29 , \CIC1Cos/d5_71_N_706_28 , \CIC1Cos/n11201 , 
         \CIC1Cos/d5_27 , \CIC1Cos/d4_27 , \CIC1Cos/d5_26 , \CIC1Cos/d4_26 , 
         \CIC1Cos/d5_71_N_706_27 , \CIC1Cos/d5_71_N_706_26 , \CIC1Cos/n11200 , 
         \CIC1Cos/d5_25 , \CIC1Cos/d4_25 , \CIC1Cos/d5_24 , \CIC1Cos/d4_24 , 
         \CIC1Cos/d5_71_N_706_25 , \CIC1Cos/d5_71_N_706_24 , \CIC1Cos/n11199 , 
         \CIC1Cos/d5_23 , \CIC1Cos/d4_23 , \CIC1Cos/d5_22 , \CIC1Cos/d4_22 , 
         \CIC1Cos/d5_71_N_706_23 , \CIC1Cos/d5_71_N_706_22 , \CIC1Cos/n11198 , 
         \CIC1Cos/d5_21 , \CIC1Cos/d4_21 , \CIC1Cos/d5_20 , \CIC1Cos/d4_20 , 
         \CIC1Cos/d5_71_N_706_21 , \CIC1Cos/d5_71_N_706_20 , \CIC1Cos/n11197 , 
         \CIC1Cos/d5_19 , \CIC1Cos/d4_19 , \CIC1Cos/d5_18 , \CIC1Cos/d4_18 , 
         \CIC1Cos/d5_71_N_706_19 , \CIC1Cos/d5_71_N_706_18 , \CIC1Cos/n11196 , 
         \CIC1Cos/d5_17 , \CIC1Cos/d4_17 , \CIC1Cos/d5_16 , \CIC1Cos/d4_16 , 
         \CIC1Cos/d5_71_N_706_17 , \CIC1Cos/d5_71_N_706_16 , \CIC1Cos/n11195 , 
         \CIC1Cos/d5_15 , \CIC1Cos/d4_15 , \CIC1Cos/d5_14 , \CIC1Cos/d4_14 , 
         \CIC1Cos/d5_71_N_706_15 , \CIC1Cos/d5_71_N_706_14 , \CIC1Cos/n11194 , 
         \CIC1Cos/d5_13 , \CIC1Cos/d4_13 , \CIC1Cos/d5_12 , \CIC1Cos/d4_12 , 
         \CIC1Cos/d5_71_N_706_13 , \CIC1Cos/d5_71_N_706_12 , \CIC1Cos/n11193 , 
         \CIC1Cos/d5_11 , \CIC1Cos/d4_11 , \CIC1Cos/d5_10 , \CIC1Cos/d4_10 , 
         \CIC1Cos/d5_71_N_706_11 , \CIC1Cos/d5_71_N_706_10 , \CIC1Cos/n11192 , 
         \CIC1Cos/d5_9 , \CIC1Cos/d4_9 , \CIC1Cos/d5_8 , \CIC1Cos/d4_8 , 
         \CIC1Cos/d5_71_N_706_9 , \CIC1Cos/d5_71_N_706_8 , \CIC1Cos/n11191 , 
         \CIC1Cos/d5_7 , \CIC1Cos/d4_7 , \CIC1Cos/d5_6 , \CIC1Cos/d4_6 , 
         \CIC1Cos/d5_71_N_706_7 , \CIC1Cos/d5_71_N_706_6 , \CIC1Cos/n11190 , 
         \CIC1Cos/d5_5 , \CIC1Cos/d4_5 , \CIC1Cos/d5_4 , \CIC1Cos/d4_4 , 
         \CIC1Cos/d5_71_N_706_5 , \CIC1Cos/d5_71_N_706_4 , \CIC1Cos/n11189 , 
         \CIC1Cos/d5_3 , \CIC1Cos/d4_3 , \CIC1Cos/d5_2 , \CIC1Cos/d4_2 , 
         \CIC1Cos/d5_71_N_706_3 , \CIC1Cos/d5_71_N_706_2 , \CIC1Cos/n11188 , 
         \CIC1Cos/d5_1 , \CIC1Cos/d4_1 , \CIC1Cos/d5_0 , \CIC1Cos/d4_0 , 
         \CIC1Cos/d5_71_N_706_1 , \CIC1Cos/n11186 , \CIC1Cos/d3_35 , 
         \CIC1Cos/d3_34 , \CIC1Cos/d4_71_N_634_35 , \CIC1Cos/d4_71_N_634_34 , 
         \CIC1Cos/n11185 , \CIC1Cos/d3_33 , \CIC1Cos/d3_32 , 
         \CIC1Cos/d4_71_N_634_33 , \CIC1Cos/d4_71_N_634_32 , \CIC1Cos/n11184 , 
         \CIC1Cos/d3_31 , \CIC1Cos/d3_30 , \CIC1Cos/d4_71_N_634_31 , 
         \CIC1Cos/d4_71_N_634_30 , \CIC1Cos/n11183 , \CIC1Cos/d3_29 , 
         \CIC1Cos/d3_28 , \CIC1Cos/d4_71_N_634_29 , \CIC1Cos/d4_71_N_634_28 , 
         \CIC1Cos/n11182 , \CIC1Cos/d3_27 , \CIC1Cos/d3_26 , 
         \CIC1Cos/d4_71_N_634_27 , \CIC1Cos/d4_71_N_634_26 , \CIC1Cos/n11181 , 
         \CIC1Cos/d3_25 , \CIC1Cos/d3_24 , \CIC1Cos/d4_71_N_634_25 , 
         \CIC1Cos/d4_71_N_634_24 , \CIC1Cos/n11180 , \CIC1Cos/d3_23 , 
         \CIC1Cos/d3_22 , \CIC1Cos/d4_71_N_634_23 , \CIC1Cos/d4_71_N_634_22 , 
         \CIC1Cos/n11179 , \CIC1Cos/d3_21 , \CIC1Cos/d3_20 , 
         \CIC1Cos/d4_71_N_634_21 , \CIC1Cos/d4_71_N_634_20 , \CIC1Cos/n11178 , 
         \CIC1Cos/d3_19 , \CIC1Cos/d3_18 , \CIC1Cos/d4_71_N_634_19 , 
         \CIC1Cos/d4_71_N_634_18 , \CIC1Cos/n11177 , \CIC1Cos/d3_17 , 
         \CIC1Cos/d3_16 , \CIC1Cos/d4_71_N_634_17 , \CIC1Cos/d4_71_N_634_16 , 
         \CIC1Cos/n11176 , \CIC1Cos/d3_15 , \CIC1Cos/d3_14 , 
         \CIC1Cos/d4_71_N_634_15 , \CIC1Cos/d4_71_N_634_14 , \CIC1Cos/n11175 , 
         \CIC1Cos/d3_13 , \CIC1Cos/d3_12 , \CIC1Cos/d4_71_N_634_13 , 
         \CIC1Cos/d4_71_N_634_12 , \CIC1Cos/n11174 , \CIC1Cos/d3_11 , 
         \CIC1Cos/d3_10 , \CIC1Cos/d4_71_N_634_11 , \CIC1Cos/d4_71_N_634_10 , 
         \CIC1Cos/n11173 , \CIC1Cos/d3_9 , \CIC1Cos/d3_8 , 
         \CIC1Cos/d4_71_N_634_9 , \CIC1Cos/d4_71_N_634_8 , \CIC1Cos/n11172 , 
         \CIC1Cos/d3_7 , \CIC1Cos/d3_6 , \CIC1Cos/d4_71_N_634_7 , 
         \CIC1Cos/d4_71_N_634_6 , \CIC1Cos/n11171 , \CIC1Cos/d3_5 , 
         \CIC1Cos/d3_4 , \CIC1Cos/d4_71_N_634_5 , \CIC1Cos/d4_71_N_634_4 , 
         \CIC1Cos/n11170 , \CIC1Cos/d3_3 , \CIC1Cos/d3_2 , 
         \CIC1Cos/d4_71_N_634_3 , \CIC1Cos/d4_71_N_634_2 , \CIC1Cos/n11169 , 
         \CIC1Cos/d3_1 , \CIC1Cos/d3_0 , \CIC1Cos/d4_71_N_634_1 , 
         \CIC1Cos/n11167 , \CIC1Cos/d2_35 , \CIC1Cos/d2_34 , 
         \CIC1Cos/d3_71_N_562_35 , \CIC1Cos/d3_71_N_562_34 , \CIC1Cos/n11166 , 
         \CIC1Cos/d2_33 , \CIC1Cos/d2_32 , \CIC1Cos/d3_71_N_562_33 , 
         \CIC1Cos/d3_71_N_562_32 , \CIC1Cos/n11165 , \CIC1Cos/d2_31 , 
         \CIC1Cos/d2_30 , \CIC1Cos/d3_71_N_562_31 , \CIC1Cos/d3_71_N_562_30 , 
         \CIC1Cos/n11164 , \CIC1Cos/d2_29 , \CIC1Cos/d2_28 , 
         \CIC1Cos/d3_71_N_562_29 , \CIC1Cos/d3_71_N_562_28 , \CIC1Cos/n11163 , 
         \CIC1Cos/d2_27 , \CIC1Cos/d2_26 , \CIC1Cos/d3_71_N_562_27 , 
         \CIC1Cos/d3_71_N_562_26 , \CIC1Cos/n11162 , \CIC1Cos/d2_25 , 
         \CIC1Cos/d2_24 , \CIC1Cos/d3_71_N_562_25 , \CIC1Cos/d3_71_N_562_24 , 
         \CIC1Cos/n11161 , \CIC1Cos/d2_23 , \CIC1Cos/d2_22 , 
         \CIC1Cos/d3_71_N_562_23 , \CIC1Cos/d3_71_N_562_22 , \CIC1Cos/n11160 , 
         \CIC1Cos/d2_21 , \CIC1Cos/d2_20 , \CIC1Cos/d3_71_N_562_21 , 
         \CIC1Cos/d3_71_N_562_20 , \CIC1Cos/n11159 , \CIC1Cos/d2_19 , 
         \CIC1Cos/d2_18 , \CIC1Cos/d3_71_N_562_19 , \CIC1Cos/d3_71_N_562_18 , 
         \CIC1Cos/n11158 , \CIC1Cos/d2_17 , \CIC1Cos/d2_16 , 
         \CIC1Cos/d3_71_N_562_17 , \CIC1Cos/d3_71_N_562_16 , \CIC1Cos/n11157 , 
         \CIC1Cos/d2_15 , \CIC1Cos/d2_14 , \CIC1Cos/d3_71_N_562_15 , 
         \CIC1Cos/d3_71_N_562_14 , \CIC1Cos/n11156 , \CIC1Cos/d2_13 , 
         \CIC1Cos/d2_12 , \CIC1Cos/d3_71_N_562_13 , \CIC1Cos/d3_71_N_562_12 , 
         \CIC1Cos/n11155 , \CIC1Cos/d2_11 , \CIC1Cos/d2_10 , 
         \CIC1Cos/d3_71_N_562_11 , \CIC1Cos/d3_71_N_562_10 , \CIC1Cos/n11154 , 
         \CIC1Cos/d2_9 , \CIC1Cos/d2_8 , \CIC1Cos/d3_71_N_562_9 , 
         \CIC1Cos/d3_71_N_562_8 , \CIC1Cos/n11153 , \CIC1Cos/d2_7 , 
         \CIC1Cos/d2_6 , \CIC1Cos/d3_71_N_562_7 , \CIC1Cos/d3_71_N_562_6 , 
         \CIC1Cos/n11152 , \CIC1Cos/d2_5 , \CIC1Cos/d2_4 , 
         \CIC1Cos/d3_71_N_562_5 , \CIC1Cos/d3_71_N_562_4 , \CIC1Cos/n11151 , 
         \CIC1Cos/d2_3 , \CIC1Cos/d2_2 , \CIC1Cos/d3_71_N_562_3 , 
         \CIC1Cos/d3_71_N_562_2 , \CIC1Cos/n11150 , \CIC1Cos/d2_1 , 
         \CIC1Cos/d2_0 , \CIC1Cos/d3_71_N_562_1 , \CIC1Cos/n11148 , 
         \CIC1Cos/d1_35 , \CIC1Cos/d1_34 , \CIC1Cos/d2_71_N_490_35 , 
         \CIC1Cos/d2_71_N_490_34 , \CIC1Cos/n11147 , \CIC1Cos/d1_33 , 
         \CIC1Cos/d1_32 , \CIC1Cos/d2_71_N_490_33 , \CIC1Cos/d2_71_N_490_32 , 
         \CIC1Cos/n11146 , \CIC1Cos/d1_31 , \CIC1Cos/d1_30 , 
         \CIC1Cos/d2_71_N_490_31 , \CIC1Cos/d2_71_N_490_30 , \CIC1Cos/n11145 , 
         \CIC1Cos/d1_29 , \CIC1Cos/d1_28 , \CIC1Cos/d2_71_N_490_29 , 
         \CIC1Cos/d2_71_N_490_28 , \CIC1Cos/n11144 , \CIC1Cos/d1_27 , 
         \CIC1Cos/d1_26 , \CIC1Cos/d2_71_N_490_27 , \CIC1Cos/d2_71_N_490_26 , 
         \CIC1Cos/n11143 , \CIC1Cos/d1_25 , \CIC1Cos/d1_24 , 
         \CIC1Cos/d2_71_N_490_25 , \CIC1Cos/d2_71_N_490_24 , \CIC1Cos/n11142 , 
         \CIC1Cos/d1_23 , \CIC1Cos/d1_22 , \CIC1Cos/d2_71_N_490_23 , 
         \CIC1Cos/d2_71_N_490_22 , \CIC1Cos/n11141 , \CIC1Cos/d1_21 , 
         \CIC1Cos/d1_20 , \CIC1Cos/d2_71_N_490_21 , \CIC1Cos/d2_71_N_490_20 , 
         \CIC1Cos/n11140 , \CIC1Cos/d1_19 , \CIC1Cos/d1_18 , 
         \CIC1Cos/d2_71_N_490_19 , \CIC1Cos/d2_71_N_490_18 , \CIC1Cos/n11139 , 
         \CIC1Cos/d1_17 , \CIC1Cos/d1_16 , \CIC1Cos/d2_71_N_490_17 , 
         \CIC1Cos/d2_71_N_490_16 , \CIC1Cos/n11138 , \CIC1Cos/d1_15 , 
         \CIC1Cos/d1_14 , \CIC1Cos/d2_71_N_490_15 , \CIC1Cos/d2_71_N_490_14 , 
         \CIC1Cos/n11137 , \CIC1Cos/d1_13 , \CIC1Cos/d1_12 , 
         \CIC1Cos/d2_71_N_490_13 , \CIC1Cos/d2_71_N_490_12 , \CIC1Cos/n11136 , 
         \CIC1Cos/d1_11 , \CIC1Cos/d1_10 , \CIC1Cos/d2_71_N_490_11 , 
         \CIC1Cos/d2_71_N_490_10 , \CIC1Cos/n11135 , \CIC1Cos/d1_9 , 
         \CIC1Cos/d1_8 , \CIC1Cos/d2_71_N_490_9 , \CIC1Cos/d2_71_N_490_8 , 
         \CIC1Cos/n11134 , \CIC1Cos/d1_7 , \CIC1Cos/d1_6 , 
         \CIC1Cos/d2_71_N_490_7 , \CIC1Cos/d2_71_N_490_6 , \CIC1Cos/n11133 , 
         \CIC1Cos/d1_5 , \CIC1Cos/d1_4 , \CIC1Cos/d2_71_N_490_5 , 
         \CIC1Cos/d2_71_N_490_4 , \CIC1Cos/n11132 , \CIC1Cos/d1_3 , 
         \CIC1Cos/d1_2 , \CIC1Cos/d2_71_N_490_3 , \CIC1Cos/d2_71_N_490_2 , 
         \CIC1Cos/n11131 , \CIC1Cos/d1_1 , \CIC1Cos/d1_0 , 
         \CIC1Cos/d2_71_N_490_1 , \CIC1Cos/n11091 , \CIC1Cos/d1_71_N_418_35 , 
         \CIC1Cos/d1_71_N_418_34 , \CIC1Cos/n11090 , \CIC1Cos/d1_71_N_418_33 , 
         \CIC1Cos/d1_71_N_418_32 , \CIC1Cos/n11089 , \CIC1Cos/d1_71_N_418_31 , 
         \CIC1Cos/d1_71_N_418_30 , \CIC1Cos/n11088 , \CIC1Cos/d1_71_N_418_29 , 
         \CIC1Cos/d1_71_N_418_28 , \CIC1Cos/n11087 , \CIC1Cos/d1_71_N_418_27 , 
         \CIC1Cos/d1_71_N_418_26 , \CIC1Cos/n11086 , \CIC1Cos/d1_71_N_418_25 , 
         \CIC1Cos/d1_71_N_418_24 , \CIC1Cos/n11085 , \CIC1Cos/d1_71_N_418_23 , 
         \CIC1Cos/d1_71_N_418_22 , \CIC1Cos/n11084 , \CIC1Cos/d1_71_N_418_21 , 
         \CIC1Cos/d1_71_N_418_20 , \CIC1Cos/n11083 , \CIC1Cos/d1_71_N_418_19 , 
         \CIC1Cos/d1_71_N_418_18 , \CIC1Cos/n11082 , \CIC1Cos/d1_71_N_418_17 , 
         \CIC1Cos/d1_71_N_418_16 , \CIC1Cos/n11081 , \CIC1Cos/d1_71_N_418_15 , 
         \CIC1Cos/d1_71_N_418_14 , \CIC1Cos/n11080 , \CIC1Cos/d1_71_N_418_13 , 
         \CIC1Cos/d1_71_N_418_12 , \CIC1Cos/n11079 , MixerOutCos_10, 
         \CIC1Cos/d1_71_N_418_11 , \CIC1Cos/d1_71_N_418_10 , \CIC1Cos/n11078 , 
         MixerOutCos_9, MixerOutCos_8, \CIC1Cos/d1_71_N_418_9 , 
         \CIC1Cos/d1_71_N_418_8 , \CIC1Cos/n11077 , MixerOutCos_7, 
         MixerOutCos_6, \CIC1Cos/d1_71_N_418_7 , \CIC1Cos/d1_71_N_418_6 , 
         \CIC1Cos/n11076 , MixerOutCos_5, MixerOutCos_4, 
         \CIC1Cos/d1_71_N_418_5 , \CIC1Cos/d1_71_N_418_4 , \CIC1Cos/n11075 , 
         MixerOutCos_3, MixerOutCos_2, \CIC1Cos/d1_71_N_418_3 , 
         \CIC1Cos/d1_71_N_418_2 , \CIC1Cos/n11074 , MixerOutCos_1, 
         MixerOutCos_0, \CIC1Cos/d1_71_N_418_1 , \CIC1Cos/d_d9_35 , 
         \CIC1Cos/d9_35 , \CIC1Cos/n11745 , \CIC1Cos/n6708 , \CIC1Cos/d_d9_34 , 
         \CIC1Cos/d9_34 , \CIC1Cos/d_d9_33 , \CIC1Cos/d9_33 , \CIC1Cos/n11744 , 
         \CIC1Cos/d_d9_32 , \CIC1Cos/d9_32 , \CIC1Cos/d_d9_31 , 
         \CIC1Cos/d9_31 , \CIC1Cos/n11743 , \CIC1Cos/d_d9_30 , \CIC1Cos/d9_30 , 
         \CIC1Cos/d_d9_29 , \CIC1Cos/d9_29 , \CIC1Cos/n11742 , 
         \CIC1Cos/d_d9_28 , \CIC1Cos/d9_28 , \CIC1Cos/d_d9_27 , 
         \CIC1Cos/d9_27 , \CIC1Cos/n11741 , \CIC1Cos/d_d9_26 , \CIC1Cos/d9_26 , 
         \CIC1Cos/d_d9_25 , \CIC1Cos/d9_25 , \CIC1Cos/n11740 , 
         \CIC1Cos/d_d9_24 , \CIC1Cos/d9_24 , \CIC1Cos/d_d9_23 , 
         \CIC1Cos/d9_23 , \CIC1Cos/n11739 , \CIC1Cos/d_d9_22 , \CIC1Cos/d9_22 , 
         \CIC1Cos/d_d9_21 , \CIC1Cos/d9_21 , \CIC1Cos/n11738 , 
         \CIC1Cos/d_d9_20 , \CIC1Cos/d9_20 , \CIC1Cos/d_d9_19 , 
         \CIC1Cos/d9_19 , \CIC1Cos/n11737 , \CIC1Cos/d_d9_18 , \CIC1Cos/d9_18 , 
         \CIC1Cos/d_d9_17 , \CIC1Cos/d9_17 , \CIC1Cos/n11736 , 
         \CIC1Cos/d_d9_16 , \CIC1Cos/d9_16 , \CIC1Cos/d_d9_15 , 
         \CIC1Cos/d9_15 , \CIC1Cos/n11735 , \CIC1Cos/d_d9_14 , \CIC1Cos/d9_14 , 
         \CIC1Cos/d_d9_13 , \CIC1Cos/d9_13 , \CIC1Cos/n11734 , 
         \CIC1Cos/d_d9_12 , \CIC1Cos/d9_12 , \CIC1Cos/d_d9_11 , 
         \CIC1Cos/d9_11 , \CIC1Cos/n11733 , \CIC1Cos/d_d9_10 , \CIC1Cos/d9_10 , 
         \CIC1Cos/d_d9_9 , \CIC1Cos/d9_9 , \CIC1Cos/n11732 , \CIC1Cos/d_d9_8 , 
         \CIC1Cos/d9_8 , \CIC1Cos/d_d9_7 , \CIC1Cos/d9_7 , \CIC1Cos/n11731 , 
         \CIC1Cos/d_d9_6 , \CIC1Cos/d9_6 , \CIC1Cos/d_d9_5 , \CIC1Cos/d9_5 , 
         \CIC1Cos/n11730 , \CIC1Cos/d_d9_4 , \CIC1Cos/d9_4 , \CIC1Cos/d_d9_3 , 
         \CIC1Cos/d9_3 , \CIC1Cos/n11729 , \CIC1Cos/d_d9_2 , \CIC1Cos/d9_2 , 
         \CIC1Cos/d_d9_1 , \CIC1Cos/d9_1 , \CIC1Cos/n11728 , \CIC1Cos/d_d9_0 , 
         \CIC1Cos/d9_0 , \CIC1Cos/d_d8_35 , \CIC1Cos/d8_35 , 
         \CIC1Cos/d9_71_N_1675_35 , \CIC1Cos/n11727 , \CIC1Cos/d_d8_34 , 
         \CIC1Cos/d8_34 , \CIC1Cos/d_d8_33 , \CIC1Cos/d8_33 , 
         \CIC1Cos/d9_71_N_1675_34 , \CIC1Cos/d9_71_N_1675_33 , 
         \CIC1Cos/n11726 , \CIC1Cos/d_d8_32 , \CIC1Cos/d8_32 , 
         \CIC1Cos/d_d8_31 , \CIC1Cos/d8_31 , \CIC1Cos/d9_71_N_1675_32 , 
         \CIC1Cos/d9_71_N_1675_31 , \CIC1Cos/n11725 , \CIC1Cos/d_d8_30 , 
         \CIC1Cos/d8_30 , \CIC1Cos/d_d8_29 , \CIC1Cos/d8_29 , 
         \CIC1Cos/d9_71_N_1675_30 , \CIC1Cos/d9_71_N_1675_29 , 
         \CIC1Cos/n11724 , \CIC1Cos/d_d8_28 , \CIC1Cos/d8_28 , 
         \CIC1Cos/d_d8_27 , \CIC1Cos/d8_27 , \CIC1Cos/d9_71_N_1675_28 , 
         \CIC1Cos/d9_71_N_1675_27 , \CIC1Cos/n11723 , \CIC1Cos/d_d8_26 , 
         \CIC1Cos/d8_26 , \CIC1Cos/d_d8_25 , \CIC1Cos/d8_25 , 
         \CIC1Cos/d9_71_N_1675_26 , \CIC1Cos/d9_71_N_1675_25 , 
         \CIC1Cos/n11722 , \CIC1Cos/d_d8_24 , \CIC1Cos/d8_24 , 
         \CIC1Cos/d_d8_23 , \CIC1Cos/d8_23 , \CIC1Cos/d9_71_N_1675_24 , 
         \CIC1Cos/d9_71_N_1675_23 , \CIC1Cos/n11721 , \CIC1Cos/d_d8_22 , 
         \CIC1Cos/d8_22 , \CIC1Cos/d_d8_21 , \CIC1Cos/d8_21 , 
         \CIC1Cos/d9_71_N_1675_22 , \CIC1Cos/d9_71_N_1675_21 , 
         \CIC1Cos/n11720 , \CIC1Cos/d_d8_20 , \CIC1Cos/d8_20 , 
         \CIC1Cos/d_d8_19 , \CIC1Cos/d8_19 , \CIC1Cos/d9_71_N_1675_20 , 
         \CIC1Cos/d9_71_N_1675_19 , \CIC1Cos/n11719 , \CIC1Cos/d_d8_18 , 
         \CIC1Cos/d8_18 , \CIC1Cos/d_d8_17 , \CIC1Cos/d8_17 , 
         \CIC1Cos/d9_71_N_1675_18 , \CIC1Cos/d9_71_N_1675_17 , 
         \CIC1Cos/n11718 , \CIC1Cos/d_d8_16 , \CIC1Cos/d8_16 , 
         \CIC1Cos/d_d8_15 , \CIC1Cos/d8_15 , \CIC1Cos/d9_71_N_1675_16 , 
         \CIC1Cos/d9_71_N_1675_15 , \CIC1Cos/n11717 , \CIC1Cos/d_d8_14 , 
         \CIC1Cos/d8_14 , \CIC1Cos/d_d8_13 , \CIC1Cos/d8_13 , 
         \CIC1Cos/d9_71_N_1675_14 , \CIC1Cos/d9_71_N_1675_13 , 
         \CIC1Cos/n11716 , \CIC1Cos/d_d8_12 , \CIC1Cos/d8_12 , 
         \CIC1Cos/d_d8_11 , \CIC1Cos/d8_11 , \CIC1Cos/d9_71_N_1675_12 , 
         \CIC1Cos/d9_71_N_1675_11 , \CIC1Cos/n11715 , \CIC1Cos/d_d8_10 , 
         \CIC1Cos/d8_10 , \CIC1Cos/d_d8_9 , \CIC1Cos/d8_9 , 
         \CIC1Cos/d9_71_N_1675_10 , \CIC1Cos/d9_71_N_1675_9 , \CIC1Cos/n11714 , 
         \CIC1Cos/d_d8_8 , \CIC1Cos/d8_8 , \CIC1Cos/d_d8_7 , \CIC1Cos/d8_7 , 
         \CIC1Cos/d9_71_N_1675_8 , \CIC1Cos/d9_71_N_1675_7 , \CIC1Cos/n11713 , 
         \CIC1Cos/d_d8_6 , \CIC1Cos/d8_6 , \CIC1Cos/d_d8_5 , \CIC1Cos/d8_5 , 
         \CIC1Cos/d9_71_N_1675_6 , \CIC1Cos/d9_71_N_1675_5 , \CIC1Cos/n11712 , 
         \CIC1Cos/d_d8_4 , \CIC1Cos/d8_4 , \CIC1Cos/d_d8_3 , \CIC1Cos/d8_3 , 
         \CIC1Cos/d9_71_N_1675_4 , \CIC1Cos/d9_71_N_1675_3 , \CIC1Cos/n11711 , 
         \CIC1Cos/d_d8_2 , \CIC1Cos/d8_2 , \CIC1Cos/d_d8_1 , \CIC1Cos/d8_1 , 
         \CIC1Cos/d9_71_N_1675_2 , \CIC1Cos/d9_71_N_1675_1 , \CIC1Cos/n11710 , 
         \CIC1Cos/d_d8_0 , \CIC1Cos/d8_0 , \CIC1Cos/d9_71_N_1675_0 , 
         \CIC1Cos/osc_clk_enable_784 , \CIC1Cos/d_d7_35 , \CIC1Cos/d7_35 , 
         \CIC1Cos/d8_71_N_1603_35 , \CIC1Cos/osc_clk_enable_1134 , 
         \CIC1Cos/n11709 , \CIC1Cos/d_d7_34 , \CIC1Cos/d7_34 , 
         \CIC1Cos/d_d7_33 , \CIC1Cos/d7_33 , \CIC1Cos/d8_71_N_1603_34 , 
         \CIC1Cos/d8_71_N_1603_33 , \CIC1Cos/n11708 , \CIC1Cos/d_d7_32 , 
         \CIC1Cos/d7_32 , \CIC1Cos/d_d7_31 , \CIC1Cos/d7_31 , 
         \CIC1Cos/d8_71_N_1603_32 , \CIC1Cos/d8_71_N_1603_31 , 
         \CIC1Cos/n11707 , \CIC1Cos/d_d7_30 , \CIC1Cos/d7_30 , 
         \CIC1Cos/d_d7_29 , \CIC1Cos/d7_29 , \CIC1Cos/d8_71_N_1603_30 , 
         \CIC1Cos/d8_71_N_1603_29 , \CIC1Cos/n11706 , \CIC1Cos/d_d7_28 , 
         \CIC1Cos/d7_28 , \CIC1Cos/d_d7_27 , \CIC1Cos/d7_27 , 
         \CIC1Cos/d8_71_N_1603_28 , \CIC1Cos/d8_71_N_1603_27 , 
         \CIC1Cos/n11705 , \CIC1Cos/d_d7_26 , \CIC1Cos/d7_26 , 
         \CIC1Cos/d_d7_25 , \CIC1Cos/d7_25 , \CIC1Cos/d8_71_N_1603_26 , 
         \CIC1Cos/d8_71_N_1603_25 , \CIC1Cos/n11704 , \CIC1Cos/d_d7_24 , 
         \CIC1Cos/d7_24 , \CIC1Cos/d_d7_23 , \CIC1Cos/d7_23 , 
         \CIC1Cos/d8_71_N_1603_24 , \CIC1Cos/d8_71_N_1603_23 , 
         \CIC1Cos/n11703 , \CIC1Cos/d_d7_22 , \CIC1Cos/d7_22 , 
         \CIC1Cos/d_d7_21 , \CIC1Cos/d7_21 , \CIC1Cos/d8_71_N_1603_22 , 
         \CIC1Cos/d8_71_N_1603_21 , \CIC1Cos/n11702 , \CIC1Cos/d_d7_20 , 
         \CIC1Cos/d7_20 , \CIC1Cos/d_d7_19 , \CIC1Cos/d7_19 , 
         \CIC1Cos/d8_71_N_1603_20 , \CIC1Cos/d8_71_N_1603_19 , 
         \CIC1Cos/n11701 , \CIC1Cos/d_d7_18 , \CIC1Cos/d7_18 , 
         \CIC1Cos/d_d7_17 , \CIC1Cos/d7_17 , \CIC1Cos/d8_71_N_1603_18 , 
         \CIC1Cos/d8_71_N_1603_17 , \CIC1Cos/n11700 , \CIC1Cos/d_d7_16 , 
         \CIC1Cos/d7_16 , \CIC1Cos/d_d7_15 , \CIC1Cos/d7_15 , 
         \CIC1Cos/d8_71_N_1603_16 , \CIC1Cos/d8_71_N_1603_15 , 
         \CIC1Cos/n11699 , \CIC1Cos/d_d7_14 , \CIC1Cos/d7_14 , 
         \CIC1Cos/d_d7_13 , \CIC1Cos/d7_13 , \CIC1Cos/d8_71_N_1603_14 , 
         \CIC1Cos/d8_71_N_1603_13 , \CIC1Cos/n11698 , \CIC1Cos/d_d7_12 , 
         \CIC1Cos/d7_12 , \CIC1Cos/d_d7_11 , \CIC1Cos/d7_11 , 
         \CIC1Cos/d8_71_N_1603_12 , \CIC1Cos/d8_71_N_1603_11 , 
         \CIC1Cos/n11697 , \CIC1Cos/d_d7_10 , \CIC1Cos/d7_10 , 
         \CIC1Cos/d_d7_9 , \CIC1Cos/d7_9 , \CIC1Cos/d8_71_N_1603_10 , 
         \CIC1Cos/d8_71_N_1603_9 , \CIC1Cos/n11696 , \CIC1Cos/d_d7_8 , 
         \CIC1Cos/d7_8 , \CIC1Cos/d_d7_7 , \CIC1Cos/d7_7 , 
         \CIC1Cos/d8_71_N_1603_8 , \CIC1Cos/d8_71_N_1603_7 , \CIC1Cos/n11695 , 
         \CIC1Cos/d_d7_6 , \CIC1Cos/d7_6 , \CIC1Cos/d_d7_5 , \CIC1Cos/d7_5 , 
         \CIC1Cos/d8_71_N_1603_6 , \CIC1Cos/d8_71_N_1603_5 , \CIC1Cos/n11694 , 
         \CIC1Cos/d_d7_4 , \CIC1Cos/d7_4 , \CIC1Cos/d_d7_3 , \CIC1Cos/d7_3 , 
         \CIC1Cos/d8_71_N_1603_4 , \CIC1Cos/d8_71_N_1603_3 , \CIC1Cos/n11693 , 
         \CIC1Cos/d_d7_2 , \CIC1Cos/d7_2 , \CIC1Cos/d_d7_1 , \CIC1Cos/d7_1 , 
         \CIC1Cos/d8_71_N_1603_2 , \CIC1Cos/d8_71_N_1603_1 , \CIC1Cos/n11692 , 
         \CIC1Cos/d_d7_0 , \CIC1Cos/d7_0 , \CIC1Cos/d8_71_N_1603_0 , 
         \CIC1Cos/d_d6_35 , \CIC1Cos/d6_35 , \CIC1Cos/d7_71_N_1531_35 , 
         \CIC1Cos/n11691 , \CIC1Cos/d_d6_34 , \CIC1Cos/d6_34 , 
         \CIC1Cos/d_d6_33 , \CIC1Cos/d6_33 , \CIC1Cos/d7_71_N_1531_34 , 
         \CIC1Cos/d7_71_N_1531_33 , \CIC1Cos/n11690 , \CIC1Cos/d_d6_32 , 
         \CIC1Cos/d6_32 , \CIC1Cos/d_d6_31 , \CIC1Cos/d6_31 , 
         \CIC1Cos/d7_71_N_1531_32 , \CIC1Cos/d7_71_N_1531_31 , 
         \CIC1Cos/n11689 , \CIC1Cos/d_d6_30 , \CIC1Cos/d6_30 , 
         \CIC1Cos/d_d6_29 , \CIC1Cos/d6_29 , \CIC1Cos/d7_71_N_1531_30 , 
         \CIC1Cos/d7_71_N_1531_29 , \CIC1Cos/n11688 , \CIC1Cos/d_d6_28 , 
         \CIC1Cos/d6_28 , \CIC1Cos/d_d6_27 , \CIC1Cos/d6_27 , 
         \CIC1Cos/d7_71_N_1531_27 , \CIC1Cos/osc_clk_enable_984 , 
         \CIC1Cos/n11687 , \CIC1Cos/d7_71_N_1531_28 , \CIC1Cos/d_d6_26 , 
         \CIC1Cos/d6_26 , \CIC1Cos/d_d6_25 , \CIC1Cos/d6_25 , 
         \CIC1Cos/d7_71_N_1531_26 , \CIC1Cos/d7_71_N_1531_25 , 
         \CIC1Cos/n11686 , \CIC1Cos/d_d6_24 , \CIC1Cos/d6_24 , 
         \CIC1Cos/d_d6_23 , \CIC1Cos/d6_23 , \CIC1Cos/d7_71_N_1531_24 , 
         \CIC1Cos/d7_71_N_1531_23 , \CIC1Cos/n11685 , \CIC1Cos/d_d6_22 , 
         \CIC1Cos/d6_22 , \CIC1Cos/d_d6_21 , \CIC1Cos/d6_21 , 
         \CIC1Cos/d7_71_N_1531_22 , \CIC1Cos/d7_71_N_1531_21 , 
         \CIC1Cos/n11684 , \CIC1Cos/d_d6_20 , \CIC1Cos/d6_20 , 
         \CIC1Cos/d_d6_19 , \CIC1Cos/d6_19 , \CIC1Cos/d7_71_N_1531_20 , 
         \CIC1Cos/d7_71_N_1531_19 , \CIC1Cos/n11683 , \CIC1Cos/d_d6_18 , 
         \CIC1Cos/d6_18 , \CIC1Cos/d_d6_17 , \CIC1Cos/d6_17 , 
         \CIC1Cos/d7_71_N_1531_18 , \CIC1Cos/d7_71_N_1531_17 , 
         \CIC1Cos/n11682 , \CIC1Cos/d_d6_16 , \CIC1Cos/d6_16 , 
         \CIC1Cos/d_d6_15 , \CIC1Cos/d6_15 , \CIC1Cos/d7_71_N_1531_16 , 
         \CIC1Cos/d7_71_N_1531_15 , \CIC1Cos/n11681 , \CIC1Cos/d_d6_14 , 
         \CIC1Cos/d6_14 , \CIC1Cos/d_d6_13 , \CIC1Cos/d6_13 , 
         \CIC1Cos/d7_71_N_1531_14 , \CIC1Cos/d7_71_N_1531_13 , 
         \CIC1Cos/n11680 , \CIC1Cos/d_d6_12 , \CIC1Cos/d6_12 , 
         \CIC1Cos/d_d6_11 , \CIC1Cos/d6_11 , \CIC1Cos/d7_71_N_1531_12 , 
         \CIC1Cos/d7_71_N_1531_11 , \CIC1Cos/n11679 , \CIC1Cos/d_d6_10 , 
         \CIC1Cos/d6_10 , \CIC1Cos/d_d6_9 , \CIC1Cos/d6_9 , 
         \CIC1Cos/d7_71_N_1531_10 , \CIC1Cos/d7_71_N_1531_9 , \CIC1Cos/n11678 , 
         \CIC1Cos/d_d6_8 , \CIC1Cos/d6_8 , \CIC1Cos/d_d6_7 , \CIC1Cos/d6_7 , 
         \CIC1Cos/d7_71_N_1531_8 , \CIC1Cos/d7_71_N_1531_7 , \CIC1Cos/n11677 , 
         \CIC1Cos/d_d6_6 , \CIC1Cos/d6_6 , \CIC1Cos/d_d6_5 , \CIC1Cos/d6_5 , 
         \CIC1Cos/d7_71_N_1531_6 , \CIC1Cos/d7_71_N_1531_5 , \CIC1Cos/n11676 , 
         \CIC1Cos/d_d6_4 , \CIC1Cos/d6_4 , \CIC1Cos/d_d6_3 , \CIC1Cos/d6_3 , 
         \CIC1Cos/d7_71_N_1531_4 , \CIC1Cos/d7_71_N_1531_3 , \CIC1Cos/n11675 , 
         \CIC1Cos/d_d6_2 , \CIC1Cos/d6_2 , \CIC1Cos/d_d6_1 , \CIC1Cos/d6_1 , 
         \CIC1Cos/d7_71_N_1531_2 , \CIC1Cos/d7_71_N_1531_1 , \CIC1Cos/n11674 , 
         \CIC1Cos/d_d6_0 , \CIC1Cos/d6_0 , \CIC1Cos/d7_71_N_1531_0 , 
         \CIC1Cos/d_d_tmp_35 , \CIC1Cos/d_tmp_35 , \CIC1Cos/d6_71_N_1459_35 , 
         \CIC1Cos/n11673 , \CIC1Cos/d_d_tmp_34 , \CIC1Cos/d_tmp_34 , 
         \CIC1Cos/d_d_tmp_33 , \CIC1Cos/d_tmp_33 , \CIC1Cos/d6_71_N_1459_34 , 
         \CIC1Cos/d6_71_N_1459_33 , \CIC1Cos/n11672 , \CIC1Cos/d_d_tmp_32 , 
         \CIC1Cos/d_tmp_32 , \CIC1Cos/d_d_tmp_31 , \CIC1Cos/d_tmp_31 , 
         \CIC1Cos/d6_71_N_1459_32 , \CIC1Cos/d6_71_N_1459_31 , 
         \CIC1Cos/n11671 , \CIC1Cos/d_d_tmp_30 , \CIC1Cos/d_tmp_30 , 
         \CIC1Cos/d_d_tmp_29 , \CIC1Cos/d_tmp_29 , \CIC1Cos/d6_71_N_1459_30 , 
         \CIC1Cos/d6_71_N_1459_29 , \CIC1Cos/n11670 , \CIC1Cos/d_d_tmp_28 , 
         \CIC1Cos/d_tmp_28 , \CIC1Cos/d_d_tmp_27 , \CIC1Cos/d_tmp_27 , 
         \CIC1Cos/d6_71_N_1459_28 , \CIC1Cos/d6_71_N_1459_27 , 
         \CIC1Cos/n11669 , \CIC1Cos/d_d_tmp_26 , \CIC1Cos/d_tmp_26 , 
         \CIC1Cos/d_d_tmp_25 , \CIC1Cos/d_tmp_25 , \CIC1Cos/d6_71_N_1459_26 , 
         \CIC1Cos/d6_71_N_1459_25 , \CIC1Cos/n11668 , \CIC1Cos/d_d_tmp_24 , 
         \CIC1Cos/d_tmp_24 , \CIC1Cos/d_d_tmp_23 , \CIC1Cos/d_tmp_23 , 
         \CIC1Cos/d6_71_N_1459_24 , \CIC1Cos/d6_71_N_1459_23 , 
         \CIC1Cos/n11667 , \CIC1Cos/d_d_tmp_22 , \CIC1Cos/d_tmp_22 , 
         \CIC1Cos/d_d_tmp_21 , \CIC1Cos/d_tmp_21 , \CIC1Cos/d6_71_N_1459_22 , 
         \CIC1Cos/d6_71_N_1459_21 , \CIC1Cos/n11666 , \CIC1Cos/d_d_tmp_20 , 
         \CIC1Cos/d_tmp_20 , \CIC1Cos/d_d_tmp_19 , \CIC1Cos/d_tmp_19 , 
         \CIC1Cos/d6_71_N_1459_19 , \CIC1Cos/osc_clk_enable_834 , 
         \CIC1Cos/n11665 , \CIC1Cos/d6_71_N_1459_20 , \CIC1Cos/d_d_tmp_18 , 
         \CIC1Cos/d_tmp_18 , \CIC1Cos/d_d_tmp_17 , \CIC1Cos/d_tmp_17 , 
         \CIC1Cos/d6_71_N_1459_18 , \CIC1Cos/d6_71_N_1459_17 , 
         \CIC1Cos/n11664 , \CIC1Cos/d_d_tmp_16 , \CIC1Cos/d_tmp_16 , 
         \CIC1Cos/d_d_tmp_15 , \CIC1Cos/d_tmp_15 , \CIC1Cos/d6_71_N_1459_16 , 
         \CIC1Cos/d6_71_N_1459_15 , \CIC1Cos/n11663 , \CIC1Cos/d_d_tmp_14 , 
         \CIC1Cos/d_tmp_14 , \CIC1Cos/d_d_tmp_13 , \CIC1Cos/d_tmp_13 , 
         \CIC1Cos/d6_71_N_1459_14 , \CIC1Cos/d6_71_N_1459_13 , 
         \CIC1Cos/n11662 , \CIC1Cos/d_d_tmp_12 , \CIC1Cos/d_tmp_12 , 
         \CIC1Cos/d_d_tmp_11 , \CIC1Cos/d_tmp_11 , \CIC1Cos/d6_71_N_1459_12 , 
         \CIC1Cos/d6_71_N_1459_11 , \CIC1Cos/n11661 , \CIC1Cos/d_d_tmp_10 , 
         \CIC1Cos/d_tmp_10 , \CIC1Cos/d_d_tmp_9 , \CIC1Cos/d_tmp_9 , 
         \CIC1Cos/d6_71_N_1459_10 , \CIC1Cos/d6_71_N_1459_9 , \CIC1Cos/n11660 , 
         \CIC1Cos/d_d_tmp_8 , \CIC1Cos/d_tmp_8 , \CIC1Cos/d_d_tmp_7 , 
         \CIC1Cos/d_tmp_7 , \CIC1Cos/d6_71_N_1459_8 , \CIC1Cos/d6_71_N_1459_7 , 
         \CIC1Cos/n11659 , \CIC1Cos/d_d_tmp_6 , \CIC1Cos/d_tmp_6 , 
         \CIC1Cos/d_d_tmp_5 , \CIC1Cos/d_tmp_5 , \CIC1Cos/d6_71_N_1459_6 , 
         \CIC1Cos/d6_71_N_1459_5 , \CIC1Cos/n11658 , \CIC1Cos/d_d_tmp_4 , 
         \CIC1Cos/d_tmp_4 , \CIC1Cos/d_d_tmp_3 , \CIC1Cos/d_tmp_3 , 
         \CIC1Cos/d6_71_N_1459_4 , \CIC1Cos/d6_71_N_1459_3 , \CIC1Cos/n11657 , 
         \CIC1Cos/d_d_tmp_2 , \CIC1Cos/d_tmp_2 , \CIC1Cos/d_d_tmp_1 , 
         \CIC1Cos/d_tmp_1 , \CIC1Cos/d6_71_N_1459_2 , \CIC1Cos/d6_71_N_1459_1 , 
         \CIC1Cos/n11656 , \CIC1Cos/d_d_tmp_0 , \CIC1Cos/d_tmp_0 , 
         \CIC1Cos/d6_71_N_1459_0 , \CIC1Cos/n5058 , \CIC1Cos/n5059 , 
         \CIC1Cos/d1_71_N_418_51 , \CIC1Cos/d1_71_N_418_50 , \CIC1Cos/n12056 , 
         \CIC1Cos/n11911 , \CIC1Cos/n5050 , \CIC1Cos/n5051 , 
         \CIC1Cos/d1_71_N_418_59 , \CIC1Cos/d1_71_N_418_58 , \CIC1Cos/n12059 , 
         \CIC1Cos/n12060 , \CIC1Cos/n12071 , \CIC1Cos/n12072 , 
         \CIC1Cos/n12070 , \CIC1Cos/n12069 , \CIC1Cos/n12068 , \CIC1Cos/n5038 , 
         \CIC1Cos/n5039 , \CIC1Cos/d1_71_N_418_71 , \CIC1Cos/d1_71_N_418_70 , 
         \CIC1Cos/n12065 , \CIC1Cos/n5040 , \CIC1Cos/n5041 , 
         \CIC1Cos/d1_71_N_418_69 , \CIC1Cos/d1_71_N_418_68 , \CIC1Cos/n12064 , 
         \CIC1Cos/n5042 , \CIC1Cos/n5043 , \CIC1Cos/d1_71_N_418_67 , 
         \CIC1Cos/d1_71_N_418_66 , \CIC1Cos/n12063 , \CIC1Cos/n5044 , 
         \CIC1Cos/n5045 , \CIC1Cos/d1_71_N_418_65 , \CIC1Cos/d1_71_N_418_64 , 
         \CIC1Cos/n12062 , \CIC1Cos/n5052 , \CIC1Cos/n5053 , 
         \CIC1Cos/d1_71_N_418_57 , \CIC1Cos/d1_71_N_418_56 , \CIC1Cos/n12058 , 
         \CIC1Cos/n5054 , \CIC1Cos/n5055 , \CIC1Cos/d1_71_N_418_55 , 
         \CIC1Cos/d1_71_N_418_54 , \CIC1Cos/n12057 , \CIC1Cos/n5056 , 
         \CIC1Cos/n5057 , \CIC1Cos/d1_71_N_418_53 , \CIC1Cos/d1_71_N_418_52 , 
         \CIC1Cos/n5046 , \CIC1Cos/n5047 , \CIC1Cos/d1_71_N_418_63 , 
         \CIC1Cos/d1_71_N_418_62 , \CIC1Cos/n12061 , \CIC1Cos/n5048 , 
         \CIC1Cos/n5049 , \CIC1Cos/d1_71_N_418_61 , \CIC1Cos/d1_71_N_418_60 , 
         \CIC1Cos/d2_71_N_490_59 , \CIC1Cos/d2_71_N_490_58 , \CIC1Cos/n12084 , 
         \CIC1Cos/n12083 , \CIC1Cos/n12082 , \CIC1Cos/n12081 , 
         \CIC1Cos/n12080 , \CIC1Cos/n12079 , \CIC1Cos/n12078 , 
         \CIC1Cos/n12077 , \CIC1Cos/n12076 , \CIC1Cos/n12075 , 
         \CIC1Cos/n12074 , \CIC1Cos/n12073 , 
         \AMDemodulator1/d_out_d_11__N_1873 , 
         \AMDemodulator1/d_out_d_11_N_1874_17 , \AMDemodulator1/n11796 , 
         \AMDemodulator1/n438 , \AMDemodulator1/d_out_d_11_N_1876_17 , 
         \AMDemodulator1/n380 , \AMDemodulator1/n381 , \AMDemodulator1/n11795 , 
         \AMDemodulator1/n440 , \AMDemodulator1/n439 , \AMDemodulator1/n382 , 
         \AMDemodulator1/ISquare_31 , \AMDemodulator1/n383 , 
         \AMDemodulator1/n11794 , \AMDemodulator1/n442 , \AMDemodulator1/n441 , 
         \AMDemodulator1/n384 , \AMDemodulator1/n385 , \AMDemodulator1/n11793 , 
         \AMDemodulator1/n444 , \AMDemodulator1/n443 , \AMDemodulator1/n386 , 
         \AMDemodulator1/d_out_d_11_N_1872_17 , \AMDemodulator1/n387 , 
         \AMDemodulator1/n11792 , \AMDemodulator1/n446 , \AMDemodulator1/n445 , 
         \AMDemodulator1/ISquare_19 , \AMDemodulator1/ISquare_18 , 
         \AMDemodulator1/n11791 , \AMDemodulator1/n447 , 
         \AMDemodulator1/n12451 , \AMDemodulator1/n912 , \AMDemodulator1/n913 , 
         \AMDemodulator1/n11785 , \AMDemodulator1/d_out_d_11_N_2335_17 , 
         \AMDemodulator1/MultResult2_23 , \AMDemodulator1/MultResult1_23 , 
         \AMDemodulator1/ISquare_31_N_1895_24 , CIC1_out_clkSin, 
         \AMDemodulator1/n11244 , \AMDemodulator1/MultResult2_22 , 
         \AMDemodulator1/MultResult1_22 , 
         \AMDemodulator1/ISquare_31_N_1895_23 , 
         \AMDemodulator1/ISquare_31_N_1895_22 , \AMDemodulator1/n11243 , 
         \AMDemodulator1/ISquare_22 , \AMDemodulator1/ISquare_23 , 
         \AMDemodulator1/MultResult2_21 , \AMDemodulator1/MultResult1_21 , 
         \AMDemodulator1/MultResult2_20 , \AMDemodulator1/MultResult1_20 , 
         \AMDemodulator1/ISquare_31_N_1895_21 , 
         \AMDemodulator1/ISquare_31_N_1895_20 , \AMDemodulator1/n11242 , 
         \AMDemodulator1/ISquare_20 , \AMDemodulator1/ISquare_21 , 
         \AMDemodulator1/MultResult2_19 , \AMDemodulator1/MultResult1_19 , 
         \AMDemodulator1/MultResult2_18 , \AMDemodulator1/MultResult1_18 , 
         \AMDemodulator1/ISquare_31_N_1895_19 , 
         \AMDemodulator1/ISquare_31_N_1895_18 , \AMDemodulator1/n11241 , 
         \AMDemodulator1/MultResult2_17 , \AMDemodulator1/MultResult1_17 , 
         \AMDemodulator1/MultResult2_16 , \AMDemodulator1/MultResult1_16 , 
         \AMDemodulator1/ISquare_31_N_1895_17 , 
         \AMDemodulator1/ISquare_31_N_1895_16 , \AMDemodulator1/n11240 , 
         \AMDemodulator1/ISquare_16 , \AMDemodulator1/ISquare_17 , 
         \AMDemodulator1/MultResult2_15 , \AMDemodulator1/MultResult1_15 , 
         \AMDemodulator1/MultResult2_14 , \AMDemodulator1/MultResult1_14 , 
         \AMDemodulator1/ISquare_31_N_1895_15 , 
         \AMDemodulator1/ISquare_31_N_1895_14 , \AMDemodulator1/n11239 , 
         \AMDemodulator1/ISquare_14 , \AMDemodulator1/ISquare_15 , 
         \AMDemodulator1/MultResult2_13 , \AMDemodulator1/MultResult1_13 , 
         \AMDemodulator1/MultResult2_12 , \AMDemodulator1/MultResult1_12 , 
         \AMDemodulator1/ISquare_31_N_1895_13 , 
         \AMDemodulator1/ISquare_31_N_1895_12 , \AMDemodulator1/n11238 , 
         \AMDemodulator1/ISquare_12 , \AMDemodulator1/ISquare_13 , 
         \AMDemodulator1/MultResult2_11 , \AMDemodulator1/MultResult1_11 , 
         \AMDemodulator1/MultResult2_10 , \AMDemodulator1/MultResult1_10 , 
         \AMDemodulator1/ISquare_31_N_1895_11 , 
         \AMDemodulator1/ISquare_31_N_1895_10 , \AMDemodulator1/n11237 , 
         \AMDemodulator1/ISquare_10 , \AMDemodulator1/ISquare_11 , 
         \AMDemodulator1/MultResult2_9 , \AMDemodulator1/MultResult1_9 , 
         \AMDemodulator1/MultResult2_8 , \AMDemodulator1/MultResult1_8 , 
         \AMDemodulator1/ISquare_31_N_1895_9 , 
         \AMDemodulator1/ISquare_31_N_1895_8 , \AMDemodulator1/n11236 , 
         \AMDemodulator1/ISquare_8 , \AMDemodulator1/ISquare_9 , 
         \AMDemodulator1/MultResult2_7 , \AMDemodulator1/MultResult1_7 , 
         \AMDemodulator1/MultResult2_6 , \AMDemodulator1/MultResult1_6 , 
         \AMDemodulator1/ISquare_31_N_1895_7 , 
         \AMDemodulator1/ISquare_31_N_1895_6 , \AMDemodulator1/n11235 , 
         \AMDemodulator1/ISquare_6 , \AMDemodulator1/ISquare_7 , 
         \AMDemodulator1/MultResult2_5 , \AMDemodulator1/MultResult1_5 , 
         \AMDemodulator1/MultResult2_4 , \AMDemodulator1/MultResult1_4 , 
         \AMDemodulator1/ISquare_31_N_1895_5 , 
         \AMDemodulator1/ISquare_31_N_1895_4 , \AMDemodulator1/n11234 , 
         \AMDemodulator1/ISquare_4 , \AMDemodulator1/ISquare_5 , 
         \AMDemodulator1/MultResult2_3 , \AMDemodulator1/MultResult1_3 , 
         \AMDemodulator1/MultResult2_2 , \AMDemodulator1/MultResult1_2 , 
         \AMDemodulator1/ISquare_31_N_1895_3 , 
         \AMDemodulator1/ISquare_31_N_1895_2 , \AMDemodulator1/n11233 , 
         \AMDemodulator1/ISquare_2 , \AMDemodulator1/ISquare_3 , 
         \AMDemodulator1/MultResult2_1 , \AMDemodulator1/MultResult1_1 , 
         \AMDemodulator1/MultResult2_0 , \AMDemodulator1/MultResult1_0 , 
         \AMDemodulator1/ISquare_31_N_1895_1 , \AMDemodulator1/ISquare_1 , 
         \AMDemodulator1/d_out_d_11__N_1871 , \AMDemodulator1/n10995 , 
         \AMDemodulator1/n322 , \AMDemodulator1/n323 , \AMDemodulator1/n10994 , 
         \AMDemodulator1/n324 , \AMDemodulator1/n325 , \AMDemodulator1/n10993 , 
         \AMDemodulator1/n326 , \AMDemodulator1/n12447 , 
         \AMDemodulator1/n10992 , \AMDemodulator1/n10991 , 
         \AMDemodulator1/n209 , \AMDemodulator1/n12450 , 
         \AMDemodulator1/n12449 , \AMDemodulator1/d_out_d_11__N_1877 , 
         \AMDemodulator1/d_out_d_11_N_1878_17 , \AMDemodulator1/n12445 , 
         \AMDemodulator1/n554 , \AMDemodulator1/d_out_d_11_N_1880_17 , 
         \AMDemodulator1/n496 , \AMDemodulator1/n497 , \AMDemodulator1/n12444 , 
         \AMDemodulator1/n556 , \AMDemodulator1/n555 , \AMDemodulator1/n498 , 
         \AMDemodulator1/n499 , \AMDemodulator1/n12443 , \AMDemodulator1/n558 , 
         \AMDemodulator1/n557 , \AMDemodulator1/n500 , \AMDemodulator1/n501 , 
         \AMDemodulator1/n12442 , \AMDemodulator1/n560 , \AMDemodulator1/n559 , 
         \AMDemodulator1/n914 , \AMDemodulator1/n915 , \AMDemodulator1/n11784 , 
         \AMDemodulator1/n502 , \AMDemodulator1/n503 , \AMDemodulator1/n12441 , 
         \AMDemodulator1/n562 , \AMDemodulator1/n561 , \AMDemodulator1/n504 , 
         \AMDemodulator1/n505 , \AMDemodulator1/n12440 , \AMDemodulator1/n564 , 
         \AMDemodulator1/n563 , \AMDemodulator1/n506 , \AMDemodulator1/n507 , 
         \AMDemodulator1/n12439 , \AMDemodulator1/n566 , \AMDemodulator1/n565 , 
         \AMDemodulator1/n12438 , \AMDemodulator1/n567 , 
         \AMDemodulator1/n12432 , \AMDemodulator1/d_out_d_11_N_2353_17 , 
         \AMDemodulator1/n12431 , \AMDemodulator1/n916 , \AMDemodulator1/n917 , 
         \AMDemodulator1/n12430 , \AMDemodulator1/n918 , \AMDemodulator1/n919 , 
         \AMDemodulator1/n12429 , \AMDemodulator1/n920 , \AMDemodulator1/n921 , 
         \AMDemodulator1/n12428 , \AMDemodulator1/d_out_d_11_N_1882_17 , 
         \AMDemodulator1/n922 , \AMDemodulator1/d_out_d_11_N_1884_17 , 
         \AMDemodulator1/n923 , \AMDemodulator1/n12427 , 
         \AMDemodulator1/d_out_d_11_N_1886_17 , \AMDemodulator1/n924 , 
         \AMDemodulator1/d_out_d_11_N_1888_17 , \AMDemodulator1/n925 , 
         \AMDemodulator1/n12426 , \AMDemodulator1/d_out_d_11_N_1890_17 , 
         \AMDemodulator1/n926 , \AMDemodulator1/d_out_d_11_N_1892_17 , 
         \AMDemodulator1/n927 , \AMDemodulator1/n12425 , 
         \AMDemodulator1/n11783 , \AMDemodulator1/ISquare_0 , 
         \AMDemodulator1/n11782 , \AMDemodulator1/n11781 , 
         \AMDemodulator1/n11780 , \AMDemodulator1/n11779 , 
         \AMDemodulator1/n11778 , \AMDemodulator1/n732 , \AMDemodulator1/n733 , 
         \AMDemodulator1/n11758 , \AMDemodulator1/n792 , \AMDemodulator1/n734 , 
         \AMDemodulator1/n735 , \AMDemodulator1/n11757 , \AMDemodulator1/n794 , 
         \AMDemodulator1/n793 , \AMDemodulator1/n736 , \AMDemodulator1/n737 , 
         \AMDemodulator1/n11756 , \AMDemodulator1/n796 , \AMDemodulator1/n795 , 
         \AMDemodulator1/n738 , \AMDemodulator1/n739 , \AMDemodulator1/n11755 , 
         \AMDemodulator1/n798 , \AMDemodulator1/n797 , \AMDemodulator1/n740 , 
         \AMDemodulator1/n741 , \AMDemodulator1/n11754 , \AMDemodulator1/n800 , 
         \AMDemodulator1/n799 , \AMDemodulator1/n742 , \AMDemodulator1/n743 , 
         \AMDemodulator1/n11753 , \AMDemodulator1/n802 , \AMDemodulator1/n801 , 
         \AMDemodulator1/n744 , \AMDemodulator1/n745 , \AMDemodulator1/n11752 , 
         \AMDemodulator1/n804 , \AMDemodulator1/n803 , \AMDemodulator1/n746 , 
         \AMDemodulator1/n747 , \AMDemodulator1/n11751 , \AMDemodulator1/n806 , 
         \AMDemodulator1/n805 , \AMDemodulator1/n11750 , \AMDemodulator1/n807 , 
         \AMDemodulator1/d_out_d_11__N_1879 , \AMDemodulator1/n11654 , 
         \AMDemodulator1/n612 , \AMDemodulator1/n11653 , \AMDemodulator1/n614 , 
         \AMDemodulator1/n613 , \AMDemodulator1/n11652 , \AMDemodulator1/n616 , 
         \AMDemodulator1/n615 , \AMDemodulator1/n11651 , \AMDemodulator1/n618 , 
         \AMDemodulator1/n617 , \AMDemodulator1/n11650 , \AMDemodulator1/n620 , 
         \AMDemodulator1/n619 , \AMDemodulator1/n11649 , \AMDemodulator1/n622 , 
         \AMDemodulator1/n621 , \AMDemodulator1/n11648 , \AMDemodulator1/n624 , 
         \AMDemodulator1/n623 , \AMDemodulator1/n11647 , \AMDemodulator1/n626 , 
         \AMDemodulator1/n625 , \AMDemodulator1/n11646 , \AMDemodulator1/n627 , 
         \AMDemodulator1/n672 , \AMDemodulator1/n673 , \AMDemodulator1/n12397 , 
         \AMDemodulator1/n674 , \AMDemodulator1/n675 , \AMDemodulator1/n12396 , 
         \AMDemodulator1/n676 , \AMDemodulator1/n677 , \AMDemodulator1/n12395 , 
         \AMDemodulator1/n678 , \AMDemodulator1/n679 , \AMDemodulator1/n12394 , 
         \AMDemodulator1/n680 , \AMDemodulator1/n681 , \AMDemodulator1/n12393 , 
         \AMDemodulator1/n682 , \AMDemodulator1/n683 , \AMDemodulator1/n12392 , 
         \AMDemodulator1/n684 , \AMDemodulator1/n685 , \AMDemodulator1/n12391 , 
         \AMDemodulator1/n686 , \AMDemodulator1/n687 , \AMDemodulator1/n12390 , 
         \AMDemodulator1/n12389 , \AMDemodulator1/n12383 , 
         \AMDemodulator1/n12382 , \AMDemodulator1/n12381 , 
         \AMDemodulator1/n12380 , \AMDemodulator1/n12379 , 
         \AMDemodulator1/n12378 , \AMDemodulator1/n12377 , 
         \AMDemodulator1/n12376 , \AMDemodulator1/n12375 , 
         \AMDemodulator1/n852 , \AMDemodulator1/n853 , \AMDemodulator1/n12369 , 
         \AMDemodulator1/n854 , \AMDemodulator1/n855 , \AMDemodulator1/n12368 , 
         \AMDemodulator1/n856 , \AMDemodulator1/n857 , \AMDemodulator1/n12367 , 
         \AMDemodulator1/n858 , \AMDemodulator1/n859 , \AMDemodulator1/n12366 , 
         \AMDemodulator1/n860 , \AMDemodulator1/n861 , \AMDemodulator1/n12365 , 
         \AMDemodulator1/n862 , \AMDemodulator1/n863 , \AMDemodulator1/n12364 , 
         \AMDemodulator1/n864 , \AMDemodulator1/n865 , \AMDemodulator1/n12363 , 
         \AMDemodulator1/n866 , \AMDemodulator1/n867 , \AMDemodulator1/n12362 , 
         \AMDemodulator1/n12361 , \AMDemodulator1/n12355 , 
         \AMDemodulator1/n12354 , \AMDemodulator1/n12353 , 
         \AMDemodulator1/n12352 , \AMDemodulator1/n12351 , 
         \AMDemodulator1/n12350 , \AMDemodulator1/n12349 , 
         \AMDemodulator1/n12348 , \AMDemodulator1/n12347 , 
         \AMDemodulator1/d_out_d_11__N_1875 , \AMDemodulator1/n12341 , 
         \AMDemodulator1/n12340 , \AMDemodulator1/n12339 , 
         \AMDemodulator1/n12338 , \AMDemodulator1/n12337 , 
         \AMDemodulator1/n12336 , \AMDemodulator1/n12335 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_0 , 
         \AMDemodulator1/Multiplier2/mfco , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_13 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_2 , 
         \AMDemodulator1/Multiplier2/mfco_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_15 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_4 , 
         \AMDemodulator1/Multiplier2/mfco_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_17 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_6 , 
         \AMDemodulator1/Multiplier2/mfco_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_19 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_8 , 
         \AMDemodulator1/Multiplier2/mfco_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_21 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_10 , 
         \AMDemodulator1/Multiplier2/mfco_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_23 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_2 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier2/rego_o_2 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_3 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier2/rego_o_3 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_5 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_7 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_1_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_6 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_7 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_13 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_15 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_15 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_18 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_3_17 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_12 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_13 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_3 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_16 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_15 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_15 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_18 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_18 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_17 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_17 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_20 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_20 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_19 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_19 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_6 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_22 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_5_21 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_2_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier2/rego_o_4 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_1 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier2/rego_o_6 , 
         \AMDemodulator1/Multiplier2/rego_o_5 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_2 , 
         \AMDemodulator1/Multiplier2/rego_o_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_3 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_4 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_11 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_12 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_5 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_13 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_14 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_6 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_15 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_16 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_7 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_17 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_18 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_19 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_20 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_21 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_22 , 
         \AMDemodulator1/Multiplier2/co_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier2/s_Multiplier_0_3_23 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_8 , 
         \AMDemodulator1/Multiplier2/rego_o_8 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_1 , 
         \AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier2/rego_o_10 , 
         \AMDemodulator1/Multiplier2/rego_o_9 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_2 , 
         \AMDemodulator1/Multiplier2/rego_o_12 , 
         \AMDemodulator1/Multiplier2/rego_o_11 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_3 , 
         \AMDemodulator1/Multiplier2/rego_o_14 , 
         \AMDemodulator1/Multiplier2/rego_o_13 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_4 , 
         \AMDemodulator1/Multiplier2/rego_o_16 , 
         \AMDemodulator1/Multiplier2/rego_o_15 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_5 , 
         \AMDemodulator1/Multiplier2/rego_o_18 , 
         \AMDemodulator1/Multiplier2/rego_o_17 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_6 , 
         \AMDemodulator1/Multiplier2/rego_o_20 , 
         \AMDemodulator1/Multiplier2/rego_o_19 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_7 , 
         \AMDemodulator1/Multiplier2/rego_o_22 , 
         \AMDemodulator1/Multiplier2/rego_o_21 , 
         \AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_8 , 
         \AMDemodulator1/Multiplier2/rego_o_23 , 
         \AMDemodulator1/Multiplier2/regb_b_0 , 
         \AMDemodulator1/Multiplier2/rega_a_2 , 
         \AMDemodulator1/Multiplier2/regb_b_1 , 
         \AMDemodulator1/Multiplier2/rega_a_1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_0_1 , 
         \AMDemodulator1/Multiplier2/rego_o_1 , 
         \AMDemodulator1/Multiplier2/mco , 
         \AMDemodulator1/Multiplier2/rega_a_4 , 
         \AMDemodulator1/Multiplier2/rega_a_3 , 
         \AMDemodulator1/Multiplier2/mco_1 , 
         \AMDemodulator1/Multiplier2/rega_a_6 , 
         \AMDemodulator1/Multiplier2/rega_a_5 , 
         \AMDemodulator1/Multiplier2/mco_2 , 
         \AMDemodulator1/Multiplier2/rega_a_8 , 
         \AMDemodulator1/Multiplier2/rega_a_7 , 
         \AMDemodulator1/Multiplier2/mco_3 , 
         \AMDemodulator1/Multiplier2/rega_a_10 , 
         \AMDemodulator1/Multiplier2/rega_a_9 , 
         \AMDemodulator1/Multiplier2/mco_4 , VCC_net, 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_2 , 
         \AMDemodulator1/Multiplier2/regb_b_3 , 
         \AMDemodulator1/Multiplier2/mco_5 , 
         \AMDemodulator1/Multiplier2/mco_6 , 
         \AMDemodulator1/Multiplier2/mco_7 , 
         \AMDemodulator1/Multiplier2/mco_8 , 
         \AMDemodulator1/Multiplier2/mco_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_4 , 
         \AMDemodulator1/Multiplier2/regb_b_5 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier2/mco_10 , 
         \AMDemodulator1/Multiplier2/mco_11 , 
         \AMDemodulator1/Multiplier2/mco_12 , 
         \AMDemodulator1/Multiplier2/mco_13 , 
         \AMDemodulator1/Multiplier2/mco_14 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_6 , 
         \AMDemodulator1/Multiplier2/regb_b_7 , 
         \AMDemodulator1/Multiplier2/mco_15 , 
         \AMDemodulator1/Multiplier2/mco_16 , 
         \AMDemodulator1/Multiplier2/mco_17 , 
         \AMDemodulator1/Multiplier2/mco_18 , 
         \AMDemodulator1/Multiplier2/mco_19 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_8 , 
         \AMDemodulator1/Multiplier2/regb_b_9 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier2/mco_20 , 
         \AMDemodulator1/Multiplier2/mco_21 , 
         \AMDemodulator1/Multiplier2/mco_22 , 
         \AMDemodulator1/Multiplier2/mco_23 , 
         \AMDemodulator1/Multiplier2/mco_24 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n2 , 
         \AMDemodulator1/Multiplier2/regb_b_10 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n0 , 
         \AMDemodulator1/Multiplier2/mco_25 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n0 , 
         \AMDemodulator1/Multiplier2/mco_26 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n0 , 
         \AMDemodulator1/Multiplier2/mco_27 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n0 , 
         \AMDemodulator1/Multiplier2/mco_28 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n1 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n0 , 
         \AMDemodulator1/Multiplier2/mco_29 , 
         \AMDemodulator1/Multiplier2/regb_b_11 , 
         \AMDemodulator1/Multiplier2/rega_a_11 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n2 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n0 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_0 , 
         \AMDemodulator1/Multiplier1/mfco , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_13 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_2 , 
         \AMDemodulator1/Multiplier1/mfco_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_15 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_4 , 
         \AMDemodulator1/Multiplier1/mfco_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_17 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_6 , 
         \AMDemodulator1/Multiplier1/mfco_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_19 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_8 , 
         \AMDemodulator1/Multiplier1/mfco_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_21 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_10 , 
         \AMDemodulator1/Multiplier1/mfco_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_23 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_2 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier1/rego_o_2 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_3 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier1/rego_o_3 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_5 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_7 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_1_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_0_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_17 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_6 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_8 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_7 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_9 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_13 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_15 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_15 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_18 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_3_17 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_18 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_20 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_1_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_21 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_12 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_11 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_13 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_13 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_3 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_16 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_15 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_15 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_15 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_18 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_18 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_17 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_17 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_17 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_18 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_20 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_20 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_19 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_19 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_19 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_20 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_6 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_22 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_5_21 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_21 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_22 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_2_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_23 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier1/rego_o_4 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_1 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier1/rego_o_6 , 
         \AMDemodulator1/Multiplier1/rego_o_5 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_2 , 
         \AMDemodulator1/Multiplier1/rego_o_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_3 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_4 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_11 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_12 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_5 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_13 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_14 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_6 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_15 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_16 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_7 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_17 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_18 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_8 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_19 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_20 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_9 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_21 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_22 , 
         \AMDemodulator1/Multiplier1/co_Multiplier_0_3_10 , 
         \AMDemodulator1/Multiplier1/s_Multiplier_0_3_23 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_8 , 
         \AMDemodulator1/Multiplier1/rego_o_8 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_1 , 
         \AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier1/rego_o_10 , 
         \AMDemodulator1/Multiplier1/rego_o_9 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_2 , 
         \AMDemodulator1/Multiplier1/rego_o_12 , 
         \AMDemodulator1/Multiplier1/rego_o_11 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_3 , 
         \AMDemodulator1/Multiplier1/rego_o_14 , 
         \AMDemodulator1/Multiplier1/rego_o_13 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_4 , 
         \AMDemodulator1/Multiplier1/rego_o_16 , 
         \AMDemodulator1/Multiplier1/rego_o_15 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_5 , 
         \AMDemodulator1/Multiplier1/rego_o_18 , 
         \AMDemodulator1/Multiplier1/rego_o_17 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_6 , 
         \AMDemodulator1/Multiplier1/rego_o_20 , 
         \AMDemodulator1/Multiplier1/rego_o_19 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_7 , 
         \AMDemodulator1/Multiplier1/rego_o_22 , 
         \AMDemodulator1/Multiplier1/rego_o_21 , 
         \AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_8 , 
         \AMDemodulator1/Multiplier1/rego_o_23 , 
         \AMDemodulator1/Multiplier1/regb_b_0 , 
         \AMDemodulator1/Multiplier1/rega_a_2 , 
         \AMDemodulator1/Multiplier1/regb_b_1 , 
         \AMDemodulator1/Multiplier1/rega_a_1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_0_1 , 
         \AMDemodulator1/Multiplier1/rego_o_1 , 
         \AMDemodulator1/Multiplier1/mco , 
         \AMDemodulator1/Multiplier1/rega_a_4 , 
         \AMDemodulator1/Multiplier1/rega_a_3 , 
         \AMDemodulator1/Multiplier1/mco_1 , 
         \AMDemodulator1/Multiplier1/rega_a_6 , 
         \AMDemodulator1/Multiplier1/rega_a_5 , 
         \AMDemodulator1/Multiplier1/mco_2 , 
         \AMDemodulator1/Multiplier1/rega_a_8 , 
         \AMDemodulator1/Multiplier1/rega_a_7 , 
         \AMDemodulator1/Multiplier1/mco_3 , 
         \AMDemodulator1/Multiplier1/rega_a_10 , 
         \AMDemodulator1/Multiplier1/rega_a_9 , 
         \AMDemodulator1/Multiplier1/mco_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_2 , 
         \AMDemodulator1/Multiplier1/regb_b_3 , 
         \AMDemodulator1/Multiplier1/mco_5 , 
         \AMDemodulator1/Multiplier1/mco_6 , 
         \AMDemodulator1/Multiplier1/mco_7 , 
         \AMDemodulator1/Multiplier1/mco_8 , 
         \AMDemodulator1/Multiplier1/mco_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_4 , 
         \AMDemodulator1/Multiplier1/regb_b_5 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_5 , 
         \AMDemodulator1/Multiplier1/mco_10 , 
         \AMDemodulator1/Multiplier1/mco_11 , 
         \AMDemodulator1/Multiplier1/mco_12 , 
         \AMDemodulator1/Multiplier1/mco_13 , 
         \AMDemodulator1/Multiplier1/mco_14 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_6 , 
         \AMDemodulator1/Multiplier1/regb_b_7 , 
         \AMDemodulator1/Multiplier1/mco_15 , 
         \AMDemodulator1/Multiplier1/mco_16 , 
         \AMDemodulator1/Multiplier1/mco_17 , 
         \AMDemodulator1/Multiplier1/mco_18 , 
         \AMDemodulator1/Multiplier1/mco_19 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_8 , 
         \AMDemodulator1/Multiplier1/regb_b_9 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_9 , 
         \AMDemodulator1/Multiplier1/mco_20 , 
         \AMDemodulator1/Multiplier1/mco_21 , 
         \AMDemodulator1/Multiplier1/mco_22 , 
         \AMDemodulator1/Multiplier1/mco_23 , 
         \AMDemodulator1/Multiplier1/mco_24 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n2 , 
         \AMDemodulator1/Multiplier1/regb_b_10 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n0 , 
         \AMDemodulator1/Multiplier1/mco_25 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n0 , 
         \AMDemodulator1/Multiplier1/mco_26 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n0 , 
         \AMDemodulator1/Multiplier1/mco_27 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n0 , 
         \AMDemodulator1/Multiplier1/mco_28 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n1 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n0 , 
         \AMDemodulator1/Multiplier1/mco_29 , 
         \AMDemodulator1/Multiplier1/regb_b_11 , 
         \AMDemodulator1/Multiplier1/rega_a_11 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n2 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n0 , 
         \AMDemodulator1/ISquare_31_N_1895_0 , CIC1_outSin_1, CIC1_outSin_0, 
         \AMDemodulator1/MultDataB_0 , \AMDemodulator1/MultDataB_1 , 
         CIC1_outSin_3, CIC1_outSin_2, \AMDemodulator1/MultDataB_2 , 
         \AMDemodulator1/MultDataB_3 , CIC1_outSin_5, CIC1_outSin_4, 
         \AMDemodulator1/MultDataB_4 , \AMDemodulator1/MultDataB_5 , MYLED_c_1, 
         MYLED_c_0, \AMDemodulator1/MultDataB_6 , \AMDemodulator1/MultDataB_7 , 
         MYLED_c_3, MYLED_c_2, \AMDemodulator1/MultDataB_8 , 
         \AMDemodulator1/MultDataB_9 , MYLED_c_5, MYLED_c_4, 
         \AMDemodulator1/MultDataB_10 , \AMDemodulator1/MultDataB_11 , 
         CIC1_outCos_1, CIC1_outCos_0, \AMDemodulator1/MultDataC_0 , 
         \AMDemodulator1/MultDataC_1 , CIC1_outCos_3, CIC1_outCos_2, 
         \AMDemodulator1/MultDataC_2 , \AMDemodulator1/MultDataC_3 , 
         CIC1_outCos_5, CIC1_outCos_4, \AMDemodulator1/MultDataC_4 , 
         \AMDemodulator1/MultDataC_5 , CIC1_outCos_7, CIC1_outCos_6, 
         \AMDemodulator1/MultDataC_6 , \AMDemodulator1/MultDataC_7 , 
         CIC1_outCos_9, CIC1_outCos_8, \AMDemodulator1/MultDataC_8 , 
         \AMDemodulator1/MultDataC_9 , CIC1_outCos_11, CIC1_outCos_10, 
         \AMDemodulator1/MultDataC_10 , \AMDemodulator1/MultDataC_11 , 
         \AMDemodulator1/Multiplier1/rego_o_0 , 
         \AMDemodulator1/Multiplier2/rego_o_0 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier1/Multiplier_0_pp_4_8 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_2_4 , 
         \AMDemodulator1/Multiplier2/Multiplier_0_pp_4_8 , 
         \AMDemodulator1/d_out_d_11__N_1891 , 
         \AMDemodulator1/d_out_d_11_N_1894_17 , \AMDemodulator1/d_out_d_0 , 
         \AMDemodulator1/d_out_d_1 , \AMDemodulator1/d_out_d_11__N_1887 , 
         \AMDemodulator1/d_out_d_11__N_1889 , \AMDemodulator1/d_out_d_2 , 
         \AMDemodulator1/d_out_d_3 , \AMDemodulator1/d_out_d_11__N_1883 , 
         \AMDemodulator1/d_out_d_11__N_1885 , \AMDemodulator1/d_out_d_4 , 
         \AMDemodulator1/d_out_d_5 , \AMDemodulator1/d_out_d_11__N_1881 , 
         \AMDemodulator1/d_out_d_6 , \AMDemodulator1/d_out_d_7 , 
         \AMDemodulator1/d_out_d_8 , \AMDemodulator1/d_out_d_9 , \CIC1Cos/n31 , 
         \CIC1Cos/count_15_N_1442_0 , \CIC1Cos/osc_clk_enable_744 , 
         \CIC1Cos/n15 , \CIC1Cos/n16 , \CIC1Cos/n19 , \CIC1Cos/n21 , 
         \CIC1Cos/count_15_N_1442_11 , \CIC1Cos/count_15__N_1458 , 
         \CIC1Cos/d10_71_N_1747_57 , \CIC1Cos/osc_clk_enable_1384 , 
         \CIC1Cos/d10_57 , \CIC1Cos/d10_71_N_1747_58 , \CIC1Cos/v_comb , 
         \CIC1Cos/d10_58 , \CIC1Cos/d1_71_N_418_0 , \CIC1Cos/d2_71_N_490_0 , 
         \CIC1Cos/d3_71_N_562_0 , \CIC1Cos/d4_71_N_634_0 , 
         \CIC1Cos/d5_71_N_706_0 , \CIC1Cos/osc_clk_enable_1084 , 
         \CIC1Cos/osc_clk_enable_1234 , \CIC1Cos/n13103 , \CIC1Cos/n13123 , 
         \CIC1Cos/n13 , \CIC1Cos/n13121 , \CIC1Sin/n31 , 
         \CIC1Sin/count_15_N_1442_0 , \CIC1Sin/osc_clk_enable_1458 , 
         \CIC1Sin/n21 , \CIC1Sin/count_15_N_1442_11 , 
         \CIC1Sin/d_clk_tmp_N_1831 , \CIC1Sin/n19 , \CIC1Sin/d10_71_N_1747_57 , 
         \CIC1Sin/osc_clk_enable_697 , \CIC1Sin/d10_57 , 
         \CIC1Sin/d10_71_N_1747_61 , \CIC1Sin/d10_71_N_1747_58 , 
         \CIC1Sin/v_comb , \CIC1Sin/d10_58 , \CIC1Sin/d10_61 , 
         \CIC1Sin/d10_71_N_1747_63 , \CIC1Sin/d10_71_N_1747_62 , 
         \CIC1Sin/d10_62 , \CIC1Sin/d10_63 , \CIC1Sin/d10_71_N_1747_67 , 
         \CIC1Sin/d10_71_N_1747_64 , \CIC1Sin/d10_64 , \CIC1Sin/d10_67 , 
         \CIC1Sin/d10_71_N_1747_69 , \CIC1Sin/d10_71_N_1747_68 , 
         \CIC1Sin/d10_68 , \CIC1Sin/d10_69 , \CIC1Sin/d10_71_N_1747_71 , 
         \CIC1Sin/d10_71_N_1747_70 , \CIC1Sin/d10_70 , \CIC1Sin/d10_71 , 
         \CIC1Sin/d10_71_N_1747_59 , \CIC1Sin/d10_59_adj_2522 , 
         \CIC1Sin/d10_71_N_1747_60 , \CIC1Sin/d10_60_adj_2520 , 
         \CIC1Sin/d10_71_N_1747_65 , \CIC1Sin/d10_65_adj_2513 , 
         \CIC1Sin/d10_71_N_1747_66 , \CIC1Sin/d10_66_adj_2519 , 
         \CIC1Sin/d1_71_N_418_0 , \CIC1Sin/d2_71_N_490_0 , 
         \CIC1Sin/d3_71_N_562_0 , \CIC1Sin/d4_71_N_634_0 , 
         \CIC1Sin/d5_71_N_706_0 , \CIC1Sin/d_clk_tmp , \CIC1Sin/n8356 , 
         \CIC1Sin/n15 , \CIC1Sin/osc_clk_enable_397 , 
         \CIC1Sin/osc_clk_enable_547 , \CIC1Sin/n13113 , \CIC1Sin/n13127 , 
         \CIC1Sin/n13 , \CIC1Sin/n13125 , d10_59, CICGain_1, n61, 
         \CIC1Cos/d_out_11_N_1819_0 , CICGain_0, d10_60, n62, 
         \CIC1Cos/d_out_11_N_1819_1 , \CIC1Sin/n132_adj_2491 , n64, 
         \CIC1Sin/n131_adj_2488 , n63, d_out_11_N_1819_3, d_out_11_N_1819_2, 
         \CIC1Sin/n134_adj_2497 , n66, \CIC1Sin/n133_adj_2494 , n65, 
         d_out_11_N_1819_5, d_out_11_N_1819_4, \CIC1Sin/n136_adj_2502 , n68, 
         \CIC1Sin/n135_adj_2499 , n67, d_out_11_N_1819_7, d_out_11_N_1819_6, 
         \CIC1Sin/n138_adj_2509 , n70, d10_68, \CIC1Sin/n137_adj_2504 , 
         d_out_11_N_1819_9, d_out_11_N_1819_8, d10_67, d10_70, d10_69, 
         d_out_11_N_1819_10, \CIC1Sin/n140_adj_2508 , d10_71, 
         d_out_11_N_1819_11, \CIC1Sin/n61_adj_2521 , 
         \CIC1Sin/d_out_11_N_1819_0 , \CIC1Sin/n62 , 
         \CIC1Sin/d_out_11_N_1819_1 , \CIC1Sin/n132 , \CIC1Sin/n64 , 
         \CIC1Sin/n131 , \CIC1Sin/n63 , \CIC1Sin/d_out_11_N_1819_3 , 
         \CIC1Sin/d_out_11_N_1819_2 , \CIC1Sin/n134 , \CIC1Sin/n66 , 
         \CIC1Sin/n133 , \CIC1Sin/n65 , \CIC1Sin/d_out_11_N_1819_5 , 
         \CIC1Sin/d_out_11_N_1819_4 , n7349, o_Rx_Byte_c_0, 
         osc_clk_enable_1394, DataInReg_11_N_1856_0, DataInReg_11_N_1856_1, 
         DataInReg_11_N_1856_2, DataInReg_11_N_1856_3, DataInReg_11_N_1856_4, 
         DataInReg_11_N_1856_5, DataInReg_11_N_1856_6, DataInReg_11_N_1856_7, 
         DataInReg_11_N_1856_8, DemodOut_9, \SinCos1/out_sel , 
         \SinCos1/cosromoutsel , \SinCos1/cosout_pre_2 , 
         \SinCos1/cosout_pre_1 , \SinCos1/cosout_pre_4 , 
         \SinCos1/cosout_pre_3 , \SinCos1/cosout_pre_6 , 
         \SinCos1/cosout_pre_5 , \SinCos1/cosout_pre_8 , 
         \SinCos1/cosout_pre_7 , \SinCos1/cosout_pre_10 , 
         \SinCos1/cosout_pre_9 , \SinCos1/cosout_pre_12 , 
         \SinCos1/cosout_pre_11 , \SinCos1/sinromoutsel , 
         \SinCos1/sinout_pre_2 , \SinCos1/sinout_pre_1 , 
         \SinCos1/sinout_pre_4 , \SinCos1/sinout_pre_3 , 
         \SinCos1/sinout_pre_6 , \SinCos1/sinout_pre_5 , 
         \SinCos1/sinout_pre_8 , \SinCos1/sinout_pre_7 , 
         \SinCos1/sinout_pre_10 , \SinCos1/sinout_pre_9 , 
         \SinCos1/mx_ctrl_r_1 , \SinCos1/rom_dout_s_12 , 
         \SinCos1/sinout_pre_12 , \SinCos1/sinout_pre_11 , \CIC1Sin/n136 , 
         \CIC1Sin/n68 , \CIC1Sin/n135 , \CIC1Sin/n13488 , 
         \CIC1Sin/d_out_11_N_1819_7 , \CIC1Sin/d_out_11_N_1819_6 , 
         \CIC1Sin/n138 , \CIC1Sin/n70 , \CIC1Sin/n137 , 
         \CIC1Sin/d_out_11_N_1819_9 , \CIC1Sin/d_out_11_N_1819_8 , 
         \CIC1Sin/d_out_11_N_1819_10 , \CIC1Sin/n140 , 
         \CIC1Sin/d_out_11_N_1819_11 , RFIn_c, DiffOut_c, \Mixer1/RFInR , 
         \Mixer1/MixerOutCos_11_N_224_1 , \Mixer1/MixerOutCos_11_N_224_0 , 
         \Mixer1/MixerOutCos_11_N_224_3 , \Mixer1/MixerOutCos_11_N_224_2 , 
         \Mixer1/MixerOutCos_11_N_224_5 , \Mixer1/MixerOutCos_11_N_224_4 , 
         \Mixer1/MixerOutCos_11_N_224_7 , \Mixer1/MixerOutCos_11_N_224_6 , 
         \Mixer1/MixerOutCos_11_N_224_9 , \Mixer1/MixerOutCos_11_N_224_8 , 
         \Mixer1/MixerOutCos_11_N_224_11 , \Mixer1/MixerOutCos_11_N_224_10 , 
         \Mixer1/MixerOutSin_11_N_212_1 , \Mixer1/MixerOutSin_11_N_212_0 , 
         \Mixer1/MixerOutSin_11_N_212_3 , \Mixer1/MixerOutSin_11_N_212_2 , 
         \Mixer1/MixerOutSin_11_N_212_5 , \Mixer1/MixerOutSin_11_N_212_4 , 
         \Mixer1/MixerOutSin_11_N_212_7 , \Mixer1/MixerOutSin_11_N_212_6 , 
         \Mixer1/MixerOutSin_11_N_212_9 , \Mixer1/MixerOutSin_11_N_212_8 , 
         \Mixer1/MixerOutSin_11_N_212_11 , \Mixer1/MixerOutSin_11_N_212_10 , 
         \PWM1/osc_clk_enable_1393 , \PWM1/n3929 , \SinCos1/mx_ctrl_r , 
         \SinCos1/cosromoutsel_i , \SinCos1/func_or_inet , 
         \SinCos1/rom_addr0_r_10 , \SinCos1/rom_addr0_r_11 , 
         \SinCos1/out_sel_i , \SinCos1/rom_addr0_r_9 , \SinCos1/rom_addr0_r_8 , 
         \SinCos1/rom_addr0_r_7 , \SinCos1/rom_dout_ffin , 
         \SinCos1/rom_addr0_r_6 , \SinCos1/triglut_1_0_13_1_f5b , 
         \SinCos1/triglut_1_0_13_0_f5a , \SinCos1/rom_dout_1_ffin , 
         \SinCos1/triglut_1_0_14_1_f5b , \SinCos1/triglut_1_0_14_0_f5a , 
         \SinCos1/rom_dout_2_ffin , \SinCos1/triglut_1_0_15_1_f5b , 
         \SinCos1/triglut_1_0_15_0_f5a , \SinCos1/rom_dout_3_ffin , 
         \SinCos1/triglut_1_0_16_1_f5b , \SinCos1/triglut_1_0_16_0_f5a , 
         \SinCos1/rom_dout_4_ffin , \SinCos1/triglut_1_0_17_1_f5b , 
         \SinCos1/triglut_1_0_17_0_f5a , \SinCos1/rom_dout_5_ffin , 
         \SinCos1/triglut_1_0_18_1_f5b , \SinCos1/triglut_1_0_18_0_f5a , 
         \SinCos1/rom_dout_6_ffin , \SinCos1/triglut_1_0_19_1_f5b , 
         \SinCos1/triglut_1_0_19_0_f5a , \SinCos1/rom_dout_7_ffin , 
         \SinCos1/triglut_1_0_20_1_f5b , \SinCos1/triglut_1_0_20_0_f5a , 
         \SinCos1/rom_dout_8_ffin , \SinCos1/triglut_1_0_21_1_f5b , 
         \SinCos1/triglut_1_0_21_0_f5a , \SinCos1/rom_dout_9_ffin , 
         \SinCos1/triglut_1_0_22_1_f5b , \SinCos1/triglut_1_0_22_0_f5a , 
         \SinCos1/rom_dout_10_ffin , \SinCos1/triglut_1_0_23_1_f5b , 
         \SinCos1/triglut_1_0_23_0_f5a , \SinCos1/rom_dout_13_ffin , 
         \SinCos1/triglut_1_0_0_1_f5b , \SinCos1/triglut_1_0_0_0_f5a , 
         \SinCos1/rom_dout_14_ffin , \SinCos1/triglut_1_0_1_1_f5b , 
         \SinCos1/triglut_1_0_1_0_f5a , \SinCos1/rom_dout_15_ffin , 
         \SinCos1/triglut_1_0_2_1_f5b , \SinCos1/triglut_1_0_2_0_f5a , 
         \SinCos1/rom_dout_16_ffin , \SinCos1/triglut_1_0_3_1_f5b , 
         \SinCos1/triglut_1_0_3_0_f5a , \SinCos1/rom_dout_17_ffin , 
         \SinCos1/triglut_1_0_4_1_f5b , \SinCos1/triglut_1_0_4_0_f5a , 
         \SinCos1/rom_dout_18_ffin , \SinCos1/triglut_1_0_5_1_f5b , 
         \SinCos1/triglut_1_0_5_0_f5a , \SinCos1/rom_dout_19_ffin , 
         \SinCos1/triglut_1_0_6_1_f5b , \SinCos1/triglut_1_0_6_0_f5a , 
         \SinCos1/rom_dout_20_ffin , \SinCos1/triglut_1_0_7_1_f5b , 
         \SinCos1/triglut_1_0_7_0_f5a , \SinCos1/rom_dout_21_ffin , 
         \SinCos1/triglut_1_0_8_1_f5b , \SinCos1/triglut_1_0_8_0_f5a , 
         \SinCos1/rom_dout_22_ffin , \SinCos1/triglut_1_0_9_1_f5b , 
         \SinCos1/triglut_1_0_9_0_f5a , \SinCos1/rom_dout_23_ffin , 
         \SinCos1/triglut_1_0_10_1_f5b , \SinCos1/triglut_1_0_10_0_f5a , 
         \SinCos1/rom_dout_24_ffin , \SinCos1/triglut_1_0_11_1_f5b , 
         \SinCos1/triglut_1_0_11_0_f5a , \CIC1Cos/d10_71_N_1747_60 , 
         \CIC1Cos/d10_71_N_1747_59 , \CIC1Cos/d10_71_N_1747_62 , 
         \CIC1Cos/d10_71_N_1747_61 , d10_61, d10_62, 
         \CIC1Cos/d10_71_N_1747_64 , \CIC1Cos/d10_71_N_1747_63 , d10_63, 
         d10_64, \CIC1Cos/d10_71_N_1747_66 , \CIC1Cos/d10_71_N_1747_65 , 
         d10_65, d10_66, \CIC1Cos/d10_71_N_1747_68 , 
         \CIC1Cos/d10_71_N_1747_67 , \CIC1Cos/d10_71_N_1747_70 , 
         \CIC1Cos/d10_71_N_1747_69 , \CIC1Cos/d10_71_N_1747_71 , 
         \ncoGen/phase_accum_63_N_146_0 , \uart_rx1/r_Rx_Byte_2 , 
         \uart_rx1/r_Rx_Byte_0 , \uart_rx1/r_Rx_DV_N_2484 , o_Rx_Byte_c_2, 
         \uart_rx1/r_Rx_Byte_4 , \uart_rx1/r_Rx_Byte_3 , o_Rx_Byte_c_3, 
         \uart_rx1/r_Rx_Byte_6 , \uart_rx1/r_Rx_Byte_5 , o_Rx_Byte_c_5, 
         o_Rx_Byte_c_6, \uart_rx1/r_Rx_DV_last , 
         \uart_rx1/r_Rx_DV_last_N_2483 , \uart_rx1/r_Rx_DV , o_Rx_DV_c, 
         \uart_rx1/r_Bit_Index_1 , \uart_rx1/n13379 , \uart_rx1/r_Bit_Index_0 , 
         \uart_rx1/r_SM_Main_1 , \uart_rx1/r_SM_Main_2_N_2418_2 , 
         \uart_rx1/r_SM_Main_0 , \uart_rx1/n12822 , \uart_rx1/n12821 , 
         \uart_rx1/UartClk_2_enable_25 , \uart_rx1/r_Bit_Index_2 , 
         \uart_rx1/n13338 , \uart_rx1/n13014 , \uart_rx1/r_Rx_Data , 
         \uart_rx1/UartClk_2_enable_18 , \uart_rx1/UartClk_2_enable_5 , 
         \uart_rx1/r_Rx_Byte_1 , \uart_rx1/UartClk_2_enable_4 , 
         \uart_rx1/UartClk_2_enable_3 , \uart_rx1/UartClk_2_enable_1 , 
         \uart_rx1/UartClk_2_enable_28 , \uart_rx1/UartClk_2_enable_27 , 
         \uart_rx1/UartClk_2_enable_26 , \uart_rx1/r_Rx_Byte_7 , 
         \uart_rx1/r_SM_Main_2 , \uart_rx1/UartClk_2_enable_11 , 
         \uart_rx1/r_Rx_Data_R , i_Rx_Serial_c, \uart_rx1/n13386 , 
         \uart_rx1/n13387 , \uart_rx1/n12511 , \uart_rx1/n3 , 
         \uart_rx1/n13414 , \uart_rx1/n13377 , \uart_rx1/n12796 , 
         \uart_rx1/n9085 , \uart_rx1/n12819 , n13381, n12803, n8225, n7970, 
         \uart_rx1/n13286 , \uart_rx1/n13287 , n13380, n13383, n13376, 
         \PWM1/n12 , \PWM1/n11 , \PWM1/n15 , \PWM1/n17 , n13375, n7819, n7829, 
         n7825, n2353, n7827, n7777, n7807, n7801, n7817, n2492, n7813, n30, 
         n7781, n7783, n2309, n7791, n2305, n7799, n7809, n2359, n13372, 
         n13384, n8341, n13385, n12931, n12919, n6, n13390, o_Rx_Byte_c_7, 
         n7769, n7751, n7805, n7787, n7789, n7771, n2315, n2364, n7743, n7795, 
         n7773, n7803, n7767, n7779, n7733, n2338, n7793, n7763, n7759, n7765, 
         n7749, \uart_rx1/n13374 , n13523, n12970, n13291, n12879, 
         \uart_rx1/n12841 , \uart_rx1/n13378 , n2486, n28, n2513, n29, n2327, 
         \uart_rx1/n13059 , \uart_rx1/n13055 , \uart_rx1/n13063 , 
         \uart_rx1/n13061 , \uart_rx1/n13073 , \uart_rx1/n24 , n2530, 
         \uart_rx1/n13079 , n7755, n7739, n7741, n7735, n2337, n7785, n8000, 
         n2521, n8006, n2531, n2485, \CIC1Sin/n12793 , \CIC1Sin/n13505 , 
         \CIC1Sin/n7 , \CIC1Sin/n16 , \CIC1Cos/n12790 , \CIC1Cos/n13507 , 
         \CIC1Cos/n7 , PWMOutN4_c, sinGen_c, GND_net, VCCI;

  PWM1_SLICE_0 \PWM1/SLICE_0 ( .A0(\PWM1/counter_9 ), .DI0(\PWM1/n46 ), 
    .CLK(osc_clk), .FCI(\PWM1/n11802 ), .F0(\PWM1/n46 ), .Q0(\PWM1/counter_9 ));
  PWM1_SLICE_1 \PWM1/SLICE_1 ( .A1(\PWM1/counter_8 ), .A0(\PWM1/counter_7 ), 
    .DI1(\PWM1/n47 ), .DI0(\PWM1/n48 ), .CLK(osc_clk), .FCI(\PWM1/n11801 ), 
    .F0(\PWM1/n48 ), .Q0(\PWM1/counter_7 ), .F1(\PWM1/n47 ), 
    .Q1(\PWM1/counter_8 ), .FCO(\PWM1/n11802 ));
  PWM1_SLICE_2 \PWM1/SLICE_2 ( .A1(\PWM1/counter_6 ), .A0(\PWM1/counter_5 ), 
    .DI1(\PWM1/n49 ), .DI0(\PWM1/n50 ), .CLK(osc_clk), .FCI(\PWM1/n11800 ), 
    .F0(\PWM1/n50 ), .Q0(\PWM1/counter_5 ), .F1(\PWM1/n49 ), 
    .Q1(\PWM1/counter_6 ), .FCO(\PWM1/n11801 ));
  PWM1_SLICE_3 \PWM1/SLICE_3 ( .A1(\PWM1/counter_4 ), .A0(\PWM1/counter_3 ), 
    .DI1(\PWM1/n51 ), .DI0(\PWM1/n52 ), .CLK(osc_clk), .FCI(\PWM1/n11799 ), 
    .F0(\PWM1/n52 ), .Q0(\PWM1/counter_3 ), .F1(\PWM1/n51 ), 
    .Q1(\PWM1/counter_4 ), .FCO(\PWM1/n11800 ));
  PWM1_SLICE_4 \PWM1/SLICE_4 ( .A1(\PWM1/counter_2 ), .A0(\PWM1/counter_1 ), 
    .DI1(\PWM1/n53 ), .DI0(\PWM1/n54 ), .CLK(osc_clk), .FCI(\PWM1/n11798 ), 
    .F0(\PWM1/n54 ), .Q0(\PWM1/counter_1 ), .F1(\PWM1/n53 ), 
    .Q1(\PWM1/counter_2 ), .FCO(\PWM1/n11799 ));
  PWM1_SLICE_5 \PWM1/SLICE_5 ( .A1(\PWM1/counter_0 ), .DI1(\PWM1/n55 ), 
    .CLK(osc_clk), .F1(\PWM1/n55 ), .Q1(\PWM1/counter_0 ), .FCO(\PWM1/n11798 ));
  PWM1_SLICE_6 \PWM1/SLICE_6 ( .B0(\PWM1/counter_9 ), .A0(\PWM1/DataInReg_9 ), 
    .DI1(\PWM1/PWMOut_N_1869 ), .CLK(osc_clk), .FCI(\PWM1/n11267 ), 
    .F1(\PWM1/PWMOut_N_1869 ), .Q1(PWMOutP4_c));
  PWM1_SLICE_7 \PWM1/SLICE_7 ( .B1(\PWM1/counter_8 ), .A1(\PWM1/DataInReg_8 ), 
    .B0(\PWM1/counter_7 ), .A0(\PWM1/DataInReg_7 ), .FCI(\PWM1/n11266 ), 
    .FCO(\PWM1/n11267 ));
  PWM1_SLICE_8 \PWM1/SLICE_8 ( .B1(\PWM1/counter_6 ), .A1(\PWM1/DataInReg_6 ), 
    .B0(\PWM1/counter_5 ), .A0(\PWM1/DataInReg_5 ), .FCI(\PWM1/n11265 ), 
    .FCO(\PWM1/n11266 ));
  PWM1_SLICE_9 \PWM1/SLICE_9 ( .B1(\PWM1/counter_4 ), .A1(\PWM1/DataInReg_4 ), 
    .B0(\PWM1/counter_3 ), .A0(\PWM1/DataInReg_3 ), .FCI(\PWM1/n11264 ), 
    .FCO(\PWM1/n11265 ));
  PWM1_SLICE_10 \PWM1/SLICE_10 ( .B1(\PWM1/counter_2 ), 
    .A1(\PWM1/DataInReg_2 ), .B0(\PWM1/counter_1 ), .A0(\PWM1/DataInReg_1 ), 
    .FCI(\PWM1/n11263 ), .FCO(\PWM1/n11264 ));
  PWM1_SLICE_11 \PWM1/SLICE_11 ( .B1(\PWM1/counter_0 ), 
    .A1(\PWM1/DataInReg_0 ), .FCO(\PWM1/n11263 ));
  uart_rx1_SLICE_12 \uart_rx1/SLICE_12 ( .A1(\uart_rx1/UartClk[2] ), 
    .A0(\uart_rx1/n2 ), .DI1(\uart_rx1/n18 ), .DI0(\uart_rx1/n19 ), 
    .CLK(osc_clk), .FCI(\uart_rx1/n11803 ), .F0(\uart_rx1/n19 ), 
    .Q0(\uart_rx1/n2 ), .F1(\uart_rx1/n18 ), .Q1(\uart_rx1/UartClk[2] ));
  uart_rx1_SLICE_13 \uart_rx1/SLICE_13 ( .A1(\uart_rx1/n3_adj_2527 ), 
    .DI1(\uart_rx1/n20 ), .CLK(osc_clk), .F1(\uart_rx1/n20 ), 
    .Q1(\uart_rx1/n3_adj_2527 ), .FCO(\uart_rx1/n11803 ));
  uart_rx1_SLICE_14 \uart_rx1/SLICE_14 ( .A0(\uart_rx1/r_Clock_Count_15 ), 
    .DI0(\uart_rx1/n70 ), .CE(\uart_rx1/UartClk_2_enable_23 ), 
    .LSR(\uart_rx1/n8374 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12406 ), .F0(\uart_rx1/n70 ), 
    .Q0(\uart_rx1/r_Clock_Count_15 ));
  uart_rx1_SLICE_15 \uart_rx1/SLICE_15 ( .A1(\uart_rx1/r_Clock_Count_14 ), 
    .A0(\uart_rx1/r_Clock_Count_13 ), .DI1(\uart_rx1/n71 ), 
    .DI0(\uart_rx1/n72 ), .CE(\uart_rx1/UartClk_2_enable_23 ), 
    .LSR(\uart_rx1/n8374 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12405 ), .F0(\uart_rx1/n72 ), 
    .Q0(\uart_rx1/r_Clock_Count_13 ), .F1(\uart_rx1/n71 ), 
    .Q1(\uart_rx1/r_Clock_Count_14 ), .FCO(\uart_rx1/n12406 ));
  uart_rx1_SLICE_16 \uart_rx1/SLICE_16 ( .A1(\uart_rx1/r_Clock_Count_12 ), 
    .A0(\uart_rx1/r_Clock_Count_11 ), .DI1(\uart_rx1/n73 ), 
    .DI0(\uart_rx1/n74 ), .CE(\uart_rx1/UartClk_2_enable_23 ), 
    .LSR(\uart_rx1/n8374 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12404 ), .F0(\uart_rx1/n74 ), 
    .Q0(\uart_rx1/r_Clock_Count_11 ), .F1(\uart_rx1/n73 ), 
    .Q1(\uart_rx1/r_Clock_Count_12 ), .FCO(\uart_rx1/n12405 ));
  uart_rx1_SLICE_17 \uart_rx1/SLICE_17 ( .A1(\uart_rx1/r_Clock_Count_10 ), 
    .A0(\uart_rx1/r_Clock_Count_9 ), .DI1(\uart_rx1/n75 ), 
    .DI0(\uart_rx1/n76 ), .CE(\uart_rx1/UartClk_2_enable_23 ), 
    .LSR(\uart_rx1/n8374 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12403 ), .F0(\uart_rx1/n76 ), 
    .Q0(\uart_rx1/r_Clock_Count_9 ), .F1(\uart_rx1/n75 ), 
    .Q1(\uart_rx1/r_Clock_Count_10 ), .FCO(\uart_rx1/n12404 ));
  uart_rx1_SLICE_18 \uart_rx1/SLICE_18 ( .A1(\uart_rx1/r_Clock_Count_8 ), 
    .A0(\uart_rx1/r_Clock_Count_7 ), .DI1(\uart_rx1/n77 ), 
    .DI0(\uart_rx1/n78 ), .CE(\uart_rx1/UartClk_2_enable_23 ), 
    .LSR(\uart_rx1/n8374 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12402 ), .F0(\uart_rx1/n78 ), 
    .Q0(\uart_rx1/r_Clock_Count_7 ), .F1(\uart_rx1/n77 ), 
    .Q1(\uart_rx1/r_Clock_Count_8 ), .FCO(\uart_rx1/n12403 ));
  uart_rx1_SLICE_19 \uart_rx1/SLICE_19 ( .A1(\uart_rx1/r_Clock_Count_6 ), 
    .A0(\uart_rx1/r_Clock_Count_5 ), .DI1(\uart_rx1/n79 ), 
    .DI0(\uart_rx1/n80 ), .CE(\uart_rx1/UartClk_2_enable_23 ), 
    .LSR(\uart_rx1/n8374 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12401 ), .F0(\uart_rx1/n80 ), 
    .Q0(\uart_rx1/r_Clock_Count_5 ), .F1(\uart_rx1/n79 ), 
    .Q1(\uart_rx1/r_Clock_Count_6 ), .FCO(\uart_rx1/n12402 ));
  uart_rx1_SLICE_20 \uart_rx1/SLICE_20 ( .A1(\uart_rx1/r_Clock_Count_4 ), 
    .A0(\uart_rx1/r_Clock_Count_3 ), .DI1(\uart_rx1/n81 ), 
    .DI0(\uart_rx1/n82 ), .CE(\uart_rx1/UartClk_2_enable_23 ), 
    .LSR(\uart_rx1/n8374 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12400 ), .F0(\uart_rx1/n82 ), 
    .Q0(\uart_rx1/r_Clock_Count_3 ), .F1(\uart_rx1/n81 ), 
    .Q1(\uart_rx1/r_Clock_Count_4 ), .FCO(\uart_rx1/n12401 ));
  uart_rx1_SLICE_21 \uart_rx1/SLICE_21 ( .A1(\uart_rx1/r_Clock_Count_2 ), 
    .A0(\uart_rx1/r_Clock_Count_1 ), .DI1(\uart_rx1/n83 ), 
    .DI0(\uart_rx1/n84 ), .CE(\uart_rx1/UartClk_2_enable_23 ), 
    .LSR(\uart_rx1/n8374 ), .CLK(\uart_rx1/UartClk[2] ), 
    .FCI(\uart_rx1/n12399 ), .F0(\uart_rx1/n84 ), 
    .Q0(\uart_rx1/r_Clock_Count_1 ), .F1(\uart_rx1/n83 ), 
    .Q1(\uart_rx1/r_Clock_Count_2 ), .FCO(\uart_rx1/n12400 ));
  uart_rx1_SLICE_22 \uart_rx1/SLICE_22 ( .A1(\uart_rx1/r_Clock_Count_0 ), 
    .DI1(\uart_rx1/n85 ), .CE(\uart_rx1/UartClk_2_enable_23 ), 
    .LSR(\uart_rx1/n8374 ), .CLK(\uart_rx1/UartClk[2] ), .F1(\uart_rx1/n85 ), 
    .Q1(\uart_rx1/r_Clock_Count_0 ), .FCO(\uart_rx1/n12399 ));
  SLICE_23 SLICE_23( .A1(phase_inc_carrGen_63), .A0(phase_inc_carrGen_62), 
    .FCI(n11340), .F0(n1073), .F1(n1072));
  SLICE_24 SLICE_24( .A1(phase_inc_carrGen_61), .A0(phase_inc_carrGen_60), 
    .FCI(n11339), .F0(n1075), .F1(n1074), .FCO(n11340));
  SLICE_25 SLICE_25( .A1(phase_inc_carrGen_59), .A0(phase_inc_carrGen_58), 
    .FCI(n11338), .F0(n1077), .F1(n1076), .FCO(n11339));
  SLICE_26 SLICE_26( .A1(phase_inc_carrGen_57), .A0(phase_inc_carrGen_56), 
    .FCI(n11337), .F0(n1079), .F1(n1078), .FCO(n11338));
  SLICE_27 SLICE_27( .A1(phase_inc_carrGen_55), .A0(phase_inc_carrGen_54), 
    .FCI(n11336), .F0(n1081), .F1(n1080), .FCO(n11337));
  SLICE_28 SLICE_28( .A1(phase_inc_carrGen_53), .A0(phase_inc_carrGen_52), 
    .FCI(n11335), .F0(n1083), .F1(n1082), .FCO(n11336));
  SLICE_29 SLICE_29( .A1(phase_inc_carrGen_51), .A0(phase_inc_carrGen_50), 
    .FCI(n11334), .F0(n1085), .F1(n1084), .FCO(n11335));
  SLICE_30 SLICE_30( .A1(phase_inc_carrGen_49), .A0(phase_inc_carrGen_48), 
    .FCI(n11333), .F0(n1087), .F1(n1086), .FCO(n11334));
  SLICE_31 SLICE_31( .A1(phase_inc_carrGen_47), .A0(phase_inc_carrGen_46), 
    .FCI(n11332), .F0(n1089), .F1(n1088), .FCO(n11333));
  SLICE_32 SLICE_32( .A1(phase_inc_carrGen_45), .A0(phase_inc_carrGen_44), 
    .FCI(n11331), .F0(n1091), .F1(n1090), .FCO(n11332));
  SLICE_33 SLICE_33( .A1(phase_inc_carrGen_43), .A0(phase_inc_carrGen_42), 
    .FCI(n11330), .F0(n1093), .F1(n1092), .FCO(n11331));
  SLICE_34 SLICE_34( .A1(phase_inc_carrGen_41), .A0(phase_inc_carrGen_40), 
    .FCI(n11329), .F0(n1095), .F1(n1094), .FCO(n11330));
  SLICE_35 SLICE_35( .A1(phase_inc_carrGen_39), .A0(phase_inc_carrGen_38), 
    .FCI(n11328), .F0(n1097), .F1(n1096), .FCO(n11329));
  SLICE_36 SLICE_36( .A1(phase_inc_carrGen_37), .A0(phase_inc_carrGen_36), 
    .FCI(n11327), .F0(n1099), .F1(n1098), .FCO(n11328));
  SLICE_37 SLICE_37( .A1(phase_inc_carrGen_35), .A0(phase_inc_carrGen_34), 
    .FCI(n11326), .F0(n1101), .F1(n1100), .FCO(n11327));
  SLICE_38 SLICE_38( .A1(phase_inc_carrGen_33), .A0(phase_inc_carrGen_32), 
    .FCI(n11325), .F0(n1103), .F1(n1102), .FCO(n11326));
  SLICE_39 SLICE_39( .A1(phase_inc_carrGen_31), .A0(phase_inc_carrGen_30), 
    .FCI(n11324), .F0(n1105), .F1(n1104), .FCO(n11325));
  SLICE_40 SLICE_40( .A1(phase_inc_carrGen_29), .A0(phase_inc_carrGen_28), 
    .FCI(n11323), .F0(n1107), .F1(n1106), .FCO(n11324));
  SLICE_41 SLICE_41( .A1(phase_inc_carrGen_27), .A0(phase_inc_carrGen_26), 
    .FCI(n11322), .F0(n1109), .F1(n1108), .FCO(n11323));
  SLICE_42 SLICE_42( .A1(phase_inc_carrGen_25), .A0(phase_inc_carrGen_24), 
    .FCI(n11321), .F0(n1111), .F1(n1110), .FCO(n11322));
  SLICE_43 SLICE_43( .A1(phase_inc_carrGen_23), .A0(phase_inc_carrGen_22), 
    .FCI(n11320), .F0(n1113), .F1(n1112), .FCO(n11321));
  SLICE_44 SLICE_44( .A1(phase_inc_carrGen_21), .A0(phase_inc_carrGen_20), 
    .FCI(n11319), .F0(n1115), .F1(n1114), .FCO(n11320));
  SLICE_45 SLICE_45( .A1(phase_inc_carrGen_19), .A0(phase_inc_carrGen_18), 
    .FCI(n11318), .F0(n1117), .F1(n1116), .FCO(n11319));
  SLICE_46 SLICE_46( .A1(phase_inc_carrGen_17), .A0(phase_inc_carrGen_16), 
    .FCI(n11317), .F0(n1119), .F1(n1118), .FCO(n11318));
  SLICE_47 SLICE_47( .A1(phase_inc_carrGen_15), .A0(phase_inc_carrGen_14), 
    .FCI(n11316), .F0(n1121), .F1(n1120), .FCO(n11317));
  SLICE_48 SLICE_48( .A1(phase_inc_carrGen_13), .A0(phase_inc_carrGen_12), 
    .FCI(n11315), .F0(n1123), .F1(n1122), .FCO(n11316));
  SLICE_49 SLICE_49( .A1(phase_inc_carrGen_11), .A0(phase_inc_carrGen_10), 
    .FCI(n11314), .F0(n1125), .F1(n1124), .FCO(n11315));
  SLICE_50 SLICE_50( .A1(phase_inc_carrGen_9), .A0(phase_inc_carrGen_8), 
    .FCI(n11313), .F0(n1127), .F1(n1126), .FCO(n11314));
  SLICE_51 SLICE_51( .A1(phase_inc_carrGen_7), .A0(phase_inc_carrGen_6), 
    .FCI(n11312), .F0(n1129), .F1(n1128), .FCO(n11313));
  SLICE_52 SLICE_52( .A1(phase_inc_carrGen_5), .A0(phase_inc_carrGen_4), 
    .FCI(n11311), .F0(n1131), .F1(n1130), .FCO(n11312));
  SLICE_53 SLICE_53( .A1(phase_inc_carrGen_3), .A0(phase_inc_carrGen_2), 
    .FCI(n11310), .F0(n1133), .F1(n1132), .FCO(n11311));
  SLICE_54 SLICE_54( .A1(phase_inc_carrGen_1), .F1(n1134), .FCO(n11310));
  SLICE_55 SLICE_55( .D1(phase_inc_carrGen_63), .C1(n8016), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_62), .C0(n8014), .B0(n9000), .A0(n3614), 
    .DI1(n2797), .DI0(n2798), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n11302), .F0(n2798), .Q0(phase_inc_carrGen_62), .F1(n2797), 
    .Q1(phase_inc_carrGen_63));
  SLICE_56 SLICE_56( .D1(phase_inc_carrGen_61), .C1(n8012), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_60), .C0(n2282), .B0(n9000), .A0(n3614), 
    .DI1(n2799), .DI0(n2800), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n11301), .F0(n2800), .Q0(phase_inc_carrGen_60), .F1(n2799), 
    .Q1(phase_inc_carrGen_61), .FCO(n11302));
  SLICE_57 SLICE_57( .D1(phase_inc_carrGen_59), .C1(n2283), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_58), .C0(n2284), .B0(n9000), .A0(n3614), 
    .DI1(n2801), .DI0(n2802), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n11300), .F0(n2802), .Q0(phase_inc_carrGen_58), .F1(n2801), 
    .Q1(phase_inc_carrGen_59), .FCO(n11301));
  SLICE_58 SLICE_58( .D1(phase_inc_carrGen_57), .C1(n2285), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_56), .C0(n2286), .B0(n9000), .A0(n3614), 
    .DI1(n2803), .DI0(n2804), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n11299), .F0(n2804), .Q0(phase_inc_carrGen_56), .F1(n2803), 
    .Q1(phase_inc_carrGen_57), .FCO(n11300));
  SLICE_59 SLICE_59( .D1(phase_inc_carrGen_55), .C1(n2287), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_54), .C0(n2288), .B0(n9000), .A0(n3614), 
    .DI1(n2805), .DI0(n2806), .CE(osc_clk_enable_1457), .CLK(osc_clk), 
    .FCI(n11298), .F0(n2806), .Q0(phase_inc_carrGen_54), .F1(n2805), 
    .Q1(phase_inc_carrGen_55), .FCO(n11299));
  SLICE_60 SLICE_60( .D1(phase_inc_carrGen_53), .C1(n2289), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_52), .C0(n8010), .B0(n9000), .A0(n3614), 
    .DI1(n2807), .DI0(n2808), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11297), .F0(n2808), .Q0(phase_inc_carrGen_52), .F1(n2807), 
    .Q1(phase_inc_carrGen_53), .FCO(n11298));
  SLICE_61 SLICE_61( .D1(phase_inc_carrGen_51), .C1(n2291), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_50), .C0(n2292), .B0(n9000), .A0(n3628), 
    .DI1(n2809), .DI0(n2810), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11296), .F0(n2810), .Q0(phase_inc_carrGen_50), .F1(n2809), 
    .Q1(phase_inc_carrGen_51), .FCO(n11297));
  SLICE_62 SLICE_62( .D1(phase_inc_carrGen_49), .C1(n2293), .B1(n9000), 
    .A1(n3628), .D0(phase_inc_carrGen_48), .C0(n2294), .B0(n9000), .A0(n3628), 
    .DI1(n2811), .DI0(n2812), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11295), .F0(n2812), .Q0(phase_inc_carrGen_48), .F1(n2811), 
    .Q1(phase_inc_carrGen_49), .FCO(n11296));
  SLICE_63 SLICE_63( .D1(phase_inc_carrGen_47), .C1(n2295), .B1(n9000), 
    .A1(n3632), .D0(phase_inc_carrGen_46), .C0(n2296), .B0(n9000), .A0(n3632), 
    .DI1(n2813), .DI0(n2814), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11294), .F0(n2814), .Q0(phase_inc_carrGen_46), .F1(n2813), 
    .Q1(phase_inc_carrGen_47), .FCO(n11295));
  SLICE_64 SLICE_64( .D1(phase_inc_carrGen_45), .C1(n2297), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_44), .C0(n2298), .B0(n9000), .A0(n3632), 
    .DI1(n2815), .DI0(n2816), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11293), .F0(n2816), .Q0(phase_inc_carrGen_44), .F1(n2815), 
    .Q1(phase_inc_carrGen_45), .FCO(n11294));
  SLICE_65 SLICE_65( .D1(phase_inc_carrGen_43), .C1(n2299), .B1(n9000), 
    .A1(n3653), .D0(phase_inc_carrGen_42), .C0(n2300), .B0(n9000), .A0(n3653), 
    .DI1(n2817), .DI0(n2818), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11292), .F0(n2818), .Q0(phase_inc_carrGen_42), .F1(n2817), 
    .Q1(phase_inc_carrGen_43), .FCO(n11293));
  SLICE_66 SLICE_66( .D1(phase_inc_carrGen_41), .C1(n8008), .B1(n9000), 
    .A1(n3653), .D0(phase_inc_carrGen_40), .C0(n2302), .B0(n9000), .A0(n3628), 
    .DI1(n2819), .DI0(n2820), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11291), .F0(n2820), .Q0(phase_inc_carrGen_40), .F1(n2819), 
    .Q1(phase_inc_carrGen_41), .FCO(n11292));
  SLICE_67 SLICE_67( .D1(phase_inc_carrGen_39), .C1(n2303), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_38), .C0(n2304), .B0(n9000), .A0(n3614), 
    .DI1(n2821), .DI0(n2822), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11290), .F0(n2822), .Q0(phase_inc_carrGen_38), .F1(n2821), 
    .Q1(phase_inc_carrGen_39), .FCO(n11291));
  SLICE_68 SLICE_68( .D1(o_Rx_Byte_c_4), .C1(n9000), .B1(n2795), .A1(n9527), 
    .D0(phase_inc_carrGen_36), .C0(n2306), .B0(n9000), .A0(n3632), .DI1(n2823), 
    .DI0(n2824), .CE(osc_clk_enable_1447), .CLK(osc_clk), .FCI(n11289), 
    .F0(n2824), .Q0(phase_inc_carrGen_36), .F1(n2823), 
    .Q1(phase_inc_carrGen_37), .FCO(n11290));
  SLICE_69 SLICE_69( .D1(phase_inc_carrGen_35), .C1(n2307), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_34), .C0(n2308), .B0(n9000), .A0(n3632), 
    .DI1(n2825), .DI0(n2826), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11288), .F0(n2826), .Q0(phase_inc_carrGen_34), .F1(n2825), 
    .Q1(phase_inc_carrGen_35), .FCO(n11289));
  SLICE_70 SLICE_70( .D1(o_Rx_Byte_c_4), .C1(n9000), .B1(n2795), .A1(n9535), 
    .D0(phase_inc_carrGen_32), .C0(n2310), .B0(n9000), .A0(n3628), .DI1(n2827), 
    .DI0(n2828), .CE(osc_clk_enable_1447), .CLK(osc_clk), .FCI(n11287), 
    .F0(n2828), .Q0(phase_inc_carrGen_32), .F1(n2827), 
    .Q1(phase_inc_carrGen_33), .FCO(n11288));
  SLICE_71 SLICE_71( .D1(phase_inc_carrGen_31), .C1(n2311), .B1(n9000), 
    .A1(n3663), .D0(phase_inc_carrGen_30), .C0(n2312), .B0(n9000), .A0(n3628), 
    .DI1(n2829), .DI0(n2830), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11286), .F0(n2830), .Q0(phase_inc_carrGen_30), .F1(n2829), 
    .Q1(phase_inc_carrGen_31), .FCO(n11287));
  SLICE_72 SLICE_72( .D1(phase_inc_carrGen_29), .C1(n2313), .B1(n9000), 
    .A1(n3653), .D0(phase_inc_carrGen_28), .C0(n2314), .B0(n9000), .A0(n3653), 
    .DI1(n2831), .DI0(n2832), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11285), .F0(n2832), .Q0(phase_inc_carrGen_28), .F1(n2831), 
    .Q1(phase_inc_carrGen_29), .FCO(n11286));
  SLICE_73 SLICE_73( .D1(o_Rx_Byte_c_4), .C1(n9000), .B1(n2795), .A1(n9547), 
    .D0(phase_inc_carrGen_26), .C0(n2316), .B0(n9000), .A0(n3614), .DI1(n2833), 
    .DI0(n2834), .CE(osc_clk_enable_1447), .CLK(osc_clk), .FCI(n11284), 
    .F0(n2834), .Q0(phase_inc_carrGen_26), .F1(n2833), 
    .Q1(phase_inc_carrGen_27), .FCO(n11285));
  SLICE_74 SLICE_74( .D1(phase_inc_carrGen_25), .C1(n2317), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_24), .C0(n2318), .B0(n9000), .A0(n3614), 
    .DI1(n2835), .DI0(n2836), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11283), .F0(n2836), .Q0(phase_inc_carrGen_24), .F1(n2835), 
    .Q1(phase_inc_carrGen_25), .FCO(n11284));
  SLICE_75 SLICE_75( .D1(phase_inc_carrGen_23), .C1(n2319), .B1(n9000), 
    .A1(n3653), .D0(phase_inc_carrGen_22), .C0(n2320), .B0(n9000), .A0(n3632), 
    .DI1(n2837), .DI0(n2838), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11282), .F0(n2838), .Q0(phase_inc_carrGen_22), .F1(n2837), 
    .Q1(phase_inc_carrGen_23), .FCO(n11283));
  SLICE_76 SLICE_76( .D1(phase_inc_carrGen_21), .C1(n2321), .B1(n9000), 
    .A1(n3628), .D0(phase_inc_carrGen_20), .C0(n2322), .B0(n9000), .A0(n3614), 
    .DI1(n2839), .DI0(n2840), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11281), .F0(n2840), .Q0(phase_inc_carrGen_20), .F1(n2839), 
    .Q1(phase_inc_carrGen_21), .FCO(n11282));
  SLICE_77 SLICE_77( .D1(o_Rx_Byte_c_4), .C1(n9000), .B1(n2795), .A1(n9563), 
    .D0(phase_inc_carrGen_18), .C0(n2324), .B0(n9000), .A0(n3653), .DI1(n2841), 
    .DI0(n2842), .CE(osc_clk_enable_1447), .CLK(osc_clk), .FCI(n11280), 
    .F0(n2842), .Q0(phase_inc_carrGen_18), .F1(n2841), 
    .Q1(phase_inc_carrGen_19), .FCO(n11281));
  SLICE_78 SLICE_78( .D1(phase_inc_carrGen_17), .C1(n8004), .B1(n9000), 
    .A1(n3632), .D0(phase_inc_carrGen_16), .C0(n2326), .B0(n9000), .A0(n3663), 
    .DI1(n2843), .DI0(n2844), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11279), .F0(n2844), .Q0(phase_inc_carrGen_16), .F1(n2843), 
    .Q1(phase_inc_carrGen_17), .FCO(n11280));
  SLICE_79 SLICE_79( .D1(o_Rx_Byte_c_4), .C1(n9000), .B1(n2795), .A1(n9571), 
    .D0(phase_inc_carrGen_14), .C0(n2328), .B0(n9000), .A0(n3632), .DI1(n2845), 
    .DI0(n2846), .CE(osc_clk_enable_1447), .CLK(osc_clk), .FCI(n11278), 
    .F0(n2846), .Q0(phase_inc_carrGen_14), .F1(n2845), 
    .Q1(phase_inc_carrGen_15), .FCO(n11279));
  SLICE_80 SLICE_80( .D1(phase_inc_carrGen_13), .C1(n8002), .B1(n9000), 
    .A1(n3663), .D0(phase_inc_carrGen_12), .C0(n2330), .B0(n9000), .A0(n3632), 
    .DI1(n2847), .DI0(n2848), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11277), .F0(n2848), .Q0(phase_inc_carrGen_12), .F1(n2847), 
    .Q1(phase_inc_carrGen_13), .FCO(n11278));
  SLICE_81 SLICE_81( .D1(phase_inc_carrGen_11), .C1(n2331), .B1(n9000), 
    .A1(n3614), .D0(phase_inc_carrGen_10), .C0(n2332), .B0(n9000), .A0(n3663), 
    .DI1(n2849), .DI0(n2850), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11276), .F0(n2850), .Q0(phase_inc_carrGen_10), .F1(n2849), 
    .Q1(phase_inc_carrGen_11), .FCO(n11277));
  SLICE_82 SLICE_82( .D1(phase_inc_carrGen_9), .C1(n2333), .B1(n9000), 
    .A1(n3653), .D0(phase_inc_carrGen_8), .C0(n2334), .B0(n9000), .A0(n3653), 
    .DI1(n2851), .DI0(n2852), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11275), .F0(n2852), .Q0(phase_inc_carrGen_8), .F1(n2851), 
    .Q1(phase_inc_carrGen_9), .FCO(n11276));
  SLICE_83 SLICE_83( .D1(phase_inc_carrGen_7), .C1(n13411), .B1(n9000), 
    .A1(n3653), .D0(o_Rx_Byte_c_4), .C0(n9000), .B0(n2795), .A0(n9589), 
    .DI1(n2853), .DI0(n2854), .CE(osc_clk_enable_1447), .CLK(osc_clk), 
    .FCI(n11274), .F0(n2854), .Q0(phase_inc_carrGen_6), .F1(n2853), 
    .Q1(phase_inc_carrGen_7), .FCO(n11275));
  SLICE_84 SLICE_84( .D1(o_Rx_Byte_c_4), .C1(n9000), .B1(n2795), .A1(n9591), 
    .D0(o_Rx_Byte_c_4), .C0(n9000), .B0(n2795), .A0(n9593), .DI1(n2855), 
    .DI0(n2856), .CE(osc_clk_enable_1447), .CLK(osc_clk), .FCI(n11273), 
    .F0(n2856), .Q0(phase_inc_carrGen_4), .F1(n2855), .Q1(phase_inc_carrGen_5), 
    .FCO(n11274));
  SLICE_85 SLICE_85( .D1(phase_inc_carrGen_3), .C1(n2339), .B1(n9000), 
    .A1(n3632), .D0(phase_inc_carrGen_2), .C0(n2340), .B0(n9000), .A0(n3632), 
    .DI1(n2857), .DI0(n2858), .CE(osc_clk_enable_1397), .CLK(osc_clk), 
    .FCI(n11272), .F0(n2858), .Q0(phase_inc_carrGen_2), .F1(n2857), 
    .Q1(phase_inc_carrGen_3), .FCO(n11273));
  SLICE_86 SLICE_86( .D1(phase_inc_carrGen_1), .C1(n2341), .B1(n9000), 
    .A1(n3663), .D0(phase_inc_carrGen_0), .C0(n2608), .B0(n9000), .A0(n3653), 
    .DI0(n2860), .CE(osc_clk_enable_128), .CLK(osc_clk), .FCI(n11271), 
    .F0(n2860), .Q0(phase_inc_carrGen_0), .F1(n2859), .FCO(n11272));
  SLICE_87 SLICE_87( .B1(n9000), .A1(n3614), .FCO(n11271));
  SLICE_88 SLICE_88( .A0(phase_inc_carrGen_63), .FCI(n11129), .F0(n1011));
  SLICE_89 SLICE_89( .A1(phase_inc_carrGen_62), .A0(phase_inc_carrGen_61), 
    .FCI(n11128), .F0(n1013), .F1(n1012), .FCO(n11129));
  SLICE_90 SLICE_90( .A1(phase_inc_carrGen_60), .A0(phase_inc_carrGen_59), 
    .FCI(n11127), .F0(n1015), .F1(n1014), .FCO(n11128));
  SLICE_91 SLICE_91( .A1(phase_inc_carrGen_58), .A0(phase_inc_carrGen_57), 
    .FCI(n11126), .F0(n1017), .F1(n1016), .FCO(n11127));
  SLICE_92 SLICE_92( .A1(phase_inc_carrGen_56), .A0(phase_inc_carrGen_55), 
    .FCI(n11125), .F0(n1019), .F1(n1018), .FCO(n11126));
  SLICE_93 SLICE_93( .A1(phase_inc_carrGen_54), .A0(phase_inc_carrGen_53), 
    .FCI(n11124), .F0(n1021), .F1(n1020), .FCO(n11125));
  SLICE_94 SLICE_94( .A1(phase_inc_carrGen_52), .A0(phase_inc_carrGen_51), 
    .FCI(n11123), .F0(n1023), .F1(n1022), .FCO(n11124));
  SLICE_95 SLICE_95( .A1(phase_inc_carrGen_50), .A0(phase_inc_carrGen_49), 
    .FCI(n11122), .F0(n1025), .F1(n1024), .FCO(n11123));
  SLICE_96 SLICE_96( .A1(phase_inc_carrGen_48), .A0(phase_inc_carrGen_47), 
    .FCI(n11121), .F0(n1027), .F1(n1026), .FCO(n11122));
  SLICE_97 SLICE_97( .A1(phase_inc_carrGen_46), .A0(phase_inc_carrGen_45), 
    .FCI(n11120), .F0(n1029), .F1(n1028), .FCO(n11121));
  SLICE_98 SLICE_98( .A1(phase_inc_carrGen_44), .A0(phase_inc_carrGen_43), 
    .FCI(n11119), .F0(n1031), .F1(n1030), .FCO(n11120));
  SLICE_99 SLICE_99( .A1(phase_inc_carrGen_42), .A0(phase_inc_carrGen_41), 
    .FCI(n11118), .F0(n1033), .F1(n1032), .FCO(n11119));
  SLICE_100 SLICE_100( .A1(phase_inc_carrGen_40), .A0(phase_inc_carrGen_39), 
    .FCI(n11117), .F0(n1035), .F1(n1034), .FCO(n11118));
  SLICE_101 SLICE_101( .A1(phase_inc_carrGen_38), .A0(phase_inc_carrGen_37), 
    .FCI(n11116), .F0(n1037), .F1(n1036), .FCO(n11117));
  SLICE_102 SLICE_102( .A1(phase_inc_carrGen_36), .A0(phase_inc_carrGen_35), 
    .FCI(n11115), .F0(n1039), .F1(n1038), .FCO(n11116));
  SLICE_103 SLICE_103( .A1(phase_inc_carrGen_34), .A0(phase_inc_carrGen_33), 
    .FCI(n11114), .F0(n1041), .F1(n1040), .FCO(n11115));
  SLICE_104 SLICE_104( .A1(phase_inc_carrGen_32), .A0(phase_inc_carrGen_31), 
    .FCI(n11113), .F0(n1043), .F1(n1042), .FCO(n11114));
  SLICE_105 SLICE_105( .A1(phase_inc_carrGen_30), .A0(phase_inc_carrGen_29), 
    .FCI(n11112), .F0(n1045), .F1(n1044), .FCO(n11113));
  SLICE_106 SLICE_106( .A1(phase_inc_carrGen_28), .A0(phase_inc_carrGen_27), 
    .FCI(n11111), .F0(n1047), .F1(n1046), .FCO(n11112));
  SLICE_107 SLICE_107( .A1(phase_inc_carrGen_26), .A0(phase_inc_carrGen_25), 
    .FCI(n11110), .F0(n1049), .F1(n1048), .FCO(n11111));
  SLICE_108 SLICE_108( .A1(phase_inc_carrGen_24), .A0(phase_inc_carrGen_23), 
    .FCI(n11109), .F0(n1051), .F1(n1050), .FCO(n11110));
  SLICE_109 SLICE_109( .A1(phase_inc_carrGen_22), .A0(phase_inc_carrGen_21), 
    .FCI(n11108), .F0(n1053), .F1(n1052), .FCO(n11109));
  SLICE_110 SLICE_110( .A1(phase_inc_carrGen_20), .A0(phase_inc_carrGen_19), 
    .FCI(n11107), .F0(n1055), .F1(n1054), .FCO(n11108));
  SLICE_111 SLICE_111( .A1(phase_inc_carrGen_18), .A0(phase_inc_carrGen_17), 
    .FCI(n11106), .F0(n1057), .F1(n1056), .FCO(n11107));
  SLICE_112 SLICE_112( .A1(phase_inc_carrGen_16), .A0(phase_inc_carrGen_15), 
    .FCI(n11105), .F0(n1059), .F1(n1058), .FCO(n11106));
  SLICE_113 SLICE_113( .A1(phase_inc_carrGen_14), .A0(phase_inc_carrGen_13), 
    .FCI(n11104), .F0(n1061), .F1(n1060), .FCO(n11105));
  SLICE_114 SLICE_114( .A1(phase_inc_carrGen_12), .A0(phase_inc_carrGen_11), 
    .FCI(n11103), .F0(n1063), .F1(n1062), .FCO(n11104));
  SLICE_115 SLICE_115( .A1(phase_inc_carrGen_10), .A0(phase_inc_carrGen_9), 
    .FCI(n11102), .F0(n1065), .F1(n1064), .FCO(n11103));
  SLICE_116 SLICE_116( .A1(phase_inc_carrGen_8), .A0(phase_inc_carrGen_7), 
    .FCI(n11101), .F0(n1067), .F1(n1066), .FCO(n11102));
  SLICE_117 SLICE_117( .A1(phase_inc_carrGen_6), .A0(phase_inc_carrGen_5), 
    .FCI(n11100), .F0(n1069), .F1(n1068), .FCO(n11101));
  SLICE_118 SLICE_118( .A1(phase_inc_carrGen_4), .F1(n1070), .FCO(n11100));
  SinCos1_SLICE_119 \SinCos1/SLICE_119 ( .A1(\SinCos1/rom_addr0_r ), 
    .M1(phase_accum_56), .CLK(osc_clk), .F1(\SinCos1/rom_addr0_r_n ), 
    .Q1(\SinCos1/rom_addr0_r ), .FCO(\SinCos1/co0 ));
  SinCos1_SLICE_120 \SinCos1/SLICE_120 ( .A1(\SinCos1/rom_addr0_r_2 ), 
    .A0(\SinCos1/rom_addr0_r_1 ), .M1(phase_accum_58), .CLK(osc_clk), 
    .FCI(\SinCos1/co0 ), .F0(\SinCos1/rom_addr0_r_n_1 ), 
    .F1(\SinCos1/rom_addr0_r_n_2 ), .Q1(\SinCos1/rom_addr0_r_2 ), 
    .FCO(\SinCos1/co1 ));
  SinCos1_SLICE_121 \SinCos1/SLICE_121 ( .A1(\SinCos1/rom_addr0_r_4 ), 
    .A0(\SinCos1/rom_addr0_r_3 ), .M1(phase_accum_60), .CLK(osc_clk), 
    .FCI(\SinCos1/co1 ), .F0(\SinCos1/rom_addr0_r_n_3 ), 
    .F1(\SinCos1/rom_addr0_r_n_4 ), .Q1(\SinCos1/rom_addr0_r_4 ), 
    .FCO(\SinCos1/co2 ));
  SinCos1_SLICE_122 \SinCos1/SLICE_122 ( .A0(\SinCos1/rom_addr0_r_5 ), 
    .FCI(\SinCos1/co2 ), .F0(\SinCos1/rom_addr0_r_n_5 ));
  SinCos1_SLICE_123 \SinCos1/SLICE_123 ( .A1(\SinCos1/rom_dout_2 ), 
    .A0(\SinCos1/rom_dout_1 ), .FCI(\SinCos1/co0_1 ), 
    .F0(\SinCos1/rom_dout_s_n_1 ), .F1(\SinCos1/rom_dout_s_n_2 ), 
    .FCO(\SinCos1/co1_1 ));
  SinCos1_SLICE_124 \SinCos1/SLICE_124 ( .A1(\SinCos1/rom_dout_4 ), 
    .A0(\SinCos1/rom_dout_3 ), .FCI(\SinCos1/co1_1 ), 
    .F0(\SinCos1/rom_dout_s_n_3 ), .F1(\SinCos1/rom_dout_s_n_4 ), 
    .FCO(\SinCos1/co2_1 ));
  SinCos1_SLICE_125 \SinCos1/SLICE_125 ( .A1(\SinCos1/rom_dout_6 ), 
    .A0(\SinCos1/rom_dout_5 ), .FCI(\SinCos1/co2_1 ), 
    .F0(\SinCos1/rom_dout_s_n_5 ), .F1(\SinCos1/rom_dout_s_n_6 ), 
    .FCO(\SinCos1/co3 ));
  SinCos1_SLICE_126 \SinCos1/SLICE_126 ( .A1(\SinCos1/rom_dout_8 ), 
    .A0(\SinCos1/rom_dout_7 ), .FCI(\SinCos1/co3 ), 
    .F0(\SinCos1/rom_dout_s_n_7 ), .F1(\SinCos1/rom_dout_s_n_8 ), 
    .FCO(\SinCos1/co4 ));
  SinCos1_SLICE_127 \SinCos1/SLICE_127 ( .A1(\SinCos1/rom_dout_10 ), 
    .A0(\SinCos1/rom_dout_9 ), .FCI(\SinCos1/co4 ), 
    .F0(\SinCos1/rom_dout_s_n_9 ), .F1(\SinCos1/rom_dout_s_n_10 ), 
    .FCO(\SinCos1/co5 ));
  SinCos1_SLICE_128 \SinCos1/SLICE_128 ( .A1(\SinCos1/rom_dout_12 ), 
    .A0(\SinCos1/rom_dout_11 ), .FCI(\SinCos1/co5 ), 
    .F0(\SinCos1/rom_dout_s_n_11 ), .F1(\SinCos1/rom_dout_s_n_12 ));
  SinCos1_SLICE_129 \SinCos1/SLICE_129 ( .A1(\SinCos1/rom_dout_13 ), 
    .FCO(\SinCos1/co0_2 ));
  SinCos1_SLICE_130 \SinCos1/SLICE_130 ( .A1(\SinCos1/rom_dout_15 ), 
    .A0(\SinCos1/rom_dout_14 ), .FCI(\SinCos1/co0_2 ), 
    .F0(\SinCos1/rom_dout_c_n_1 ), .F1(\SinCos1/rom_dout_c_n_2 ), 
    .FCO(\SinCos1/co1_2 ));
  SinCos1_SLICE_131 \SinCos1/SLICE_131 ( .A1(\SinCos1/rom_dout_17 ), 
    .A0(\SinCos1/rom_dout_16 ), .FCI(\SinCos1/co1_2 ), 
    .F0(\SinCos1/rom_dout_c_n_3 ), .F1(\SinCos1/rom_dout_c_n_4 ), 
    .FCO(\SinCos1/co2_2 ));
  SinCos1_SLICE_132 \SinCos1/SLICE_132 ( .A1(\SinCos1/rom_dout_19 ), 
    .A0(\SinCos1/rom_dout_18 ), .FCI(\SinCos1/co2_2 ), 
    .F0(\SinCos1/rom_dout_c_n_5 ), .F1(\SinCos1/rom_dout_c_n_6 ), 
    .FCO(\SinCos1/co3_1 ));
  SinCos1_SLICE_133 \SinCos1/SLICE_133 ( .A1(\SinCos1/rom_dout_21 ), 
    .A0(\SinCos1/rom_dout_20 ), .FCI(\SinCos1/co3_1 ), 
    .F0(\SinCos1/rom_dout_c_n_7 ), .F1(\SinCos1/rom_dout_c_n_8 ), 
    .FCO(\SinCos1/co4_1 ));
  SinCos1_SLICE_134 \SinCos1/SLICE_134 ( .A1(\SinCos1/rom_dout_23 ), 
    .A0(\SinCos1/rom_dout_22 ), .FCI(\SinCos1/co4_1 ), 
    .F0(\SinCos1/rom_dout_c_n_9 ), .F1(\SinCos1/rom_dout_c_n_10 ), 
    .FCO(\SinCos1/co5_1 ));
  SinCos1_SLICE_135 \SinCos1/SLICE_135 ( .A1(\SinCos1/rom_dout_25 ), 
    .A0(\SinCos1/rom_dout_24 ), .FCI(\SinCos1/co5_1 ), 
    .F0(\SinCos1/rom_dout_c_n_11 ), .F1(\SinCos1/rom_dout_c_n_12 ));
  SinCos1_SLICE_136 \SinCos1/SLICE_136 ( .A1(\SinCos1/rom_dout ), 
    .FCO(\SinCos1/co0_1 ));
  Mixer1_SLICE_137 \Mixer1/SLICE_137 ( .A0(LOCosine_12), .FCI(\Mixer1/n11347 ), 
    .F0(\Mixer1/MixerOutCos_11_N_250_11 ));
  Mixer1_SLICE_138 \Mixer1/SLICE_138 ( .A1(LOCosine_11), .A0(LOCosine_10), 
    .FCI(\Mixer1/n11346 ), .F0(\Mixer1/MixerOutCos_11_N_250_9 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_10 ), .FCO(\Mixer1/n11347 ));
  Mixer1_SLICE_139 \Mixer1/SLICE_139 ( .A1(LOCosine_9), .A0(LOCosine_8), 
    .FCI(\Mixer1/n11345 ), .F0(\Mixer1/MixerOutCos_11_N_250_7 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_8 ), .FCO(\Mixer1/n11346 ));
  Mixer1_SLICE_140 \Mixer1/SLICE_140 ( .A1(LOCosine_7), .A0(LOCosine_6), 
    .FCI(\Mixer1/n11344 ), .F0(\Mixer1/MixerOutCos_11_N_250_5 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_6 ), .FCO(\Mixer1/n11345 ));
  Mixer1_SLICE_141 \Mixer1/SLICE_141 ( .A1(LOCosine_5), .A0(LOCosine_4), 
    .FCI(\Mixer1/n11343 ), .F0(\Mixer1/MixerOutCos_11_N_250_3 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_4 ), .FCO(\Mixer1/n11344 ));
  Mixer1_SLICE_142 \Mixer1/SLICE_142 ( .A1(LOCosine_3), .A0(LOCosine_2), 
    .FCI(\Mixer1/n11342 ), .F0(\Mixer1/MixerOutCos_11_N_250_1 ), 
    .F1(\Mixer1/MixerOutCos_11_N_250_2 ), .FCO(\Mixer1/n11343 ));
  Mixer1_SLICE_143 \Mixer1/SLICE_143 ( .A1(LOCosine_1), 
    .F1(\Mixer1/MixerOutCos_11_N_250_0 ), .FCO(\Mixer1/n11342 ));
  Mixer1_SLICE_144 \Mixer1/SLICE_144 ( .A0(LOSine_12), .FCI(\Mixer1/n11309 ), 
    .F0(\Mixer1/MixerOutSin_11_N_236_11 ));
  Mixer1_SLICE_145 \Mixer1/SLICE_145 ( .A1(LOSine_11), .A0(LOSine_10), 
    .FCI(\Mixer1/n11308 ), .F0(\Mixer1/MixerOutSin_11_N_236_9 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_10 ), .FCO(\Mixer1/n11309 ));
  Mixer1_SLICE_146 \Mixer1/SLICE_146 ( .A1(LOSine_9), .A0(LOSine_8), 
    .FCI(\Mixer1/n11307 ), .F0(\Mixer1/MixerOutSin_11_N_236_7 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_8 ), .FCO(\Mixer1/n11308 ));
  Mixer1_SLICE_147 \Mixer1/SLICE_147 ( .A1(LOSine_7), .A0(LOSine_6), 
    .FCI(\Mixer1/n11306 ), .F0(\Mixer1/MixerOutSin_11_N_236_5 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_6 ), .FCO(\Mixer1/n11307 ));
  Mixer1_SLICE_148 \Mixer1/SLICE_148 ( .A1(LOSine_5), .A0(LOSine_4), 
    .FCI(\Mixer1/n11305 ), .F0(\Mixer1/MixerOutSin_11_N_236_3 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_4 ), .FCO(\Mixer1/n11306 ));
  Mixer1_SLICE_149 \Mixer1/SLICE_149 ( .A1(LOSine_3), .A0(LOSine_2), 
    .FCI(\Mixer1/n11304 ), .F0(\Mixer1/MixerOutSin_11_N_236_1 ), 
    .F1(\Mixer1/MixerOutSin_11_N_236_2 ), .FCO(\Mixer1/n11305 ));
  Mixer1_SLICE_150 \Mixer1/SLICE_150 ( .A1(LOSine_1), 
    .F1(\Mixer1/MixerOutSin_11_N_236_0 ), .FCO(\Mixer1/n11304 ));
  ncoGen_SLICE_151 \ncoGen/SLICE_151 ( .B1(phase_inc_carrGen1_63), 
    .A1(phase_accum_63), .B0(phase_inc_carrGen1_62), .A0(phase_accum_62), 
    .DI1(\ncoGen/phase_accum_63_N_146_63 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_62 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10985 ), .F0(\ncoGen/phase_accum_63_N_146_62 ), 
    .Q0(phase_accum_62), .F1(\ncoGen/phase_accum_63_N_146_63 ), 
    .Q1(phase_accum_63));
  ncoGen_SLICE_152 \ncoGen/SLICE_152 ( .B1(phase_inc_carrGen1_61), 
    .A1(phase_accum_61), .B0(phase_inc_carrGen1_60), .A0(phase_accum_60), 
    .DI1(\ncoGen/phase_accum_63_N_146_61 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_60 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10984 ), .F0(\ncoGen/phase_accum_63_N_146_60 ), 
    .Q0(phase_accum_60), .F1(\ncoGen/phase_accum_63_N_146_61 ), 
    .Q1(phase_accum_61), .FCO(\ncoGen/n10985 ));
  ncoGen_SLICE_153 \ncoGen/SLICE_153 ( .B1(phase_inc_carrGen1_59), 
    .A1(phase_accum_59), .B0(phase_inc_carrGen1_58), .A0(phase_accum_58), 
    .DI1(\ncoGen/phase_accum_63_N_146_59 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_58 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10983 ), .F0(\ncoGen/phase_accum_63_N_146_58 ), 
    .Q0(phase_accum_58), .F1(\ncoGen/phase_accum_63_N_146_59 ), 
    .Q1(phase_accum_59), .FCO(\ncoGen/n10984 ));
  ncoGen_SLICE_154 \ncoGen/SLICE_154 ( .B1(phase_inc_carrGen1_57), 
    .A1(phase_accum_57), .B0(phase_inc_carrGen1_56), .A0(phase_accum_56), 
    .DI1(\ncoGen/phase_accum_63_N_146_57 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_56 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10982 ), .F0(\ncoGen/phase_accum_63_N_146_56 ), 
    .Q0(phase_accum_56), .F1(\ncoGen/phase_accum_63_N_146_57 ), 
    .Q1(phase_accum_57), .FCO(\ncoGen/n10983 ));
  ncoGen_SLICE_155 \ncoGen/SLICE_155 ( .B1(phase_inc_carrGen1_55), 
    .A1(\ncoGen/phase_accum_55 ), .B0(phase_inc_carrGen1_54), 
    .A0(\ncoGen/phase_accum_54 ), .DI1(\ncoGen/phase_accum_63_N_146_55 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_54 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10981 ), .F0(\ncoGen/phase_accum_63_N_146_54 ), 
    .Q0(\ncoGen/phase_accum_54 ), .F1(\ncoGen/phase_accum_63_N_146_55 ), 
    .Q1(\ncoGen/phase_accum_55 ), .FCO(\ncoGen/n10982 ));
  ncoGen_SLICE_156 \ncoGen/SLICE_156 ( .B1(phase_inc_carrGen1_53), 
    .A1(\ncoGen/phase_accum_53 ), .B0(phase_inc_carrGen1_52), 
    .A0(\ncoGen/phase_accum_52 ), .DI1(\ncoGen/phase_accum_63_N_146_53 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_52 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10980 ), .F0(\ncoGen/phase_accum_63_N_146_52 ), 
    .Q0(\ncoGen/phase_accum_52 ), .F1(\ncoGen/phase_accum_63_N_146_53 ), 
    .Q1(\ncoGen/phase_accum_53 ), .FCO(\ncoGen/n10981 ));
  ncoGen_SLICE_157 \ncoGen/SLICE_157 ( .B1(phase_inc_carrGen1_51), 
    .A1(\ncoGen/phase_accum_51 ), .B0(phase_inc_carrGen1_50), 
    .A0(\ncoGen/phase_accum_50 ), .DI1(\ncoGen/phase_accum_63_N_146_51 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_50 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10979 ), .F0(\ncoGen/phase_accum_63_N_146_50 ), 
    .Q0(\ncoGen/phase_accum_50 ), .F1(\ncoGen/phase_accum_63_N_146_51 ), 
    .Q1(\ncoGen/phase_accum_51 ), .FCO(\ncoGen/n10980 ));
  ncoGen_SLICE_158 \ncoGen/SLICE_158 ( .B1(phase_inc_carrGen1_49), 
    .A1(\ncoGen/phase_accum_49 ), .B0(phase_inc_carrGen1_48), 
    .A0(\ncoGen/phase_accum_48 ), .DI1(\ncoGen/phase_accum_63_N_146_49 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_48 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10978 ), .F0(\ncoGen/phase_accum_63_N_146_48 ), 
    .Q0(\ncoGen/phase_accum_48 ), .F1(\ncoGen/phase_accum_63_N_146_49 ), 
    .Q1(\ncoGen/phase_accum_49 ), .FCO(\ncoGen/n10979 ));
  ncoGen_SLICE_159 \ncoGen/SLICE_159 ( .B1(phase_inc_carrGen1_47), 
    .A1(\ncoGen/phase_accum_47 ), .B0(phase_inc_carrGen1_46), 
    .A0(\ncoGen/phase_accum_46 ), .DI1(\ncoGen/phase_accum_63_N_146_47 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_46 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10977 ), .F0(\ncoGen/phase_accum_63_N_146_46 ), 
    .Q0(\ncoGen/phase_accum_46 ), .F1(\ncoGen/phase_accum_63_N_146_47 ), 
    .Q1(\ncoGen/phase_accum_47 ), .FCO(\ncoGen/n10978 ));
  ncoGen_SLICE_160 \ncoGen/SLICE_160 ( .B1(phase_inc_carrGen1_45), 
    .A1(\ncoGen/phase_accum_45 ), .B0(phase_inc_carrGen1_44), 
    .A0(\ncoGen/phase_accum_44 ), .DI1(\ncoGen/phase_accum_63_N_146_45 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_44 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10976 ), .F0(\ncoGen/phase_accum_63_N_146_44 ), 
    .Q0(\ncoGen/phase_accum_44 ), .F1(\ncoGen/phase_accum_63_N_146_45 ), 
    .Q1(\ncoGen/phase_accum_45 ), .FCO(\ncoGen/n10977 ));
  ncoGen_SLICE_161 \ncoGen/SLICE_161 ( .B1(phase_inc_carrGen1_43), 
    .A1(\ncoGen/phase_accum_43 ), .B0(phase_inc_carrGen1_42), 
    .A0(\ncoGen/phase_accum_42 ), .DI1(\ncoGen/phase_accum_63_N_146_43 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_42 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10975 ), .F0(\ncoGen/phase_accum_63_N_146_42 ), 
    .Q0(\ncoGen/phase_accum_42 ), .F1(\ncoGen/phase_accum_63_N_146_43 ), 
    .Q1(\ncoGen/phase_accum_43 ), .FCO(\ncoGen/n10976 ));
  ncoGen_SLICE_162 \ncoGen/SLICE_162 ( .B1(phase_inc_carrGen1_41), 
    .A1(\ncoGen/phase_accum_41 ), .B0(phase_inc_carrGen1_40), 
    .A0(\ncoGen/phase_accum_40 ), .DI1(\ncoGen/phase_accum_63_N_146_41 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_40 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10974 ), .F0(\ncoGen/phase_accum_63_N_146_40 ), 
    .Q0(\ncoGen/phase_accum_40 ), .F1(\ncoGen/phase_accum_63_N_146_41 ), 
    .Q1(\ncoGen/phase_accum_41 ), .FCO(\ncoGen/n10975 ));
  ncoGen_SLICE_163 \ncoGen/SLICE_163 ( .B1(phase_inc_carrGen1_39), 
    .A1(\ncoGen/phase_accum_39 ), .B0(phase_inc_carrGen1_38), 
    .A0(\ncoGen/phase_accum_38 ), .DI1(\ncoGen/phase_accum_63_N_146_39 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_38 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10973 ), .F0(\ncoGen/phase_accum_63_N_146_38 ), 
    .Q0(\ncoGen/phase_accum_38 ), .F1(\ncoGen/phase_accum_63_N_146_39 ), 
    .Q1(\ncoGen/phase_accum_39 ), .FCO(\ncoGen/n10974 ));
  ncoGen_SLICE_164 \ncoGen/SLICE_164 ( .B1(phase_inc_carrGen1_37), 
    .A1(\ncoGen/phase_accum_37 ), .B0(phase_inc_carrGen1_36), 
    .A0(\ncoGen/phase_accum_36 ), .DI1(\ncoGen/phase_accum_63_N_146_37 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_36 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10972 ), .F0(\ncoGen/phase_accum_63_N_146_36 ), 
    .Q0(\ncoGen/phase_accum_36 ), .F1(\ncoGen/phase_accum_63_N_146_37 ), 
    .Q1(\ncoGen/phase_accum_37 ), .FCO(\ncoGen/n10973 ));
  ncoGen_SLICE_165 \ncoGen/SLICE_165 ( .B1(phase_inc_carrGen1_35), 
    .A1(\ncoGen/phase_accum_35 ), .B0(phase_inc_carrGen1_34), 
    .A0(\ncoGen/phase_accum_34 ), .DI1(\ncoGen/phase_accum_63_N_146_35 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_34 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10971 ), .F0(\ncoGen/phase_accum_63_N_146_34 ), 
    .Q0(\ncoGen/phase_accum_34 ), .F1(\ncoGen/phase_accum_63_N_146_35 ), 
    .Q1(\ncoGen/phase_accum_35 ), .FCO(\ncoGen/n10972 ));
  ncoGen_SLICE_166 \ncoGen/SLICE_166 ( .B1(phase_inc_carrGen1_33), 
    .A1(\ncoGen/phase_accum_33 ), .B0(phase_inc_carrGen1_32), 
    .A0(\ncoGen/phase_accum_32 ), .DI1(\ncoGen/phase_accum_63_N_146_33 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_32 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10970 ), .F0(\ncoGen/phase_accum_63_N_146_32 ), 
    .Q0(\ncoGen/phase_accum_32 ), .F1(\ncoGen/phase_accum_63_N_146_33 ), 
    .Q1(\ncoGen/phase_accum_33 ), .FCO(\ncoGen/n10971 ));
  ncoGen_SLICE_167 \ncoGen/SLICE_167 ( .B1(phase_inc_carrGen1_31), 
    .A1(\ncoGen/phase_accum_31 ), .B0(phase_inc_carrGen1_30), 
    .A0(\ncoGen/phase_accum_30 ), .DI1(\ncoGen/phase_accum_63_N_146_31 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_30 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10969 ), .F0(\ncoGen/phase_accum_63_N_146_30 ), 
    .Q0(\ncoGen/phase_accum_30 ), .F1(\ncoGen/phase_accum_63_N_146_31 ), 
    .Q1(\ncoGen/phase_accum_31 ), .FCO(\ncoGen/n10970 ));
  ncoGen_SLICE_168 \ncoGen/SLICE_168 ( .B1(phase_inc_carrGen1_29), 
    .A1(\ncoGen/phase_accum_29 ), .B0(phase_inc_carrGen1_28), 
    .A0(\ncoGen/phase_accum_28 ), .DI1(\ncoGen/phase_accum_63_N_146_29 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_28 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10968 ), .F0(\ncoGen/phase_accum_63_N_146_28 ), 
    .Q0(\ncoGen/phase_accum_28 ), .F1(\ncoGen/phase_accum_63_N_146_29 ), 
    .Q1(\ncoGen/phase_accum_29 ), .FCO(\ncoGen/n10969 ));
  ncoGen_SLICE_169 \ncoGen/SLICE_169 ( .B1(phase_inc_carrGen1_27), 
    .A1(\ncoGen/phase_accum_27 ), .B0(phase_inc_carrGen1_26), 
    .A0(\ncoGen/phase_accum_26 ), .DI1(\ncoGen/phase_accum_63_N_146_27 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_26 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10967 ), .F0(\ncoGen/phase_accum_63_N_146_26 ), 
    .Q0(\ncoGen/phase_accum_26 ), .F1(\ncoGen/phase_accum_63_N_146_27 ), 
    .Q1(\ncoGen/phase_accum_27 ), .FCO(\ncoGen/n10968 ));
  ncoGen_SLICE_170 \ncoGen/SLICE_170 ( .B1(phase_inc_carrGen1_25), 
    .A1(\ncoGen/phase_accum_25 ), .B0(phase_inc_carrGen1_24), 
    .A0(\ncoGen/phase_accum_24 ), .DI1(\ncoGen/phase_accum_63_N_146_25 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_24 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10966 ), .F0(\ncoGen/phase_accum_63_N_146_24 ), 
    .Q0(\ncoGen/phase_accum_24 ), .F1(\ncoGen/phase_accum_63_N_146_25 ), 
    .Q1(\ncoGen/phase_accum_25 ), .FCO(\ncoGen/n10967 ));
  ncoGen_SLICE_171 \ncoGen/SLICE_171 ( .B1(phase_inc_carrGen1_23), 
    .A1(\ncoGen/phase_accum_23 ), .B0(phase_inc_carrGen1_22), 
    .A0(\ncoGen/phase_accum_22 ), .DI1(\ncoGen/phase_accum_63_N_146_23 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_22 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10965 ), .F0(\ncoGen/phase_accum_63_N_146_22 ), 
    .Q0(\ncoGen/phase_accum_22 ), .F1(\ncoGen/phase_accum_63_N_146_23 ), 
    .Q1(\ncoGen/phase_accum_23 ), .FCO(\ncoGen/n10966 ));
  ncoGen_SLICE_172 \ncoGen/SLICE_172 ( .B1(phase_inc_carrGen1_21), 
    .A1(\ncoGen/phase_accum_21 ), .B0(phase_inc_carrGen1_20), 
    .A0(\ncoGen/phase_accum_20 ), .DI1(\ncoGen/phase_accum_63_N_146_21 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_20 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10964 ), .F0(\ncoGen/phase_accum_63_N_146_20 ), 
    .Q0(\ncoGen/phase_accum_20 ), .F1(\ncoGen/phase_accum_63_N_146_21 ), 
    .Q1(\ncoGen/phase_accum_21 ), .FCO(\ncoGen/n10965 ));
  ncoGen_SLICE_173 \ncoGen/SLICE_173 ( .B1(phase_inc_carrGen1_19), 
    .A1(\ncoGen/phase_accum_19 ), .B0(phase_inc_carrGen1_18), 
    .A0(\ncoGen/phase_accum_18 ), .DI1(\ncoGen/phase_accum_63_N_146_19 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_18 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10963 ), .F0(\ncoGen/phase_accum_63_N_146_18 ), 
    .Q0(\ncoGen/phase_accum_18 ), .F1(\ncoGen/phase_accum_63_N_146_19 ), 
    .Q1(\ncoGen/phase_accum_19 ), .FCO(\ncoGen/n10964 ));
  ncoGen_SLICE_174 \ncoGen/SLICE_174 ( .B1(phase_inc_carrGen1_17), 
    .A1(\ncoGen/phase_accum_17 ), .B0(phase_inc_carrGen1_16), 
    .A0(\ncoGen/phase_accum_16 ), .DI1(\ncoGen/phase_accum_63_N_146_17 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_16 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10962 ), .F0(\ncoGen/phase_accum_63_N_146_16 ), 
    .Q0(\ncoGen/phase_accum_16 ), .F1(\ncoGen/phase_accum_63_N_146_17 ), 
    .Q1(\ncoGen/phase_accum_17 ), .FCO(\ncoGen/n10963 ));
  ncoGen_SLICE_175 \ncoGen/SLICE_175 ( .B1(phase_inc_carrGen1_15), 
    .A1(\ncoGen/phase_accum_15 ), .B0(phase_inc_carrGen1_14), 
    .A0(\ncoGen/phase_accum_14 ), .DI1(\ncoGen/phase_accum_63_N_146_15 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_14 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10961 ), .F0(\ncoGen/phase_accum_63_N_146_14 ), 
    .Q0(\ncoGen/phase_accum_14 ), .F1(\ncoGen/phase_accum_63_N_146_15 ), 
    .Q1(\ncoGen/phase_accum_15 ), .FCO(\ncoGen/n10962 ));
  ncoGen_SLICE_176 \ncoGen/SLICE_176 ( .B1(phase_inc_carrGen1_13), 
    .A1(\ncoGen/phase_accum_13 ), .B0(phase_inc_carrGen1_12), 
    .A0(\ncoGen/phase_accum_12 ), .DI1(\ncoGen/phase_accum_63_N_146_13 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_12 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10960 ), .F0(\ncoGen/phase_accum_63_N_146_12 ), 
    .Q0(\ncoGen/phase_accum_12 ), .F1(\ncoGen/phase_accum_63_N_146_13 ), 
    .Q1(\ncoGen/phase_accum_13 ), .FCO(\ncoGen/n10961 ));
  ncoGen_SLICE_177 \ncoGen/SLICE_177 ( .B1(phase_inc_carrGen1_11), 
    .A1(\ncoGen/phase_accum_11 ), .B0(phase_inc_carrGen1_10), 
    .A0(\ncoGen/phase_accum_10 ), .DI1(\ncoGen/phase_accum_63_N_146_11 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_10 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10959 ), .F0(\ncoGen/phase_accum_63_N_146_10 ), 
    .Q0(\ncoGen/phase_accum_10 ), .F1(\ncoGen/phase_accum_63_N_146_11 ), 
    .Q1(\ncoGen/phase_accum_11 ), .FCO(\ncoGen/n10960 ));
  ncoGen_SLICE_178 \ncoGen/SLICE_178 ( .B1(phase_inc_carrGen1_9), 
    .A1(\ncoGen/phase_accum_9 ), .B0(phase_inc_carrGen1_8), 
    .A0(\ncoGen/phase_accum_8 ), .DI1(\ncoGen/phase_accum_63_N_146_9 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_8 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10958 ), .F0(\ncoGen/phase_accum_63_N_146_8 ), 
    .Q0(\ncoGen/phase_accum_8 ), .F1(\ncoGen/phase_accum_63_N_146_9 ), 
    .Q1(\ncoGen/phase_accum_9 ), .FCO(\ncoGen/n10959 ));
  ncoGen_SLICE_179 \ncoGen/SLICE_179 ( .B1(phase_inc_carrGen1_7), 
    .A1(\ncoGen/phase_accum_7 ), .B0(phase_inc_carrGen1_6), 
    .A0(\ncoGen/phase_accum_6 ), .DI1(\ncoGen/phase_accum_63_N_146_7 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_6 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10957 ), .F0(\ncoGen/phase_accum_63_N_146_6 ), 
    .Q0(\ncoGen/phase_accum_6 ), .F1(\ncoGen/phase_accum_63_N_146_7 ), 
    .Q1(\ncoGen/phase_accum_7 ), .FCO(\ncoGen/n10958 ));
  ncoGen_SLICE_180 \ncoGen/SLICE_180 ( .B1(phase_inc_carrGen1_5), 
    .A1(\ncoGen/phase_accum_5 ), .B0(phase_inc_carrGen1_4), 
    .A0(\ncoGen/phase_accum_4 ), .DI1(\ncoGen/phase_accum_63_N_146_5 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_4 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10956 ), .F0(\ncoGen/phase_accum_63_N_146_4 ), 
    .Q0(\ncoGen/phase_accum_4 ), .F1(\ncoGen/phase_accum_63_N_146_5 ), 
    .Q1(\ncoGen/phase_accum_5 ), .FCO(\ncoGen/n10957 ));
  ncoGen_SLICE_181 \ncoGen/SLICE_181 ( .B1(phase_inc_carrGen1_3), 
    .A1(\ncoGen/phase_accum_3 ), .B0(phase_inc_carrGen1_2), 
    .A0(\ncoGen/phase_accum_2 ), .DI1(\ncoGen/phase_accum_63_N_146_3 ), 
    .DI0(\ncoGen/phase_accum_63_N_146_2 ), .CLK(osc_clk), 
    .FCI(\ncoGen/n10955 ), .F0(\ncoGen/phase_accum_63_N_146_2 ), 
    .Q0(\ncoGen/phase_accum_2 ), .F1(\ncoGen/phase_accum_63_N_146_3 ), 
    .Q1(\ncoGen/phase_accum_3 ), .FCO(\ncoGen/n10956 ));
  ncoGen_SLICE_182 \ncoGen/SLICE_182 ( .B1(phase_inc_carrGen1_1), 
    .A1(\ncoGen/phase_accum_1 ), .B0(phase_inc_carrGen1_0), 
    .A0(\ncoGen/phase_accum_0 ), .DI1(\ncoGen/phase_accum_63_N_146_1 ), 
    .CLK(osc_clk), .F1(\ncoGen/phase_accum_63_N_146_1 ), 
    .Q1(\ncoGen/phase_accum_1 ), .FCO(\ncoGen/n10955 ));
  CIC1Sin_SLICE_183 \CIC1Sin/SLICE_183 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4292 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_57 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4293 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_56 ), .DI1(\CIC1Sin/d1_71_N_418_57 ), 
    .DI0(\CIC1Sin/d1_71_N_418_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12263 ), 
    .F0(\CIC1Sin/d1_71_N_418_56 ), .Q0(\CIC1Sin/d1_56 ), 
    .F1(\CIC1Sin/d1_71_N_418_57 ), .Q1(\CIC1Sin/d1_57 ), 
    .FCO(\CIC1Sin/n12264 ));
  CIC1Sin_SLICE_184 \CIC1Sin/SLICE_184 ( .B1(\CIC1Sin/d_d9_70 ), 
    .A1(\CIC1Sin/d9_70 ), .B0(\CIC1Sin/d_d9_69 ), .A0(\CIC1Sin/d9_69 ), 
    .FCI(\CIC1Sin/n11839 ), .F0(\CIC1Sin/n5952 ), .F1(\CIC1Sin/n5951 ), 
    .FCO(\CIC1Sin/n11840 ));
  CIC1Sin_SLICE_185 \CIC1Sin/SLICE_185 ( .B1(\CIC1Sin/d_d9_54 ), 
    .A1(\CIC1Sin/d9_54 ), .B0(\CIC1Sin/d_d9_53 ), .A0(\CIC1Sin/d9_53 ), 
    .FCI(\CIC1Sin/n11831 ), .FCO(\CIC1Sin/n11832 ));
  CIC1Sin_SLICE_186 \CIC1Sin/SLICE_186 ( .B1(\CIC1Sin/d_d9_10 ), 
    .A1(\CIC1Sin/d9_10 ), .B0(\CIC1Sin/d_d9_9 ), .A0(\CIC1Sin/d9_9 ), 
    .FCI(\CIC1Sin/n11628 ), .FCO(\CIC1Sin/n11629 ));
  CIC1Sin_SLICE_187 \CIC1Sin/SLICE_187 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4294 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_55 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4295 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_54 ), .DI1(\CIC1Sin/d1_71_N_418_55 ), 
    .DI0(\CIC1Sin/d1_71_N_418_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12262 ), 
    .F0(\CIC1Sin/d1_71_N_418_54 ), .Q0(\CIC1Sin/d1_54 ), 
    .F1(\CIC1Sin/d1_71_N_418_55 ), .Q1(\CIC1Sin/d1_55 ), 
    .FCO(\CIC1Sin/n12263 ));
  CIC1Sin_SLICE_188 \CIC1Sin/SLICE_188 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4296 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_53 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4297 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_52 ), .DI1(\CIC1Sin/d1_71_N_418_53 ), 
    .DI0(\CIC1Sin/d1_71_N_418_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12261 ), 
    .F0(\CIC1Sin/d1_71_N_418_52 ), .Q0(\CIC1Sin/d1_52 ), 
    .F1(\CIC1Sin/d1_71_N_418_53 ), .Q1(\CIC1Sin/d1_53 ), 
    .FCO(\CIC1Sin/n12262 ));
  CIC1Sin_SLICE_189 \CIC1Sin/SLICE_189 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4298 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_51 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4299 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_50 ), .DI1(\CIC1Sin/d1_71_N_418_51 ), 
    .DI0(\CIC1Sin/d1_71_N_418_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12260 ), 
    .F0(\CIC1Sin/d1_71_N_418_50 ), .Q0(\CIC1Sin/d1_50 ), 
    .F1(\CIC1Sin/d1_71_N_418_51 ), .Q1(\CIC1Sin/d1_51 ), 
    .FCO(\CIC1Sin/n12261 ));
  CIC1Sin_SLICE_190 \CIC1Sin/SLICE_190 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4300 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_49 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4301 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_48 ), .DI1(\CIC1Sin/d1_71_N_418_49 ), 
    .DI0(\CIC1Sin/d1_71_N_418_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12259 ), 
    .F0(\CIC1Sin/d1_71_N_418_48 ), .Q0(\CIC1Sin/d1_48 ), 
    .F1(\CIC1Sin/d1_71_N_418_49 ), .Q1(\CIC1Sin/d1_49 ), 
    .FCO(\CIC1Sin/n12260 ));
  CIC1Sin_SLICE_191 \CIC1Sin/SLICE_191 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4302 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_47 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4303 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_46 ), .DI1(\CIC1Sin/d1_71_N_418_47 ), 
    .DI0(\CIC1Sin/d1_71_N_418_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12258 ), 
    .F0(\CIC1Sin/d1_71_N_418_46 ), .Q0(\CIC1Sin/d1_46 ), 
    .F1(\CIC1Sin/d1_71_N_418_47 ), .Q1(\CIC1Sin/d1_47 ), 
    .FCO(\CIC1Sin/n12259 ));
  CIC1Sin_SLICE_192 \CIC1Sin/SLICE_192 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4304 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_45 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4305 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_44 ), .DI1(\CIC1Sin/d1_71_N_418_45 ), 
    .DI0(\CIC1Sin/d1_71_N_418_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12257 ), 
    .F0(\CIC1Sin/d1_71_N_418_44 ), .Q0(\CIC1Sin/d1_44 ), 
    .F1(\CIC1Sin/d1_71_N_418_45 ), .Q1(\CIC1Sin/d1_45 ), 
    .FCO(\CIC1Sin/n12258 ));
  CIC1Sin_SLICE_193 \CIC1Sin/SLICE_193 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4306 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_43 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4307 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_42 ), .DI1(\CIC1Sin/d1_71_N_418_43 ), 
    .DI0(\CIC1Sin/d1_71_N_418_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12256 ), 
    .F0(\CIC1Sin/d1_71_N_418_42 ), .Q0(\CIC1Sin/d1_42 ), 
    .F1(\CIC1Sin/d1_71_N_418_43 ), .Q1(\CIC1Sin/d1_43 ), 
    .FCO(\CIC1Sin/n12257 ));
  CIC1Sin_SLICE_194 \CIC1Sin/SLICE_194 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4308 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_41 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4309 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_40 ), .DI1(\CIC1Sin/d1_71_N_418_41 ), 
    .DI0(\CIC1Sin/d1_71_N_418_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12255 ), 
    .F0(\CIC1Sin/d1_71_N_418_40 ), .Q0(\CIC1Sin/d1_40 ), 
    .F1(\CIC1Sin/d1_71_N_418_41 ), .Q1(\CIC1Sin/d1_41 ), 
    .FCO(\CIC1Sin/n12256 ));
  CIC1Sin_SLICE_195 \CIC1Sin/SLICE_195 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4310 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_39 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4311 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_38 ), .DI1(\CIC1Sin/d1_71_N_418_39 ), 
    .DI0(\CIC1Sin/d1_71_N_418_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12254 ), 
    .F0(\CIC1Sin/d1_71_N_418_38 ), .Q0(\CIC1Sin/d1_38 ), 
    .F1(\CIC1Sin/d1_71_N_418_39 ), .Q1(\CIC1Sin/d1_39 ), 
    .FCO(\CIC1Sin/n12255 ));
  CIC1Sin_SLICE_196 \CIC1Sin/SLICE_196 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4312 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_37 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4313 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_36 ), .DI1(\CIC1Sin/d1_71_N_418_37 ), 
    .DI0(\CIC1Sin/d1_71_N_418_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12253 ), 
    .F0(\CIC1Sin/d1_71_N_418_36 ), .Q0(\CIC1Sin/d1_36 ), 
    .F1(\CIC1Sin/d1_71_N_418_37 ), .Q1(\CIC1Sin/d1_37 ), 
    .FCO(\CIC1Sin/n12254 ));
  CIC1Sin_SLICE_197 \CIC1Sin/SLICE_197 ( .A1(\CIC1Sin/n4276 ), 
    .FCO(\CIC1Sin/n12253 ));
  CIC1Sin_SLICE_198 \CIC1Sin/SLICE_198 ( .B1(\CIC1Sin/d_d9_8 ), 
    .A1(\CIC1Sin/d9_8 ), .B0(\CIC1Sin/d_d9_7 ), .A0(\CIC1Sin/d9_7 ), 
    .FCI(\CIC1Sin/n11627 ), .FCO(\CIC1Sin/n11628 ));
  CIC1Sin_SLICE_199 \CIC1Sin/SLICE_199 ( .B1(\CIC1Sin/d_d9_6 ), 
    .A1(\CIC1Sin/d9_6 ), .B0(\CIC1Sin/d_d9_5 ), .A0(\CIC1Sin/d9_5 ), 
    .FCI(\CIC1Sin/n11626 ), .FCO(\CIC1Sin/n11627 ));
  CIC1Sin_SLICE_200 \CIC1Sin/SLICE_200 ( .B1(\CIC1Sin/d_d9_4 ), 
    .A1(\CIC1Sin/d9_4 ), .B0(\CIC1Sin/d_d9_3 ), .A0(\CIC1Sin/d9_3 ), 
    .FCI(\CIC1Sin/n11625 ), .FCO(\CIC1Sin/n11626 ));
  CIC1Sin_SLICE_201 \CIC1Sin/SLICE_201 ( .B1(\CIC1Sin/d_d9_2 ), 
    .A1(\CIC1Sin/d9_2 ), .B0(\CIC1Sin/d_d9_1 ), .A0(\CIC1Sin/d9_1 ), 
    .FCI(\CIC1Sin/n11624 ), .FCO(\CIC1Sin/n11625 ));
  CIC1Sin_SLICE_202 \CIC1Sin/SLICE_202 ( .B1(\CIC1Sin/d_d9_0 ), 
    .A1(\CIC1Sin/d9_0 ), .FCO(\CIC1Sin/n11624 ));
  CIC1Sin_SLICE_203 \CIC1Sin/SLICE_203 ( .B0(\CIC1Sin/d_d8_71 ), 
    .A0(\CIC1Sin/d8_71 ), .FCI(\CIC1Sin/n11880 ), .F0(\CIC1Sin/n5798 ));
  CIC1Sin_SLICE_204 \CIC1Sin/SLICE_204 ( .B1(\CIC1Sin/d_d8_70 ), 
    .A1(\CIC1Sin/d8_70 ), .B0(\CIC1Sin/d_d8_69 ), .A0(\CIC1Sin/d8_69 ), 
    .FCI(\CIC1Sin/n11879 ), .F0(\CIC1Sin/n5800 ), .F1(\CIC1Sin/n5799 ), 
    .FCO(\CIC1Sin/n11880 ));
  CIC1Sin_SLICE_205 \CIC1Sin/SLICE_205 ( .B1(\CIC1Sin/d_d8_68 ), 
    .A1(\CIC1Sin/d8_68 ), .B0(\CIC1Sin/d_d8_67 ), .A0(\CIC1Sin/d8_67 ), 
    .FCI(\CIC1Sin/n11878 ), .F0(\CIC1Sin/n5802 ), .F1(\CIC1Sin/n5801 ), 
    .FCO(\CIC1Sin/n11879 ));
  CIC1Sin_SLICE_206 \CIC1Sin/SLICE_206 ( .B1(\CIC1Sin/d_d8_66 ), 
    .A1(\CIC1Sin/d8_66 ), .B0(\CIC1Sin/d_d8_65 ), .A0(\CIC1Sin/d8_65 ), 
    .FCI(\CIC1Sin/n11877 ), .F0(\CIC1Sin/n5804 ), .F1(\CIC1Sin/n5803 ), 
    .FCO(\CIC1Sin/n11878 ));
  CIC1Sin_SLICE_207 \CIC1Sin/SLICE_207 ( .B1(\CIC1Sin/d_d8_64 ), 
    .A1(\CIC1Sin/d8_64 ), .B0(\CIC1Sin/d_d8_63 ), .A0(\CIC1Sin/d8_63 ), 
    .FCI(\CIC1Sin/n11876 ), .F0(\CIC1Sin/n5806 ), .F1(\CIC1Sin/n5805 ), 
    .FCO(\CIC1Sin/n11877 ));
  CIC1Sin_SLICE_208 \CIC1Sin/SLICE_208 ( .B1(\CIC1Sin/d_d8_62 ), 
    .A1(\CIC1Sin/d8_62 ), .B0(\CIC1Sin/d_d8_61 ), .A0(\CIC1Sin/d8_61 ), 
    .FCI(\CIC1Sin/n11875 ), .F0(\CIC1Sin/n5808 ), .F1(\CIC1Sin/n5807 ), 
    .FCO(\CIC1Sin/n11876 ));
  CIC1Sin_SLICE_209 \CIC1Sin/SLICE_209 ( .B1(\CIC1Sin/d_d8_60 ), 
    .A1(\CIC1Sin/d8_60 ), .B0(\CIC1Sin/d_d8_59 ), .A0(\CIC1Sin/d8_59 ), 
    .FCI(\CIC1Sin/n11874 ), .F0(\CIC1Sin/n5810 ), .F1(\CIC1Sin/n5809 ), 
    .FCO(\CIC1Sin/n11875 ));
  CIC1Sin_SLICE_210 \CIC1Sin/SLICE_210 ( .B1(\CIC1Sin/d_d8_58 ), 
    .A1(\CIC1Sin/d8_58 ), .B0(\CIC1Sin/d_d8_57 ), .A0(\CIC1Sin/d8_57 ), 
    .FCI(\CIC1Sin/n11873 ), .F0(\CIC1Sin/n5812 ), .F1(\CIC1Sin/n5811 ), 
    .FCO(\CIC1Sin/n11874 ));
  CIC1Sin_SLICE_211 \CIC1Sin/SLICE_211 ( .B1(\CIC1Sin/d_d8_56 ), 
    .A1(\CIC1Sin/d8_56 ), .B0(\CIC1Sin/d_d8_55 ), .A0(\CIC1Sin/d8_55 ), 
    .FCI(\CIC1Sin/n11872 ), .F0(\CIC1Sin/n5814 ), .F1(\CIC1Sin/n5813 ), 
    .FCO(\CIC1Sin/n11873 ));
  CIC1Sin_SLICE_212 \CIC1Sin/SLICE_212 ( .B1(\CIC1Sin/d_d8_54 ), 
    .A1(\CIC1Sin/d8_54 ), .B0(\CIC1Sin/d_d8_53 ), .A0(\CIC1Sin/d8_53 ), 
    .FCI(\CIC1Sin/n11871 ), .F0(\CIC1Sin/n5816 ), .F1(\CIC1Sin/n5815 ), 
    .FCO(\CIC1Sin/n11872 ));
  CIC1Sin_SLICE_213 \CIC1Sin/SLICE_213 ( .B1(\CIC1Sin/d_d8_52 ), 
    .A1(\CIC1Sin/d8_52 ), .B0(\CIC1Sin/d_d8_51 ), .A0(\CIC1Sin/d8_51 ), 
    .FCI(\CIC1Sin/n11870 ), .F0(\CIC1Sin/n5818 ), .F1(\CIC1Sin/n5817 ), 
    .FCO(\CIC1Sin/n11871 ));
  CIC1Sin_SLICE_214 \CIC1Sin/SLICE_214 ( .B1(\CIC1Sin/d_d8_50 ), 
    .A1(\CIC1Sin/d8_50 ), .B0(\CIC1Sin/d_d8_49 ), .A0(\CIC1Sin/d8_49 ), 
    .FCI(\CIC1Sin/n11869 ), .F0(\CIC1Sin/n5820 ), .F1(\CIC1Sin/n5819 ), 
    .FCO(\CIC1Sin/n11870 ));
  CIC1Sin_SLICE_215 \CIC1Sin/SLICE_215 ( .B1(\CIC1Sin/d_d8_48 ), 
    .A1(\CIC1Sin/d8_48 ), .B0(\CIC1Sin/d_d8_47 ), .A0(\CIC1Sin/d8_47 ), 
    .FCI(\CIC1Sin/n11868 ), .F0(\CIC1Sin/n5822 ), .F1(\CIC1Sin/n5821 ), 
    .FCO(\CIC1Sin/n11869 ));
  CIC1Sin_SLICE_216 \CIC1Sin/SLICE_216 ( .B1(\CIC1Sin/d_d9_52 ), 
    .A1(\CIC1Sin/d9_52 ), .B0(\CIC1Sin/d_d9_51 ), .A0(\CIC1Sin/d9_51 ), 
    .FCI(\CIC1Sin/n11830 ), .FCO(\CIC1Sin/n11831 ));
  CIC1Sin_SLICE_217 \CIC1Sin/SLICE_217 ( .B1(\CIC1Sin/d_d9_50 ), 
    .A1(\CIC1Sin/d9_50 ), .B0(\CIC1Sin/d_d9_49 ), .A0(\CIC1Sin/d9_49 ), 
    .FCI(\CIC1Sin/n11829 ), .FCO(\CIC1Sin/n11830 ));
  CIC1Sin_SLICE_218 \CIC1Sin/SLICE_218 ( .B1(\CIC1Sin/d_d9_48 ), 
    .A1(\CIC1Sin/d9_48 ), .B0(\CIC1Sin/d_d9_47 ), .A0(\CIC1Sin/d9_47 ), 
    .FCI(\CIC1Sin/n11828 ), .FCO(\CIC1Sin/n11829 ));
  CIC1Sin_SLICE_219 \CIC1Sin/SLICE_219 ( .B1(\CIC1Sin/d_d9_46 ), 
    .A1(\CIC1Sin/d9_46 ), .B0(\CIC1Sin/d_d9_45 ), .A0(\CIC1Sin/d9_45 ), 
    .FCI(\CIC1Sin/n11827 ), .FCO(\CIC1Sin/n11828 ));
  CIC1Sin_SLICE_220 \CIC1Sin/SLICE_220 ( .B1(\CIC1Sin/d_d9_44 ), 
    .A1(\CIC1Sin/d9_44 ), .B0(\CIC1Sin/d_d9_43 ), .A0(\CIC1Sin/d9_43 ), 
    .FCI(\CIC1Sin/n11826 ), .FCO(\CIC1Sin/n11827 ));
  CIC1Sin_SLICE_221 \CIC1Sin/SLICE_221 ( .B1(\CIC1Sin/d_d9_42 ), 
    .A1(\CIC1Sin/d9_42 ), .B0(\CIC1Sin/d_d9_41 ), .A0(\CIC1Sin/d9_41 ), 
    .FCI(\CIC1Sin/n11825 ), .FCO(\CIC1Sin/n11826 ));
  CIC1Sin_SLICE_222 \CIC1Sin/SLICE_222 ( .B1(\CIC1Sin/d_d9_40 ), 
    .A1(\CIC1Sin/d9_40 ), .B0(\CIC1Sin/d_d9_39 ), .A0(\CIC1Sin/d9_39 ), 
    .FCI(\CIC1Sin/n11824 ), .FCO(\CIC1Sin/n11825 ));
  CIC1Sin_SLICE_223 \CIC1Sin/SLICE_223 ( .B1(\CIC1Sin/d_d9_38 ), 
    .A1(\CIC1Sin/d9_38 ), .B0(\CIC1Sin/d_d9_37 ), .A0(\CIC1Sin/d9_37 ), 
    .FCI(\CIC1Sin/n11823 ), .FCO(\CIC1Sin/n11824 ));
  CIC1Sin_SLICE_224 \CIC1Sin/SLICE_224 ( .B1(\CIC1Sin/d_d9_36 ), 
    .A1(\CIC1Sin/d9_36 ), .FCO(\CIC1Sin/n11823 ));
  CIC1Sin_SLICE_225 \CIC1Sin/SLICE_225 ( .B0(\CIC1Sin/d_d9_71 ), 
    .A0(\CIC1Sin/d9_71 ), .FCI(\CIC1Sin/n11822 ), .F0(\CIC1Sin/n5988 ));
  CIC1Sin_SLICE_226 \CIC1Sin/SLICE_226 ( .B1(\CIC1Sin/d_d9_70 ), 
    .A1(\CIC1Sin/d9_70 ), .B0(\CIC1Sin/d_d9_69 ), .A0(\CIC1Sin/d9_69 ), 
    .FCI(\CIC1Sin/n11821 ), .F0(\CIC1Sin/n5990 ), .F1(\CIC1Sin/n5989 ), 
    .FCO(\CIC1Sin/n11822 ));
  CIC1Sin_SLICE_227 \CIC1Sin/SLICE_227 ( .B1(\CIC1Sin/d_d9_68 ), 
    .A1(\CIC1Sin/d9_68 ), .B0(\CIC1Sin/d_d9_67 ), .A0(\CIC1Sin/d9_67 ), 
    .FCI(\CIC1Sin/n11838 ), .F0(\CIC1Sin/n5954 ), .F1(\CIC1Sin/n5953 ), 
    .FCO(\CIC1Sin/n11839 ));
  CIC1Sin_SLICE_228 \CIC1Sin/SLICE_228 ( .B1(\CIC1Sin/d_d9_68 ), 
    .A1(\CIC1Sin/d9_68 ), .B0(\CIC1Sin/d_d9_67 ), .A0(\CIC1Sin/d9_67 ), 
    .FCI(\CIC1Sin/n11820 ), .F0(\CIC1Sin/n5992 ), .F1(\CIC1Sin/n5991 ), 
    .FCO(\CIC1Sin/n11821 ));
  CIC1Sin_SLICE_229 \CIC1Sin/SLICE_229 ( .B1(\CIC1Sin/d_d9_66 ), 
    .A1(\CIC1Sin/d9_66 ), .B0(\CIC1Sin/d_d9_65 ), .A0(\CIC1Sin/d9_65 ), 
    .FCI(\CIC1Sin/n11819 ), .F0(\CIC1Sin/n5994 ), .F1(\CIC1Sin/n5993 ), 
    .FCO(\CIC1Sin/n11820 ));
  CIC1Sin_SLICE_230 \CIC1Sin/SLICE_230 ( .B1(\CIC1Sin/d_d9_64 ), 
    .A1(\CIC1Sin/d9_64 ), .B0(\CIC1Sin/d_d9_63 ), .A0(\CIC1Sin/d9_63 ), 
    .FCI(\CIC1Sin/n11818 ), .F0(\CIC1Sin/n5996 ), .F1(\CIC1Sin/n5995 ), 
    .FCO(\CIC1Sin/n11819 ));
  CIC1Sin_SLICE_231 \CIC1Sin/SLICE_231 ( .B1(\CIC1Sin/d_d9_62 ), 
    .A1(\CIC1Sin/d9_62 ), .B0(\CIC1Sin/d_d9_61 ), .A0(\CIC1Sin/d9_61 ), 
    .FCI(\CIC1Sin/n11817 ), .F0(\CIC1Sin/n5998 ), .F1(\CIC1Sin/n5997 ), 
    .FCO(\CIC1Sin/n11818 ));
  CIC1Sin_SLICE_232 \CIC1Sin/SLICE_232 ( .B1(\CIC1Sin/d_d9_60 ), 
    .A1(\CIC1Sin/d9_60 ), .B0(\CIC1Sin/d_d9_59 ), .A0(\CIC1Sin/d9_59 ), 
    .FCI(\CIC1Sin/n11816 ), .F0(\CIC1Sin/n6000 ), .F1(\CIC1Sin/n5999 ), 
    .FCO(\CIC1Sin/n11817 ));
  CIC1Sin_SLICE_233 \CIC1Sin/SLICE_233 ( .B1(\CIC1Sin/d_d8_46 ), 
    .A1(\CIC1Sin/d8_46 ), .B0(\CIC1Sin/d_d8_45 ), .A0(\CIC1Sin/d8_45 ), 
    .FCI(\CIC1Sin/n11867 ), .F0(\CIC1Sin/n5824 ), .F1(\CIC1Sin/n5823 ), 
    .FCO(\CIC1Sin/n11868 ));
  CIC1Sin_SLICE_234 \CIC1Sin/SLICE_234 ( .B1(\CIC1Sin/d_d8_44 ), 
    .A1(\CIC1Sin/d8_44 ), .B0(\CIC1Sin/d_d8_43 ), .A0(\CIC1Sin/d8_43 ), 
    .FCI(\CIC1Sin/n11866 ), .F0(\CIC1Sin/n5826 ), .F1(\CIC1Sin/n5825 ), 
    .FCO(\CIC1Sin/n11867 ));
  CIC1Sin_SLICE_235 \CIC1Sin/SLICE_235 ( .B1(\CIC1Sin/d_d9_58 ), 
    .A1(\CIC1Sin/d9_58 ), .B0(\CIC1Sin/d_d9_57 ), .A0(\CIC1Sin/d9_57 ), 
    .FCI(\CIC1Sin/n11815 ), .F0(\CIC1Sin/n6002 ), .F1(\CIC1Sin/n6001 ), 
    .FCO(\CIC1Sin/n11816 ));
  CIC1Sin_SLICE_236 \CIC1Sin/SLICE_236 ( .B1(\CIC1Sin/d_d8_42 ), 
    .A1(\CIC1Sin/d8_42 ), .B0(\CIC1Sin/d_d8_41 ), .A0(\CIC1Sin/d8_41 ), 
    .FCI(\CIC1Sin/n11865 ), .F0(\CIC1Sin/n5828 ), .F1(\CIC1Sin/n5827 ), 
    .FCO(\CIC1Sin/n11866 ));
  CIC1Sin_SLICE_237 \CIC1Sin/SLICE_237 ( .B1(\CIC1Sin/d_d9_56 ), 
    .A1(\CIC1Sin/d9_56 ), .B0(\CIC1Sin/d_d9_55 ), .A0(\CIC1Sin/d9_55 ), 
    .FCI(\CIC1Sin/n11814 ), .FCO(\CIC1Sin/n11815 ));
  CIC1Sin_SLICE_238 \CIC1Sin/SLICE_238 ( .B1(\CIC1Sin/d_d8_40 ), 
    .A1(\CIC1Sin/d8_40 ), .B0(\CIC1Sin/d_d8_39 ), .A0(\CIC1Sin/d8_39 ), 
    .FCI(\CIC1Sin/n11864 ), .F0(\CIC1Sin/n5830 ), .F1(\CIC1Sin/n5829 ), 
    .FCO(\CIC1Sin/n11865 ));
  CIC1Sin_SLICE_239 \CIC1Sin/SLICE_239 ( .B1(\CIC1Sin/d_d8_38 ), 
    .A1(\CIC1Sin/d8_38 ), .B0(\CIC1Sin/d_d8_37 ), .A0(\CIC1Sin/d8_37 ), 
    .FCI(\CIC1Sin/n11863 ), .F0(\CIC1Sin/n5832 ), .F1(\CIC1Sin/n5831 ), 
    .FCO(\CIC1Sin/n11864 ));
  CIC1Sin_SLICE_240 \CIC1Sin/SLICE_240 ( .B1(\CIC1Sin/d_d8_36 ), 
    .A1(\CIC1Sin/d8_36 ), .F1(\CIC1Sin/n5833 ), .FCO(\CIC1Sin/n11863 ));
  CIC1Sin_SLICE_241 \CIC1Sin/SLICE_241 ( .B1(\CIC1Sin/d_d9_54 ), 
    .A1(\CIC1Sin/d9_54 ), .B0(\CIC1Sin/d_d9_53 ), .A0(\CIC1Sin/d9_53 ), 
    .FCI(\CIC1Sin/n11813 ), .FCO(\CIC1Sin/n11814 ));
  CIC1Sin_SLICE_242 \CIC1Sin/SLICE_242 ( .D1(\CIC1Sin/d8_71 ), 
    .C1(\CIC1Sin/n5798 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_71 ), 
    .D0(\CIC1Sin/d8_70 ), .C0(\CIC1Sin/n5799 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_70 ), .DI1(\CIC1Sin/d9_71_N_1675_71 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_70 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11861 ), .F0(\CIC1Sin/d9_71_N_1675_70 ), 
    .Q0(\CIC1Sin/d9_70 ), .F1(\CIC1Sin/d9_71_N_1675_71 ), .Q1(\CIC1Sin/d9_71 ));
  CIC1Sin_SLICE_243 \CIC1Sin/SLICE_243 ( .D1(\CIC1Sin/d8_69 ), 
    .C1(\CIC1Sin/n5800 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_69 ), 
    .D0(\CIC1Sin/d8_68 ), .C0(\CIC1Sin/n5801 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_68 ), .DI1(\CIC1Sin/d9_71_N_1675_69 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_68 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11860 ), .F0(\CIC1Sin/d9_71_N_1675_68 ), 
    .Q0(\CIC1Sin/d9_68 ), .F1(\CIC1Sin/d9_71_N_1675_69 ), .Q1(\CIC1Sin/d9_69 ), 
    .FCO(\CIC1Sin/n11861 ));
  CIC1Sin_SLICE_244 \CIC1Sin/SLICE_244 ( .D1(\CIC1Sin/d8_67 ), 
    .C1(\CIC1Sin/n5802 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_67 ), 
    .D0(\CIC1Sin/d8_66 ), .C0(\CIC1Sin/n5803 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_66 ), .DI1(\CIC1Sin/d9_71_N_1675_67 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_66 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11859 ), .F0(\CIC1Sin/d9_71_N_1675_66 ), 
    .Q0(\CIC1Sin/d9_66 ), .F1(\CIC1Sin/d9_71_N_1675_67 ), .Q1(\CIC1Sin/d9_67 ), 
    .FCO(\CIC1Sin/n11860 ));
  CIC1Sin_SLICE_245 \CIC1Sin/SLICE_245 ( .D1(\CIC1Sin/d8_65 ), 
    .C1(\CIC1Sin/n5804 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_65 ), 
    .D0(\CIC1Sin/d8_64 ), .C0(\CIC1Sin/n5805 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_64 ), .DI1(\CIC1Sin/d9_71_N_1675_65 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_64 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11858 ), .F0(\CIC1Sin/d9_71_N_1675_64 ), 
    .Q0(\CIC1Sin/d9_64 ), .F1(\CIC1Sin/d9_71_N_1675_65 ), .Q1(\CIC1Sin/d9_65 ), 
    .FCO(\CIC1Sin/n11859 ));
  CIC1Sin_SLICE_246 \CIC1Sin/SLICE_246 ( .D1(\CIC1Sin/d8_63 ), 
    .C1(\CIC1Sin/n5806 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_63 ), 
    .D0(\CIC1Sin/d8_62 ), .C0(\CIC1Sin/n5807 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_62 ), .DI1(\CIC1Sin/d9_71_N_1675_63 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_62 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11857 ), .F0(\CIC1Sin/d9_71_N_1675_62 ), 
    .Q0(\CIC1Sin/d9_62 ), .F1(\CIC1Sin/d9_71_N_1675_63 ), .Q1(\CIC1Sin/d9_63 ), 
    .FCO(\CIC1Sin/n11858 ));
  CIC1Sin_SLICE_247 \CIC1Sin/SLICE_247 ( .D1(\CIC1Sin/d8_61 ), 
    .C1(\CIC1Sin/n5808 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_61 ), 
    .D0(\CIC1Sin/d8_60 ), .C0(\CIC1Sin/n5809 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_60 ), .DI1(\CIC1Sin/d9_71_N_1675_61 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_60 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11856 ), .F0(\CIC1Sin/d9_71_N_1675_60 ), 
    .Q0(\CIC1Sin/d9_60 ), .F1(\CIC1Sin/d9_71_N_1675_61 ), .Q1(\CIC1Sin/d9_61 ), 
    .FCO(\CIC1Sin/n11857 ));
  CIC1Sin_SLICE_248 \CIC1Sin/SLICE_248 ( .D1(\CIC1Sin/d8_59 ), 
    .C1(\CIC1Sin/n5810 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_59 ), 
    .D0(\CIC1Sin/d8_58 ), .C0(\CIC1Sin/n5811 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_58 ), .DI1(\CIC1Sin/d9_71_N_1675_59 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_58 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11855 ), .F0(\CIC1Sin/d9_71_N_1675_58 ), 
    .Q0(\CIC1Sin/d9_58 ), .F1(\CIC1Sin/d9_71_N_1675_59 ), .Q1(\CIC1Sin/d9_59 ), 
    .FCO(\CIC1Sin/n11856 ));
  CIC1Sin_SLICE_249 \CIC1Sin/SLICE_249 ( .D1(\CIC1Sin/d8_57 ), 
    .C1(\CIC1Sin/n5812 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_57 ), 
    .D0(\CIC1Sin/d8_56 ), .C0(\CIC1Sin/n5813 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_56 ), .DI1(\CIC1Sin/d9_71_N_1675_57 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_56 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11854 ), .F0(\CIC1Sin/d9_71_N_1675_56 ), 
    .Q0(\CIC1Sin/d9_56 ), .F1(\CIC1Sin/d9_71_N_1675_57 ), .Q1(\CIC1Sin/d9_57 ), 
    .FCO(\CIC1Sin/n11855 ));
  CIC1Sin_SLICE_250 \CIC1Sin/SLICE_250 ( .B1(\CIC1Sin/d_d9_52 ), 
    .A1(\CIC1Sin/d9_52 ), .B0(\CIC1Sin/d_d9_51 ), .A0(\CIC1Sin/d9_51 ), 
    .FCI(\CIC1Sin/n11812 ), .FCO(\CIC1Sin/n11813 ));
  CIC1Sin_SLICE_251 \CIC1Sin/SLICE_251 ( .D1(\CIC1Sin/d8_55 ), 
    .C1(\CIC1Sin/n5814 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_55 ), 
    .D0(\CIC1Sin/d8_54 ), .C0(\CIC1Sin/n5815 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_54 ), .DI1(\CIC1Sin/d9_71_N_1675_55 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_54 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11853 ), .F0(\CIC1Sin/d9_71_N_1675_54 ), 
    .Q0(\CIC1Sin/d9_54 ), .F1(\CIC1Sin/d9_71_N_1675_55 ), .Q1(\CIC1Sin/d9_55 ), 
    .FCO(\CIC1Sin/n11854 ));
  CIC1Sin_SLICE_252 \CIC1Sin/SLICE_252 ( .B1(\CIC1Sin/d_d9_50 ), 
    .A1(\CIC1Sin/d9_50 ), .B0(\CIC1Sin/d_d9_49 ), .A0(\CIC1Sin/d9_49 ), 
    .FCI(\CIC1Sin/n11811 ), .FCO(\CIC1Sin/n11812 ));
  CIC1Sin_SLICE_253 \CIC1Sin/SLICE_253 ( .D1(\CIC1Sin/d8_53 ), 
    .C1(\CIC1Sin/n5816 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_53 ), 
    .D0(\CIC1Sin/d8_52 ), .C0(\CIC1Sin/n5817 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_52 ), .DI1(\CIC1Sin/d9_71_N_1675_53 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_52 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11852 ), .F0(\CIC1Sin/d9_71_N_1675_52 ), 
    .Q0(\CIC1Sin/d9_52 ), .F1(\CIC1Sin/d9_71_N_1675_53 ), .Q1(\CIC1Sin/d9_53 ), 
    .FCO(\CIC1Sin/n11853 ));
  CIC1Sin_SLICE_254 \CIC1Sin/SLICE_254 ( .D1(\CIC1Sin/d8_51 ), 
    .C1(\CIC1Sin/n5818 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_51 ), 
    .D0(\CIC1Sin/d8_50 ), .C0(\CIC1Sin/n5819 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_50 ), .DI1(\CIC1Sin/d9_71_N_1675_51 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_50 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11851 ), .F0(\CIC1Sin/d9_71_N_1675_50 ), 
    .Q0(\CIC1Sin/d9_50 ), .F1(\CIC1Sin/d9_71_N_1675_51 ), .Q1(\CIC1Sin/d9_51 ), 
    .FCO(\CIC1Sin/n11852 ));
  CIC1Sin_SLICE_255 \CIC1Sin/SLICE_255 ( .D1(\CIC1Sin/d8_49 ), 
    .C1(\CIC1Sin/n5820 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_49 ), 
    .D0(\CIC1Sin/d8_48 ), .C0(\CIC1Sin/n5821 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_48 ), .DI1(\CIC1Sin/d9_71_N_1675_49 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_48 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11850 ), .F0(\CIC1Sin/d9_71_N_1675_48 ), 
    .Q0(\CIC1Sin/d9_48 ), .F1(\CIC1Sin/d9_71_N_1675_49 ), .Q1(\CIC1Sin/d9_49 ), 
    .FCO(\CIC1Sin/n11851 ));
  CIC1Sin_SLICE_256 \CIC1Sin/SLICE_256 ( .D1(\CIC1Sin/d8_47 ), 
    .C1(\CIC1Sin/n5822 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_47 ), 
    .D0(\CIC1Sin/d8_46 ), .C0(\CIC1Sin/n5823 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_46 ), .DI1(\CIC1Sin/d9_71_N_1675_47 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_46 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11849 ), .F0(\CIC1Sin/d9_71_N_1675_46 ), 
    .Q0(\CIC1Sin/d9_46 ), .F1(\CIC1Sin/d9_71_N_1675_47 ), .Q1(\CIC1Sin/d9_47 ), 
    .FCO(\CIC1Sin/n11850 ));
  CIC1Sin_SLICE_257 \CIC1Sin/SLICE_257 ( .D1(\CIC1Sin/d8_45 ), 
    .C1(\CIC1Sin/n5824 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_45 ), 
    .D0(\CIC1Sin/d8_44 ), .C0(\CIC1Sin/n5825 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_44 ), .DI1(\CIC1Sin/d9_71_N_1675_45 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_44 ), .CE(\CIC1Sin/osc_clk_enable_647 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11848 ), .F0(\CIC1Sin/d9_71_N_1675_44 ), 
    .Q0(\CIC1Sin/d9_44 ), .F1(\CIC1Sin/d9_71_N_1675_45 ), .Q1(\CIC1Sin/d9_45 ), 
    .FCO(\CIC1Sin/n11849 ));
  CIC1Sin_SLICE_258 \CIC1Sin/SLICE_258 ( .D1(\CIC1Sin/d8_43 ), 
    .C1(\CIC1Sin/n5826 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_43 ), 
    .D0(\CIC1Sin/d8_42 ), .C0(\CIC1Sin/n5827 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_42 ), .DI1(\CIC1Sin/d9_71_N_1675_43 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_42 ), .CE(\CIC1Sin/osc_clk_enable_597 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11847 ), .F0(\CIC1Sin/d9_71_N_1675_42 ), 
    .Q0(\CIC1Sin/d9_42 ), .F1(\CIC1Sin/d9_71_N_1675_43 ), .Q1(\CIC1Sin/d9_43 ), 
    .FCO(\CIC1Sin/n11848 ));
  CIC1Sin_SLICE_259 \CIC1Sin/SLICE_259 ( .D1(\CIC1Sin/d8_41 ), 
    .C1(\CIC1Sin/n5828 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_41 ), 
    .D0(\CIC1Sin/d8_40 ), .C0(\CIC1Sin/n5829 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_40 ), .DI1(\CIC1Sin/d9_71_N_1675_41 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_40 ), .CE(\CIC1Sin/osc_clk_enable_597 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11846 ), .F0(\CIC1Sin/d9_71_N_1675_40 ), 
    .Q0(\CIC1Sin/d9_40 ), .F1(\CIC1Sin/d9_71_N_1675_41 ), .Q1(\CIC1Sin/d9_41 ), 
    .FCO(\CIC1Sin/n11847 ));
  CIC1Sin_SLICE_260 \CIC1Sin/SLICE_260 ( .D1(\CIC1Sin/d8_39 ), 
    .C1(\CIC1Sin/n5830 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_39 ), 
    .D0(\CIC1Sin/d8_38 ), .C0(\CIC1Sin/n5831 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_38 ), .DI1(\CIC1Sin/d9_71_N_1675_39 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_38 ), .CE(\CIC1Sin/osc_clk_enable_597 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11845 ), .F0(\CIC1Sin/d9_71_N_1675_38 ), 
    .Q0(\CIC1Sin/d9_38 ), .F1(\CIC1Sin/d9_71_N_1675_39 ), .Q1(\CIC1Sin/d9_39 ), 
    .FCO(\CIC1Sin/n11846 ));
  CIC1Sin_SLICE_261 \CIC1Sin/SLICE_261 ( .B1(\CIC1Sin/d_d9_48 ), 
    .A1(\CIC1Sin/d9_48 ), .B0(\CIC1Sin/d_d9_47 ), .A0(\CIC1Sin/d9_47 ), 
    .FCI(\CIC1Sin/n11810 ), .FCO(\CIC1Sin/n11811 ));
  CIC1Sin_SLICE_262 \CIC1Sin/SLICE_262 ( .B1(\CIC1Sin/d_d9_46 ), 
    .A1(\CIC1Sin/d9_46 ), .B0(\CIC1Sin/d_d9_45 ), .A0(\CIC1Sin/d9_45 ), 
    .FCI(\CIC1Sin/n11809 ), .FCO(\CIC1Sin/n11810 ));
  CIC1Sin_SLICE_263 \CIC1Sin/SLICE_263 ( .B1(\CIC1Sin/d_d9_44 ), 
    .A1(\CIC1Sin/d9_44 ), .B0(\CIC1Sin/d_d9_43 ), .A0(\CIC1Sin/d9_43 ), 
    .FCI(\CIC1Sin/n11808 ), .FCO(\CIC1Sin/n11809 ));
  CIC1Sin_SLICE_264 \CIC1Sin/SLICE_264 ( .B1(\CIC1Sin/d_d9_42 ), 
    .A1(\CIC1Sin/d9_42 ), .B0(\CIC1Sin/d_d9_41 ), .A0(\CIC1Sin/d9_41 ), 
    .FCI(\CIC1Sin/n11807 ), .FCO(\CIC1Sin/n11808 ));
  CIC1Sin_SLICE_265 \CIC1Sin/SLICE_265 ( .B1(\CIC1Sin/d_d9_40 ), 
    .A1(\CIC1Sin/d9_40 ), .B0(\CIC1Sin/d_d9_39 ), .A0(\CIC1Sin/d9_39 ), 
    .FCI(\CIC1Sin/n11806 ), .FCO(\CIC1Sin/n11807 ));
  CIC1Sin_SLICE_266 \CIC1Sin/SLICE_266 ( .B1(\CIC1Sin/d2_71 ), 
    .A1(\CIC1Sin/d1_71 ), .B0(\CIC1Sin/d2_70 ), .A0(\CIC1Sin/d1_70 ), 
    .FCI(\CIC1Sin/n12248 ), .F0(\CIC1Sin/n4431 ), .F1(\CIC1Sin/n4430 ));
  CIC1Sin_SLICE_267 \CIC1Sin/SLICE_267 ( .B1(\CIC1Sin/d_d9_38 ), 
    .A1(\CIC1Sin/d9_38 ), .B0(\CIC1Sin/d_d9_37 ), .A0(\CIC1Sin/d9_37 ), 
    .FCI(\CIC1Sin/n11805 ), .FCO(\CIC1Sin/n11806 ));
  CIC1Sin_SLICE_268 \CIC1Sin/SLICE_268 ( .B1(\CIC1Sin/d_d9_36 ), 
    .A1(\CIC1Sin/d9_36 ), .FCO(\CIC1Sin/n11805 ));
  CIC1Sin_SLICE_269 \CIC1Sin/SLICE_269 ( .B1(\CIC1Sin/d_d9_66 ), 
    .A1(\CIC1Sin/d9_66 ), .B0(\CIC1Sin/d_d9_65 ), .A0(\CIC1Sin/d9_65 ), 
    .FCI(\CIC1Sin/n11837 ), .F0(\CIC1Sin/n5956 ), .F1(\CIC1Sin/n5955 ), 
    .FCO(\CIC1Sin/n11838 ));
  CIC1Sin_SLICE_270 \CIC1Sin/SLICE_270 ( .B1(\CIC1Sin/d_d9_64 ), 
    .A1(\CIC1Sin/d9_64 ), .B0(\CIC1Sin/d_d9_63 ), .A0(\CIC1Sin/d9_63 ), 
    .FCI(\CIC1Sin/n11836 ), .F0(\CIC1Sin/n5958 ), .F1(\CIC1Sin/n5957 ), 
    .FCO(\CIC1Sin/n11837 ));
  CIC1Sin_SLICE_271 \CIC1Sin/SLICE_271 ( .B1(\CIC1Sin/d2_69 ), 
    .A1(\CIC1Sin/d1_69 ), .B0(\CIC1Sin/d2_68 ), .A0(\CIC1Sin/d1_68 ), 
    .FCI(\CIC1Sin/n12247 ), .F0(\CIC1Sin/n4433 ), .F1(\CIC1Sin/n4432 ), 
    .FCO(\CIC1Sin/n12248 ));
  CIC1Sin_SLICE_272 \CIC1Sin/SLICE_272 ( .B1(\CIC1Sin/d2_67 ), 
    .A1(\CIC1Sin/d1_67 ), .B0(\CIC1Sin/d2_66 ), .A0(\CIC1Sin/d1_66 ), 
    .FCI(\CIC1Sin/n12246 ), .F0(\CIC1Sin/n4435 ), .F1(\CIC1Sin/n4434 ), 
    .FCO(\CIC1Sin/n12247 ));
  CIC1Sin_SLICE_273 \CIC1Sin/SLICE_273 ( .B1(\CIC1Sin/d2_65 ), 
    .A1(\CIC1Sin/d1_65 ), .B0(\CIC1Sin/d2_64 ), .A0(\CIC1Sin/d1_64 ), 
    .FCI(\CIC1Sin/n12245 ), .F0(\CIC1Sin/n4437 ), .F1(\CIC1Sin/n4436 ), 
    .FCO(\CIC1Sin/n12246 ));
  CIC1Sin_SLICE_274 \CIC1Sin/SLICE_274 ( .B1(\CIC1Sin/d2_63 ), 
    .A1(\CIC1Sin/d1_63 ), .B0(\CIC1Sin/d2_62 ), .A0(\CIC1Sin/d1_62 ), 
    .FCI(\CIC1Sin/n12244 ), .F0(\CIC1Sin/n4439 ), .F1(\CIC1Sin/n4438 ), 
    .FCO(\CIC1Sin/n12245 ));
  CIC1Sin_SLICE_275 \CIC1Sin/SLICE_275 ( .B1(\CIC1Sin/d2_61 ), 
    .A1(\CIC1Sin/d1_61 ), .B0(\CIC1Sin/d2_60 ), .A0(\CIC1Sin/d1_60 ), 
    .FCI(\CIC1Sin/n12243 ), .F0(\CIC1Sin/n4441 ), .F1(\CIC1Sin/n4440 ), 
    .FCO(\CIC1Sin/n12244 ));
  CIC1Sin_SLICE_276 \CIC1Sin/SLICE_276 ( .B1(\CIC1Sin/d2_59 ), 
    .A1(\CIC1Sin/d1_59 ), .B0(\CIC1Sin/d2_58 ), .A0(\CIC1Sin/d1_58 ), 
    .FCI(\CIC1Sin/n12242 ), .F0(\CIC1Sin/n4443 ), .F1(\CIC1Sin/n4442 ), 
    .FCO(\CIC1Sin/n12243 ));
  CIC1Sin_SLICE_277 \CIC1Sin/SLICE_277 ( .B1(\CIC1Sin/d2_57 ), 
    .A1(\CIC1Sin/d1_57 ), .B0(\CIC1Sin/d2_56 ), .A0(\CIC1Sin/d1_56 ), 
    .FCI(\CIC1Sin/n12241 ), .F0(\CIC1Sin/n4445 ), .F1(\CIC1Sin/n4444 ), 
    .FCO(\CIC1Sin/n12242 ));
  CIC1Sin_SLICE_278 \CIC1Sin/SLICE_278 ( .B1(\CIC1Sin/d2_55 ), 
    .A1(\CIC1Sin/d1_55 ), .B0(\CIC1Sin/d2_54 ), .A0(\CIC1Sin/d1_54 ), 
    .FCI(\CIC1Sin/n12240 ), .F0(\CIC1Sin/n4447 ), .F1(\CIC1Sin/n4446 ), 
    .FCO(\CIC1Sin/n12241 ));
  CIC1Sin_SLICE_279 \CIC1Sin/SLICE_279 ( .B1(\CIC1Sin/d2_53 ), 
    .A1(\CIC1Sin/d1_53 ), .B0(\CIC1Sin/d2_52 ), .A0(\CIC1Sin/d1_52 ), 
    .FCI(\CIC1Sin/n12239 ), .F0(\CIC1Sin/n4449 ), .F1(\CIC1Sin/n4448 ), 
    .FCO(\CIC1Sin/n12240 ));
  CIC1Sin_SLICE_280 \CIC1Sin/SLICE_280 ( .B1(\CIC1Sin/d2_51 ), 
    .A1(\CIC1Sin/d1_51 ), .B0(\CIC1Sin/d2_50 ), .A0(\CIC1Sin/d1_50 ), 
    .FCI(\CIC1Sin/n12238 ), .F0(\CIC1Sin/n4451 ), .F1(\CIC1Sin/n4450 ), 
    .FCO(\CIC1Sin/n12239 ));
  CIC1Sin_SLICE_281 \CIC1Sin/SLICE_281 ( .B1(\CIC1Sin/d2_49 ), 
    .A1(\CIC1Sin/d1_49 ), .B0(\CIC1Sin/d2_48 ), .A0(\CIC1Sin/d1_48 ), 
    .FCI(\CIC1Sin/n12237 ), .F0(\CIC1Sin/n4453 ), .F1(\CIC1Sin/n4452 ), 
    .FCO(\CIC1Sin/n12238 ));
  CIC1Sin_SLICE_282 \CIC1Sin/SLICE_282 ( .B1(\CIC1Sin/d2_47 ), 
    .A1(\CIC1Sin/d1_47 ), .B0(\CIC1Sin/d2_46 ), .A0(\CIC1Sin/d1_46 ), 
    .FCI(\CIC1Sin/n12236 ), .F0(\CIC1Sin/n4455 ), .F1(\CIC1Sin/n4454 ), 
    .FCO(\CIC1Sin/n12237 ));
  CIC1Sin_SLICE_283 \CIC1Sin/SLICE_283 ( .B1(\CIC1Sin/d2_45 ), 
    .A1(\CIC1Sin/d1_45 ), .B0(\CIC1Sin/d2_44 ), .A0(\CIC1Sin/d1_44 ), 
    .FCI(\CIC1Sin/n12235 ), .F0(\CIC1Sin/n4457 ), .F1(\CIC1Sin/n4456 ), 
    .FCO(\CIC1Sin/n12236 ));
  CIC1Sin_SLICE_284 \CIC1Sin/SLICE_284 ( .B1(\CIC1Sin/d2_43 ), 
    .A1(\CIC1Sin/d1_43 ), .B0(\CIC1Sin/d2_42 ), .A0(\CIC1Sin/d1_42 ), 
    .FCI(\CIC1Sin/n12234 ), .F0(\CIC1Sin/n4459 ), .F1(\CIC1Sin/n4458 ), 
    .FCO(\CIC1Sin/n12235 ));
  CIC1Sin_SLICE_285 \CIC1Sin/SLICE_285 ( .B1(\CIC1Sin/d2_41 ), 
    .A1(\CIC1Sin/d1_41 ), .B0(\CIC1Sin/d2_40 ), .A0(\CIC1Sin/d1_40 ), 
    .FCI(\CIC1Sin/n12233 ), .F0(\CIC1Sin/n4461 ), .F1(\CIC1Sin/n4460 ), 
    .FCO(\CIC1Sin/n12234 ));
  CIC1Sin_SLICE_286 \CIC1Sin/SLICE_286 ( .B1(\CIC1Sin/d2_39 ), 
    .A1(\CIC1Sin/d1_39 ), .B0(\CIC1Sin/d2_38 ), .A0(\CIC1Sin/d1_38 ), 
    .FCI(\CIC1Sin/n12232 ), .F0(\CIC1Sin/n4463 ), .F1(\CIC1Sin/n4462 ), 
    .FCO(\CIC1Sin/n12233 ));
  CIC1Sin_SLICE_287 \CIC1Sin/SLICE_287 ( .B1(\CIC1Sin/d2_37 ), 
    .A1(\CIC1Sin/d1_37 ), .B0(\CIC1Sin/d2_36 ), .A0(\CIC1Sin/d1_36 ), 
    .F1(\CIC1Sin/n4464 ), .FCO(\CIC1Sin/n12232 ));
  CIC1Sin_SLICE_288 \CIC1Sin/SLICE_288 ( .D1(\CIC1Sin/d1_71 ), 
    .C1(\CIC1Sin/n4430 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_71 ), 
    .D0(\CIC1Sin/d1_70 ), .C0(\CIC1Sin/n4431 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_70 ), .DI1(\CIC1Sin/d2_71_N_490_71 ), 
    .DI0(\CIC1Sin/d2_71_N_490_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12229 ), 
    .F0(\CIC1Sin/d2_71_N_490_70 ), .Q0(\CIC1Sin/d2_70 ), 
    .F1(\CIC1Sin/d2_71_N_490_71 ), .Q1(\CIC1Sin/d2_71 ));
  CIC1Sin_SLICE_289 \CIC1Sin/SLICE_289 ( .D1(\CIC1Sin/d1_69 ), 
    .C1(\CIC1Sin/n4432 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_69 ), 
    .D0(\CIC1Sin/d1_68 ), .C0(\CIC1Sin/n4433 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_68 ), .DI1(\CIC1Sin/d2_71_N_490_69 ), 
    .DI0(\CIC1Sin/d2_71_N_490_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12228 ), 
    .F0(\CIC1Sin/d2_71_N_490_68 ), .Q0(\CIC1Sin/d2_68 ), 
    .F1(\CIC1Sin/d2_71_N_490_69 ), .Q1(\CIC1Sin/d2_69 ), 
    .FCO(\CIC1Sin/n12229 ));
  CIC1Sin_SLICE_290 \CIC1Sin/SLICE_290 ( .D1(\CIC1Sin/d1_67 ), 
    .C1(\CIC1Sin/n4434 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_67 ), 
    .D0(\CIC1Sin/d1_66 ), .C0(\CIC1Sin/n4435 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_66 ), .DI1(\CIC1Sin/d2_71_N_490_67 ), 
    .DI0(\CIC1Sin/d2_71_N_490_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12227 ), 
    .F0(\CIC1Sin/d2_71_N_490_66 ), .Q0(\CIC1Sin/d2_66 ), 
    .F1(\CIC1Sin/d2_71_N_490_67 ), .Q1(\CIC1Sin/d2_67 ), 
    .FCO(\CIC1Sin/n12228 ));
  CIC1Sin_SLICE_291 \CIC1Sin/SLICE_291 ( .D1(\CIC1Sin/d1_65 ), 
    .C1(\CIC1Sin/n4436 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_65 ), 
    .D0(\CIC1Sin/d1_64 ), .C0(\CIC1Sin/n4437 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_64 ), .DI1(\CIC1Sin/d2_71_N_490_65 ), 
    .DI0(\CIC1Sin/d2_71_N_490_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12226 ), 
    .F0(\CIC1Sin/d2_71_N_490_64 ), .Q0(\CIC1Sin/d2_64 ), 
    .F1(\CIC1Sin/d2_71_N_490_65 ), .Q1(\CIC1Sin/d2_65 ), 
    .FCO(\CIC1Sin/n12227 ));
  CIC1Sin_SLICE_292 \CIC1Sin/SLICE_292 ( .D1(\CIC1Sin/d1_63 ), 
    .C1(\CIC1Sin/n4438 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_63 ), 
    .D0(\CIC1Sin/d1_62 ), .C0(\CIC1Sin/n4439 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_62 ), .DI1(\CIC1Sin/d2_71_N_490_63 ), 
    .DI0(\CIC1Sin/d2_71_N_490_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12225 ), 
    .F0(\CIC1Sin/d2_71_N_490_62 ), .Q0(\CIC1Sin/d2_62 ), 
    .F1(\CIC1Sin/d2_71_N_490_63 ), .Q1(\CIC1Sin/d2_63 ), 
    .FCO(\CIC1Sin/n12226 ));
  CIC1Sin_SLICE_293 \CIC1Sin/SLICE_293 ( .D1(\CIC1Sin/d1_61 ), 
    .C1(\CIC1Sin/n4440 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_61 ), 
    .D0(\CIC1Sin/d1_60 ), .C0(\CIC1Sin/n4441 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_60 ), .DI1(\CIC1Sin/d2_71_N_490_61 ), 
    .DI0(\CIC1Sin/d2_71_N_490_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12224 ), 
    .F0(\CIC1Sin/d2_71_N_490_60 ), .Q0(\CIC1Sin/d2_60 ), 
    .F1(\CIC1Sin/d2_71_N_490_61 ), .Q1(\CIC1Sin/d2_61 ), 
    .FCO(\CIC1Sin/n12225 ));
  CIC1Sin_SLICE_294 \CIC1Sin/SLICE_294 ( .D1(\CIC1Sin/d1_59 ), 
    .C1(\CIC1Sin/n4442 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_59 ), 
    .D0(\CIC1Sin/d1_58 ), .C0(\CIC1Sin/n4443 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_58 ), .DI1(\CIC1Sin/d2_71_N_490_59 ), 
    .DI0(\CIC1Sin/d2_71_N_490_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12223 ), 
    .F0(\CIC1Sin/d2_71_N_490_58 ), .Q0(\CIC1Sin/d2_58 ), 
    .F1(\CIC1Sin/d2_71_N_490_59 ), .Q1(\CIC1Sin/d2_59 ), 
    .FCO(\CIC1Sin/n12224 ));
  CIC1Sin_SLICE_295 \CIC1Sin/SLICE_295 ( .D1(\CIC1Sin/d1_57 ), 
    .C1(\CIC1Sin/n4444 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_57 ), 
    .D0(\CIC1Sin/d1_56 ), .C0(\CIC1Sin/n4445 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_56 ), .DI1(\CIC1Sin/d2_71_N_490_57 ), 
    .DI0(\CIC1Sin/d2_71_N_490_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12222 ), 
    .F0(\CIC1Sin/d2_71_N_490_56 ), .Q0(\CIC1Sin/d2_56 ), 
    .F1(\CIC1Sin/d2_71_N_490_57 ), .Q1(\CIC1Sin/d2_57 ), 
    .FCO(\CIC1Sin/n12223 ));
  CIC1Sin_SLICE_296 \CIC1Sin/SLICE_296 ( .D1(\CIC1Sin/d1_55 ), 
    .C1(\CIC1Sin/n4446 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_55 ), 
    .D0(\CIC1Sin/d1_54 ), .C0(\CIC1Sin/n4447 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_54 ), .DI1(\CIC1Sin/d2_71_N_490_55 ), 
    .DI0(\CIC1Sin/d2_71_N_490_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12221 ), 
    .F0(\CIC1Sin/d2_71_N_490_54 ), .Q0(\CIC1Sin/d2_54 ), 
    .F1(\CIC1Sin/d2_71_N_490_55 ), .Q1(\CIC1Sin/d2_55 ), 
    .FCO(\CIC1Sin/n12222 ));
  CIC1Sin_SLICE_297 \CIC1Sin/SLICE_297 ( .D1(\CIC1Sin/d1_53 ), 
    .C1(\CIC1Sin/n4448 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_53 ), 
    .D0(\CIC1Sin/d1_52 ), .C0(\CIC1Sin/n4449 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_52 ), .DI1(\CIC1Sin/d2_71_N_490_53 ), 
    .DI0(\CIC1Sin/d2_71_N_490_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12220 ), 
    .F0(\CIC1Sin/d2_71_N_490_52 ), .Q0(\CIC1Sin/d2_52 ), 
    .F1(\CIC1Sin/d2_71_N_490_53 ), .Q1(\CIC1Sin/d2_53 ), 
    .FCO(\CIC1Sin/n12221 ));
  CIC1Sin_SLICE_298 \CIC1Sin/SLICE_298 ( .D1(\CIC1Sin/d1_51 ), 
    .C1(\CIC1Sin/n4450 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_51 ), 
    .D0(\CIC1Sin/d1_50 ), .C0(\CIC1Sin/n4451 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_50 ), .DI1(\CIC1Sin/d2_71_N_490_51 ), 
    .DI0(\CIC1Sin/d2_71_N_490_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12219 ), 
    .F0(\CIC1Sin/d2_71_N_490_50 ), .Q0(\CIC1Sin/d2_50 ), 
    .F1(\CIC1Sin/d2_71_N_490_51 ), .Q1(\CIC1Sin/d2_51 ), 
    .FCO(\CIC1Sin/n12220 ));
  CIC1Sin_SLICE_299 \CIC1Sin/SLICE_299 ( .D1(\CIC1Sin/d1_49 ), 
    .C1(\CIC1Sin/n4452 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_49 ), 
    .D0(\CIC1Sin/d1_48 ), .C0(\CIC1Sin/n4453 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_48 ), .DI1(\CIC1Sin/d2_71_N_490_49 ), 
    .DI0(\CIC1Sin/d2_71_N_490_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12218 ), 
    .F0(\CIC1Sin/d2_71_N_490_48 ), .Q0(\CIC1Sin/d2_48 ), 
    .F1(\CIC1Sin/d2_71_N_490_49 ), .Q1(\CIC1Sin/d2_49 ), 
    .FCO(\CIC1Sin/n12219 ));
  CIC1Sin_SLICE_300 \CIC1Sin/SLICE_300 ( .D1(\CIC1Sin/d1_47 ), 
    .C1(\CIC1Sin/n4454 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_47 ), 
    .D0(\CIC1Sin/d1_46 ), .C0(\CIC1Sin/n4455 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_46 ), .DI1(\CIC1Sin/d2_71_N_490_47 ), 
    .DI0(\CIC1Sin/d2_71_N_490_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12217 ), 
    .F0(\CIC1Sin/d2_71_N_490_46 ), .Q0(\CIC1Sin/d2_46 ), 
    .F1(\CIC1Sin/d2_71_N_490_47 ), .Q1(\CIC1Sin/d2_47 ), 
    .FCO(\CIC1Sin/n12218 ));
  CIC1Sin_SLICE_301 \CIC1Sin/SLICE_301 ( .D1(\CIC1Sin/d1_45 ), 
    .C1(\CIC1Sin/n4456 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_45 ), 
    .D0(\CIC1Sin/d1_44 ), .C0(\CIC1Sin/n4457 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_44 ), .DI1(\CIC1Sin/d2_71_N_490_45 ), 
    .DI0(\CIC1Sin/d2_71_N_490_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12216 ), 
    .F0(\CIC1Sin/d2_71_N_490_44 ), .Q0(\CIC1Sin/d2_44 ), 
    .F1(\CIC1Sin/d2_71_N_490_45 ), .Q1(\CIC1Sin/d2_45 ), 
    .FCO(\CIC1Sin/n12217 ));
  CIC1Sin_SLICE_302 \CIC1Sin/SLICE_302 ( .D1(\CIC1Sin/d1_43 ), 
    .C1(\CIC1Sin/n4458 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_43 ), 
    .D0(\CIC1Sin/d1_42 ), .C0(\CIC1Sin/n4459 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_42 ), .DI1(\CIC1Sin/d2_71_N_490_43 ), 
    .DI0(\CIC1Sin/d2_71_N_490_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12215 ), 
    .F0(\CIC1Sin/d2_71_N_490_42 ), .Q0(\CIC1Sin/d2_42 ), 
    .F1(\CIC1Sin/d2_71_N_490_43 ), .Q1(\CIC1Sin/d2_43 ), 
    .FCO(\CIC1Sin/n12216 ));
  CIC1Sin_SLICE_303 \CIC1Sin/SLICE_303 ( .D1(\CIC1Sin/d1_41 ), 
    .C1(\CIC1Sin/n4460 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_41 ), 
    .D0(\CIC1Sin/d1_40 ), .C0(\CIC1Sin/n4461 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_40 ), .DI1(\CIC1Sin/d2_71_N_490_41 ), 
    .DI0(\CIC1Sin/d2_71_N_490_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12214 ), 
    .F0(\CIC1Sin/d2_71_N_490_40 ), .Q0(\CIC1Sin/d2_40 ), 
    .F1(\CIC1Sin/d2_71_N_490_41 ), .Q1(\CIC1Sin/d2_41 ), 
    .FCO(\CIC1Sin/n12215 ));
  CIC1Sin_SLICE_304 \CIC1Sin/SLICE_304 ( .D1(\CIC1Sin/d1_39 ), 
    .C1(\CIC1Sin/n4462 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_39 ), 
    .D0(\CIC1Sin/d1_38 ), .C0(\CIC1Sin/n4463 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_38 ), .DI1(\CIC1Sin/d2_71_N_490_39 ), 
    .DI0(\CIC1Sin/d2_71_N_490_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12213 ), 
    .F0(\CIC1Sin/d2_71_N_490_38 ), .Q0(\CIC1Sin/d2_38 ), 
    .F1(\CIC1Sin/d2_71_N_490_39 ), .Q1(\CIC1Sin/d2_39 ), 
    .FCO(\CIC1Sin/n12214 ));
  CIC1Sin_SLICE_305 \CIC1Sin/SLICE_305 ( .D1(\CIC1Sin/d1_37 ), 
    .C1(\CIC1Sin/n4464 ), .B1(\CIC1Sin/n4428 ), .A1(\CIC1Sin/d2_37 ), 
    .D0(\CIC1Sin/d1_36 ), .C0(\CIC1Sin/n4465 ), .B0(\CIC1Sin/n4428 ), 
    .A0(\CIC1Sin/d2_36 ), .DI1(\CIC1Sin/d2_71_N_490_37 ), 
    .DI0(\CIC1Sin/d2_71_N_490_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12212 ), 
    .F0(\CIC1Sin/d2_71_N_490_36 ), .Q0(\CIC1Sin/d2_36 ), 
    .F1(\CIC1Sin/d2_71_N_490_37 ), .Q1(\CIC1Sin/d2_37 ), 
    .FCO(\CIC1Sin/n12213 ));
  CIC1Sin_SLICE_306 \CIC1Sin/SLICE_306 ( .A1(\CIC1Sin/n4428 ), 
    .FCO(\CIC1Sin/n12212 ));
  CIC1Sin_SLICE_307 \CIC1Sin/SLICE_307 ( .D1(\CIC1Sin/d8_37 ), 
    .C1(\CIC1Sin/n5832 ), .B1(\CIC1Sin/n5796 ), .A1(\CIC1Sin/d_d8_37 ), 
    .D0(\CIC1Sin/d8_36 ), .C0(\CIC1Sin/n5833 ), .B0(\CIC1Sin/n5796 ), 
    .A0(\CIC1Sin/d_d8_36 ), .DI1(\CIC1Sin/d9_71_N_1675_37 ), 
    .DI0(\CIC1Sin/d9_71_N_1675_36 ), .CE(\CIC1Sin/osc_clk_enable_597 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11844 ), .F0(\CIC1Sin/d9_71_N_1675_36 ), 
    .Q0(\CIC1Sin/d9_36 ), .F1(\CIC1Sin/d9_71_N_1675_37 ), .Q1(\CIC1Sin/d9_37 ), 
    .FCO(\CIC1Sin/n11845 ));
  CIC1Sin_SLICE_308 \CIC1Sin/SLICE_308 ( .B1(\CIC1Sin/d_d9_62 ), 
    .A1(\CIC1Sin/d9_62 ), .B0(\CIC1Sin/d_d9_61 ), .A0(\CIC1Sin/d9_61 ), 
    .FCI(\CIC1Sin/n11835 ), .F0(\CIC1Sin/n5960 ), .F1(\CIC1Sin/n5959 ), 
    .FCO(\CIC1Sin/n11836 ));
  CIC1Sin_SLICE_309 \CIC1Sin/SLICE_309 ( .B1(\CIC1Sin/d_d9_60 ), 
    .A1(\CIC1Sin/d9_60 ), .B0(\CIC1Sin/d_d9_59 ), .A0(\CIC1Sin/d9_59 ), 
    .FCI(\CIC1Sin/n11834 ), .F0(\CIC1Sin/n5962 ), .F1(\CIC1Sin/n5961 ), 
    .FCO(\CIC1Sin/n11835 ));
  CIC1Sin_SLICE_310 \CIC1Sin/SLICE_310 ( .B1(\CIC1Sin/d_d9_58 ), 
    .A1(\CIC1Sin/d9_58 ), .B0(\CIC1Sin/d_d9_57 ), .A0(\CIC1Sin/d9_57 ), 
    .FCI(\CIC1Sin/n11833 ), .F0(\CIC1Sin/n5964 ), .F1(\CIC1Sin/n5963 ), 
    .FCO(\CIC1Sin/n11834 ));
  CIC1Sin_SLICE_311 \CIC1Sin/SLICE_311 ( .B1(\CIC1Sin/d3_71 ), 
    .A1(\CIC1Sin/d2_71 ), .B0(\CIC1Sin/d3_70 ), .A0(\CIC1Sin/d2_70 ), 
    .FCI(\CIC1Sin/n12207 ), .F0(\CIC1Sin/n4583 ), .F1(\CIC1Sin/n4582 ));
  CIC1Sin_SLICE_312 \CIC1Sin/SLICE_312 ( .B1(\CIC1Sin/d3_69 ), 
    .A1(\CIC1Sin/d2_69 ), .B0(\CIC1Sin/d3_68 ), .A0(\CIC1Sin/d2_68 ), 
    .FCI(\CIC1Sin/n12206 ), .F0(\CIC1Sin/n4585 ), .F1(\CIC1Sin/n4584 ), 
    .FCO(\CIC1Sin/n12207 ));
  CIC1Sin_SLICE_313 \CIC1Sin/SLICE_313 ( .B0(\CIC1Sin/d_d7_71 ), 
    .A0(\CIC1Sin/d7_71 ), .FCI(\CIC1Sin/n11427 ), .F0(\CIC1Sin/n6862 ));
  CIC1Sin_SLICE_314 \CIC1Sin/SLICE_314 ( .B1(\CIC1Sin/d_d7_70 ), 
    .A1(\CIC1Sin/d7_70 ), .B0(\CIC1Sin/d_d7_69 ), .A0(\CIC1Sin/d7_69 ), 
    .FCI(\CIC1Sin/n11426 ), .F0(\CIC1Sin/n6864 ), .F1(\CIC1Sin/n6863 ), 
    .FCO(\CIC1Sin/n11427 ));
  CIC1Sin_SLICE_315 \CIC1Sin/SLICE_315 ( .B1(\CIC1Sin/d_d7_68 ), 
    .A1(\CIC1Sin/d7_68 ), .B0(\CIC1Sin/d_d7_67 ), .A0(\CIC1Sin/d7_67 ), 
    .FCI(\CIC1Sin/n11425 ), .F0(\CIC1Sin/n6866 ), .F1(\CIC1Sin/n6865 ), 
    .FCO(\CIC1Sin/n11426 ));
  CIC1Sin_SLICE_316 \CIC1Sin/SLICE_316 ( .B1(\CIC1Sin/d_d7_66 ), 
    .A1(\CIC1Sin/d7_66 ), .B0(\CIC1Sin/d_d7_65 ), .A0(\CIC1Sin/d7_65 ), 
    .FCI(\CIC1Sin/n11424 ), .F0(\CIC1Sin/n6868 ), .F1(\CIC1Sin/n6867 ), 
    .FCO(\CIC1Sin/n11425 ));
  CIC1Sin_SLICE_317 \CIC1Sin/SLICE_317 ( .B1(\CIC1Sin/d_d7_64 ), 
    .A1(\CIC1Sin/d7_64 ), .B0(\CIC1Sin/d_d7_63 ), .A0(\CIC1Sin/d7_63 ), 
    .FCI(\CIC1Sin/n11423 ), .F0(\CIC1Sin/n6870 ), .F1(\CIC1Sin/n6869 ), 
    .FCO(\CIC1Sin/n11424 ));
  CIC1Sin_SLICE_318 \CIC1Sin/SLICE_318 ( .B1(\CIC1Sin/d_d7_62 ), 
    .A1(\CIC1Sin/d7_62 ), .B0(\CIC1Sin/d_d7_61 ), .A0(\CIC1Sin/d7_61 ), 
    .FCI(\CIC1Sin/n11422 ), .F0(\CIC1Sin/n6872 ), .F1(\CIC1Sin/n6871 ), 
    .FCO(\CIC1Sin/n11423 ));
  CIC1Sin_SLICE_319 \CIC1Sin/SLICE_319 ( .B1(\CIC1Sin/d_d7_60 ), 
    .A1(\CIC1Sin/d7_60 ), .B0(\CIC1Sin/d_d7_59 ), .A0(\CIC1Sin/d7_59 ), 
    .FCI(\CIC1Sin/n11421 ), .F0(\CIC1Sin/n6874 ), .F1(\CIC1Sin/n6873 ), 
    .FCO(\CIC1Sin/n11422 ));
  CIC1Sin_SLICE_320 \CIC1Sin/SLICE_320 ( .B1(\CIC1Sin/d_d7_58 ), 
    .A1(\CIC1Sin/d7_58 ), .B0(\CIC1Sin/d_d7_57 ), .A0(\CIC1Sin/d7_57 ), 
    .FCI(\CIC1Sin/n11420 ), .F0(\CIC1Sin/n6876 ), .F1(\CIC1Sin/n6875 ), 
    .FCO(\CIC1Sin/n11421 ));
  CIC1Sin_SLICE_321 \CIC1Sin/SLICE_321 ( .B1(\CIC1Sin/d_d7_56 ), 
    .A1(\CIC1Sin/d7_56 ), .B0(\CIC1Sin/d_d7_55 ), .A0(\CIC1Sin/d7_55 ), 
    .FCI(\CIC1Sin/n11419 ), .F0(\CIC1Sin/n6878 ), .F1(\CIC1Sin/n6877 ), 
    .FCO(\CIC1Sin/n11420 ));
  CIC1Sin_SLICE_322 \CIC1Sin/SLICE_322 ( .B1(\CIC1Sin/d_d7_54 ), 
    .A1(\CIC1Sin/d7_54 ), .B0(\CIC1Sin/d_d7_53 ), .A0(\CIC1Sin/d7_53 ), 
    .FCI(\CIC1Sin/n11418 ), .F0(\CIC1Sin/n6880 ), .F1(\CIC1Sin/n6879 ), 
    .FCO(\CIC1Sin/n11419 ));
  CIC1Sin_SLICE_323 \CIC1Sin/SLICE_323 ( .B1(\CIC1Sin/d_d7_52 ), 
    .A1(\CIC1Sin/d7_52 ), .B0(\CIC1Sin/d_d7_51 ), .A0(\CIC1Sin/d7_51 ), 
    .FCI(\CIC1Sin/n11417 ), .F0(\CIC1Sin/n6882 ), .F1(\CIC1Sin/n6881 ), 
    .FCO(\CIC1Sin/n11418 ));
  CIC1Sin_SLICE_324 \CIC1Sin/SLICE_324 ( .B1(\CIC1Sin/d_d7_50 ), 
    .A1(\CIC1Sin/d7_50 ), .B0(\CIC1Sin/d_d7_49 ), .A0(\CIC1Sin/d7_49 ), 
    .FCI(\CIC1Sin/n11416 ), .F0(\CIC1Sin/n6884 ), .F1(\CIC1Sin/n6883 ), 
    .FCO(\CIC1Sin/n11417 ));
  CIC1Sin_SLICE_325 \CIC1Sin/SLICE_325 ( .B1(\CIC1Sin/d_d7_48 ), 
    .A1(\CIC1Sin/d7_48 ), .B0(\CIC1Sin/d_d7_47 ), .A0(\CIC1Sin/d7_47 ), 
    .FCI(\CIC1Sin/n11415 ), .F0(\CIC1Sin/n6886 ), .F1(\CIC1Sin/n6885 ), 
    .FCO(\CIC1Sin/n11416 ));
  CIC1Sin_SLICE_326 \CIC1Sin/SLICE_326 ( .B1(\CIC1Sin/d_d7_46 ), 
    .A1(\CIC1Sin/d7_46 ), .B0(\CIC1Sin/d_d7_45 ), .A0(\CIC1Sin/d7_45 ), 
    .FCI(\CIC1Sin/n11414 ), .F0(\CIC1Sin/n6888 ), .F1(\CIC1Sin/n6887 ), 
    .FCO(\CIC1Sin/n11415 ));
  CIC1Sin_SLICE_327 \CIC1Sin/SLICE_327 ( .B1(\CIC1Sin/d_d7_44 ), 
    .A1(\CIC1Sin/d7_44 ), .B0(\CIC1Sin/d_d7_43 ), .A0(\CIC1Sin/d7_43 ), 
    .FCI(\CIC1Sin/n11413 ), .F0(\CIC1Sin/n6890 ), .F1(\CIC1Sin/n6889 ), 
    .FCO(\CIC1Sin/n11414 ));
  CIC1Sin_SLICE_328 \CIC1Sin/SLICE_328 ( .B1(\CIC1Sin/d_d7_42 ), 
    .A1(\CIC1Sin/d7_42 ), .B0(\CIC1Sin/d_d7_41 ), .A0(\CIC1Sin/d7_41 ), 
    .FCI(\CIC1Sin/n11412 ), .F0(\CIC1Sin/n6892 ), .F1(\CIC1Sin/n6891 ), 
    .FCO(\CIC1Sin/n11413 ));
  CIC1Sin_SLICE_329 \CIC1Sin/SLICE_329 ( .B1(\CIC1Sin/d_d7_40 ), 
    .A1(\CIC1Sin/d7_40 ), .B0(\CIC1Sin/d_d7_39 ), .A0(\CIC1Sin/d7_39 ), 
    .FCI(\CIC1Sin/n11411 ), .F0(\CIC1Sin/n6894 ), .F1(\CIC1Sin/n6893 ), 
    .FCO(\CIC1Sin/n11412 ));
  CIC1Sin_SLICE_330 \CIC1Sin/SLICE_330 ( .B1(\CIC1Sin/d_d7_38 ), 
    .A1(\CIC1Sin/d7_38 ), .B0(\CIC1Sin/d_d7_37 ), .A0(\CIC1Sin/d7_37 ), 
    .FCI(\CIC1Sin/n11410 ), .F0(\CIC1Sin/n6896 ), .F1(\CIC1Sin/n6895 ), 
    .FCO(\CIC1Sin/n11411 ));
  CIC1Sin_SLICE_331 \CIC1Sin/SLICE_331 ( .B1(\CIC1Sin/d_d7_36 ), 
    .A1(\CIC1Sin/d7_36 ), .F1(\CIC1Sin/n6897 ), .FCO(\CIC1Sin/n11410 ));
  CIC1Sin_SLICE_332 \CIC1Sin/SLICE_332 ( .D1(\CIC1Sin/d7_71 ), 
    .C1(\CIC1Sin/n6862 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_71 ), 
    .D0(\CIC1Sin/d7_70 ), .C0(\CIC1Sin/n6863 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_70 ), .DI1(\CIC1Sin/d8_71_N_1603_71 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_70 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11408 ), .F0(\CIC1Sin/d8_71_N_1603_70 ), 
    .Q0(\CIC1Sin/d8_70 ), .F1(\CIC1Sin/d8_71_N_1603_71 ), .Q1(\CIC1Sin/d8_71 ));
  CIC1Sin_SLICE_333 \CIC1Sin/SLICE_333 ( .D1(\CIC1Sin/d7_69 ), 
    .C1(\CIC1Sin/n6864 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_69 ), 
    .D0(\CIC1Sin/d7_68 ), .C0(\CIC1Sin/n6865 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_68 ), .DI1(\CIC1Sin/d8_71_N_1603_69 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_68 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11407 ), .F0(\CIC1Sin/d8_71_N_1603_68 ), 
    .Q0(\CIC1Sin/d8_68 ), .F1(\CIC1Sin/d8_71_N_1603_69 ), .Q1(\CIC1Sin/d8_69 ), 
    .FCO(\CIC1Sin/n11408 ));
  CIC1Sin_SLICE_334 \CIC1Sin/SLICE_334 ( .D1(\CIC1Sin/d7_67 ), 
    .C1(\CIC1Sin/n6866 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_67 ), 
    .D0(\CIC1Sin/d7_66 ), .C0(\CIC1Sin/n6867 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_66 ), .DI1(\CIC1Sin/d8_71_N_1603_67 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_66 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11406 ), .F0(\CIC1Sin/d8_71_N_1603_66 ), 
    .Q0(\CIC1Sin/d8_66 ), .F1(\CIC1Sin/d8_71_N_1603_67 ), .Q1(\CIC1Sin/d8_67 ), 
    .FCO(\CIC1Sin/n11407 ));
  CIC1Sin_SLICE_335 \CIC1Sin/SLICE_335 ( .D1(\CIC1Sin/d7_65 ), 
    .C1(\CIC1Sin/n6868 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_65 ), 
    .D0(\CIC1Sin/d7_64 ), .C0(\CIC1Sin/n6869 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_64 ), .DI1(\CIC1Sin/d8_71_N_1603_65 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_64 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11405 ), .F0(\CIC1Sin/d8_71_N_1603_64 ), 
    .Q0(\CIC1Sin/d8_64 ), .F1(\CIC1Sin/d8_71_N_1603_65 ), .Q1(\CIC1Sin/d8_65 ), 
    .FCO(\CIC1Sin/n11406 ));
  CIC1Sin_SLICE_336 \CIC1Sin/SLICE_336 ( .D1(\CIC1Sin/d7_63 ), 
    .C1(\CIC1Sin/n6870 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_63 ), 
    .D0(\CIC1Sin/d7_62 ), .C0(\CIC1Sin/n6871 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_62 ), .DI1(\CIC1Sin/d8_71_N_1603_63 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_62 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11404 ), .F0(\CIC1Sin/d8_71_N_1603_62 ), 
    .Q0(\CIC1Sin/d8_62 ), .F1(\CIC1Sin/d8_71_N_1603_63 ), .Q1(\CIC1Sin/d8_63 ), 
    .FCO(\CIC1Sin/n11405 ));
  CIC1Sin_SLICE_337 \CIC1Sin/SLICE_337 ( .D1(\CIC1Sin/d7_61 ), 
    .C1(\CIC1Sin/n6872 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_61 ), 
    .D0(\CIC1Sin/d7_60 ), .C0(\CIC1Sin/n6873 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_60 ), .DI1(\CIC1Sin/d8_71_N_1603_61 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_60 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11403 ), .F0(\CIC1Sin/d8_71_N_1603_60 ), 
    .Q0(\CIC1Sin/d8_60 ), .F1(\CIC1Sin/d8_71_N_1603_61 ), .Q1(\CIC1Sin/d8_61 ), 
    .FCO(\CIC1Sin/n11404 ));
  CIC1Sin_SLICE_338 \CIC1Sin/SLICE_338 ( .D1(\CIC1Sin/d7_59 ), 
    .C1(\CIC1Sin/n6874 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_59 ), 
    .D0(\CIC1Sin/d7_58 ), .C0(\CIC1Sin/n6875 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_58 ), .DI1(\CIC1Sin/d8_71_N_1603_59 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_58 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11402 ), .F0(\CIC1Sin/d8_71_N_1603_58 ), 
    .Q0(\CIC1Sin/d8_58 ), .F1(\CIC1Sin/d8_71_N_1603_59 ), .Q1(\CIC1Sin/d8_59 ), 
    .FCO(\CIC1Sin/n11403 ));
  CIC1Sin_SLICE_339 \CIC1Sin/SLICE_339 ( .D1(\CIC1Sin/d7_57 ), 
    .C1(\CIC1Sin/n6876 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_57 ), 
    .D0(\CIC1Sin/d7_56 ), .C0(\CIC1Sin/n6877 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_56 ), .DI1(\CIC1Sin/d8_71_N_1603_57 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_56 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11401 ), .F0(\CIC1Sin/d8_71_N_1603_56 ), 
    .Q0(\CIC1Sin/d8_56 ), .F1(\CIC1Sin/d8_71_N_1603_57 ), .Q1(\CIC1Sin/d8_57 ), 
    .FCO(\CIC1Sin/n11402 ));
  CIC1Sin_SLICE_340 \CIC1Sin/SLICE_340 ( .D1(\CIC1Sin/d7_55 ), 
    .C1(\CIC1Sin/n6878 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_55 ), 
    .D0(\CIC1Sin/d7_54 ), .C0(\CIC1Sin/n6879 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_54 ), .DI1(\CIC1Sin/d8_71_N_1603_55 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_54 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11400 ), .F0(\CIC1Sin/d8_71_N_1603_54 ), 
    .Q0(\CIC1Sin/d8_54 ), .F1(\CIC1Sin/d8_71_N_1603_55 ), .Q1(\CIC1Sin/d8_55 ), 
    .FCO(\CIC1Sin/n11401 ));
  CIC1Sin_SLICE_341 \CIC1Sin/SLICE_341 ( .D1(\CIC1Sin/d7_53 ), 
    .C1(\CIC1Sin/n6880 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_53 ), 
    .D0(\CIC1Sin/d7_52 ), .C0(\CIC1Sin/n6881 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_52 ), .DI1(\CIC1Sin/d8_71_N_1603_53 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_52 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11399 ), .F0(\CIC1Sin/d8_71_N_1603_52 ), 
    .Q0(\CIC1Sin/d8_52 ), .F1(\CIC1Sin/d8_71_N_1603_53 ), .Q1(\CIC1Sin/d8_53 ), 
    .FCO(\CIC1Sin/n11400 ));
  CIC1Sin_SLICE_342 \CIC1Sin/SLICE_342 ( .D1(\CIC1Sin/d7_51 ), 
    .C1(\CIC1Sin/n6882 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_51 ), 
    .D0(\CIC1Sin/d7_50 ), .C0(\CIC1Sin/n6883 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_50 ), .DI1(\CIC1Sin/d8_71_N_1603_51 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_50 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11398 ), .F0(\CIC1Sin/d8_71_N_1603_50 ), 
    .Q0(\CIC1Sin/d8_50 ), .F1(\CIC1Sin/d8_71_N_1603_51 ), .Q1(\CIC1Sin/d8_51 ), 
    .FCO(\CIC1Sin/n11399 ));
  CIC1Sin_SLICE_343 \CIC1Sin/SLICE_343 ( .D1(\CIC1Sin/d7_49 ), 
    .C1(\CIC1Sin/n6884 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_49 ), 
    .D0(\CIC1Sin/d7_48 ), .C0(\CIC1Sin/n6885 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_48 ), .DI1(\CIC1Sin/d8_71_N_1603_49 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_48 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11397 ), .F0(\CIC1Sin/d8_71_N_1603_48 ), 
    .Q0(\CIC1Sin/d8_48 ), .F1(\CIC1Sin/d8_71_N_1603_49 ), .Q1(\CIC1Sin/d8_49 ), 
    .FCO(\CIC1Sin/n11398 ));
  CIC1Sin_SLICE_344 \CIC1Sin/SLICE_344 ( .D1(\CIC1Sin/d7_47 ), 
    .C1(\CIC1Sin/n6886 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_47 ), 
    .D0(\CIC1Sin/d7_46 ), .C0(\CIC1Sin/n6887 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_46 ), .DI1(\CIC1Sin/d8_71_N_1603_47 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_46 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11396 ), .F0(\CIC1Sin/d8_71_N_1603_46 ), 
    .Q0(\CIC1Sin/d8_46 ), .F1(\CIC1Sin/d8_71_N_1603_47 ), .Q1(\CIC1Sin/d8_47 ), 
    .FCO(\CIC1Sin/n11397 ));
  CIC1Sin_SLICE_345 \CIC1Sin/SLICE_345 ( .D1(\CIC1Sin/d7_45 ), 
    .C1(\CIC1Sin/n6888 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_45 ), 
    .D0(\CIC1Sin/d7_44 ), .C0(\CIC1Sin/n6889 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_44 ), .DI1(\CIC1Sin/d8_71_N_1603_45 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_44 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11395 ), .F0(\CIC1Sin/d8_71_N_1603_44 ), 
    .Q0(\CIC1Sin/d8_44 ), .F1(\CIC1Sin/d8_71_N_1603_45 ), .Q1(\CIC1Sin/d8_45 ), 
    .FCO(\CIC1Sin/n11396 ));
  CIC1Sin_SLICE_346 \CIC1Sin/SLICE_346 ( .D1(\CIC1Sin/d7_43 ), 
    .C1(\CIC1Sin/n6890 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_43 ), 
    .D0(\CIC1Sin/d7_42 ), .C0(\CIC1Sin/n6891 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_42 ), .DI1(\CIC1Sin/d8_71_N_1603_43 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_42 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11394 ), .F0(\CIC1Sin/d8_71_N_1603_42 ), 
    .Q0(\CIC1Sin/d8_42 ), .F1(\CIC1Sin/d8_71_N_1603_43 ), .Q1(\CIC1Sin/d8_43 ), 
    .FCO(\CIC1Sin/n11395 ));
  CIC1Sin_SLICE_347 \CIC1Sin/SLICE_347 ( .D1(\CIC1Sin/d7_41 ), 
    .C1(\CIC1Sin/n6892 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_41 ), 
    .D0(\CIC1Sin/d7_40 ), .C0(\CIC1Sin/n6893 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_40 ), .DI1(\CIC1Sin/d8_71_N_1603_41 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_40 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11393 ), .F0(\CIC1Sin/d8_71_N_1603_40 ), 
    .Q0(\CIC1Sin/d8_40 ), .F1(\CIC1Sin/d8_71_N_1603_41 ), .Q1(\CIC1Sin/d8_41 ), 
    .FCO(\CIC1Sin/n11394 ));
  CIC1Sin_SLICE_348 \CIC1Sin/SLICE_348 ( .D1(\CIC1Sin/d7_39 ), 
    .C1(\CIC1Sin/n6894 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_39 ), 
    .D0(\CIC1Sin/d7_38 ), .C0(\CIC1Sin/n6895 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_38 ), .DI1(\CIC1Sin/d8_71_N_1603_39 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_38 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11392 ), .F0(\CIC1Sin/d8_71_N_1603_38 ), 
    .Q0(\CIC1Sin/d8_38 ), .F1(\CIC1Sin/d8_71_N_1603_39 ), .Q1(\CIC1Sin/d8_39 ), 
    .FCO(\CIC1Sin/n11393 ));
  CIC1Sin_SLICE_349 \CIC1Sin/SLICE_349 ( .D1(\CIC1Sin/d7_37 ), 
    .C1(\CIC1Sin/n6896 ), .B1(\CIC1Sin/n6860 ), .A1(\CIC1Sin/d_d7_37 ), 
    .D0(\CIC1Sin/d7_36 ), .C0(\CIC1Sin/n6897 ), .B0(\CIC1Sin/n6860 ), 
    .A0(\CIC1Sin/d_d7_36 ), .DI1(\CIC1Sin/d8_71_N_1603_37 ), 
    .DI0(\CIC1Sin/d8_71_N_1603_36 ), .CE(\CIC1Sin/osc_clk_enable_497 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11391 ), .F0(\CIC1Sin/d8_71_N_1603_36 ), 
    .Q0(\CIC1Sin/d8_36 ), .F1(\CIC1Sin/d8_71_N_1603_37 ), .Q1(\CIC1Sin/d8_37 ), 
    .FCO(\CIC1Sin/n11392 ));
  CIC1Sin_SLICE_350 \CIC1Sin/SLICE_350 ( .A1(\CIC1Sin/n6860 ), 
    .FCO(\CIC1Sin/n11391 ));
  CIC1Sin_SLICE_351 \CIC1Sin/SLICE_351 ( .B0(\CIC1Sin/d_d6_71 ), 
    .A0(\CIC1Sin/d6_71 ), .FCI(\CIC1Sin/n11387 ), .F0(\CIC1Sin/n7014 ));
  CIC1Sin_SLICE_352 \CIC1Sin/SLICE_352 ( .B1(\CIC1Sin/d_d6_70 ), 
    .A1(\CIC1Sin/d6_70 ), .B0(\CIC1Sin/d_d6_69 ), .A0(\CIC1Sin/d6_69 ), 
    .FCI(\CIC1Sin/n11386 ), .F0(\CIC1Sin/n7016 ), .F1(\CIC1Sin/n7015 ), 
    .FCO(\CIC1Sin/n11387 ));
  CIC1Sin_SLICE_353 \CIC1Sin/SLICE_353 ( .B1(\CIC1Sin/d_d6_68 ), 
    .A1(\CIC1Sin/d6_68 ), .B0(\CIC1Sin/d_d6_67 ), .A0(\CIC1Sin/d6_67 ), 
    .FCI(\CIC1Sin/n11385 ), .F0(\CIC1Sin/n7018 ), .F1(\CIC1Sin/n7017 ), 
    .FCO(\CIC1Sin/n11386 ));
  CIC1Sin_SLICE_354 \CIC1Sin/SLICE_354 ( .B1(\CIC1Sin/d_d6_66 ), 
    .A1(\CIC1Sin/d6_66 ), .B0(\CIC1Sin/d_d6_65 ), .A0(\CIC1Sin/d6_65 ), 
    .FCI(\CIC1Sin/n11384 ), .F0(\CIC1Sin/n7020 ), .F1(\CIC1Sin/n7019 ), 
    .FCO(\CIC1Sin/n11385 ));
  CIC1Sin_SLICE_355 \CIC1Sin/SLICE_355 ( .B1(\CIC1Sin/d_d6_64 ), 
    .A1(\CIC1Sin/d6_64 ), .B0(\CIC1Sin/d_d6_63 ), .A0(\CIC1Sin/d6_63 ), 
    .FCI(\CIC1Sin/n11383 ), .F0(\CIC1Sin/n7022 ), .F1(\CIC1Sin/n7021 ), 
    .FCO(\CIC1Sin/n11384 ));
  CIC1Sin_SLICE_356 \CIC1Sin/SLICE_356 ( .B1(\CIC1Sin/d_d6_62 ), 
    .A1(\CIC1Sin/d6_62 ), .B0(\CIC1Sin/d_d6_61 ), .A0(\CIC1Sin/d6_61 ), 
    .FCI(\CIC1Sin/n11382 ), .F0(\CIC1Sin/n7024 ), .F1(\CIC1Sin/n7023 ), 
    .FCO(\CIC1Sin/n11383 ));
  CIC1Sin_SLICE_357 \CIC1Sin/SLICE_357 ( .B1(\CIC1Sin/d_d6_60 ), 
    .A1(\CIC1Sin/d6_60 ), .B0(\CIC1Sin/d_d6_59 ), .A0(\CIC1Sin/d6_59 ), 
    .FCI(\CIC1Sin/n11381 ), .F0(\CIC1Sin/n7026 ), .F1(\CIC1Sin/n7025 ), 
    .FCO(\CIC1Sin/n11382 ));
  CIC1Sin_SLICE_358 \CIC1Sin/SLICE_358 ( .B1(\CIC1Sin/d_d6_58 ), 
    .A1(\CIC1Sin/d6_58 ), .B0(\CIC1Sin/d_d6_57 ), .A0(\CIC1Sin/d6_57 ), 
    .FCI(\CIC1Sin/n11380 ), .F0(\CIC1Sin/n7028 ), .F1(\CIC1Sin/n7027 ), 
    .FCO(\CIC1Sin/n11381 ));
  CIC1Sin_SLICE_359 \CIC1Sin/SLICE_359 ( .B1(\CIC1Sin/d_d6_56 ), 
    .A1(\CIC1Sin/d6_56 ), .B0(\CIC1Sin/d_d6_55 ), .A0(\CIC1Sin/d6_55 ), 
    .FCI(\CIC1Sin/n11379 ), .F0(\CIC1Sin/n7030 ), .F1(\CIC1Sin/n7029 ), 
    .FCO(\CIC1Sin/n11380 ));
  CIC1Sin_SLICE_360 \CIC1Sin/SLICE_360 ( .B1(\CIC1Sin/d_d6_54 ), 
    .A1(\CIC1Sin/d6_54 ), .B0(\CIC1Sin/d_d6_53 ), .A0(\CIC1Sin/d6_53 ), 
    .FCI(\CIC1Sin/n11378 ), .F0(\CIC1Sin/n7032 ), .F1(\CIC1Sin/n7031 ), 
    .FCO(\CIC1Sin/n11379 ));
  CIC1Sin_SLICE_361 \CIC1Sin/SLICE_361 ( .B1(\CIC1Sin/d_d6_52 ), 
    .A1(\CIC1Sin/d6_52 ), .B0(\CIC1Sin/d_d6_51 ), .A0(\CIC1Sin/d6_51 ), 
    .FCI(\CIC1Sin/n11377 ), .F0(\CIC1Sin/n7034 ), .F1(\CIC1Sin/n7033 ), 
    .FCO(\CIC1Sin/n11378 ));
  CIC1Sin_SLICE_362 \CIC1Sin/SLICE_362 ( .B1(\CIC1Sin/d_d6_50 ), 
    .A1(\CIC1Sin/d6_50 ), .B0(\CIC1Sin/d_d6_49 ), .A0(\CIC1Sin/d6_49 ), 
    .FCI(\CIC1Sin/n11376 ), .F0(\CIC1Sin/n7036 ), .F1(\CIC1Sin/n7035 ), 
    .FCO(\CIC1Sin/n11377 ));
  CIC1Sin_SLICE_363 \CIC1Sin/SLICE_363 ( .B1(\CIC1Sin/d_d6_48 ), 
    .A1(\CIC1Sin/d6_48 ), .B0(\CIC1Sin/d_d6_47 ), .A0(\CIC1Sin/d6_47 ), 
    .FCI(\CIC1Sin/n11375 ), .F0(\CIC1Sin/n7038 ), .F1(\CIC1Sin/n7037 ), 
    .FCO(\CIC1Sin/n11376 ));
  CIC1Sin_SLICE_364 \CIC1Sin/SLICE_364 ( .B1(\CIC1Sin/d_d6_46 ), 
    .A1(\CIC1Sin/d6_46 ), .B0(\CIC1Sin/d_d6_45 ), .A0(\CIC1Sin/d6_45 ), 
    .FCI(\CIC1Sin/n11374 ), .F0(\CIC1Sin/n7040 ), .F1(\CIC1Sin/n7039 ), 
    .FCO(\CIC1Sin/n11375 ));
  CIC1Sin_SLICE_365 \CIC1Sin/SLICE_365 ( .B1(\CIC1Sin/d_d6_44 ), 
    .A1(\CIC1Sin/d6_44 ), .B0(\CIC1Sin/d_d6_43 ), .A0(\CIC1Sin/d6_43 ), 
    .FCI(\CIC1Sin/n11373 ), .F0(\CIC1Sin/n7042 ), .F1(\CIC1Sin/n7041 ), 
    .FCO(\CIC1Sin/n11374 ));
  CIC1Sin_SLICE_366 \CIC1Sin/SLICE_366 ( .B1(\CIC1Sin/d_d6_42 ), 
    .A1(\CIC1Sin/d6_42 ), .B0(\CIC1Sin/d_d6_41 ), .A0(\CIC1Sin/d6_41 ), 
    .FCI(\CIC1Sin/n11372 ), .F0(\CIC1Sin/n7044 ), .F1(\CIC1Sin/n7043 ), 
    .FCO(\CIC1Sin/n11373 ));
  CIC1Sin_SLICE_367 \CIC1Sin/SLICE_367 ( .B1(\CIC1Sin/d_d6_40 ), 
    .A1(\CIC1Sin/d6_40 ), .B0(\CIC1Sin/d_d6_39 ), .A0(\CIC1Sin/d6_39 ), 
    .FCI(\CIC1Sin/n11371 ), .F0(\CIC1Sin/n7046 ), .F1(\CIC1Sin/n7045 ), 
    .FCO(\CIC1Sin/n11372 ));
  CIC1Sin_SLICE_368 \CIC1Sin/SLICE_368 ( .B1(\CIC1Sin/d_d6_38 ), 
    .A1(\CIC1Sin/d6_38 ), .B0(\CIC1Sin/d_d6_37 ), .A0(\CIC1Sin/d6_37 ), 
    .FCI(\CIC1Sin/n11370 ), .F0(\CIC1Sin/n7048 ), .F1(\CIC1Sin/n7047 ), 
    .FCO(\CIC1Sin/n11371 ));
  CIC1Sin_SLICE_369 \CIC1Sin/SLICE_369 ( .B1(\CIC1Sin/d_d6_36 ), 
    .A1(\CIC1Sin/d6_36 ), .F1(\CIC1Sin/n7049 ), .FCO(\CIC1Sin/n11370 ));
  CIC1Sin_SLICE_370 \CIC1Sin/SLICE_370 ( .D1(\CIC1Sin/d6_71 ), 
    .C1(\CIC1Sin/n7014 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_71 ), 
    .D0(\CIC1Sin/d6_70 ), .C0(\CIC1Sin/n7015 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_70 ), .DI1(\CIC1Sin/d7_71_N_1531_71 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_70 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11368 ), .F0(\CIC1Sin/d7_71_N_1531_70 ), 
    .Q0(\CIC1Sin/d7_70 ), .F1(\CIC1Sin/d7_71_N_1531_71 ), .Q1(\CIC1Sin/d7_71 ));
  CIC1Sin_SLICE_371 \CIC1Sin/SLICE_371 ( .D1(\CIC1Sin/d6_69 ), 
    .C1(\CIC1Sin/n7016 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_69 ), 
    .D0(\CIC1Sin/d6_68 ), .C0(\CIC1Sin/n7017 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_68 ), .DI1(\CIC1Sin/d7_71_N_1531_69 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_68 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11367 ), .F0(\CIC1Sin/d7_71_N_1531_68 ), 
    .Q0(\CIC1Sin/d7_68 ), .F1(\CIC1Sin/d7_71_N_1531_69 ), .Q1(\CIC1Sin/d7_69 ), 
    .FCO(\CIC1Sin/n11368 ));
  CIC1Sin_SLICE_372 \CIC1Sin/SLICE_372 ( .D1(\CIC1Sin/d6_67 ), 
    .C1(\CIC1Sin/n7018 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_67 ), 
    .D0(\CIC1Sin/d6_66 ), .C0(\CIC1Sin/n7019 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_66 ), .DI1(\CIC1Sin/d7_71_N_1531_67 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_66 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11366 ), .F0(\CIC1Sin/d7_71_N_1531_66 ), 
    .Q0(\CIC1Sin/d7_66 ), .F1(\CIC1Sin/d7_71_N_1531_67 ), .Q1(\CIC1Sin/d7_67 ), 
    .FCO(\CIC1Sin/n11367 ));
  CIC1Sin_SLICE_373 \CIC1Sin/SLICE_373 ( .D1(\CIC1Sin/d6_65 ), 
    .C1(\CIC1Sin/n7020 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_65 ), 
    .D0(\CIC1Sin/d6_64 ), .C0(\CIC1Sin/n7021 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_64 ), .DI1(\CIC1Sin/d7_71_N_1531_65 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_64 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11365 ), .F0(\CIC1Sin/d7_71_N_1531_64 ), 
    .Q0(\CIC1Sin/d7_64 ), .F1(\CIC1Sin/d7_71_N_1531_65 ), .Q1(\CIC1Sin/d7_65 ), 
    .FCO(\CIC1Sin/n11366 ));
  CIC1Sin_SLICE_374 \CIC1Sin/SLICE_374 ( .D1(\CIC1Sin/d6_63 ), 
    .C1(\CIC1Sin/n7022 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_63 ), 
    .D0(\CIC1Sin/d6_62 ), .C0(\CIC1Sin/n7023 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_62 ), .DI1(\CIC1Sin/d7_71_N_1531_63 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_62 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11364 ), .F0(\CIC1Sin/d7_71_N_1531_62 ), 
    .Q0(\CIC1Sin/d7_62 ), .F1(\CIC1Sin/d7_71_N_1531_63 ), .Q1(\CIC1Sin/d7_63 ), 
    .FCO(\CIC1Sin/n11365 ));
  CIC1Sin_SLICE_375 \CIC1Sin/SLICE_375 ( .D1(\CIC1Sin/d6_61 ), 
    .C1(\CIC1Sin/n7024 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_61 ), 
    .D0(\CIC1Sin/d6_60 ), .C0(\CIC1Sin/n7025 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_60 ), .DI1(\CIC1Sin/d7_71_N_1531_61 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_60 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11363 ), .F0(\CIC1Sin/d7_71_N_1531_60 ), 
    .Q0(\CIC1Sin/d7_60 ), .F1(\CIC1Sin/d7_71_N_1531_61 ), .Q1(\CIC1Sin/d7_61 ), 
    .FCO(\CIC1Sin/n11364 ));
  CIC1Sin_SLICE_376 \CIC1Sin/SLICE_376 ( .D1(\CIC1Sin/d6_59 ), 
    .C1(\CIC1Sin/n7026 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_59 ), 
    .D0(\CIC1Sin/d6_58 ), .C0(\CIC1Sin/n7027 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_58 ), .DI1(\CIC1Sin/d7_71_N_1531_59 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_58 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11362 ), .F0(\CIC1Sin/d7_71_N_1531_58 ), 
    .Q0(\CIC1Sin/d7_58 ), .F1(\CIC1Sin/d7_71_N_1531_59 ), .Q1(\CIC1Sin/d7_59 ), 
    .FCO(\CIC1Sin/n11363 ));
  CIC1Sin_SLICE_377 \CIC1Sin/SLICE_377 ( .D1(\CIC1Sin/d6_57 ), 
    .C1(\CIC1Sin/n7028 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_57 ), 
    .D0(\CIC1Sin/d6_56 ), .C0(\CIC1Sin/n7029 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_56 ), .DI1(\CIC1Sin/d7_71_N_1531_57 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_56 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11361 ), .F0(\CIC1Sin/d7_71_N_1531_56 ), 
    .Q0(\CIC1Sin/d7_56 ), .F1(\CIC1Sin/d7_71_N_1531_57 ), .Q1(\CIC1Sin/d7_57 ), 
    .FCO(\CIC1Sin/n11362 ));
  CIC1Sin_SLICE_378 \CIC1Sin/SLICE_378 ( .D1(\CIC1Sin/d6_55 ), 
    .C1(\CIC1Sin/n7030 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_55 ), 
    .D0(\CIC1Sin/d6_54 ), .C0(\CIC1Sin/n7031 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_54 ), .DI1(\CIC1Sin/d7_71_N_1531_55 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_54 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11360 ), .F0(\CIC1Sin/d7_71_N_1531_54 ), 
    .Q0(\CIC1Sin/d7_54 ), .F1(\CIC1Sin/d7_71_N_1531_55 ), .Q1(\CIC1Sin/d7_55 ), 
    .FCO(\CIC1Sin/n11361 ));
  CIC1Sin_SLICE_379 \CIC1Sin/SLICE_379 ( .D1(\CIC1Sin/d6_53 ), 
    .C1(\CIC1Sin/n7032 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_53 ), 
    .D0(\CIC1Sin/d6_52 ), .C0(\CIC1Sin/n7033 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_52 ), .DI1(\CIC1Sin/d7_71_N_1531_53 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_52 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11359 ), .F0(\CIC1Sin/d7_71_N_1531_52 ), 
    .Q0(\CIC1Sin/d7_52 ), .F1(\CIC1Sin/d7_71_N_1531_53 ), .Q1(\CIC1Sin/d7_53 ), 
    .FCO(\CIC1Sin/n11360 ));
  CIC1Sin_SLICE_380 \CIC1Sin/SLICE_380 ( .D1(\CIC1Sin/d6_51 ), 
    .C1(\CIC1Sin/n7034 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_51 ), 
    .D0(\CIC1Sin/d6_50 ), .C0(\CIC1Sin/n7035 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_50 ), .DI1(\CIC1Sin/d7_71_N_1531_51 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_50 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11358 ), .F0(\CIC1Sin/d7_71_N_1531_50 ), 
    .Q0(\CIC1Sin/d7_50 ), .F1(\CIC1Sin/d7_71_N_1531_51 ), .Q1(\CIC1Sin/d7_51 ), 
    .FCO(\CIC1Sin/n11359 ));
  CIC1Sin_SLICE_381 \CIC1Sin/SLICE_381 ( .D1(\CIC1Sin/d6_49 ), 
    .C1(\CIC1Sin/n7036 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_49 ), 
    .D0(\CIC1Sin/d6_48 ), .C0(\CIC1Sin/n7037 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_48 ), .DI1(\CIC1Sin/d7_71_N_1531_49 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_48 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11357 ), .F0(\CIC1Sin/d7_71_N_1531_48 ), 
    .Q0(\CIC1Sin/d7_48 ), .F1(\CIC1Sin/d7_71_N_1531_49 ), .Q1(\CIC1Sin/d7_49 ), 
    .FCO(\CIC1Sin/n11358 ));
  CIC1Sin_SLICE_382 \CIC1Sin/SLICE_382 ( .D1(\CIC1Sin/d6_47 ), 
    .C1(\CIC1Sin/n7038 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_47 ), 
    .D0(\CIC1Sin/d6_46 ), .C0(\CIC1Sin/n7039 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_46 ), .DI1(\CIC1Sin/d7_71_N_1531_47 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_46 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11356 ), .F0(\CIC1Sin/d7_71_N_1531_46 ), 
    .Q0(\CIC1Sin/d7_46 ), .F1(\CIC1Sin/d7_71_N_1531_47 ), .Q1(\CIC1Sin/d7_47 ), 
    .FCO(\CIC1Sin/n11357 ));
  CIC1Sin_SLICE_383 \CIC1Sin/SLICE_383 ( .D1(\CIC1Sin/d6_45 ), 
    .C1(\CIC1Sin/n7040 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_45 ), 
    .D0(\CIC1Sin/d6_44 ), .C0(\CIC1Sin/n7041 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_44 ), .DI1(\CIC1Sin/d7_71_N_1531_45 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_44 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11355 ), .F0(\CIC1Sin/d7_71_N_1531_44 ), 
    .Q0(\CIC1Sin/d7_44 ), .F1(\CIC1Sin/d7_71_N_1531_45 ), .Q1(\CIC1Sin/d7_45 ), 
    .FCO(\CIC1Sin/n11356 ));
  CIC1Sin_SLICE_384 \CIC1Sin/SLICE_384 ( .D1(\CIC1Sin/d6_43 ), 
    .C1(\CIC1Sin/n7042 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_43 ), 
    .D0(\CIC1Sin/d6_42 ), .C0(\CIC1Sin/n7043 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_42 ), .DI1(\CIC1Sin/d7_71_N_1531_43 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_42 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11354 ), .F0(\CIC1Sin/d7_71_N_1531_42 ), 
    .Q0(\CIC1Sin/d7_42 ), .F1(\CIC1Sin/d7_71_N_1531_43 ), .Q1(\CIC1Sin/d7_43 ), 
    .FCO(\CIC1Sin/n11355 ));
  CIC1Sin_SLICE_385 \CIC1Sin/SLICE_385 ( .D1(\CIC1Sin/d6_41 ), 
    .C1(\CIC1Sin/n7044 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_41 ), 
    .D0(\CIC1Sin/d6_40 ), .C0(\CIC1Sin/n7045 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_40 ), .DI1(\CIC1Sin/d7_71_N_1531_41 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_40 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11353 ), .F0(\CIC1Sin/d7_71_N_1531_40 ), 
    .Q0(\CIC1Sin/d7_40 ), .F1(\CIC1Sin/d7_71_N_1531_41 ), .Q1(\CIC1Sin/d7_41 ), 
    .FCO(\CIC1Sin/n11354 ));
  CIC1Sin_SLICE_386 \CIC1Sin/SLICE_386 ( .D1(\CIC1Sin/d6_39 ), 
    .C1(\CIC1Sin/n7046 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_39 ), 
    .D0(\CIC1Sin/d6_38 ), .C0(\CIC1Sin/n7047 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_38 ), .DI1(\CIC1Sin/d7_71_N_1531_39 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_38 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11352 ), .F0(\CIC1Sin/d7_71_N_1531_38 ), 
    .Q0(\CIC1Sin/d7_38 ), .F1(\CIC1Sin/d7_71_N_1531_39 ), .Q1(\CIC1Sin/d7_39 ), 
    .FCO(\CIC1Sin/n11353 ));
  CIC1Sin_SLICE_387 \CIC1Sin/SLICE_387 ( .D1(\CIC1Sin/d6_37 ), 
    .C1(\CIC1Sin/n7048 ), .B1(\CIC1Sin/n7012 ), .A1(\CIC1Sin/d_d6_37 ), 
    .D0(\CIC1Sin/d6_36 ), .C0(\CIC1Sin/n7049 ), .B0(\CIC1Sin/n7012 ), 
    .A0(\CIC1Sin/d_d6_36 ), .DI1(\CIC1Sin/d7_71_N_1531_37 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_36 ), .CE(\CIC1Sin/osc_clk_enable_347 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11351 ), .F0(\CIC1Sin/d7_71_N_1531_36 ), 
    .Q0(\CIC1Sin/d7_36 ), .F1(\CIC1Sin/d7_71_N_1531_37 ), .Q1(\CIC1Sin/d7_37 ), 
    .FCO(\CIC1Sin/n11352 ));
  CIC1Sin_SLICE_388 \CIC1Sin/SLICE_388 ( .A1(\CIC1Sin/n7012 ), 
    .FCO(\CIC1Sin/n11351 ));
  CIC1Sin_SLICE_389 \CIC1Sin/SLICE_389 ( .B0(\CIC1Sin/d_d_tmp_35 ), 
    .A0(\CIC1Sin/d_tmp_35 ), .DI0(\CIC1Sin/d6_71_N_1459_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_197 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11262 ), 
    .F0(\CIC1Sin/d6_71_N_1459_35 ), .Q0(\CIC1Sin/d6_35 ), .F1(\CIC1Sin/n4124 ));
  CIC1Sin_SLICE_390 \CIC1Sin/SLICE_390 ( .B1(\CIC1Sin/d_d_tmp_34 ), 
    .A1(\CIC1Sin/d_tmp_34 ), .B0(\CIC1Sin/d_d_tmp_33 ), 
    .A0(\CIC1Sin/d_tmp_33 ), .DI1(\CIC1Sin/d6_71_N_1459_34 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_33 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11261 ), .F0(\CIC1Sin/d6_71_N_1459_33 ), 
    .Q0(\CIC1Sin/d6_33 ), .F1(\CIC1Sin/d6_71_N_1459_34 ), .Q1(\CIC1Sin/d6_34 ), 
    .FCO(\CIC1Sin/n11262 ));
  CIC1Sin_SLICE_391 \CIC1Sin/SLICE_391 ( .B1(\CIC1Sin/d_d_tmp_32 ), 
    .A1(\CIC1Sin/d_tmp_32 ), .B0(\CIC1Sin/d_d_tmp_31 ), 
    .A0(\CIC1Sin/d_tmp_31 ), .DI1(\CIC1Sin/d6_71_N_1459_32 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_31 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11260 ), .F0(\CIC1Sin/d6_71_N_1459_31 ), 
    .Q0(\CIC1Sin/d6_31 ), .F1(\CIC1Sin/d6_71_N_1459_32 ), .Q1(\CIC1Sin/d6_32 ), 
    .FCO(\CIC1Sin/n11261 ));
  CIC1Sin_SLICE_392 \CIC1Sin/SLICE_392 ( .B1(\CIC1Sin/d_d_tmp_30 ), 
    .A1(\CIC1Sin/d_tmp_30 ), .B0(\CIC1Sin/d_d_tmp_29 ), 
    .A0(\CIC1Sin/d_tmp_29 ), .DI1(\CIC1Sin/d6_71_N_1459_30 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_29 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11259 ), .F0(\CIC1Sin/d6_71_N_1459_29 ), 
    .Q0(\CIC1Sin/d6_29 ), .F1(\CIC1Sin/d6_71_N_1459_30 ), .Q1(\CIC1Sin/d6_30 ), 
    .FCO(\CIC1Sin/n11260 ));
  CIC1Sin_SLICE_393 \CIC1Sin/SLICE_393 ( .B1(\CIC1Sin/d_d_tmp_28 ), 
    .A1(\CIC1Sin/d_tmp_28 ), .B0(\CIC1Sin/d_d_tmp_27 ), 
    .A0(\CIC1Sin/d_tmp_27 ), .DI1(\CIC1Sin/d6_71_N_1459_28 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_27 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11258 ), .F0(\CIC1Sin/d6_71_N_1459_27 ), 
    .Q0(\CIC1Sin/d6_27 ), .F1(\CIC1Sin/d6_71_N_1459_28 ), .Q1(\CIC1Sin/d6_28 ), 
    .FCO(\CIC1Sin/n11259 ));
  CIC1Sin_SLICE_394 \CIC1Sin/SLICE_394 ( .B1(\CIC1Sin/d_d_tmp_26 ), 
    .A1(\CIC1Sin/d_tmp_26 ), .B0(\CIC1Sin/d_d_tmp_25 ), 
    .A0(\CIC1Sin/d_tmp_25 ), .DI1(\CIC1Sin/d6_71_N_1459_26 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_25 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11257 ), .F0(\CIC1Sin/d6_71_N_1459_25 ), 
    .Q0(\CIC1Sin/d6_25 ), .F1(\CIC1Sin/d6_71_N_1459_26 ), .Q1(\CIC1Sin/d6_26 ), 
    .FCO(\CIC1Sin/n11258 ));
  CIC1Sin_SLICE_395 \CIC1Sin/SLICE_395 ( .B1(\CIC1Sin/d_d_tmp_24 ), 
    .A1(\CIC1Sin/d_tmp_24 ), .B0(\CIC1Sin/d_d_tmp_23 ), 
    .A0(\CIC1Sin/d_tmp_23 ), .DI1(\CIC1Sin/d6_71_N_1459_24 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_23 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11256 ), .F0(\CIC1Sin/d6_71_N_1459_23 ), 
    .Q0(\CIC1Sin/d6_23 ), .F1(\CIC1Sin/d6_71_N_1459_24 ), .Q1(\CIC1Sin/d6_24 ), 
    .FCO(\CIC1Sin/n11257 ));
  CIC1Sin_SLICE_396 \CIC1Sin/SLICE_396 ( .B1(\CIC1Sin/d_d_tmp_22 ), 
    .A1(\CIC1Sin/d_tmp_22 ), .B0(\CIC1Sin/d_d_tmp_21 ), 
    .A0(\CIC1Sin/d_tmp_21 ), .DI1(\CIC1Sin/d6_71_N_1459_22 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_21 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11255 ), .F0(\CIC1Sin/d6_71_N_1459_21 ), 
    .Q0(\CIC1Sin/d6_21 ), .F1(\CIC1Sin/d6_71_N_1459_22 ), .Q1(\CIC1Sin/d6_22 ), 
    .FCO(\CIC1Sin/n11256 ));
  CIC1Sin_SLICE_397 \CIC1Sin/SLICE_397 ( .B1(\CIC1Sin/d_d_tmp_20 ), 
    .A1(\CIC1Sin/d_tmp_20 ), .B0(\CIC1Sin/d_d_tmp_19 ), 
    .A0(\CIC1Sin/d_tmp_19 ), .DI0(\CIC1Sin/d6_71_N_1459_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11254 ), 
    .F0(\CIC1Sin/d6_71_N_1459_19 ), .Q0(\CIC1Sin/d6_19 ), 
    .F1(\CIC1Sin/d6_71_N_1459_20 ), .FCO(\CIC1Sin/n11255 ));
  CIC1Sin_SLICE_398 \CIC1Sin/SLICE_398 ( .B1(\CIC1Sin/d_d_tmp_18 ), 
    .A1(\CIC1Sin/d_tmp_18 ), .B0(\CIC1Sin/d_d_tmp_17 ), 
    .A0(\CIC1Sin/d_tmp_17 ), .DI1(\CIC1Sin/d6_71_N_1459_18 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_17 ), .CE(\CIC1Sin/osc_clk_enable_147 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11253 ), .F0(\CIC1Sin/d6_71_N_1459_17 ), 
    .Q0(\CIC1Sin/d6_17 ), .F1(\CIC1Sin/d6_71_N_1459_18 ), .Q1(\CIC1Sin/d6_18 ), 
    .FCO(\CIC1Sin/n11254 ));
  CIC1Sin_SLICE_399 \CIC1Sin/SLICE_399 ( .B1(\CIC1Sin/d_d_tmp_16 ), 
    .A1(\CIC1Sin/d_tmp_16 ), .B0(\CIC1Sin/d_d_tmp_15 ), 
    .A0(\CIC1Sin/d_tmp_15 ), .DI1(\CIC1Sin/d6_71_N_1459_16 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_15 ), .CE(\CIC1Sin/osc_clk_enable_147 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11252 ), .F0(\CIC1Sin/d6_71_N_1459_15 ), 
    .Q0(\CIC1Sin/d6_15 ), .F1(\CIC1Sin/d6_71_N_1459_16 ), .Q1(\CIC1Sin/d6_16 ), 
    .FCO(\CIC1Sin/n11253 ));
  CIC1Sin_SLICE_400 \CIC1Sin/SLICE_400 ( .B1(\CIC1Sin/d_d_tmp_14 ), 
    .A1(\CIC1Sin/d_tmp_14 ), .B0(\CIC1Sin/d_d_tmp_13 ), 
    .A0(\CIC1Sin/d_tmp_13 ), .DI1(\CIC1Sin/d6_71_N_1459_14 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_13 ), .CE(\CIC1Sin/osc_clk_enable_147 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11251 ), .F0(\CIC1Sin/d6_71_N_1459_13 ), 
    .Q0(\CIC1Sin/d6_13 ), .F1(\CIC1Sin/d6_71_N_1459_14 ), .Q1(\CIC1Sin/d6_14 ), 
    .FCO(\CIC1Sin/n11252 ));
  CIC1Sin_SLICE_401 \CIC1Sin/SLICE_401 ( .B1(\CIC1Sin/d_d_tmp_12 ), 
    .A1(\CIC1Sin/d_tmp_12 ), .B0(\CIC1Sin/d_d_tmp_11 ), 
    .A0(\CIC1Sin/d_tmp_11 ), .DI1(\CIC1Sin/d6_71_N_1459_12 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_11 ), .CE(\CIC1Sin/osc_clk_enable_147 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11250 ), .F0(\CIC1Sin/d6_71_N_1459_11 ), 
    .Q0(\CIC1Sin/d6_11 ), .F1(\CIC1Sin/d6_71_N_1459_12 ), .Q1(\CIC1Sin/d6_12 ), 
    .FCO(\CIC1Sin/n11251 ));
  CIC1Sin_SLICE_402 \CIC1Sin/SLICE_402 ( .B1(\CIC1Sin/d_d_tmp_10 ), 
    .A1(\CIC1Sin/d_tmp_10 ), .B0(\CIC1Sin/d_d_tmp_9 ), .A0(\CIC1Sin/d_tmp_9 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_10 ), .DI0(\CIC1Sin/d6_71_N_1459_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11249 ), 
    .F0(\CIC1Sin/d6_71_N_1459_9 ), .Q0(\CIC1Sin/d6_9 ), 
    .F1(\CIC1Sin/d6_71_N_1459_10 ), .Q1(\CIC1Sin/d6_10 ), 
    .FCO(\CIC1Sin/n11250 ));
  CIC1Sin_SLICE_403 \CIC1Sin/SLICE_403 ( .B1(\CIC1Sin/d_d_tmp_8 ), 
    .A1(\CIC1Sin/d_tmp_8 ), .B0(\CIC1Sin/d_d_tmp_7 ), .A0(\CIC1Sin/d_tmp_7 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_8 ), .DI0(\CIC1Sin/d6_71_N_1459_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11248 ), 
    .F0(\CIC1Sin/d6_71_N_1459_7 ), .Q0(\CIC1Sin/d6_7 ), 
    .F1(\CIC1Sin/d6_71_N_1459_8 ), .Q1(\CIC1Sin/d6_8 ), .FCO(\CIC1Sin/n11249 ));
  CIC1Sin_SLICE_404 \CIC1Sin/SLICE_404 ( .B1(\CIC1Sin/d_d_tmp_6 ), 
    .A1(\CIC1Sin/d_tmp_6 ), .B0(\CIC1Sin/d_d_tmp_5 ), .A0(\CIC1Sin/d_tmp_5 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_6 ), .DI0(\CIC1Sin/d6_71_N_1459_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11247 ), 
    .F0(\CIC1Sin/d6_71_N_1459_5 ), .Q0(\CIC1Sin/d6_5 ), 
    .F1(\CIC1Sin/d6_71_N_1459_6 ), .Q1(\CIC1Sin/d6_6 ), .FCO(\CIC1Sin/n11248 ));
  CIC1Sin_SLICE_405 \CIC1Sin/SLICE_405 ( .B1(\CIC1Sin/d_d_tmp_4 ), 
    .A1(\CIC1Sin/d_tmp_4 ), .B0(\CIC1Sin/d_d_tmp_3 ), .A0(\CIC1Sin/d_tmp_3 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_4 ), .DI0(\CIC1Sin/d6_71_N_1459_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11246 ), 
    .F0(\CIC1Sin/d6_71_N_1459_3 ), .Q0(\CIC1Sin/d6_3 ), 
    .F1(\CIC1Sin/d6_71_N_1459_4 ), .Q1(\CIC1Sin/d6_4 ), .FCO(\CIC1Sin/n11247 ));
  CIC1Sin_SLICE_406 \CIC1Sin/SLICE_406 ( .B1(\CIC1Sin/d_d_tmp_2 ), 
    .A1(\CIC1Sin/d_tmp_2 ), .B0(\CIC1Sin/d_d_tmp_1 ), .A0(\CIC1Sin/d_tmp_1 ), 
    .DI1(\CIC1Sin/d6_71_N_1459_2 ), .DI0(\CIC1Sin/d6_71_N_1459_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11245 ), 
    .F0(\CIC1Sin/d6_71_N_1459_1 ), .Q0(\CIC1Sin/d6_1 ), 
    .F1(\CIC1Sin/d6_71_N_1459_2 ), .Q1(\CIC1Sin/d6_2 ), .FCO(\CIC1Sin/n11246 ));
  CIC1Sin_SLICE_407 \CIC1Sin/SLICE_407 ( .B1(\CIC1Sin/d_d_tmp_0 ), 
    .A1(\CIC1Sin/d_tmp_0 ), .DI1(\CIC1Sin/d6_71_N_1459_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d6_71_N_1459_0 ), .Q1(\CIC1Sin/d6_0 ), .FCO(\CIC1Sin/n11245 ));
  CIC1Sin_SLICE_408 \CIC1Sin/SLICE_408 ( .B0(\CIC1Sin/d_d8_35 ), 
    .A0(\CIC1Sin/d8_35 ), .DI0(\CIC1Sin/d9_71_N_1675_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11223 ), 
    .F0(\CIC1Sin/d9_71_N_1675_35 ), .Q0(\CIC1Sin/d9_35 ), .F1(\CIC1Sin/n5796 ));
  CIC1Sin_SLICE_409 \CIC1Sin/SLICE_409 ( .B1(\CIC1Sin/d_d8_34 ), 
    .A1(\CIC1Sin/d8_34 ), .B0(\CIC1Sin/d_d8_33 ), .A0(\CIC1Sin/d8_33 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_34 ), .DI0(\CIC1Sin/d9_71_N_1675_33 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11222 ), 
    .F0(\CIC1Sin/d9_71_N_1675_33 ), .Q0(\CIC1Sin/d9_33 ), 
    .F1(\CIC1Sin/d9_71_N_1675_34 ), .Q1(\CIC1Sin/d9_34 ), 
    .FCO(\CIC1Sin/n11223 ));
  CIC1Sin_SLICE_410 \CIC1Sin/SLICE_410 ( .B1(\CIC1Sin/d_d8_32 ), 
    .A1(\CIC1Sin/d8_32 ), .B0(\CIC1Sin/d_d8_31 ), .A0(\CIC1Sin/d8_31 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_32 ), .DI0(\CIC1Sin/d9_71_N_1675_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11221 ), 
    .F0(\CIC1Sin/d9_71_N_1675_31 ), .Q0(\CIC1Sin/d9_31 ), 
    .F1(\CIC1Sin/d9_71_N_1675_32 ), .Q1(\CIC1Sin/d9_32 ), 
    .FCO(\CIC1Sin/n11222 ));
  CIC1Sin_SLICE_411 \CIC1Sin/SLICE_411 ( .B1(\CIC1Sin/d_d8_30 ), 
    .A1(\CIC1Sin/d8_30 ), .B0(\CIC1Sin/d_d8_29 ), .A0(\CIC1Sin/d8_29 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_30 ), .DI0(\CIC1Sin/d9_71_N_1675_29 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11220 ), 
    .F0(\CIC1Sin/d9_71_N_1675_29 ), .Q0(\CIC1Sin/d9_29 ), 
    .F1(\CIC1Sin/d9_71_N_1675_30 ), .Q1(\CIC1Sin/d9_30 ), 
    .FCO(\CIC1Sin/n11221 ));
  CIC1Sin_SLICE_412 \CIC1Sin/SLICE_412 ( .B1(\CIC1Sin/d_d8_28 ), 
    .A1(\CIC1Sin/d8_28 ), .B0(\CIC1Sin/d_d8_27 ), .A0(\CIC1Sin/d8_27 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_28 ), .DI0(\CIC1Sin/d9_71_N_1675_27 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11219 ), 
    .F0(\CIC1Sin/d9_71_N_1675_27 ), .Q0(\CIC1Sin/d9_27 ), 
    .F1(\CIC1Sin/d9_71_N_1675_28 ), .Q1(\CIC1Sin/d9_28 ), 
    .FCO(\CIC1Sin/n11220 ));
  CIC1Sin_SLICE_413 \CIC1Sin/SLICE_413 ( .B1(\CIC1Sin/d_d8_26 ), 
    .A1(\CIC1Sin/d8_26 ), .B0(\CIC1Sin/d_d8_25 ), .A0(\CIC1Sin/d8_25 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_26 ), .DI0(\CIC1Sin/d9_71_N_1675_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11218 ), 
    .F0(\CIC1Sin/d9_71_N_1675_25 ), .Q0(\CIC1Sin/d9_25 ), 
    .F1(\CIC1Sin/d9_71_N_1675_26 ), .Q1(\CIC1Sin/d9_26 ), 
    .FCO(\CIC1Sin/n11219 ));
  CIC1Sin_SLICE_414 \CIC1Sin/SLICE_414 ( .B1(\CIC1Sin/d_d8_24 ), 
    .A1(\CIC1Sin/d8_24 ), .B0(\CIC1Sin/d_d8_23 ), .A0(\CIC1Sin/d8_23 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_24 ), .DI0(\CIC1Sin/d9_71_N_1675_23 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11217 ), 
    .F0(\CIC1Sin/d9_71_N_1675_23 ), .Q0(\CIC1Sin/d9_23 ), 
    .F1(\CIC1Sin/d9_71_N_1675_24 ), .Q1(\CIC1Sin/d9_24 ), 
    .FCO(\CIC1Sin/n11218 ));
  CIC1Sin_SLICE_415 \CIC1Sin/SLICE_415 ( .B1(\CIC1Sin/d_d8_22 ), 
    .A1(\CIC1Sin/d8_22 ), .B0(\CIC1Sin/d_d8_21 ), .A0(\CIC1Sin/d8_21 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_22 ), .DI0(\CIC1Sin/d9_71_N_1675_21 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11216 ), 
    .F0(\CIC1Sin/d9_71_N_1675_21 ), .Q0(\CIC1Sin/d9_21 ), 
    .F1(\CIC1Sin/d9_71_N_1675_22 ), .Q1(\CIC1Sin/d9_22 ), 
    .FCO(\CIC1Sin/n11217 ));
  CIC1Sin_SLICE_416 \CIC1Sin/SLICE_416 ( .B1(\CIC1Sin/d_d8_20 ), 
    .A1(\CIC1Sin/d8_20 ), .B0(\CIC1Sin/d_d8_19 ), .A0(\CIC1Sin/d8_19 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_20 ), .DI0(\CIC1Sin/d9_71_N_1675_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11215 ), 
    .F0(\CIC1Sin/d9_71_N_1675_19 ), .Q0(\CIC1Sin/d9_19 ), 
    .F1(\CIC1Sin/d9_71_N_1675_20 ), .Q1(\CIC1Sin/d9_20 ), 
    .FCO(\CIC1Sin/n11216 ));
  CIC1Sin_SLICE_417 \CIC1Sin/SLICE_417 ( .B1(\CIC1Sin/d_d8_18 ), 
    .A1(\CIC1Sin/d8_18 ), .B0(\CIC1Sin/d_d8_17 ), .A0(\CIC1Sin/d8_17 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_18 ), .DI0(\CIC1Sin/d9_71_N_1675_17 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11214 ), 
    .F0(\CIC1Sin/d9_71_N_1675_17 ), .Q0(\CIC1Sin/d9_17 ), 
    .F1(\CIC1Sin/d9_71_N_1675_18 ), .Q1(\CIC1Sin/d9_18 ), 
    .FCO(\CIC1Sin/n11215 ));
  CIC1Sin_SLICE_418 \CIC1Sin/SLICE_418 ( .B1(\CIC1Sin/d_d8_16 ), 
    .A1(\CIC1Sin/d8_16 ), .B0(\CIC1Sin/d_d8_15 ), .A0(\CIC1Sin/d8_15 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_16 ), .DI0(\CIC1Sin/d9_71_N_1675_15 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11213 ), 
    .F0(\CIC1Sin/d9_71_N_1675_15 ), .Q0(\CIC1Sin/d9_15 ), 
    .F1(\CIC1Sin/d9_71_N_1675_16 ), .Q1(\CIC1Sin/d9_16 ), 
    .FCO(\CIC1Sin/n11214 ));
  CIC1Sin_SLICE_419 \CIC1Sin/SLICE_419 ( .B1(\CIC1Sin/d_d8_14 ), 
    .A1(\CIC1Sin/d8_14 ), .B0(\CIC1Sin/d_d8_13 ), .A0(\CIC1Sin/d8_13 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_14 ), .DI0(\CIC1Sin/d9_71_N_1675_13 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11212 ), 
    .F0(\CIC1Sin/d9_71_N_1675_13 ), .Q0(\CIC1Sin/d9_13 ), 
    .F1(\CIC1Sin/d9_71_N_1675_14 ), .Q1(\CIC1Sin/d9_14 ), 
    .FCO(\CIC1Sin/n11213 ));
  CIC1Sin_SLICE_420 \CIC1Sin/SLICE_420 ( .B1(\CIC1Sin/d_d8_12 ), 
    .A1(\CIC1Sin/d8_12 ), .B0(\CIC1Sin/d_d8_11 ), .A0(\CIC1Sin/d8_11 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_12 ), .DI0(\CIC1Sin/d9_71_N_1675_11 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11211 ), 
    .F0(\CIC1Sin/d9_71_N_1675_11 ), .Q0(\CIC1Sin/d9_11 ), 
    .F1(\CIC1Sin/d9_71_N_1675_12 ), .Q1(\CIC1Sin/d9_12 ), 
    .FCO(\CIC1Sin/n11212 ));
  CIC1Sin_SLICE_421 \CIC1Sin/SLICE_421 ( .B1(\CIC1Sin/d_d8_10 ), 
    .A1(\CIC1Sin/d8_10 ), .B0(\CIC1Sin/d_d8_9 ), .A0(\CIC1Sin/d8_9 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_10 ), .DI0(\CIC1Sin/d9_71_N_1675_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11210 ), 
    .F0(\CIC1Sin/d9_71_N_1675_9 ), .Q0(\CIC1Sin/d9_9 ), 
    .F1(\CIC1Sin/d9_71_N_1675_10 ), .Q1(\CIC1Sin/d9_10 ), 
    .FCO(\CIC1Sin/n11211 ));
  CIC1Sin_SLICE_422 \CIC1Sin/SLICE_422 ( .B1(\CIC1Sin/d_d8_8 ), 
    .A1(\CIC1Sin/d8_8 ), .B0(\CIC1Sin/d_d8_7 ), .A0(\CIC1Sin/d8_7 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_8 ), .DI0(\CIC1Sin/d9_71_N_1675_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11209 ), 
    .F0(\CIC1Sin/d9_71_N_1675_7 ), .Q0(\CIC1Sin/d9_7 ), 
    .F1(\CIC1Sin/d9_71_N_1675_8 ), .Q1(\CIC1Sin/d9_8 ), .FCO(\CIC1Sin/n11210 ));
  CIC1Sin_SLICE_423 \CIC1Sin/SLICE_423 ( .B1(\CIC1Sin/d_d8_6 ), 
    .A1(\CIC1Sin/d8_6 ), .B0(\CIC1Sin/d_d8_5 ), .A0(\CIC1Sin/d8_5 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_6 ), .DI0(\CIC1Sin/d9_71_N_1675_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11208 ), 
    .F0(\CIC1Sin/d9_71_N_1675_5 ), .Q0(\CIC1Sin/d9_5 ), 
    .F1(\CIC1Sin/d9_71_N_1675_6 ), .Q1(\CIC1Sin/d9_6 ), .FCO(\CIC1Sin/n11209 ));
  CIC1Sin_SLICE_424 \CIC1Sin/SLICE_424 ( .B1(\CIC1Sin/d_d8_4 ), 
    .A1(\CIC1Sin/d8_4 ), .B0(\CIC1Sin/d_d8_3 ), .A0(\CIC1Sin/d8_3 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_4 ), .DI0(\CIC1Sin/d9_71_N_1675_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11207 ), 
    .F0(\CIC1Sin/d9_71_N_1675_3 ), .Q0(\CIC1Sin/d9_3 ), 
    .F1(\CIC1Sin/d9_71_N_1675_4 ), .Q1(\CIC1Sin/d9_4 ), .FCO(\CIC1Sin/n11208 ));
  CIC1Sin_SLICE_425 \CIC1Sin/SLICE_425 ( .B1(\CIC1Sin/d_d8_2 ), 
    .A1(\CIC1Sin/d8_2 ), .B0(\CIC1Sin/d_d8_1 ), .A0(\CIC1Sin/d8_1 ), 
    .DI1(\CIC1Sin/d9_71_N_1675_2 ), .DI0(\CIC1Sin/d9_71_N_1675_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11206 ), 
    .F0(\CIC1Sin/d9_71_N_1675_1 ), .Q0(\CIC1Sin/d9_1 ), 
    .F1(\CIC1Sin/d9_71_N_1675_2 ), .Q1(\CIC1Sin/d9_2 ), .FCO(\CIC1Sin/n11207 ));
  CIC1Sin_SLICE_426 \CIC1Sin/SLICE_426 ( .B1(\CIC1Sin/d_d8_0 ), 
    .A1(\CIC1Sin/d8_0 ), .DI1(\CIC1Sin/d9_71_N_1675_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d9_71_N_1675_0 ), .Q1(\CIC1Sin/d9_0 ), .FCO(\CIC1Sin/n11206 ));
  CIC1Sin_SLICE_427 \CIC1Sin/SLICE_427 ( .A0(\CIC1Sin/count_15 ), 
    .DI0(\CIC1Sin/n376 ), .LSR(\CIC1Sin/n8376 ), .CLK(osc_clk), 
    .FCI(\CIC1Sin/n11099 ), .F0(\CIC1Sin/n376 ), .Q0(\CIC1Sin/count_15 ));
  CIC1Sin_SLICE_428 \CIC1Sin/SLICE_428 ( .A1(\CIC1Sin/count_14 ), 
    .A0(\CIC1Sin/count_13 ), .DI1(\CIC1Sin/n377 ), .DI0(\CIC1Sin/n378 ), 
    .LSR(\CIC1Sin/n8376 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11098 ), 
    .F0(\CIC1Sin/n378 ), .Q0(\CIC1Sin/count_13 ), .F1(\CIC1Sin/n377 ), 
    .Q1(\CIC1Sin/count_14 ), .FCO(\CIC1Sin/n11099 ));
  CIC1Sin_SLICE_429 \CIC1Sin/SLICE_429 ( .A1(\CIC1Sin/count_12 ), 
    .A0(\CIC1Sin/count_11 ), .DI1(\CIC1Sin/n379 ), .LSR(\CIC1Sin/n8376 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11097 ), .F0(\CIC1Sin/n380 ), 
    .F1(\CIC1Sin/n379 ), .Q1(\CIC1Sin/count_12 ), .FCO(\CIC1Sin/n11098 ));
  CIC1Sin_SLICE_430 \CIC1Sin/SLICE_430 ( .A1(\CIC1Sin/count_10 ), 
    .A0(\CIC1Sin/count_9 ), .DI1(\CIC1Sin/n381 ), .DI0(\CIC1Sin/n382 ), 
    .LSR(\CIC1Sin/n8376 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11096 ), 
    .F0(\CIC1Sin/n382 ), .Q0(\CIC1Sin/count_9 ), .F1(\CIC1Sin/n381 ), 
    .Q1(\CIC1Sin/count_10 ), .FCO(\CIC1Sin/n11097 ));
  CIC1Sin_SLICE_431 \CIC1Sin/SLICE_431 ( .A1(\CIC1Sin/count_8 ), 
    .A0(\CIC1Sin/count_7 ), .DI1(\CIC1Sin/n383 ), .DI0(\CIC1Sin/n384 ), 
    .LSR(\CIC1Sin/n8376 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11095 ), 
    .F0(\CIC1Sin/n384 ), .Q0(\CIC1Sin/count_7 ), .F1(\CIC1Sin/n383 ), 
    .Q1(\CIC1Sin/count_8 ), .FCO(\CIC1Sin/n11096 ));
  CIC1Sin_SLICE_432 \CIC1Sin/SLICE_432 ( .A1(\CIC1Sin/count_6 ), 
    .A0(\CIC1Sin/count_5 ), .DI1(\CIC1Sin/n385 ), .DI0(\CIC1Sin/n386 ), 
    .LSR(\CIC1Sin/n8376 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11094 ), 
    .F0(\CIC1Sin/n386 ), .Q0(\CIC1Sin/count_5 ), .F1(\CIC1Sin/n385 ), 
    .Q1(\CIC1Sin/count_6 ), .FCO(\CIC1Sin/n11095 ));
  CIC1Sin_SLICE_433 \CIC1Sin/SLICE_433 ( .A1(\CIC1Sin/count_4 ), 
    .A0(\CIC1Sin/count_3 ), .DI1(\CIC1Sin/n387 ), .DI0(\CIC1Sin/n388 ), 
    .LSR(\CIC1Sin/n8376 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11093 ), 
    .F0(\CIC1Sin/n388 ), .Q0(\CIC1Sin/count_3 ), .F1(\CIC1Sin/n387 ), 
    .Q1(\CIC1Sin/count_4 ), .FCO(\CIC1Sin/n11094 ));
  CIC1Sin_SLICE_434 \CIC1Sin/SLICE_434 ( .A1(\CIC1Sin/count_2 ), 
    .A0(\CIC1Sin/count_1 ), .DI1(\CIC1Sin/n389 ), .DI0(\CIC1Sin/n390 ), 
    .LSR(\CIC1Sin/n8376 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11092 ), 
    .F0(\CIC1Sin/n390 ), .Q0(\CIC1Sin/count_1 ), .F1(\CIC1Sin/n389 ), 
    .Q1(\CIC1Sin/count_2 ), .FCO(\CIC1Sin/n11093 ));
  CIC1Sin_SLICE_435 \CIC1Sin/SLICE_435 ( .A1(\CIC1Sin/count_0 ), 
    .F1(\CIC1Sin/n391 ), .FCO(\CIC1Sin/n11092 ));
  CIC1Sin_SLICE_436 \CIC1Sin/SLICE_436 ( .FCI(\CIC1Sin/n11072 ), 
    .F0(\CIC1Sin/n4884 ));
  CIC1Sin_SLICE_437 \CIC1Sin/SLICE_437 ( .B1(\CIC1Sin/d5_35 ), 
    .A1(\CIC1Sin/d4_35 ), .B0(\CIC1Sin/d5_34 ), .A0(\CIC1Sin/d4_34 ), 
    .DI1(\CIC1Sin/d5_71_N_706_35 ), .DI0(\CIC1Sin/d5_71_N_706_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11071 ), .F0(\CIC1Sin/d5_71_N_706_34 ), 
    .Q0(\CIC1Sin/d5_34 ), .F1(\CIC1Sin/d5_71_N_706_35 ), .Q1(\CIC1Sin/d5_35 ), 
    .FCO(\CIC1Sin/n11072 ));
  CIC1Sin_SLICE_438 \CIC1Sin/SLICE_438 ( .B1(\CIC1Sin/d5_33 ), 
    .A1(\CIC1Sin/d4_33 ), .B0(\CIC1Sin/d5_32 ), .A0(\CIC1Sin/d4_32 ), 
    .DI1(\CIC1Sin/d5_71_N_706_33 ), .DI0(\CIC1Sin/d5_71_N_706_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11070 ), .F0(\CIC1Sin/d5_71_N_706_32 ), 
    .Q0(\CIC1Sin/d5_32 ), .F1(\CIC1Sin/d5_71_N_706_33 ), .Q1(\CIC1Sin/d5_33 ), 
    .FCO(\CIC1Sin/n11071 ));
  CIC1Sin_SLICE_439 \CIC1Sin/SLICE_439 ( .B1(\CIC1Sin/d5_31 ), 
    .A1(\CIC1Sin/d4_31 ), .B0(\CIC1Sin/d5_30 ), .A0(\CIC1Sin/d4_30 ), 
    .DI1(\CIC1Sin/d5_71_N_706_31 ), .DI0(\CIC1Sin/d5_71_N_706_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11069 ), .F0(\CIC1Sin/d5_71_N_706_30 ), 
    .Q0(\CIC1Sin/d5_30 ), .F1(\CIC1Sin/d5_71_N_706_31 ), .Q1(\CIC1Sin/d5_31 ), 
    .FCO(\CIC1Sin/n11070 ));
  CIC1Sin_SLICE_440 \CIC1Sin/SLICE_440 ( .B1(\CIC1Sin/d5_29 ), 
    .A1(\CIC1Sin/d4_29 ), .B0(\CIC1Sin/d5_28 ), .A0(\CIC1Sin/d4_28 ), 
    .DI1(\CIC1Sin/d5_71_N_706_29 ), .DI0(\CIC1Sin/d5_71_N_706_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11068 ), .F0(\CIC1Sin/d5_71_N_706_28 ), 
    .Q0(\CIC1Sin/d5_28 ), .F1(\CIC1Sin/d5_71_N_706_29 ), .Q1(\CIC1Sin/d5_29 ), 
    .FCO(\CIC1Sin/n11069 ));
  CIC1Sin_SLICE_441 \CIC1Sin/SLICE_441 ( .B1(\CIC1Sin/d5_27 ), 
    .A1(\CIC1Sin/d4_27 ), .B0(\CIC1Sin/d5_26 ), .A0(\CIC1Sin/d4_26 ), 
    .DI1(\CIC1Sin/d5_71_N_706_27 ), .DI0(\CIC1Sin/d5_71_N_706_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11067 ), .F0(\CIC1Sin/d5_71_N_706_26 ), 
    .Q0(\CIC1Sin/d5_26 ), .F1(\CIC1Sin/d5_71_N_706_27 ), .Q1(\CIC1Sin/d5_27 ), 
    .FCO(\CIC1Sin/n11068 ));
  CIC1Sin_SLICE_442 \CIC1Sin/SLICE_442 ( .B1(\CIC1Sin/d5_25 ), 
    .A1(\CIC1Sin/d4_25 ), .B0(\CIC1Sin/d5_24 ), .A0(\CIC1Sin/d4_24 ), 
    .DI1(\CIC1Sin/d5_71_N_706_25 ), .DI0(\CIC1Sin/d5_71_N_706_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11066 ), .F0(\CIC1Sin/d5_71_N_706_24 ), 
    .Q0(\CIC1Sin/d5_24 ), .F1(\CIC1Sin/d5_71_N_706_25 ), .Q1(\CIC1Sin/d5_25 ), 
    .FCO(\CIC1Sin/n11067 ));
  CIC1Sin_SLICE_443 \CIC1Sin/SLICE_443 ( .B1(\CIC1Sin/d5_23 ), 
    .A1(\CIC1Sin/d4_23 ), .B0(\CIC1Sin/d5_22 ), .A0(\CIC1Sin/d4_22 ), 
    .DI1(\CIC1Sin/d5_71_N_706_23 ), .DI0(\CIC1Sin/d5_71_N_706_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11065 ), .F0(\CIC1Sin/d5_71_N_706_22 ), 
    .Q0(\CIC1Sin/d5_22 ), .F1(\CIC1Sin/d5_71_N_706_23 ), .Q1(\CIC1Sin/d5_23 ), 
    .FCO(\CIC1Sin/n11066 ));
  CIC1Sin_SLICE_444 \CIC1Sin/SLICE_444 ( .B1(\CIC1Sin/d5_21 ), 
    .A1(\CIC1Sin/d4_21 ), .B0(\CIC1Sin/d5_20 ), .A0(\CIC1Sin/d4_20 ), 
    .DI1(\CIC1Sin/d5_71_N_706_21 ), .DI0(\CIC1Sin/d5_71_N_706_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11064 ), .F0(\CIC1Sin/d5_71_N_706_20 ), 
    .Q0(\CIC1Sin/d5_20 ), .F1(\CIC1Sin/d5_71_N_706_21 ), .Q1(\CIC1Sin/d5_21 ), 
    .FCO(\CIC1Sin/n11065 ));
  CIC1Sin_SLICE_445 \CIC1Sin/SLICE_445 ( .B1(\CIC1Sin/d5_19 ), 
    .A1(\CIC1Sin/d4_19 ), .B0(\CIC1Sin/d5_18 ), .A0(\CIC1Sin/d4_18 ), 
    .DI1(\CIC1Sin/d5_71_N_706_19 ), .DI0(\CIC1Sin/d5_71_N_706_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11063 ), .F0(\CIC1Sin/d5_71_N_706_18 ), 
    .Q0(\CIC1Sin/d5_18 ), .F1(\CIC1Sin/d5_71_N_706_19 ), .Q1(\CIC1Sin/d5_19 ), 
    .FCO(\CIC1Sin/n11064 ));
  CIC1Sin_SLICE_446 \CIC1Sin/SLICE_446 ( .B1(\CIC1Sin/d5_17 ), 
    .A1(\CIC1Sin/d4_17 ), .B0(\CIC1Sin/d5_16 ), .A0(\CIC1Sin/d4_16 ), 
    .DI1(\CIC1Sin/d5_71_N_706_17 ), .DI0(\CIC1Sin/d5_71_N_706_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11062 ), .F0(\CIC1Sin/d5_71_N_706_16 ), 
    .Q0(\CIC1Sin/d5_16 ), .F1(\CIC1Sin/d5_71_N_706_17 ), .Q1(\CIC1Sin/d5_17 ), 
    .FCO(\CIC1Sin/n11063 ));
  CIC1Sin_SLICE_447 \CIC1Sin/SLICE_447 ( .B1(\CIC1Sin/d5_15 ), 
    .A1(\CIC1Sin/d4_15 ), .B0(\CIC1Sin/d5_14 ), .A0(\CIC1Sin/d4_14 ), 
    .DI1(\CIC1Sin/d5_71_N_706_15 ), .DI0(\CIC1Sin/d5_71_N_706_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11061 ), .F0(\CIC1Sin/d5_71_N_706_14 ), 
    .Q0(\CIC1Sin/d5_14 ), .F1(\CIC1Sin/d5_71_N_706_15 ), .Q1(\CIC1Sin/d5_15 ), 
    .FCO(\CIC1Sin/n11062 ));
  CIC1Sin_SLICE_448 \CIC1Sin/SLICE_448 ( .B1(\CIC1Sin/d5_13 ), 
    .A1(\CIC1Sin/d4_13 ), .B0(\CIC1Sin/d5_12 ), .A0(\CIC1Sin/d4_12 ), 
    .DI1(\CIC1Sin/d5_71_N_706_13 ), .DI0(\CIC1Sin/d5_71_N_706_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11060 ), .F0(\CIC1Sin/d5_71_N_706_12 ), 
    .Q0(\CIC1Sin/d5_12 ), .F1(\CIC1Sin/d5_71_N_706_13 ), .Q1(\CIC1Sin/d5_13 ), 
    .FCO(\CIC1Sin/n11061 ));
  CIC1Sin_SLICE_449 \CIC1Sin/SLICE_449 ( .B1(\CIC1Sin/d5_11 ), 
    .A1(\CIC1Sin/d4_11 ), .B0(\CIC1Sin/d5_10 ), .A0(\CIC1Sin/d4_10 ), 
    .DI1(\CIC1Sin/d5_71_N_706_11 ), .DI0(\CIC1Sin/d5_71_N_706_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11059 ), .F0(\CIC1Sin/d5_71_N_706_10 ), 
    .Q0(\CIC1Sin/d5_10 ), .F1(\CIC1Sin/d5_71_N_706_11 ), .Q1(\CIC1Sin/d5_11 ), 
    .FCO(\CIC1Sin/n11060 ));
  CIC1Sin_SLICE_450 \CIC1Sin/SLICE_450 ( .B1(\CIC1Sin/d5_9 ), 
    .A1(\CIC1Sin/d4_9 ), .B0(\CIC1Sin/d5_8 ), .A0(\CIC1Sin/d4_8 ), 
    .DI1(\CIC1Sin/d5_71_N_706_9 ), .DI0(\CIC1Sin/d5_71_N_706_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11058 ), .F0(\CIC1Sin/d5_71_N_706_8 ), 
    .Q0(\CIC1Sin/d5_8 ), .F1(\CIC1Sin/d5_71_N_706_9 ), .Q1(\CIC1Sin/d5_9 ), 
    .FCO(\CIC1Sin/n11059 ));
  CIC1Sin_SLICE_451 \CIC1Sin/SLICE_451 ( .B1(\CIC1Sin/d5_7 ), 
    .A1(\CIC1Sin/d4_7 ), .B0(\CIC1Sin/d5_6 ), .A0(\CIC1Sin/d4_6 ), 
    .DI1(\CIC1Sin/d5_71_N_706_7 ), .DI0(\CIC1Sin/d5_71_N_706_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11057 ), .F0(\CIC1Sin/d5_71_N_706_6 ), 
    .Q0(\CIC1Sin/d5_6 ), .F1(\CIC1Sin/d5_71_N_706_7 ), .Q1(\CIC1Sin/d5_7 ), 
    .FCO(\CIC1Sin/n11058 ));
  CIC1Sin_SLICE_452 \CIC1Sin/SLICE_452 ( .B1(\CIC1Sin/d5_5 ), 
    .A1(\CIC1Sin/d4_5 ), .B0(\CIC1Sin/d5_4 ), .A0(\CIC1Sin/d4_4 ), 
    .DI1(\CIC1Sin/d5_71_N_706_5 ), .DI0(\CIC1Sin/d5_71_N_706_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11056 ), .F0(\CIC1Sin/d5_71_N_706_4 ), 
    .Q0(\CIC1Sin/d5_4 ), .F1(\CIC1Sin/d5_71_N_706_5 ), .Q1(\CIC1Sin/d5_5 ), 
    .FCO(\CIC1Sin/n11057 ));
  CIC1Sin_SLICE_453 \CIC1Sin/SLICE_453 ( .B1(\CIC1Sin/d5_3 ), 
    .A1(\CIC1Sin/d4_3 ), .B0(\CIC1Sin/d5_2 ), .A0(\CIC1Sin/d4_2 ), 
    .DI1(\CIC1Sin/d5_71_N_706_3 ), .DI0(\CIC1Sin/d5_71_N_706_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11055 ), .F0(\CIC1Sin/d5_71_N_706_2 ), 
    .Q0(\CIC1Sin/d5_2 ), .F1(\CIC1Sin/d5_71_N_706_3 ), .Q1(\CIC1Sin/d5_3 ), 
    .FCO(\CIC1Sin/n11056 ));
  CIC1Sin_SLICE_454 \CIC1Sin/SLICE_454 ( .B1(\CIC1Sin/d5_1 ), 
    .A1(\CIC1Sin/d4_1 ), .B0(\CIC1Sin/d5_0 ), .A0(\CIC1Sin/d4_0 ), 
    .DI1(\CIC1Sin/d5_71_N_706_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d5_71_N_706_1 ), 
    .Q1(\CIC1Sin/d5_1 ), .FCO(\CIC1Sin/n11055 ));
  CIC1Sin_SLICE_455 \CIC1Sin/SLICE_455 ( .FCI(\CIC1Sin/n11053 ), 
    .F0(\CIC1Sin/n4732 ));
  CIC1Sin_SLICE_456 \CIC1Sin/SLICE_456 ( .B1(\CIC1Sin/d4_35 ), 
    .A1(\CIC1Sin/d3_35 ), .B0(\CIC1Sin/d4_34 ), .A0(\CIC1Sin/d3_34 ), 
    .DI1(\CIC1Sin/d4_71_N_634_35 ), .DI0(\CIC1Sin/d4_71_N_634_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11052 ), .F0(\CIC1Sin/d4_71_N_634_34 ), 
    .Q0(\CIC1Sin/d4_34 ), .F1(\CIC1Sin/d4_71_N_634_35 ), .Q1(\CIC1Sin/d4_35 ), 
    .FCO(\CIC1Sin/n11053 ));
  CIC1Sin_SLICE_457 \CIC1Sin/SLICE_457 ( .B1(\CIC1Sin/d4_33 ), 
    .A1(\CIC1Sin/d3_33 ), .B0(\CIC1Sin/d4_32 ), .A0(\CIC1Sin/d3_32 ), 
    .DI1(\CIC1Sin/d4_71_N_634_33 ), .DI0(\CIC1Sin/d4_71_N_634_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11051 ), .F0(\CIC1Sin/d4_71_N_634_32 ), 
    .Q0(\CIC1Sin/d4_32 ), .F1(\CIC1Sin/d4_71_N_634_33 ), .Q1(\CIC1Sin/d4_33 ), 
    .FCO(\CIC1Sin/n11052 ));
  CIC1Sin_SLICE_458 \CIC1Sin/SLICE_458 ( .B1(\CIC1Sin/d4_31 ), 
    .A1(\CIC1Sin/d3_31 ), .B0(\CIC1Sin/d4_30 ), .A0(\CIC1Sin/d3_30 ), 
    .DI1(\CIC1Sin/d4_71_N_634_31 ), .DI0(\CIC1Sin/d4_71_N_634_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11050 ), .F0(\CIC1Sin/d4_71_N_634_30 ), 
    .Q0(\CIC1Sin/d4_30 ), .F1(\CIC1Sin/d4_71_N_634_31 ), .Q1(\CIC1Sin/d4_31 ), 
    .FCO(\CIC1Sin/n11051 ));
  CIC1Sin_SLICE_459 \CIC1Sin/SLICE_459 ( .B1(\CIC1Sin/d4_29 ), 
    .A1(\CIC1Sin/d3_29 ), .B0(\CIC1Sin/d4_28 ), .A0(\CIC1Sin/d3_28 ), 
    .DI1(\CIC1Sin/d4_71_N_634_29 ), .DI0(\CIC1Sin/d4_71_N_634_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11049 ), .F0(\CIC1Sin/d4_71_N_634_28 ), 
    .Q0(\CIC1Sin/d4_28 ), .F1(\CIC1Sin/d4_71_N_634_29 ), .Q1(\CIC1Sin/d4_29 ), 
    .FCO(\CIC1Sin/n11050 ));
  CIC1Sin_SLICE_460 \CIC1Sin/SLICE_460 ( .B1(\CIC1Sin/d4_27 ), 
    .A1(\CIC1Sin/d3_27 ), .B0(\CIC1Sin/d4_26 ), .A0(\CIC1Sin/d3_26 ), 
    .DI1(\CIC1Sin/d4_71_N_634_27 ), .DI0(\CIC1Sin/d4_71_N_634_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11048 ), .F0(\CIC1Sin/d4_71_N_634_26 ), 
    .Q0(\CIC1Sin/d4_26 ), .F1(\CIC1Sin/d4_71_N_634_27 ), .Q1(\CIC1Sin/d4_27 ), 
    .FCO(\CIC1Sin/n11049 ));
  CIC1Sin_SLICE_461 \CIC1Sin/SLICE_461 ( .B1(\CIC1Sin/d4_25 ), 
    .A1(\CIC1Sin/d3_25 ), .B0(\CIC1Sin/d4_24 ), .A0(\CIC1Sin/d3_24 ), 
    .DI1(\CIC1Sin/d4_71_N_634_25 ), .DI0(\CIC1Sin/d4_71_N_634_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11047 ), .F0(\CIC1Sin/d4_71_N_634_24 ), 
    .Q0(\CIC1Sin/d4_24 ), .F1(\CIC1Sin/d4_71_N_634_25 ), .Q1(\CIC1Sin/d4_25 ), 
    .FCO(\CIC1Sin/n11048 ));
  CIC1Sin_SLICE_462 \CIC1Sin/SLICE_462 ( .B1(\CIC1Sin/d4_23 ), 
    .A1(\CIC1Sin/d3_23 ), .B0(\CIC1Sin/d4_22 ), .A0(\CIC1Sin/d3_22 ), 
    .DI1(\CIC1Sin/d4_71_N_634_23 ), .DI0(\CIC1Sin/d4_71_N_634_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11046 ), .F0(\CIC1Sin/d4_71_N_634_22 ), 
    .Q0(\CIC1Sin/d4_22 ), .F1(\CIC1Sin/d4_71_N_634_23 ), .Q1(\CIC1Sin/d4_23 ), 
    .FCO(\CIC1Sin/n11047 ));
  CIC1Sin_SLICE_463 \CIC1Sin/SLICE_463 ( .B1(\CIC1Sin/d4_21 ), 
    .A1(\CIC1Sin/d3_21 ), .B0(\CIC1Sin/d4_20 ), .A0(\CIC1Sin/d3_20 ), 
    .DI1(\CIC1Sin/d4_71_N_634_21 ), .DI0(\CIC1Sin/d4_71_N_634_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11045 ), .F0(\CIC1Sin/d4_71_N_634_20 ), 
    .Q0(\CIC1Sin/d4_20 ), .F1(\CIC1Sin/d4_71_N_634_21 ), .Q1(\CIC1Sin/d4_21 ), 
    .FCO(\CIC1Sin/n11046 ));
  CIC1Sin_SLICE_464 \CIC1Sin/SLICE_464 ( .B1(\CIC1Sin/d4_19 ), 
    .A1(\CIC1Sin/d3_19 ), .B0(\CIC1Sin/d4_18 ), .A0(\CIC1Sin/d3_18 ), 
    .DI1(\CIC1Sin/d4_71_N_634_19 ), .DI0(\CIC1Sin/d4_71_N_634_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11044 ), .F0(\CIC1Sin/d4_71_N_634_18 ), 
    .Q0(\CIC1Sin/d4_18 ), .F1(\CIC1Sin/d4_71_N_634_19 ), .Q1(\CIC1Sin/d4_19 ), 
    .FCO(\CIC1Sin/n11045 ));
  CIC1Sin_SLICE_465 \CIC1Sin/SLICE_465 ( .B1(\CIC1Sin/d4_17 ), 
    .A1(\CIC1Sin/d3_17 ), .B0(\CIC1Sin/d4_16 ), .A0(\CIC1Sin/d3_16 ), 
    .DI1(\CIC1Sin/d4_71_N_634_17 ), .DI0(\CIC1Sin/d4_71_N_634_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11043 ), .F0(\CIC1Sin/d4_71_N_634_16 ), 
    .Q0(\CIC1Sin/d4_16 ), .F1(\CIC1Sin/d4_71_N_634_17 ), .Q1(\CIC1Sin/d4_17 ), 
    .FCO(\CIC1Sin/n11044 ));
  CIC1Sin_SLICE_466 \CIC1Sin/SLICE_466 ( .B1(\CIC1Sin/d4_15 ), 
    .A1(\CIC1Sin/d3_15 ), .B0(\CIC1Sin/d4_14 ), .A0(\CIC1Sin/d3_14 ), 
    .DI1(\CIC1Sin/d4_71_N_634_15 ), .DI0(\CIC1Sin/d4_71_N_634_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11042 ), .F0(\CIC1Sin/d4_71_N_634_14 ), 
    .Q0(\CIC1Sin/d4_14 ), .F1(\CIC1Sin/d4_71_N_634_15 ), .Q1(\CIC1Sin/d4_15 ), 
    .FCO(\CIC1Sin/n11043 ));
  CIC1Sin_SLICE_467 \CIC1Sin/SLICE_467 ( .B1(\CIC1Sin/d4_13 ), 
    .A1(\CIC1Sin/d3_13 ), .B0(\CIC1Sin/d4_12 ), .A0(\CIC1Sin/d3_12 ), 
    .DI1(\CIC1Sin/d4_71_N_634_13 ), .DI0(\CIC1Sin/d4_71_N_634_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11041 ), .F0(\CIC1Sin/d4_71_N_634_12 ), 
    .Q0(\CIC1Sin/d4_12 ), .F1(\CIC1Sin/d4_71_N_634_13 ), .Q1(\CIC1Sin/d4_13 ), 
    .FCO(\CIC1Sin/n11042 ));
  CIC1Sin_SLICE_468 \CIC1Sin/SLICE_468 ( .B1(\CIC1Sin/d4_11 ), 
    .A1(\CIC1Sin/d3_11 ), .B0(\CIC1Sin/d4_10 ), .A0(\CIC1Sin/d3_10 ), 
    .DI1(\CIC1Sin/d4_71_N_634_11 ), .DI0(\CIC1Sin/d4_71_N_634_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11040 ), .F0(\CIC1Sin/d4_71_N_634_10 ), 
    .Q0(\CIC1Sin/d4_10 ), .F1(\CIC1Sin/d4_71_N_634_11 ), .Q1(\CIC1Sin/d4_11 ), 
    .FCO(\CIC1Sin/n11041 ));
  CIC1Sin_SLICE_469 \CIC1Sin/SLICE_469 ( .B1(\CIC1Sin/d4_9 ), 
    .A1(\CIC1Sin/d3_9 ), .B0(\CIC1Sin/d4_8 ), .A0(\CIC1Sin/d3_8 ), 
    .DI1(\CIC1Sin/d4_71_N_634_9 ), .DI0(\CIC1Sin/d4_71_N_634_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11039 ), .F0(\CIC1Sin/d4_71_N_634_8 ), 
    .Q0(\CIC1Sin/d4_8 ), .F1(\CIC1Sin/d4_71_N_634_9 ), .Q1(\CIC1Sin/d4_9 ), 
    .FCO(\CIC1Sin/n11040 ));
  CIC1Sin_SLICE_470 \CIC1Sin/SLICE_470 ( .B1(\CIC1Sin/d4_7 ), 
    .A1(\CIC1Sin/d3_7 ), .B0(\CIC1Sin/d4_6 ), .A0(\CIC1Sin/d3_6 ), 
    .DI1(\CIC1Sin/d4_71_N_634_7 ), .DI0(\CIC1Sin/d4_71_N_634_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11038 ), .F0(\CIC1Sin/d4_71_N_634_6 ), 
    .Q0(\CIC1Sin/d4_6 ), .F1(\CIC1Sin/d4_71_N_634_7 ), .Q1(\CIC1Sin/d4_7 ), 
    .FCO(\CIC1Sin/n11039 ));
  CIC1Sin_SLICE_471 \CIC1Sin/SLICE_471 ( .B1(\CIC1Sin/d4_5 ), 
    .A1(\CIC1Sin/d3_5 ), .B0(\CIC1Sin/d4_4 ), .A0(\CIC1Sin/d3_4 ), 
    .DI1(\CIC1Sin/d4_71_N_634_5 ), .DI0(\CIC1Sin/d4_71_N_634_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11037 ), .F0(\CIC1Sin/d4_71_N_634_4 ), 
    .Q0(\CIC1Sin/d4_4 ), .F1(\CIC1Sin/d4_71_N_634_5 ), .Q1(\CIC1Sin/d4_5 ), 
    .FCO(\CIC1Sin/n11038 ));
  CIC1Sin_SLICE_472 \CIC1Sin/SLICE_472 ( .B1(\CIC1Sin/d4_3 ), 
    .A1(\CIC1Sin/d3_3 ), .B0(\CIC1Sin/d4_2 ), .A0(\CIC1Sin/d3_2 ), 
    .DI1(\CIC1Sin/d4_71_N_634_3 ), .DI0(\CIC1Sin/d4_71_N_634_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11036 ), .F0(\CIC1Sin/d4_71_N_634_2 ), 
    .Q0(\CIC1Sin/d4_2 ), .F1(\CIC1Sin/d4_71_N_634_3 ), .Q1(\CIC1Sin/d4_3 ), 
    .FCO(\CIC1Sin/n11037 ));
  CIC1Sin_SLICE_473 \CIC1Sin/SLICE_473 ( .B1(\CIC1Sin/d4_1 ), 
    .A1(\CIC1Sin/d3_1 ), .B0(\CIC1Sin/d4_0 ), .A0(\CIC1Sin/d3_0 ), 
    .DI1(\CIC1Sin/d4_71_N_634_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d4_71_N_634_1 ), 
    .Q1(\CIC1Sin/d4_1 ), .FCO(\CIC1Sin/n11036 ));
  CIC1Sin_SLICE_474 \CIC1Sin/SLICE_474 ( .FCI(\CIC1Sin/n11034 ), 
    .F0(\CIC1Sin/n4580 ));
  CIC1Sin_SLICE_475 \CIC1Sin/SLICE_475 ( .B1(\CIC1Sin/d3_35 ), 
    .A1(\CIC1Sin/d2_35 ), .B0(\CIC1Sin/d3_34 ), .A0(\CIC1Sin/d2_34 ), 
    .DI1(\CIC1Sin/d3_71_N_562_35 ), .DI0(\CIC1Sin/d3_71_N_562_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11033 ), .F0(\CIC1Sin/d3_71_N_562_34 ), 
    .Q0(\CIC1Sin/d3_34 ), .F1(\CIC1Sin/d3_71_N_562_35 ), .Q1(\CIC1Sin/d3_35 ), 
    .FCO(\CIC1Sin/n11034 ));
  CIC1Sin_SLICE_476 \CIC1Sin/SLICE_476 ( .B1(\CIC1Sin/d3_33 ), 
    .A1(\CIC1Sin/d2_33 ), .B0(\CIC1Sin/d3_32 ), .A0(\CIC1Sin/d2_32 ), 
    .DI1(\CIC1Sin/d3_71_N_562_33 ), .DI0(\CIC1Sin/d3_71_N_562_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11032 ), .F0(\CIC1Sin/d3_71_N_562_32 ), 
    .Q0(\CIC1Sin/d3_32 ), .F1(\CIC1Sin/d3_71_N_562_33 ), .Q1(\CIC1Sin/d3_33 ), 
    .FCO(\CIC1Sin/n11033 ));
  CIC1Sin_SLICE_477 \CIC1Sin/SLICE_477 ( .B1(\CIC1Sin/d3_31 ), 
    .A1(\CIC1Sin/d2_31 ), .B0(\CIC1Sin/d3_30 ), .A0(\CIC1Sin/d2_30 ), 
    .DI1(\CIC1Sin/d3_71_N_562_31 ), .DI0(\CIC1Sin/d3_71_N_562_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11031 ), .F0(\CIC1Sin/d3_71_N_562_30 ), 
    .Q0(\CIC1Sin/d3_30 ), .F1(\CIC1Sin/d3_71_N_562_31 ), .Q1(\CIC1Sin/d3_31 ), 
    .FCO(\CIC1Sin/n11032 ));
  CIC1Sin_SLICE_478 \CIC1Sin/SLICE_478 ( .B1(\CIC1Sin/d3_29 ), 
    .A1(\CIC1Sin/d2_29 ), .B0(\CIC1Sin/d3_28 ), .A0(\CIC1Sin/d2_28 ), 
    .DI1(\CIC1Sin/d3_71_N_562_29 ), .DI0(\CIC1Sin/d3_71_N_562_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11030 ), .F0(\CIC1Sin/d3_71_N_562_28 ), 
    .Q0(\CIC1Sin/d3_28 ), .F1(\CIC1Sin/d3_71_N_562_29 ), .Q1(\CIC1Sin/d3_29 ), 
    .FCO(\CIC1Sin/n11031 ));
  CIC1Sin_SLICE_479 \CIC1Sin/SLICE_479 ( .B1(\CIC1Sin/d3_27 ), 
    .A1(\CIC1Sin/d2_27 ), .B0(\CIC1Sin/d3_26 ), .A0(\CIC1Sin/d2_26 ), 
    .DI1(\CIC1Sin/d3_71_N_562_27 ), .DI0(\CIC1Sin/d3_71_N_562_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11029 ), .F0(\CIC1Sin/d3_71_N_562_26 ), 
    .Q0(\CIC1Sin/d3_26 ), .F1(\CIC1Sin/d3_71_N_562_27 ), .Q1(\CIC1Sin/d3_27 ), 
    .FCO(\CIC1Sin/n11030 ));
  CIC1Sin_SLICE_480 \CIC1Sin/SLICE_480 ( .B1(\CIC1Sin/d3_25 ), 
    .A1(\CIC1Sin/d2_25 ), .B0(\CIC1Sin/d3_24 ), .A0(\CIC1Sin/d2_24 ), 
    .DI1(\CIC1Sin/d3_71_N_562_25 ), .DI0(\CIC1Sin/d3_71_N_562_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11028 ), .F0(\CIC1Sin/d3_71_N_562_24 ), 
    .Q0(\CIC1Sin/d3_24 ), .F1(\CIC1Sin/d3_71_N_562_25 ), .Q1(\CIC1Sin/d3_25 ), 
    .FCO(\CIC1Sin/n11029 ));
  CIC1Sin_SLICE_481 \CIC1Sin/SLICE_481 ( .B1(\CIC1Sin/d3_23 ), 
    .A1(\CIC1Sin/d2_23 ), .B0(\CIC1Sin/d3_22 ), .A0(\CIC1Sin/d2_22 ), 
    .DI1(\CIC1Sin/d3_71_N_562_23 ), .DI0(\CIC1Sin/d3_71_N_562_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11027 ), .F0(\CIC1Sin/d3_71_N_562_22 ), 
    .Q0(\CIC1Sin/d3_22 ), .F1(\CIC1Sin/d3_71_N_562_23 ), .Q1(\CIC1Sin/d3_23 ), 
    .FCO(\CIC1Sin/n11028 ));
  CIC1Sin_SLICE_482 \CIC1Sin/SLICE_482 ( .B1(\CIC1Sin/d3_21 ), 
    .A1(\CIC1Sin/d2_21 ), .B0(\CIC1Sin/d3_20 ), .A0(\CIC1Sin/d2_20 ), 
    .DI1(\CIC1Sin/d3_71_N_562_21 ), .DI0(\CIC1Sin/d3_71_N_562_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11026 ), .F0(\CIC1Sin/d3_71_N_562_20 ), 
    .Q0(\CIC1Sin/d3_20 ), .F1(\CIC1Sin/d3_71_N_562_21 ), .Q1(\CIC1Sin/d3_21 ), 
    .FCO(\CIC1Sin/n11027 ));
  CIC1Sin_SLICE_483 \CIC1Sin/SLICE_483 ( .B1(\CIC1Sin/d3_19 ), 
    .A1(\CIC1Sin/d2_19 ), .B0(\CIC1Sin/d3_18 ), .A0(\CIC1Sin/d2_18 ), 
    .DI1(\CIC1Sin/d3_71_N_562_19 ), .DI0(\CIC1Sin/d3_71_N_562_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11025 ), .F0(\CIC1Sin/d3_71_N_562_18 ), 
    .Q0(\CIC1Sin/d3_18 ), .F1(\CIC1Sin/d3_71_N_562_19 ), .Q1(\CIC1Sin/d3_19 ), 
    .FCO(\CIC1Sin/n11026 ));
  CIC1Sin_SLICE_484 \CIC1Sin/SLICE_484 ( .B1(\CIC1Sin/d3_17 ), 
    .A1(\CIC1Sin/d2_17 ), .B0(\CIC1Sin/d3_16 ), .A0(\CIC1Sin/d2_16 ), 
    .DI1(\CIC1Sin/d3_71_N_562_17 ), .DI0(\CIC1Sin/d3_71_N_562_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11024 ), .F0(\CIC1Sin/d3_71_N_562_16 ), 
    .Q0(\CIC1Sin/d3_16 ), .F1(\CIC1Sin/d3_71_N_562_17 ), .Q1(\CIC1Sin/d3_17 ), 
    .FCO(\CIC1Sin/n11025 ));
  CIC1Sin_SLICE_485 \CIC1Sin/SLICE_485 ( .B1(\CIC1Sin/d3_15 ), 
    .A1(\CIC1Sin/d2_15 ), .B0(\CIC1Sin/d3_14 ), .A0(\CIC1Sin/d2_14 ), 
    .DI1(\CIC1Sin/d3_71_N_562_15 ), .DI0(\CIC1Sin/d3_71_N_562_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11023 ), .F0(\CIC1Sin/d3_71_N_562_14 ), 
    .Q0(\CIC1Sin/d3_14 ), .F1(\CIC1Sin/d3_71_N_562_15 ), .Q1(\CIC1Sin/d3_15 ), 
    .FCO(\CIC1Sin/n11024 ));
  CIC1Sin_SLICE_486 \CIC1Sin/SLICE_486 ( .B1(\CIC1Sin/d3_13 ), 
    .A1(\CIC1Sin/d2_13 ), .B0(\CIC1Sin/d3_12 ), .A0(\CIC1Sin/d2_12 ), 
    .DI1(\CIC1Sin/d3_71_N_562_13 ), .DI0(\CIC1Sin/d3_71_N_562_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11022 ), .F0(\CIC1Sin/d3_71_N_562_12 ), 
    .Q0(\CIC1Sin/d3_12 ), .F1(\CIC1Sin/d3_71_N_562_13 ), .Q1(\CIC1Sin/d3_13 ), 
    .FCO(\CIC1Sin/n11023 ));
  CIC1Sin_SLICE_487 \CIC1Sin/SLICE_487 ( .B1(\CIC1Sin/d3_11 ), 
    .A1(\CIC1Sin/d2_11 ), .B0(\CIC1Sin/d3_10 ), .A0(\CIC1Sin/d2_10 ), 
    .DI1(\CIC1Sin/d3_71_N_562_11 ), .DI0(\CIC1Sin/d3_71_N_562_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11021 ), .F0(\CIC1Sin/d3_71_N_562_10 ), 
    .Q0(\CIC1Sin/d3_10 ), .F1(\CIC1Sin/d3_71_N_562_11 ), .Q1(\CIC1Sin/d3_11 ), 
    .FCO(\CIC1Sin/n11022 ));
  CIC1Sin_SLICE_488 \CIC1Sin/SLICE_488 ( .B1(\CIC1Sin/d3_9 ), 
    .A1(\CIC1Sin/d2_9 ), .B0(\CIC1Sin/d3_8 ), .A0(\CIC1Sin/d2_8 ), 
    .DI1(\CIC1Sin/d3_71_N_562_9 ), .DI0(\CIC1Sin/d3_71_N_562_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11020 ), .F0(\CIC1Sin/d3_71_N_562_8 ), 
    .Q0(\CIC1Sin/d3_8 ), .F1(\CIC1Sin/d3_71_N_562_9 ), .Q1(\CIC1Sin/d3_9 ), 
    .FCO(\CIC1Sin/n11021 ));
  CIC1Sin_SLICE_489 \CIC1Sin/SLICE_489 ( .B1(\CIC1Sin/d3_7 ), 
    .A1(\CIC1Sin/d2_7 ), .B0(\CIC1Sin/d3_6 ), .A0(\CIC1Sin/d2_6 ), 
    .DI1(\CIC1Sin/d3_71_N_562_7 ), .DI0(\CIC1Sin/d3_71_N_562_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11019 ), .F0(\CIC1Sin/d3_71_N_562_6 ), 
    .Q0(\CIC1Sin/d3_6 ), .F1(\CIC1Sin/d3_71_N_562_7 ), .Q1(\CIC1Sin/d3_7 ), 
    .FCO(\CIC1Sin/n11020 ));
  CIC1Sin_SLICE_490 \CIC1Sin/SLICE_490 ( .B1(\CIC1Sin/d3_5 ), 
    .A1(\CIC1Sin/d2_5 ), .B0(\CIC1Sin/d3_4 ), .A0(\CIC1Sin/d2_4 ), 
    .DI1(\CIC1Sin/d3_71_N_562_5 ), .DI0(\CIC1Sin/d3_71_N_562_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11018 ), .F0(\CIC1Sin/d3_71_N_562_4 ), 
    .Q0(\CIC1Sin/d3_4 ), .F1(\CIC1Sin/d3_71_N_562_5 ), .Q1(\CIC1Sin/d3_5 ), 
    .FCO(\CIC1Sin/n11019 ));
  CIC1Sin_SLICE_491 \CIC1Sin/SLICE_491 ( .B1(\CIC1Sin/d3_3 ), 
    .A1(\CIC1Sin/d2_3 ), .B0(\CIC1Sin/d3_2 ), .A0(\CIC1Sin/d2_2 ), 
    .DI1(\CIC1Sin/d3_71_N_562_3 ), .DI0(\CIC1Sin/d3_71_N_562_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11017 ), .F0(\CIC1Sin/d3_71_N_562_2 ), 
    .Q0(\CIC1Sin/d3_2 ), .F1(\CIC1Sin/d3_71_N_562_3 ), .Q1(\CIC1Sin/d3_3 ), 
    .FCO(\CIC1Sin/n11018 ));
  CIC1Sin_SLICE_492 \CIC1Sin/SLICE_492 ( .B1(\CIC1Sin/d3_1 ), 
    .A1(\CIC1Sin/d2_1 ), .B0(\CIC1Sin/d3_0 ), .A0(\CIC1Sin/d2_0 ), 
    .DI1(\CIC1Sin/d3_71_N_562_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d3_71_N_562_1 ), 
    .Q1(\CIC1Sin/d3_1 ), .FCO(\CIC1Sin/n11017 ));
  CIC1Sin_SLICE_493 \CIC1Sin/SLICE_493 ( .FCI(\CIC1Sin/n11015 ), 
    .F0(\CIC1Sin/n4428 ));
  CIC1Sin_SLICE_494 \CIC1Sin/SLICE_494 ( .B1(\CIC1Sin/d2_35 ), 
    .A1(\CIC1Sin/d1_35 ), .B0(\CIC1Sin/d2_34 ), .A0(\CIC1Sin/d1_34 ), 
    .DI1(\CIC1Sin/d2_71_N_490_35 ), .DI0(\CIC1Sin/d2_71_N_490_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11014 ), .F0(\CIC1Sin/d2_71_N_490_34 ), 
    .Q0(\CIC1Sin/d2_34 ), .F1(\CIC1Sin/d2_71_N_490_35 ), .Q1(\CIC1Sin/d2_35 ), 
    .FCO(\CIC1Sin/n11015 ));
  CIC1Sin_SLICE_495 \CIC1Sin/SLICE_495 ( .B1(\CIC1Sin/d2_33 ), 
    .A1(\CIC1Sin/d1_33 ), .B0(\CIC1Sin/d2_32 ), .A0(\CIC1Sin/d1_32 ), 
    .DI1(\CIC1Sin/d2_71_N_490_33 ), .DI0(\CIC1Sin/d2_71_N_490_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11013 ), .F0(\CIC1Sin/d2_71_N_490_32 ), 
    .Q0(\CIC1Sin/d2_32 ), .F1(\CIC1Sin/d2_71_N_490_33 ), .Q1(\CIC1Sin/d2_33 ), 
    .FCO(\CIC1Sin/n11014 ));
  CIC1Sin_SLICE_496 \CIC1Sin/SLICE_496 ( .B1(\CIC1Sin/d2_31 ), 
    .A1(\CIC1Sin/d1_31 ), .B0(\CIC1Sin/d2_30 ), .A0(\CIC1Sin/d1_30 ), 
    .DI1(\CIC1Sin/d2_71_N_490_31 ), .DI0(\CIC1Sin/d2_71_N_490_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11012 ), .F0(\CIC1Sin/d2_71_N_490_30 ), 
    .Q0(\CIC1Sin/d2_30 ), .F1(\CIC1Sin/d2_71_N_490_31 ), .Q1(\CIC1Sin/d2_31 ), 
    .FCO(\CIC1Sin/n11013 ));
  CIC1Sin_SLICE_497 \CIC1Sin/SLICE_497 ( .B1(\CIC1Sin/d2_29 ), 
    .A1(\CIC1Sin/d1_29 ), .B0(\CIC1Sin/d2_28 ), .A0(\CIC1Sin/d1_28 ), 
    .DI1(\CIC1Sin/d2_71_N_490_29 ), .DI0(\CIC1Sin/d2_71_N_490_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11011 ), .F0(\CIC1Sin/d2_71_N_490_28 ), 
    .Q0(\CIC1Sin/d2_28 ), .F1(\CIC1Sin/d2_71_N_490_29 ), .Q1(\CIC1Sin/d2_29 ), 
    .FCO(\CIC1Sin/n11012 ));
  CIC1Sin_SLICE_498 \CIC1Sin/SLICE_498 ( .B1(\CIC1Sin/d2_27 ), 
    .A1(\CIC1Sin/d1_27 ), .B0(\CIC1Sin/d2_26 ), .A0(\CIC1Sin/d1_26 ), 
    .DI1(\CIC1Sin/d2_71_N_490_27 ), .DI0(\CIC1Sin/d2_71_N_490_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11010 ), .F0(\CIC1Sin/d2_71_N_490_26 ), 
    .Q0(\CIC1Sin/d2_26 ), .F1(\CIC1Sin/d2_71_N_490_27 ), .Q1(\CIC1Sin/d2_27 ), 
    .FCO(\CIC1Sin/n11011 ));
  CIC1Sin_SLICE_499 \CIC1Sin/SLICE_499 ( .B1(\CIC1Sin/d2_25 ), 
    .A1(\CIC1Sin/d1_25 ), .B0(\CIC1Sin/d2_24 ), .A0(\CIC1Sin/d1_24 ), 
    .DI1(\CIC1Sin/d2_71_N_490_25 ), .DI0(\CIC1Sin/d2_71_N_490_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11009 ), .F0(\CIC1Sin/d2_71_N_490_24 ), 
    .Q0(\CIC1Sin/d2_24 ), .F1(\CIC1Sin/d2_71_N_490_25 ), .Q1(\CIC1Sin/d2_25 ), 
    .FCO(\CIC1Sin/n11010 ));
  CIC1Sin_SLICE_500 \CIC1Sin/SLICE_500 ( .B1(\CIC1Sin/d2_23 ), 
    .A1(\CIC1Sin/d1_23 ), .B0(\CIC1Sin/d2_22 ), .A0(\CIC1Sin/d1_22 ), 
    .DI1(\CIC1Sin/d2_71_N_490_23 ), .DI0(\CIC1Sin/d2_71_N_490_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11008 ), .F0(\CIC1Sin/d2_71_N_490_22 ), 
    .Q0(\CIC1Sin/d2_22 ), .F1(\CIC1Sin/d2_71_N_490_23 ), .Q1(\CIC1Sin/d2_23 ), 
    .FCO(\CIC1Sin/n11009 ));
  CIC1Sin_SLICE_501 \CIC1Sin/SLICE_501 ( .B1(\CIC1Sin/d2_21 ), 
    .A1(\CIC1Sin/d1_21 ), .B0(\CIC1Sin/d2_20 ), .A0(\CIC1Sin/d1_20 ), 
    .DI1(\CIC1Sin/d2_71_N_490_21 ), .DI0(\CIC1Sin/d2_71_N_490_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11007 ), .F0(\CIC1Sin/d2_71_N_490_20 ), 
    .Q0(\CIC1Sin/d2_20 ), .F1(\CIC1Sin/d2_71_N_490_21 ), .Q1(\CIC1Sin/d2_21 ), 
    .FCO(\CIC1Sin/n11008 ));
  CIC1Sin_SLICE_502 \CIC1Sin/SLICE_502 ( .B1(\CIC1Sin/d2_19 ), 
    .A1(\CIC1Sin/d1_19 ), .B0(\CIC1Sin/d2_18 ), .A0(\CIC1Sin/d1_18 ), 
    .DI1(\CIC1Sin/d2_71_N_490_19 ), .DI0(\CIC1Sin/d2_71_N_490_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11006 ), .F0(\CIC1Sin/d2_71_N_490_18 ), 
    .Q0(\CIC1Sin/d2_18 ), .F1(\CIC1Sin/d2_71_N_490_19 ), .Q1(\CIC1Sin/d2_19 ), 
    .FCO(\CIC1Sin/n11007 ));
  CIC1Sin_SLICE_503 \CIC1Sin/SLICE_503 ( .B1(\CIC1Sin/d2_17 ), 
    .A1(\CIC1Sin/d1_17 ), .B0(\CIC1Sin/d2_16 ), .A0(\CIC1Sin/d1_16 ), 
    .DI1(\CIC1Sin/d2_71_N_490_17 ), .DI0(\CIC1Sin/d2_71_N_490_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11005 ), .F0(\CIC1Sin/d2_71_N_490_16 ), 
    .Q0(\CIC1Sin/d2_16 ), .F1(\CIC1Sin/d2_71_N_490_17 ), .Q1(\CIC1Sin/d2_17 ), 
    .FCO(\CIC1Sin/n11006 ));
  CIC1Sin_SLICE_504 \CIC1Sin/SLICE_504 ( .B1(\CIC1Sin/d2_15 ), 
    .A1(\CIC1Sin/d1_15 ), .B0(\CIC1Sin/d2_14 ), .A0(\CIC1Sin/d1_14 ), 
    .DI1(\CIC1Sin/d2_71_N_490_15 ), .DI0(\CIC1Sin/d2_71_N_490_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11004 ), .F0(\CIC1Sin/d2_71_N_490_14 ), 
    .Q0(\CIC1Sin/d2_14 ), .F1(\CIC1Sin/d2_71_N_490_15 ), .Q1(\CIC1Sin/d2_15 ), 
    .FCO(\CIC1Sin/n11005 ));
  CIC1Sin_SLICE_505 \CIC1Sin/SLICE_505 ( .B1(\CIC1Sin/d2_13 ), 
    .A1(\CIC1Sin/d1_13 ), .B0(\CIC1Sin/d2_12 ), .A0(\CIC1Sin/d1_12 ), 
    .DI1(\CIC1Sin/d2_71_N_490_13 ), .DI0(\CIC1Sin/d2_71_N_490_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11003 ), .F0(\CIC1Sin/d2_71_N_490_12 ), 
    .Q0(\CIC1Sin/d2_12 ), .F1(\CIC1Sin/d2_71_N_490_13 ), .Q1(\CIC1Sin/d2_13 ), 
    .FCO(\CIC1Sin/n11004 ));
  CIC1Sin_SLICE_506 \CIC1Sin/SLICE_506 ( .B1(\CIC1Sin/d2_11 ), 
    .A1(\CIC1Sin/d1_11 ), .B0(\CIC1Sin/d2_10 ), .A0(\CIC1Sin/d1_10 ), 
    .DI1(\CIC1Sin/d2_71_N_490_11 ), .DI0(\CIC1Sin/d2_71_N_490_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11002 ), .F0(\CIC1Sin/d2_71_N_490_10 ), 
    .Q0(\CIC1Sin/d2_10 ), .F1(\CIC1Sin/d2_71_N_490_11 ), .Q1(\CIC1Sin/d2_11 ), 
    .FCO(\CIC1Sin/n11003 ));
  CIC1Sin_SLICE_507 \CIC1Sin/SLICE_507 ( .B1(\CIC1Sin/d2_9 ), 
    .A1(\CIC1Sin/d1_9 ), .B0(\CIC1Sin/d2_8 ), .A0(\CIC1Sin/d1_8 ), 
    .DI1(\CIC1Sin/d2_71_N_490_9 ), .DI0(\CIC1Sin/d2_71_N_490_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11001 ), .F0(\CIC1Sin/d2_71_N_490_8 ), 
    .Q0(\CIC1Sin/d2_8 ), .F1(\CIC1Sin/d2_71_N_490_9 ), .Q1(\CIC1Sin/d2_9 ), 
    .FCO(\CIC1Sin/n11002 ));
  CIC1Sin_SLICE_508 \CIC1Sin/SLICE_508 ( .B1(\CIC1Sin/d2_7 ), 
    .A1(\CIC1Sin/d1_7 ), .B0(\CIC1Sin/d2_6 ), .A0(\CIC1Sin/d1_6 ), 
    .DI1(\CIC1Sin/d2_71_N_490_7 ), .DI0(\CIC1Sin/d2_71_N_490_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n11000 ), .F0(\CIC1Sin/d2_71_N_490_6 ), 
    .Q0(\CIC1Sin/d2_6 ), .F1(\CIC1Sin/d2_71_N_490_7 ), .Q1(\CIC1Sin/d2_7 ), 
    .FCO(\CIC1Sin/n11001 ));
  CIC1Sin_SLICE_509 \CIC1Sin/SLICE_509 ( .B1(\CIC1Sin/d2_5 ), 
    .A1(\CIC1Sin/d1_5 ), .B0(\CIC1Sin/d2_4 ), .A0(\CIC1Sin/d1_4 ), 
    .DI1(\CIC1Sin/d2_71_N_490_5 ), .DI0(\CIC1Sin/d2_71_N_490_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10999 ), .F0(\CIC1Sin/d2_71_N_490_4 ), 
    .Q0(\CIC1Sin/d2_4 ), .F1(\CIC1Sin/d2_71_N_490_5 ), .Q1(\CIC1Sin/d2_5 ), 
    .FCO(\CIC1Sin/n11000 ));
  CIC1Sin_SLICE_510 \CIC1Sin/SLICE_510 ( .B1(\CIC1Sin/d2_3 ), 
    .A1(\CIC1Sin/d1_3 ), .B0(\CIC1Sin/d2_2 ), .A0(\CIC1Sin/d1_2 ), 
    .DI1(\CIC1Sin/d2_71_N_490_3 ), .DI0(\CIC1Sin/d2_71_N_490_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10998 ), .F0(\CIC1Sin/d2_71_N_490_2 ), 
    .Q0(\CIC1Sin/d2_2 ), .F1(\CIC1Sin/d2_71_N_490_3 ), .Q1(\CIC1Sin/d2_3 ), 
    .FCO(\CIC1Sin/n10999 ));
  CIC1Sin_SLICE_511 \CIC1Sin/SLICE_511 ( .B1(\CIC1Sin/d2_1 ), 
    .A1(\CIC1Sin/d1_1 ), .B0(\CIC1Sin/d2_0 ), .A0(\CIC1Sin/d1_0 ), 
    .DI1(\CIC1Sin/d2_71_N_490_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d2_71_N_490_1 ), 
    .Q1(\CIC1Sin/d2_1 ), .FCO(\CIC1Sin/n10998 ));
  CIC1Sin_SLICE_512 \CIC1Sin/SLICE_512 ( .FCI(\CIC1Sin/n10953 ), 
    .F0(\CIC1Sin/n4276 ));
  CIC1Sin_SLICE_513 \CIC1Sin/SLICE_513 ( .B1(\CIC1Sin/d1_35 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_34 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_35 ), .DI0(\CIC1Sin/d1_71_N_418_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10952 ), .F0(\CIC1Sin/d1_71_N_418_34 ), 
    .Q0(\CIC1Sin/d1_34 ), .F1(\CIC1Sin/d1_71_N_418_35 ), .Q1(\CIC1Sin/d1_35 ), 
    .FCO(\CIC1Sin/n10953 ));
  CIC1Sin_SLICE_514 \CIC1Sin/SLICE_514 ( .B1(\CIC1Sin/d1_33 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_32 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_33 ), .DI0(\CIC1Sin/d1_71_N_418_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10951 ), .F0(\CIC1Sin/d1_71_N_418_32 ), 
    .Q0(\CIC1Sin/d1_32 ), .F1(\CIC1Sin/d1_71_N_418_33 ), .Q1(\CIC1Sin/d1_33 ), 
    .FCO(\CIC1Sin/n10952 ));
  CIC1Sin_SLICE_515 \CIC1Sin/SLICE_515 ( .B1(\CIC1Sin/d1_31 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_30 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_31 ), .DI0(\CIC1Sin/d1_71_N_418_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10950 ), .F0(\CIC1Sin/d1_71_N_418_30 ), 
    .Q0(\CIC1Sin/d1_30 ), .F1(\CIC1Sin/d1_71_N_418_31 ), .Q1(\CIC1Sin/d1_31 ), 
    .FCO(\CIC1Sin/n10951 ));
  CIC1Sin_SLICE_516 \CIC1Sin/SLICE_516 ( .B1(\CIC1Sin/d1_29 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_28 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_29 ), .DI0(\CIC1Sin/d1_71_N_418_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10949 ), .F0(\CIC1Sin/d1_71_N_418_28 ), 
    .Q0(\CIC1Sin/d1_28 ), .F1(\CIC1Sin/d1_71_N_418_29 ), .Q1(\CIC1Sin/d1_29 ), 
    .FCO(\CIC1Sin/n10950 ));
  CIC1Sin_SLICE_517 \CIC1Sin/SLICE_517 ( .B1(\CIC1Sin/d1_27 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_26 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_27 ), .DI0(\CIC1Sin/d1_71_N_418_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10948 ), .F0(\CIC1Sin/d1_71_N_418_26 ), 
    .Q0(\CIC1Sin/d1_26 ), .F1(\CIC1Sin/d1_71_N_418_27 ), .Q1(\CIC1Sin/d1_27 ), 
    .FCO(\CIC1Sin/n10949 ));
  CIC1Sin_SLICE_518 \CIC1Sin/SLICE_518 ( .B1(\CIC1Sin/d1_25 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_24 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_25 ), .DI0(\CIC1Sin/d1_71_N_418_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10947 ), .F0(\CIC1Sin/d1_71_N_418_24 ), 
    .Q0(\CIC1Sin/d1_24 ), .F1(\CIC1Sin/d1_71_N_418_25 ), .Q1(\CIC1Sin/d1_25 ), 
    .FCO(\CIC1Sin/n10948 ));
  CIC1Sin_SLICE_519 \CIC1Sin/SLICE_519 ( .B1(\CIC1Sin/d1_23 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_22 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_23 ), .DI0(\CIC1Sin/d1_71_N_418_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10946 ), .F0(\CIC1Sin/d1_71_N_418_22 ), 
    .Q0(\CIC1Sin/d1_22 ), .F1(\CIC1Sin/d1_71_N_418_23 ), .Q1(\CIC1Sin/d1_23 ), 
    .FCO(\CIC1Sin/n10947 ));
  CIC1Sin_SLICE_520 \CIC1Sin/SLICE_520 ( .B1(\CIC1Sin/d1_21 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_20 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_21 ), .DI0(\CIC1Sin/d1_71_N_418_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10945 ), .F0(\CIC1Sin/d1_71_N_418_20 ), 
    .Q0(\CIC1Sin/d1_20 ), .F1(\CIC1Sin/d1_71_N_418_21 ), .Q1(\CIC1Sin/d1_21 ), 
    .FCO(\CIC1Sin/n10946 ));
  CIC1Sin_SLICE_521 \CIC1Sin/SLICE_521 ( .B1(\CIC1Sin/d1_19 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_18 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_19 ), .DI0(\CIC1Sin/d1_71_N_418_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10944 ), .F0(\CIC1Sin/d1_71_N_418_18 ), 
    .Q0(\CIC1Sin/d1_18 ), .F1(\CIC1Sin/d1_71_N_418_19 ), .Q1(\CIC1Sin/d1_19 ), 
    .FCO(\CIC1Sin/n10945 ));
  CIC1Sin_SLICE_522 \CIC1Sin/SLICE_522 ( .B1(\CIC1Sin/d1_17 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_16 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_17 ), .DI0(\CIC1Sin/d1_71_N_418_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10943 ), .F0(\CIC1Sin/d1_71_N_418_16 ), 
    .Q0(\CIC1Sin/d1_16 ), .F1(\CIC1Sin/d1_71_N_418_17 ), .Q1(\CIC1Sin/d1_17 ), 
    .FCO(\CIC1Sin/n10944 ));
  CIC1Sin_SLICE_523 \CIC1Sin/SLICE_523 ( .B1(\CIC1Sin/d1_15 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_14 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_15 ), .DI0(\CIC1Sin/d1_71_N_418_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10942 ), .F0(\CIC1Sin/d1_71_N_418_14 ), 
    .Q0(\CIC1Sin/d1_14 ), .F1(\CIC1Sin/d1_71_N_418_15 ), .Q1(\CIC1Sin/d1_15 ), 
    .FCO(\CIC1Sin/n10943 ));
  CIC1Sin_SLICE_524 \CIC1Sin/SLICE_524 ( .B1(\CIC1Sin/d1_13 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_12 ), .A0(MixerOutSin_11), 
    .DI1(\CIC1Sin/d1_71_N_418_13 ), .DI0(\CIC1Sin/d1_71_N_418_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10941 ), .F0(\CIC1Sin/d1_71_N_418_12 ), 
    .Q0(\CIC1Sin/d1_12 ), .F1(\CIC1Sin/d1_71_N_418_13 ), .Q1(\CIC1Sin/d1_13 ), 
    .FCO(\CIC1Sin/n10942 ));
  CIC1Sin_SLICE_525 \CIC1Sin/SLICE_525 ( .B1(\CIC1Sin/d1_11 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_10 ), .A0(MixerOutSin_10), 
    .DI1(\CIC1Sin/d1_71_N_418_11 ), .DI0(\CIC1Sin/d1_71_N_418_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10940 ), .F0(\CIC1Sin/d1_71_N_418_10 ), 
    .Q0(\CIC1Sin/d1_10 ), .F1(\CIC1Sin/d1_71_N_418_11 ), .Q1(\CIC1Sin/d1_11 ), 
    .FCO(\CIC1Sin/n10941 ));
  CIC1Sin_SLICE_526 \CIC1Sin/SLICE_526 ( .B1(\CIC1Sin/d1_9 ), 
    .A1(MixerOutSin_9), .B0(\CIC1Sin/d1_8 ), .A0(MixerOutSin_8), 
    .DI1(\CIC1Sin/d1_71_N_418_9 ), .DI0(\CIC1Sin/d1_71_N_418_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10939 ), .F0(\CIC1Sin/d1_71_N_418_8 ), 
    .Q0(\CIC1Sin/d1_8 ), .F1(\CIC1Sin/d1_71_N_418_9 ), .Q1(\CIC1Sin/d1_9 ), 
    .FCO(\CIC1Sin/n10940 ));
  CIC1Sin_SLICE_527 \CIC1Sin/SLICE_527 ( .B1(\CIC1Sin/d1_7 ), 
    .A1(MixerOutSin_7), .B0(\CIC1Sin/d1_6 ), .A0(MixerOutSin_6), 
    .DI1(\CIC1Sin/d1_71_N_418_7 ), .DI0(\CIC1Sin/d1_71_N_418_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10938 ), .F0(\CIC1Sin/d1_71_N_418_6 ), 
    .Q0(\CIC1Sin/d1_6 ), .F1(\CIC1Sin/d1_71_N_418_7 ), .Q1(\CIC1Sin/d1_7 ), 
    .FCO(\CIC1Sin/n10939 ));
  CIC1Sin_SLICE_528 \CIC1Sin/SLICE_528 ( .B1(\CIC1Sin/d1_5 ), 
    .A1(MixerOutSin_5), .B0(\CIC1Sin/d1_4 ), .A0(MixerOutSin_4), 
    .DI1(\CIC1Sin/d1_71_N_418_5 ), .DI0(\CIC1Sin/d1_71_N_418_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10937 ), .F0(\CIC1Sin/d1_71_N_418_4 ), 
    .Q0(\CIC1Sin/d1_4 ), .F1(\CIC1Sin/d1_71_N_418_5 ), .Q1(\CIC1Sin/d1_5 ), 
    .FCO(\CIC1Sin/n10938 ));
  CIC1Sin_SLICE_529 \CIC1Sin/SLICE_529 ( .B1(\CIC1Sin/d1_3 ), 
    .A1(MixerOutSin_3), .B0(\CIC1Sin/d1_2 ), .A0(MixerOutSin_2), 
    .DI1(\CIC1Sin/d1_71_N_418_3 ), .DI0(\CIC1Sin/d1_71_N_418_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n10936 ), .F0(\CIC1Sin/d1_71_N_418_2 ), 
    .Q0(\CIC1Sin/d1_2 ), .F1(\CIC1Sin/d1_71_N_418_3 ), .Q1(\CIC1Sin/d1_3 ), 
    .FCO(\CIC1Sin/n10937 ));
  CIC1Sin_SLICE_530 \CIC1Sin/SLICE_530 ( .B1(\CIC1Sin/d1_1 ), 
    .A1(MixerOutSin_1), .B0(\CIC1Sin/d1_0 ), .A0(MixerOutSin_0), 
    .DI1(\CIC1Sin/d1_71_N_418_1 ), .CLK(osc_clk), .F1(\CIC1Sin/d1_71_N_418_1 ), 
    .Q1(\CIC1Sin/d1_1 ), .FCO(\CIC1Sin/n10936 ));
  CIC1Sin_SLICE_531 \CIC1Sin/SLICE_531 ( .B0(\CIC1Sin/d_d6_35 ), 
    .A0(\CIC1Sin/d6_35 ), .DI0(\CIC1Sin/d7_71_N_1531_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_347 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12424 ), 
    .F0(\CIC1Sin/d7_71_N_1531_35 ), .Q0(\CIC1Sin/d7_35 ), .F1(\CIC1Sin/n7012 ));
  CIC1Sin_SLICE_532 \CIC1Sin/SLICE_532 ( .B1(\CIC1Sin/d_d6_34 ), 
    .A1(\CIC1Sin/d6_34 ), .B0(\CIC1Sin/d_d6_33 ), .A0(\CIC1Sin/d6_33 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_34 ), .DI0(\CIC1Sin/d7_71_N_1531_33 ), 
    .CE(\CIC1Sin/osc_clk_enable_347 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12423 ), 
    .F0(\CIC1Sin/d7_71_N_1531_33 ), .Q0(\CIC1Sin/d7_33 ), 
    .F1(\CIC1Sin/d7_71_N_1531_34 ), .Q1(\CIC1Sin/d7_34 ), 
    .FCO(\CIC1Sin/n12424 ));
  CIC1Sin_SLICE_533 \CIC1Sin/SLICE_533 ( .B1(\CIC1Sin/d_d6_32 ), 
    .A1(\CIC1Sin/d6_32 ), .B0(\CIC1Sin/d_d6_31 ), .A0(\CIC1Sin/d6_31 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_32 ), .DI0(\CIC1Sin/d7_71_N_1531_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_347 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12422 ), 
    .F0(\CIC1Sin/d7_71_N_1531_31 ), .Q0(\CIC1Sin/d7_31 ), 
    .F1(\CIC1Sin/d7_71_N_1531_32 ), .Q1(\CIC1Sin/d7_32 ), 
    .FCO(\CIC1Sin/n12423 ));
  CIC1Sin_SLICE_534 \CIC1Sin/SLICE_534 ( .B0(\CIC1Sin/d_d7_35 ), 
    .A0(\CIC1Sin/d7_35 ), .DI0(\CIC1Sin/d8_71_N_1603_35 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11777 ), 
    .F0(\CIC1Sin/d8_71_N_1603_35 ), .Q0(\CIC1Sin/d8_35 ), .F1(\CIC1Sin/n6860 ));
  CIC1Sin_SLICE_535 \CIC1Sin/SLICE_535 ( .B1(\CIC1Sin/d_d7_34 ), 
    .A1(\CIC1Sin/d7_34 ), .B0(\CIC1Sin/d_d7_33 ), .A0(\CIC1Sin/d7_33 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_34 ), .DI0(\CIC1Sin/d8_71_N_1603_33 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11776 ), 
    .F0(\CIC1Sin/d8_71_N_1603_33 ), .Q0(\CIC1Sin/d8_33 ), 
    .F1(\CIC1Sin/d8_71_N_1603_34 ), .Q1(\CIC1Sin/d8_34 ), 
    .FCO(\CIC1Sin/n11777 ));
  CIC1Sin_SLICE_536 \CIC1Sin/SLICE_536 ( .B1(\CIC1Sin/d_d7_32 ), 
    .A1(\CIC1Sin/d7_32 ), .B0(\CIC1Sin/d_d7_31 ), .A0(\CIC1Sin/d7_31 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_32 ), .DI0(\CIC1Sin/d8_71_N_1603_31 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11775 ), 
    .F0(\CIC1Sin/d8_71_N_1603_31 ), .Q0(\CIC1Sin/d8_31 ), 
    .F1(\CIC1Sin/d8_71_N_1603_32 ), .Q1(\CIC1Sin/d8_32 ), 
    .FCO(\CIC1Sin/n11776 ));
  CIC1Sin_SLICE_537 \CIC1Sin/SLICE_537 ( .B1(\CIC1Sin/d_d7_30 ), 
    .A1(\CIC1Sin/d7_30 ), .B0(\CIC1Sin/d_d7_29 ), .A0(\CIC1Sin/d7_29 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_30 ), .DI0(\CIC1Sin/d8_71_N_1603_29 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11774 ), 
    .F0(\CIC1Sin/d8_71_N_1603_29 ), .Q0(\CIC1Sin/d8_29 ), 
    .F1(\CIC1Sin/d8_71_N_1603_30 ), .Q1(\CIC1Sin/d8_30 ), 
    .FCO(\CIC1Sin/n11775 ));
  CIC1Sin_SLICE_538 \CIC1Sin/SLICE_538 ( .B1(\CIC1Sin/d_d7_28 ), 
    .A1(\CIC1Sin/d7_28 ), .B0(\CIC1Sin/d_d7_27 ), .A0(\CIC1Sin/d7_27 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_28 ), .DI0(\CIC1Sin/d8_71_N_1603_27 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11773 ), 
    .F0(\CIC1Sin/d8_71_N_1603_27 ), .Q0(\CIC1Sin/d8_27 ), 
    .F1(\CIC1Sin/d8_71_N_1603_28 ), .Q1(\CIC1Sin/d8_28 ), 
    .FCO(\CIC1Sin/n11774 ));
  CIC1Sin_SLICE_539 \CIC1Sin/SLICE_539 ( .B1(\CIC1Sin/d_d7_26 ), 
    .A1(\CIC1Sin/d7_26 ), .B0(\CIC1Sin/d_d7_25 ), .A0(\CIC1Sin/d7_25 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_26 ), .DI0(\CIC1Sin/d8_71_N_1603_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11772 ), 
    .F0(\CIC1Sin/d8_71_N_1603_25 ), .Q0(\CIC1Sin/d8_25 ), 
    .F1(\CIC1Sin/d8_71_N_1603_26 ), .Q1(\CIC1Sin/d8_26 ), 
    .FCO(\CIC1Sin/n11773 ));
  CIC1Sin_SLICE_540 \CIC1Sin/SLICE_540 ( .B1(\CIC1Sin/d_d7_24 ), 
    .A1(\CIC1Sin/d7_24 ), .B0(\CIC1Sin/d_d7_23 ), .A0(\CIC1Sin/d7_23 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_24 ), .DI0(\CIC1Sin/d8_71_N_1603_23 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11771 ), 
    .F0(\CIC1Sin/d8_71_N_1603_23 ), .Q0(\CIC1Sin/d8_23 ), 
    .F1(\CIC1Sin/d8_71_N_1603_24 ), .Q1(\CIC1Sin/d8_24 ), 
    .FCO(\CIC1Sin/n11772 ));
  CIC1Sin_SLICE_541 \CIC1Sin/SLICE_541 ( .B1(\CIC1Sin/d_d7_22 ), 
    .A1(\CIC1Sin/d7_22 ), .B0(\CIC1Sin/d_d7_21 ), .A0(\CIC1Sin/d7_21 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_22 ), .DI0(\CIC1Sin/d8_71_N_1603_21 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11770 ), 
    .F0(\CIC1Sin/d8_71_N_1603_21 ), .Q0(\CIC1Sin/d8_21 ), 
    .F1(\CIC1Sin/d8_71_N_1603_22 ), .Q1(\CIC1Sin/d8_22 ), 
    .FCO(\CIC1Sin/n11771 ));
  CIC1Sin_SLICE_542 \CIC1Sin/SLICE_542 ( .B1(\CIC1Sin/d_d7_20 ), 
    .A1(\CIC1Sin/d7_20 ), .B0(\CIC1Sin/d_d7_19 ), .A0(\CIC1Sin/d7_19 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_20 ), .DI0(\CIC1Sin/d8_71_N_1603_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11769 ), 
    .F0(\CIC1Sin/d8_71_N_1603_19 ), .Q0(\CIC1Sin/d8_19 ), 
    .F1(\CIC1Sin/d8_71_N_1603_20 ), .Q1(\CIC1Sin/d8_20 ), 
    .FCO(\CIC1Sin/n11770 ));
  CIC1Sin_SLICE_543 \CIC1Sin/SLICE_543 ( .B1(\CIC1Sin/d_d7_18 ), 
    .A1(\CIC1Sin/d7_18 ), .B0(\CIC1Sin/d_d7_17 ), .A0(\CIC1Sin/d7_17 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_18 ), .DI0(\CIC1Sin/d8_71_N_1603_17 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11768 ), 
    .F0(\CIC1Sin/d8_71_N_1603_17 ), .Q0(\CIC1Sin/d8_17 ), 
    .F1(\CIC1Sin/d8_71_N_1603_18 ), .Q1(\CIC1Sin/d8_18 ), 
    .FCO(\CIC1Sin/n11769 ));
  CIC1Sin_SLICE_544 \CIC1Sin/SLICE_544 ( .B1(\CIC1Sin/d_d7_16 ), 
    .A1(\CIC1Sin/d7_16 ), .B0(\CIC1Sin/d_d7_15 ), .A0(\CIC1Sin/d7_15 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_16 ), .DI0(\CIC1Sin/d8_71_N_1603_15 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11767 ), 
    .F0(\CIC1Sin/d8_71_N_1603_15 ), .Q0(\CIC1Sin/d8_15 ), 
    .F1(\CIC1Sin/d8_71_N_1603_16 ), .Q1(\CIC1Sin/d8_16 ), 
    .FCO(\CIC1Sin/n11768 ));
  CIC1Sin_SLICE_545 \CIC1Sin/SLICE_545 ( .B1(\CIC1Sin/d_d7_14 ), 
    .A1(\CIC1Sin/d7_14 ), .B0(\CIC1Sin/d_d7_13 ), .A0(\CIC1Sin/d7_13 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_14 ), .DI0(\CIC1Sin/d8_71_N_1603_13 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11766 ), 
    .F0(\CIC1Sin/d8_71_N_1603_13 ), .Q0(\CIC1Sin/d8_13 ), 
    .F1(\CIC1Sin/d8_71_N_1603_14 ), .Q1(\CIC1Sin/d8_14 ), 
    .FCO(\CIC1Sin/n11767 ));
  CIC1Sin_SLICE_546 \CIC1Sin/SLICE_546 ( .B1(\CIC1Sin/d_d7_12 ), 
    .A1(\CIC1Sin/d7_12 ), .B0(\CIC1Sin/d_d7_11 ), .A0(\CIC1Sin/d7_11 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_12 ), .DI0(\CIC1Sin/d8_71_N_1603_11 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11765 ), 
    .F0(\CIC1Sin/d8_71_N_1603_11 ), .Q0(\CIC1Sin/d8_11 ), 
    .F1(\CIC1Sin/d8_71_N_1603_12 ), .Q1(\CIC1Sin/d8_12 ), 
    .FCO(\CIC1Sin/n11766 ));
  CIC1Sin_SLICE_547 \CIC1Sin/SLICE_547 ( .B1(\CIC1Sin/d_d7_10 ), 
    .A1(\CIC1Sin/d7_10 ), .B0(\CIC1Sin/d_d7_9 ), .A0(\CIC1Sin/d7_9 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_10 ), .DI0(\CIC1Sin/d8_71_N_1603_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11764 ), 
    .F0(\CIC1Sin/d8_71_N_1603_9 ), .Q0(\CIC1Sin/d8_9 ), 
    .F1(\CIC1Sin/d8_71_N_1603_10 ), .Q1(\CIC1Sin/d8_10 ), 
    .FCO(\CIC1Sin/n11765 ));
  CIC1Sin_SLICE_548 \CIC1Sin/SLICE_548 ( .B1(\CIC1Sin/d_d7_8 ), 
    .A1(\CIC1Sin/d7_8 ), .B0(\CIC1Sin/d_d7_7 ), .A0(\CIC1Sin/d7_7 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_8 ), .DI0(\CIC1Sin/d8_71_N_1603_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11763 ), 
    .F0(\CIC1Sin/d8_71_N_1603_7 ), .Q0(\CIC1Sin/d8_7 ), 
    .F1(\CIC1Sin/d8_71_N_1603_8 ), .Q1(\CIC1Sin/d8_8 ), .FCO(\CIC1Sin/n11764 ));
  CIC1Sin_SLICE_549 \CIC1Sin/SLICE_549 ( .B1(\CIC1Sin/d_d7_6 ), 
    .A1(\CIC1Sin/d7_6 ), .B0(\CIC1Sin/d_d7_5 ), .A0(\CIC1Sin/d7_5 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_6 ), .DI0(\CIC1Sin/d8_71_N_1603_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11762 ), 
    .F0(\CIC1Sin/d8_71_N_1603_5 ), .Q0(\CIC1Sin/d8_5 ), 
    .F1(\CIC1Sin/d8_71_N_1603_6 ), .Q1(\CIC1Sin/d8_6 ), .FCO(\CIC1Sin/n11763 ));
  CIC1Sin_SLICE_550 \CIC1Sin/SLICE_550 ( .B1(\CIC1Sin/d_d7_4 ), 
    .A1(\CIC1Sin/d7_4 ), .B0(\CIC1Sin/d_d7_3 ), .A0(\CIC1Sin/d7_3 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_4 ), .DI0(\CIC1Sin/d8_71_N_1603_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11761 ), 
    .F0(\CIC1Sin/d8_71_N_1603_3 ), .Q0(\CIC1Sin/d8_3 ), 
    .F1(\CIC1Sin/d8_71_N_1603_4 ), .Q1(\CIC1Sin/d8_4 ), .FCO(\CIC1Sin/n11762 ));
  CIC1Sin_SLICE_551 \CIC1Sin/SLICE_551 ( .B1(\CIC1Sin/d_d7_2 ), 
    .A1(\CIC1Sin/d7_2 ), .B0(\CIC1Sin/d_d7_1 ), .A0(\CIC1Sin/d7_1 ), 
    .DI1(\CIC1Sin/d8_71_N_1603_2 ), .DI0(\CIC1Sin/d8_71_N_1603_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .FCI(\CIC1Sin/n11760 ), 
    .F0(\CIC1Sin/d8_71_N_1603_1 ), .Q0(\CIC1Sin/d8_1 ), 
    .F1(\CIC1Sin/d8_71_N_1603_2 ), .Q1(\CIC1Sin/d8_2 ), .FCO(\CIC1Sin/n11761 ));
  CIC1Sin_SLICE_552 \CIC1Sin/SLICE_552 ( .B1(\CIC1Sin/d_d7_0 ), 
    .A1(\CIC1Sin/d7_0 ), .DI1(\CIC1Sin/d8_71_N_1603_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d8_71_N_1603_0 ), .Q1(\CIC1Sin/d8_0 ), .FCO(\CIC1Sin/n11760 ));
  CIC1Sin_SLICE_553 \CIC1Sin/SLICE_553 ( .B0(\CIC1Sin/d_d9_35 ), 
    .A0(\CIC1Sin/d9_35 ), .FCI(\CIC1Sin/n11641 ), .F1(\CIC1Sin/n5948 ));
  CIC1Sin_SLICE_554 \CIC1Sin/SLICE_554 ( .B1(\CIC1Sin/d_d9_34 ), 
    .A1(\CIC1Sin/d9_34 ), .B0(\CIC1Sin/d_d9_33 ), .A0(\CIC1Sin/d9_33 ), 
    .FCI(\CIC1Sin/n11640 ), .FCO(\CIC1Sin/n11641 ));
  CIC1Sin_SLICE_555 \CIC1Sin/SLICE_555 ( .B1(\CIC1Sin/d_d9_32 ), 
    .A1(\CIC1Sin/d9_32 ), .B0(\CIC1Sin/d_d9_31 ), .A0(\CIC1Sin/d9_31 ), 
    .FCI(\CIC1Sin/n11639 ), .FCO(\CIC1Sin/n11640 ));
  CIC1Sin_SLICE_556 \CIC1Sin/SLICE_556 ( .B1(\CIC1Sin/d_d9_30 ), 
    .A1(\CIC1Sin/d9_30 ), .B0(\CIC1Sin/d_d9_29 ), .A0(\CIC1Sin/d9_29 ), 
    .FCI(\CIC1Sin/n11638 ), .FCO(\CIC1Sin/n11639 ));
  CIC1Sin_SLICE_557 \CIC1Sin/SLICE_557 ( .B1(\CIC1Sin/d_d9_28 ), 
    .A1(\CIC1Sin/d9_28 ), .B0(\CIC1Sin/d_d9_27 ), .A0(\CIC1Sin/d9_27 ), 
    .FCI(\CIC1Sin/n11637 ), .FCO(\CIC1Sin/n11638 ));
  CIC1Sin_SLICE_558 \CIC1Sin/SLICE_558 ( .B1(\CIC1Sin/d_d9_26 ), 
    .A1(\CIC1Sin/d9_26 ), .B0(\CIC1Sin/d_d9_25 ), .A0(\CIC1Sin/d9_25 ), 
    .FCI(\CIC1Sin/n11636 ), .FCO(\CIC1Sin/n11637 ));
  CIC1Sin_SLICE_559 \CIC1Sin/SLICE_559 ( .B1(\CIC1Sin/d_d9_24 ), 
    .A1(\CIC1Sin/d9_24 ), .B0(\CIC1Sin/d_d9_23 ), .A0(\CIC1Sin/d9_23 ), 
    .FCI(\CIC1Sin/n11635 ), .FCO(\CIC1Sin/n11636 ));
  CIC1Sin_SLICE_560 \CIC1Sin/SLICE_560 ( .B1(\CIC1Sin/d_d9_22 ), 
    .A1(\CIC1Sin/d9_22 ), .B0(\CIC1Sin/d_d9_21 ), .A0(\CIC1Sin/d9_21 ), 
    .FCI(\CIC1Sin/n11634 ), .FCO(\CIC1Sin/n11635 ));
  CIC1Sin_SLICE_561 \CIC1Sin/SLICE_561 ( .B1(\CIC1Sin/d_d9_20 ), 
    .A1(\CIC1Sin/d9_20 ), .B0(\CIC1Sin/d_d9_19 ), .A0(\CIC1Sin/d9_19 ), 
    .FCI(\CIC1Sin/n11633 ), .FCO(\CIC1Sin/n11634 ));
  CIC1Sin_SLICE_562 \CIC1Sin/SLICE_562 ( .B1(\CIC1Sin/d_d9_18 ), 
    .A1(\CIC1Sin/d9_18 ), .B0(\CIC1Sin/d_d9_17 ), .A0(\CIC1Sin/d9_17 ), 
    .FCI(\CIC1Sin/n11632 ), .FCO(\CIC1Sin/n11633 ));
  CIC1Sin_SLICE_563 \CIC1Sin/SLICE_563 ( .B1(\CIC1Sin/d_d9_16 ), 
    .A1(\CIC1Sin/d9_16 ), .B0(\CIC1Sin/d_d9_15 ), .A0(\CIC1Sin/d9_15 ), 
    .FCI(\CIC1Sin/n11631 ), .FCO(\CIC1Sin/n11632 ));
  CIC1Sin_SLICE_564 \CIC1Sin/SLICE_564 ( .B1(\CIC1Sin/d_d9_14 ), 
    .A1(\CIC1Sin/d9_14 ), .B0(\CIC1Sin/d_d9_13 ), .A0(\CIC1Sin/d9_13 ), 
    .FCI(\CIC1Sin/n11630 ), .FCO(\CIC1Sin/n11631 ));
  CIC1Sin_SLICE_565 \CIC1Sin/SLICE_565 ( .B1(\CIC1Sin/d_d9_12 ), 
    .A1(\CIC1Sin/d9_12 ), .B0(\CIC1Sin/d_d9_11 ), .A0(\CIC1Sin/d9_11 ), 
    .FCI(\CIC1Sin/n11629 ), .FCO(\CIC1Sin/n11630 ));
  CIC1Sin_SLICE_566 \CIC1Sin/SLICE_566 ( .B1(\CIC1Sin/d_d6_30 ), 
    .A1(\CIC1Sin/d6_30 ), .B0(\CIC1Sin/d_d6_29 ), .A0(\CIC1Sin/d6_29 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_30 ), .DI0(\CIC1Sin/d7_71_N_1531_29 ), 
    .CE(\CIC1Sin/osc_clk_enable_347 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12421 ), 
    .F0(\CIC1Sin/d7_71_N_1531_29 ), .Q0(\CIC1Sin/d7_29 ), 
    .F1(\CIC1Sin/d7_71_N_1531_30 ), .Q1(\CIC1Sin/d7_30 ), 
    .FCO(\CIC1Sin/n12422 ));
  CIC1Sin_SLICE_567 \CIC1Sin/SLICE_567 ( .B1(\CIC1Sin/d_d6_28 ), 
    .A1(\CIC1Sin/d6_28 ), .B0(\CIC1Sin/d_d6_27 ), .A0(\CIC1Sin/d6_27 ), 
    .DI0(\CIC1Sin/d7_71_N_1531_27 ), .CE(\CIC1Sin/osc_clk_enable_297 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12420 ), .F0(\CIC1Sin/d7_71_N_1531_27 ), 
    .Q0(\CIC1Sin/d7_27 ), .F1(\CIC1Sin/d7_71_N_1531_28 ), 
    .FCO(\CIC1Sin/n12421 ));
  CIC1Sin_SLICE_568 \CIC1Sin/SLICE_568 ( .B1(\CIC1Sin/d_d6_26 ), 
    .A1(\CIC1Sin/d6_26 ), .B0(\CIC1Sin/d_d6_25 ), .A0(\CIC1Sin/d6_25 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_26 ), .DI0(\CIC1Sin/d7_71_N_1531_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12419 ), 
    .F0(\CIC1Sin/d7_71_N_1531_25 ), .Q0(\CIC1Sin/d7_25 ), 
    .F1(\CIC1Sin/d7_71_N_1531_26 ), .Q1(\CIC1Sin/d7_26 ), 
    .FCO(\CIC1Sin/n12420 ));
  CIC1Sin_SLICE_569 \CIC1Sin/SLICE_569 ( .B1(\CIC1Sin/d_d6_24 ), 
    .A1(\CIC1Sin/d6_24 ), .B0(\CIC1Sin/d_d6_23 ), .A0(\CIC1Sin/d6_23 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_24 ), .DI0(\CIC1Sin/d7_71_N_1531_23 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12418 ), 
    .F0(\CIC1Sin/d7_71_N_1531_23 ), .Q0(\CIC1Sin/d7_23 ), 
    .F1(\CIC1Sin/d7_71_N_1531_24 ), .Q1(\CIC1Sin/d7_24 ), 
    .FCO(\CIC1Sin/n12419 ));
  CIC1Sin_SLICE_570 \CIC1Sin/SLICE_570 ( .B1(\CIC1Sin/d_d6_22 ), 
    .A1(\CIC1Sin/d6_22 ), .B0(\CIC1Sin/d_d6_21 ), .A0(\CIC1Sin/d6_21 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_22 ), .DI0(\CIC1Sin/d7_71_N_1531_21 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12417 ), 
    .F0(\CIC1Sin/d7_71_N_1531_21 ), .Q0(\CIC1Sin/d7_21 ), 
    .F1(\CIC1Sin/d7_71_N_1531_22 ), .Q1(\CIC1Sin/d7_22 ), 
    .FCO(\CIC1Sin/n12418 ));
  CIC1Sin_SLICE_571 \CIC1Sin/SLICE_571 ( .B1(\CIC1Sin/d_d6_20 ), 
    .A1(\CIC1Sin/d6_20 ), .B0(\CIC1Sin/d_d6_19 ), .A0(\CIC1Sin/d6_19 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_20 ), .DI0(\CIC1Sin/d7_71_N_1531_19 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12416 ), 
    .F0(\CIC1Sin/d7_71_N_1531_19 ), .Q0(\CIC1Sin/d7_19 ), 
    .F1(\CIC1Sin/d7_71_N_1531_20 ), .Q1(\CIC1Sin/d7_20 ), 
    .FCO(\CIC1Sin/n12417 ));
  CIC1Sin_SLICE_572 \CIC1Sin/SLICE_572 ( .B1(\CIC1Sin/d_d6_18 ), 
    .A1(\CIC1Sin/d6_18 ), .B0(\CIC1Sin/d_d6_17 ), .A0(\CIC1Sin/d6_17 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_18 ), .DI0(\CIC1Sin/d7_71_N_1531_17 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12415 ), 
    .F0(\CIC1Sin/d7_71_N_1531_17 ), .Q0(\CIC1Sin/d7_17 ), 
    .F1(\CIC1Sin/d7_71_N_1531_18 ), .Q1(\CIC1Sin/d7_18 ), 
    .FCO(\CIC1Sin/n12416 ));
  CIC1Sin_SLICE_573 \CIC1Sin/SLICE_573 ( .B1(\CIC1Sin/d_d6_16 ), 
    .A1(\CIC1Sin/d6_16 ), .B0(\CIC1Sin/d_d6_15 ), .A0(\CIC1Sin/d6_15 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_16 ), .DI0(\CIC1Sin/d7_71_N_1531_15 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12414 ), 
    .F0(\CIC1Sin/d7_71_N_1531_15 ), .Q0(\CIC1Sin/d7_15 ), 
    .F1(\CIC1Sin/d7_71_N_1531_16 ), .Q1(\CIC1Sin/d7_16 ), 
    .FCO(\CIC1Sin/n12415 ));
  CIC1Sin_SLICE_574 \CIC1Sin/SLICE_574 ( .B1(\CIC1Sin/d_d6_14 ), 
    .A1(\CIC1Sin/d6_14 ), .B0(\CIC1Sin/d_d6_13 ), .A0(\CIC1Sin/d6_13 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_14 ), .DI0(\CIC1Sin/d7_71_N_1531_13 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12413 ), 
    .F0(\CIC1Sin/d7_71_N_1531_13 ), .Q0(\CIC1Sin/d7_13 ), 
    .F1(\CIC1Sin/d7_71_N_1531_14 ), .Q1(\CIC1Sin/d7_14 ), 
    .FCO(\CIC1Sin/n12414 ));
  CIC1Sin_SLICE_575 \CIC1Sin/SLICE_575 ( .B1(\CIC1Sin/d_d6_12 ), 
    .A1(\CIC1Sin/d6_12 ), .B0(\CIC1Sin/d_d6_11 ), .A0(\CIC1Sin/d6_11 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_12 ), .DI0(\CIC1Sin/d7_71_N_1531_11 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12412 ), 
    .F0(\CIC1Sin/d7_71_N_1531_11 ), .Q0(\CIC1Sin/d7_11 ), 
    .F1(\CIC1Sin/d7_71_N_1531_12 ), .Q1(\CIC1Sin/d7_12 ), 
    .FCO(\CIC1Sin/n12413 ));
  CIC1Sin_SLICE_576 \CIC1Sin/SLICE_576 ( .B1(\CIC1Sin/d_d6_10 ), 
    .A1(\CIC1Sin/d6_10 ), .B0(\CIC1Sin/d_d6_9 ), .A0(\CIC1Sin/d6_9 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_10 ), .DI0(\CIC1Sin/d7_71_N_1531_9 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12411 ), 
    .F0(\CIC1Sin/d7_71_N_1531_9 ), .Q0(\CIC1Sin/d7_9 ), 
    .F1(\CIC1Sin/d7_71_N_1531_10 ), .Q1(\CIC1Sin/d7_10 ), 
    .FCO(\CIC1Sin/n12412 ));
  CIC1Sin_SLICE_577 \CIC1Sin/SLICE_577 ( .B1(\CIC1Sin/d_d6_8 ), 
    .A1(\CIC1Sin/d6_8 ), .B0(\CIC1Sin/d_d6_7 ), .A0(\CIC1Sin/d6_7 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_8 ), .DI0(\CIC1Sin/d7_71_N_1531_7 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12410 ), 
    .F0(\CIC1Sin/d7_71_N_1531_7 ), .Q0(\CIC1Sin/d7_7 ), 
    .F1(\CIC1Sin/d7_71_N_1531_8 ), .Q1(\CIC1Sin/d7_8 ), .FCO(\CIC1Sin/n12411 ));
  CIC1Sin_SLICE_578 \CIC1Sin/SLICE_578 ( .B1(\CIC1Sin/d_d6_6 ), 
    .A1(\CIC1Sin/d6_6 ), .B0(\CIC1Sin/d_d6_5 ), .A0(\CIC1Sin/d6_5 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_6 ), .DI0(\CIC1Sin/d7_71_N_1531_5 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12409 ), 
    .F0(\CIC1Sin/d7_71_N_1531_5 ), .Q0(\CIC1Sin/d7_5 ), 
    .F1(\CIC1Sin/d7_71_N_1531_6 ), .Q1(\CIC1Sin/d7_6 ), .FCO(\CIC1Sin/n12410 ));
  CIC1Sin_SLICE_579 \CIC1Sin/SLICE_579 ( .B1(\CIC1Sin/d_d6_4 ), 
    .A1(\CIC1Sin/d6_4 ), .B0(\CIC1Sin/d_d6_3 ), .A0(\CIC1Sin/d6_3 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_4 ), .DI0(\CIC1Sin/d7_71_N_1531_3 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12408 ), 
    .F0(\CIC1Sin/d7_71_N_1531_3 ), .Q0(\CIC1Sin/d7_3 ), 
    .F1(\CIC1Sin/d7_71_N_1531_4 ), .Q1(\CIC1Sin/d7_4 ), .FCO(\CIC1Sin/n12409 ));
  CIC1Sin_SLICE_580 \CIC1Sin/SLICE_580 ( .B1(\CIC1Sin/d_d6_2 ), 
    .A1(\CIC1Sin/d6_2 ), .B0(\CIC1Sin/d_d6_1 ), .A0(\CIC1Sin/d6_1 ), 
    .DI1(\CIC1Sin/d7_71_N_1531_2 ), .DI0(\CIC1Sin/d7_71_N_1531_1 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12407 ), 
    .F0(\CIC1Sin/d7_71_N_1531_1 ), .Q0(\CIC1Sin/d7_1 ), 
    .F1(\CIC1Sin/d7_71_N_1531_2 ), .Q1(\CIC1Sin/d7_2 ), .FCO(\CIC1Sin/n12408 ));
  CIC1Sin_SLICE_581 \CIC1Sin/SLICE_581 ( .B1(\CIC1Sin/d_d6_0 ), 
    .A1(\CIC1Sin/d6_0 ), .DI1(\CIC1Sin/d7_71_N_1531_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .F1(\CIC1Sin/d7_71_N_1531_0 ), .Q1(\CIC1Sin/d7_0 ), .FCO(\CIC1Sin/n12407 ));
  CIC1Sin_SLICE_582 \CIC1Sin/SLICE_582 ( .B1(\CIC1Sin/d3_67 ), 
    .A1(\CIC1Sin/d2_67 ), .B0(\CIC1Sin/d3_66 ), .A0(\CIC1Sin/d2_66 ), 
    .FCI(\CIC1Sin/n12205 ), .F0(\CIC1Sin/n4587 ), .F1(\CIC1Sin/n4586 ), 
    .FCO(\CIC1Sin/n12206 ));
  CIC1Sin_SLICE_583 \CIC1Sin/SLICE_583 ( .B1(\CIC1Sin/d3_65 ), 
    .A1(\CIC1Sin/d2_65 ), .B0(\CIC1Sin/d3_64 ), .A0(\CIC1Sin/d2_64 ), 
    .FCI(\CIC1Sin/n12204 ), .F0(\CIC1Sin/n4589 ), .F1(\CIC1Sin/n4588 ), 
    .FCO(\CIC1Sin/n12205 ));
  CIC1Sin_SLICE_584 \CIC1Sin/SLICE_584 ( .B1(\CIC1Sin/d3_63 ), 
    .A1(\CIC1Sin/d2_63 ), .B0(\CIC1Sin/d3_62 ), .A0(\CIC1Sin/d2_62 ), 
    .FCI(\CIC1Sin/n12203 ), .F0(\CIC1Sin/n4591 ), .F1(\CIC1Sin/n4590 ), 
    .FCO(\CIC1Sin/n12204 ));
  CIC1Sin_SLICE_585 \CIC1Sin/SLICE_585 ( .B1(\CIC1Sin/d3_61 ), 
    .A1(\CIC1Sin/d2_61 ), .B0(\CIC1Sin/d3_60 ), .A0(\CIC1Sin/d2_60 ), 
    .FCI(\CIC1Sin/n12202 ), .F0(\CIC1Sin/n4593 ), .F1(\CIC1Sin/n4592 ), 
    .FCO(\CIC1Sin/n12203 ));
  CIC1Sin_SLICE_586 \CIC1Sin/SLICE_586 ( .B1(\CIC1Sin/d3_59 ), 
    .A1(\CIC1Sin/d2_59 ), .B0(\CIC1Sin/d3_58 ), .A0(\CIC1Sin/d2_58 ), 
    .FCI(\CIC1Sin/n12201 ), .F0(\CIC1Sin/n4595 ), .F1(\CIC1Sin/n4594 ), 
    .FCO(\CIC1Sin/n12202 ));
  CIC1Sin_SLICE_587 \CIC1Sin/SLICE_587 ( .B1(\CIC1Sin/d3_57 ), 
    .A1(\CIC1Sin/d2_57 ), .B0(\CIC1Sin/d3_56 ), .A0(\CIC1Sin/d2_56 ), 
    .FCI(\CIC1Sin/n12200 ), .F0(\CIC1Sin/n4597 ), .F1(\CIC1Sin/n4596 ), 
    .FCO(\CIC1Sin/n12201 ));
  CIC1Sin_SLICE_588 \CIC1Sin/SLICE_588 ( .B1(\CIC1Sin/d3_55 ), 
    .A1(\CIC1Sin/d2_55 ), .B0(\CIC1Sin/d3_54 ), .A0(\CIC1Sin/d2_54 ), 
    .FCI(\CIC1Sin/n12199 ), .F0(\CIC1Sin/n4599 ), .F1(\CIC1Sin/n4598 ), 
    .FCO(\CIC1Sin/n12200 ));
  CIC1Sin_SLICE_589 \CIC1Sin/SLICE_589 ( .B1(\CIC1Sin/d3_53 ), 
    .A1(\CIC1Sin/d2_53 ), .B0(\CIC1Sin/d3_52 ), .A0(\CIC1Sin/d2_52 ), 
    .FCI(\CIC1Sin/n12198 ), .F0(\CIC1Sin/n4601 ), .F1(\CIC1Sin/n4600 ), 
    .FCO(\CIC1Sin/n12199 ));
  CIC1Sin_SLICE_590 \CIC1Sin/SLICE_590 ( .B1(\CIC1Sin/d3_51 ), 
    .A1(\CIC1Sin/d2_51 ), .B0(\CIC1Sin/d3_50 ), .A0(\CIC1Sin/d2_50 ), 
    .FCI(\CIC1Sin/n12197 ), .F0(\CIC1Sin/n4603 ), .F1(\CIC1Sin/n4602 ), 
    .FCO(\CIC1Sin/n12198 ));
  CIC1Sin_SLICE_591 \CIC1Sin/SLICE_591 ( .B1(\CIC1Sin/d3_49 ), 
    .A1(\CIC1Sin/d2_49 ), .B0(\CIC1Sin/d3_48 ), .A0(\CIC1Sin/d2_48 ), 
    .FCI(\CIC1Sin/n12196 ), .F0(\CIC1Sin/n4605 ), .F1(\CIC1Sin/n4604 ), 
    .FCO(\CIC1Sin/n12197 ));
  CIC1Sin_SLICE_592 \CIC1Sin/SLICE_592 ( .B1(\CIC1Sin/d3_47 ), 
    .A1(\CIC1Sin/d2_47 ), .B0(\CIC1Sin/d3_46 ), .A0(\CIC1Sin/d2_46 ), 
    .FCI(\CIC1Sin/n12195 ), .F0(\CIC1Sin/n4607 ), .F1(\CIC1Sin/n4606 ), 
    .FCO(\CIC1Sin/n12196 ));
  CIC1Sin_SLICE_593 \CIC1Sin/SLICE_593 ( .B1(\CIC1Sin/d3_45 ), 
    .A1(\CIC1Sin/d2_45 ), .B0(\CIC1Sin/d3_44 ), .A0(\CIC1Sin/d2_44 ), 
    .FCI(\CIC1Sin/n12194 ), .F0(\CIC1Sin/n4609 ), .F1(\CIC1Sin/n4608 ), 
    .FCO(\CIC1Sin/n12195 ));
  CIC1Sin_SLICE_594 \CIC1Sin/SLICE_594 ( .B1(\CIC1Sin/d3_43 ), 
    .A1(\CIC1Sin/d2_43 ), .B0(\CIC1Sin/d3_42 ), .A0(\CIC1Sin/d2_42 ), 
    .FCI(\CIC1Sin/n12193 ), .F0(\CIC1Sin/n4611 ), .F1(\CIC1Sin/n4610 ), 
    .FCO(\CIC1Sin/n12194 ));
  CIC1Sin_SLICE_595 \CIC1Sin/SLICE_595 ( .B1(\CIC1Sin/d3_41 ), 
    .A1(\CIC1Sin/d2_41 ), .B0(\CIC1Sin/d3_40 ), .A0(\CIC1Sin/d2_40 ), 
    .FCI(\CIC1Sin/n12192 ), .F0(\CIC1Sin/n4613 ), .F1(\CIC1Sin/n4612 ), 
    .FCO(\CIC1Sin/n12193 ));
  CIC1Sin_SLICE_596 \CIC1Sin/SLICE_596 ( .B1(\CIC1Sin/d3_39 ), 
    .A1(\CIC1Sin/d2_39 ), .B0(\CIC1Sin/d3_38 ), .A0(\CIC1Sin/d2_38 ), 
    .FCI(\CIC1Sin/n12191 ), .F0(\CIC1Sin/n4615 ), .F1(\CIC1Sin/n4614 ), 
    .FCO(\CIC1Sin/n12192 ));
  CIC1Sin_SLICE_597 \CIC1Sin/SLICE_597 ( .B1(\CIC1Sin/d3_37 ), 
    .A1(\CIC1Sin/d2_37 ), .B0(\CIC1Sin/d3_36 ), .A0(\CIC1Sin/d2_36 ), 
    .F1(\CIC1Sin/n4616 ), .FCO(\CIC1Sin/n12191 ));
  CIC1Sin_SLICE_598 \CIC1Sin/SLICE_598 ( .D1(\CIC1Sin/d2_71 ), 
    .C1(\CIC1Sin/n4582 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_71 ), 
    .D0(\CIC1Sin/d2_70 ), .C0(\CIC1Sin/n4583 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_70 ), .DI1(\CIC1Sin/d3_71_N_562_71 ), 
    .DI0(\CIC1Sin/d3_71_N_562_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12188 ), 
    .F0(\CIC1Sin/d3_71_N_562_70 ), .Q0(\CIC1Sin/d3_70 ), 
    .F1(\CIC1Sin/d3_71_N_562_71 ), .Q1(\CIC1Sin/d3_71 ));
  CIC1Sin_SLICE_599 \CIC1Sin/SLICE_599 ( .D1(\CIC1Sin/d2_69 ), 
    .C1(\CIC1Sin/n4584 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_69 ), 
    .D0(\CIC1Sin/d2_68 ), .C0(\CIC1Sin/n4585 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_68 ), .DI1(\CIC1Sin/d3_71_N_562_69 ), 
    .DI0(\CIC1Sin/d3_71_N_562_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12187 ), 
    .F0(\CIC1Sin/d3_71_N_562_68 ), .Q0(\CIC1Sin/d3_68 ), 
    .F1(\CIC1Sin/d3_71_N_562_69 ), .Q1(\CIC1Sin/d3_69 ), 
    .FCO(\CIC1Sin/n12188 ));
  CIC1Sin_SLICE_600 \CIC1Sin/SLICE_600 ( .D1(\CIC1Sin/d2_67 ), 
    .C1(\CIC1Sin/n4586 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_67 ), 
    .D0(\CIC1Sin/d2_66 ), .C0(\CIC1Sin/n4587 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_66 ), .DI1(\CIC1Sin/d3_71_N_562_67 ), 
    .DI0(\CIC1Sin/d3_71_N_562_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12186 ), 
    .F0(\CIC1Sin/d3_71_N_562_66 ), .Q0(\CIC1Sin/d3_66 ), 
    .F1(\CIC1Sin/d3_71_N_562_67 ), .Q1(\CIC1Sin/d3_67 ), 
    .FCO(\CIC1Sin/n12187 ));
  CIC1Sin_SLICE_601 \CIC1Sin/SLICE_601 ( .D1(\CIC1Sin/d2_65 ), 
    .C1(\CIC1Sin/n4588 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_65 ), 
    .D0(\CIC1Sin/d2_64 ), .C0(\CIC1Sin/n4589 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_64 ), .DI1(\CIC1Sin/d3_71_N_562_65 ), 
    .DI0(\CIC1Sin/d3_71_N_562_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12185 ), 
    .F0(\CIC1Sin/d3_71_N_562_64 ), .Q0(\CIC1Sin/d3_64 ), 
    .F1(\CIC1Sin/d3_71_N_562_65 ), .Q1(\CIC1Sin/d3_65 ), 
    .FCO(\CIC1Sin/n12186 ));
  CIC1Sin_SLICE_602 \CIC1Sin/SLICE_602 ( .D1(\CIC1Sin/d2_63 ), 
    .C1(\CIC1Sin/n4590 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_63 ), 
    .D0(\CIC1Sin/d2_62 ), .C0(\CIC1Sin/n4591 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_62 ), .DI1(\CIC1Sin/d3_71_N_562_63 ), 
    .DI0(\CIC1Sin/d3_71_N_562_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12184 ), 
    .F0(\CIC1Sin/d3_71_N_562_62 ), .Q0(\CIC1Sin/d3_62 ), 
    .F1(\CIC1Sin/d3_71_N_562_63 ), .Q1(\CIC1Sin/d3_63 ), 
    .FCO(\CIC1Sin/n12185 ));
  CIC1Sin_SLICE_603 \CIC1Sin/SLICE_603 ( .D1(\CIC1Sin/d2_61 ), 
    .C1(\CIC1Sin/n4592 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_61 ), 
    .D0(\CIC1Sin/d2_60 ), .C0(\CIC1Sin/n4593 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_60 ), .DI1(\CIC1Sin/d3_71_N_562_61 ), 
    .DI0(\CIC1Sin/d3_71_N_562_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12183 ), 
    .F0(\CIC1Sin/d3_71_N_562_60 ), .Q0(\CIC1Sin/d3_60 ), 
    .F1(\CIC1Sin/d3_71_N_562_61 ), .Q1(\CIC1Sin/d3_61 ), 
    .FCO(\CIC1Sin/n12184 ));
  CIC1Sin_SLICE_604 \CIC1Sin/SLICE_604 ( .D1(\CIC1Sin/d2_59 ), 
    .C1(\CIC1Sin/n4594 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_59 ), 
    .D0(\CIC1Sin/d2_58 ), .C0(\CIC1Sin/n4595 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_58 ), .DI1(\CIC1Sin/d3_71_N_562_59 ), 
    .DI0(\CIC1Sin/d3_71_N_562_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12182 ), 
    .F0(\CIC1Sin/d3_71_N_562_58 ), .Q0(\CIC1Sin/d3_58 ), 
    .F1(\CIC1Sin/d3_71_N_562_59 ), .Q1(\CIC1Sin/d3_59 ), 
    .FCO(\CIC1Sin/n12183 ));
  CIC1Sin_SLICE_605 \CIC1Sin/SLICE_605 ( .D1(\CIC1Sin/d2_57 ), 
    .C1(\CIC1Sin/n4596 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_57 ), 
    .D0(\CIC1Sin/d2_56 ), .C0(\CIC1Sin/n4597 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_56 ), .DI1(\CIC1Sin/d3_71_N_562_57 ), 
    .DI0(\CIC1Sin/d3_71_N_562_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12181 ), 
    .F0(\CIC1Sin/d3_71_N_562_56 ), .Q0(\CIC1Sin/d3_56 ), 
    .F1(\CIC1Sin/d3_71_N_562_57 ), .Q1(\CIC1Sin/d3_57 ), 
    .FCO(\CIC1Sin/n12182 ));
  CIC1Sin_SLICE_606 \CIC1Sin/SLICE_606 ( .D1(\CIC1Sin/d2_55 ), 
    .C1(\CIC1Sin/n4598 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_55 ), 
    .D0(\CIC1Sin/d2_54 ), .C0(\CIC1Sin/n4599 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_54 ), .DI1(\CIC1Sin/d3_71_N_562_55 ), 
    .DI0(\CIC1Sin/d3_71_N_562_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12180 ), 
    .F0(\CIC1Sin/d3_71_N_562_54 ), .Q0(\CIC1Sin/d3_54 ), 
    .F1(\CIC1Sin/d3_71_N_562_55 ), .Q1(\CIC1Sin/d3_55 ), 
    .FCO(\CIC1Sin/n12181 ));
  CIC1Sin_SLICE_607 \CIC1Sin/SLICE_607 ( .D1(\CIC1Sin/d2_53 ), 
    .C1(\CIC1Sin/n4600 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_53 ), 
    .D0(\CIC1Sin/d2_52 ), .C0(\CIC1Sin/n4601 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_52 ), .DI1(\CIC1Sin/d3_71_N_562_53 ), 
    .DI0(\CIC1Sin/d3_71_N_562_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12179 ), 
    .F0(\CIC1Sin/d3_71_N_562_52 ), .Q0(\CIC1Sin/d3_52 ), 
    .F1(\CIC1Sin/d3_71_N_562_53 ), .Q1(\CIC1Sin/d3_53 ), 
    .FCO(\CIC1Sin/n12180 ));
  CIC1Sin_SLICE_608 \CIC1Sin/SLICE_608 ( .D1(\CIC1Sin/d2_51 ), 
    .C1(\CIC1Sin/n4602 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_51 ), 
    .D0(\CIC1Sin/d2_50 ), .C0(\CIC1Sin/n4603 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_50 ), .DI1(\CIC1Sin/d3_71_N_562_51 ), 
    .DI0(\CIC1Sin/d3_71_N_562_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12178 ), 
    .F0(\CIC1Sin/d3_71_N_562_50 ), .Q0(\CIC1Sin/d3_50 ), 
    .F1(\CIC1Sin/d3_71_N_562_51 ), .Q1(\CIC1Sin/d3_51 ), 
    .FCO(\CIC1Sin/n12179 ));
  CIC1Sin_SLICE_609 \CIC1Sin/SLICE_609 ( .D1(\CIC1Sin/d2_49 ), 
    .C1(\CIC1Sin/n4604 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_49 ), 
    .D0(\CIC1Sin/d2_48 ), .C0(\CIC1Sin/n4605 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_48 ), .DI1(\CIC1Sin/d3_71_N_562_49 ), 
    .DI0(\CIC1Sin/d3_71_N_562_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12177 ), 
    .F0(\CIC1Sin/d3_71_N_562_48 ), .Q0(\CIC1Sin/d3_48 ), 
    .F1(\CIC1Sin/d3_71_N_562_49 ), .Q1(\CIC1Sin/d3_49 ), 
    .FCO(\CIC1Sin/n12178 ));
  CIC1Sin_SLICE_610 \CIC1Sin/SLICE_610 ( .D1(\CIC1Sin/d2_47 ), 
    .C1(\CIC1Sin/n4606 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_47 ), 
    .D0(\CIC1Sin/d2_46 ), .C0(\CIC1Sin/n4607 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_46 ), .DI1(\CIC1Sin/d3_71_N_562_47 ), 
    .DI0(\CIC1Sin/d3_71_N_562_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12176 ), 
    .F0(\CIC1Sin/d3_71_N_562_46 ), .Q0(\CIC1Sin/d3_46 ), 
    .F1(\CIC1Sin/d3_71_N_562_47 ), .Q1(\CIC1Sin/d3_47 ), 
    .FCO(\CIC1Sin/n12177 ));
  CIC1Sin_SLICE_611 \CIC1Sin/SLICE_611 ( .D1(\CIC1Sin/d2_45 ), 
    .C1(\CIC1Sin/n4608 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_45 ), 
    .D0(\CIC1Sin/d2_44 ), .C0(\CIC1Sin/n4609 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_44 ), .DI1(\CIC1Sin/d3_71_N_562_45 ), 
    .DI0(\CIC1Sin/d3_71_N_562_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12175 ), 
    .F0(\CIC1Sin/d3_71_N_562_44 ), .Q0(\CIC1Sin/d3_44 ), 
    .F1(\CIC1Sin/d3_71_N_562_45 ), .Q1(\CIC1Sin/d3_45 ), 
    .FCO(\CIC1Sin/n12176 ));
  CIC1Sin_SLICE_612 \CIC1Sin/SLICE_612 ( .D1(\CIC1Sin/d2_43 ), 
    .C1(\CIC1Sin/n4610 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_43 ), 
    .D0(\CIC1Sin/d2_42 ), .C0(\CIC1Sin/n4611 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_42 ), .DI1(\CIC1Sin/d3_71_N_562_43 ), 
    .DI0(\CIC1Sin/d3_71_N_562_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12174 ), 
    .F0(\CIC1Sin/d3_71_N_562_42 ), .Q0(\CIC1Sin/d3_42 ), 
    .F1(\CIC1Sin/d3_71_N_562_43 ), .Q1(\CIC1Sin/d3_43 ), 
    .FCO(\CIC1Sin/n12175 ));
  CIC1Sin_SLICE_613 \CIC1Sin/SLICE_613 ( .D1(\CIC1Sin/d2_41 ), 
    .C1(\CIC1Sin/n4612 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_41 ), 
    .D0(\CIC1Sin/d2_40 ), .C0(\CIC1Sin/n4613 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_40 ), .DI1(\CIC1Sin/d3_71_N_562_41 ), 
    .DI0(\CIC1Sin/d3_71_N_562_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12173 ), 
    .F0(\CIC1Sin/d3_71_N_562_40 ), .Q0(\CIC1Sin/d3_40 ), 
    .F1(\CIC1Sin/d3_71_N_562_41 ), .Q1(\CIC1Sin/d3_41 ), 
    .FCO(\CIC1Sin/n12174 ));
  CIC1Sin_SLICE_614 \CIC1Sin/SLICE_614 ( .D1(\CIC1Sin/d2_39 ), 
    .C1(\CIC1Sin/n4614 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_39 ), 
    .D0(\CIC1Sin/d2_38 ), .C0(\CIC1Sin/n4615 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_38 ), .DI1(\CIC1Sin/d3_71_N_562_39 ), 
    .DI0(\CIC1Sin/d3_71_N_562_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12172 ), 
    .F0(\CIC1Sin/d3_71_N_562_38 ), .Q0(\CIC1Sin/d3_38 ), 
    .F1(\CIC1Sin/d3_71_N_562_39 ), .Q1(\CIC1Sin/d3_39 ), 
    .FCO(\CIC1Sin/n12173 ));
  CIC1Sin_SLICE_615 \CIC1Sin/SLICE_615 ( .D1(\CIC1Sin/d2_37 ), 
    .C1(\CIC1Sin/n4616 ), .B1(\CIC1Sin/n4580 ), .A1(\CIC1Sin/d3_37 ), 
    .D0(\CIC1Sin/d2_36 ), .C0(\CIC1Sin/n4617 ), .B0(\CIC1Sin/n4580 ), 
    .A0(\CIC1Sin/d3_36 ), .DI1(\CIC1Sin/d3_71_N_562_37 ), 
    .DI0(\CIC1Sin/d3_71_N_562_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12171 ), 
    .F0(\CIC1Sin/d3_71_N_562_36 ), .Q0(\CIC1Sin/d3_36 ), 
    .F1(\CIC1Sin/d3_71_N_562_37 ), .Q1(\CIC1Sin/d3_37 ), 
    .FCO(\CIC1Sin/n12172 ));
  CIC1Sin_SLICE_616 \CIC1Sin/SLICE_616 ( .A1(\CIC1Sin/n4580 ), 
    .FCO(\CIC1Sin/n12171 ));
  CIC1Sin_SLICE_617 \CIC1Sin/SLICE_617 ( .B1(\CIC1Sin/d4_71 ), 
    .A1(\CIC1Sin/d3_71 ), .B0(\CIC1Sin/d4_70 ), .A0(\CIC1Sin/d3_70 ), 
    .FCI(\CIC1Sin/n12166 ), .F0(\CIC1Sin/n4735 ), .F1(\CIC1Sin/n4734 ));
  CIC1Sin_SLICE_618 \CIC1Sin/SLICE_618 ( .B1(\CIC1Sin/d4_69 ), 
    .A1(\CIC1Sin/d3_69 ), .B0(\CIC1Sin/d4_68 ), .A0(\CIC1Sin/d3_68 ), 
    .FCI(\CIC1Sin/n12165 ), .F0(\CIC1Sin/n4737 ), .F1(\CIC1Sin/n4736 ), 
    .FCO(\CIC1Sin/n12166 ));
  CIC1Sin_SLICE_619 \CIC1Sin/SLICE_619 ( .B1(\CIC1Sin/d4_67 ), 
    .A1(\CIC1Sin/d3_67 ), .B0(\CIC1Sin/d4_66 ), .A0(\CIC1Sin/d3_66 ), 
    .FCI(\CIC1Sin/n12164 ), .F0(\CIC1Sin/n4739 ), .F1(\CIC1Sin/n4738 ), 
    .FCO(\CIC1Sin/n12165 ));
  CIC1Sin_SLICE_620 \CIC1Sin/SLICE_620 ( .B1(\CIC1Sin/d4_65 ), 
    .A1(\CIC1Sin/d3_65 ), .B0(\CIC1Sin/d4_64 ), .A0(\CIC1Sin/d3_64 ), 
    .FCI(\CIC1Sin/n12163 ), .F0(\CIC1Sin/n4741 ), .F1(\CIC1Sin/n4740 ), 
    .FCO(\CIC1Sin/n12164 ));
  CIC1Sin_SLICE_621 \CIC1Sin/SLICE_621 ( .B1(\CIC1Sin/d4_63 ), 
    .A1(\CIC1Sin/d3_63 ), .B0(\CIC1Sin/d4_62 ), .A0(\CIC1Sin/d3_62 ), 
    .FCI(\CIC1Sin/n12162 ), .F0(\CIC1Sin/n4743 ), .F1(\CIC1Sin/n4742 ), 
    .FCO(\CIC1Sin/n12163 ));
  CIC1Sin_SLICE_622 \CIC1Sin/SLICE_622 ( .B1(\CIC1Sin/d4_61 ), 
    .A1(\CIC1Sin/d3_61 ), .B0(\CIC1Sin/d4_60 ), .A0(\CIC1Sin/d3_60 ), 
    .FCI(\CIC1Sin/n12161 ), .F0(\CIC1Sin/n4745 ), .F1(\CIC1Sin/n4744 ), 
    .FCO(\CIC1Sin/n12162 ));
  CIC1Sin_SLICE_623 \CIC1Sin/SLICE_623 ( .B1(\CIC1Sin/d4_59 ), 
    .A1(\CIC1Sin/d3_59 ), .B0(\CIC1Sin/d4_58 ), .A0(\CIC1Sin/d3_58 ), 
    .FCI(\CIC1Sin/n12160 ), .F0(\CIC1Sin/n4747 ), .F1(\CIC1Sin/n4746 ), 
    .FCO(\CIC1Sin/n12161 ));
  CIC1Sin_SLICE_624 \CIC1Sin/SLICE_624 ( .B1(\CIC1Sin/d4_57 ), 
    .A1(\CIC1Sin/d3_57 ), .B0(\CIC1Sin/d4_56 ), .A0(\CIC1Sin/d3_56 ), 
    .FCI(\CIC1Sin/n12159 ), .F0(\CIC1Sin/n4749 ), .F1(\CIC1Sin/n4748 ), 
    .FCO(\CIC1Sin/n12160 ));
  CIC1Sin_SLICE_625 \CIC1Sin/SLICE_625 ( .B1(\CIC1Sin/d4_55 ), 
    .A1(\CIC1Sin/d3_55 ), .B0(\CIC1Sin/d4_54 ), .A0(\CIC1Sin/d3_54 ), 
    .FCI(\CIC1Sin/n12158 ), .F0(\CIC1Sin/n4751 ), .F1(\CIC1Sin/n4750 ), 
    .FCO(\CIC1Sin/n12159 ));
  CIC1Sin_SLICE_626 \CIC1Sin/SLICE_626 ( .B1(\CIC1Sin/d4_53 ), 
    .A1(\CIC1Sin/d3_53 ), .B0(\CIC1Sin/d4_52 ), .A0(\CIC1Sin/d3_52 ), 
    .FCI(\CIC1Sin/n12157 ), .F0(\CIC1Sin/n4753 ), .F1(\CIC1Sin/n4752 ), 
    .FCO(\CIC1Sin/n12158 ));
  CIC1Sin_SLICE_627 \CIC1Sin/SLICE_627 ( .B1(\CIC1Sin/d4_51 ), 
    .A1(\CIC1Sin/d3_51 ), .B0(\CIC1Sin/d4_50 ), .A0(\CIC1Sin/d3_50 ), 
    .FCI(\CIC1Sin/n12156 ), .F0(\CIC1Sin/n4755 ), .F1(\CIC1Sin/n4754 ), 
    .FCO(\CIC1Sin/n12157 ));
  CIC1Sin_SLICE_628 \CIC1Sin/SLICE_628 ( .B1(\CIC1Sin/d4_49 ), 
    .A1(\CIC1Sin/d3_49 ), .B0(\CIC1Sin/d4_48 ), .A0(\CIC1Sin/d3_48 ), 
    .FCI(\CIC1Sin/n12155 ), .F0(\CIC1Sin/n4757 ), .F1(\CIC1Sin/n4756 ), 
    .FCO(\CIC1Sin/n12156 ));
  CIC1Sin_SLICE_629 \CIC1Sin/SLICE_629 ( .B1(\CIC1Sin/d4_47 ), 
    .A1(\CIC1Sin/d3_47 ), .B0(\CIC1Sin/d4_46 ), .A0(\CIC1Sin/d3_46 ), 
    .FCI(\CIC1Sin/n12154 ), .F0(\CIC1Sin/n4759 ), .F1(\CIC1Sin/n4758 ), 
    .FCO(\CIC1Sin/n12155 ));
  CIC1Sin_SLICE_630 \CIC1Sin/SLICE_630 ( .B1(\CIC1Sin/d4_45 ), 
    .A1(\CIC1Sin/d3_45 ), .B0(\CIC1Sin/d4_44 ), .A0(\CIC1Sin/d3_44 ), 
    .FCI(\CIC1Sin/n12153 ), .F0(\CIC1Sin/n4761 ), .F1(\CIC1Sin/n4760 ), 
    .FCO(\CIC1Sin/n12154 ));
  CIC1Sin_SLICE_631 \CIC1Sin/SLICE_631 ( .B1(\CIC1Sin/d4_43 ), 
    .A1(\CIC1Sin/d3_43 ), .B0(\CIC1Sin/d4_42 ), .A0(\CIC1Sin/d3_42 ), 
    .FCI(\CIC1Sin/n12152 ), .F0(\CIC1Sin/n4763 ), .F1(\CIC1Sin/n4762 ), 
    .FCO(\CIC1Sin/n12153 ));
  CIC1Sin_SLICE_632 \CIC1Sin/SLICE_632 ( .B1(\CIC1Sin/d4_41 ), 
    .A1(\CIC1Sin/d3_41 ), .B0(\CIC1Sin/d4_40 ), .A0(\CIC1Sin/d3_40 ), 
    .FCI(\CIC1Sin/n12151 ), .F0(\CIC1Sin/n4765 ), .F1(\CIC1Sin/n4764 ), 
    .FCO(\CIC1Sin/n12152 ));
  CIC1Sin_SLICE_633 \CIC1Sin/SLICE_633 ( .B1(\CIC1Sin/d4_39 ), 
    .A1(\CIC1Sin/d3_39 ), .B0(\CIC1Sin/d4_38 ), .A0(\CIC1Sin/d3_38 ), 
    .FCI(\CIC1Sin/n12150 ), .F0(\CIC1Sin/n4767 ), .F1(\CIC1Sin/n4766 ), 
    .FCO(\CIC1Sin/n12151 ));
  CIC1Sin_SLICE_634 \CIC1Sin/SLICE_634 ( .B1(\CIC1Sin/d4_37 ), 
    .A1(\CIC1Sin/d3_37 ), .B0(\CIC1Sin/d4_36 ), .A0(\CIC1Sin/d3_36 ), 
    .F1(\CIC1Sin/n4768 ), .FCO(\CIC1Sin/n12150 ));
  CIC1Sin_SLICE_635 \CIC1Sin/SLICE_635 ( .D1(\CIC1Sin/d3_71 ), 
    .C1(\CIC1Sin/n4734 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_71 ), 
    .D0(\CIC1Sin/d3_70 ), .C0(\CIC1Sin/n4735 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_70 ), .DI1(\CIC1Sin/d4_71_N_634_71 ), 
    .DI0(\CIC1Sin/d4_71_N_634_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12147 ), 
    .F0(\CIC1Sin/d4_71_N_634_70 ), .Q0(\CIC1Sin/d4_70 ), 
    .F1(\CIC1Sin/d4_71_N_634_71 ), .Q1(\CIC1Sin/d4_71 ));
  CIC1Sin_SLICE_636 \CIC1Sin/SLICE_636 ( .D1(\CIC1Sin/d3_69 ), 
    .C1(\CIC1Sin/n4736 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_69 ), 
    .D0(\CIC1Sin/d3_68 ), .C0(\CIC1Sin/n4737 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_68 ), .DI1(\CIC1Sin/d4_71_N_634_69 ), 
    .DI0(\CIC1Sin/d4_71_N_634_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12146 ), 
    .F0(\CIC1Sin/d4_71_N_634_68 ), .Q0(\CIC1Sin/d4_68 ), 
    .F1(\CIC1Sin/d4_71_N_634_69 ), .Q1(\CIC1Sin/d4_69 ), 
    .FCO(\CIC1Sin/n12147 ));
  CIC1Sin_SLICE_637 \CIC1Sin/SLICE_637 ( .B0(\CIC1Sin/d_d_tmp_71 ), 
    .A0(\CIC1Sin/d_tmp_71 ), .FCI(\CIC1Sin/n12330 ), .F0(\CIC1Sin/n4126 ));
  CIC1Sin_SLICE_638 \CIC1Sin/SLICE_638 ( .B1(\CIC1Sin/d_d_tmp_70 ), 
    .A1(\CIC1Sin/d_tmp_70 ), .B0(\CIC1Sin/d_d_tmp_69 ), 
    .A0(\CIC1Sin/d_tmp_69 ), .FCI(\CIC1Sin/n12329 ), .F0(\CIC1Sin/n4128 ), 
    .F1(\CIC1Sin/n4127 ), .FCO(\CIC1Sin/n12330 ));
  CIC1Sin_SLICE_639 \CIC1Sin/SLICE_639 ( .D1(\CIC1Sin/d3_67 ), 
    .C1(\CIC1Sin/n4738 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_67 ), 
    .D0(\CIC1Sin/d3_66 ), .C0(\CIC1Sin/n4739 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_66 ), .DI1(\CIC1Sin/d4_71_N_634_67 ), 
    .DI0(\CIC1Sin/d4_71_N_634_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12145 ), 
    .F0(\CIC1Sin/d4_71_N_634_66 ), .Q0(\CIC1Sin/d4_66 ), 
    .F1(\CIC1Sin/d4_71_N_634_67 ), .Q1(\CIC1Sin/d4_67 ), 
    .FCO(\CIC1Sin/n12146 ));
  CIC1Sin_SLICE_640 \CIC1Sin/SLICE_640 ( .B1(\CIC1Sin/d_d_tmp_68 ), 
    .A1(\CIC1Sin/d_tmp_68 ), .B0(\CIC1Sin/d_d_tmp_67 ), 
    .A0(\CIC1Sin/d_tmp_67 ), .FCI(\CIC1Sin/n12328 ), .F0(\CIC1Sin/n4130 ), 
    .F1(\CIC1Sin/n4129 ), .FCO(\CIC1Sin/n12329 ));
  CIC1Sin_SLICE_641 \CIC1Sin/SLICE_641 ( .B1(\CIC1Sin/d_d_tmp_66 ), 
    .A1(\CIC1Sin/d_tmp_66 ), .B0(\CIC1Sin/d_d_tmp_65 ), 
    .A0(\CIC1Sin/d_tmp_65 ), .FCI(\CIC1Sin/n12327 ), .F0(\CIC1Sin/n4132 ), 
    .F1(\CIC1Sin/n4131 ), .FCO(\CIC1Sin/n12328 ));
  CIC1Sin_SLICE_642 \CIC1Sin/SLICE_642 ( .B1(\CIC1Sin/d_d_tmp_64 ), 
    .A1(\CIC1Sin/d_tmp_64 ), .B0(\CIC1Sin/d_d_tmp_63 ), 
    .A0(\CIC1Sin/d_tmp_63 ), .FCI(\CIC1Sin/n12326 ), .F0(\CIC1Sin/n4134 ), 
    .F1(\CIC1Sin/n4133 ), .FCO(\CIC1Sin/n12327 ));
  CIC1Sin_SLICE_643 \CIC1Sin/SLICE_643 ( .D1(\CIC1Sin/d3_65 ), 
    .C1(\CIC1Sin/n4740 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_65 ), 
    .D0(\CIC1Sin/d3_64 ), .C0(\CIC1Sin/n4741 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_64 ), .DI1(\CIC1Sin/d4_71_N_634_65 ), 
    .DI0(\CIC1Sin/d4_71_N_634_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12144 ), 
    .F0(\CIC1Sin/d4_71_N_634_64 ), .Q0(\CIC1Sin/d4_64 ), 
    .F1(\CIC1Sin/d4_71_N_634_65 ), .Q1(\CIC1Sin/d4_65 ), 
    .FCO(\CIC1Sin/n12145 ));
  CIC1Sin_SLICE_644 \CIC1Sin/SLICE_644 ( .D1(\CIC1Sin/d3_63 ), 
    .C1(\CIC1Sin/n4742 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_63 ), 
    .D0(\CIC1Sin/d3_62 ), .C0(\CIC1Sin/n4743 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_62 ), .DI1(\CIC1Sin/d4_71_N_634_63 ), 
    .DI0(\CIC1Sin/d4_71_N_634_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12143 ), 
    .F0(\CIC1Sin/d4_71_N_634_62 ), .Q0(\CIC1Sin/d4_62 ), 
    .F1(\CIC1Sin/d4_71_N_634_63 ), .Q1(\CIC1Sin/d4_63 ), 
    .FCO(\CIC1Sin/n12144 ));
  CIC1Sin_SLICE_645 \CIC1Sin/SLICE_645 ( .B1(\CIC1Sin/d_d_tmp_62 ), 
    .A1(\CIC1Sin/d_tmp_62 ), .B0(\CIC1Sin/d_d_tmp_61 ), 
    .A0(\CIC1Sin/d_tmp_61 ), .FCI(\CIC1Sin/n12325 ), .F0(\CIC1Sin/n4136 ), 
    .F1(\CIC1Sin/n4135 ), .FCO(\CIC1Sin/n12326 ));
  CIC1Sin_SLICE_646 \CIC1Sin/SLICE_646 ( .B1(\CIC1Sin/d_d_tmp_60 ), 
    .A1(\CIC1Sin/d_tmp_60 ), .B0(\CIC1Sin/d_d_tmp_59 ), 
    .A0(\CIC1Sin/d_tmp_59 ), .FCI(\CIC1Sin/n12324 ), .F0(\CIC1Sin/n4138 ), 
    .F1(\CIC1Sin/n4137 ), .FCO(\CIC1Sin/n12325 ));
  CIC1Sin_SLICE_647 \CIC1Sin/SLICE_647 ( .B1(\CIC1Sin/d_d_tmp_58 ), 
    .A1(\CIC1Sin/d_tmp_58 ), .B0(\CIC1Sin/d_d_tmp_57 ), 
    .A0(\CIC1Sin/d_tmp_57 ), .FCI(\CIC1Sin/n12323 ), .F0(\CIC1Sin/n4140 ), 
    .F1(\CIC1Sin/n4139 ), .FCO(\CIC1Sin/n12324 ));
  CIC1Sin_SLICE_648 \CIC1Sin/SLICE_648 ( .D1(\CIC1Sin/d3_61 ), 
    .C1(\CIC1Sin/n4744 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_61 ), 
    .D0(\CIC1Sin/d3_60 ), .C0(\CIC1Sin/n4745 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_60 ), .DI1(\CIC1Sin/d4_71_N_634_61 ), 
    .DI0(\CIC1Sin/d4_71_N_634_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12142 ), 
    .F0(\CIC1Sin/d4_71_N_634_60 ), .Q0(\CIC1Sin/d4_60 ), 
    .F1(\CIC1Sin/d4_71_N_634_61 ), .Q1(\CIC1Sin/d4_61 ), 
    .FCO(\CIC1Sin/n12143 ));
  CIC1Sin_SLICE_649 \CIC1Sin/SLICE_649 ( .B1(\CIC1Sin/d_d_tmp_56 ), 
    .A1(\CIC1Sin/d_tmp_56 ), .B0(\CIC1Sin/d_d_tmp_55 ), 
    .A0(\CIC1Sin/d_tmp_55 ), .FCI(\CIC1Sin/n12322 ), .F0(\CIC1Sin/n4142 ), 
    .F1(\CIC1Sin/n4141 ), .FCO(\CIC1Sin/n12323 ));
  CIC1Sin_SLICE_650 \CIC1Sin/SLICE_650 ( .B1(\CIC1Sin/d_d_tmp_54 ), 
    .A1(\CIC1Sin/d_tmp_54 ), .B0(\CIC1Sin/d_d_tmp_53 ), 
    .A0(\CIC1Sin/d_tmp_53 ), .FCI(\CIC1Sin/n12321 ), .F0(\CIC1Sin/n4144 ), 
    .F1(\CIC1Sin/n4143 ), .FCO(\CIC1Sin/n12322 ));
  CIC1Sin_SLICE_651 \CIC1Sin/SLICE_651 ( .B1(\CIC1Sin/d_d_tmp_52 ), 
    .A1(\CIC1Sin/d_tmp_52 ), .B0(\CIC1Sin/d_d_tmp_51 ), 
    .A0(\CIC1Sin/d_tmp_51 ), .FCI(\CIC1Sin/n12320 ), .F0(\CIC1Sin/n4146 ), 
    .F1(\CIC1Sin/n4145 ), .FCO(\CIC1Sin/n12321 ));
  CIC1Sin_SLICE_652 \CIC1Sin/SLICE_652 ( .D1(\CIC1Sin/d3_59 ), 
    .C1(\CIC1Sin/n4746 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_59 ), 
    .D0(\CIC1Sin/d3_58 ), .C0(\CIC1Sin/n4747 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_58 ), .DI1(\CIC1Sin/d4_71_N_634_59 ), 
    .DI0(\CIC1Sin/d4_71_N_634_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12141 ), 
    .F0(\CIC1Sin/d4_71_N_634_58 ), .Q0(\CIC1Sin/d4_58 ), 
    .F1(\CIC1Sin/d4_71_N_634_59 ), .Q1(\CIC1Sin/d4_59 ), 
    .FCO(\CIC1Sin/n12142 ));
  CIC1Sin_SLICE_653 \CIC1Sin/SLICE_653 ( .D1(\CIC1Sin/d3_57 ), 
    .C1(\CIC1Sin/n4748 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_57 ), 
    .D0(\CIC1Sin/d3_56 ), .C0(\CIC1Sin/n4749 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_56 ), .DI1(\CIC1Sin/d4_71_N_634_57 ), 
    .DI0(\CIC1Sin/d4_71_N_634_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12140 ), 
    .F0(\CIC1Sin/d4_71_N_634_56 ), .Q0(\CIC1Sin/d4_56 ), 
    .F1(\CIC1Sin/d4_71_N_634_57 ), .Q1(\CIC1Sin/d4_57 ), 
    .FCO(\CIC1Sin/n12141 ));
  CIC1Sin_SLICE_654 \CIC1Sin/SLICE_654 ( .B1(\CIC1Sin/d_d_tmp_50 ), 
    .A1(\CIC1Sin/d_tmp_50 ), .B0(\CIC1Sin/d_d_tmp_49 ), 
    .A0(\CIC1Sin/d_tmp_49 ), .FCI(\CIC1Sin/n12319 ), .F0(\CIC1Sin/n4148 ), 
    .F1(\CIC1Sin/n4147 ), .FCO(\CIC1Sin/n12320 ));
  CIC1Sin_SLICE_655 \CIC1Sin/SLICE_655 ( .B1(\CIC1Sin/d_d_tmp_48 ), 
    .A1(\CIC1Sin/d_tmp_48 ), .B0(\CIC1Sin/d_d_tmp_47 ), 
    .A0(\CIC1Sin/d_tmp_47 ), .FCI(\CIC1Sin/n12318 ), .F0(\CIC1Sin/n4150 ), 
    .F1(\CIC1Sin/n4149 ), .FCO(\CIC1Sin/n12319 ));
  CIC1Sin_SLICE_656 \CIC1Sin/SLICE_656 ( .B1(\CIC1Sin/d_d_tmp_46 ), 
    .A1(\CIC1Sin/d_tmp_46 ), .B0(\CIC1Sin/d_d_tmp_45 ), 
    .A0(\CIC1Sin/d_tmp_45 ), .FCI(\CIC1Sin/n12317 ), .F0(\CIC1Sin/n4152 ), 
    .F1(\CIC1Sin/n4151 ), .FCO(\CIC1Sin/n12318 ));
  CIC1Sin_SLICE_657 \CIC1Sin/SLICE_657 ( .B1(\CIC1Sin/d_d_tmp_44 ), 
    .A1(\CIC1Sin/d_tmp_44 ), .B0(\CIC1Sin/d_d_tmp_43 ), 
    .A0(\CIC1Sin/d_tmp_43 ), .FCI(\CIC1Sin/n12316 ), .F0(\CIC1Sin/n4154 ), 
    .F1(\CIC1Sin/n4153 ), .FCO(\CIC1Sin/n12317 ));
  CIC1Sin_SLICE_658 \CIC1Sin/SLICE_658 ( .B1(\CIC1Sin/d_d_tmp_42 ), 
    .A1(\CIC1Sin/d_tmp_42 ), .B0(\CIC1Sin/d_d_tmp_41 ), 
    .A0(\CIC1Sin/d_tmp_41 ), .FCI(\CIC1Sin/n12315 ), .F0(\CIC1Sin/n4156 ), 
    .F1(\CIC1Sin/n4155 ), .FCO(\CIC1Sin/n12316 ));
  CIC1Sin_SLICE_659 \CIC1Sin/SLICE_659 ( .B1(\CIC1Sin/d_d_tmp_40 ), 
    .A1(\CIC1Sin/d_tmp_40 ), .B0(\CIC1Sin/d_d_tmp_39 ), 
    .A0(\CIC1Sin/d_tmp_39 ), .FCI(\CIC1Sin/n12314 ), .F0(\CIC1Sin/n4158 ), 
    .F1(\CIC1Sin/n4157 ), .FCO(\CIC1Sin/n12315 ));
  CIC1Sin_SLICE_660 \CIC1Sin/SLICE_660 ( .B1(\CIC1Sin/d_d_tmp_38 ), 
    .A1(\CIC1Sin/d_tmp_38 ), .B0(\CIC1Sin/d_d_tmp_37 ), 
    .A0(\CIC1Sin/d_tmp_37 ), .FCI(\CIC1Sin/n12313 ), .F0(\CIC1Sin/n4160 ), 
    .F1(\CIC1Sin/n4159 ), .FCO(\CIC1Sin/n12314 ));
  CIC1Sin_SLICE_661 \CIC1Sin/SLICE_661 ( .B1(\CIC1Sin/d_d_tmp_36 ), 
    .A1(\CIC1Sin/d_tmp_36 ), .F1(\CIC1Sin/n4161 ), .FCO(\CIC1Sin/n12313 ));
  CIC1Sin_SLICE_662 \CIC1Sin/SLICE_662 ( .D1(\CIC1Sin/d_tmp_71 ), 
    .C1(\CIC1Sin/n4126 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_71 ), 
    .D0(\CIC1Sin/d_tmp_70 ), .C0(\CIC1Sin/n4127 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_70 ), .DI1(\CIC1Sin/d6_71_N_1459_71 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_70 ), .CE(\CIC1Sin/osc_clk_enable_247 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12311 ), .F0(\CIC1Sin/d6_71_N_1459_70 ), 
    .Q0(\CIC1Sin/d6_70 ), .F1(\CIC1Sin/d6_71_N_1459_71 ), .Q1(\CIC1Sin/d6_71 ));
  CIC1Sin_SLICE_663 \CIC1Sin/SLICE_663 ( .D1(\CIC1Sin/d_tmp_69 ), 
    .C1(\CIC1Sin/n4128 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_69 ), 
    .D0(\CIC1Sin/d_tmp_68 ), .C0(\CIC1Sin/n4129 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_68 ), .DI1(\CIC1Sin/d6_71_N_1459_69 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_68 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12310 ), .F0(\CIC1Sin/d6_71_N_1459_68 ), 
    .Q0(\CIC1Sin/d6_68 ), .F1(\CIC1Sin/d6_71_N_1459_69 ), .Q1(\CIC1Sin/d6_69 ), 
    .FCO(\CIC1Sin/n12311 ));
  CIC1Sin_SLICE_664 \CIC1Sin/SLICE_664 ( .D1(\CIC1Sin/d_tmp_67 ), 
    .C1(\CIC1Sin/n4130 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_67 ), 
    .D0(\CIC1Sin/d_tmp_66 ), .C0(\CIC1Sin/n4131 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_66 ), .DI1(\CIC1Sin/d6_71_N_1459_67 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_66 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12309 ), .F0(\CIC1Sin/d6_71_N_1459_66 ), 
    .Q0(\CIC1Sin/d6_66 ), .F1(\CIC1Sin/d6_71_N_1459_67 ), .Q1(\CIC1Sin/d6_67 ), 
    .FCO(\CIC1Sin/n12310 ));
  CIC1Sin_SLICE_665 \CIC1Sin/SLICE_665 ( .D1(\CIC1Sin/d_tmp_65 ), 
    .C1(\CIC1Sin/n4132 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_65 ), 
    .D0(\CIC1Sin/d_tmp_64 ), .C0(\CIC1Sin/n4133 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_64 ), .DI1(\CIC1Sin/d6_71_N_1459_65 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_64 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12308 ), .F0(\CIC1Sin/d6_71_N_1459_64 ), 
    .Q0(\CIC1Sin/d6_64 ), .F1(\CIC1Sin/d6_71_N_1459_65 ), .Q1(\CIC1Sin/d6_65 ), 
    .FCO(\CIC1Sin/n12309 ));
  CIC1Sin_SLICE_666 \CIC1Sin/SLICE_666 ( .D1(\CIC1Sin/d_tmp_63 ), 
    .C1(\CIC1Sin/n4134 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_63 ), 
    .D0(\CIC1Sin/d_tmp_62 ), .C0(\CIC1Sin/n4135 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_62 ), .DI1(\CIC1Sin/d6_71_N_1459_63 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_62 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12307 ), .F0(\CIC1Sin/d6_71_N_1459_62 ), 
    .Q0(\CIC1Sin/d6_62 ), .F1(\CIC1Sin/d6_71_N_1459_63 ), .Q1(\CIC1Sin/d6_63 ), 
    .FCO(\CIC1Sin/n12308 ));
  CIC1Sin_SLICE_667 \CIC1Sin/SLICE_667 ( .D1(\CIC1Sin/d_tmp_61 ), 
    .C1(\CIC1Sin/n4136 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_61 ), 
    .D0(\CIC1Sin/d_tmp_60 ), .C0(\CIC1Sin/n4137 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_60 ), .DI1(\CIC1Sin/d6_71_N_1459_61 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_60 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12306 ), .F0(\CIC1Sin/d6_71_N_1459_60 ), 
    .Q0(\CIC1Sin/d6_60 ), .F1(\CIC1Sin/d6_71_N_1459_61 ), .Q1(\CIC1Sin/d6_61 ), 
    .FCO(\CIC1Sin/n12307 ));
  CIC1Sin_SLICE_668 \CIC1Sin/SLICE_668 ( .D1(\CIC1Sin/d_tmp_59 ), 
    .C1(\CIC1Sin/n4138 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_59 ), 
    .D0(\CIC1Sin/d_tmp_58 ), .C0(\CIC1Sin/n4139 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_58 ), .DI1(\CIC1Sin/d6_71_N_1459_59 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_58 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12305 ), .F0(\CIC1Sin/d6_71_N_1459_58 ), 
    .Q0(\CIC1Sin/d6_58 ), .F1(\CIC1Sin/d6_71_N_1459_59 ), .Q1(\CIC1Sin/d6_59 ), 
    .FCO(\CIC1Sin/n12306 ));
  CIC1Sin_SLICE_669 \CIC1Sin/SLICE_669 ( .D1(\CIC1Sin/d_tmp_57 ), 
    .C1(\CIC1Sin/n4140 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_57 ), 
    .D0(\CIC1Sin/d_tmp_56 ), .C0(\CIC1Sin/n4141 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_56 ), .DI1(\CIC1Sin/d6_71_N_1459_57 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_56 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12304 ), .F0(\CIC1Sin/d6_71_N_1459_56 ), 
    .Q0(\CIC1Sin/d6_56 ), .F1(\CIC1Sin/d6_71_N_1459_57 ), .Q1(\CIC1Sin/d6_57 ), 
    .FCO(\CIC1Sin/n12305 ));
  CIC1Sin_SLICE_670 \CIC1Sin/SLICE_670 ( .D1(\CIC1Sin/d_tmp_55 ), 
    .C1(\CIC1Sin/n4142 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_55 ), 
    .D0(\CIC1Sin/d_tmp_54 ), .C0(\CIC1Sin/n4143 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_54 ), .DI1(\CIC1Sin/d6_71_N_1459_55 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_54 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12303 ), .F0(\CIC1Sin/d6_71_N_1459_54 ), 
    .Q0(\CIC1Sin/d6_54 ), .F1(\CIC1Sin/d6_71_N_1459_55 ), .Q1(\CIC1Sin/d6_55 ), 
    .FCO(\CIC1Sin/n12304 ));
  CIC1Sin_SLICE_671 \CIC1Sin/SLICE_671 ( .D1(\CIC1Sin/d3_55 ), 
    .C1(\CIC1Sin/n4750 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_55 ), 
    .D0(\CIC1Sin/d3_54 ), .C0(\CIC1Sin/n4751 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_54 ), .DI1(\CIC1Sin/d4_71_N_634_55 ), 
    .DI0(\CIC1Sin/d4_71_N_634_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12139 ), 
    .F0(\CIC1Sin/d4_71_N_634_54 ), .Q0(\CIC1Sin/d4_54 ), 
    .F1(\CIC1Sin/d4_71_N_634_55 ), .Q1(\CIC1Sin/d4_55 ), 
    .FCO(\CIC1Sin/n12140 ));
  CIC1Sin_SLICE_672 \CIC1Sin/SLICE_672 ( .D1(\CIC1Sin/d_tmp_53 ), 
    .C1(\CIC1Sin/n4144 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_53 ), 
    .D0(\CIC1Sin/d_tmp_52 ), .C0(\CIC1Sin/n4145 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_52 ), .DI1(\CIC1Sin/d6_71_N_1459_53 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_52 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12302 ), .F0(\CIC1Sin/d6_71_N_1459_52 ), 
    .Q0(\CIC1Sin/d6_52 ), .F1(\CIC1Sin/d6_71_N_1459_53 ), .Q1(\CIC1Sin/d6_53 ), 
    .FCO(\CIC1Sin/n12303 ));
  CIC1Sin_SLICE_673 \CIC1Sin/SLICE_673 ( .D1(\CIC1Sin/d_tmp_51 ), 
    .C1(\CIC1Sin/n4146 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_51 ), 
    .D0(\CIC1Sin/d_tmp_50 ), .C0(\CIC1Sin/n4147 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_50 ), .DI1(\CIC1Sin/d6_71_N_1459_51 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_50 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12301 ), .F0(\CIC1Sin/d6_71_N_1459_50 ), 
    .Q0(\CIC1Sin/d6_50 ), .F1(\CIC1Sin/d6_71_N_1459_51 ), .Q1(\CIC1Sin/d6_51 ), 
    .FCO(\CIC1Sin/n12302 ));
  CIC1Sin_SLICE_674 \CIC1Sin/SLICE_674 ( .D1(\CIC1Sin/d_tmp_49 ), 
    .C1(\CIC1Sin/n4148 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_49 ), 
    .D0(\CIC1Sin/d_tmp_48 ), .C0(\CIC1Sin/n4149 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_48 ), .DI1(\CIC1Sin/d6_71_N_1459_49 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_48 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12300 ), .F0(\CIC1Sin/d6_71_N_1459_48 ), 
    .Q0(\CIC1Sin/d6_48 ), .F1(\CIC1Sin/d6_71_N_1459_49 ), .Q1(\CIC1Sin/d6_49 ), 
    .FCO(\CIC1Sin/n12301 ));
  CIC1Sin_SLICE_675 \CIC1Sin/SLICE_675 ( .D1(\CIC1Sin/d_tmp_47 ), 
    .C1(\CIC1Sin/n4150 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_47 ), 
    .D0(\CIC1Sin/d_tmp_46 ), .C0(\CIC1Sin/n4151 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_46 ), .DI1(\CIC1Sin/d6_71_N_1459_47 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_46 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12299 ), .F0(\CIC1Sin/d6_71_N_1459_46 ), 
    .Q0(\CIC1Sin/d6_46 ), .F1(\CIC1Sin/d6_71_N_1459_47 ), .Q1(\CIC1Sin/d6_47 ), 
    .FCO(\CIC1Sin/n12300 ));
  CIC1Sin_SLICE_676 \CIC1Sin/SLICE_676 ( .D1(\CIC1Sin/d_tmp_45 ), 
    .C1(\CIC1Sin/n4152 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_45 ), 
    .D0(\CIC1Sin/d_tmp_44 ), .C0(\CIC1Sin/n4153 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_44 ), .DI1(\CIC1Sin/d6_71_N_1459_45 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_44 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12298 ), .F0(\CIC1Sin/d6_71_N_1459_44 ), 
    .Q0(\CIC1Sin/d6_44 ), .F1(\CIC1Sin/d6_71_N_1459_45 ), .Q1(\CIC1Sin/d6_45 ), 
    .FCO(\CIC1Sin/n12299 ));
  CIC1Sin_SLICE_677 \CIC1Sin/SLICE_677 ( .D1(\CIC1Sin/d_tmp_43 ), 
    .C1(\CIC1Sin/n4154 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_43 ), 
    .D0(\CIC1Sin/d_tmp_42 ), .C0(\CIC1Sin/n4155 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_42 ), .DI1(\CIC1Sin/d6_71_N_1459_43 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_42 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12297 ), .F0(\CIC1Sin/d6_71_N_1459_42 ), 
    .Q0(\CIC1Sin/d6_42 ), .F1(\CIC1Sin/d6_71_N_1459_43 ), .Q1(\CIC1Sin/d6_43 ), 
    .FCO(\CIC1Sin/n12298 ));
  CIC1Sin_SLICE_678 \CIC1Sin/SLICE_678 ( .D1(\CIC1Sin/d3_53 ), 
    .C1(\CIC1Sin/n4752 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_53 ), 
    .D0(\CIC1Sin/d3_52 ), .C0(\CIC1Sin/n4753 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_52 ), .DI1(\CIC1Sin/d4_71_N_634_53 ), 
    .DI0(\CIC1Sin/d4_71_N_634_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12138 ), 
    .F0(\CIC1Sin/d4_71_N_634_52 ), .Q0(\CIC1Sin/d4_52 ), 
    .F1(\CIC1Sin/d4_71_N_634_53 ), .Q1(\CIC1Sin/d4_53 ), 
    .FCO(\CIC1Sin/n12139 ));
  CIC1Sin_SLICE_679 \CIC1Sin/SLICE_679 ( .D1(\CIC1Sin/d_tmp_41 ), 
    .C1(\CIC1Sin/n4156 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_41 ), 
    .D0(\CIC1Sin/d_tmp_40 ), .C0(\CIC1Sin/n4157 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_40 ), .DI1(\CIC1Sin/d6_71_N_1459_41 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_40 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12296 ), .F0(\CIC1Sin/d6_71_N_1459_40 ), 
    .Q0(\CIC1Sin/d6_40 ), .F1(\CIC1Sin/d6_71_N_1459_41 ), .Q1(\CIC1Sin/d6_41 ), 
    .FCO(\CIC1Sin/n12297 ));
  CIC1Sin_SLICE_680 \CIC1Sin/SLICE_680 ( .D1(\CIC1Sin/d_tmp_39 ), 
    .C1(\CIC1Sin/n4158 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_39 ), 
    .D0(\CIC1Sin/d_tmp_38 ), .C0(\CIC1Sin/n4159 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_38 ), .DI1(\CIC1Sin/d6_71_N_1459_39 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_38 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12295 ), .F0(\CIC1Sin/d6_71_N_1459_38 ), 
    .Q0(\CIC1Sin/d6_38 ), .F1(\CIC1Sin/d6_71_N_1459_39 ), .Q1(\CIC1Sin/d6_39 ), 
    .FCO(\CIC1Sin/n12296 ));
  CIC1Sin_SLICE_681 \CIC1Sin/SLICE_681 ( .D1(\CIC1Sin/d_tmp_37 ), 
    .C1(\CIC1Sin/n4160 ), .B1(\CIC1Sin/n4124 ), .A1(\CIC1Sin/d_d_tmp_37 ), 
    .D0(\CIC1Sin/d_tmp_36 ), .C0(\CIC1Sin/n4161 ), .B0(\CIC1Sin/n4124 ), 
    .A0(\CIC1Sin/d_d_tmp_36 ), .DI1(\CIC1Sin/d6_71_N_1459_37 ), 
    .DI0(\CIC1Sin/d6_71_N_1459_36 ), .CE(\CIC1Sin/osc_clk_enable_197 ), 
    .CLK(osc_clk), .FCI(\CIC1Sin/n12294 ), .F0(\CIC1Sin/d6_71_N_1459_36 ), 
    .Q0(\CIC1Sin/d6_36 ), .F1(\CIC1Sin/d6_71_N_1459_37 ), .Q1(\CIC1Sin/d6_37 ), 
    .FCO(\CIC1Sin/n12295 ));
  CIC1Sin_SLICE_682 \CIC1Sin/SLICE_682 ( .A1(\CIC1Sin/n4124 ), 
    .FCO(\CIC1Sin/n12294 ));
  CIC1Sin_SLICE_683 \CIC1Sin/SLICE_683 ( .B1(\CIC1Sin/d1_71 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_70 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12289 ), .F0(\CIC1Sin/n4279 ), .F1(\CIC1Sin/n4278 ));
  CIC1Sin_SLICE_684 \CIC1Sin/SLICE_684 ( .D1(\CIC1Sin/d3_51 ), 
    .C1(\CIC1Sin/n4754 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_51 ), 
    .D0(\CIC1Sin/d3_50 ), .C0(\CIC1Sin/n4755 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_50 ), .DI1(\CIC1Sin/d4_71_N_634_51 ), 
    .DI0(\CIC1Sin/d4_71_N_634_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12137 ), 
    .F0(\CIC1Sin/d4_71_N_634_50 ), .Q0(\CIC1Sin/d4_50 ), 
    .F1(\CIC1Sin/d4_71_N_634_51 ), .Q1(\CIC1Sin/d4_51 ), 
    .FCO(\CIC1Sin/n12138 ));
  CIC1Sin_SLICE_685 \CIC1Sin/SLICE_685 ( .B1(\CIC1Sin/d1_69 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_68 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12288 ), .F0(\CIC1Sin/n4281 ), .F1(\CIC1Sin/n4280 ), 
    .FCO(\CIC1Sin/n12289 ));
  CIC1Sin_SLICE_686 \CIC1Sin/SLICE_686 ( .B1(\CIC1Sin/d1_67 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_66 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12287 ), .F0(\CIC1Sin/n4283 ), .F1(\CIC1Sin/n4282 ), 
    .FCO(\CIC1Sin/n12288 ));
  CIC1Sin_SLICE_687 \CIC1Sin/SLICE_687 ( .B1(\CIC1Sin/d1_65 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_64 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12286 ), .F0(\CIC1Sin/n4285 ), .F1(\CIC1Sin/n4284 ), 
    .FCO(\CIC1Sin/n12287 ));
  CIC1Sin_SLICE_688 \CIC1Sin/SLICE_688 ( .B1(\CIC1Sin/d1_63 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_62 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12285 ), .F0(\CIC1Sin/n4287 ), .F1(\CIC1Sin/n4286 ), 
    .FCO(\CIC1Sin/n12286 ));
  CIC1Sin_SLICE_689 \CIC1Sin/SLICE_689 ( .B1(\CIC1Sin/d_d9_56 ), 
    .A1(\CIC1Sin/d9_56 ), .B0(\CIC1Sin/d_d9_55 ), .A0(\CIC1Sin/d9_55 ), 
    .FCI(\CIC1Sin/n11832 ), .FCO(\CIC1Sin/n11833 ));
  CIC1Sin_SLICE_690 \CIC1Sin/SLICE_690 ( .A1(\CIC1Sin/n5796 ), 
    .FCO(\CIC1Sin/n11844 ));
  CIC1Sin_SLICE_691 \CIC1Sin/SLICE_691 ( .B0(\CIC1Sin/d_d9_71 ), 
    .A0(\CIC1Sin/d9_71 ), .FCI(\CIC1Sin/n11840 ), .F0(\CIC1Sin/n5950 ));
  CIC1Sin_SLICE_692 \CIC1Sin/SLICE_692 ( .B1(\CIC1Sin/d1_61 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_60 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12284 ), .F0(\CIC1Sin/n4289 ), .F1(\CIC1Sin/n4288 ), 
    .FCO(\CIC1Sin/n12285 ));
  CIC1Sin_SLICE_693 \CIC1Sin/SLICE_693 ( .B1(\CIC1Sin/d1_59 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_58 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12283 ), .F0(\CIC1Sin/n4291 ), .F1(\CIC1Sin/n4290 ), 
    .FCO(\CIC1Sin/n12284 ));
  CIC1Sin_SLICE_694 \CIC1Sin/SLICE_694 ( .B1(\CIC1Sin/d1_57 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_56 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12282 ), .F0(\CIC1Sin/n4293 ), .F1(\CIC1Sin/n4292 ), 
    .FCO(\CIC1Sin/n12283 ));
  CIC1Sin_SLICE_695 \CIC1Sin/SLICE_695 ( .B1(\CIC1Sin/d1_55 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_54 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12281 ), .F0(\CIC1Sin/n4295 ), .F1(\CIC1Sin/n4294 ), 
    .FCO(\CIC1Sin/n12282 ));
  CIC1Sin_SLICE_696 \CIC1Sin/SLICE_696 ( .B1(\CIC1Sin/d1_53 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_52 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12280 ), .F0(\CIC1Sin/n4297 ), .F1(\CIC1Sin/n4296 ), 
    .FCO(\CIC1Sin/n12281 ));
  CIC1Sin_SLICE_697 \CIC1Sin/SLICE_697 ( .B1(\CIC1Sin/d1_51 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_50 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12279 ), .F0(\CIC1Sin/n4299 ), .F1(\CIC1Sin/n4298 ), 
    .FCO(\CIC1Sin/n12280 ));
  CIC1Sin_SLICE_698 \CIC1Sin/SLICE_698 ( .B1(\CIC1Sin/d1_49 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_48 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12278 ), .F0(\CIC1Sin/n4301 ), .F1(\CIC1Sin/n4300 ), 
    .FCO(\CIC1Sin/n12279 ));
  CIC1Sin_SLICE_699 \CIC1Sin/SLICE_699 ( .B1(\CIC1Sin/d1_47 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_46 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12277 ), .F0(\CIC1Sin/n4303 ), .F1(\CIC1Sin/n4302 ), 
    .FCO(\CIC1Sin/n12278 ));
  CIC1Sin_SLICE_700 \CIC1Sin/SLICE_700 ( .B1(\CIC1Sin/d1_45 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_44 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12276 ), .F0(\CIC1Sin/n4305 ), .F1(\CIC1Sin/n4304 ), 
    .FCO(\CIC1Sin/n12277 ));
  CIC1Sin_SLICE_701 \CIC1Sin/SLICE_701 ( .B1(\CIC1Sin/d1_43 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_42 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12275 ), .F0(\CIC1Sin/n4307 ), .F1(\CIC1Sin/n4306 ), 
    .FCO(\CIC1Sin/n12276 ));
  CIC1Sin_SLICE_702 \CIC1Sin/SLICE_702 ( .D1(\CIC1Sin/d3_49 ), 
    .C1(\CIC1Sin/n4756 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_49 ), 
    .D0(\CIC1Sin/d3_48 ), .C0(\CIC1Sin/n4757 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_48 ), .DI1(\CIC1Sin/d4_71_N_634_49 ), 
    .DI0(\CIC1Sin/d4_71_N_634_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12136 ), 
    .F0(\CIC1Sin/d4_71_N_634_48 ), .Q0(\CIC1Sin/d4_48 ), 
    .F1(\CIC1Sin/d4_71_N_634_49 ), .Q1(\CIC1Sin/d4_49 ), 
    .FCO(\CIC1Sin/n12137 ));
  CIC1Sin_SLICE_703 \CIC1Sin/SLICE_703 ( .D1(\CIC1Sin/d3_47 ), 
    .C1(\CIC1Sin/n4758 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_47 ), 
    .D0(\CIC1Sin/d3_46 ), .C0(\CIC1Sin/n4759 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_46 ), .DI1(\CIC1Sin/d4_71_N_634_47 ), 
    .DI0(\CIC1Sin/d4_71_N_634_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12135 ), 
    .F0(\CIC1Sin/d4_71_N_634_46 ), .Q0(\CIC1Sin/d4_46 ), 
    .F1(\CIC1Sin/d4_71_N_634_47 ), .Q1(\CIC1Sin/d4_47 ), 
    .FCO(\CIC1Sin/n12136 ));
  CIC1Sin_SLICE_704 \CIC1Sin/SLICE_704 ( .D1(\CIC1Sin/d3_45 ), 
    .C1(\CIC1Sin/n4760 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_45 ), 
    .D0(\CIC1Sin/d3_44 ), .C0(\CIC1Sin/n4761 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_44 ), .DI1(\CIC1Sin/d4_71_N_634_45 ), 
    .DI0(\CIC1Sin/d4_71_N_634_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12134 ), 
    .F0(\CIC1Sin/d4_71_N_634_44 ), .Q0(\CIC1Sin/d4_44 ), 
    .F1(\CIC1Sin/d4_71_N_634_45 ), .Q1(\CIC1Sin/d4_45 ), 
    .FCO(\CIC1Sin/n12135 ));
  CIC1Sin_SLICE_705 \CIC1Sin/SLICE_705 ( .D1(\CIC1Sin/d3_43 ), 
    .C1(\CIC1Sin/n4762 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_43 ), 
    .D0(\CIC1Sin/d3_42 ), .C0(\CIC1Sin/n4763 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_42 ), .DI1(\CIC1Sin/d4_71_N_634_43 ), 
    .DI0(\CIC1Sin/d4_71_N_634_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12133 ), 
    .F0(\CIC1Sin/d4_71_N_634_42 ), .Q0(\CIC1Sin/d4_42 ), 
    .F1(\CIC1Sin/d4_71_N_634_43 ), .Q1(\CIC1Sin/d4_43 ), 
    .FCO(\CIC1Sin/n12134 ));
  CIC1Sin_SLICE_706 \CIC1Sin/SLICE_706 ( .D1(\CIC1Sin/d3_41 ), 
    .C1(\CIC1Sin/n4764 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_41 ), 
    .D0(\CIC1Sin/d3_40 ), .C0(\CIC1Sin/n4765 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_40 ), .DI1(\CIC1Sin/d4_71_N_634_41 ), 
    .DI0(\CIC1Sin/d4_71_N_634_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12132 ), 
    .F0(\CIC1Sin/d4_71_N_634_40 ), .Q0(\CIC1Sin/d4_40 ), 
    .F1(\CIC1Sin/d4_71_N_634_41 ), .Q1(\CIC1Sin/d4_41 ), 
    .FCO(\CIC1Sin/n12133 ));
  CIC1Sin_SLICE_707 \CIC1Sin/SLICE_707 ( .D1(\CIC1Sin/d3_39 ), 
    .C1(\CIC1Sin/n4766 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_39 ), 
    .D0(\CIC1Sin/d3_38 ), .C0(\CIC1Sin/n4767 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_38 ), .DI1(\CIC1Sin/d4_71_N_634_39 ), 
    .DI0(\CIC1Sin/d4_71_N_634_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12131 ), 
    .F0(\CIC1Sin/d4_71_N_634_38 ), .Q0(\CIC1Sin/d4_38 ), 
    .F1(\CIC1Sin/d4_71_N_634_39 ), .Q1(\CIC1Sin/d4_39 ), 
    .FCO(\CIC1Sin/n12132 ));
  CIC1Sin_SLICE_708 \CIC1Sin/SLICE_708 ( .D1(\CIC1Sin/d3_37 ), 
    .C1(\CIC1Sin/n4768 ), .B1(\CIC1Sin/n4732 ), .A1(\CIC1Sin/d4_37 ), 
    .D0(\CIC1Sin/d3_36 ), .C0(\CIC1Sin/n4769 ), .B0(\CIC1Sin/n4732 ), 
    .A0(\CIC1Sin/d4_36 ), .DI1(\CIC1Sin/d4_71_N_634_37 ), 
    .DI0(\CIC1Sin/d4_71_N_634_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12130 ), 
    .F0(\CIC1Sin/d4_71_N_634_36 ), .Q0(\CIC1Sin/d4_36 ), 
    .F1(\CIC1Sin/d4_71_N_634_37 ), .Q1(\CIC1Sin/d4_37 ), 
    .FCO(\CIC1Sin/n12131 ));
  CIC1Sin_SLICE_709 \CIC1Sin/SLICE_709 ( .A1(\CIC1Sin/n4732 ), 
    .FCO(\CIC1Sin/n12130 ));
  CIC1Sin_SLICE_710 \CIC1Sin/SLICE_710 ( .B1(\CIC1Sin/d5_71 ), 
    .A1(\CIC1Sin/d4_71 ), .B0(\CIC1Sin/d5_70 ), .A0(\CIC1Sin/d4_70 ), 
    .FCI(\CIC1Sin/n12125 ), .F0(\CIC1Sin/n4887 ), .F1(\CIC1Sin/n4886 ));
  CIC1Sin_SLICE_711 \CIC1Sin/SLICE_711 ( .B1(\CIC1Sin/d5_69 ), 
    .A1(\CIC1Sin/d4_69 ), .B0(\CIC1Sin/d5_68 ), .A0(\CIC1Sin/d4_68 ), 
    .FCI(\CIC1Sin/n12124 ), .F0(\CIC1Sin/n4889 ), .F1(\CIC1Sin/n4888 ), 
    .FCO(\CIC1Sin/n12125 ));
  CIC1Sin_SLICE_712 \CIC1Sin/SLICE_712 ( .B1(\CIC1Sin/d5_67 ), 
    .A1(\CIC1Sin/d4_67 ), .B0(\CIC1Sin/d5_66 ), .A0(\CIC1Sin/d4_66 ), 
    .FCI(\CIC1Sin/n12123 ), .F0(\CIC1Sin/n4891 ), .F1(\CIC1Sin/n4890 ), 
    .FCO(\CIC1Sin/n12124 ));
  CIC1Sin_SLICE_713 \CIC1Sin/SLICE_713 ( .B1(\CIC1Sin/d5_65 ), 
    .A1(\CIC1Sin/d4_65 ), .B0(\CIC1Sin/d5_64 ), .A0(\CIC1Sin/d4_64 ), 
    .FCI(\CIC1Sin/n12122 ), .F0(\CIC1Sin/n4893 ), .F1(\CIC1Sin/n4892 ), 
    .FCO(\CIC1Sin/n12123 ));
  CIC1Sin_SLICE_714 \CIC1Sin/SLICE_714 ( .B1(\CIC1Sin/d5_63 ), 
    .A1(\CIC1Sin/d4_63 ), .B0(\CIC1Sin/d5_62 ), .A0(\CIC1Sin/d4_62 ), 
    .FCI(\CIC1Sin/n12121 ), .F0(\CIC1Sin/n4895 ), .F1(\CIC1Sin/n4894 ), 
    .FCO(\CIC1Sin/n12122 ));
  CIC1Sin_SLICE_715 \CIC1Sin/SLICE_715 ( .B1(\CIC1Sin/d5_61 ), 
    .A1(\CIC1Sin/d4_61 ), .B0(\CIC1Sin/d5_60 ), .A0(\CIC1Sin/d4_60 ), 
    .FCI(\CIC1Sin/n12120 ), .F0(\CIC1Sin/n4897 ), .F1(\CIC1Sin/n4896 ), 
    .FCO(\CIC1Sin/n12121 ));
  CIC1Sin_SLICE_716 \CIC1Sin/SLICE_716 ( .B1(\CIC1Sin/d5_59 ), 
    .A1(\CIC1Sin/d4_59 ), .B0(\CIC1Sin/d5_58 ), .A0(\CIC1Sin/d4_58 ), 
    .FCI(\CIC1Sin/n12119 ), .F0(\CIC1Sin/n4899 ), .F1(\CIC1Sin/n4898 ), 
    .FCO(\CIC1Sin/n12120 ));
  CIC1Sin_SLICE_717 \CIC1Sin/SLICE_717 ( .B1(\CIC1Sin/d5_57 ), 
    .A1(\CIC1Sin/d4_57 ), .B0(\CIC1Sin/d5_56 ), .A0(\CIC1Sin/d4_56 ), 
    .FCI(\CIC1Sin/n12118 ), .F0(\CIC1Sin/n4901 ), .F1(\CIC1Sin/n4900 ), 
    .FCO(\CIC1Sin/n12119 ));
  CIC1Sin_SLICE_718 \CIC1Sin/SLICE_718 ( .B1(\CIC1Sin/d5_55 ), 
    .A1(\CIC1Sin/d4_55 ), .B0(\CIC1Sin/d5_54 ), .A0(\CIC1Sin/d4_54 ), 
    .FCI(\CIC1Sin/n12117 ), .F0(\CIC1Sin/n4903 ), .F1(\CIC1Sin/n4902 ), 
    .FCO(\CIC1Sin/n12118 ));
  CIC1Sin_SLICE_719 \CIC1Sin/SLICE_719 ( .B1(\CIC1Sin/d5_53 ), 
    .A1(\CIC1Sin/d4_53 ), .B0(\CIC1Sin/d5_52 ), .A0(\CIC1Sin/d4_52 ), 
    .FCI(\CIC1Sin/n12116 ), .F0(\CIC1Sin/n4905 ), .F1(\CIC1Sin/n4904 ), 
    .FCO(\CIC1Sin/n12117 ));
  CIC1Sin_SLICE_720 \CIC1Sin/SLICE_720 ( .B1(\CIC1Sin/d5_51 ), 
    .A1(\CIC1Sin/d4_51 ), .B0(\CIC1Sin/d5_50 ), .A0(\CIC1Sin/d4_50 ), 
    .FCI(\CIC1Sin/n12115 ), .F0(\CIC1Sin/n4907 ), .F1(\CIC1Sin/n4906 ), 
    .FCO(\CIC1Sin/n12116 ));
  CIC1Sin_SLICE_721 \CIC1Sin/SLICE_721 ( .B1(\CIC1Sin/d5_49 ), 
    .A1(\CIC1Sin/d4_49 ), .B0(\CIC1Sin/d5_48 ), .A0(\CIC1Sin/d4_48 ), 
    .FCI(\CIC1Sin/n12114 ), .F0(\CIC1Sin/n4909 ), .F1(\CIC1Sin/n4908 ), 
    .FCO(\CIC1Sin/n12115 ));
  CIC1Sin_SLICE_722 \CIC1Sin/SLICE_722 ( .B1(\CIC1Sin/d5_47 ), 
    .A1(\CIC1Sin/d4_47 ), .B0(\CIC1Sin/d5_46 ), .A0(\CIC1Sin/d4_46 ), 
    .FCI(\CIC1Sin/n12113 ), .F0(\CIC1Sin/n4911 ), .F1(\CIC1Sin/n4910 ), 
    .FCO(\CIC1Sin/n12114 ));
  CIC1Sin_SLICE_723 \CIC1Sin/SLICE_723 ( .B1(\CIC1Sin/d5_45 ), 
    .A1(\CIC1Sin/d4_45 ), .B0(\CIC1Sin/d5_44 ), .A0(\CIC1Sin/d4_44 ), 
    .FCI(\CIC1Sin/n12112 ), .F0(\CIC1Sin/n4913 ), .F1(\CIC1Sin/n4912 ), 
    .FCO(\CIC1Sin/n12113 ));
  CIC1Sin_SLICE_724 \CIC1Sin/SLICE_724 ( .B1(\CIC1Sin/d5_43 ), 
    .A1(\CIC1Sin/d4_43 ), .B0(\CIC1Sin/d5_42 ), .A0(\CIC1Sin/d4_42 ), 
    .FCI(\CIC1Sin/n12111 ), .F0(\CIC1Sin/n4915 ), .F1(\CIC1Sin/n4914 ), 
    .FCO(\CIC1Sin/n12112 ));
  CIC1Sin_SLICE_725 \CIC1Sin/SLICE_725 ( .B1(\CIC1Sin/d5_41 ), 
    .A1(\CIC1Sin/d4_41 ), .B0(\CIC1Sin/d5_40 ), .A0(\CIC1Sin/d4_40 ), 
    .FCI(\CIC1Sin/n12110 ), .F0(\CIC1Sin/n4917 ), .F1(\CIC1Sin/n4916 ), 
    .FCO(\CIC1Sin/n12111 ));
  CIC1Sin_SLICE_726 \CIC1Sin/SLICE_726 ( .B1(\CIC1Sin/d5_39 ), 
    .A1(\CIC1Sin/d4_39 ), .B0(\CIC1Sin/d5_38 ), .A0(\CIC1Sin/d4_38 ), 
    .FCI(\CIC1Sin/n12109 ), .F0(\CIC1Sin/n4919 ), .F1(\CIC1Sin/n4918 ), 
    .FCO(\CIC1Sin/n12110 ));
  CIC1Sin_SLICE_727 \CIC1Sin/SLICE_727 ( .B1(\CIC1Sin/d5_37 ), 
    .A1(\CIC1Sin/d4_37 ), .B0(\CIC1Sin/d5_36 ), .A0(\CIC1Sin/d4_36 ), 
    .F1(\CIC1Sin/n4920 ), .FCO(\CIC1Sin/n12109 ));
  CIC1Sin_SLICE_728 \CIC1Sin/SLICE_728 ( .B1(\CIC1Sin/d1_41 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_40 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12274 ), .F0(\CIC1Sin/n4309 ), .F1(\CIC1Sin/n4308 ), 
    .FCO(\CIC1Sin/n12275 ));
  CIC1Sin_SLICE_729 \CIC1Sin/SLICE_729 ( .B1(\CIC1Sin/d1_39 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_38 ), .A0(MixerOutSin_11), 
    .FCI(\CIC1Sin/n12273 ), .F0(\CIC1Sin/n4311 ), .F1(\CIC1Sin/n4310 ), 
    .FCO(\CIC1Sin/n12274 ));
  CIC1Sin_SLICE_730 \CIC1Sin/SLICE_730 ( .B1(\CIC1Sin/d1_37 ), 
    .A1(MixerOutSin_11), .B0(\CIC1Sin/d1_36 ), .A0(MixerOutSin_11), 
    .F1(\CIC1Sin/n4312 ), .FCO(\CIC1Sin/n12273 ));
  CIC1Sin_SLICE_731 \CIC1Sin/SLICE_731 ( .D1(\CIC1Sin/d4_71 ), 
    .C1(\CIC1Sin/n4886 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_71 ), 
    .D0(\CIC1Sin/d4_70 ), .C0(\CIC1Sin/n4887 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_70 ), .DI1(\CIC1Sin/d5_71_N_706_71 ), 
    .DI0(\CIC1Sin/d5_71_N_706_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12106 ), 
    .F0(\CIC1Sin/d5_71_N_706_70 ), .Q0(\CIC1Sin/d5_70 ), 
    .F1(\CIC1Sin/d5_71_N_706_71 ), .Q1(\CIC1Sin/d5_71 ));
  CIC1Sin_SLICE_732 \CIC1Sin/SLICE_732 ( .D1(\CIC1Sin/d4_69 ), 
    .C1(\CIC1Sin/n4888 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_69 ), 
    .D0(\CIC1Sin/d4_68 ), .C0(\CIC1Sin/n4889 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_68 ), .DI1(\CIC1Sin/d5_71_N_706_69 ), 
    .DI0(\CIC1Sin/d5_71_N_706_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12105 ), 
    .F0(\CIC1Sin/d5_71_N_706_68 ), .Q0(\CIC1Sin/d5_68 ), 
    .F1(\CIC1Sin/d5_71_N_706_69 ), .Q1(\CIC1Sin/d5_69 ), 
    .FCO(\CIC1Sin/n12106 ));
  CIC1Sin_SLICE_733 \CIC1Sin/SLICE_733 ( .D1(\CIC1Sin/d4_67 ), 
    .C1(\CIC1Sin/n4890 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_67 ), 
    .D0(\CIC1Sin/d4_66 ), .C0(\CIC1Sin/n4891 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_66 ), .DI1(\CIC1Sin/d5_71_N_706_67 ), 
    .DI0(\CIC1Sin/d5_71_N_706_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12104 ), 
    .F0(\CIC1Sin/d5_71_N_706_66 ), .Q0(\CIC1Sin/d5_66 ), 
    .F1(\CIC1Sin/d5_71_N_706_67 ), .Q1(\CIC1Sin/d5_67 ), 
    .FCO(\CIC1Sin/n12105 ));
  CIC1Sin_SLICE_734 \CIC1Sin/SLICE_734 ( .D1(\CIC1Sin/d4_65 ), 
    .C1(\CIC1Sin/n4892 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_65 ), 
    .D0(\CIC1Sin/d4_64 ), .C0(\CIC1Sin/n4893 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_64 ), .DI1(\CIC1Sin/d5_71_N_706_65 ), 
    .DI0(\CIC1Sin/d5_71_N_706_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12103 ), 
    .F0(\CIC1Sin/d5_71_N_706_64 ), .Q0(\CIC1Sin/d5_64 ), 
    .F1(\CIC1Sin/d5_71_N_706_65 ), .Q1(\CIC1Sin/d5_65 ), 
    .FCO(\CIC1Sin/n12104 ));
  CIC1Sin_SLICE_735 \CIC1Sin/SLICE_735 ( .D1(\CIC1Sin/d4_63 ), 
    .C1(\CIC1Sin/n4894 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_63 ), 
    .D0(\CIC1Sin/d4_62 ), .C0(\CIC1Sin/n4895 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_62 ), .DI1(\CIC1Sin/d5_71_N_706_63 ), 
    .DI0(\CIC1Sin/d5_71_N_706_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12102 ), 
    .F0(\CIC1Sin/d5_71_N_706_62 ), .Q0(\CIC1Sin/d5_62 ), 
    .F1(\CIC1Sin/d5_71_N_706_63 ), .Q1(\CIC1Sin/d5_63 ), 
    .FCO(\CIC1Sin/n12103 ));
  CIC1Sin_SLICE_736 \CIC1Sin/SLICE_736 ( .D1(\CIC1Sin/d4_61 ), 
    .C1(\CIC1Sin/n4896 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_61 ), 
    .D0(\CIC1Sin/d4_60 ), .C0(\CIC1Sin/n4897 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_60 ), .DI1(\CIC1Sin/d5_71_N_706_61 ), 
    .DI0(\CIC1Sin/d5_71_N_706_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12101 ), 
    .F0(\CIC1Sin/d5_71_N_706_60 ), .Q0(\CIC1Sin/d5_60 ), 
    .F1(\CIC1Sin/d5_71_N_706_61 ), .Q1(\CIC1Sin/d5_61 ), 
    .FCO(\CIC1Sin/n12102 ));
  CIC1Sin_SLICE_737 \CIC1Sin/SLICE_737 ( .D1(\CIC1Sin/d4_59 ), 
    .C1(\CIC1Sin/n4898 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_59 ), 
    .D0(\CIC1Sin/d4_58 ), .C0(\CIC1Sin/n4899 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_58 ), .DI1(\CIC1Sin/d5_71_N_706_59 ), 
    .DI0(\CIC1Sin/d5_71_N_706_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12100 ), 
    .F0(\CIC1Sin/d5_71_N_706_58 ), .Q0(\CIC1Sin/d5_58 ), 
    .F1(\CIC1Sin/d5_71_N_706_59 ), .Q1(\CIC1Sin/d5_59 ), 
    .FCO(\CIC1Sin/n12101 ));
  CIC1Sin_SLICE_738 \CIC1Sin/SLICE_738 ( .D1(\CIC1Sin/d4_57 ), 
    .C1(\CIC1Sin/n4900 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_57 ), 
    .D0(\CIC1Sin/d4_56 ), .C0(\CIC1Sin/n4901 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_56 ), .DI1(\CIC1Sin/d5_71_N_706_57 ), 
    .DI0(\CIC1Sin/d5_71_N_706_56 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12099 ), 
    .F0(\CIC1Sin/d5_71_N_706_56 ), .Q0(\CIC1Sin/d5_56 ), 
    .F1(\CIC1Sin/d5_71_N_706_57 ), .Q1(\CIC1Sin/d5_57 ), 
    .FCO(\CIC1Sin/n12100 ));
  CIC1Sin_SLICE_739 \CIC1Sin/SLICE_739 ( .D1(\CIC1Sin/d4_55 ), 
    .C1(\CIC1Sin/n4902 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_55 ), 
    .D0(\CIC1Sin/d4_54 ), .C0(\CIC1Sin/n4903 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_54 ), .DI1(\CIC1Sin/d5_71_N_706_55 ), 
    .DI0(\CIC1Sin/d5_71_N_706_54 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12098 ), 
    .F0(\CIC1Sin/d5_71_N_706_54 ), .Q0(\CIC1Sin/d5_54 ), 
    .F1(\CIC1Sin/d5_71_N_706_55 ), .Q1(\CIC1Sin/d5_55 ), 
    .FCO(\CIC1Sin/n12099 ));
  CIC1Sin_SLICE_740 \CIC1Sin/SLICE_740 ( .D1(\CIC1Sin/d4_53 ), 
    .C1(\CIC1Sin/n4904 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_53 ), 
    .D0(\CIC1Sin/d4_52 ), .C0(\CIC1Sin/n4905 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_52 ), .DI1(\CIC1Sin/d5_71_N_706_53 ), 
    .DI0(\CIC1Sin/d5_71_N_706_52 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12097 ), 
    .F0(\CIC1Sin/d5_71_N_706_52 ), .Q0(\CIC1Sin/d5_52 ), 
    .F1(\CIC1Sin/d5_71_N_706_53 ), .Q1(\CIC1Sin/d5_53 ), 
    .FCO(\CIC1Sin/n12098 ));
  CIC1Sin_SLICE_741 \CIC1Sin/SLICE_741 ( .D1(\CIC1Sin/d4_51 ), 
    .C1(\CIC1Sin/n4906 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_51 ), 
    .D0(\CIC1Sin/d4_50 ), .C0(\CIC1Sin/n4907 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_50 ), .DI1(\CIC1Sin/d5_71_N_706_51 ), 
    .DI0(\CIC1Sin/d5_71_N_706_50 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12096 ), 
    .F0(\CIC1Sin/d5_71_N_706_50 ), .Q0(\CIC1Sin/d5_50 ), 
    .F1(\CIC1Sin/d5_71_N_706_51 ), .Q1(\CIC1Sin/d5_51 ), 
    .FCO(\CIC1Sin/n12097 ));
  CIC1Sin_SLICE_742 \CIC1Sin/SLICE_742 ( .D1(\CIC1Sin/d4_49 ), 
    .C1(\CIC1Sin/n4908 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_49 ), 
    .D0(\CIC1Sin/d4_48 ), .C0(\CIC1Sin/n4909 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_48 ), .DI1(\CIC1Sin/d5_71_N_706_49 ), 
    .DI0(\CIC1Sin/d5_71_N_706_48 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12095 ), 
    .F0(\CIC1Sin/d5_71_N_706_48 ), .Q0(\CIC1Sin/d5_48 ), 
    .F1(\CIC1Sin/d5_71_N_706_49 ), .Q1(\CIC1Sin/d5_49 ), 
    .FCO(\CIC1Sin/n12096 ));
  CIC1Sin_SLICE_743 \CIC1Sin/SLICE_743 ( .D1(\CIC1Sin/d4_47 ), 
    .C1(\CIC1Sin/n4910 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_47 ), 
    .D0(\CIC1Sin/d4_46 ), .C0(\CIC1Sin/n4911 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_46 ), .DI1(\CIC1Sin/d5_71_N_706_47 ), 
    .DI0(\CIC1Sin/d5_71_N_706_46 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12094 ), 
    .F0(\CIC1Sin/d5_71_N_706_46 ), .Q0(\CIC1Sin/d5_46 ), 
    .F1(\CIC1Sin/d5_71_N_706_47 ), .Q1(\CIC1Sin/d5_47 ), 
    .FCO(\CIC1Sin/n12095 ));
  CIC1Sin_SLICE_744 \CIC1Sin/SLICE_744 ( .D1(\CIC1Sin/d4_45 ), 
    .C1(\CIC1Sin/n4912 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_45 ), 
    .D0(\CIC1Sin/d4_44 ), .C0(\CIC1Sin/n4913 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_44 ), .DI1(\CIC1Sin/d5_71_N_706_45 ), 
    .DI0(\CIC1Sin/d5_71_N_706_44 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12093 ), 
    .F0(\CIC1Sin/d5_71_N_706_44 ), .Q0(\CIC1Sin/d5_44 ), 
    .F1(\CIC1Sin/d5_71_N_706_45 ), .Q1(\CIC1Sin/d5_45 ), 
    .FCO(\CIC1Sin/n12094 ));
  CIC1Sin_SLICE_745 \CIC1Sin/SLICE_745 ( .D1(\CIC1Sin/d4_43 ), 
    .C1(\CIC1Sin/n4914 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_43 ), 
    .D0(\CIC1Sin/d4_42 ), .C0(\CIC1Sin/n4915 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_42 ), .DI1(\CIC1Sin/d5_71_N_706_43 ), 
    .DI0(\CIC1Sin/d5_71_N_706_42 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12092 ), 
    .F0(\CIC1Sin/d5_71_N_706_42 ), .Q0(\CIC1Sin/d5_42 ), 
    .F1(\CIC1Sin/d5_71_N_706_43 ), .Q1(\CIC1Sin/d5_43 ), 
    .FCO(\CIC1Sin/n12093 ));
  CIC1Sin_SLICE_746 \CIC1Sin/SLICE_746 ( .D1(\CIC1Sin/d4_41 ), 
    .C1(\CIC1Sin/n4916 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_41 ), 
    .D0(\CIC1Sin/d4_40 ), .C0(\CIC1Sin/n4917 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_40 ), .DI1(\CIC1Sin/d5_71_N_706_41 ), 
    .DI0(\CIC1Sin/d5_71_N_706_40 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12091 ), 
    .F0(\CIC1Sin/d5_71_N_706_40 ), .Q0(\CIC1Sin/d5_40 ), 
    .F1(\CIC1Sin/d5_71_N_706_41 ), .Q1(\CIC1Sin/d5_41 ), 
    .FCO(\CIC1Sin/n12092 ));
  CIC1Sin_SLICE_747 \CIC1Sin/SLICE_747 ( .D1(\CIC1Sin/d4_39 ), 
    .C1(\CIC1Sin/n4918 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_39 ), 
    .D0(\CIC1Sin/d4_38 ), .C0(\CIC1Sin/n4919 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_38 ), .DI1(\CIC1Sin/d5_71_N_706_39 ), 
    .DI0(\CIC1Sin/d5_71_N_706_38 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12090 ), 
    .F0(\CIC1Sin/d5_71_N_706_38 ), .Q0(\CIC1Sin/d5_38 ), 
    .F1(\CIC1Sin/d5_71_N_706_39 ), .Q1(\CIC1Sin/d5_39 ), 
    .FCO(\CIC1Sin/n12091 ));
  CIC1Sin_SLICE_748 \CIC1Sin/SLICE_748 ( .D1(\CIC1Sin/d4_37 ), 
    .C1(\CIC1Sin/n4920 ), .B1(\CIC1Sin/n4884 ), .A1(\CIC1Sin/d5_37 ), 
    .D0(\CIC1Sin/d4_36 ), .C0(\CIC1Sin/n4921 ), .B0(\CIC1Sin/n4884 ), 
    .A0(\CIC1Sin/d5_36 ), .DI1(\CIC1Sin/d5_71_N_706_37 ), 
    .DI0(\CIC1Sin/d5_71_N_706_36 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12089 ), 
    .F0(\CIC1Sin/d5_71_N_706_36 ), .Q0(\CIC1Sin/d5_36 ), 
    .F1(\CIC1Sin/d5_71_N_706_37 ), .Q1(\CIC1Sin/d5_37 ), 
    .FCO(\CIC1Sin/n12090 ));
  CIC1Sin_SLICE_749 \CIC1Sin/SLICE_749 ( .A1(\CIC1Sin/n4884 ), 
    .FCO(\CIC1Sin/n12089 ));
  CIC1Sin_SLICE_750 \CIC1Sin/SLICE_750 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4278 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_71 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4279 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_70 ), .DI1(\CIC1Sin/d1_71_N_418_71 ), 
    .DI0(\CIC1Sin/d1_71_N_418_70 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12270 ), 
    .F0(\CIC1Sin/d1_71_N_418_70 ), .Q0(\CIC1Sin/d1_70 ), 
    .F1(\CIC1Sin/d1_71_N_418_71 ), .Q1(\CIC1Sin/d1_71 ));
  CIC1Sin_SLICE_751 \CIC1Sin/SLICE_751 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4280 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_69 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4281 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_68 ), .DI1(\CIC1Sin/d1_71_N_418_69 ), 
    .DI0(\CIC1Sin/d1_71_N_418_68 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12269 ), 
    .F0(\CIC1Sin/d1_71_N_418_68 ), .Q0(\CIC1Sin/d1_68 ), 
    .F1(\CIC1Sin/d1_71_N_418_69 ), .Q1(\CIC1Sin/d1_69 ), 
    .FCO(\CIC1Sin/n12270 ));
  CIC1Sin_SLICE_752 \CIC1Sin/SLICE_752 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4282 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_67 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4283 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_66 ), .DI1(\CIC1Sin/d1_71_N_418_67 ), 
    .DI0(\CIC1Sin/d1_71_N_418_66 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12268 ), 
    .F0(\CIC1Sin/d1_71_N_418_66 ), .Q0(\CIC1Sin/d1_66 ), 
    .F1(\CIC1Sin/d1_71_N_418_67 ), .Q1(\CIC1Sin/d1_67 ), 
    .FCO(\CIC1Sin/n12269 ));
  CIC1Sin_SLICE_753 \CIC1Sin/SLICE_753 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4284 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_65 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4285 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_64 ), .DI1(\CIC1Sin/d1_71_N_418_65 ), 
    .DI0(\CIC1Sin/d1_71_N_418_64 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12267 ), 
    .F0(\CIC1Sin/d1_71_N_418_64 ), .Q0(\CIC1Sin/d1_64 ), 
    .F1(\CIC1Sin/d1_71_N_418_65 ), .Q1(\CIC1Sin/d1_65 ), 
    .FCO(\CIC1Sin/n12268 ));
  CIC1Sin_SLICE_754 \CIC1Sin/SLICE_754 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4286 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_63 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4287 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_62 ), .DI1(\CIC1Sin/d1_71_N_418_63 ), 
    .DI0(\CIC1Sin/d1_71_N_418_62 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12266 ), 
    .F0(\CIC1Sin/d1_71_N_418_62 ), .Q0(\CIC1Sin/d1_62 ), 
    .F1(\CIC1Sin/d1_71_N_418_63 ), .Q1(\CIC1Sin/d1_63 ), 
    .FCO(\CIC1Sin/n12267 ));
  CIC1Sin_SLICE_755 \CIC1Sin/SLICE_755 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4288 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_61 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4289 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_60 ), .DI1(\CIC1Sin/d1_71_N_418_61 ), 
    .DI0(\CIC1Sin/d1_71_N_418_60 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12265 ), 
    .F0(\CIC1Sin/d1_71_N_418_60 ), .Q0(\CIC1Sin/d1_60 ), 
    .F1(\CIC1Sin/d1_71_N_418_61 ), .Q1(\CIC1Sin/d1_61 ), 
    .FCO(\CIC1Sin/n12266 ));
  CIC1Sin_SLICE_756 \CIC1Sin/SLICE_756 ( .D1(MixerOutSin_11), 
    .C1(\CIC1Sin/n4290 ), .B1(\CIC1Sin/n4276 ), .A1(\CIC1Sin/d1_59 ), 
    .D0(MixerOutSin_11), .C0(\CIC1Sin/n4291 ), .B0(\CIC1Sin/n4276 ), 
    .A0(\CIC1Sin/d1_58 ), .DI1(\CIC1Sin/d1_71_N_418_59 ), 
    .DI0(\CIC1Sin/d1_71_N_418_58 ), .CLK(osc_clk), .FCI(\CIC1Sin/n12264 ), 
    .F0(\CIC1Sin/d1_71_N_418_58 ), .Q0(\CIC1Sin/d1_58 ), 
    .F1(\CIC1Sin/d1_71_N_418_59 ), .Q1(\CIC1Sin/d1_59 ), 
    .FCO(\CIC1Sin/n12265 ));
  CIC1Cos_SLICE_757 \CIC1Cos/SLICE_757 ( .B1(\CIC1Cos/d2_55 ), 
    .A1(\CIC1Cos/d1_55 ), .B0(\CIC1Cos/d2_54 ), .A0(\CIC1Cos/d1_54 ), 
    .FCI(\CIC1Cos/n12035 ), .F0(\CIC1Cos/n5207 ), .F1(\CIC1Cos/n5206 ), 
    .FCO(\CIC1Cos/n12036 ));
  CIC1Cos_SLICE_758 \CIC1Cos/SLICE_758 ( .B1(\CIC1Cos/d2_53 ), 
    .A1(\CIC1Cos/d1_53 ), .B0(\CIC1Cos/d2_52 ), .A0(\CIC1Cos/d1_52 ), 
    .FCI(\CIC1Cos/n12034 ), .F0(\CIC1Cos/n5209 ), .F1(\CIC1Cos/n5208 ), 
    .FCO(\CIC1Cos/n12035 ));
  CIC1Cos_SLICE_759 \CIC1Cos/SLICE_759 ( .B1(\CIC1Cos/d2_51 ), 
    .A1(\CIC1Cos/d1_51 ), .B0(\CIC1Cos/d2_50 ), .A0(\CIC1Cos/d1_50 ), 
    .FCI(\CIC1Cos/n12033 ), .F0(\CIC1Cos/n5211 ), .F1(\CIC1Cos/n5210 ), 
    .FCO(\CIC1Cos/n12034 ));
  CIC1Cos_SLICE_760 \CIC1Cos/SLICE_760 ( .D1(\CIC1Cos/d2_57 ), 
    .C1(\CIC1Cos/n5356 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_57 ), 
    .D0(\CIC1Cos/d2_56 ), .C0(\CIC1Cos/n5357 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_56 ), .DI1(\CIC1Cos/d3_71_N_562_57 ), 
    .DI0(\CIC1Cos/d3_71_N_562_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11976 ), 
    .F0(\CIC1Cos/d3_71_N_562_56 ), .Q0(\CIC1Cos/d3_56 ), 
    .F1(\CIC1Cos/d3_71_N_562_57 ), .Q1(\CIC1Cos/d3_57 ), 
    .FCO(\CIC1Cos/n11977 ));
  CIC1Cos_SLICE_761 \CIC1Cos/SLICE_761 ( .D1(\CIC1Cos/d4_65 ), 
    .C1(\CIC1Cos/n5652 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_65 ), 
    .D0(\CIC1Cos/d4_64 ), .C0(\CIC1Cos/n5653 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_64 ), .DI1(\CIC1Cos/d5_71_N_706_65 ), 
    .DI0(\CIC1Cos/d5_71_N_706_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11898 ), 
    .F0(\CIC1Cos/d5_71_N_706_64 ), .Q0(\CIC1Cos/d5_64 ), 
    .F1(\CIC1Cos/d5_71_N_706_65 ), .Q1(\CIC1Cos/d5_65 ), 
    .FCO(\CIC1Cos/n11899 ));
  CIC1Cos_SLICE_762 \CIC1Cos/SLICE_762 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5060 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_49 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5061 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_48 ), .DI1(\CIC1Cos/d1_71_N_418_49 ), 
    .DI0(\CIC1Cos/d1_71_N_418_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12054 ), 
    .F0(\CIC1Cos/d1_71_N_418_48 ), .Q0(\CIC1Cos/d1_48 ), 
    .F1(\CIC1Cos/d1_71_N_418_49 ), .Q1(\CIC1Cos/d1_49 ), 
    .FCO(\CIC1Cos/n12055 ));
  CIC1Cos_SLICE_763 \CIC1Cos/SLICE_763 ( .D1(\CIC1Cos/d2_55 ), 
    .C1(\CIC1Cos/n5358 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_55 ), 
    .D0(\CIC1Cos/d2_54 ), .C0(\CIC1Cos/n5359 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_54 ), .DI1(\CIC1Cos/d3_71_N_562_55 ), 
    .DI0(\CIC1Cos/d3_71_N_562_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11975 ), 
    .F0(\CIC1Cos/d3_71_N_562_54 ), .Q0(\CIC1Cos/d3_54 ), 
    .F1(\CIC1Cos/d3_71_N_562_55 ), .Q1(\CIC1Cos/d3_55 ), 
    .FCO(\CIC1Cos/n11976 ));
  CIC1Cos_SLICE_764 \CIC1Cos/SLICE_764 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5062 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_47 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5063 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_46 ), .DI1(\CIC1Cos/d1_71_N_418_47 ), 
    .DI0(\CIC1Cos/d1_71_N_418_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12053 ), 
    .F0(\CIC1Cos/d1_71_N_418_46 ), .Q0(\CIC1Cos/d1_46 ), 
    .F1(\CIC1Cos/d1_71_N_418_47 ), .Q1(\CIC1Cos/d1_47 ), 
    .FCO(\CIC1Cos/n12054 ));
  CIC1Cos_SLICE_765 \CIC1Cos/SLICE_765 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5064 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_45 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5065 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_44 ), .DI1(\CIC1Cos/d1_71_N_418_45 ), 
    .DI0(\CIC1Cos/d1_71_N_418_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12052 ), 
    .F0(\CIC1Cos/d1_71_N_418_44 ), .Q0(\CIC1Cos/d1_44 ), 
    .F1(\CIC1Cos/d1_71_N_418_45 ), .Q1(\CIC1Cos/d1_45 ), 
    .FCO(\CIC1Cos/n12053 ));
  CIC1Cos_SLICE_766 \CIC1Cos/SLICE_766 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5068 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_41 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5069 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_40 ), .DI1(\CIC1Cos/d1_71_N_418_41 ), 
    .DI0(\CIC1Cos/d1_71_N_418_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12050 ), 
    .F0(\CIC1Cos/d1_71_N_418_40 ), .Q0(\CIC1Cos/d1_40 ), 
    .F1(\CIC1Cos/d1_71_N_418_41 ), .Q1(\CIC1Cos/d1_41 ), 
    .FCO(\CIC1Cos/n12051 ));
  CIC1Cos_SLICE_767 \CIC1Cos/SLICE_767 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5066 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_43 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5067 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_42 ), .DI1(\CIC1Cos/d1_71_N_418_43 ), 
    .DI0(\CIC1Cos/d1_71_N_418_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12051 ), 
    .F0(\CIC1Cos/d1_71_N_418_42 ), .Q0(\CIC1Cos/d1_42 ), 
    .F1(\CIC1Cos/d1_71_N_418_43 ), .Q1(\CIC1Cos/d1_43 ), 
    .FCO(\CIC1Cos/n12052 ));
  CIC1Cos_SLICE_768 \CIC1Cos/SLICE_768 ( .B1(\CIC1Cos/d5_49 ), 
    .A1(\CIC1Cos/d4_49 ), .B0(\CIC1Cos/d5_48 ), .A0(\CIC1Cos/d4_48 ), 
    .FCI(\CIC1Cos/n11909 ), .F0(\CIC1Cos/n5669 ), .F1(\CIC1Cos/n5668 ), 
    .FCO(\CIC1Cos/n11910 ));
  CIC1Cos_SLICE_769 \CIC1Cos/SLICE_769 ( .B1(\CIC1Cos/d2_69 ), 
    .A1(\CIC1Cos/d1_69 ), .B0(\CIC1Cos/d2_68 ), .A0(\CIC1Cos/d1_68 ), 
    .FCI(\CIC1Cos/n12042 ), .F0(\CIC1Cos/n5193 ), .F1(\CIC1Cos/n5192 ), 
    .FCO(\CIC1Cos/n12043 ));
  CIC1Cos_SLICE_770 \CIC1Cos/SLICE_770 ( .D1(\CIC1Cos/d4_71 ), 
    .C1(\CIC1Cos/n5646 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_71 ), 
    .D0(\CIC1Cos/d4_70 ), .C0(\CIC1Cos/n5647 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_70 ), .DI1(\CIC1Cos/d5_71_N_706_71 ), 
    .DI0(\CIC1Cos/d5_71_N_706_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11901 ), 
    .F0(\CIC1Cos/d5_71_N_706_70 ), .Q0(\CIC1Cos/d5_70 ), 
    .F1(\CIC1Cos/d5_71_N_706_71 ), .Q1(\CIC1Cos/d5_71 ));
  CIC1Cos_SLICE_771 \CIC1Cos/SLICE_771 ( .B1(\CIC1Cos/d2_67 ), 
    .A1(\CIC1Cos/d1_67 ), .B0(\CIC1Cos/d2_66 ), .A0(\CIC1Cos/d1_66 ), 
    .FCI(\CIC1Cos/n12041 ), .F0(\CIC1Cos/n5195 ), .F1(\CIC1Cos/n5194 ), 
    .FCO(\CIC1Cos/n12042 ));
  CIC1Cos_SLICE_772 \CIC1Cos/SLICE_772 ( .B1(\CIC1Cos/d2_65 ), 
    .A1(\CIC1Cos/d1_65 ), .B0(\CIC1Cos/d2_64 ), .A0(\CIC1Cos/d1_64 ), 
    .FCI(\CIC1Cos/n12040 ), .F0(\CIC1Cos/n5197 ), .F1(\CIC1Cos/n5196 ), 
    .FCO(\CIC1Cos/n12041 ));
  CIC1Cos_SLICE_773 \CIC1Cos/SLICE_773 ( .B1(\CIC1Cos/d2_63 ), 
    .A1(\CIC1Cos/d1_63 ), .B0(\CIC1Cos/d2_62 ), .A0(\CIC1Cos/d1_62 ), 
    .FCI(\CIC1Cos/n12039 ), .F0(\CIC1Cos/n5199 ), .F1(\CIC1Cos/n5198 ), 
    .FCO(\CIC1Cos/n12040 ));
  CIC1Cos_SLICE_774 \CIC1Cos/SLICE_774 ( .B1(\CIC1Cos/d2_61 ), 
    .A1(\CIC1Cos/d1_61 ), .B0(\CIC1Cos/d2_60 ), .A0(\CIC1Cos/d1_60 ), 
    .FCI(\CIC1Cos/n12038 ), .F0(\CIC1Cos/n5201 ), .F1(\CIC1Cos/n5200 ), 
    .FCO(\CIC1Cos/n12039 ));
  CIC1Cos_SLICE_775 \CIC1Cos/SLICE_775 ( .D1(\CIC1Cos/d2_53 ), 
    .C1(\CIC1Cos/n5360 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_53 ), 
    .D0(\CIC1Cos/d2_52 ), .C0(\CIC1Cos/n5361 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_52 ), .DI1(\CIC1Cos/d3_71_N_562_53 ), 
    .DI0(\CIC1Cos/d3_71_N_562_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11974 ), 
    .F0(\CIC1Cos/d3_71_N_562_52 ), .Q0(\CIC1Cos/d3_52 ), 
    .F1(\CIC1Cos/d3_71_N_562_53 ), .Q1(\CIC1Cos/d3_53 ), 
    .FCO(\CIC1Cos/n11975 ));
  CIC1Cos_SLICE_776 \CIC1Cos/SLICE_776 ( .B1(\CIC1Cos/d2_59 ), 
    .A1(\CIC1Cos/d1_59 ), .B0(\CIC1Cos/d2_58 ), .A0(\CIC1Cos/d1_58 ), 
    .FCI(\CIC1Cos/n12037 ), .F0(\CIC1Cos/n5203 ), .F1(\CIC1Cos/n5202 ), 
    .FCO(\CIC1Cos/n12038 ));
  CIC1Cos_SLICE_777 \CIC1Cos/SLICE_777 ( .D1(\CIC1Cos/d2_51 ), 
    .C1(\CIC1Cos/n5362 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_51 ), 
    .D0(\CIC1Cos/d2_50 ), .C0(\CIC1Cos/n5363 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_50 ), .DI1(\CIC1Cos/d3_71_N_562_51 ), 
    .DI0(\CIC1Cos/d3_71_N_562_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11973 ), 
    .F0(\CIC1Cos/d3_71_N_562_50 ), .Q0(\CIC1Cos/d3_50 ), 
    .F1(\CIC1Cos/d3_71_N_562_51 ), .Q1(\CIC1Cos/d3_51 ), 
    .FCO(\CIC1Cos/n11974 ));
  CIC1Cos_SLICE_778 \CIC1Cos/SLICE_778 ( .B1(\CIC1Cos/d2_57 ), 
    .A1(\CIC1Cos/d1_57 ), .B0(\CIC1Cos/d2_56 ), .A0(\CIC1Cos/d1_56 ), 
    .FCI(\CIC1Cos/n12036 ), .F0(\CIC1Cos/n5205 ), .F1(\CIC1Cos/n5204 ), 
    .FCO(\CIC1Cos/n12037 ));
  CIC1Cos_SLICE_779 \CIC1Cos/SLICE_779 ( .D1(\CIC1Cos/d4_63 ), 
    .C1(\CIC1Cos/n5654 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_63 ), 
    .D0(\CIC1Cos/d4_62 ), .C0(\CIC1Cos/n5655 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_62 ), .DI1(\CIC1Cos/d5_71_N_706_63 ), 
    .DI0(\CIC1Cos/d5_71_N_706_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11897 ), 
    .F0(\CIC1Cos/d5_71_N_706_62 ), .Q0(\CIC1Cos/d5_62 ), 
    .F1(\CIC1Cos/d5_71_N_706_63 ), .Q1(\CIC1Cos/d5_63 ), 
    .FCO(\CIC1Cos/n11898 ));
  CIC1Cos_SLICE_780 \CIC1Cos/SLICE_780 ( .D1(\CIC1Cos/d1_61 ), 
    .C1(\CIC1Cos/n5200 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_61 ), 
    .D0(\CIC1Cos/d1_60 ), .C0(\CIC1Cos/n5201 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_60 ), .DI1(\CIC1Cos/d2_71_N_490_61 ), 
    .DI0(\CIC1Cos/d2_71_N_490_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12019 ), 
    .F0(\CIC1Cos/d2_71_N_490_60 ), .Q0(\CIC1Cos/d2_60 ), 
    .F1(\CIC1Cos/d2_71_N_490_61 ), .Q1(\CIC1Cos/d2_61 ), 
    .FCO(\CIC1Cos/n12020 ));
  CIC1Cos_SLICE_781 \CIC1Cos/SLICE_781 ( .B1(\CIC1Cos/d2_41 ), 
    .A1(\CIC1Cos/d1_41 ), .B0(\CIC1Cos/d2_40 ), .A0(\CIC1Cos/d1_40 ), 
    .FCI(\CIC1Cos/n12028 ), .F0(\CIC1Cos/n5221 ), .F1(\CIC1Cos/n5220 ), 
    .FCO(\CIC1Cos/n12029 ));
  CIC1Cos_SLICE_782 \CIC1Cos/SLICE_782 ( .D1(\CIC1Cos/d4_61 ), 
    .C1(\CIC1Cos/n5656 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_61 ), 
    .D0(\CIC1Cos/d4_60 ), .C0(\CIC1Cos/n5657 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_60 ), .DI1(\CIC1Cos/d5_71_N_706_61 ), 
    .DI0(\CIC1Cos/d5_71_N_706_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11896 ), 
    .F0(\CIC1Cos/d5_71_N_706_60 ), .Q0(\CIC1Cos/d5_60 ), 
    .F1(\CIC1Cos/d5_71_N_706_61 ), .Q1(\CIC1Cos/d5_61 ), 
    .FCO(\CIC1Cos/n11897 ));
  CIC1Cos_SLICE_783 \CIC1Cos/SLICE_783 ( .D1(\CIC1Cos/d4_59 ), 
    .C1(\CIC1Cos/n5658 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_59 ), 
    .D0(\CIC1Cos/d4_58 ), .C0(\CIC1Cos/n5659 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_58 ), .DI1(\CIC1Cos/d5_71_N_706_59 ), 
    .DI0(\CIC1Cos/d5_71_N_706_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11895 ), 
    .F0(\CIC1Cos/d5_71_N_706_58 ), .Q0(\CIC1Cos/d5_58 ), 
    .F1(\CIC1Cos/d5_71_N_706_59 ), .Q1(\CIC1Cos/d5_59 ), 
    .FCO(\CIC1Cos/n11896 ));
  CIC1Cos_SLICE_784 \CIC1Cos/SLICE_784 ( .B1(\CIC1Cos/d5_47 ), 
    .A1(\CIC1Cos/d4_47 ), .B0(\CIC1Cos/d5_46 ), .A0(\CIC1Cos/d4_46 ), 
    .FCI(\CIC1Cos/n11908 ), .F0(\CIC1Cos/n5671 ), .F1(\CIC1Cos/n5670 ), 
    .FCO(\CIC1Cos/n11909 ));
  CIC1Cos_SLICE_785 \CIC1Cos/SLICE_785 ( .D1(\CIC1Cos/d2_49 ), 
    .C1(\CIC1Cos/n5364 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_49 ), 
    .D0(\CIC1Cos/d2_48 ), .C0(\CIC1Cos/n5365 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_48 ), .DI1(\CIC1Cos/d3_71_N_562_49 ), 
    .DI0(\CIC1Cos/d3_71_N_562_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11972 ), 
    .F0(\CIC1Cos/d3_71_N_562_48 ), .Q0(\CIC1Cos/d3_48 ), 
    .F1(\CIC1Cos/d3_71_N_562_49 ), .Q1(\CIC1Cos/d3_49 ), 
    .FCO(\CIC1Cos/n11973 ));
  CIC1Cos_SLICE_786 \CIC1Cos/SLICE_786 ( .D1(\CIC1Cos/d1_57 ), 
    .C1(\CIC1Cos/n5204 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_57 ), 
    .D0(\CIC1Cos/d1_56 ), .C0(\CIC1Cos/n5205 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_56 ), .DI1(\CIC1Cos/d2_71_N_490_57 ), 
    .DI0(\CIC1Cos/d2_71_N_490_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12017 ), 
    .F0(\CIC1Cos/d2_71_N_490_56 ), .Q0(\CIC1Cos/d2_56 ), 
    .F1(\CIC1Cos/d2_71_N_490_57 ), .Q1(\CIC1Cos/d2_57 ), 
    .FCO(\CIC1Cos/n12018 ));
  CIC1Cos_SLICE_787 \CIC1Cos/SLICE_787 ( .D1(\CIC1Cos/d1_55 ), 
    .C1(\CIC1Cos/n5206 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_55 ), 
    .D0(\CIC1Cos/d1_54 ), .C0(\CIC1Cos/n5207 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_54 ), .DI1(\CIC1Cos/d2_71_N_490_55 ), 
    .DI0(\CIC1Cos/d2_71_N_490_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12016 ), 
    .F0(\CIC1Cos/d2_71_N_490_54 ), .Q0(\CIC1Cos/d2_54 ), 
    .F1(\CIC1Cos/d2_71_N_490_55 ), .Q1(\CIC1Cos/d2_55 ), 
    .FCO(\CIC1Cos/n12017 ));
  CIC1Cos_SLICE_788 \CIC1Cos/SLICE_788 ( .D1(\CIC1Cos/d1_49 ), 
    .C1(\CIC1Cos/n5212 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_49 ), 
    .D0(\CIC1Cos/d1_48 ), .C0(\CIC1Cos/n5213 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_48 ), .DI1(\CIC1Cos/d2_71_N_490_49 ), 
    .DI0(\CIC1Cos/d2_71_N_490_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12013 ), 
    .F0(\CIC1Cos/d2_71_N_490_48 ), .Q0(\CIC1Cos/d2_48 ), 
    .F1(\CIC1Cos/d2_71_N_490_49 ), .Q1(\CIC1Cos/d2_49 ), 
    .FCO(\CIC1Cos/n12014 ));
  CIC1Cos_SLICE_789 \CIC1Cos/SLICE_789 ( .D1(\CIC1Cos/d1_43 ), 
    .C1(\CIC1Cos/n5218 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_43 ), 
    .D0(\CIC1Cos/d1_42 ), .C0(\CIC1Cos/n5219 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_42 ), .DI1(\CIC1Cos/d2_71_N_490_43 ), 
    .DI0(\CIC1Cos/d2_71_N_490_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12010 ), 
    .F0(\CIC1Cos/d2_71_N_490_42 ), .Q0(\CIC1Cos/d2_42 ), 
    .F1(\CIC1Cos/d2_71_N_490_43 ), .Q1(\CIC1Cos/d2_43 ), 
    .FCO(\CIC1Cos/n12011 ));
  CIC1Cos_SLICE_790 \CIC1Cos/SLICE_790 ( .D1(\CIC1Cos/d1_47 ), 
    .C1(\CIC1Cos/n5214 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_47 ), 
    .D0(\CIC1Cos/d1_46 ), .C0(\CIC1Cos/n5215 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_46 ), .DI1(\CIC1Cos/d2_71_N_490_47 ), 
    .DI0(\CIC1Cos/d2_71_N_490_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12012 ), 
    .F0(\CIC1Cos/d2_71_N_490_46 ), .Q0(\CIC1Cos/d2_46 ), 
    .F1(\CIC1Cos/d2_71_N_490_47 ), .Q1(\CIC1Cos/d2_47 ), 
    .FCO(\CIC1Cos/n12013 ));
  CIC1Cos_SLICE_791 \CIC1Cos/SLICE_791 ( .D1(\CIC1Cos/d1_53 ), 
    .C1(\CIC1Cos/n5208 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_53 ), 
    .D0(\CIC1Cos/d1_52 ), .C0(\CIC1Cos/n5209 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_52 ), .DI1(\CIC1Cos/d2_71_N_490_53 ), 
    .DI0(\CIC1Cos/d2_71_N_490_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12015 ), 
    .F0(\CIC1Cos/d2_71_N_490_52 ), .Q0(\CIC1Cos/d2_52 ), 
    .F1(\CIC1Cos/d2_71_N_490_53 ), .Q1(\CIC1Cos/d2_53 ), 
    .FCO(\CIC1Cos/n12016 ));
  CIC1Cos_SLICE_792 \CIC1Cos/SLICE_792 ( .D1(\CIC1Cos/d1_45 ), 
    .C1(\CIC1Cos/n5216 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_45 ), 
    .D0(\CIC1Cos/d1_44 ), .C0(\CIC1Cos/n5217 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_44 ), .DI1(\CIC1Cos/d2_71_N_490_45 ), 
    .DI0(\CIC1Cos/d2_71_N_490_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12011 ), 
    .F0(\CIC1Cos/d2_71_N_490_44 ), .Q0(\CIC1Cos/d2_44 ), 
    .F1(\CIC1Cos/d2_71_N_490_45 ), .Q1(\CIC1Cos/d2_45 ), 
    .FCO(\CIC1Cos/n12012 ));
  CIC1Cos_SLICE_793 \CIC1Cos/SLICE_793 ( .D1(\CIC1Cos/d1_41 ), 
    .C1(\CIC1Cos/n5220 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_41 ), 
    .D0(\CIC1Cos/d1_40 ), .C0(\CIC1Cos/n5221 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_40 ), .DI1(\CIC1Cos/d2_71_N_490_41 ), 
    .DI0(\CIC1Cos/d2_71_N_490_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12009 ), 
    .F0(\CIC1Cos/d2_71_N_490_40 ), .Q0(\CIC1Cos/d2_40 ), 
    .F1(\CIC1Cos/d2_71_N_490_41 ), .Q1(\CIC1Cos/d2_41 ), 
    .FCO(\CIC1Cos/n12010 ));
  CIC1Cos_SLICE_794 \CIC1Cos/SLICE_794 ( .D1(\CIC1Cos/d1_51 ), 
    .C1(\CIC1Cos/n5210 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_51 ), 
    .D0(\CIC1Cos/d1_50 ), .C0(\CIC1Cos/n5211 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_50 ), .DI1(\CIC1Cos/d2_71_N_490_51 ), 
    .DI0(\CIC1Cos/d2_71_N_490_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12014 ), 
    .F0(\CIC1Cos/d2_71_N_490_50 ), .Q0(\CIC1Cos/d2_50 ), 
    .F1(\CIC1Cos/d2_71_N_490_51 ), .Q1(\CIC1Cos/d2_51 ), 
    .FCO(\CIC1Cos/n12015 ));
  CIC1Cos_SLICE_795 \CIC1Cos/SLICE_795 ( .D1(\CIC1Cos/d2_47 ), 
    .C1(\CIC1Cos/n5366 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_47 ), 
    .D0(\CIC1Cos/d2_46 ), .C0(\CIC1Cos/n5367 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_46 ), .DI1(\CIC1Cos/d3_71_N_562_47 ), 
    .DI0(\CIC1Cos/d3_71_N_562_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11971 ), 
    .F0(\CIC1Cos/d3_71_N_562_46 ), .Q0(\CIC1Cos/d3_46 ), 
    .F1(\CIC1Cos/d3_71_N_562_47 ), .Q1(\CIC1Cos/d3_47 ), 
    .FCO(\CIC1Cos/n11972 ));
  CIC1Cos_SLICE_796 \CIC1Cos/SLICE_796 ( .D1(\CIC1Cos/d2_45 ), 
    .C1(\CIC1Cos/n5368 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_45 ), 
    .D0(\CIC1Cos/d2_44 ), .C0(\CIC1Cos/n5369 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_44 ), .DI1(\CIC1Cos/d3_71_N_562_45 ), 
    .DI0(\CIC1Cos/d3_71_N_562_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11970 ), 
    .F0(\CIC1Cos/d3_71_N_562_44 ), .Q0(\CIC1Cos/d3_44 ), 
    .F1(\CIC1Cos/d3_71_N_562_45 ), .Q1(\CIC1Cos/d3_45 ), 
    .FCO(\CIC1Cos/n11971 ));
  CIC1Cos_SLICE_797 \CIC1Cos/SLICE_797 ( .B1(\CIC1Cos/d5_45 ), 
    .A1(\CIC1Cos/d4_45 ), .B0(\CIC1Cos/d5_44 ), .A0(\CIC1Cos/d4_44 ), 
    .FCI(\CIC1Cos/n11907 ), .F0(\CIC1Cos/n5673 ), .F1(\CIC1Cos/n5672 ), 
    .FCO(\CIC1Cos/n11908 ));
  CIC1Cos_SLICE_798 \CIC1Cos/SLICE_798 ( .B0(\CIC1Cos/d_d_tmp_71 ), 
    .A0(\CIC1Cos/d_tmp_71 ), .FCI(\CIC1Cos/n11623 ), .F0(\CIC1Cos/n6102 ));
  CIC1Cos_SLICE_799 \CIC1Cos/SLICE_799 ( .D1(\CIC1Cos/d2_43 ), 
    .C1(\CIC1Cos/n5370 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_43 ), 
    .D0(\CIC1Cos/d2_42 ), .C0(\CIC1Cos/n5371 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_42 ), .DI1(\CIC1Cos/d3_71_N_562_43 ), 
    .DI0(\CIC1Cos/d3_71_N_562_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11969 ), 
    .F0(\CIC1Cos/d3_71_N_562_42 ), .Q0(\CIC1Cos/d3_42 ), 
    .F1(\CIC1Cos/d3_71_N_562_43 ), .Q1(\CIC1Cos/d3_43 ), 
    .FCO(\CIC1Cos/n11970 ));
  CIC1Cos_SLICE_800 \CIC1Cos/SLICE_800 ( .D1(\CIC1Cos/d2_41 ), 
    .C1(\CIC1Cos/n5372 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_41 ), 
    .D0(\CIC1Cos/d2_40 ), .C0(\CIC1Cos/n5373 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_40 ), .DI1(\CIC1Cos/d3_71_N_562_41 ), 
    .DI0(\CIC1Cos/d3_71_N_562_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11968 ), 
    .F0(\CIC1Cos/d3_71_N_562_40 ), .Q0(\CIC1Cos/d3_40 ), 
    .F1(\CIC1Cos/d3_71_N_562_41 ), .Q1(\CIC1Cos/d3_41 ), 
    .FCO(\CIC1Cos/n11969 ));
  CIC1Cos_SLICE_801 \CIC1Cos/SLICE_801 ( .D1(\CIC1Cos/d2_39 ), 
    .C1(\CIC1Cos/n5374 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_39 ), 
    .D0(\CIC1Cos/d2_38 ), .C0(\CIC1Cos/n5375 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_38 ), .DI1(\CIC1Cos/d3_71_N_562_39 ), 
    .DI0(\CIC1Cos/d3_71_N_562_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11967 ), 
    .F0(\CIC1Cos/d3_71_N_562_38 ), .Q0(\CIC1Cos/d3_38 ), 
    .F1(\CIC1Cos/d3_71_N_562_39 ), .Q1(\CIC1Cos/d3_39 ), 
    .FCO(\CIC1Cos/n11968 ));
  CIC1Cos_SLICE_802 \CIC1Cos/SLICE_802 ( .B1(\CIC1Cos/d5_43 ), 
    .A1(\CIC1Cos/d4_43 ), .B0(\CIC1Cos/d5_42 ), .A0(\CIC1Cos/d4_42 ), 
    .FCI(\CIC1Cos/n11906 ), .F0(\CIC1Cos/n5675 ), .F1(\CIC1Cos/n5674 ), 
    .FCO(\CIC1Cos/n11907 ));
  CIC1Cos_SLICE_803 \CIC1Cos/SLICE_803 ( .D1(\CIC1Cos/d2_37 ), 
    .C1(\CIC1Cos/n5376 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_37 ), 
    .D0(\CIC1Cos/d2_36 ), .C0(\CIC1Cos/n5377 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_36 ), .DI1(\CIC1Cos/d3_71_N_562_37 ), 
    .DI0(\CIC1Cos/d3_71_N_562_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11966 ), 
    .F0(\CIC1Cos/d3_71_N_562_36 ), .Q0(\CIC1Cos/d3_36 ), 
    .F1(\CIC1Cos/d3_71_N_562_37 ), .Q1(\CIC1Cos/d3_37 ), 
    .FCO(\CIC1Cos/n11967 ));
  CIC1Cos_SLICE_804 \CIC1Cos/SLICE_804 ( .B1(\CIC1Cos/d5_41 ), 
    .A1(\CIC1Cos/d4_41 ), .B0(\CIC1Cos/d5_40 ), .A0(\CIC1Cos/d4_40 ), 
    .FCI(\CIC1Cos/n11905 ), .F0(\CIC1Cos/n5677 ), .F1(\CIC1Cos/n5676 ), 
    .FCO(\CIC1Cos/n11906 ));
  CIC1Cos_SLICE_805 \CIC1Cos/SLICE_805 ( .D1(\CIC1Cos/d1_39 ), 
    .C1(\CIC1Cos/n5222 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_39 ), 
    .D0(\CIC1Cos/d1_38 ), .C0(\CIC1Cos/n5223 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_38 ), .DI1(\CIC1Cos/d2_71_N_490_39 ), 
    .DI0(\CIC1Cos/d2_71_N_490_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12008 ), 
    .F0(\CIC1Cos/d2_71_N_490_38 ), .Q0(\CIC1Cos/d2_38 ), 
    .F1(\CIC1Cos/d2_71_N_490_39 ), .Q1(\CIC1Cos/d2_39 ), 
    .FCO(\CIC1Cos/n12009 ));
  CIC1Cos_SLICE_806 \CIC1Cos/SLICE_806 ( .B1(\CIC1Cos/d3_71 ), 
    .A1(\CIC1Cos/d2_71 ), .B0(\CIC1Cos/d3_70 ), .A0(\CIC1Cos/d2_70 ), 
    .FCI(\CIC1Cos/n12002 ), .F0(\CIC1Cos/n5343 ), .F1(\CIC1Cos/n5342 ));
  CIC1Cos_SLICE_807 \CIC1Cos/SLICE_807 ( .D1(\CIC1Cos/d4_57 ), 
    .C1(\CIC1Cos/n5660 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_57 ), 
    .D0(\CIC1Cos/d4_56 ), .C0(\CIC1Cos/n5661 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_56 ), .DI1(\CIC1Cos/d5_71_N_706_57 ), 
    .DI0(\CIC1Cos/d5_71_N_706_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11894 ), 
    .F0(\CIC1Cos/d5_71_N_706_56 ), .Q0(\CIC1Cos/d5_56 ), 
    .F1(\CIC1Cos/d5_71_N_706_57 ), .Q1(\CIC1Cos/d5_57 ), 
    .FCO(\CIC1Cos/n11895 ));
  CIC1Cos_SLICE_808 \CIC1Cos/SLICE_808 ( .B1(\CIC1Cos/d3_51 ), 
    .A1(\CIC1Cos/d2_51 ), .B0(\CIC1Cos/d3_50 ), .A0(\CIC1Cos/d2_50 ), 
    .FCI(\CIC1Cos/n11992 ), .F0(\CIC1Cos/n5363 ), .F1(\CIC1Cos/n5362 ), 
    .FCO(\CIC1Cos/n11993 ));
  CIC1Cos_SLICE_809 \CIC1Cos/SLICE_809 ( .B1(\CIC1Cos/d3_49 ), 
    .A1(\CIC1Cos/d2_49 ), .B0(\CIC1Cos/d3_48 ), .A0(\CIC1Cos/d2_48 ), 
    .FCI(\CIC1Cos/n11991 ), .F0(\CIC1Cos/n5365 ), .F1(\CIC1Cos/n5364 ), 
    .FCO(\CIC1Cos/n11992 ));
  CIC1Cos_SLICE_810 \CIC1Cos/SLICE_810 ( .B1(\CIC1Cos/d3_47 ), 
    .A1(\CIC1Cos/d2_47 ), .B0(\CIC1Cos/d3_46 ), .A0(\CIC1Cos/d2_46 ), 
    .FCI(\CIC1Cos/n11990 ), .F0(\CIC1Cos/n5367 ), .F1(\CIC1Cos/n5366 ), 
    .FCO(\CIC1Cos/n11991 ));
  CIC1Cos_SLICE_811 \CIC1Cos/SLICE_811 ( .B1(\CIC1Cos/d3_43 ), 
    .A1(\CIC1Cos/d2_43 ), .B0(\CIC1Cos/d3_42 ), .A0(\CIC1Cos/d2_42 ), 
    .FCI(\CIC1Cos/n11988 ), .F0(\CIC1Cos/n5371 ), .F1(\CIC1Cos/n5370 ), 
    .FCO(\CIC1Cos/n11989 ));
  CIC1Cos_SLICE_812 \CIC1Cos/SLICE_812 ( .B1(\CIC1Cos/d3_41 ), 
    .A1(\CIC1Cos/d2_41 ), .B0(\CIC1Cos/d3_40 ), .A0(\CIC1Cos/d2_40 ), 
    .FCI(\CIC1Cos/n11987 ), .F0(\CIC1Cos/n5373 ), .F1(\CIC1Cos/n5372 ), 
    .FCO(\CIC1Cos/n11988 ));
  CIC1Cos_SLICE_813 \CIC1Cos/SLICE_813 ( .B1(\CIC1Cos/d5_39 ), 
    .A1(\CIC1Cos/d4_39 ), .B0(\CIC1Cos/d5_38 ), .A0(\CIC1Cos/d4_38 ), 
    .FCI(\CIC1Cos/n11904 ), .F0(\CIC1Cos/n5679 ), .F1(\CIC1Cos/n5678 ), 
    .FCO(\CIC1Cos/n11905 ));
  CIC1Cos_SLICE_814 \CIC1Cos/SLICE_814 ( .B1(\CIC1Cos/d3_45 ), 
    .A1(\CIC1Cos/d2_45 ), .B0(\CIC1Cos/d3_44 ), .A0(\CIC1Cos/d2_44 ), 
    .FCI(\CIC1Cos/n11989 ), .F0(\CIC1Cos/n5369 ), .F1(\CIC1Cos/n5368 ), 
    .FCO(\CIC1Cos/n11990 ));
  CIC1Cos_SLICE_815 \CIC1Cos/SLICE_815 ( .B1(\CIC1Cos/d3_39 ), 
    .A1(\CIC1Cos/d2_39 ), .B0(\CIC1Cos/d3_38 ), .A0(\CIC1Cos/d2_38 ), 
    .FCI(\CIC1Cos/n11986 ), .F0(\CIC1Cos/n5375 ), .F1(\CIC1Cos/n5374 ), 
    .FCO(\CIC1Cos/n11987 ));
  CIC1Cos_SLICE_816 \CIC1Cos/SLICE_816 ( .D1(\CIC1Cos/d2_71 ), 
    .C1(\CIC1Cos/n5342 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_71 ), 
    .D0(\CIC1Cos/d2_70 ), .C0(\CIC1Cos/n5343 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_70 ), .DI1(\CIC1Cos/d3_71_N_562_71 ), 
    .DI0(\CIC1Cos/d3_71_N_562_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11983 ), 
    .F0(\CIC1Cos/d3_71_N_562_70 ), .Q0(\CIC1Cos/d3_70 ), 
    .F1(\CIC1Cos/d3_71_N_562_71 ), .Q1(\CIC1Cos/d3_71 ));
  CIC1Cos_SLICE_817 \CIC1Cos/SLICE_817 ( .D1(\CIC1Cos/d2_59 ), 
    .C1(\CIC1Cos/n5354 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_59 ), 
    .D0(\CIC1Cos/d2_58 ), .C0(\CIC1Cos/n5355 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_58 ), .DI1(\CIC1Cos/d3_71_N_562_59 ), 
    .DI0(\CIC1Cos/d3_71_N_562_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11977 ), 
    .F0(\CIC1Cos/d3_71_N_562_58 ), .Q0(\CIC1Cos/d3_58 ), 
    .F1(\CIC1Cos/d3_71_N_562_59 ), .Q1(\CIC1Cos/d3_59 ), 
    .FCO(\CIC1Cos/n11978 ));
  CIC1Cos_SLICE_818 \CIC1Cos/SLICE_818 ( .A1(\CIC1Cos/n5340 ), 
    .FCO(\CIC1Cos/n11966 ));
  CIC1Cos_SLICE_819 \CIC1Cos/SLICE_819 ( .D1(\CIC1Cos/d2_69 ), 
    .C1(\CIC1Cos/n5344 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_69 ), 
    .D0(\CIC1Cos/d2_68 ), .C0(\CIC1Cos/n5345 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_68 ), .DI1(\CIC1Cos/d3_71_N_562_69 ), 
    .DI0(\CIC1Cos/d3_71_N_562_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11982 ), 
    .F0(\CIC1Cos/d3_71_N_562_68 ), .Q0(\CIC1Cos/d3_68 ), 
    .F1(\CIC1Cos/d3_71_N_562_69 ), .Q1(\CIC1Cos/d3_69 ), 
    .FCO(\CIC1Cos/n11983 ));
  CIC1Cos_SLICE_820 \CIC1Cos/SLICE_820 ( .D1(\CIC1Cos/d2_67 ), 
    .C1(\CIC1Cos/n5346 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_67 ), 
    .D0(\CIC1Cos/d2_66 ), .C0(\CIC1Cos/n5347 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_66 ), .DI1(\CIC1Cos/d3_71_N_562_67 ), 
    .DI0(\CIC1Cos/d3_71_N_562_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11981 ), 
    .F0(\CIC1Cos/d3_71_N_562_66 ), .Q0(\CIC1Cos/d3_66 ), 
    .F1(\CIC1Cos/d3_71_N_562_67 ), .Q1(\CIC1Cos/d3_67 ), 
    .FCO(\CIC1Cos/n11982 ));
  CIC1Cos_SLICE_821 \CIC1Cos/SLICE_821 ( .B1(\CIC1Cos/d3_37 ), 
    .A1(\CIC1Cos/d2_37 ), .B0(\CIC1Cos/d3_36 ), .A0(\CIC1Cos/d2_36 ), 
    .F1(\CIC1Cos/n5376 ), .FCO(\CIC1Cos/n11986 ));
  CIC1Cos_SLICE_822 \CIC1Cos/SLICE_822 ( .D1(\CIC1Cos/d2_65 ), 
    .C1(\CIC1Cos/n5348 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_65 ), 
    .D0(\CIC1Cos/d2_64 ), .C0(\CIC1Cos/n5349 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_64 ), .DI1(\CIC1Cos/d3_71_N_562_65 ), 
    .DI0(\CIC1Cos/d3_71_N_562_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11980 ), 
    .F0(\CIC1Cos/d3_71_N_562_64 ), .Q0(\CIC1Cos/d3_64 ), 
    .F1(\CIC1Cos/d3_71_N_562_65 ), .Q1(\CIC1Cos/d3_65 ), 
    .FCO(\CIC1Cos/n11981 ));
  CIC1Cos_SLICE_823 \CIC1Cos/SLICE_823 ( .D1(\CIC1Cos/d2_63 ), 
    .C1(\CIC1Cos/n5350 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_63 ), 
    .D0(\CIC1Cos/d2_62 ), .C0(\CIC1Cos/n5351 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_62 ), .DI1(\CIC1Cos/d3_71_N_562_63 ), 
    .DI0(\CIC1Cos/d3_71_N_562_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11979 ), 
    .F0(\CIC1Cos/d3_71_N_562_62 ), .Q0(\CIC1Cos/d3_62 ), 
    .F1(\CIC1Cos/d3_71_N_562_63 ), .Q1(\CIC1Cos/d3_63 ), 
    .FCO(\CIC1Cos/n11980 ));
  CIC1Cos_SLICE_824 \CIC1Cos/SLICE_824 ( .D1(\CIC1Cos/d2_61 ), 
    .C1(\CIC1Cos/n5352 ), .B1(\CIC1Cos/n5340 ), .A1(\CIC1Cos/d3_61 ), 
    .D0(\CIC1Cos/d2_60 ), .C0(\CIC1Cos/n5353 ), .B0(\CIC1Cos/n5340 ), 
    .A0(\CIC1Cos/d3_60 ), .DI1(\CIC1Cos/d3_71_N_562_61 ), 
    .DI0(\CIC1Cos/d3_71_N_562_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11978 ), 
    .F0(\CIC1Cos/d3_71_N_562_60 ), .Q0(\CIC1Cos/d3_60 ), 
    .F1(\CIC1Cos/d3_71_N_562_61 ), .Q1(\CIC1Cos/d3_61 ), 
    .FCO(\CIC1Cos/n11979 ));
  CIC1Cos_SLICE_825 \CIC1Cos/SLICE_825 ( .D1(\CIC1Cos/d4_55 ), 
    .C1(\CIC1Cos/n5662 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_55 ), 
    .D0(\CIC1Cos/d4_54 ), .C0(\CIC1Cos/n5663 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_54 ), .DI1(\CIC1Cos/d5_71_N_706_55 ), 
    .DI0(\CIC1Cos/d5_71_N_706_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11893 ), 
    .F0(\CIC1Cos/d5_71_N_706_54 ), .Q0(\CIC1Cos/d5_54 ), 
    .F1(\CIC1Cos/d5_71_N_706_55 ), .Q1(\CIC1Cos/d5_55 ), 
    .FCO(\CIC1Cos/n11894 ));
  CIC1Cos_SLICE_826 \CIC1Cos/SLICE_826 ( .D1(\CIC1Cos/d1_65 ), 
    .C1(\CIC1Cos/n5196 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_65 ), 
    .D0(\CIC1Cos/d1_64 ), .C0(\CIC1Cos/n5197 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_64 ), .DI1(\CIC1Cos/d2_71_N_490_65 ), 
    .DI0(\CIC1Cos/d2_71_N_490_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12021 ), 
    .F0(\CIC1Cos/d2_71_N_490_64 ), .Q0(\CIC1Cos/d2_64 ), 
    .F1(\CIC1Cos/d2_71_N_490_65 ), .Q1(\CIC1Cos/d2_65 ), 
    .FCO(\CIC1Cos/n12022 ));
  CIC1Cos_SLICE_827 \CIC1Cos/SLICE_827 ( .B1(\CIC1Cos/d2_49 ), 
    .A1(\CIC1Cos/d1_49 ), .B0(\CIC1Cos/d2_48 ), .A0(\CIC1Cos/d1_48 ), 
    .FCI(\CIC1Cos/n12032 ), .F0(\CIC1Cos/n5213 ), .F1(\CIC1Cos/n5212 ), 
    .FCO(\CIC1Cos/n12033 ));
  CIC1Cos_SLICE_828 \CIC1Cos/SLICE_828 ( .D1(\CIC1Cos/d4_53 ), 
    .C1(\CIC1Cos/n5664 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_53 ), 
    .D0(\CIC1Cos/d4_52 ), .C0(\CIC1Cos/n5665 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_52 ), .DI1(\CIC1Cos/d5_71_N_706_53 ), 
    .DI0(\CIC1Cos/d5_71_N_706_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11892 ), 
    .F0(\CIC1Cos/d5_71_N_706_52 ), .Q0(\CIC1Cos/d5_52 ), 
    .F1(\CIC1Cos/d5_71_N_706_53 ), .Q1(\CIC1Cos/d5_53 ), 
    .FCO(\CIC1Cos/n11893 ));
  CIC1Cos_SLICE_829 \CIC1Cos/SLICE_829 ( .D1(\CIC1Cos/d4_51 ), 
    .C1(\CIC1Cos/n5666 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_51 ), 
    .D0(\CIC1Cos/d4_50 ), .C0(\CIC1Cos/n5667 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_50 ), .DI1(\CIC1Cos/d5_71_N_706_51 ), 
    .DI0(\CIC1Cos/d5_71_N_706_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11891 ), 
    .F0(\CIC1Cos/d5_71_N_706_50 ), .Q0(\CIC1Cos/d5_50 ), 
    .F1(\CIC1Cos/d5_71_N_706_51 ), .Q1(\CIC1Cos/d5_51 ), 
    .FCO(\CIC1Cos/n11892 ));
  CIC1Cos_SLICE_830 \CIC1Cos/SLICE_830 ( .D1(\CIC1Cos/d4_49 ), 
    .C1(\CIC1Cos/n5668 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_49 ), 
    .D0(\CIC1Cos/d4_48 ), .C0(\CIC1Cos/n5669 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_48 ), .DI1(\CIC1Cos/d5_71_N_706_49 ), 
    .DI0(\CIC1Cos/d5_71_N_706_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11890 ), 
    .F0(\CIC1Cos/d5_71_N_706_48 ), .Q0(\CIC1Cos/d5_48 ), 
    .F1(\CIC1Cos/d5_71_N_706_49 ), .Q1(\CIC1Cos/d5_49 ), 
    .FCO(\CIC1Cos/n11891 ));
  CIC1Cos_SLICE_831 \CIC1Cos/SLICE_831 ( .D1(\CIC1Cos/d4_47 ), 
    .C1(\CIC1Cos/n5670 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_47 ), 
    .D0(\CIC1Cos/d4_46 ), .C0(\CIC1Cos/n5671 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_46 ), .DI1(\CIC1Cos/d5_71_N_706_47 ), 
    .DI0(\CIC1Cos/d5_71_N_706_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11889 ), 
    .F0(\CIC1Cos/d5_71_N_706_46 ), .Q0(\CIC1Cos/d5_46 ), 
    .F1(\CIC1Cos/d5_71_N_706_47 ), .Q1(\CIC1Cos/d5_47 ), 
    .FCO(\CIC1Cos/n11890 ));
  CIC1Cos_SLICE_832 \CIC1Cos/SLICE_832 ( .D1(\CIC1Cos/d4_45 ), 
    .C1(\CIC1Cos/n5672 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_45 ), 
    .D0(\CIC1Cos/d4_44 ), .C0(\CIC1Cos/n5673 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_44 ), .DI1(\CIC1Cos/d5_71_N_706_45 ), 
    .DI0(\CIC1Cos/d5_71_N_706_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11888 ), 
    .F0(\CIC1Cos/d5_71_N_706_44 ), .Q0(\CIC1Cos/d5_44 ), 
    .F1(\CIC1Cos/d5_71_N_706_45 ), .Q1(\CIC1Cos/d5_45 ), 
    .FCO(\CIC1Cos/n11889 ));
  CIC1Cos_SLICE_833 \CIC1Cos/SLICE_833 ( .D1(\CIC1Cos/d4_43 ), 
    .C1(\CIC1Cos/n5674 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_43 ), 
    .D0(\CIC1Cos/d4_42 ), .C0(\CIC1Cos/n5675 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_42 ), .DI1(\CIC1Cos/d5_71_N_706_43 ), 
    .DI0(\CIC1Cos/d5_71_N_706_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11887 ), 
    .F0(\CIC1Cos/d5_71_N_706_42 ), .Q0(\CIC1Cos/d5_42 ), 
    .F1(\CIC1Cos/d5_71_N_706_43 ), .Q1(\CIC1Cos/d5_43 ), 
    .FCO(\CIC1Cos/n11888 ));
  CIC1Cos_SLICE_834 \CIC1Cos/SLICE_834 ( .D1(\CIC1Cos/d4_41 ), 
    .C1(\CIC1Cos/n5676 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_41 ), 
    .D0(\CIC1Cos/d4_40 ), .C0(\CIC1Cos/n5677 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_40 ), .DI1(\CIC1Cos/d5_71_N_706_41 ), 
    .DI0(\CIC1Cos/d5_71_N_706_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11886 ), 
    .F0(\CIC1Cos/d5_71_N_706_40 ), .Q0(\CIC1Cos/d5_40 ), 
    .F1(\CIC1Cos/d5_71_N_706_41 ), .Q1(\CIC1Cos/d5_41 ), 
    .FCO(\CIC1Cos/n11887 ));
  CIC1Cos_SLICE_835 \CIC1Cos/SLICE_835 ( .D1(\CIC1Cos/d4_39 ), 
    .C1(\CIC1Cos/n5678 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_39 ), 
    .D0(\CIC1Cos/d4_38 ), .C0(\CIC1Cos/n5679 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_38 ), .DI1(\CIC1Cos/d5_71_N_706_39 ), 
    .DI0(\CIC1Cos/d5_71_N_706_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11885 ), 
    .F0(\CIC1Cos/d5_71_N_706_38 ), .Q0(\CIC1Cos/d5_38 ), 
    .F1(\CIC1Cos/d5_71_N_706_39 ), .Q1(\CIC1Cos/d5_39 ), 
    .FCO(\CIC1Cos/n11886 ));
  CIC1Cos_SLICE_836 \CIC1Cos/SLICE_836 ( .D1(\CIC1Cos/d4_37 ), 
    .C1(\CIC1Cos/n5680 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_37 ), 
    .D0(\CIC1Cos/d4_36 ), .C0(\CIC1Cos/n5681 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_36 ), .DI1(\CIC1Cos/d5_71_N_706_37 ), 
    .DI0(\CIC1Cos/d5_71_N_706_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11884 ), 
    .F0(\CIC1Cos/d5_71_N_706_36 ), .Q0(\CIC1Cos/d5_36 ), 
    .F1(\CIC1Cos/d5_71_N_706_37 ), .Q1(\CIC1Cos/d5_37 ), 
    .FCO(\CIC1Cos/n11885 ));
  CIC1Cos_SLICE_837 \CIC1Cos/SLICE_837 ( .A1(\CIC1Cos/n5644 ), 
    .FCO(\CIC1Cos/n11884 ));
  CIC1Cos_SLICE_838 \CIC1Cos/SLICE_838 ( .B1(\CIC1Cos/d2_47 ), 
    .A1(\CIC1Cos/d1_47 ), .B0(\CIC1Cos/d2_46 ), .A0(\CIC1Cos/d1_46 ), 
    .FCI(\CIC1Cos/n12031 ), .F0(\CIC1Cos/n5215 ), .F1(\CIC1Cos/n5214 ), 
    .FCO(\CIC1Cos/n12032 ));
  CIC1Cos_SLICE_839 \CIC1Cos/SLICE_839 ( .B1(\CIC1Cos/d2_45 ), 
    .A1(\CIC1Cos/d1_45 ), .B0(\CIC1Cos/d2_44 ), .A0(\CIC1Cos/d1_44 ), 
    .FCI(\CIC1Cos/n12030 ), .F0(\CIC1Cos/n5217 ), .F1(\CIC1Cos/n5216 ), 
    .FCO(\CIC1Cos/n12031 ));
  CIC1Cos_SLICE_840 \CIC1Cos/SLICE_840 ( .B1(\CIC1Cos/d2_43 ), 
    .A1(\CIC1Cos/d1_43 ), .B0(\CIC1Cos/d2_42 ), .A0(\CIC1Cos/d1_42 ), 
    .FCI(\CIC1Cos/n12029 ), .F0(\CIC1Cos/n5219 ), .F1(\CIC1Cos/n5218 ), 
    .FCO(\CIC1Cos/n12030 ));
  CIC1Cos_SLICE_841 \CIC1Cos/SLICE_841 ( .B1(\CIC1Cos/d2_39 ), 
    .A1(\CIC1Cos/d1_39 ), .B0(\CIC1Cos/d2_38 ), .A0(\CIC1Cos/d1_38 ), 
    .FCI(\CIC1Cos/n12027 ), .F0(\CIC1Cos/n5223 ), .F1(\CIC1Cos/n5222 ), 
    .FCO(\CIC1Cos/n12028 ));
  CIC1Cos_SLICE_842 \CIC1Cos/SLICE_842 ( .B1(\CIC1Cos/d5_37 ), 
    .A1(\CIC1Cos/d4_37 ), .B0(\CIC1Cos/d5_36 ), .A0(\CIC1Cos/d4_36 ), 
    .F1(\CIC1Cos/n5680 ), .FCO(\CIC1Cos/n11904 ));
  CIC1Cos_SLICE_843 \CIC1Cos/SLICE_843 ( .B1(\CIC1Cos/d2_37 ), 
    .A1(\CIC1Cos/d1_37 ), .B0(\CIC1Cos/d2_36 ), .A0(\CIC1Cos/d1_36 ), 
    .F1(\CIC1Cos/n5224 ), .FCO(\CIC1Cos/n12027 ));
  CIC1Cos_SLICE_844 \CIC1Cos/SLICE_844 ( .D1(\CIC1Cos/d1_71 ), 
    .C1(\CIC1Cos/n5190 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_71 ), 
    .D0(\CIC1Cos/d1_70 ), .C0(\CIC1Cos/n5191 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_70 ), .DI1(\CIC1Cos/d2_71_N_490_71 ), 
    .DI0(\CIC1Cos/d2_71_N_490_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12024 ), 
    .F0(\CIC1Cos/d2_71_N_490_70 ), .Q0(\CIC1Cos/d2_70 ), 
    .F1(\CIC1Cos/d2_71_N_490_71 ), .Q1(\CIC1Cos/d2_71 ));
  CIC1Cos_SLICE_845 \CIC1Cos/SLICE_845 ( .D1(\CIC1Cos/d1_69 ), 
    .C1(\CIC1Cos/n5192 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_69 ), 
    .D0(\CIC1Cos/d1_68 ), .C0(\CIC1Cos/n5193 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_68 ), .DI1(\CIC1Cos/d2_71_N_490_69 ), 
    .DI0(\CIC1Cos/d2_71_N_490_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12023 ), 
    .F0(\CIC1Cos/d2_71_N_490_68 ), .Q0(\CIC1Cos/d2_68 ), 
    .F1(\CIC1Cos/d2_71_N_490_69 ), .Q1(\CIC1Cos/d2_69 ), 
    .FCO(\CIC1Cos/n12024 ));
  CIC1Cos_SLICE_846 \CIC1Cos/SLICE_846 ( .B1(\CIC1Cos/d_d_tmp_70 ), 
    .A1(\CIC1Cos/d_tmp_70 ), .B0(\CIC1Cos/d_d_tmp_69 ), 
    .A0(\CIC1Cos/d_tmp_69 ), .FCI(\CIC1Cos/n11622 ), .F0(\CIC1Cos/n6104 ), 
    .F1(\CIC1Cos/n6103 ), .FCO(\CIC1Cos/n11623 ));
  CIC1Cos_SLICE_847 \CIC1Cos/SLICE_847 ( .B1(\CIC1Cos/d_d_tmp_68 ), 
    .A1(\CIC1Cos/d_tmp_68 ), .B0(\CIC1Cos/d_d_tmp_67 ), 
    .A0(\CIC1Cos/d_tmp_67 ), .FCI(\CIC1Cos/n11621 ), .F0(\CIC1Cos/n6106 ), 
    .F1(\CIC1Cos/n6105 ), .FCO(\CIC1Cos/n11622 ));
  CIC1Cos_SLICE_848 \CIC1Cos/SLICE_848 ( .B1(\CIC1Cos/d_d_tmp_66 ), 
    .A1(\CIC1Cos/d_tmp_66 ), .B0(\CIC1Cos/d_d_tmp_65 ), 
    .A0(\CIC1Cos/d_tmp_65 ), .FCI(\CIC1Cos/n11620 ), .F0(\CIC1Cos/n6108 ), 
    .F1(\CIC1Cos/n6107 ), .FCO(\CIC1Cos/n11621 ));
  CIC1Cos_SLICE_849 \CIC1Cos/SLICE_849 ( .B1(\CIC1Cos/d_d_tmp_64 ), 
    .A1(\CIC1Cos/d_tmp_64 ), .B0(\CIC1Cos/d_d_tmp_63 ), 
    .A0(\CIC1Cos/d_tmp_63 ), .FCI(\CIC1Cos/n11619 ), .F0(\CIC1Cos/n6110 ), 
    .F1(\CIC1Cos/n6109 ), .FCO(\CIC1Cos/n11620 ));
  CIC1Cos_SLICE_850 \CIC1Cos/SLICE_850 ( .B1(\CIC1Cos/d_d_tmp_62 ), 
    .A1(\CIC1Cos/d_tmp_62 ), .B0(\CIC1Cos/d_d_tmp_61 ), 
    .A0(\CIC1Cos/d_tmp_61 ), .FCI(\CIC1Cos/n11618 ), .F0(\CIC1Cos/n6112 ), 
    .F1(\CIC1Cos/n6111 ), .FCO(\CIC1Cos/n11619 ));
  CIC1Cos_SLICE_851 \CIC1Cos/SLICE_851 ( .B1(\CIC1Cos/d_d_tmp_60 ), 
    .A1(\CIC1Cos/d_tmp_60 ), .B0(\CIC1Cos/d_d_tmp_59 ), 
    .A0(\CIC1Cos/d_tmp_59 ), .FCI(\CIC1Cos/n11617 ), .F0(\CIC1Cos/n6114 ), 
    .F1(\CIC1Cos/n6113 ), .FCO(\CIC1Cos/n11618 ));
  CIC1Cos_SLICE_852 \CIC1Cos/SLICE_852 ( .B1(\CIC1Cos/d_d_tmp_58 ), 
    .A1(\CIC1Cos/d_tmp_58 ), .B0(\CIC1Cos/d_d_tmp_57 ), 
    .A0(\CIC1Cos/d_tmp_57 ), .FCI(\CIC1Cos/n11616 ), .F0(\CIC1Cos/n6116 ), 
    .F1(\CIC1Cos/n6115 ), .FCO(\CIC1Cos/n11617 ));
  CIC1Cos_SLICE_853 \CIC1Cos/SLICE_853 ( .B1(\CIC1Cos/d_d_tmp_56 ), 
    .A1(\CIC1Cos/d_tmp_56 ), .B0(\CIC1Cos/d_d_tmp_55 ), 
    .A0(\CIC1Cos/d_tmp_55 ), .FCI(\CIC1Cos/n11615 ), .F0(\CIC1Cos/n6118 ), 
    .F1(\CIC1Cos/n6117 ), .FCO(\CIC1Cos/n11616 ));
  CIC1Cos_SLICE_854 \CIC1Cos/SLICE_854 ( .B1(\CIC1Cos/d_d_tmp_54 ), 
    .A1(\CIC1Cos/d_tmp_54 ), .B0(\CIC1Cos/d_d_tmp_53 ), 
    .A0(\CIC1Cos/d_tmp_53 ), .FCI(\CIC1Cos/n11614 ), .F0(\CIC1Cos/n6120 ), 
    .F1(\CIC1Cos/n6119 ), .FCO(\CIC1Cos/n11615 ));
  CIC1Cos_SLICE_855 \CIC1Cos/SLICE_855 ( .B1(\CIC1Cos/d3_59 ), 
    .A1(\CIC1Cos/d2_59 ), .B0(\CIC1Cos/d3_58 ), .A0(\CIC1Cos/d2_58 ), 
    .FCI(\CIC1Cos/n11996 ), .F0(\CIC1Cos/n5355 ), .F1(\CIC1Cos/n5354 ), 
    .FCO(\CIC1Cos/n11997 ));
  CIC1Cos_SLICE_856 \CIC1Cos/SLICE_856 ( .B1(\CIC1Cos/d_d_tmp_52 ), 
    .A1(\CIC1Cos/d_tmp_52 ), .B0(\CIC1Cos/d_d_tmp_51 ), 
    .A0(\CIC1Cos/d_tmp_51 ), .FCI(\CIC1Cos/n11613 ), .F0(\CIC1Cos/n6122 ), 
    .F1(\CIC1Cos/n6121 ), .FCO(\CIC1Cos/n11614 ));
  CIC1Cos_SLICE_857 \CIC1Cos/SLICE_857 ( .B1(\CIC1Cos/d_d_tmp_50 ), 
    .A1(\CIC1Cos/d_tmp_50 ), .B0(\CIC1Cos/d_d_tmp_49 ), 
    .A0(\CIC1Cos/d_tmp_49 ), .FCI(\CIC1Cos/n11612 ), .F0(\CIC1Cos/n6124 ), 
    .F1(\CIC1Cos/n6123 ), .FCO(\CIC1Cos/n11613 ));
  CIC1Cos_SLICE_858 \CIC1Cos/SLICE_858 ( .B1(\CIC1Cos/d_d_tmp_48 ), 
    .A1(\CIC1Cos/d_tmp_48 ), .B0(\CIC1Cos/d_d_tmp_47 ), 
    .A0(\CIC1Cos/d_tmp_47 ), .FCI(\CIC1Cos/n11611 ), .F0(\CIC1Cos/n6126 ), 
    .F1(\CIC1Cos/n6125 ), .FCO(\CIC1Cos/n11612 ));
  CIC1Cos_SLICE_859 \CIC1Cos/SLICE_859 ( .B1(\CIC1Cos/d4_71 ), 
    .A1(\CIC1Cos/d3_71 ), .B0(\CIC1Cos/d4_70 ), .A0(\CIC1Cos/d3_70 ), 
    .FCI(\CIC1Cos/n11961 ), .F0(\CIC1Cos/n5495 ), .F1(\CIC1Cos/n5494 ));
  CIC1Cos_SLICE_860 \CIC1Cos/SLICE_860 ( .B1(\CIC1Cos/d3_57 ), 
    .A1(\CIC1Cos/d2_57 ), .B0(\CIC1Cos/d3_56 ), .A0(\CIC1Cos/d2_56 ), 
    .FCI(\CIC1Cos/n11995 ), .F0(\CIC1Cos/n5357 ), .F1(\CIC1Cos/n5356 ), 
    .FCO(\CIC1Cos/n11996 ));
  CIC1Cos_SLICE_861 \CIC1Cos/SLICE_861 ( .B1(\CIC1Cos/d4_69 ), 
    .A1(\CIC1Cos/d3_69 ), .B0(\CIC1Cos/d4_68 ), .A0(\CIC1Cos/d3_68 ), 
    .FCI(\CIC1Cos/n11960 ), .F0(\CIC1Cos/n5497 ), .F1(\CIC1Cos/n5496 ), 
    .FCO(\CIC1Cos/n11961 ));
  CIC1Cos_SLICE_862 \CIC1Cos/SLICE_862 ( .B1(\CIC1Cos/d3_69 ), 
    .A1(\CIC1Cos/d2_69 ), .B0(\CIC1Cos/d3_68 ), .A0(\CIC1Cos/d2_68 ), 
    .FCI(\CIC1Cos/n12001 ), .F0(\CIC1Cos/n5345 ), .F1(\CIC1Cos/n5344 ), 
    .FCO(\CIC1Cos/n12002 ));
  CIC1Cos_SLICE_863 \CIC1Cos/SLICE_863 ( .B1(\CIC1Cos/d3_55 ), 
    .A1(\CIC1Cos/d2_55 ), .B0(\CIC1Cos/d3_54 ), .A0(\CIC1Cos/d2_54 ), 
    .FCI(\CIC1Cos/n11994 ), .F0(\CIC1Cos/n5359 ), .F1(\CIC1Cos/n5358 ), 
    .FCO(\CIC1Cos/n11995 ));
  CIC1Cos_SLICE_864 \CIC1Cos/SLICE_864 ( .B1(\CIC1Cos/d3_67 ), 
    .A1(\CIC1Cos/d2_67 ), .B0(\CIC1Cos/d3_66 ), .A0(\CIC1Cos/d2_66 ), 
    .FCI(\CIC1Cos/n12000 ), .F0(\CIC1Cos/n5347 ), .F1(\CIC1Cos/n5346 ), 
    .FCO(\CIC1Cos/n12001 ));
  CIC1Cos_SLICE_865 \CIC1Cos/SLICE_865 ( .D1(\CIC1Cos/d1_37 ), 
    .C1(\CIC1Cos/n5224 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_37 ), 
    .D0(\CIC1Cos/d1_36 ), .C0(\CIC1Cos/n5225 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_36 ), .DI1(\CIC1Cos/d2_71_N_490_37 ), 
    .DI0(\CIC1Cos/d2_71_N_490_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12007 ), 
    .F0(\CIC1Cos/d2_71_N_490_36 ), .Q0(\CIC1Cos/d2_36 ), 
    .F1(\CIC1Cos/d2_71_N_490_37 ), .Q1(\CIC1Cos/d2_37 ), 
    .FCO(\CIC1Cos/n12008 ));
  CIC1Cos_SLICE_866 \CIC1Cos/SLICE_866 ( .B1(\CIC1Cos/d3_65 ), 
    .A1(\CIC1Cos/d2_65 ), .B0(\CIC1Cos/d3_64 ), .A0(\CIC1Cos/d2_64 ), 
    .FCI(\CIC1Cos/n11999 ), .F0(\CIC1Cos/n5349 ), .F1(\CIC1Cos/n5348 ), 
    .FCO(\CIC1Cos/n12000 ));
  CIC1Cos_SLICE_867 \CIC1Cos/SLICE_867 ( .B1(\CIC1Cos/d3_53 ), 
    .A1(\CIC1Cos/d2_53 ), .B0(\CIC1Cos/d3_52 ), .A0(\CIC1Cos/d2_52 ), 
    .FCI(\CIC1Cos/n11993 ), .F0(\CIC1Cos/n5361 ), .F1(\CIC1Cos/n5360 ), 
    .FCO(\CIC1Cos/n11994 ));
  CIC1Cos_SLICE_868 \CIC1Cos/SLICE_868 ( .B1(\CIC1Cos/d4_67 ), 
    .A1(\CIC1Cos/d3_67 ), .B0(\CIC1Cos/d4_66 ), .A0(\CIC1Cos/d3_66 ), 
    .FCI(\CIC1Cos/n11959 ), .F0(\CIC1Cos/n5499 ), .F1(\CIC1Cos/n5498 ), 
    .FCO(\CIC1Cos/n11960 ));
  CIC1Cos_SLICE_869 \CIC1Cos/SLICE_869 ( .B1(\CIC1Cos/d3_63 ), 
    .A1(\CIC1Cos/d2_63 ), .B0(\CIC1Cos/d3_62 ), .A0(\CIC1Cos/d2_62 ), 
    .FCI(\CIC1Cos/n11998 ), .F0(\CIC1Cos/n5351 ), .F1(\CIC1Cos/n5350 ), 
    .FCO(\CIC1Cos/n11999 ));
  CIC1Cos_SLICE_870 \CIC1Cos/SLICE_870 ( .A1(\CIC1Cos/n5188 ), 
    .FCO(\CIC1Cos/n12007 ));
  CIC1Cos_SLICE_871 \CIC1Cos/SLICE_871 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5070 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_39 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5071 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_38 ), .DI1(\CIC1Cos/d1_71_N_418_39 ), 
    .DI0(\CIC1Cos/d1_71_N_418_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12049 ), 
    .F0(\CIC1Cos/d1_71_N_418_38 ), .Q0(\CIC1Cos/d1_38 ), 
    .F1(\CIC1Cos/d1_71_N_418_39 ), .Q1(\CIC1Cos/d1_39 ), 
    .FCO(\CIC1Cos/n12050 ));
  CIC1Cos_SLICE_872 \CIC1Cos/SLICE_872 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5072 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_37 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5073 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_36 ), .DI1(\CIC1Cos/d1_71_N_418_37 ), 
    .DI0(\CIC1Cos/d1_71_N_418_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12048 ), 
    .F0(\CIC1Cos/d1_71_N_418_36 ), .Q0(\CIC1Cos/d1_36 ), 
    .F1(\CIC1Cos/d1_71_N_418_37 ), .Q1(\CIC1Cos/d1_37 ), 
    .FCO(\CIC1Cos/n12049 ));
  CIC1Cos_SLICE_873 \CIC1Cos/SLICE_873 ( .D1(\CIC1Cos/d1_67 ), 
    .C1(\CIC1Cos/n5194 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_67 ), 
    .D0(\CIC1Cos/d1_66 ), .C0(\CIC1Cos/n5195 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_66 ), .DI1(\CIC1Cos/d2_71_N_490_67 ), 
    .DI0(\CIC1Cos/d2_71_N_490_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12022 ), 
    .F0(\CIC1Cos/d2_71_N_490_66 ), .Q0(\CIC1Cos/d2_66 ), 
    .F1(\CIC1Cos/d2_71_N_490_67 ), .Q1(\CIC1Cos/d2_67 ), 
    .FCO(\CIC1Cos/n12023 ));
  CIC1Cos_SLICE_874 \CIC1Cos/SLICE_874 ( .D1(\CIC1Cos/d4_69 ), 
    .C1(\CIC1Cos/n5648 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_69 ), 
    .D0(\CIC1Cos/d4_68 ), .C0(\CIC1Cos/n5649 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_68 ), .DI1(\CIC1Cos/d5_71_N_706_69 ), 
    .DI0(\CIC1Cos/d5_71_N_706_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11900 ), 
    .F0(\CIC1Cos/d5_71_N_706_68 ), .Q0(\CIC1Cos/d5_68 ), 
    .F1(\CIC1Cos/d5_71_N_706_69 ), .Q1(\CIC1Cos/d5_69 ), 
    .FCO(\CIC1Cos/n11901 ));
  CIC1Cos_SLICE_875 \CIC1Cos/SLICE_875 ( .D1(\CIC1Cos/d1_63 ), 
    .C1(\CIC1Cos/n5198 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_63 ), 
    .D0(\CIC1Cos/d1_62 ), .C0(\CIC1Cos/n5199 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_62 ), .DI1(\CIC1Cos/d2_71_N_490_63 ), 
    .DI0(\CIC1Cos/d2_71_N_490_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12020 ), 
    .F0(\CIC1Cos/d2_71_N_490_62 ), .Q0(\CIC1Cos/d2_62 ), 
    .F1(\CIC1Cos/d2_71_N_490_63 ), .Q1(\CIC1Cos/d2_63 ), 
    .FCO(\CIC1Cos/n12021 ));
  CIC1Cos_SLICE_876 \CIC1Cos/SLICE_876 ( .A1(\CIC1Cos/n5036 ), 
    .FCO(\CIC1Cos/n12048 ));
  CIC1Cos_SLICE_877 \CIC1Cos/SLICE_877 ( .B1(\CIC1Cos/d3_61 ), 
    .A1(\CIC1Cos/d2_61 ), .B0(\CIC1Cos/d3_60 ), .A0(\CIC1Cos/d2_60 ), 
    .FCI(\CIC1Cos/n11997 ), .F0(\CIC1Cos/n5353 ), .F1(\CIC1Cos/n5352 ), 
    .FCO(\CIC1Cos/n11998 ));
  CIC1Cos_SLICE_878 \CIC1Cos/SLICE_878 ( .B1(\CIC1Cos/d2_71 ), 
    .A1(\CIC1Cos/d1_71 ), .B0(\CIC1Cos/d2_70 ), .A0(\CIC1Cos/d1_70 ), 
    .FCI(\CIC1Cos/n12043 ), .F0(\CIC1Cos/n5191 ), .F1(\CIC1Cos/n5190 ));
  CIC1Cos_SLICE_879 \CIC1Cos/SLICE_879 ( .D1(\CIC1Cos/d4_67 ), 
    .C1(\CIC1Cos/n5650 ), .B1(\CIC1Cos/n5644 ), .A1(\CIC1Cos/d5_67 ), 
    .D0(\CIC1Cos/d4_66 ), .C0(\CIC1Cos/n5651 ), .B0(\CIC1Cos/n5644 ), 
    .A0(\CIC1Cos/d5_66 ), .DI1(\CIC1Cos/d5_71_N_706_67 ), 
    .DI0(\CIC1Cos/d5_71_N_706_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11899 ), 
    .F0(\CIC1Cos/d5_71_N_706_66 ), .Q0(\CIC1Cos/d5_66 ), 
    .F1(\CIC1Cos/d5_71_N_706_67 ), .Q1(\CIC1Cos/d5_67 ), 
    .FCO(\CIC1Cos/n11900 ));
  CIC1Cos_SLICE_880 \CIC1Cos/SLICE_880 ( .B1(\CIC1Cos/d4_65 ), 
    .A1(\CIC1Cos/d3_65 ), .B0(\CIC1Cos/d4_64 ), .A0(\CIC1Cos/d3_64 ), 
    .FCI(\CIC1Cos/n11958 ), .F0(\CIC1Cos/n5501 ), .F1(\CIC1Cos/n5500 ), 
    .FCO(\CIC1Cos/n11959 ));
  CIC1Cos_SLICE_881 \CIC1Cos/SLICE_881 ( .B1(\CIC1Cos/d4_63 ), 
    .A1(\CIC1Cos/d3_63 ), .B0(\CIC1Cos/d4_62 ), .A0(\CIC1Cos/d3_62 ), 
    .FCI(\CIC1Cos/n11957 ), .F0(\CIC1Cos/n5503 ), .F1(\CIC1Cos/n5502 ), 
    .FCO(\CIC1Cos/n11958 ));
  CIC1Cos_SLICE_882 \CIC1Cos/SLICE_882 ( .B1(\CIC1Cos/d4_61 ), 
    .A1(\CIC1Cos/d3_61 ), .B0(\CIC1Cos/d4_60 ), .A0(\CIC1Cos/d3_60 ), 
    .FCI(\CIC1Cos/n11956 ), .F0(\CIC1Cos/n5505 ), .F1(\CIC1Cos/n5504 ), 
    .FCO(\CIC1Cos/n11957 ));
  CIC1Cos_SLICE_883 \CIC1Cos/SLICE_883 ( .B1(\CIC1Cos/d4_59 ), 
    .A1(\CIC1Cos/d3_59 ), .B0(\CIC1Cos/d4_58 ), .A0(\CIC1Cos/d3_58 ), 
    .FCI(\CIC1Cos/n11955 ), .F0(\CIC1Cos/n5507 ), .F1(\CIC1Cos/n5506 ), 
    .FCO(\CIC1Cos/n11956 ));
  CIC1Cos_SLICE_884 \CIC1Cos/SLICE_884 ( .B1(\CIC1Cos/d4_57 ), 
    .A1(\CIC1Cos/d3_57 ), .B0(\CIC1Cos/d4_56 ), .A0(\CIC1Cos/d3_56 ), 
    .FCI(\CIC1Cos/n11954 ), .F0(\CIC1Cos/n5509 ), .F1(\CIC1Cos/n5508 ), 
    .FCO(\CIC1Cos/n11955 ));
  CIC1Cos_SLICE_885 \CIC1Cos/SLICE_885 ( .B1(\CIC1Cos/d4_55 ), 
    .A1(\CIC1Cos/d3_55 ), .B0(\CIC1Cos/d4_54 ), .A0(\CIC1Cos/d3_54 ), 
    .FCI(\CIC1Cos/n11953 ), .F0(\CIC1Cos/n5511 ), .F1(\CIC1Cos/n5510 ), 
    .FCO(\CIC1Cos/n11954 ));
  CIC1Cos_SLICE_886 \CIC1Cos/SLICE_886 ( .B1(\CIC1Cos/d4_53 ), 
    .A1(\CIC1Cos/d3_53 ), .B0(\CIC1Cos/d4_52 ), .A0(\CIC1Cos/d3_52 ), 
    .FCI(\CIC1Cos/n11952 ), .F0(\CIC1Cos/n5513 ), .F1(\CIC1Cos/n5512 ), 
    .FCO(\CIC1Cos/n11953 ));
  CIC1Cos_SLICE_887 \CIC1Cos/SLICE_887 ( .B1(\CIC1Cos/d4_51 ), 
    .A1(\CIC1Cos/d3_51 ), .B0(\CIC1Cos/d4_50 ), .A0(\CIC1Cos/d3_50 ), 
    .FCI(\CIC1Cos/n11951 ), .F0(\CIC1Cos/n5515 ), .F1(\CIC1Cos/n5514 ), 
    .FCO(\CIC1Cos/n11952 ));
  CIC1Cos_SLICE_888 \CIC1Cos/SLICE_888 ( .B1(\CIC1Cos/d_d_tmp_46 ), 
    .A1(\CIC1Cos/d_tmp_46 ), .B0(\CIC1Cos/d_d_tmp_45 ), 
    .A0(\CIC1Cos/d_tmp_45 ), .FCI(\CIC1Cos/n11610 ), .F0(\CIC1Cos/n6128 ), 
    .F1(\CIC1Cos/n6127 ), .FCO(\CIC1Cos/n11611 ));
  CIC1Cos_SLICE_889 \CIC1Cos/SLICE_889 ( .B1(\CIC1Cos/d4_49 ), 
    .A1(\CIC1Cos/d3_49 ), .B0(\CIC1Cos/d4_48 ), .A0(\CIC1Cos/d3_48 ), 
    .FCI(\CIC1Cos/n11950 ), .F0(\CIC1Cos/n5517 ), .F1(\CIC1Cos/n5516 ), 
    .FCO(\CIC1Cos/n11951 ));
  CIC1Cos_SLICE_890 \CIC1Cos/SLICE_890 ( .B1(\CIC1Cos/d4_47 ), 
    .A1(\CIC1Cos/d3_47 ), .B0(\CIC1Cos/d4_46 ), .A0(\CIC1Cos/d3_46 ), 
    .FCI(\CIC1Cos/n11949 ), .F0(\CIC1Cos/n5519 ), .F1(\CIC1Cos/n5518 ), 
    .FCO(\CIC1Cos/n11950 ));
  CIC1Cos_SLICE_891 \CIC1Cos/SLICE_891 ( .B1(\CIC1Cos/d4_45 ), 
    .A1(\CIC1Cos/d3_45 ), .B0(\CIC1Cos/d4_44 ), .A0(\CIC1Cos/d3_44 ), 
    .FCI(\CIC1Cos/n11948 ), .F0(\CIC1Cos/n5521 ), .F1(\CIC1Cos/n5520 ), 
    .FCO(\CIC1Cos/n11949 ));
  CIC1Cos_SLICE_892 \CIC1Cos/SLICE_892 ( .B1(\CIC1Cos/d4_43 ), 
    .A1(\CIC1Cos/d3_43 ), .B0(\CIC1Cos/d4_42 ), .A0(\CIC1Cos/d3_42 ), 
    .FCI(\CIC1Cos/n11947 ), .F0(\CIC1Cos/n5523 ), .F1(\CIC1Cos/n5522 ), 
    .FCO(\CIC1Cos/n11948 ));
  CIC1Cos_SLICE_893 \CIC1Cos/SLICE_893 ( .B1(\CIC1Cos/d4_41 ), 
    .A1(\CIC1Cos/d3_41 ), .B0(\CIC1Cos/d4_40 ), .A0(\CIC1Cos/d3_40 ), 
    .FCI(\CIC1Cos/n11946 ), .F0(\CIC1Cos/n5525 ), .F1(\CIC1Cos/n5524 ), 
    .FCO(\CIC1Cos/n11947 ));
  CIC1Cos_SLICE_894 \CIC1Cos/SLICE_894 ( .B1(\CIC1Cos/d4_39 ), 
    .A1(\CIC1Cos/d3_39 ), .B0(\CIC1Cos/d4_38 ), .A0(\CIC1Cos/d3_38 ), 
    .FCI(\CIC1Cos/n11945 ), .F0(\CIC1Cos/n5527 ), .F1(\CIC1Cos/n5526 ), 
    .FCO(\CIC1Cos/n11946 ));
  CIC1Cos_SLICE_895 \CIC1Cos/SLICE_895 ( .B1(\CIC1Cos/d4_37 ), 
    .A1(\CIC1Cos/d3_37 ), .B0(\CIC1Cos/d4_36 ), .A0(\CIC1Cos/d3_36 ), 
    .F1(\CIC1Cos/n5528 ), .FCO(\CIC1Cos/n11945 ));
  CIC1Cos_SLICE_896 \CIC1Cos/SLICE_896 ( .D1(\CIC1Cos/d3_71 ), 
    .C1(\CIC1Cos/n5494 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_71 ), 
    .D0(\CIC1Cos/d3_70 ), .C0(\CIC1Cos/n5495 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_70 ), .DI1(\CIC1Cos/d4_71_N_634_71 ), 
    .DI0(\CIC1Cos/d4_71_N_634_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11942 ), 
    .F0(\CIC1Cos/d4_71_N_634_70 ), .Q0(\CIC1Cos/d4_70 ), 
    .F1(\CIC1Cos/d4_71_N_634_71 ), .Q1(\CIC1Cos/d4_71 ));
  CIC1Cos_SLICE_897 \CIC1Cos/SLICE_897 ( .D1(\CIC1Cos/d3_69 ), 
    .C1(\CIC1Cos/n5496 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_69 ), 
    .D0(\CIC1Cos/d3_68 ), .C0(\CIC1Cos/n5497 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_68 ), .DI1(\CIC1Cos/d4_71_N_634_69 ), 
    .DI0(\CIC1Cos/d4_71_N_634_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11941 ), 
    .F0(\CIC1Cos/d4_71_N_634_68 ), .Q0(\CIC1Cos/d4_68 ), 
    .F1(\CIC1Cos/d4_71_N_634_69 ), .Q1(\CIC1Cos/d4_69 ), 
    .FCO(\CIC1Cos/n11942 ));
  CIC1Cos_SLICE_898 \CIC1Cos/SLICE_898 ( .D1(\CIC1Cos/d3_67 ), 
    .C1(\CIC1Cos/n5498 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_67 ), 
    .D0(\CIC1Cos/d3_66 ), .C0(\CIC1Cos/n5499 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_66 ), .DI1(\CIC1Cos/d4_71_N_634_67 ), 
    .DI0(\CIC1Cos/d4_71_N_634_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11940 ), 
    .F0(\CIC1Cos/d4_71_N_634_66 ), .Q0(\CIC1Cos/d4_66 ), 
    .F1(\CIC1Cos/d4_71_N_634_67 ), .Q1(\CIC1Cos/d4_67 ), 
    .FCO(\CIC1Cos/n11941 ));
  CIC1Cos_SLICE_899 \CIC1Cos/SLICE_899 ( .D1(\CIC1Cos/d3_65 ), 
    .C1(\CIC1Cos/n5500 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_65 ), 
    .D0(\CIC1Cos/d3_64 ), .C0(\CIC1Cos/n5501 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_64 ), .DI1(\CIC1Cos/d4_71_N_634_65 ), 
    .DI0(\CIC1Cos/d4_71_N_634_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11939 ), 
    .F0(\CIC1Cos/d4_71_N_634_64 ), .Q0(\CIC1Cos/d4_64 ), 
    .F1(\CIC1Cos/d4_71_N_634_65 ), .Q1(\CIC1Cos/d4_65 ), 
    .FCO(\CIC1Cos/n11940 ));
  CIC1Cos_SLICE_900 \CIC1Cos/SLICE_900 ( .D1(\CIC1Cos/d3_63 ), 
    .C1(\CIC1Cos/n5502 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_63 ), 
    .D0(\CIC1Cos/d3_62 ), .C0(\CIC1Cos/n5503 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_62 ), .DI1(\CIC1Cos/d4_71_N_634_63 ), 
    .DI0(\CIC1Cos/d4_71_N_634_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11938 ), 
    .F0(\CIC1Cos/d4_71_N_634_62 ), .Q0(\CIC1Cos/d4_62 ), 
    .F1(\CIC1Cos/d4_71_N_634_63 ), .Q1(\CIC1Cos/d4_63 ), 
    .FCO(\CIC1Cos/n11939 ));
  CIC1Cos_SLICE_901 \CIC1Cos/SLICE_901 ( .D1(\CIC1Cos/d3_61 ), 
    .C1(\CIC1Cos/n5504 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_61 ), 
    .D0(\CIC1Cos/d3_60 ), .C0(\CIC1Cos/n5505 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_60 ), .DI1(\CIC1Cos/d4_71_N_634_61 ), 
    .DI0(\CIC1Cos/d4_71_N_634_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11937 ), 
    .F0(\CIC1Cos/d4_71_N_634_60 ), .Q0(\CIC1Cos/d4_60 ), 
    .F1(\CIC1Cos/d4_71_N_634_61 ), .Q1(\CIC1Cos/d4_61 ), 
    .FCO(\CIC1Cos/n11938 ));
  CIC1Cos_SLICE_902 \CIC1Cos/SLICE_902 ( .D1(\CIC1Cos/d3_59 ), 
    .C1(\CIC1Cos/n5506 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_59 ), 
    .D0(\CIC1Cos/d3_58 ), .C0(\CIC1Cos/n5507 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_58 ), .DI1(\CIC1Cos/d4_71_N_634_59 ), 
    .DI0(\CIC1Cos/d4_71_N_634_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11936 ), 
    .F0(\CIC1Cos/d4_71_N_634_58 ), .Q0(\CIC1Cos/d4_58 ), 
    .F1(\CIC1Cos/d4_71_N_634_59 ), .Q1(\CIC1Cos/d4_59 ), 
    .FCO(\CIC1Cos/n11937 ));
  CIC1Cos_SLICE_903 \CIC1Cos/SLICE_903 ( .D1(\CIC1Cos/d3_57 ), 
    .C1(\CIC1Cos/n5508 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_57 ), 
    .D0(\CIC1Cos/d3_56 ), .C0(\CIC1Cos/n5509 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_56 ), .DI1(\CIC1Cos/d4_71_N_634_57 ), 
    .DI0(\CIC1Cos/d4_71_N_634_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11935 ), 
    .F0(\CIC1Cos/d4_71_N_634_56 ), .Q0(\CIC1Cos/d4_56 ), 
    .F1(\CIC1Cos/d4_71_N_634_57 ), .Q1(\CIC1Cos/d4_57 ), 
    .FCO(\CIC1Cos/n11936 ));
  CIC1Cos_SLICE_904 \CIC1Cos/SLICE_904 ( .D1(\CIC1Cos/d3_55 ), 
    .C1(\CIC1Cos/n5510 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_55 ), 
    .D0(\CIC1Cos/d3_54 ), .C0(\CIC1Cos/n5511 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_54 ), .DI1(\CIC1Cos/d4_71_N_634_55 ), 
    .DI0(\CIC1Cos/d4_71_N_634_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11934 ), 
    .F0(\CIC1Cos/d4_71_N_634_54 ), .Q0(\CIC1Cos/d4_54 ), 
    .F1(\CIC1Cos/d4_71_N_634_55 ), .Q1(\CIC1Cos/d4_55 ), 
    .FCO(\CIC1Cos/n11935 ));
  CIC1Cos_SLICE_905 \CIC1Cos/SLICE_905 ( .D1(\CIC1Cos/d3_53 ), 
    .C1(\CIC1Cos/n5512 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_53 ), 
    .D0(\CIC1Cos/d3_52 ), .C0(\CIC1Cos/n5513 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_52 ), .DI1(\CIC1Cos/d4_71_N_634_53 ), 
    .DI0(\CIC1Cos/d4_71_N_634_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11933 ), 
    .F0(\CIC1Cos/d4_71_N_634_52 ), .Q0(\CIC1Cos/d4_52 ), 
    .F1(\CIC1Cos/d4_71_N_634_53 ), .Q1(\CIC1Cos/d4_53 ), 
    .FCO(\CIC1Cos/n11934 ));
  CIC1Cos_SLICE_906 \CIC1Cos/SLICE_906 ( .D1(\CIC1Cos/d3_51 ), 
    .C1(\CIC1Cos/n5514 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_51 ), 
    .D0(\CIC1Cos/d3_50 ), .C0(\CIC1Cos/n5515 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_50 ), .DI1(\CIC1Cos/d4_71_N_634_51 ), 
    .DI0(\CIC1Cos/d4_71_N_634_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11932 ), 
    .F0(\CIC1Cos/d4_71_N_634_50 ), .Q0(\CIC1Cos/d4_50 ), 
    .F1(\CIC1Cos/d4_71_N_634_51 ), .Q1(\CIC1Cos/d4_51 ), 
    .FCO(\CIC1Cos/n11933 ));
  CIC1Cos_SLICE_907 \CIC1Cos/SLICE_907 ( .D1(\CIC1Cos/d3_49 ), 
    .C1(\CIC1Cos/n5516 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_49 ), 
    .D0(\CIC1Cos/d3_48 ), .C0(\CIC1Cos/n5517 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_48 ), .DI1(\CIC1Cos/d4_71_N_634_49 ), 
    .DI0(\CIC1Cos/d4_71_N_634_48 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11931 ), 
    .F0(\CIC1Cos/d4_71_N_634_48 ), .Q0(\CIC1Cos/d4_48 ), 
    .F1(\CIC1Cos/d4_71_N_634_49 ), .Q1(\CIC1Cos/d4_49 ), 
    .FCO(\CIC1Cos/n11932 ));
  CIC1Cos_SLICE_908 \CIC1Cos/SLICE_908 ( .D1(\CIC1Cos/d3_47 ), 
    .C1(\CIC1Cos/n5518 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_47 ), 
    .D0(\CIC1Cos/d3_46 ), .C0(\CIC1Cos/n5519 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_46 ), .DI1(\CIC1Cos/d4_71_N_634_47 ), 
    .DI0(\CIC1Cos/d4_71_N_634_46 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11930 ), 
    .F0(\CIC1Cos/d4_71_N_634_46 ), .Q0(\CIC1Cos/d4_46 ), 
    .F1(\CIC1Cos/d4_71_N_634_47 ), .Q1(\CIC1Cos/d4_47 ), 
    .FCO(\CIC1Cos/n11931 ));
  CIC1Cos_SLICE_909 \CIC1Cos/SLICE_909 ( .D1(\CIC1Cos/d3_45 ), 
    .C1(\CIC1Cos/n5520 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_45 ), 
    .D0(\CIC1Cos/d3_44 ), .C0(\CIC1Cos/n5521 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_44 ), .DI1(\CIC1Cos/d4_71_N_634_45 ), 
    .DI0(\CIC1Cos/d4_71_N_634_44 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11929 ), 
    .F0(\CIC1Cos/d4_71_N_634_44 ), .Q0(\CIC1Cos/d4_44 ), 
    .F1(\CIC1Cos/d4_71_N_634_45 ), .Q1(\CIC1Cos/d4_45 ), 
    .FCO(\CIC1Cos/n11930 ));
  CIC1Cos_SLICE_910 \CIC1Cos/SLICE_910 ( .D1(\CIC1Cos/d3_43 ), 
    .C1(\CIC1Cos/n5522 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_43 ), 
    .D0(\CIC1Cos/d3_42 ), .C0(\CIC1Cos/n5523 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_42 ), .DI1(\CIC1Cos/d4_71_N_634_43 ), 
    .DI0(\CIC1Cos/d4_71_N_634_42 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11928 ), 
    .F0(\CIC1Cos/d4_71_N_634_42 ), .Q0(\CIC1Cos/d4_42 ), 
    .F1(\CIC1Cos/d4_71_N_634_43 ), .Q1(\CIC1Cos/d4_43 ), 
    .FCO(\CIC1Cos/n11929 ));
  CIC1Cos_SLICE_911 \CIC1Cos/SLICE_911 ( .D1(\CIC1Cos/d3_41 ), 
    .C1(\CIC1Cos/n5524 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_41 ), 
    .D0(\CIC1Cos/d3_40 ), .C0(\CIC1Cos/n5525 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_40 ), .DI1(\CIC1Cos/d4_71_N_634_41 ), 
    .DI0(\CIC1Cos/d4_71_N_634_40 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11927 ), 
    .F0(\CIC1Cos/d4_71_N_634_40 ), .Q0(\CIC1Cos/d4_40 ), 
    .F1(\CIC1Cos/d4_71_N_634_41 ), .Q1(\CIC1Cos/d4_41 ), 
    .FCO(\CIC1Cos/n11928 ));
  CIC1Cos_SLICE_912 \CIC1Cos/SLICE_912 ( .D1(\CIC1Cos/d3_39 ), 
    .C1(\CIC1Cos/n5526 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_39 ), 
    .D0(\CIC1Cos/d3_38 ), .C0(\CIC1Cos/n5527 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_38 ), .DI1(\CIC1Cos/d4_71_N_634_39 ), 
    .DI0(\CIC1Cos/d4_71_N_634_38 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11926 ), 
    .F0(\CIC1Cos/d4_71_N_634_38 ), .Q0(\CIC1Cos/d4_38 ), 
    .F1(\CIC1Cos/d4_71_N_634_39 ), .Q1(\CIC1Cos/d4_39 ), 
    .FCO(\CIC1Cos/n11927 ));
  CIC1Cos_SLICE_913 \CIC1Cos/SLICE_913 ( .D1(\CIC1Cos/d3_37 ), 
    .C1(\CIC1Cos/n5528 ), .B1(\CIC1Cos/n5492 ), .A1(\CIC1Cos/d4_37 ), 
    .D0(\CIC1Cos/d3_36 ), .C0(\CIC1Cos/n5529 ), .B0(\CIC1Cos/n5492 ), 
    .A0(\CIC1Cos/d4_36 ), .DI1(\CIC1Cos/d4_71_N_634_37 ), 
    .DI0(\CIC1Cos/d4_71_N_634_36 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11925 ), 
    .F0(\CIC1Cos/d4_71_N_634_36 ), .Q0(\CIC1Cos/d4_36 ), 
    .F1(\CIC1Cos/d4_71_N_634_37 ), .Q1(\CIC1Cos/d4_37 ), 
    .FCO(\CIC1Cos/n11926 ));
  CIC1Cos_SLICE_914 \CIC1Cos/SLICE_914 ( .A1(\CIC1Cos/n5492 ), 
    .FCO(\CIC1Cos/n11925 ));
  CIC1Cos_SLICE_915 \CIC1Cos/SLICE_915 ( .B1(\CIC1Cos/d5_71 ), 
    .A1(\CIC1Cos/d4_71 ), .B0(\CIC1Cos/d5_70 ), .A0(\CIC1Cos/d4_70 ), 
    .FCI(\CIC1Cos/n11920 ), .F0(\CIC1Cos/n5647 ), .F1(\CIC1Cos/n5646 ));
  CIC1Cos_SLICE_916 \CIC1Cos/SLICE_916 ( .B1(\CIC1Cos/d5_69 ), 
    .A1(\CIC1Cos/d4_69 ), .B0(\CIC1Cos/d5_68 ), .A0(\CIC1Cos/d4_68 ), 
    .FCI(\CIC1Cos/n11919 ), .F0(\CIC1Cos/n5649 ), .F1(\CIC1Cos/n5648 ), 
    .FCO(\CIC1Cos/n11920 ));
  CIC1Cos_SLICE_917 \CIC1Cos/SLICE_917 ( .B1(\CIC1Cos/d5_67 ), 
    .A1(\CIC1Cos/d4_67 ), .B0(\CIC1Cos/d5_66 ), .A0(\CIC1Cos/d4_66 ), 
    .FCI(\CIC1Cos/n11918 ), .F0(\CIC1Cos/n5651 ), .F1(\CIC1Cos/n5650 ), 
    .FCO(\CIC1Cos/n11919 ));
  CIC1Cos_SLICE_918 \CIC1Cos/SLICE_918 ( .B1(\CIC1Cos/d5_65 ), 
    .A1(\CIC1Cos/d4_65 ), .B0(\CIC1Cos/d5_64 ), .A0(\CIC1Cos/d4_64 ), 
    .FCI(\CIC1Cos/n11917 ), .F0(\CIC1Cos/n5653 ), .F1(\CIC1Cos/n5652 ), 
    .FCO(\CIC1Cos/n11918 ));
  CIC1Cos_SLICE_919 \CIC1Cos/SLICE_919 ( .B1(\CIC1Cos/d5_63 ), 
    .A1(\CIC1Cos/d4_63 ), .B0(\CIC1Cos/d5_62 ), .A0(\CIC1Cos/d4_62 ), 
    .FCI(\CIC1Cos/n11916 ), .F0(\CIC1Cos/n5655 ), .F1(\CIC1Cos/n5654 ), 
    .FCO(\CIC1Cos/n11917 ));
  CIC1Cos_SLICE_920 \CIC1Cos/SLICE_920 ( .B1(\CIC1Cos/d5_61 ), 
    .A1(\CIC1Cos/d4_61 ), .B0(\CIC1Cos/d5_60 ), .A0(\CIC1Cos/d4_60 ), 
    .FCI(\CIC1Cos/n11915 ), .F0(\CIC1Cos/n5657 ), .F1(\CIC1Cos/n5656 ), 
    .FCO(\CIC1Cos/n11916 ));
  CIC1Cos_SLICE_921 \CIC1Cos/SLICE_921 ( .B1(\CIC1Cos/d5_59 ), 
    .A1(\CIC1Cos/d4_59 ), .B0(\CIC1Cos/d5_58 ), .A0(\CIC1Cos/d4_58 ), 
    .FCI(\CIC1Cos/n11914 ), .F0(\CIC1Cos/n5659 ), .F1(\CIC1Cos/n5658 ), 
    .FCO(\CIC1Cos/n11915 ));
  CIC1Cos_SLICE_922 \CIC1Cos/SLICE_922 ( .B1(\CIC1Cos/d5_57 ), 
    .A1(\CIC1Cos/d4_57 ), .B0(\CIC1Cos/d5_56 ), .A0(\CIC1Cos/d4_56 ), 
    .FCI(\CIC1Cos/n11913 ), .F0(\CIC1Cos/n5661 ), .F1(\CIC1Cos/n5660 ), 
    .FCO(\CIC1Cos/n11914 ));
  CIC1Cos_SLICE_923 \CIC1Cos/SLICE_923 ( .B1(\CIC1Cos/d5_55 ), 
    .A1(\CIC1Cos/d4_55 ), .B0(\CIC1Cos/d5_54 ), .A0(\CIC1Cos/d4_54 ), 
    .FCI(\CIC1Cos/n11912 ), .F0(\CIC1Cos/n5663 ), .F1(\CIC1Cos/n5662 ), 
    .FCO(\CIC1Cos/n11913 ));
  CIC1Cos_SLICE_924 \CIC1Cos/SLICE_924 ( .B1(\CIC1Cos/d_d_tmp_44 ), 
    .A1(\CIC1Cos/d_tmp_44 ), .B0(\CIC1Cos/d_d_tmp_43 ), 
    .A0(\CIC1Cos/d_tmp_43 ), .FCI(\CIC1Cos/n11609 ), .F0(\CIC1Cos/n6130 ), 
    .F1(\CIC1Cos/n6129 ), .FCO(\CIC1Cos/n11610 ));
  CIC1Cos_SLICE_925 \CIC1Cos/SLICE_925 ( .B1(\CIC1Cos/d_d_tmp_42 ), 
    .A1(\CIC1Cos/d_tmp_42 ), .B0(\CIC1Cos/d_d_tmp_41 ), 
    .A0(\CIC1Cos/d_tmp_41 ), .FCI(\CIC1Cos/n11608 ), .F0(\CIC1Cos/n6132 ), 
    .F1(\CIC1Cos/n6131 ), .FCO(\CIC1Cos/n11609 ));
  CIC1Cos_SLICE_926 \CIC1Cos/SLICE_926 ( .B1(\CIC1Cos/d_d_tmp_40 ), 
    .A1(\CIC1Cos/d_tmp_40 ), .B0(\CIC1Cos/d_d_tmp_39 ), 
    .A0(\CIC1Cos/d_tmp_39 ), .FCI(\CIC1Cos/n11607 ), .F0(\CIC1Cos/n6134 ), 
    .F1(\CIC1Cos/n6133 ), .FCO(\CIC1Cos/n11608 ));
  CIC1Cos_SLICE_927 \CIC1Cos/SLICE_927 ( .B1(\CIC1Cos/d_d_tmp_38 ), 
    .A1(\CIC1Cos/d_tmp_38 ), .B0(\CIC1Cos/d_d_tmp_37 ), 
    .A0(\CIC1Cos/d_tmp_37 ), .FCI(\CIC1Cos/n11606 ), .F0(\CIC1Cos/n6136 ), 
    .F1(\CIC1Cos/n6135 ), .FCO(\CIC1Cos/n11607 ));
  CIC1Cos_SLICE_928 \CIC1Cos/SLICE_928 ( .B1(\CIC1Cos/d_d_tmp_36 ), 
    .A1(\CIC1Cos/d_tmp_36 ), .F1(\CIC1Cos/n6137 ), .FCO(\CIC1Cos/n11606 ));
  CIC1Cos_SLICE_929 \CIC1Cos/SLICE_929 ( .D1(\CIC1Cos/d_tmp_71 ), 
    .C1(\CIC1Cos/n6102 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_71 ), 
    .D0(\CIC1Cos/d_tmp_70 ), .C0(\CIC1Cos/n6103 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_70 ), .DI1(\CIC1Cos/d6_71_N_1459_71 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_70 ), .CE(\CIC1Cos/osc_clk_enable_934 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11604 ), .F0(\CIC1Cos/d6_71_N_1459_70 ), 
    .Q0(\CIC1Cos/d6_70 ), .F1(\CIC1Cos/d6_71_N_1459_71 ), .Q1(\CIC1Cos/d6_71 ));
  CIC1Cos_SLICE_930 \CIC1Cos/SLICE_930 ( .D1(\CIC1Cos/d_tmp_69 ), 
    .C1(\CIC1Cos/n6104 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_69 ), 
    .D0(\CIC1Cos/d_tmp_68 ), .C0(\CIC1Cos/n6105 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_68 ), .DI1(\CIC1Cos/d6_71_N_1459_69 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_68 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11603 ), .F0(\CIC1Cos/d6_71_N_1459_68 ), 
    .Q0(\CIC1Cos/d6_68 ), .F1(\CIC1Cos/d6_71_N_1459_69 ), .Q1(\CIC1Cos/d6_69 ), 
    .FCO(\CIC1Cos/n11604 ));
  CIC1Cos_SLICE_931 \CIC1Cos/SLICE_931 ( .D1(\CIC1Cos/d_tmp_67 ), 
    .C1(\CIC1Cos/n6106 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_67 ), 
    .D0(\CIC1Cos/d_tmp_66 ), .C0(\CIC1Cos/n6107 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_66 ), .DI1(\CIC1Cos/d6_71_N_1459_67 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_66 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11602 ), .F0(\CIC1Cos/d6_71_N_1459_66 ), 
    .Q0(\CIC1Cos/d6_66 ), .F1(\CIC1Cos/d6_71_N_1459_67 ), .Q1(\CIC1Cos/d6_67 ), 
    .FCO(\CIC1Cos/n11603 ));
  CIC1Cos_SLICE_932 \CIC1Cos/SLICE_932 ( .D1(\CIC1Cos/d_tmp_65 ), 
    .C1(\CIC1Cos/n6108 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_65 ), 
    .D0(\CIC1Cos/d_tmp_64 ), .C0(\CIC1Cos/n6109 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_64 ), .DI1(\CIC1Cos/d6_71_N_1459_65 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_64 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11601 ), .F0(\CIC1Cos/d6_71_N_1459_64 ), 
    .Q0(\CIC1Cos/d6_64 ), .F1(\CIC1Cos/d6_71_N_1459_65 ), .Q1(\CIC1Cos/d6_65 ), 
    .FCO(\CIC1Cos/n11602 ));
  CIC1Cos_SLICE_933 \CIC1Cos/SLICE_933 ( .D1(\CIC1Cos/d_tmp_63 ), 
    .C1(\CIC1Cos/n6110 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_63 ), 
    .D0(\CIC1Cos/d_tmp_62 ), .C0(\CIC1Cos/n6111 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_62 ), .DI1(\CIC1Cos/d6_71_N_1459_63 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_62 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11600 ), .F0(\CIC1Cos/d6_71_N_1459_62 ), 
    .Q0(\CIC1Cos/d6_62 ), .F1(\CIC1Cos/d6_71_N_1459_63 ), .Q1(\CIC1Cos/d6_63 ), 
    .FCO(\CIC1Cos/n11601 ));
  CIC1Cos_SLICE_934 \CIC1Cos/SLICE_934 ( .D1(\CIC1Cos/d_tmp_61 ), 
    .C1(\CIC1Cos/n6112 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_61 ), 
    .D0(\CIC1Cos/d_tmp_60 ), .C0(\CIC1Cos/n6113 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_60 ), .DI1(\CIC1Cos/d6_71_N_1459_61 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_60 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11599 ), .F0(\CIC1Cos/d6_71_N_1459_60 ), 
    .Q0(\CIC1Cos/d6_60 ), .F1(\CIC1Cos/d6_71_N_1459_61 ), .Q1(\CIC1Cos/d6_61 ), 
    .FCO(\CIC1Cos/n11600 ));
  CIC1Cos_SLICE_935 \CIC1Cos/SLICE_935 ( .D1(\CIC1Cos/d_tmp_59 ), 
    .C1(\CIC1Cos/n6114 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_59 ), 
    .D0(\CIC1Cos/d_tmp_58 ), .C0(\CIC1Cos/n6115 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_58 ), .DI1(\CIC1Cos/d6_71_N_1459_59 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_58 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11598 ), .F0(\CIC1Cos/d6_71_N_1459_58 ), 
    .Q0(\CIC1Cos/d6_58 ), .F1(\CIC1Cos/d6_71_N_1459_59 ), .Q1(\CIC1Cos/d6_59 ), 
    .FCO(\CIC1Cos/n11599 ));
  CIC1Cos_SLICE_936 \CIC1Cos/SLICE_936 ( .D1(\CIC1Cos/d_tmp_57 ), 
    .C1(\CIC1Cos/n6116 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_57 ), 
    .D0(\CIC1Cos/d_tmp_56 ), .C0(\CIC1Cos/n6117 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_56 ), .DI1(\CIC1Cos/d6_71_N_1459_57 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_56 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11597 ), .F0(\CIC1Cos/d6_71_N_1459_56 ), 
    .Q0(\CIC1Cos/d6_56 ), .F1(\CIC1Cos/d6_71_N_1459_57 ), .Q1(\CIC1Cos/d6_57 ), 
    .FCO(\CIC1Cos/n11598 ));
  CIC1Cos_SLICE_937 \CIC1Cos/SLICE_937 ( .D1(\CIC1Cos/d_tmp_55 ), 
    .C1(\CIC1Cos/n6118 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_55 ), 
    .D0(\CIC1Cos/d_tmp_54 ), .C0(\CIC1Cos/n6119 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_54 ), .DI1(\CIC1Cos/d6_71_N_1459_55 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_54 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11596 ), .F0(\CIC1Cos/d6_71_N_1459_54 ), 
    .Q0(\CIC1Cos/d6_54 ), .F1(\CIC1Cos/d6_71_N_1459_55 ), .Q1(\CIC1Cos/d6_55 ), 
    .FCO(\CIC1Cos/n11597 ));
  CIC1Cos_SLICE_938 \CIC1Cos/SLICE_938 ( .D1(\CIC1Cos/d_tmp_53 ), 
    .C1(\CIC1Cos/n6120 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_53 ), 
    .D0(\CIC1Cos/d_tmp_52 ), .C0(\CIC1Cos/n6121 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_52 ), .DI1(\CIC1Cos/d6_71_N_1459_53 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_52 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11595 ), .F0(\CIC1Cos/d6_71_N_1459_52 ), 
    .Q0(\CIC1Cos/d6_52 ), .F1(\CIC1Cos/d6_71_N_1459_53 ), .Q1(\CIC1Cos/d6_53 ), 
    .FCO(\CIC1Cos/n11596 ));
  CIC1Cos_SLICE_939 \CIC1Cos/SLICE_939 ( .D1(\CIC1Cos/d_tmp_51 ), 
    .C1(\CIC1Cos/n6122 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_51 ), 
    .D0(\CIC1Cos/d_tmp_50 ), .C0(\CIC1Cos/n6123 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_50 ), .DI1(\CIC1Cos/d6_71_N_1459_51 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_50 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11594 ), .F0(\CIC1Cos/d6_71_N_1459_50 ), 
    .Q0(\CIC1Cos/d6_50 ), .F1(\CIC1Cos/d6_71_N_1459_51 ), .Q1(\CIC1Cos/d6_51 ), 
    .FCO(\CIC1Cos/n11595 ));
  CIC1Cos_SLICE_940 \CIC1Cos/SLICE_940 ( .D1(\CIC1Cos/d_tmp_49 ), 
    .C1(\CIC1Cos/n6124 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_49 ), 
    .D0(\CIC1Cos/d_tmp_48 ), .C0(\CIC1Cos/n6125 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_48 ), .DI1(\CIC1Cos/d6_71_N_1459_49 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_48 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11593 ), .F0(\CIC1Cos/d6_71_N_1459_48 ), 
    .Q0(\CIC1Cos/d6_48 ), .F1(\CIC1Cos/d6_71_N_1459_49 ), .Q1(\CIC1Cos/d6_49 ), 
    .FCO(\CIC1Cos/n11594 ));
  CIC1Cos_SLICE_941 \CIC1Cos/SLICE_941 ( .D1(\CIC1Cos/d_tmp_47 ), 
    .C1(\CIC1Cos/n6126 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_47 ), 
    .D0(\CIC1Cos/d_tmp_46 ), .C0(\CIC1Cos/n6127 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_46 ), .DI1(\CIC1Cos/d6_71_N_1459_47 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_46 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11592 ), .F0(\CIC1Cos/d6_71_N_1459_46 ), 
    .Q0(\CIC1Cos/d6_46 ), .F1(\CIC1Cos/d6_71_N_1459_47 ), .Q1(\CIC1Cos/d6_47 ), 
    .FCO(\CIC1Cos/n11593 ));
  CIC1Cos_SLICE_942 \CIC1Cos/SLICE_942 ( .D1(\CIC1Cos/d_tmp_45 ), 
    .C1(\CIC1Cos/n6128 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_45 ), 
    .D0(\CIC1Cos/d_tmp_44 ), .C0(\CIC1Cos/n6129 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_44 ), .DI1(\CIC1Cos/d6_71_N_1459_45 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_44 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11591 ), .F0(\CIC1Cos/d6_71_N_1459_44 ), 
    .Q0(\CIC1Cos/d6_44 ), .F1(\CIC1Cos/d6_71_N_1459_45 ), .Q1(\CIC1Cos/d6_45 ), 
    .FCO(\CIC1Cos/n11592 ));
  CIC1Cos_SLICE_943 \CIC1Cos/SLICE_943 ( .D1(\CIC1Cos/d_tmp_43 ), 
    .C1(\CIC1Cos/n6130 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_43 ), 
    .D0(\CIC1Cos/d_tmp_42 ), .C0(\CIC1Cos/n6131 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_42 ), .DI1(\CIC1Cos/d6_71_N_1459_43 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_42 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11590 ), .F0(\CIC1Cos/d6_71_N_1459_42 ), 
    .Q0(\CIC1Cos/d6_42 ), .F1(\CIC1Cos/d6_71_N_1459_43 ), .Q1(\CIC1Cos/d6_43 ), 
    .FCO(\CIC1Cos/n11591 ));
  CIC1Cos_SLICE_944 \CIC1Cos/SLICE_944 ( .D1(\CIC1Cos/d_tmp_41 ), 
    .C1(\CIC1Cos/n6132 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_41 ), 
    .D0(\CIC1Cos/d_tmp_40 ), .C0(\CIC1Cos/n6133 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_40 ), .DI1(\CIC1Cos/d6_71_N_1459_41 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_40 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11589 ), .F0(\CIC1Cos/d6_71_N_1459_40 ), 
    .Q0(\CIC1Cos/d6_40 ), .F1(\CIC1Cos/d6_71_N_1459_41 ), .Q1(\CIC1Cos/d6_41 ), 
    .FCO(\CIC1Cos/n11590 ));
  CIC1Cos_SLICE_945 \CIC1Cos/SLICE_945 ( .D1(\CIC1Cos/d_tmp_39 ), 
    .C1(\CIC1Cos/n6134 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_39 ), 
    .D0(\CIC1Cos/d_tmp_38 ), .C0(\CIC1Cos/n6135 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_38 ), .DI1(\CIC1Cos/d6_71_N_1459_39 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_38 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11588 ), .F0(\CIC1Cos/d6_71_N_1459_38 ), 
    .Q0(\CIC1Cos/d6_38 ), .F1(\CIC1Cos/d6_71_N_1459_39 ), .Q1(\CIC1Cos/d6_39 ), 
    .FCO(\CIC1Cos/n11589 ));
  CIC1Cos_SLICE_946 \CIC1Cos/SLICE_946 ( .D1(\CIC1Cos/d_tmp_37 ), 
    .C1(\CIC1Cos/n6136 ), .B1(\CIC1Cos/n6100 ), .A1(\CIC1Cos/d_d_tmp_37 ), 
    .D0(\CIC1Cos/d_tmp_36 ), .C0(\CIC1Cos/n6137 ), .B0(\CIC1Cos/n6100 ), 
    .A0(\CIC1Cos/d_d_tmp_36 ), .DI1(\CIC1Cos/d6_71_N_1459_37 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_36 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11587 ), .F0(\CIC1Cos/d6_71_N_1459_36 ), 
    .Q0(\CIC1Cos/d6_36 ), .F1(\CIC1Cos/d6_71_N_1459_37 ), .Q1(\CIC1Cos/d6_37 ), 
    .FCO(\CIC1Cos/n11588 ));
  CIC1Cos_SLICE_947 \CIC1Cos/SLICE_947 ( .A1(\CIC1Cos/n6100 ), 
    .FCO(\CIC1Cos/n11587 ));
  CIC1Cos_SLICE_948 \CIC1Cos/SLICE_948 ( .B0(\CIC1Cos/d_d6_71 ), 
    .A0(\CIC1Cos/d6_71 ), .FCI(\CIC1Cos/n11583 ), .F0(\CIC1Cos/n6254 ));
  CIC1Cos_SLICE_949 \CIC1Cos/SLICE_949 ( .B1(\CIC1Cos/d_d6_70 ), 
    .A1(\CIC1Cos/d6_70 ), .B0(\CIC1Cos/d_d6_69 ), .A0(\CIC1Cos/d6_69 ), 
    .FCI(\CIC1Cos/n11582 ), .F0(\CIC1Cos/n6256 ), .F1(\CIC1Cos/n6255 ), 
    .FCO(\CIC1Cos/n11583 ));
  CIC1Cos_SLICE_950 \CIC1Cos/SLICE_950 ( .B1(\CIC1Cos/d_d6_68 ), 
    .A1(\CIC1Cos/d6_68 ), .B0(\CIC1Cos/d_d6_67 ), .A0(\CIC1Cos/d6_67 ), 
    .FCI(\CIC1Cos/n11581 ), .F0(\CIC1Cos/n6258 ), .F1(\CIC1Cos/n6257 ), 
    .FCO(\CIC1Cos/n11582 ));
  CIC1Cos_SLICE_951 \CIC1Cos/SLICE_951 ( .B1(\CIC1Cos/d_d6_66 ), 
    .A1(\CIC1Cos/d6_66 ), .B0(\CIC1Cos/d_d6_65 ), .A0(\CIC1Cos/d6_65 ), 
    .FCI(\CIC1Cos/n11580 ), .F0(\CIC1Cos/n6260 ), .F1(\CIC1Cos/n6259 ), 
    .FCO(\CIC1Cos/n11581 ));
  CIC1Cos_SLICE_952 \CIC1Cos/SLICE_952 ( .B1(\CIC1Cos/d_d6_64 ), 
    .A1(\CIC1Cos/d6_64 ), .B0(\CIC1Cos/d_d6_63 ), .A0(\CIC1Cos/d6_63 ), 
    .FCI(\CIC1Cos/n11579 ), .F0(\CIC1Cos/n6262 ), .F1(\CIC1Cos/n6261 ), 
    .FCO(\CIC1Cos/n11580 ));
  CIC1Cos_SLICE_953 \CIC1Cos/SLICE_953 ( .B1(\CIC1Cos/d_d6_62 ), 
    .A1(\CIC1Cos/d6_62 ), .B0(\CIC1Cos/d_d6_61 ), .A0(\CIC1Cos/d6_61 ), 
    .FCI(\CIC1Cos/n11578 ), .F0(\CIC1Cos/n6264 ), .F1(\CIC1Cos/n6263 ), 
    .FCO(\CIC1Cos/n11579 ));
  CIC1Cos_SLICE_954 \CIC1Cos/SLICE_954 ( .B1(\CIC1Cos/d_d6_60 ), 
    .A1(\CIC1Cos/d6_60 ), .B0(\CIC1Cos/d_d6_59 ), .A0(\CIC1Cos/d6_59 ), 
    .FCI(\CIC1Cos/n11577 ), .F0(\CIC1Cos/n6266 ), .F1(\CIC1Cos/n6265 ), 
    .FCO(\CIC1Cos/n11578 ));
  CIC1Cos_SLICE_955 \CIC1Cos/SLICE_955 ( .B1(\CIC1Cos/d_d6_58 ), 
    .A1(\CIC1Cos/d6_58 ), .B0(\CIC1Cos/d_d6_57 ), .A0(\CIC1Cos/d6_57 ), 
    .FCI(\CIC1Cos/n11576 ), .F0(\CIC1Cos/n6268 ), .F1(\CIC1Cos/n6267 ), 
    .FCO(\CIC1Cos/n11577 ));
  CIC1Cos_SLICE_956 \CIC1Cos/SLICE_956 ( .B1(\CIC1Cos/d_d6_56 ), 
    .A1(\CIC1Cos/d6_56 ), .B0(\CIC1Cos/d_d6_55 ), .A0(\CIC1Cos/d6_55 ), 
    .FCI(\CIC1Cos/n11575 ), .F0(\CIC1Cos/n6270 ), .F1(\CIC1Cos/n6269 ), 
    .FCO(\CIC1Cos/n11576 ));
  CIC1Cos_SLICE_957 \CIC1Cos/SLICE_957 ( .B1(\CIC1Cos/d_d6_54 ), 
    .A1(\CIC1Cos/d6_54 ), .B0(\CIC1Cos/d_d6_53 ), .A0(\CIC1Cos/d6_53 ), 
    .FCI(\CIC1Cos/n11574 ), .F0(\CIC1Cos/n6272 ), .F1(\CIC1Cos/n6271 ), 
    .FCO(\CIC1Cos/n11575 ));
  CIC1Cos_SLICE_958 \CIC1Cos/SLICE_958 ( .B1(\CIC1Cos/d_d6_52 ), 
    .A1(\CIC1Cos/d6_52 ), .B0(\CIC1Cos/d_d6_51 ), .A0(\CIC1Cos/d6_51 ), 
    .FCI(\CIC1Cos/n11573 ), .F0(\CIC1Cos/n6274 ), .F1(\CIC1Cos/n6273 ), 
    .FCO(\CIC1Cos/n11574 ));
  CIC1Cos_SLICE_959 \CIC1Cos/SLICE_959 ( .B1(\CIC1Cos/d_d6_50 ), 
    .A1(\CIC1Cos/d6_50 ), .B0(\CIC1Cos/d_d6_49 ), .A0(\CIC1Cos/d6_49 ), 
    .FCI(\CIC1Cos/n11572 ), .F0(\CIC1Cos/n6276 ), .F1(\CIC1Cos/n6275 ), 
    .FCO(\CIC1Cos/n11573 ));
  CIC1Cos_SLICE_960 \CIC1Cos/SLICE_960 ( .B1(\CIC1Cos/d_d6_48 ), 
    .A1(\CIC1Cos/d6_48 ), .B0(\CIC1Cos/d_d6_47 ), .A0(\CIC1Cos/d6_47 ), 
    .FCI(\CIC1Cos/n11571 ), .F0(\CIC1Cos/n6278 ), .F1(\CIC1Cos/n6277 ), 
    .FCO(\CIC1Cos/n11572 ));
  CIC1Cos_SLICE_961 \CIC1Cos/SLICE_961 ( .B1(\CIC1Cos/d_d6_46 ), 
    .A1(\CIC1Cos/d6_46 ), .B0(\CIC1Cos/d_d6_45 ), .A0(\CIC1Cos/d6_45 ), 
    .FCI(\CIC1Cos/n11570 ), .F0(\CIC1Cos/n6280 ), .F1(\CIC1Cos/n6279 ), 
    .FCO(\CIC1Cos/n11571 ));
  CIC1Cos_SLICE_962 \CIC1Cos/SLICE_962 ( .B1(\CIC1Cos/d_d6_44 ), 
    .A1(\CIC1Cos/d6_44 ), .B0(\CIC1Cos/d_d6_43 ), .A0(\CIC1Cos/d6_43 ), 
    .FCI(\CIC1Cos/n11569 ), .F0(\CIC1Cos/n6282 ), .F1(\CIC1Cos/n6281 ), 
    .FCO(\CIC1Cos/n11570 ));
  CIC1Cos_SLICE_963 \CIC1Cos/SLICE_963 ( .B1(\CIC1Cos/d_d6_42 ), 
    .A1(\CIC1Cos/d6_42 ), .B0(\CIC1Cos/d_d6_41 ), .A0(\CIC1Cos/d6_41 ), 
    .FCI(\CIC1Cos/n11568 ), .F0(\CIC1Cos/n6284 ), .F1(\CIC1Cos/n6283 ), 
    .FCO(\CIC1Cos/n11569 ));
  CIC1Cos_SLICE_964 \CIC1Cos/SLICE_964 ( .B1(\CIC1Cos/d_d6_40 ), 
    .A1(\CIC1Cos/d6_40 ), .B0(\CIC1Cos/d_d6_39 ), .A0(\CIC1Cos/d6_39 ), 
    .FCI(\CIC1Cos/n11567 ), .F0(\CIC1Cos/n6286 ), .F1(\CIC1Cos/n6285 ), 
    .FCO(\CIC1Cos/n11568 ));
  CIC1Cos_SLICE_965 \CIC1Cos/SLICE_965 ( .B1(\CIC1Cos/d_d6_38 ), 
    .A1(\CIC1Cos/d6_38 ), .B0(\CIC1Cos/d_d6_37 ), .A0(\CIC1Cos/d6_37 ), 
    .FCI(\CIC1Cos/n11566 ), .F0(\CIC1Cos/n6288 ), .F1(\CIC1Cos/n6287 ), 
    .FCO(\CIC1Cos/n11567 ));
  CIC1Cos_SLICE_966 \CIC1Cos/SLICE_966 ( .B1(\CIC1Cos/d_d6_36 ), 
    .A1(\CIC1Cos/d6_36 ), .F1(\CIC1Cos/n6289 ), .FCO(\CIC1Cos/n11566 ));
  CIC1Cos_SLICE_967 \CIC1Cos/SLICE_967 ( .D1(\CIC1Cos/d6_71 ), 
    .C1(\CIC1Cos/n6254 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_71 ), 
    .D0(\CIC1Cos/d6_70 ), .C0(\CIC1Cos/n6255 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_70 ), .DI1(\CIC1Cos/d7_71_N_1531_71 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_70 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11564 ), .F0(\CIC1Cos/d7_71_N_1531_70 ), 
    .Q0(\CIC1Cos/d7_70 ), .F1(\CIC1Cos/d7_71_N_1531_71 ), .Q1(\CIC1Cos/d7_71 ));
  CIC1Cos_SLICE_968 \CIC1Cos/SLICE_968 ( .D1(\CIC1Cos/d6_69 ), 
    .C1(\CIC1Cos/n6256 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_69 ), 
    .D0(\CIC1Cos/d6_68 ), .C0(\CIC1Cos/n6257 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_68 ), .DI1(\CIC1Cos/d7_71_N_1531_69 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_68 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11563 ), .F0(\CIC1Cos/d7_71_N_1531_68 ), 
    .Q0(\CIC1Cos/d7_68 ), .F1(\CIC1Cos/d7_71_N_1531_69 ), .Q1(\CIC1Cos/d7_69 ), 
    .FCO(\CIC1Cos/n11564 ));
  CIC1Cos_SLICE_969 \CIC1Cos/SLICE_969 ( .D1(\CIC1Cos/d6_67 ), 
    .C1(\CIC1Cos/n6258 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_67 ), 
    .D0(\CIC1Cos/d6_66 ), .C0(\CIC1Cos/n6259 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_66 ), .DI1(\CIC1Cos/d7_71_N_1531_67 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_66 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11562 ), .F0(\CIC1Cos/d7_71_N_1531_66 ), 
    .Q0(\CIC1Cos/d7_66 ), .F1(\CIC1Cos/d7_71_N_1531_67 ), .Q1(\CIC1Cos/d7_67 ), 
    .FCO(\CIC1Cos/n11563 ));
  CIC1Cos_SLICE_970 \CIC1Cos/SLICE_970 ( .D1(\CIC1Cos/d6_65 ), 
    .C1(\CIC1Cos/n6260 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_65 ), 
    .D0(\CIC1Cos/d6_64 ), .C0(\CIC1Cos/n6261 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_64 ), .DI1(\CIC1Cos/d7_71_N_1531_65 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_64 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11561 ), .F0(\CIC1Cos/d7_71_N_1531_64 ), 
    .Q0(\CIC1Cos/d7_64 ), .F1(\CIC1Cos/d7_71_N_1531_65 ), .Q1(\CIC1Cos/d7_65 ), 
    .FCO(\CIC1Cos/n11562 ));
  CIC1Cos_SLICE_971 \CIC1Cos/SLICE_971 ( .D1(\CIC1Cos/d6_63 ), 
    .C1(\CIC1Cos/n6262 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_63 ), 
    .D0(\CIC1Cos/d6_62 ), .C0(\CIC1Cos/n6263 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_62 ), .DI1(\CIC1Cos/d7_71_N_1531_63 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_62 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11560 ), .F0(\CIC1Cos/d7_71_N_1531_62 ), 
    .Q0(\CIC1Cos/d7_62 ), .F1(\CIC1Cos/d7_71_N_1531_63 ), .Q1(\CIC1Cos/d7_63 ), 
    .FCO(\CIC1Cos/n11561 ));
  CIC1Cos_SLICE_972 \CIC1Cos/SLICE_972 ( .D1(\CIC1Cos/d6_61 ), 
    .C1(\CIC1Cos/n6264 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_61 ), 
    .D0(\CIC1Cos/d6_60 ), .C0(\CIC1Cos/n6265 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_60 ), .DI1(\CIC1Cos/d7_71_N_1531_61 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_60 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11559 ), .F0(\CIC1Cos/d7_71_N_1531_60 ), 
    .Q0(\CIC1Cos/d7_60 ), .F1(\CIC1Cos/d7_71_N_1531_61 ), .Q1(\CIC1Cos/d7_61 ), 
    .FCO(\CIC1Cos/n11560 ));
  CIC1Cos_SLICE_973 \CIC1Cos/SLICE_973 ( .D1(\CIC1Cos/d6_59 ), 
    .C1(\CIC1Cos/n6266 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_59 ), 
    .D0(\CIC1Cos/d6_58 ), .C0(\CIC1Cos/n6267 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_58 ), .DI1(\CIC1Cos/d7_71_N_1531_59 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_58 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11558 ), .F0(\CIC1Cos/d7_71_N_1531_58 ), 
    .Q0(\CIC1Cos/d7_58 ), .F1(\CIC1Cos/d7_71_N_1531_59 ), .Q1(\CIC1Cos/d7_59 ), 
    .FCO(\CIC1Cos/n11559 ));
  CIC1Cos_SLICE_974 \CIC1Cos/SLICE_974 ( .D1(\CIC1Cos/d6_57 ), 
    .C1(\CIC1Cos/n6268 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_57 ), 
    .D0(\CIC1Cos/d6_56 ), .C0(\CIC1Cos/n6269 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_56 ), .DI1(\CIC1Cos/d7_71_N_1531_57 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_56 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11557 ), .F0(\CIC1Cos/d7_71_N_1531_56 ), 
    .Q0(\CIC1Cos/d7_56 ), .F1(\CIC1Cos/d7_71_N_1531_57 ), .Q1(\CIC1Cos/d7_57 ), 
    .FCO(\CIC1Cos/n11558 ));
  CIC1Cos_SLICE_975 \CIC1Cos/SLICE_975 ( .D1(\CIC1Cos/d6_55 ), 
    .C1(\CIC1Cos/n6270 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_55 ), 
    .D0(\CIC1Cos/d6_54 ), .C0(\CIC1Cos/n6271 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_54 ), .DI1(\CIC1Cos/d7_71_N_1531_55 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_54 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11556 ), .F0(\CIC1Cos/d7_71_N_1531_54 ), 
    .Q0(\CIC1Cos/d7_54 ), .F1(\CIC1Cos/d7_71_N_1531_55 ), .Q1(\CIC1Cos/d7_55 ), 
    .FCO(\CIC1Cos/n11557 ));
  CIC1Cos_SLICE_976 \CIC1Cos/SLICE_976 ( .D1(\CIC1Cos/d6_53 ), 
    .C1(\CIC1Cos/n6272 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_53 ), 
    .D0(\CIC1Cos/d6_52 ), .C0(\CIC1Cos/n6273 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_52 ), .DI1(\CIC1Cos/d7_71_N_1531_53 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_52 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11555 ), .F0(\CIC1Cos/d7_71_N_1531_52 ), 
    .Q0(\CIC1Cos/d7_52 ), .F1(\CIC1Cos/d7_71_N_1531_53 ), .Q1(\CIC1Cos/d7_53 ), 
    .FCO(\CIC1Cos/n11556 ));
  CIC1Cos_SLICE_977 \CIC1Cos/SLICE_977 ( .D1(\CIC1Cos/d6_51 ), 
    .C1(\CIC1Cos/n6274 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_51 ), 
    .D0(\CIC1Cos/d6_50 ), .C0(\CIC1Cos/n6275 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_50 ), .DI1(\CIC1Cos/d7_71_N_1531_51 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_50 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11554 ), .F0(\CIC1Cos/d7_71_N_1531_50 ), 
    .Q0(\CIC1Cos/d7_50 ), .F1(\CIC1Cos/d7_71_N_1531_51 ), .Q1(\CIC1Cos/d7_51 ), 
    .FCO(\CIC1Cos/n11555 ));
  CIC1Cos_SLICE_978 \CIC1Cos/SLICE_978 ( .D1(\CIC1Cos/d6_49 ), 
    .C1(\CIC1Cos/n6276 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_49 ), 
    .D0(\CIC1Cos/d6_48 ), .C0(\CIC1Cos/n6277 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_48 ), .DI1(\CIC1Cos/d7_71_N_1531_49 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_48 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11553 ), .F0(\CIC1Cos/d7_71_N_1531_48 ), 
    .Q0(\CIC1Cos/d7_48 ), .F1(\CIC1Cos/d7_71_N_1531_49 ), .Q1(\CIC1Cos/d7_49 ), 
    .FCO(\CIC1Cos/n11554 ));
  CIC1Cos_SLICE_979 \CIC1Cos/SLICE_979 ( .D1(\CIC1Cos/d6_47 ), 
    .C1(\CIC1Cos/n6278 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_47 ), 
    .D0(\CIC1Cos/d6_46 ), .C0(\CIC1Cos/n6279 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_46 ), .DI1(\CIC1Cos/d7_71_N_1531_47 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_46 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11552 ), .F0(\CIC1Cos/d7_71_N_1531_46 ), 
    .Q0(\CIC1Cos/d7_46 ), .F1(\CIC1Cos/d7_71_N_1531_47 ), .Q1(\CIC1Cos/d7_47 ), 
    .FCO(\CIC1Cos/n11553 ));
  CIC1Cos_SLICE_980 \CIC1Cos/SLICE_980 ( .D1(\CIC1Cos/d6_45 ), 
    .C1(\CIC1Cos/n6280 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_45 ), 
    .D0(\CIC1Cos/d6_44 ), .C0(\CIC1Cos/n6281 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_44 ), .DI1(\CIC1Cos/d7_71_N_1531_45 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_44 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11551 ), .F0(\CIC1Cos/d7_71_N_1531_44 ), 
    .Q0(\CIC1Cos/d7_44 ), .F1(\CIC1Cos/d7_71_N_1531_45 ), .Q1(\CIC1Cos/d7_45 ), 
    .FCO(\CIC1Cos/n11552 ));
  CIC1Cos_SLICE_981 \CIC1Cos/SLICE_981 ( .D1(\CIC1Cos/d6_43 ), 
    .C1(\CIC1Cos/n6282 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_43 ), 
    .D0(\CIC1Cos/d6_42 ), .C0(\CIC1Cos/n6283 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_42 ), .DI1(\CIC1Cos/d7_71_N_1531_43 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_42 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11550 ), .F0(\CIC1Cos/d7_71_N_1531_42 ), 
    .Q0(\CIC1Cos/d7_42 ), .F1(\CIC1Cos/d7_71_N_1531_43 ), .Q1(\CIC1Cos/d7_43 ), 
    .FCO(\CIC1Cos/n11551 ));
  CIC1Cos_SLICE_982 \CIC1Cos/SLICE_982 ( .D1(\CIC1Cos/d6_41 ), 
    .C1(\CIC1Cos/n6284 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_41 ), 
    .D0(\CIC1Cos/d6_40 ), .C0(\CIC1Cos/n6285 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_40 ), .DI1(\CIC1Cos/d7_71_N_1531_41 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_40 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11549 ), .F0(\CIC1Cos/d7_71_N_1531_40 ), 
    .Q0(\CIC1Cos/d7_40 ), .F1(\CIC1Cos/d7_71_N_1531_41 ), .Q1(\CIC1Cos/d7_41 ), 
    .FCO(\CIC1Cos/n11550 ));
  CIC1Cos_SLICE_983 \CIC1Cos/SLICE_983 ( .D1(\CIC1Cos/d6_39 ), 
    .C1(\CIC1Cos/n6286 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_39 ), 
    .D0(\CIC1Cos/d6_38 ), .C0(\CIC1Cos/n6287 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_38 ), .DI1(\CIC1Cos/d7_71_N_1531_39 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_38 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11548 ), .F0(\CIC1Cos/d7_71_N_1531_38 ), 
    .Q0(\CIC1Cos/d7_38 ), .F1(\CIC1Cos/d7_71_N_1531_39 ), .Q1(\CIC1Cos/d7_39 ), 
    .FCO(\CIC1Cos/n11549 ));
  CIC1Cos_SLICE_984 \CIC1Cos/SLICE_984 ( .D1(\CIC1Cos/d6_37 ), 
    .C1(\CIC1Cos/n6288 ), .B1(\CIC1Cos/n6252 ), .A1(\CIC1Cos/d_d6_37 ), 
    .D0(\CIC1Cos/d6_36 ), .C0(\CIC1Cos/n6289 ), .B0(\CIC1Cos/n6252 ), 
    .A0(\CIC1Cos/d_d6_36 ), .DI1(\CIC1Cos/d7_71_N_1531_37 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_36 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11547 ), .F0(\CIC1Cos/d7_71_N_1531_36 ), 
    .Q0(\CIC1Cos/d7_36 ), .F1(\CIC1Cos/d7_71_N_1531_37 ), .Q1(\CIC1Cos/d7_37 ), 
    .FCO(\CIC1Cos/n11548 ));
  CIC1Cos_SLICE_985 \CIC1Cos/SLICE_985 ( .A1(\CIC1Cos/n6252 ), 
    .FCO(\CIC1Cos/n11547 ));
  CIC1Cos_SLICE_986 \CIC1Cos/SLICE_986 ( .B0(\CIC1Cos/d_d7_71 ), 
    .A0(\CIC1Cos/d7_71 ), .FCI(\CIC1Cos/n11543 ), .F0(\CIC1Cos/n6406 ));
  CIC1Cos_SLICE_987 \CIC1Cos/SLICE_987 ( .B1(\CIC1Cos/d_d7_70 ), 
    .A1(\CIC1Cos/d7_70 ), .B0(\CIC1Cos/d_d7_69 ), .A0(\CIC1Cos/d7_69 ), 
    .FCI(\CIC1Cos/n11542 ), .F0(\CIC1Cos/n6408 ), .F1(\CIC1Cos/n6407 ), 
    .FCO(\CIC1Cos/n11543 ));
  CIC1Cos_SLICE_988 \CIC1Cos/SLICE_988 ( .B1(\CIC1Cos/d_d7_68 ), 
    .A1(\CIC1Cos/d7_68 ), .B0(\CIC1Cos/d_d7_67 ), .A0(\CIC1Cos/d7_67 ), 
    .FCI(\CIC1Cos/n11541 ), .F0(\CIC1Cos/n6410 ), .F1(\CIC1Cos/n6409 ), 
    .FCO(\CIC1Cos/n11542 ));
  CIC1Cos_SLICE_989 \CIC1Cos/SLICE_989 ( .B1(\CIC1Cos/d_d7_66 ), 
    .A1(\CIC1Cos/d7_66 ), .B0(\CIC1Cos/d_d7_65 ), .A0(\CIC1Cos/d7_65 ), 
    .FCI(\CIC1Cos/n11540 ), .F0(\CIC1Cos/n6412 ), .F1(\CIC1Cos/n6411 ), 
    .FCO(\CIC1Cos/n11541 ));
  CIC1Cos_SLICE_990 \CIC1Cos/SLICE_990 ( .B1(\CIC1Cos/d_d7_64 ), 
    .A1(\CIC1Cos/d7_64 ), .B0(\CIC1Cos/d_d7_63 ), .A0(\CIC1Cos/d7_63 ), 
    .FCI(\CIC1Cos/n11539 ), .F0(\CIC1Cos/n6414 ), .F1(\CIC1Cos/n6413 ), 
    .FCO(\CIC1Cos/n11540 ));
  CIC1Cos_SLICE_991 \CIC1Cos/SLICE_991 ( .B1(\CIC1Cos/d_d7_62 ), 
    .A1(\CIC1Cos/d7_62 ), .B0(\CIC1Cos/d_d7_61 ), .A0(\CIC1Cos/d7_61 ), 
    .FCI(\CIC1Cos/n11538 ), .F0(\CIC1Cos/n6416 ), .F1(\CIC1Cos/n6415 ), 
    .FCO(\CIC1Cos/n11539 ));
  CIC1Cos_SLICE_992 \CIC1Cos/SLICE_992 ( .B1(\CIC1Cos/d_d7_60 ), 
    .A1(\CIC1Cos/d7_60 ), .B0(\CIC1Cos/d_d7_59 ), .A0(\CIC1Cos/d7_59 ), 
    .FCI(\CIC1Cos/n11537 ), .F0(\CIC1Cos/n6418 ), .F1(\CIC1Cos/n6417 ), 
    .FCO(\CIC1Cos/n11538 ));
  CIC1Cos_SLICE_993 \CIC1Cos/SLICE_993 ( .B1(\CIC1Cos/d_d7_58 ), 
    .A1(\CIC1Cos/d7_58 ), .B0(\CIC1Cos/d_d7_57 ), .A0(\CIC1Cos/d7_57 ), 
    .FCI(\CIC1Cos/n11536 ), .F0(\CIC1Cos/n6420 ), .F1(\CIC1Cos/n6419 ), 
    .FCO(\CIC1Cos/n11537 ));
  CIC1Cos_SLICE_994 \CIC1Cos/SLICE_994 ( .B1(\CIC1Cos/d_d7_56 ), 
    .A1(\CIC1Cos/d7_56 ), .B0(\CIC1Cos/d_d7_55 ), .A0(\CIC1Cos/d7_55 ), 
    .FCI(\CIC1Cos/n11535 ), .F0(\CIC1Cos/n6422 ), .F1(\CIC1Cos/n6421 ), 
    .FCO(\CIC1Cos/n11536 ));
  CIC1Cos_SLICE_995 \CIC1Cos/SLICE_995 ( .B1(\CIC1Cos/d_d7_54 ), 
    .A1(\CIC1Cos/d7_54 ), .B0(\CIC1Cos/d_d7_53 ), .A0(\CIC1Cos/d7_53 ), 
    .FCI(\CIC1Cos/n11534 ), .F0(\CIC1Cos/n6424 ), .F1(\CIC1Cos/n6423 ), 
    .FCO(\CIC1Cos/n11535 ));
  CIC1Cos_SLICE_996 \CIC1Cos/SLICE_996 ( .B1(\CIC1Cos/d_d7_52 ), 
    .A1(\CIC1Cos/d7_52 ), .B0(\CIC1Cos/d_d7_51 ), .A0(\CIC1Cos/d7_51 ), 
    .FCI(\CIC1Cos/n11533 ), .F0(\CIC1Cos/n6426 ), .F1(\CIC1Cos/n6425 ), 
    .FCO(\CIC1Cos/n11534 ));
  CIC1Cos_SLICE_997 \CIC1Cos/SLICE_997 ( .B1(\CIC1Cos/d_d7_50 ), 
    .A1(\CIC1Cos/d7_50 ), .B0(\CIC1Cos/d_d7_49 ), .A0(\CIC1Cos/d7_49 ), 
    .FCI(\CIC1Cos/n11532 ), .F0(\CIC1Cos/n6428 ), .F1(\CIC1Cos/n6427 ), 
    .FCO(\CIC1Cos/n11533 ));
  CIC1Cos_SLICE_998 \CIC1Cos/SLICE_998 ( .B1(\CIC1Cos/d_d7_48 ), 
    .A1(\CIC1Cos/d7_48 ), .B0(\CIC1Cos/d_d7_47 ), .A0(\CIC1Cos/d7_47 ), 
    .FCI(\CIC1Cos/n11531 ), .F0(\CIC1Cos/n6430 ), .F1(\CIC1Cos/n6429 ), 
    .FCO(\CIC1Cos/n11532 ));
  CIC1Cos_SLICE_999 \CIC1Cos/SLICE_999 ( .B1(\CIC1Cos/d_d7_46 ), 
    .A1(\CIC1Cos/d7_46 ), .B0(\CIC1Cos/d_d7_45 ), .A0(\CIC1Cos/d7_45 ), 
    .FCI(\CIC1Cos/n11530 ), .F0(\CIC1Cos/n6432 ), .F1(\CIC1Cos/n6431 ), 
    .FCO(\CIC1Cos/n11531 ));
  CIC1Cos_SLICE_1000 \CIC1Cos/SLICE_1000 ( .B1(\CIC1Cos/d_d7_44 ), 
    .A1(\CIC1Cos/d7_44 ), .B0(\CIC1Cos/d_d7_43 ), .A0(\CIC1Cos/d7_43 ), 
    .FCI(\CIC1Cos/n11529 ), .F0(\CIC1Cos/n6434 ), .F1(\CIC1Cos/n6433 ), 
    .FCO(\CIC1Cos/n11530 ));
  CIC1Cos_SLICE_1001 \CIC1Cos/SLICE_1001 ( .B1(\CIC1Cos/d_d7_42 ), 
    .A1(\CIC1Cos/d7_42 ), .B0(\CIC1Cos/d_d7_41 ), .A0(\CIC1Cos/d7_41 ), 
    .FCI(\CIC1Cos/n11528 ), .F0(\CIC1Cos/n6436 ), .F1(\CIC1Cos/n6435 ), 
    .FCO(\CIC1Cos/n11529 ));
  CIC1Cos_SLICE_1002 \CIC1Cos/SLICE_1002 ( .B1(\CIC1Cos/d_d7_40 ), 
    .A1(\CIC1Cos/d7_40 ), .B0(\CIC1Cos/d_d7_39 ), .A0(\CIC1Cos/d7_39 ), 
    .FCI(\CIC1Cos/n11527 ), .F0(\CIC1Cos/n6438 ), .F1(\CIC1Cos/n6437 ), 
    .FCO(\CIC1Cos/n11528 ));
  CIC1Cos_SLICE_1003 \CIC1Cos/SLICE_1003 ( .B1(\CIC1Cos/d_d7_38 ), 
    .A1(\CIC1Cos/d7_38 ), .B0(\CIC1Cos/d_d7_37 ), .A0(\CIC1Cos/d7_37 ), 
    .FCI(\CIC1Cos/n11526 ), .F0(\CIC1Cos/n6440 ), .F1(\CIC1Cos/n6439 ), 
    .FCO(\CIC1Cos/n11527 ));
  CIC1Cos_SLICE_1004 \CIC1Cos/SLICE_1004 ( .B1(\CIC1Cos/d_d7_36 ), 
    .A1(\CIC1Cos/d7_36 ), .F1(\CIC1Cos/n6441 ), .FCO(\CIC1Cos/n11526 ));
  CIC1Cos_SLICE_1005 \CIC1Cos/SLICE_1005 ( .D1(\CIC1Cos/d7_71 ), 
    .C1(\CIC1Cos/n6406 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_71 ), 
    .D0(\CIC1Cos/d7_70 ), .C0(\CIC1Cos/n6407 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_70 ), .DI1(\CIC1Cos/d8_71_N_1603_71 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_70 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11524 ), .F0(\CIC1Cos/d8_71_N_1603_70 ), 
    .Q0(\CIC1Cos/d8_70 ), .F1(\CIC1Cos/d8_71_N_1603_71 ), .Q1(\CIC1Cos/d8_71 ));
  CIC1Cos_SLICE_1006 \CIC1Cos/SLICE_1006 ( .D1(\CIC1Cos/d7_69 ), 
    .C1(\CIC1Cos/n6408 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_69 ), 
    .D0(\CIC1Cos/d7_68 ), .C0(\CIC1Cos/n6409 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_68 ), .DI1(\CIC1Cos/d8_71_N_1603_69 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_68 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11523 ), .F0(\CIC1Cos/d8_71_N_1603_68 ), 
    .Q0(\CIC1Cos/d8_68 ), .F1(\CIC1Cos/d8_71_N_1603_69 ), .Q1(\CIC1Cos/d8_69 ), 
    .FCO(\CIC1Cos/n11524 ));
  CIC1Cos_SLICE_1007 \CIC1Cos/SLICE_1007 ( .D1(\CIC1Cos/d7_67 ), 
    .C1(\CIC1Cos/n6410 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_67 ), 
    .D0(\CIC1Cos/d7_66 ), .C0(\CIC1Cos/n6411 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_66 ), .DI1(\CIC1Cos/d8_71_N_1603_67 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_66 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11522 ), .F0(\CIC1Cos/d8_71_N_1603_66 ), 
    .Q0(\CIC1Cos/d8_66 ), .F1(\CIC1Cos/d8_71_N_1603_67 ), .Q1(\CIC1Cos/d8_67 ), 
    .FCO(\CIC1Cos/n11523 ));
  CIC1Cos_SLICE_1008 \CIC1Cos/SLICE_1008 ( .D1(\CIC1Cos/d7_65 ), 
    .C1(\CIC1Cos/n6412 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_65 ), 
    .D0(\CIC1Cos/d7_64 ), .C0(\CIC1Cos/n6413 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_64 ), .DI1(\CIC1Cos/d8_71_N_1603_65 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_64 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11521 ), .F0(\CIC1Cos/d8_71_N_1603_64 ), 
    .Q0(\CIC1Cos/d8_64 ), .F1(\CIC1Cos/d8_71_N_1603_65 ), .Q1(\CIC1Cos/d8_65 ), 
    .FCO(\CIC1Cos/n11522 ));
  CIC1Cos_SLICE_1009 \CIC1Cos/SLICE_1009 ( .D1(\CIC1Cos/d7_63 ), 
    .C1(\CIC1Cos/n6414 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_63 ), 
    .D0(\CIC1Cos/d7_62 ), .C0(\CIC1Cos/n6415 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_62 ), .DI1(\CIC1Cos/d8_71_N_1603_63 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_62 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11520 ), .F0(\CIC1Cos/d8_71_N_1603_62 ), 
    .Q0(\CIC1Cos/d8_62 ), .F1(\CIC1Cos/d8_71_N_1603_63 ), .Q1(\CIC1Cos/d8_63 ), 
    .FCO(\CIC1Cos/n11521 ));
  CIC1Cos_SLICE_1010 \CIC1Cos/SLICE_1010 ( .D1(\CIC1Cos/d7_61 ), 
    .C1(\CIC1Cos/n6416 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_61 ), 
    .D0(\CIC1Cos/d7_60 ), .C0(\CIC1Cos/n6417 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_60 ), .DI1(\CIC1Cos/d8_71_N_1603_61 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_60 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11519 ), .F0(\CIC1Cos/d8_71_N_1603_60 ), 
    .Q0(\CIC1Cos/d8_60 ), .F1(\CIC1Cos/d8_71_N_1603_61 ), .Q1(\CIC1Cos/d8_61 ), 
    .FCO(\CIC1Cos/n11520 ));
  CIC1Cos_SLICE_1011 \CIC1Cos/SLICE_1011 ( .D1(\CIC1Cos/d7_59 ), 
    .C1(\CIC1Cos/n6418 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_59 ), 
    .D0(\CIC1Cos/d7_58 ), .C0(\CIC1Cos/n6419 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_58 ), .DI1(\CIC1Cos/d8_71_N_1603_59 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_58 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11518 ), .F0(\CIC1Cos/d8_71_N_1603_58 ), 
    .Q0(\CIC1Cos/d8_58 ), .F1(\CIC1Cos/d8_71_N_1603_59 ), .Q1(\CIC1Cos/d8_59 ), 
    .FCO(\CIC1Cos/n11519 ));
  CIC1Cos_SLICE_1012 \CIC1Cos/SLICE_1012 ( .D1(\CIC1Cos/d7_57 ), 
    .C1(\CIC1Cos/n6420 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_57 ), 
    .D0(\CIC1Cos/d7_56 ), .C0(\CIC1Cos/n6421 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_56 ), .DI1(\CIC1Cos/d8_71_N_1603_57 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_56 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11517 ), .F0(\CIC1Cos/d8_71_N_1603_56 ), 
    .Q0(\CIC1Cos/d8_56 ), .F1(\CIC1Cos/d8_71_N_1603_57 ), .Q1(\CIC1Cos/d8_57 ), 
    .FCO(\CIC1Cos/n11518 ));
  CIC1Cos_SLICE_1013 \CIC1Cos/SLICE_1013 ( .D1(\CIC1Cos/d7_55 ), 
    .C1(\CIC1Cos/n6422 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_55 ), 
    .D0(\CIC1Cos/d7_54 ), .C0(\CIC1Cos/n6423 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_54 ), .DI1(\CIC1Cos/d8_71_N_1603_55 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_54 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11516 ), .F0(\CIC1Cos/d8_71_N_1603_54 ), 
    .Q0(\CIC1Cos/d8_54 ), .F1(\CIC1Cos/d8_71_N_1603_55 ), .Q1(\CIC1Cos/d8_55 ), 
    .FCO(\CIC1Cos/n11517 ));
  CIC1Cos_SLICE_1014 \CIC1Cos/SLICE_1014 ( .D1(\CIC1Cos/d7_53 ), 
    .C1(\CIC1Cos/n6424 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_53 ), 
    .D0(\CIC1Cos/d7_52 ), .C0(\CIC1Cos/n6425 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_52 ), .DI1(\CIC1Cos/d8_71_N_1603_53 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_52 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11515 ), .F0(\CIC1Cos/d8_71_N_1603_52 ), 
    .Q0(\CIC1Cos/d8_52 ), .F1(\CIC1Cos/d8_71_N_1603_53 ), .Q1(\CIC1Cos/d8_53 ), 
    .FCO(\CIC1Cos/n11516 ));
  CIC1Cos_SLICE_1015 \CIC1Cos/SLICE_1015 ( .D1(\CIC1Cos/d7_51 ), 
    .C1(\CIC1Cos/n6426 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_51 ), 
    .D0(\CIC1Cos/d7_50 ), .C0(\CIC1Cos/n6427 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_50 ), .DI1(\CIC1Cos/d8_71_N_1603_51 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_50 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11514 ), .F0(\CIC1Cos/d8_71_N_1603_50 ), 
    .Q0(\CIC1Cos/d8_50 ), .F1(\CIC1Cos/d8_71_N_1603_51 ), .Q1(\CIC1Cos/d8_51 ), 
    .FCO(\CIC1Cos/n11515 ));
  CIC1Cos_SLICE_1016 \CIC1Cos/SLICE_1016 ( .D1(\CIC1Cos/d7_49 ), 
    .C1(\CIC1Cos/n6428 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_49 ), 
    .D0(\CIC1Cos/d7_48 ), .C0(\CIC1Cos/n6429 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_48 ), .DI1(\CIC1Cos/d8_71_N_1603_49 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_48 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11513 ), .F0(\CIC1Cos/d8_71_N_1603_48 ), 
    .Q0(\CIC1Cos/d8_48 ), .F1(\CIC1Cos/d8_71_N_1603_49 ), .Q1(\CIC1Cos/d8_49 ), 
    .FCO(\CIC1Cos/n11514 ));
  CIC1Cos_SLICE_1017 \CIC1Cos/SLICE_1017 ( .D1(\CIC1Cos/d7_47 ), 
    .C1(\CIC1Cos/n6430 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_47 ), 
    .D0(\CIC1Cos/d7_46 ), .C0(\CIC1Cos/n6431 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_46 ), .DI1(\CIC1Cos/d8_71_N_1603_47 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_46 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11512 ), .F0(\CIC1Cos/d8_71_N_1603_46 ), 
    .Q0(\CIC1Cos/d8_46 ), .F1(\CIC1Cos/d8_71_N_1603_47 ), .Q1(\CIC1Cos/d8_47 ), 
    .FCO(\CIC1Cos/n11513 ));
  CIC1Cos_SLICE_1018 \CIC1Cos/SLICE_1018 ( .D1(\CIC1Cos/d7_45 ), 
    .C1(\CIC1Cos/n6432 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_45 ), 
    .D0(\CIC1Cos/d7_44 ), .C0(\CIC1Cos/n6433 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_44 ), .DI1(\CIC1Cos/d8_71_N_1603_45 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_44 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11511 ), .F0(\CIC1Cos/d8_71_N_1603_44 ), 
    .Q0(\CIC1Cos/d8_44 ), .F1(\CIC1Cos/d8_71_N_1603_45 ), .Q1(\CIC1Cos/d8_45 ), 
    .FCO(\CIC1Cos/n11512 ));
  CIC1Cos_SLICE_1019 \CIC1Cos/SLICE_1019 ( .D1(\CIC1Cos/d7_43 ), 
    .C1(\CIC1Cos/n6434 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_43 ), 
    .D0(\CIC1Cos/d7_42 ), .C0(\CIC1Cos/n6435 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_42 ), .DI1(\CIC1Cos/d8_71_N_1603_43 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_42 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11510 ), .F0(\CIC1Cos/d8_71_N_1603_42 ), 
    .Q0(\CIC1Cos/d8_42 ), .F1(\CIC1Cos/d8_71_N_1603_43 ), .Q1(\CIC1Cos/d8_43 ), 
    .FCO(\CIC1Cos/n11511 ));
  CIC1Cos_SLICE_1020 \CIC1Cos/SLICE_1020 ( .D1(\CIC1Cos/d7_41 ), 
    .C1(\CIC1Cos/n6436 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_41 ), 
    .D0(\CIC1Cos/d7_40 ), .C0(\CIC1Cos/n6437 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_40 ), .DI1(\CIC1Cos/d8_71_N_1603_41 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_40 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11509 ), .F0(\CIC1Cos/d8_71_N_1603_40 ), 
    .Q0(\CIC1Cos/d8_40 ), .F1(\CIC1Cos/d8_71_N_1603_41 ), .Q1(\CIC1Cos/d8_41 ), 
    .FCO(\CIC1Cos/n11510 ));
  CIC1Cos_SLICE_1021 \CIC1Cos/SLICE_1021 ( .D1(\CIC1Cos/d7_39 ), 
    .C1(\CIC1Cos/n6438 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_39 ), 
    .D0(\CIC1Cos/d7_38 ), .C0(\CIC1Cos/n6439 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_38 ), .DI1(\CIC1Cos/d8_71_N_1603_39 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_38 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11508 ), .F0(\CIC1Cos/d8_71_N_1603_38 ), 
    .Q0(\CIC1Cos/d8_38 ), .F1(\CIC1Cos/d8_71_N_1603_39 ), .Q1(\CIC1Cos/d8_39 ), 
    .FCO(\CIC1Cos/n11509 ));
  CIC1Cos_SLICE_1022 \CIC1Cos/SLICE_1022 ( .D1(\CIC1Cos/d7_37 ), 
    .C1(\CIC1Cos/n6440 ), .B1(\CIC1Cos/n6404 ), .A1(\CIC1Cos/d_d7_37 ), 
    .D0(\CIC1Cos/d7_36 ), .C0(\CIC1Cos/n6441 ), .B0(\CIC1Cos/n6404 ), 
    .A0(\CIC1Cos/d_d7_36 ), .DI1(\CIC1Cos/d8_71_N_1603_37 ), 
    .DI0(\CIC1Cos/d8_71_N_1603_36 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11507 ), .F0(\CIC1Cos/d8_71_N_1603_36 ), 
    .Q0(\CIC1Cos/d8_36 ), .F1(\CIC1Cos/d8_71_N_1603_37 ), .Q1(\CIC1Cos/d8_37 ), 
    .FCO(\CIC1Cos/n11508 ));
  CIC1Cos_SLICE_1023 \CIC1Cos/SLICE_1023 ( .A1(\CIC1Cos/n6404 ), 
    .FCO(\CIC1Cos/n11507 ));
  CIC1Cos_SLICE_1024 \CIC1Cos/SLICE_1024 ( .B0(\CIC1Cos/d_d8_71 ), 
    .A0(\CIC1Cos/d8_71 ), .FCI(\CIC1Cos/n11503 ), .F0(\CIC1Cos/n6558 ));
  CIC1Cos_SLICE_1025 \CIC1Cos/SLICE_1025 ( .B1(\CIC1Cos/d_d8_70 ), 
    .A1(\CIC1Cos/d8_70 ), .B0(\CIC1Cos/d_d8_69 ), .A0(\CIC1Cos/d8_69 ), 
    .FCI(\CIC1Cos/n11502 ), .F0(\CIC1Cos/n6560 ), .F1(\CIC1Cos/n6559 ), 
    .FCO(\CIC1Cos/n11503 ));
  CIC1Cos_SLICE_1026 \CIC1Cos/SLICE_1026 ( .B1(\CIC1Cos/d_d8_68 ), 
    .A1(\CIC1Cos/d8_68 ), .B0(\CIC1Cos/d_d8_67 ), .A0(\CIC1Cos/d8_67 ), 
    .FCI(\CIC1Cos/n11501 ), .F0(\CIC1Cos/n6562 ), .F1(\CIC1Cos/n6561 ), 
    .FCO(\CIC1Cos/n11502 ));
  CIC1Cos_SLICE_1027 \CIC1Cos/SLICE_1027 ( .B1(\CIC1Cos/d_d8_66 ), 
    .A1(\CIC1Cos/d8_66 ), .B0(\CIC1Cos/d_d8_65 ), .A0(\CIC1Cos/d8_65 ), 
    .FCI(\CIC1Cos/n11500 ), .F0(\CIC1Cos/n6564 ), .F1(\CIC1Cos/n6563 ), 
    .FCO(\CIC1Cos/n11501 ));
  CIC1Cos_SLICE_1028 \CIC1Cos/SLICE_1028 ( .B1(\CIC1Cos/d_d8_64 ), 
    .A1(\CIC1Cos/d8_64 ), .B0(\CIC1Cos/d_d8_63 ), .A0(\CIC1Cos/d8_63 ), 
    .FCI(\CIC1Cos/n11499 ), .F0(\CIC1Cos/n6566 ), .F1(\CIC1Cos/n6565 ), 
    .FCO(\CIC1Cos/n11500 ));
  CIC1Cos_SLICE_1029 \CIC1Cos/SLICE_1029 ( .B1(\CIC1Cos/d_d8_62 ), 
    .A1(\CIC1Cos/d8_62 ), .B0(\CIC1Cos/d_d8_61 ), .A0(\CIC1Cos/d8_61 ), 
    .FCI(\CIC1Cos/n11498 ), .F0(\CIC1Cos/n6568 ), .F1(\CIC1Cos/n6567 ), 
    .FCO(\CIC1Cos/n11499 ));
  CIC1Cos_SLICE_1030 \CIC1Cos/SLICE_1030 ( .B1(\CIC1Cos/d_d8_60 ), 
    .A1(\CIC1Cos/d8_60 ), .B0(\CIC1Cos/d_d8_59 ), .A0(\CIC1Cos/d8_59 ), 
    .FCI(\CIC1Cos/n11497 ), .F0(\CIC1Cos/n6570 ), .F1(\CIC1Cos/n6569 ), 
    .FCO(\CIC1Cos/n11498 ));
  CIC1Cos_SLICE_1031 \CIC1Cos/SLICE_1031 ( .B1(\CIC1Cos/d_d8_58 ), 
    .A1(\CIC1Cos/d8_58 ), .B0(\CIC1Cos/d_d8_57 ), .A0(\CIC1Cos/d8_57 ), 
    .FCI(\CIC1Cos/n11496 ), .F0(\CIC1Cos/n6572 ), .F1(\CIC1Cos/n6571 ), 
    .FCO(\CIC1Cos/n11497 ));
  CIC1Cos_SLICE_1032 \CIC1Cos/SLICE_1032 ( .B1(\CIC1Cos/d_d8_56 ), 
    .A1(\CIC1Cos/d8_56 ), .B0(\CIC1Cos/d_d8_55 ), .A0(\CIC1Cos/d8_55 ), 
    .FCI(\CIC1Cos/n11495 ), .F0(\CIC1Cos/n6574 ), .F1(\CIC1Cos/n6573 ), 
    .FCO(\CIC1Cos/n11496 ));
  CIC1Cos_SLICE_1033 \CIC1Cos/SLICE_1033 ( .B1(\CIC1Cos/d_d8_54 ), 
    .A1(\CIC1Cos/d8_54 ), .B0(\CIC1Cos/d_d8_53 ), .A0(\CIC1Cos/d8_53 ), 
    .FCI(\CIC1Cos/n11494 ), .F0(\CIC1Cos/n6576 ), .F1(\CIC1Cos/n6575 ), 
    .FCO(\CIC1Cos/n11495 ));
  CIC1Cos_SLICE_1034 \CIC1Cos/SLICE_1034 ( .B1(\CIC1Cos/d_d8_52 ), 
    .A1(\CIC1Cos/d8_52 ), .B0(\CIC1Cos/d_d8_51 ), .A0(\CIC1Cos/d8_51 ), 
    .FCI(\CIC1Cos/n11493 ), .F0(\CIC1Cos/n6578 ), .F1(\CIC1Cos/n6577 ), 
    .FCO(\CIC1Cos/n11494 ));
  CIC1Cos_SLICE_1035 \CIC1Cos/SLICE_1035 ( .B1(\CIC1Cos/d_d8_50 ), 
    .A1(\CIC1Cos/d8_50 ), .B0(\CIC1Cos/d_d8_49 ), .A0(\CIC1Cos/d8_49 ), 
    .FCI(\CIC1Cos/n11492 ), .F0(\CIC1Cos/n6580 ), .F1(\CIC1Cos/n6579 ), 
    .FCO(\CIC1Cos/n11493 ));
  CIC1Cos_SLICE_1036 \CIC1Cos/SLICE_1036 ( .B1(\CIC1Cos/d_d8_48 ), 
    .A1(\CIC1Cos/d8_48 ), .B0(\CIC1Cos/d_d8_47 ), .A0(\CIC1Cos/d8_47 ), 
    .FCI(\CIC1Cos/n11491 ), .F0(\CIC1Cos/n6582 ), .F1(\CIC1Cos/n6581 ), 
    .FCO(\CIC1Cos/n11492 ));
  CIC1Cos_SLICE_1037 \CIC1Cos/SLICE_1037 ( .B1(\CIC1Cos/d_d8_46 ), 
    .A1(\CIC1Cos/d8_46 ), .B0(\CIC1Cos/d_d8_45 ), .A0(\CIC1Cos/d8_45 ), 
    .FCI(\CIC1Cos/n11490 ), .F0(\CIC1Cos/n6584 ), .F1(\CIC1Cos/n6583 ), 
    .FCO(\CIC1Cos/n11491 ));
  CIC1Cos_SLICE_1038 \CIC1Cos/SLICE_1038 ( .B1(\CIC1Cos/d_d8_44 ), 
    .A1(\CIC1Cos/d8_44 ), .B0(\CIC1Cos/d_d8_43 ), .A0(\CIC1Cos/d8_43 ), 
    .FCI(\CIC1Cos/n11489 ), .F0(\CIC1Cos/n6586 ), .F1(\CIC1Cos/n6585 ), 
    .FCO(\CIC1Cos/n11490 ));
  CIC1Cos_SLICE_1039 \CIC1Cos/SLICE_1039 ( .B1(\CIC1Cos/d_d8_42 ), 
    .A1(\CIC1Cos/d8_42 ), .B0(\CIC1Cos/d_d8_41 ), .A0(\CIC1Cos/d8_41 ), 
    .FCI(\CIC1Cos/n11488 ), .F0(\CIC1Cos/n6588 ), .F1(\CIC1Cos/n6587 ), 
    .FCO(\CIC1Cos/n11489 ));
  CIC1Cos_SLICE_1040 \CIC1Cos/SLICE_1040 ( .B1(\CIC1Cos/d_d8_40 ), 
    .A1(\CIC1Cos/d8_40 ), .B0(\CIC1Cos/d_d8_39 ), .A0(\CIC1Cos/d8_39 ), 
    .FCI(\CIC1Cos/n11487 ), .F0(\CIC1Cos/n6590 ), .F1(\CIC1Cos/n6589 ), 
    .FCO(\CIC1Cos/n11488 ));
  CIC1Cos_SLICE_1041 \CIC1Cos/SLICE_1041 ( .B1(\CIC1Cos/d_d8_38 ), 
    .A1(\CIC1Cos/d8_38 ), .B0(\CIC1Cos/d_d8_37 ), .A0(\CIC1Cos/d8_37 ), 
    .FCI(\CIC1Cos/n11486 ), .F0(\CIC1Cos/n6592 ), .F1(\CIC1Cos/n6591 ), 
    .FCO(\CIC1Cos/n11487 ));
  CIC1Cos_SLICE_1042 \CIC1Cos/SLICE_1042 ( .B1(\CIC1Cos/d_d8_36 ), 
    .A1(\CIC1Cos/d8_36 ), .F1(\CIC1Cos/n6593 ), .FCO(\CIC1Cos/n11486 ));
  CIC1Cos_SLICE_1043 \CIC1Cos/SLICE_1043 ( .D1(\CIC1Cos/d8_71 ), 
    .C1(\CIC1Cos/n6558 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_71 ), 
    .D0(\CIC1Cos/d8_70 ), .C0(\CIC1Cos/n6559 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_70 ), .DI1(\CIC1Cos/d9_71_N_1675_71 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_70 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11484 ), .F0(\CIC1Cos/d9_71_N_1675_70 ), 
    .Q0(\CIC1Cos/d9_70 ), .F1(\CIC1Cos/d9_71_N_1675_71 ), .Q1(\CIC1Cos/d9_71 ));
  CIC1Cos_SLICE_1044 \CIC1Cos/SLICE_1044 ( .D1(\CIC1Cos/d8_69 ), 
    .C1(\CIC1Cos/n6560 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_69 ), 
    .D0(\CIC1Cos/d8_68 ), .C0(\CIC1Cos/n6561 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_68 ), .DI1(\CIC1Cos/d9_71_N_1675_69 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_68 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11483 ), .F0(\CIC1Cos/d9_71_N_1675_68 ), 
    .Q0(\CIC1Cos/d9_68 ), .F1(\CIC1Cos/d9_71_N_1675_69 ), .Q1(\CIC1Cos/d9_69 ), 
    .FCO(\CIC1Cos/n11484 ));
  CIC1Cos_SLICE_1045 \CIC1Cos/SLICE_1045 ( .D1(\CIC1Cos/d8_67 ), 
    .C1(\CIC1Cos/n6562 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_67 ), 
    .D0(\CIC1Cos/d8_66 ), .C0(\CIC1Cos/n6563 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_66 ), .DI1(\CIC1Cos/d9_71_N_1675_67 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_66 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11482 ), .F0(\CIC1Cos/d9_71_N_1675_66 ), 
    .Q0(\CIC1Cos/d9_66 ), .F1(\CIC1Cos/d9_71_N_1675_67 ), .Q1(\CIC1Cos/d9_67 ), 
    .FCO(\CIC1Cos/n11483 ));
  CIC1Cos_SLICE_1046 \CIC1Cos/SLICE_1046 ( .D1(\CIC1Cos/d8_65 ), 
    .C1(\CIC1Cos/n6564 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_65 ), 
    .D0(\CIC1Cos/d8_64 ), .C0(\CIC1Cos/n6565 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_64 ), .DI1(\CIC1Cos/d9_71_N_1675_65 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_64 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11481 ), .F0(\CIC1Cos/d9_71_N_1675_64 ), 
    .Q0(\CIC1Cos/d9_64 ), .F1(\CIC1Cos/d9_71_N_1675_65 ), .Q1(\CIC1Cos/d9_65 ), 
    .FCO(\CIC1Cos/n11482 ));
  CIC1Cos_SLICE_1047 \CIC1Cos/SLICE_1047 ( .D1(\CIC1Cos/d8_63 ), 
    .C1(\CIC1Cos/n6566 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_63 ), 
    .D0(\CIC1Cos/d8_62 ), .C0(\CIC1Cos/n6567 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_62 ), .DI1(\CIC1Cos/d9_71_N_1675_63 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_62 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11480 ), .F0(\CIC1Cos/d9_71_N_1675_62 ), 
    .Q0(\CIC1Cos/d9_62 ), .F1(\CIC1Cos/d9_71_N_1675_63 ), .Q1(\CIC1Cos/d9_63 ), 
    .FCO(\CIC1Cos/n11481 ));
  CIC1Cos_SLICE_1048 \CIC1Cos/SLICE_1048 ( .D1(\CIC1Cos/d8_61 ), 
    .C1(\CIC1Cos/n6568 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_61 ), 
    .D0(\CIC1Cos/d8_60 ), .C0(\CIC1Cos/n6569 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_60 ), .DI1(\CIC1Cos/d9_71_N_1675_61 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_60 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11479 ), .F0(\CIC1Cos/d9_71_N_1675_60 ), 
    .Q0(\CIC1Cos/d9_60 ), .F1(\CIC1Cos/d9_71_N_1675_61 ), .Q1(\CIC1Cos/d9_61 ), 
    .FCO(\CIC1Cos/n11480 ));
  CIC1Cos_SLICE_1049 \CIC1Cos/SLICE_1049 ( .D1(\CIC1Cos/d8_59 ), 
    .C1(\CIC1Cos/n6570 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_59 ), 
    .D0(\CIC1Cos/d8_58 ), .C0(\CIC1Cos/n6571 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_58 ), .DI1(\CIC1Cos/d9_71_N_1675_59 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_58 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11478 ), .F0(\CIC1Cos/d9_71_N_1675_58 ), 
    .Q0(\CIC1Cos/d9_58 ), .F1(\CIC1Cos/d9_71_N_1675_59 ), .Q1(\CIC1Cos/d9_59 ), 
    .FCO(\CIC1Cos/n11479 ));
  CIC1Cos_SLICE_1050 \CIC1Cos/SLICE_1050 ( .D1(\CIC1Cos/d8_57 ), 
    .C1(\CIC1Cos/n6572 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_57 ), 
    .D0(\CIC1Cos/d8_56 ), .C0(\CIC1Cos/n6573 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_56 ), .DI1(\CIC1Cos/d9_71_N_1675_57 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_56 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11477 ), .F0(\CIC1Cos/d9_71_N_1675_56 ), 
    .Q0(\CIC1Cos/d9_56 ), .F1(\CIC1Cos/d9_71_N_1675_57 ), .Q1(\CIC1Cos/d9_57 ), 
    .FCO(\CIC1Cos/n11478 ));
  CIC1Cos_SLICE_1051 \CIC1Cos/SLICE_1051 ( .D1(\CIC1Cos/d8_55 ), 
    .C1(\CIC1Cos/n6574 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_55 ), 
    .D0(\CIC1Cos/d8_54 ), .C0(\CIC1Cos/n6575 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_54 ), .DI1(\CIC1Cos/d9_71_N_1675_55 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_54 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11476 ), .F0(\CIC1Cos/d9_71_N_1675_54 ), 
    .Q0(\CIC1Cos/d9_54 ), .F1(\CIC1Cos/d9_71_N_1675_55 ), .Q1(\CIC1Cos/d9_55 ), 
    .FCO(\CIC1Cos/n11477 ));
  CIC1Cos_SLICE_1052 \CIC1Cos/SLICE_1052 ( .D1(\CIC1Cos/d8_53 ), 
    .C1(\CIC1Cos/n6576 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_53 ), 
    .D0(\CIC1Cos/d8_52 ), .C0(\CIC1Cos/n6577 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_52 ), .DI1(\CIC1Cos/d9_71_N_1675_53 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_52 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11475 ), .F0(\CIC1Cos/d9_71_N_1675_52 ), 
    .Q0(\CIC1Cos/d9_52 ), .F1(\CIC1Cos/d9_71_N_1675_53 ), .Q1(\CIC1Cos/d9_53 ), 
    .FCO(\CIC1Cos/n11476 ));
  CIC1Cos_SLICE_1053 \CIC1Cos/SLICE_1053 ( .D1(\CIC1Cos/d8_51 ), 
    .C1(\CIC1Cos/n6578 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_51 ), 
    .D0(\CIC1Cos/d8_50 ), .C0(\CIC1Cos/n6579 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_50 ), .DI1(\CIC1Cos/d9_71_N_1675_51 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_50 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11474 ), .F0(\CIC1Cos/d9_71_N_1675_50 ), 
    .Q0(\CIC1Cos/d9_50 ), .F1(\CIC1Cos/d9_71_N_1675_51 ), .Q1(\CIC1Cos/d9_51 ), 
    .FCO(\CIC1Cos/n11475 ));
  CIC1Cos_SLICE_1054 \CIC1Cos/SLICE_1054 ( .D1(\CIC1Cos/d8_49 ), 
    .C1(\CIC1Cos/n6580 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_49 ), 
    .D0(\CIC1Cos/d8_48 ), .C0(\CIC1Cos/n6581 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_48 ), .DI1(\CIC1Cos/d9_71_N_1675_49 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_48 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11473 ), .F0(\CIC1Cos/d9_71_N_1675_48 ), 
    .Q0(\CIC1Cos/d9_48 ), .F1(\CIC1Cos/d9_71_N_1675_49 ), .Q1(\CIC1Cos/d9_49 ), 
    .FCO(\CIC1Cos/n11474 ));
  CIC1Cos_SLICE_1055 \CIC1Cos/SLICE_1055 ( .D1(\CIC1Cos/d8_47 ), 
    .C1(\CIC1Cos/n6582 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_47 ), 
    .D0(\CIC1Cos/d8_46 ), .C0(\CIC1Cos/n6583 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_46 ), .DI1(\CIC1Cos/d9_71_N_1675_47 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_46 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11472 ), .F0(\CIC1Cos/d9_71_N_1675_46 ), 
    .Q0(\CIC1Cos/d9_46 ), .F1(\CIC1Cos/d9_71_N_1675_47 ), .Q1(\CIC1Cos/d9_47 ), 
    .FCO(\CIC1Cos/n11473 ));
  CIC1Cos_SLICE_1056 \CIC1Cos/SLICE_1056 ( .D1(\CIC1Cos/d8_45 ), 
    .C1(\CIC1Cos/n6584 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_45 ), 
    .D0(\CIC1Cos/d8_44 ), .C0(\CIC1Cos/n6585 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_44 ), .DI1(\CIC1Cos/d9_71_N_1675_45 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_44 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11471 ), .F0(\CIC1Cos/d9_71_N_1675_44 ), 
    .Q0(\CIC1Cos/d9_44 ), .F1(\CIC1Cos/d9_71_N_1675_45 ), .Q1(\CIC1Cos/d9_45 ), 
    .FCO(\CIC1Cos/n11472 ));
  CIC1Cos_SLICE_1057 \CIC1Cos/SLICE_1057 ( .D1(\CIC1Cos/d8_43 ), 
    .C1(\CIC1Cos/n6586 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_43 ), 
    .D0(\CIC1Cos/d8_42 ), .C0(\CIC1Cos/n6587 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_42 ), .DI1(\CIC1Cos/d9_71_N_1675_43 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_42 ), .CE(\CIC1Cos/osc_clk_enable_1284 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11470 ), .F0(\CIC1Cos/d9_71_N_1675_42 ), 
    .Q0(\CIC1Cos/d9_42 ), .F1(\CIC1Cos/d9_71_N_1675_43 ), .Q1(\CIC1Cos/d9_43 ), 
    .FCO(\CIC1Cos/n11471 ));
  CIC1Cos_SLICE_1058 \CIC1Cos/SLICE_1058 ( .D1(\CIC1Cos/d8_41 ), 
    .C1(\CIC1Cos/n6588 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_41 ), 
    .D0(\CIC1Cos/d8_40 ), .C0(\CIC1Cos/n6589 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_40 ), .DI1(\CIC1Cos/d9_71_N_1675_41 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_40 ), .CE(\CIC1Cos/osc_clk_enable_1284 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11469 ), .F0(\CIC1Cos/d9_71_N_1675_40 ), 
    .Q0(\CIC1Cos/d9_40 ), .F1(\CIC1Cos/d9_71_N_1675_41 ), .Q1(\CIC1Cos/d9_41 ), 
    .FCO(\CIC1Cos/n11470 ));
  CIC1Cos_SLICE_1059 \CIC1Cos/SLICE_1059 ( .D1(\CIC1Cos/d8_39 ), 
    .C1(\CIC1Cos/n6590 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_39 ), 
    .D0(\CIC1Cos/d8_38 ), .C0(\CIC1Cos/n6591 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_38 ), .DI1(\CIC1Cos/d9_71_N_1675_39 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_38 ), .CE(\CIC1Cos/osc_clk_enable_1284 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11468 ), .F0(\CIC1Cos/d9_71_N_1675_38 ), 
    .Q0(\CIC1Cos/d9_38 ), .F1(\CIC1Cos/d9_71_N_1675_39 ), .Q1(\CIC1Cos/d9_39 ), 
    .FCO(\CIC1Cos/n11469 ));
  CIC1Cos_SLICE_1060 \CIC1Cos/SLICE_1060 ( .D1(\CIC1Cos/d8_37 ), 
    .C1(\CIC1Cos/n6592 ), .B1(\CIC1Cos/n6556 ), .A1(\CIC1Cos/d_d8_37 ), 
    .D0(\CIC1Cos/d8_36 ), .C0(\CIC1Cos/n6593 ), .B0(\CIC1Cos/n6556 ), 
    .A0(\CIC1Cos/d_d8_36 ), .DI1(\CIC1Cos/d9_71_N_1675_37 ), 
    .DI0(\CIC1Cos/d9_71_N_1675_36 ), .CE(\CIC1Cos/osc_clk_enable_1284 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11467 ), .F0(\CIC1Cos/d9_71_N_1675_36 ), 
    .Q0(\CIC1Cos/d9_36 ), .F1(\CIC1Cos/d9_71_N_1675_37 ), .Q1(\CIC1Cos/d9_37 ), 
    .FCO(\CIC1Cos/n11468 ));
  CIC1Cos_SLICE_1061 \CIC1Cos/SLICE_1061 ( .A1(\CIC1Cos/n6556 ), 
    .FCO(\CIC1Cos/n11467 ));
  CIC1Cos_SLICE_1062 \CIC1Cos/SLICE_1062 ( .B0(\CIC1Cos/d_d9_71 ), 
    .A0(\CIC1Cos/d9_71 ), .FCI(\CIC1Cos/n11463 ), .F0(\CIC1Cos/n6710 ));
  CIC1Cos_SLICE_1063 \CIC1Cos/SLICE_1063 ( .B1(\CIC1Cos/d_d9_70 ), 
    .A1(\CIC1Cos/d9_70 ), .B0(\CIC1Cos/d_d9_69 ), .A0(\CIC1Cos/d9_69 ), 
    .FCI(\CIC1Cos/n11462 ), .F0(\CIC1Cos/n6712 ), .F1(\CIC1Cos/n6711 ), 
    .FCO(\CIC1Cos/n11463 ));
  CIC1Cos_SLICE_1064 \CIC1Cos/SLICE_1064 ( .B1(\CIC1Cos/d_d9_68 ), 
    .A1(\CIC1Cos/d9_68 ), .B0(\CIC1Cos/d_d9_67 ), .A0(\CIC1Cos/d9_67 ), 
    .FCI(\CIC1Cos/n11461 ), .F0(\CIC1Cos/n6714 ), .F1(\CIC1Cos/n6713 ), 
    .FCO(\CIC1Cos/n11462 ));
  CIC1Cos_SLICE_1065 \CIC1Cos/SLICE_1065 ( .B1(\CIC1Cos/d_d9_66 ), 
    .A1(\CIC1Cos/d9_66 ), .B0(\CIC1Cos/d_d9_65 ), .A0(\CIC1Cos/d9_65 ), 
    .FCI(\CIC1Cos/n11460 ), .F0(\CIC1Cos/n6716 ), .F1(\CIC1Cos/n6715 ), 
    .FCO(\CIC1Cos/n11461 ));
  CIC1Cos_SLICE_1066 \CIC1Cos/SLICE_1066 ( .B1(\CIC1Cos/d_d9_64 ), 
    .A1(\CIC1Cos/d9_64 ), .B0(\CIC1Cos/d_d9_63 ), .A0(\CIC1Cos/d9_63 ), 
    .FCI(\CIC1Cos/n11459 ), .F0(\CIC1Cos/n6718 ), .F1(\CIC1Cos/n6717 ), 
    .FCO(\CIC1Cos/n11460 ));
  CIC1Cos_SLICE_1067 \CIC1Cos/SLICE_1067 ( .B1(\CIC1Cos/d_d9_62 ), 
    .A1(\CIC1Cos/d9_62 ), .B0(\CIC1Cos/d_d9_61 ), .A0(\CIC1Cos/d9_61 ), 
    .FCI(\CIC1Cos/n11458 ), .F0(\CIC1Cos/n6720 ), .F1(\CIC1Cos/n6719 ), 
    .FCO(\CIC1Cos/n11459 ));
  CIC1Cos_SLICE_1068 \CIC1Cos/SLICE_1068 ( .B1(\CIC1Cos/d_d9_60 ), 
    .A1(\CIC1Cos/d9_60 ), .B0(\CIC1Cos/d_d9_59 ), .A0(\CIC1Cos/d9_59 ), 
    .FCI(\CIC1Cos/n11457 ), .F0(\CIC1Cos/n6722 ), .F1(\CIC1Cos/n6721 ), 
    .FCO(\CIC1Cos/n11458 ));
  CIC1Cos_SLICE_1069 \CIC1Cos/SLICE_1069 ( .B1(\CIC1Cos/d_d9_58 ), 
    .A1(\CIC1Cos/d9_58 ), .B0(\CIC1Cos/d_d9_57 ), .A0(\CIC1Cos/d9_57 ), 
    .FCI(\CIC1Cos/n11456 ), .F0(\CIC1Cos/n6724 ), .F1(\CIC1Cos/n6723 ), 
    .FCO(\CIC1Cos/n11457 ));
  CIC1Cos_SLICE_1070 \CIC1Cos/SLICE_1070 ( .B1(\CIC1Cos/d_d9_56 ), 
    .A1(\CIC1Cos/d9_56 ), .B0(\CIC1Cos/d_d9_55 ), .A0(\CIC1Cos/d9_55 ), 
    .FCI(\CIC1Cos/n11455 ), .FCO(\CIC1Cos/n11456 ));
  CIC1Cos_SLICE_1071 \CIC1Cos/SLICE_1071 ( .B1(\CIC1Cos/d_d9_54 ), 
    .A1(\CIC1Cos/d9_54 ), .B0(\CIC1Cos/d_d9_53 ), .A0(\CIC1Cos/d9_53 ), 
    .FCI(\CIC1Cos/n11454 ), .FCO(\CIC1Cos/n11455 ));
  CIC1Cos_SLICE_1072 \CIC1Cos/SLICE_1072 ( .B1(\CIC1Cos/d_d9_52 ), 
    .A1(\CIC1Cos/d9_52 ), .B0(\CIC1Cos/d_d9_51 ), .A0(\CIC1Cos/d9_51 ), 
    .FCI(\CIC1Cos/n11453 ), .FCO(\CIC1Cos/n11454 ));
  CIC1Cos_SLICE_1073 \CIC1Cos/SLICE_1073 ( .B1(\CIC1Cos/d_d9_50 ), 
    .A1(\CIC1Cos/d9_50 ), .B0(\CIC1Cos/d_d9_49 ), .A0(\CIC1Cos/d9_49 ), 
    .FCI(\CIC1Cos/n11452 ), .FCO(\CIC1Cos/n11453 ));
  CIC1Cos_SLICE_1074 \CIC1Cos/SLICE_1074 ( .B1(\CIC1Cos/d_d9_48 ), 
    .A1(\CIC1Cos/d9_48 ), .B0(\CIC1Cos/d_d9_47 ), .A0(\CIC1Cos/d9_47 ), 
    .FCI(\CIC1Cos/n11451 ), .FCO(\CIC1Cos/n11452 ));
  CIC1Cos_SLICE_1075 \CIC1Cos/SLICE_1075 ( .B1(\CIC1Cos/d_d9_46 ), 
    .A1(\CIC1Cos/d9_46 ), .B0(\CIC1Cos/d_d9_45 ), .A0(\CIC1Cos/d9_45 ), 
    .FCI(\CIC1Cos/n11450 ), .FCO(\CIC1Cos/n11451 ));
  CIC1Cos_SLICE_1076 \CIC1Cos/SLICE_1076 ( .B1(\CIC1Cos/d_d9_44 ), 
    .A1(\CIC1Cos/d9_44 ), .B0(\CIC1Cos/d_d9_43 ), .A0(\CIC1Cos/d9_43 ), 
    .FCI(\CIC1Cos/n11449 ), .FCO(\CIC1Cos/n11450 ));
  CIC1Cos_SLICE_1077 \CIC1Cos/SLICE_1077 ( .B1(\CIC1Cos/d_d9_42 ), 
    .A1(\CIC1Cos/d9_42 ), .B0(\CIC1Cos/d_d9_41 ), .A0(\CIC1Cos/d9_41 ), 
    .FCI(\CIC1Cos/n11448 ), .FCO(\CIC1Cos/n11449 ));
  CIC1Cos_SLICE_1078 \CIC1Cos/SLICE_1078 ( .B1(\CIC1Cos/d_d9_40 ), 
    .A1(\CIC1Cos/d9_40 ), .B0(\CIC1Cos/d_d9_39 ), .A0(\CIC1Cos/d9_39 ), 
    .FCI(\CIC1Cos/n11447 ), .FCO(\CIC1Cos/n11448 ));
  CIC1Cos_SLICE_1079 \CIC1Cos/SLICE_1079 ( .B1(\CIC1Cos/d_d9_38 ), 
    .A1(\CIC1Cos/d9_38 ), .B0(\CIC1Cos/d_d9_37 ), .A0(\CIC1Cos/d9_37 ), 
    .FCI(\CIC1Cos/n11446 ), .FCO(\CIC1Cos/n11447 ));
  CIC1Cos_SLICE_1080 \CIC1Cos/SLICE_1080 ( .B1(\CIC1Cos/d_d9_36 ), 
    .A1(\CIC1Cos/d9_36 ), .FCO(\CIC1Cos/n11446 ));
  CIC1Cos_SLICE_1081 \CIC1Cos/SLICE_1081 ( .B0(\CIC1Cos/d_d9_71 ), 
    .A0(\CIC1Cos/d9_71 ), .FCI(\CIC1Cos/n11445 ), .F0(\CIC1Cos/n6748 ));
  CIC1Cos_SLICE_1082 \CIC1Cos/SLICE_1082 ( .B1(\CIC1Cos/d_d9_70 ), 
    .A1(\CIC1Cos/d9_70 ), .B0(\CIC1Cos/d_d9_69 ), .A0(\CIC1Cos/d9_69 ), 
    .FCI(\CIC1Cos/n11444 ), .F0(\CIC1Cos/n6750 ), .F1(\CIC1Cos/n6749 ), 
    .FCO(\CIC1Cos/n11445 ));
  CIC1Cos_SLICE_1083 \CIC1Cos/SLICE_1083 ( .B1(\CIC1Cos/d_d9_68 ), 
    .A1(\CIC1Cos/d9_68 ), .B0(\CIC1Cos/d_d9_67 ), .A0(\CIC1Cos/d9_67 ), 
    .FCI(\CIC1Cos/n11443 ), .F0(\CIC1Cos/n6752 ), .F1(\CIC1Cos/n6751 ), 
    .FCO(\CIC1Cos/n11444 ));
  CIC1Cos_SLICE_1084 \CIC1Cos/SLICE_1084 ( .B1(\CIC1Cos/d_d9_66 ), 
    .A1(\CIC1Cos/d9_66 ), .B0(\CIC1Cos/d_d9_65 ), .A0(\CIC1Cos/d9_65 ), 
    .FCI(\CIC1Cos/n11442 ), .F0(\CIC1Cos/n6754 ), .F1(\CIC1Cos/n6753 ), 
    .FCO(\CIC1Cos/n11443 ));
  CIC1Cos_SLICE_1085 \CIC1Cos/SLICE_1085 ( .B1(\CIC1Cos/d_d9_64 ), 
    .A1(\CIC1Cos/d9_64 ), .B0(\CIC1Cos/d_d9_63 ), .A0(\CIC1Cos/d9_63 ), 
    .FCI(\CIC1Cos/n11441 ), .F0(\CIC1Cos/n6756 ), .F1(\CIC1Cos/n6755 ), 
    .FCO(\CIC1Cos/n11442 ));
  CIC1Cos_SLICE_1086 \CIC1Cos/SLICE_1086 ( .B1(\CIC1Cos/d_d9_62 ), 
    .A1(\CIC1Cos/d9_62 ), .B0(\CIC1Cos/d_d9_61 ), .A0(\CIC1Cos/d9_61 ), 
    .FCI(\CIC1Cos/n11440 ), .F0(\CIC1Cos/n6758 ), .F1(\CIC1Cos/n6757 ), 
    .FCO(\CIC1Cos/n11441 ));
  CIC1Cos_SLICE_1087 \CIC1Cos/SLICE_1087 ( .B1(\CIC1Cos/d_d9_60 ), 
    .A1(\CIC1Cos/d9_60 ), .B0(\CIC1Cos/d_d9_59 ), .A0(\CIC1Cos/d9_59 ), 
    .FCI(\CIC1Cos/n11439 ), .F0(\CIC1Cos/n6760 ), .F1(\CIC1Cos/n6759 ), 
    .FCO(\CIC1Cos/n11440 ));
  CIC1Cos_SLICE_1088 \CIC1Cos/SLICE_1088 ( .B1(\CIC1Cos/d_d9_58 ), 
    .A1(\CIC1Cos/d9_58 ), .B0(\CIC1Cos/d_d9_57 ), .A0(\CIC1Cos/d9_57 ), 
    .FCI(\CIC1Cos/n11438 ), .F0(\CIC1Cos/n6762 ), .F1(\CIC1Cos/n6761 ), 
    .FCO(\CIC1Cos/n11439 ));
  CIC1Cos_SLICE_1089 \CIC1Cos/SLICE_1089 ( .B1(\CIC1Cos/d_d9_56 ), 
    .A1(\CIC1Cos/d9_56 ), .B0(\CIC1Cos/d_d9_55 ), .A0(\CIC1Cos/d9_55 ), 
    .FCI(\CIC1Cos/n11437 ), .FCO(\CIC1Cos/n11438 ));
  CIC1Cos_SLICE_1090 \CIC1Cos/SLICE_1090 ( .B1(\CIC1Cos/d_d9_54 ), 
    .A1(\CIC1Cos/d9_54 ), .B0(\CIC1Cos/d_d9_53 ), .A0(\CIC1Cos/d9_53 ), 
    .FCI(\CIC1Cos/n11436 ), .FCO(\CIC1Cos/n11437 ));
  CIC1Cos_SLICE_1091 \CIC1Cos/SLICE_1091 ( .B1(\CIC1Cos/d_d9_52 ), 
    .A1(\CIC1Cos/d9_52 ), .B0(\CIC1Cos/d_d9_51 ), .A0(\CIC1Cos/d9_51 ), 
    .FCI(\CIC1Cos/n11435 ), .FCO(\CIC1Cos/n11436 ));
  CIC1Cos_SLICE_1092 \CIC1Cos/SLICE_1092 ( .B1(\CIC1Cos/d_d9_50 ), 
    .A1(\CIC1Cos/d9_50 ), .B0(\CIC1Cos/d_d9_49 ), .A0(\CIC1Cos/d9_49 ), 
    .FCI(\CIC1Cos/n11434 ), .FCO(\CIC1Cos/n11435 ));
  CIC1Cos_SLICE_1093 \CIC1Cos/SLICE_1093 ( .B1(\CIC1Cos/d_d9_48 ), 
    .A1(\CIC1Cos/d9_48 ), .B0(\CIC1Cos/d_d9_47 ), .A0(\CIC1Cos/d9_47 ), 
    .FCI(\CIC1Cos/n11433 ), .FCO(\CIC1Cos/n11434 ));
  CIC1Cos_SLICE_1094 \CIC1Cos/SLICE_1094 ( .B1(\CIC1Cos/d_d9_46 ), 
    .A1(\CIC1Cos/d9_46 ), .B0(\CIC1Cos/d_d9_45 ), .A0(\CIC1Cos/d9_45 ), 
    .FCI(\CIC1Cos/n11432 ), .FCO(\CIC1Cos/n11433 ));
  CIC1Cos_SLICE_1095 \CIC1Cos/SLICE_1095 ( .B1(\CIC1Cos/d_d9_44 ), 
    .A1(\CIC1Cos/d9_44 ), .B0(\CIC1Cos/d_d9_43 ), .A0(\CIC1Cos/d9_43 ), 
    .FCI(\CIC1Cos/n11431 ), .FCO(\CIC1Cos/n11432 ));
  CIC1Cos_SLICE_1096 \CIC1Cos/SLICE_1096 ( .B1(\CIC1Cos/d_d9_42 ), 
    .A1(\CIC1Cos/d9_42 ), .B0(\CIC1Cos/d_d9_41 ), .A0(\CIC1Cos/d9_41 ), 
    .FCI(\CIC1Cos/n11430 ), .FCO(\CIC1Cos/n11431 ));
  CIC1Cos_SLICE_1097 \CIC1Cos/SLICE_1097 ( .B1(\CIC1Cos/d_d9_40 ), 
    .A1(\CIC1Cos/d9_40 ), .B0(\CIC1Cos/d_d9_39 ), .A0(\CIC1Cos/d9_39 ), 
    .FCI(\CIC1Cos/n11429 ), .FCO(\CIC1Cos/n11430 ));
  CIC1Cos_SLICE_1098 \CIC1Cos/SLICE_1098 ( .B1(\CIC1Cos/d_d9_38 ), 
    .A1(\CIC1Cos/d9_38 ), .B0(\CIC1Cos/d_d9_37 ), .A0(\CIC1Cos/d9_37 ), 
    .FCI(\CIC1Cos/n11428 ), .FCO(\CIC1Cos/n11429 ));
  CIC1Cos_SLICE_1099 \CIC1Cos/SLICE_1099 ( .B1(\CIC1Cos/d_d9_36 ), 
    .A1(\CIC1Cos/d9_36 ), .FCO(\CIC1Cos/n11428 ));
  CIC1Cos_SLICE_1100 \CIC1Cos/SLICE_1100 ( .A0(\CIC1Cos/count_15 ), 
    .DI0(\CIC1Cos/n376 ), .LSR(\CIC1Cos/n8387 ), .CLK(osc_clk), 
    .FCI(\CIC1Cos/n11231 ), .F0(\CIC1Cos/n376 ), .Q0(\CIC1Cos/count_15 ));
  CIC1Cos_SLICE_1101 \CIC1Cos/SLICE_1101 ( .A1(\CIC1Cos/count_14 ), 
    .A0(\CIC1Cos/count_13 ), .DI1(\CIC1Cos/n377 ), .DI0(\CIC1Cos/n378 ), 
    .LSR(\CIC1Cos/n8387 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11230 ), 
    .F0(\CIC1Cos/n378 ), .Q0(\CIC1Cos/count_13 ), .F1(\CIC1Cos/n377 ), 
    .Q1(\CIC1Cos/count_14 ), .FCO(\CIC1Cos/n11231 ));
  CIC1Cos_SLICE_1102 \CIC1Cos/SLICE_1102 ( .A1(\CIC1Cos/count_12 ), 
    .A0(\CIC1Cos/count_11 ), .DI1(\CIC1Cos/n379 ), .LSR(\CIC1Cos/n8387 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11229 ), .F0(\CIC1Cos/n380 ), 
    .F1(\CIC1Cos/n379 ), .Q1(\CIC1Cos/count_12 ), .FCO(\CIC1Cos/n11230 ));
  CIC1Cos_SLICE_1103 \CIC1Cos/SLICE_1103 ( .A1(\CIC1Cos/count_10 ), 
    .A0(\CIC1Cos/count_9 ), .DI1(\CIC1Cos/n381 ), .DI0(\CIC1Cos/n382 ), 
    .LSR(\CIC1Cos/n8387 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11228 ), 
    .F0(\CIC1Cos/n382 ), .Q0(\CIC1Cos/count_9 ), .F1(\CIC1Cos/n381 ), 
    .Q1(\CIC1Cos/count_10 ), .FCO(\CIC1Cos/n11229 ));
  CIC1Cos_SLICE_1104 \CIC1Cos/SLICE_1104 ( .A1(\CIC1Cos/count_8 ), 
    .A0(\CIC1Cos/count_7 ), .DI1(\CIC1Cos/n383 ), .DI0(\CIC1Cos/n384 ), 
    .LSR(\CIC1Cos/n8387 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11227 ), 
    .F0(\CIC1Cos/n384 ), .Q0(\CIC1Cos/count_7 ), .F1(\CIC1Cos/n383 ), 
    .Q1(\CIC1Cos/count_8 ), .FCO(\CIC1Cos/n11228 ));
  CIC1Cos_SLICE_1105 \CIC1Cos/SLICE_1105 ( .A1(\CIC1Cos/count_6 ), 
    .A0(\CIC1Cos/count_5 ), .DI1(\CIC1Cos/n385 ), .DI0(\CIC1Cos/n386 ), 
    .LSR(\CIC1Cos/n8387 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11226 ), 
    .F0(\CIC1Cos/n386 ), .Q0(\CIC1Cos/count_5 ), .F1(\CIC1Cos/n385 ), 
    .Q1(\CIC1Cos/count_6 ), .FCO(\CIC1Cos/n11227 ));
  CIC1Cos_SLICE_1106 \CIC1Cos/SLICE_1106 ( .A1(\CIC1Cos/count_4 ), 
    .A0(\CIC1Cos/count_3 ), .DI1(\CIC1Cos/n387 ), .DI0(\CIC1Cos/n388 ), 
    .LSR(\CIC1Cos/n8387 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11225 ), 
    .F0(\CIC1Cos/n388 ), .Q0(\CIC1Cos/count_3 ), .F1(\CIC1Cos/n387 ), 
    .Q1(\CIC1Cos/count_4 ), .FCO(\CIC1Cos/n11226 ));
  CIC1Cos_SLICE_1107 \CIC1Cos/SLICE_1107 ( .A1(\CIC1Cos/count_2 ), 
    .A0(\CIC1Cos/count_1 ), .DI1(\CIC1Cos/n389 ), .DI0(\CIC1Cos/n390 ), 
    .LSR(\CIC1Cos/n8387 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11224 ), 
    .F0(\CIC1Cos/n390 ), .Q0(\CIC1Cos/count_1 ), .F1(\CIC1Cos/n389 ), 
    .Q1(\CIC1Cos/count_2 ), .FCO(\CIC1Cos/n11225 ));
  CIC1Cos_SLICE_1108 \CIC1Cos/SLICE_1108 ( .A1(\CIC1Cos/count_0 ), 
    .F1(\CIC1Cos/n391 ), .FCO(\CIC1Cos/n11224 ));
  CIC1Cos_SLICE_1109 \CIC1Cos/SLICE_1109 ( .FCI(\CIC1Cos/n11205 ), 
    .F0(\CIC1Cos/n5644 ));
  CIC1Cos_SLICE_1110 \CIC1Cos/SLICE_1110 ( .B1(\CIC1Cos/d5_35 ), 
    .A1(\CIC1Cos/d4_35 ), .B0(\CIC1Cos/d5_34 ), .A0(\CIC1Cos/d4_34 ), 
    .DI1(\CIC1Cos/d5_71_N_706_35 ), .DI0(\CIC1Cos/d5_71_N_706_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11204 ), .F0(\CIC1Cos/d5_71_N_706_34 ), 
    .Q0(\CIC1Cos/d5_34 ), .F1(\CIC1Cos/d5_71_N_706_35 ), .Q1(\CIC1Cos/d5_35 ), 
    .FCO(\CIC1Cos/n11205 ));
  CIC1Cos_SLICE_1111 \CIC1Cos/SLICE_1111 ( .B1(\CIC1Cos/d5_33 ), 
    .A1(\CIC1Cos/d4_33 ), .B0(\CIC1Cos/d5_32 ), .A0(\CIC1Cos/d4_32 ), 
    .DI1(\CIC1Cos/d5_71_N_706_33 ), .DI0(\CIC1Cos/d5_71_N_706_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11203 ), .F0(\CIC1Cos/d5_71_N_706_32 ), 
    .Q0(\CIC1Cos/d5_32 ), .F1(\CIC1Cos/d5_71_N_706_33 ), .Q1(\CIC1Cos/d5_33 ), 
    .FCO(\CIC1Cos/n11204 ));
  CIC1Cos_SLICE_1112 \CIC1Cos/SLICE_1112 ( .B1(\CIC1Cos/d5_31 ), 
    .A1(\CIC1Cos/d4_31 ), .B0(\CIC1Cos/d5_30 ), .A0(\CIC1Cos/d4_30 ), 
    .DI1(\CIC1Cos/d5_71_N_706_31 ), .DI0(\CIC1Cos/d5_71_N_706_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11202 ), .F0(\CIC1Cos/d5_71_N_706_30 ), 
    .Q0(\CIC1Cos/d5_30 ), .F1(\CIC1Cos/d5_71_N_706_31 ), .Q1(\CIC1Cos/d5_31 ), 
    .FCO(\CIC1Cos/n11203 ));
  CIC1Cos_SLICE_1113 \CIC1Cos/SLICE_1113 ( .B1(\CIC1Cos/d5_29 ), 
    .A1(\CIC1Cos/d4_29 ), .B0(\CIC1Cos/d5_28 ), .A0(\CIC1Cos/d4_28 ), 
    .DI1(\CIC1Cos/d5_71_N_706_29 ), .DI0(\CIC1Cos/d5_71_N_706_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11201 ), .F0(\CIC1Cos/d5_71_N_706_28 ), 
    .Q0(\CIC1Cos/d5_28 ), .F1(\CIC1Cos/d5_71_N_706_29 ), .Q1(\CIC1Cos/d5_29 ), 
    .FCO(\CIC1Cos/n11202 ));
  CIC1Cos_SLICE_1114 \CIC1Cos/SLICE_1114 ( .B1(\CIC1Cos/d5_27 ), 
    .A1(\CIC1Cos/d4_27 ), .B0(\CIC1Cos/d5_26 ), .A0(\CIC1Cos/d4_26 ), 
    .DI1(\CIC1Cos/d5_71_N_706_27 ), .DI0(\CIC1Cos/d5_71_N_706_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11200 ), .F0(\CIC1Cos/d5_71_N_706_26 ), 
    .Q0(\CIC1Cos/d5_26 ), .F1(\CIC1Cos/d5_71_N_706_27 ), .Q1(\CIC1Cos/d5_27 ), 
    .FCO(\CIC1Cos/n11201 ));
  CIC1Cos_SLICE_1115 \CIC1Cos/SLICE_1115 ( .B1(\CIC1Cos/d5_25 ), 
    .A1(\CIC1Cos/d4_25 ), .B0(\CIC1Cos/d5_24 ), .A0(\CIC1Cos/d4_24 ), 
    .DI1(\CIC1Cos/d5_71_N_706_25 ), .DI0(\CIC1Cos/d5_71_N_706_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11199 ), .F0(\CIC1Cos/d5_71_N_706_24 ), 
    .Q0(\CIC1Cos/d5_24 ), .F1(\CIC1Cos/d5_71_N_706_25 ), .Q1(\CIC1Cos/d5_25 ), 
    .FCO(\CIC1Cos/n11200 ));
  CIC1Cos_SLICE_1116 \CIC1Cos/SLICE_1116 ( .B1(\CIC1Cos/d5_23 ), 
    .A1(\CIC1Cos/d4_23 ), .B0(\CIC1Cos/d5_22 ), .A0(\CIC1Cos/d4_22 ), 
    .DI1(\CIC1Cos/d5_71_N_706_23 ), .DI0(\CIC1Cos/d5_71_N_706_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11198 ), .F0(\CIC1Cos/d5_71_N_706_22 ), 
    .Q0(\CIC1Cos/d5_22 ), .F1(\CIC1Cos/d5_71_N_706_23 ), .Q1(\CIC1Cos/d5_23 ), 
    .FCO(\CIC1Cos/n11199 ));
  CIC1Cos_SLICE_1117 \CIC1Cos/SLICE_1117 ( .B1(\CIC1Cos/d5_21 ), 
    .A1(\CIC1Cos/d4_21 ), .B0(\CIC1Cos/d5_20 ), .A0(\CIC1Cos/d4_20 ), 
    .DI1(\CIC1Cos/d5_71_N_706_21 ), .DI0(\CIC1Cos/d5_71_N_706_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11197 ), .F0(\CIC1Cos/d5_71_N_706_20 ), 
    .Q0(\CIC1Cos/d5_20 ), .F1(\CIC1Cos/d5_71_N_706_21 ), .Q1(\CIC1Cos/d5_21 ), 
    .FCO(\CIC1Cos/n11198 ));
  CIC1Cos_SLICE_1118 \CIC1Cos/SLICE_1118 ( .B1(\CIC1Cos/d5_19 ), 
    .A1(\CIC1Cos/d4_19 ), .B0(\CIC1Cos/d5_18 ), .A0(\CIC1Cos/d4_18 ), 
    .DI1(\CIC1Cos/d5_71_N_706_19 ), .DI0(\CIC1Cos/d5_71_N_706_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11196 ), .F0(\CIC1Cos/d5_71_N_706_18 ), 
    .Q0(\CIC1Cos/d5_18 ), .F1(\CIC1Cos/d5_71_N_706_19 ), .Q1(\CIC1Cos/d5_19 ), 
    .FCO(\CIC1Cos/n11197 ));
  CIC1Cos_SLICE_1119 \CIC1Cos/SLICE_1119 ( .B1(\CIC1Cos/d5_17 ), 
    .A1(\CIC1Cos/d4_17 ), .B0(\CIC1Cos/d5_16 ), .A0(\CIC1Cos/d4_16 ), 
    .DI1(\CIC1Cos/d5_71_N_706_17 ), .DI0(\CIC1Cos/d5_71_N_706_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11195 ), .F0(\CIC1Cos/d5_71_N_706_16 ), 
    .Q0(\CIC1Cos/d5_16 ), .F1(\CIC1Cos/d5_71_N_706_17 ), .Q1(\CIC1Cos/d5_17 ), 
    .FCO(\CIC1Cos/n11196 ));
  CIC1Cos_SLICE_1120 \CIC1Cos/SLICE_1120 ( .B1(\CIC1Cos/d5_15 ), 
    .A1(\CIC1Cos/d4_15 ), .B0(\CIC1Cos/d5_14 ), .A0(\CIC1Cos/d4_14 ), 
    .DI1(\CIC1Cos/d5_71_N_706_15 ), .DI0(\CIC1Cos/d5_71_N_706_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11194 ), .F0(\CIC1Cos/d5_71_N_706_14 ), 
    .Q0(\CIC1Cos/d5_14 ), .F1(\CIC1Cos/d5_71_N_706_15 ), .Q1(\CIC1Cos/d5_15 ), 
    .FCO(\CIC1Cos/n11195 ));
  CIC1Cos_SLICE_1121 \CIC1Cos/SLICE_1121 ( .B1(\CIC1Cos/d5_13 ), 
    .A1(\CIC1Cos/d4_13 ), .B0(\CIC1Cos/d5_12 ), .A0(\CIC1Cos/d4_12 ), 
    .DI1(\CIC1Cos/d5_71_N_706_13 ), .DI0(\CIC1Cos/d5_71_N_706_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11193 ), .F0(\CIC1Cos/d5_71_N_706_12 ), 
    .Q0(\CIC1Cos/d5_12 ), .F1(\CIC1Cos/d5_71_N_706_13 ), .Q1(\CIC1Cos/d5_13 ), 
    .FCO(\CIC1Cos/n11194 ));
  CIC1Cos_SLICE_1122 \CIC1Cos/SLICE_1122 ( .B1(\CIC1Cos/d5_11 ), 
    .A1(\CIC1Cos/d4_11 ), .B0(\CIC1Cos/d5_10 ), .A0(\CIC1Cos/d4_10 ), 
    .DI1(\CIC1Cos/d5_71_N_706_11 ), .DI0(\CIC1Cos/d5_71_N_706_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11192 ), .F0(\CIC1Cos/d5_71_N_706_10 ), 
    .Q0(\CIC1Cos/d5_10 ), .F1(\CIC1Cos/d5_71_N_706_11 ), .Q1(\CIC1Cos/d5_11 ), 
    .FCO(\CIC1Cos/n11193 ));
  CIC1Cos_SLICE_1123 \CIC1Cos/SLICE_1123 ( .B1(\CIC1Cos/d5_9 ), 
    .A1(\CIC1Cos/d4_9 ), .B0(\CIC1Cos/d5_8 ), .A0(\CIC1Cos/d4_8 ), 
    .DI1(\CIC1Cos/d5_71_N_706_9 ), .DI0(\CIC1Cos/d5_71_N_706_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11191 ), .F0(\CIC1Cos/d5_71_N_706_8 ), 
    .Q0(\CIC1Cos/d5_8 ), .F1(\CIC1Cos/d5_71_N_706_9 ), .Q1(\CIC1Cos/d5_9 ), 
    .FCO(\CIC1Cos/n11192 ));
  CIC1Cos_SLICE_1124 \CIC1Cos/SLICE_1124 ( .B1(\CIC1Cos/d5_7 ), 
    .A1(\CIC1Cos/d4_7 ), .B0(\CIC1Cos/d5_6 ), .A0(\CIC1Cos/d4_6 ), 
    .DI1(\CIC1Cos/d5_71_N_706_7 ), .DI0(\CIC1Cos/d5_71_N_706_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11190 ), .F0(\CIC1Cos/d5_71_N_706_6 ), 
    .Q0(\CIC1Cos/d5_6 ), .F1(\CIC1Cos/d5_71_N_706_7 ), .Q1(\CIC1Cos/d5_7 ), 
    .FCO(\CIC1Cos/n11191 ));
  CIC1Cos_SLICE_1125 \CIC1Cos/SLICE_1125 ( .B1(\CIC1Cos/d5_5 ), 
    .A1(\CIC1Cos/d4_5 ), .B0(\CIC1Cos/d5_4 ), .A0(\CIC1Cos/d4_4 ), 
    .DI1(\CIC1Cos/d5_71_N_706_5 ), .DI0(\CIC1Cos/d5_71_N_706_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11189 ), .F0(\CIC1Cos/d5_71_N_706_4 ), 
    .Q0(\CIC1Cos/d5_4 ), .F1(\CIC1Cos/d5_71_N_706_5 ), .Q1(\CIC1Cos/d5_5 ), 
    .FCO(\CIC1Cos/n11190 ));
  CIC1Cos_SLICE_1126 \CIC1Cos/SLICE_1126 ( .B1(\CIC1Cos/d5_3 ), 
    .A1(\CIC1Cos/d4_3 ), .B0(\CIC1Cos/d5_2 ), .A0(\CIC1Cos/d4_2 ), 
    .DI1(\CIC1Cos/d5_71_N_706_3 ), .DI0(\CIC1Cos/d5_71_N_706_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11188 ), .F0(\CIC1Cos/d5_71_N_706_2 ), 
    .Q0(\CIC1Cos/d5_2 ), .F1(\CIC1Cos/d5_71_N_706_3 ), .Q1(\CIC1Cos/d5_3 ), 
    .FCO(\CIC1Cos/n11189 ));
  CIC1Cos_SLICE_1127 \CIC1Cos/SLICE_1127 ( .B1(\CIC1Cos/d5_1 ), 
    .A1(\CIC1Cos/d4_1 ), .B0(\CIC1Cos/d5_0 ), .A0(\CIC1Cos/d4_0 ), 
    .DI1(\CIC1Cos/d5_71_N_706_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d5_71_N_706_1 ), 
    .Q1(\CIC1Cos/d5_1 ), .FCO(\CIC1Cos/n11188 ));
  CIC1Cos_SLICE_1128 \CIC1Cos/SLICE_1128 ( .FCI(\CIC1Cos/n11186 ), 
    .F0(\CIC1Cos/n5492 ));
  CIC1Cos_SLICE_1129 \CIC1Cos/SLICE_1129 ( .B1(\CIC1Cos/d4_35 ), 
    .A1(\CIC1Cos/d3_35 ), .B0(\CIC1Cos/d4_34 ), .A0(\CIC1Cos/d3_34 ), 
    .DI1(\CIC1Cos/d4_71_N_634_35 ), .DI0(\CIC1Cos/d4_71_N_634_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11185 ), .F0(\CIC1Cos/d4_71_N_634_34 ), 
    .Q0(\CIC1Cos/d4_34 ), .F1(\CIC1Cos/d4_71_N_634_35 ), .Q1(\CIC1Cos/d4_35 ), 
    .FCO(\CIC1Cos/n11186 ));
  CIC1Cos_SLICE_1130 \CIC1Cos/SLICE_1130 ( .B1(\CIC1Cos/d4_33 ), 
    .A1(\CIC1Cos/d3_33 ), .B0(\CIC1Cos/d4_32 ), .A0(\CIC1Cos/d3_32 ), 
    .DI1(\CIC1Cos/d4_71_N_634_33 ), .DI0(\CIC1Cos/d4_71_N_634_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11184 ), .F0(\CIC1Cos/d4_71_N_634_32 ), 
    .Q0(\CIC1Cos/d4_32 ), .F1(\CIC1Cos/d4_71_N_634_33 ), .Q1(\CIC1Cos/d4_33 ), 
    .FCO(\CIC1Cos/n11185 ));
  CIC1Cos_SLICE_1131 \CIC1Cos/SLICE_1131 ( .B1(\CIC1Cos/d4_31 ), 
    .A1(\CIC1Cos/d3_31 ), .B0(\CIC1Cos/d4_30 ), .A0(\CIC1Cos/d3_30 ), 
    .DI1(\CIC1Cos/d4_71_N_634_31 ), .DI0(\CIC1Cos/d4_71_N_634_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11183 ), .F0(\CIC1Cos/d4_71_N_634_30 ), 
    .Q0(\CIC1Cos/d4_30 ), .F1(\CIC1Cos/d4_71_N_634_31 ), .Q1(\CIC1Cos/d4_31 ), 
    .FCO(\CIC1Cos/n11184 ));
  CIC1Cos_SLICE_1132 \CIC1Cos/SLICE_1132 ( .B1(\CIC1Cos/d4_29 ), 
    .A1(\CIC1Cos/d3_29 ), .B0(\CIC1Cos/d4_28 ), .A0(\CIC1Cos/d3_28 ), 
    .DI1(\CIC1Cos/d4_71_N_634_29 ), .DI0(\CIC1Cos/d4_71_N_634_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11182 ), .F0(\CIC1Cos/d4_71_N_634_28 ), 
    .Q0(\CIC1Cos/d4_28 ), .F1(\CIC1Cos/d4_71_N_634_29 ), .Q1(\CIC1Cos/d4_29 ), 
    .FCO(\CIC1Cos/n11183 ));
  CIC1Cos_SLICE_1133 \CIC1Cos/SLICE_1133 ( .B1(\CIC1Cos/d4_27 ), 
    .A1(\CIC1Cos/d3_27 ), .B0(\CIC1Cos/d4_26 ), .A0(\CIC1Cos/d3_26 ), 
    .DI1(\CIC1Cos/d4_71_N_634_27 ), .DI0(\CIC1Cos/d4_71_N_634_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11181 ), .F0(\CIC1Cos/d4_71_N_634_26 ), 
    .Q0(\CIC1Cos/d4_26 ), .F1(\CIC1Cos/d4_71_N_634_27 ), .Q1(\CIC1Cos/d4_27 ), 
    .FCO(\CIC1Cos/n11182 ));
  CIC1Cos_SLICE_1134 \CIC1Cos/SLICE_1134 ( .B1(\CIC1Cos/d4_25 ), 
    .A1(\CIC1Cos/d3_25 ), .B0(\CIC1Cos/d4_24 ), .A0(\CIC1Cos/d3_24 ), 
    .DI1(\CIC1Cos/d4_71_N_634_25 ), .DI0(\CIC1Cos/d4_71_N_634_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11180 ), .F0(\CIC1Cos/d4_71_N_634_24 ), 
    .Q0(\CIC1Cos/d4_24 ), .F1(\CIC1Cos/d4_71_N_634_25 ), .Q1(\CIC1Cos/d4_25 ), 
    .FCO(\CIC1Cos/n11181 ));
  CIC1Cos_SLICE_1135 \CIC1Cos/SLICE_1135 ( .B1(\CIC1Cos/d4_23 ), 
    .A1(\CIC1Cos/d3_23 ), .B0(\CIC1Cos/d4_22 ), .A0(\CIC1Cos/d3_22 ), 
    .DI1(\CIC1Cos/d4_71_N_634_23 ), .DI0(\CIC1Cos/d4_71_N_634_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11179 ), .F0(\CIC1Cos/d4_71_N_634_22 ), 
    .Q0(\CIC1Cos/d4_22 ), .F1(\CIC1Cos/d4_71_N_634_23 ), .Q1(\CIC1Cos/d4_23 ), 
    .FCO(\CIC1Cos/n11180 ));
  CIC1Cos_SLICE_1136 \CIC1Cos/SLICE_1136 ( .B1(\CIC1Cos/d4_21 ), 
    .A1(\CIC1Cos/d3_21 ), .B0(\CIC1Cos/d4_20 ), .A0(\CIC1Cos/d3_20 ), 
    .DI1(\CIC1Cos/d4_71_N_634_21 ), .DI0(\CIC1Cos/d4_71_N_634_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11178 ), .F0(\CIC1Cos/d4_71_N_634_20 ), 
    .Q0(\CIC1Cos/d4_20 ), .F1(\CIC1Cos/d4_71_N_634_21 ), .Q1(\CIC1Cos/d4_21 ), 
    .FCO(\CIC1Cos/n11179 ));
  CIC1Cos_SLICE_1137 \CIC1Cos/SLICE_1137 ( .B1(\CIC1Cos/d4_19 ), 
    .A1(\CIC1Cos/d3_19 ), .B0(\CIC1Cos/d4_18 ), .A0(\CIC1Cos/d3_18 ), 
    .DI1(\CIC1Cos/d4_71_N_634_19 ), .DI0(\CIC1Cos/d4_71_N_634_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11177 ), .F0(\CIC1Cos/d4_71_N_634_18 ), 
    .Q0(\CIC1Cos/d4_18 ), .F1(\CIC1Cos/d4_71_N_634_19 ), .Q1(\CIC1Cos/d4_19 ), 
    .FCO(\CIC1Cos/n11178 ));
  CIC1Cos_SLICE_1138 \CIC1Cos/SLICE_1138 ( .B1(\CIC1Cos/d4_17 ), 
    .A1(\CIC1Cos/d3_17 ), .B0(\CIC1Cos/d4_16 ), .A0(\CIC1Cos/d3_16 ), 
    .DI1(\CIC1Cos/d4_71_N_634_17 ), .DI0(\CIC1Cos/d4_71_N_634_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11176 ), .F0(\CIC1Cos/d4_71_N_634_16 ), 
    .Q0(\CIC1Cos/d4_16 ), .F1(\CIC1Cos/d4_71_N_634_17 ), .Q1(\CIC1Cos/d4_17 ), 
    .FCO(\CIC1Cos/n11177 ));
  CIC1Cos_SLICE_1139 \CIC1Cos/SLICE_1139 ( .B1(\CIC1Cos/d4_15 ), 
    .A1(\CIC1Cos/d3_15 ), .B0(\CIC1Cos/d4_14 ), .A0(\CIC1Cos/d3_14 ), 
    .DI1(\CIC1Cos/d4_71_N_634_15 ), .DI0(\CIC1Cos/d4_71_N_634_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11175 ), .F0(\CIC1Cos/d4_71_N_634_14 ), 
    .Q0(\CIC1Cos/d4_14 ), .F1(\CIC1Cos/d4_71_N_634_15 ), .Q1(\CIC1Cos/d4_15 ), 
    .FCO(\CIC1Cos/n11176 ));
  CIC1Cos_SLICE_1140 \CIC1Cos/SLICE_1140 ( .B1(\CIC1Cos/d4_13 ), 
    .A1(\CIC1Cos/d3_13 ), .B0(\CIC1Cos/d4_12 ), .A0(\CIC1Cos/d3_12 ), 
    .DI1(\CIC1Cos/d4_71_N_634_13 ), .DI0(\CIC1Cos/d4_71_N_634_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11174 ), .F0(\CIC1Cos/d4_71_N_634_12 ), 
    .Q0(\CIC1Cos/d4_12 ), .F1(\CIC1Cos/d4_71_N_634_13 ), .Q1(\CIC1Cos/d4_13 ), 
    .FCO(\CIC1Cos/n11175 ));
  CIC1Cos_SLICE_1141 \CIC1Cos/SLICE_1141 ( .B1(\CIC1Cos/d4_11 ), 
    .A1(\CIC1Cos/d3_11 ), .B0(\CIC1Cos/d4_10 ), .A0(\CIC1Cos/d3_10 ), 
    .DI1(\CIC1Cos/d4_71_N_634_11 ), .DI0(\CIC1Cos/d4_71_N_634_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11173 ), .F0(\CIC1Cos/d4_71_N_634_10 ), 
    .Q0(\CIC1Cos/d4_10 ), .F1(\CIC1Cos/d4_71_N_634_11 ), .Q1(\CIC1Cos/d4_11 ), 
    .FCO(\CIC1Cos/n11174 ));
  CIC1Cos_SLICE_1142 \CIC1Cos/SLICE_1142 ( .B1(\CIC1Cos/d4_9 ), 
    .A1(\CIC1Cos/d3_9 ), .B0(\CIC1Cos/d4_8 ), .A0(\CIC1Cos/d3_8 ), 
    .DI1(\CIC1Cos/d4_71_N_634_9 ), .DI0(\CIC1Cos/d4_71_N_634_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11172 ), .F0(\CIC1Cos/d4_71_N_634_8 ), 
    .Q0(\CIC1Cos/d4_8 ), .F1(\CIC1Cos/d4_71_N_634_9 ), .Q1(\CIC1Cos/d4_9 ), 
    .FCO(\CIC1Cos/n11173 ));
  CIC1Cos_SLICE_1143 \CIC1Cos/SLICE_1143 ( .B1(\CIC1Cos/d4_7 ), 
    .A1(\CIC1Cos/d3_7 ), .B0(\CIC1Cos/d4_6 ), .A0(\CIC1Cos/d3_6 ), 
    .DI1(\CIC1Cos/d4_71_N_634_7 ), .DI0(\CIC1Cos/d4_71_N_634_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11171 ), .F0(\CIC1Cos/d4_71_N_634_6 ), 
    .Q0(\CIC1Cos/d4_6 ), .F1(\CIC1Cos/d4_71_N_634_7 ), .Q1(\CIC1Cos/d4_7 ), 
    .FCO(\CIC1Cos/n11172 ));
  CIC1Cos_SLICE_1144 \CIC1Cos/SLICE_1144 ( .B1(\CIC1Cos/d4_5 ), 
    .A1(\CIC1Cos/d3_5 ), .B0(\CIC1Cos/d4_4 ), .A0(\CIC1Cos/d3_4 ), 
    .DI1(\CIC1Cos/d4_71_N_634_5 ), .DI0(\CIC1Cos/d4_71_N_634_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11170 ), .F0(\CIC1Cos/d4_71_N_634_4 ), 
    .Q0(\CIC1Cos/d4_4 ), .F1(\CIC1Cos/d4_71_N_634_5 ), .Q1(\CIC1Cos/d4_5 ), 
    .FCO(\CIC1Cos/n11171 ));
  CIC1Cos_SLICE_1145 \CIC1Cos/SLICE_1145 ( .B1(\CIC1Cos/d4_3 ), 
    .A1(\CIC1Cos/d3_3 ), .B0(\CIC1Cos/d4_2 ), .A0(\CIC1Cos/d3_2 ), 
    .DI1(\CIC1Cos/d4_71_N_634_3 ), .DI0(\CIC1Cos/d4_71_N_634_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11169 ), .F0(\CIC1Cos/d4_71_N_634_2 ), 
    .Q0(\CIC1Cos/d4_2 ), .F1(\CIC1Cos/d4_71_N_634_3 ), .Q1(\CIC1Cos/d4_3 ), 
    .FCO(\CIC1Cos/n11170 ));
  CIC1Cos_SLICE_1146 \CIC1Cos/SLICE_1146 ( .B1(\CIC1Cos/d4_1 ), 
    .A1(\CIC1Cos/d3_1 ), .B0(\CIC1Cos/d4_0 ), .A0(\CIC1Cos/d3_0 ), 
    .DI1(\CIC1Cos/d4_71_N_634_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d4_71_N_634_1 ), 
    .Q1(\CIC1Cos/d4_1 ), .FCO(\CIC1Cos/n11169 ));
  CIC1Cos_SLICE_1147 \CIC1Cos/SLICE_1147 ( .FCI(\CIC1Cos/n11167 ), 
    .F0(\CIC1Cos/n5340 ));
  CIC1Cos_SLICE_1148 \CIC1Cos/SLICE_1148 ( .B1(\CIC1Cos/d3_35 ), 
    .A1(\CIC1Cos/d2_35 ), .B0(\CIC1Cos/d3_34 ), .A0(\CIC1Cos/d2_34 ), 
    .DI1(\CIC1Cos/d3_71_N_562_35 ), .DI0(\CIC1Cos/d3_71_N_562_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11166 ), .F0(\CIC1Cos/d3_71_N_562_34 ), 
    .Q0(\CIC1Cos/d3_34 ), .F1(\CIC1Cos/d3_71_N_562_35 ), .Q1(\CIC1Cos/d3_35 ), 
    .FCO(\CIC1Cos/n11167 ));
  CIC1Cos_SLICE_1149 \CIC1Cos/SLICE_1149 ( .B1(\CIC1Cos/d3_33 ), 
    .A1(\CIC1Cos/d2_33 ), .B0(\CIC1Cos/d3_32 ), .A0(\CIC1Cos/d2_32 ), 
    .DI1(\CIC1Cos/d3_71_N_562_33 ), .DI0(\CIC1Cos/d3_71_N_562_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11165 ), .F0(\CIC1Cos/d3_71_N_562_32 ), 
    .Q0(\CIC1Cos/d3_32 ), .F1(\CIC1Cos/d3_71_N_562_33 ), .Q1(\CIC1Cos/d3_33 ), 
    .FCO(\CIC1Cos/n11166 ));
  CIC1Cos_SLICE_1150 \CIC1Cos/SLICE_1150 ( .B1(\CIC1Cos/d3_31 ), 
    .A1(\CIC1Cos/d2_31 ), .B0(\CIC1Cos/d3_30 ), .A0(\CIC1Cos/d2_30 ), 
    .DI1(\CIC1Cos/d3_71_N_562_31 ), .DI0(\CIC1Cos/d3_71_N_562_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11164 ), .F0(\CIC1Cos/d3_71_N_562_30 ), 
    .Q0(\CIC1Cos/d3_30 ), .F1(\CIC1Cos/d3_71_N_562_31 ), .Q1(\CIC1Cos/d3_31 ), 
    .FCO(\CIC1Cos/n11165 ));
  CIC1Cos_SLICE_1151 \CIC1Cos/SLICE_1151 ( .B1(\CIC1Cos/d3_29 ), 
    .A1(\CIC1Cos/d2_29 ), .B0(\CIC1Cos/d3_28 ), .A0(\CIC1Cos/d2_28 ), 
    .DI1(\CIC1Cos/d3_71_N_562_29 ), .DI0(\CIC1Cos/d3_71_N_562_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11163 ), .F0(\CIC1Cos/d3_71_N_562_28 ), 
    .Q0(\CIC1Cos/d3_28 ), .F1(\CIC1Cos/d3_71_N_562_29 ), .Q1(\CIC1Cos/d3_29 ), 
    .FCO(\CIC1Cos/n11164 ));
  CIC1Cos_SLICE_1152 \CIC1Cos/SLICE_1152 ( .B1(\CIC1Cos/d3_27 ), 
    .A1(\CIC1Cos/d2_27 ), .B0(\CIC1Cos/d3_26 ), .A0(\CIC1Cos/d2_26 ), 
    .DI1(\CIC1Cos/d3_71_N_562_27 ), .DI0(\CIC1Cos/d3_71_N_562_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11162 ), .F0(\CIC1Cos/d3_71_N_562_26 ), 
    .Q0(\CIC1Cos/d3_26 ), .F1(\CIC1Cos/d3_71_N_562_27 ), .Q1(\CIC1Cos/d3_27 ), 
    .FCO(\CIC1Cos/n11163 ));
  CIC1Cos_SLICE_1153 \CIC1Cos/SLICE_1153 ( .B1(\CIC1Cos/d3_25 ), 
    .A1(\CIC1Cos/d2_25 ), .B0(\CIC1Cos/d3_24 ), .A0(\CIC1Cos/d2_24 ), 
    .DI1(\CIC1Cos/d3_71_N_562_25 ), .DI0(\CIC1Cos/d3_71_N_562_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11161 ), .F0(\CIC1Cos/d3_71_N_562_24 ), 
    .Q0(\CIC1Cos/d3_24 ), .F1(\CIC1Cos/d3_71_N_562_25 ), .Q1(\CIC1Cos/d3_25 ), 
    .FCO(\CIC1Cos/n11162 ));
  CIC1Cos_SLICE_1154 \CIC1Cos/SLICE_1154 ( .B1(\CIC1Cos/d3_23 ), 
    .A1(\CIC1Cos/d2_23 ), .B0(\CIC1Cos/d3_22 ), .A0(\CIC1Cos/d2_22 ), 
    .DI1(\CIC1Cos/d3_71_N_562_23 ), .DI0(\CIC1Cos/d3_71_N_562_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11160 ), .F0(\CIC1Cos/d3_71_N_562_22 ), 
    .Q0(\CIC1Cos/d3_22 ), .F1(\CIC1Cos/d3_71_N_562_23 ), .Q1(\CIC1Cos/d3_23 ), 
    .FCO(\CIC1Cos/n11161 ));
  CIC1Cos_SLICE_1155 \CIC1Cos/SLICE_1155 ( .B1(\CIC1Cos/d3_21 ), 
    .A1(\CIC1Cos/d2_21 ), .B0(\CIC1Cos/d3_20 ), .A0(\CIC1Cos/d2_20 ), 
    .DI1(\CIC1Cos/d3_71_N_562_21 ), .DI0(\CIC1Cos/d3_71_N_562_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11159 ), .F0(\CIC1Cos/d3_71_N_562_20 ), 
    .Q0(\CIC1Cos/d3_20 ), .F1(\CIC1Cos/d3_71_N_562_21 ), .Q1(\CIC1Cos/d3_21 ), 
    .FCO(\CIC1Cos/n11160 ));
  CIC1Cos_SLICE_1156 \CIC1Cos/SLICE_1156 ( .B1(\CIC1Cos/d3_19 ), 
    .A1(\CIC1Cos/d2_19 ), .B0(\CIC1Cos/d3_18 ), .A0(\CIC1Cos/d2_18 ), 
    .DI1(\CIC1Cos/d3_71_N_562_19 ), .DI0(\CIC1Cos/d3_71_N_562_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11158 ), .F0(\CIC1Cos/d3_71_N_562_18 ), 
    .Q0(\CIC1Cos/d3_18 ), .F1(\CIC1Cos/d3_71_N_562_19 ), .Q1(\CIC1Cos/d3_19 ), 
    .FCO(\CIC1Cos/n11159 ));
  CIC1Cos_SLICE_1157 \CIC1Cos/SLICE_1157 ( .B1(\CIC1Cos/d3_17 ), 
    .A1(\CIC1Cos/d2_17 ), .B0(\CIC1Cos/d3_16 ), .A0(\CIC1Cos/d2_16 ), 
    .DI1(\CIC1Cos/d3_71_N_562_17 ), .DI0(\CIC1Cos/d3_71_N_562_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11157 ), .F0(\CIC1Cos/d3_71_N_562_16 ), 
    .Q0(\CIC1Cos/d3_16 ), .F1(\CIC1Cos/d3_71_N_562_17 ), .Q1(\CIC1Cos/d3_17 ), 
    .FCO(\CIC1Cos/n11158 ));
  CIC1Cos_SLICE_1158 \CIC1Cos/SLICE_1158 ( .B1(\CIC1Cos/d3_15 ), 
    .A1(\CIC1Cos/d2_15 ), .B0(\CIC1Cos/d3_14 ), .A0(\CIC1Cos/d2_14 ), 
    .DI1(\CIC1Cos/d3_71_N_562_15 ), .DI0(\CIC1Cos/d3_71_N_562_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11156 ), .F0(\CIC1Cos/d3_71_N_562_14 ), 
    .Q0(\CIC1Cos/d3_14 ), .F1(\CIC1Cos/d3_71_N_562_15 ), .Q1(\CIC1Cos/d3_15 ), 
    .FCO(\CIC1Cos/n11157 ));
  CIC1Cos_SLICE_1159 \CIC1Cos/SLICE_1159 ( .B1(\CIC1Cos/d3_13 ), 
    .A1(\CIC1Cos/d2_13 ), .B0(\CIC1Cos/d3_12 ), .A0(\CIC1Cos/d2_12 ), 
    .DI1(\CIC1Cos/d3_71_N_562_13 ), .DI0(\CIC1Cos/d3_71_N_562_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11155 ), .F0(\CIC1Cos/d3_71_N_562_12 ), 
    .Q0(\CIC1Cos/d3_12 ), .F1(\CIC1Cos/d3_71_N_562_13 ), .Q1(\CIC1Cos/d3_13 ), 
    .FCO(\CIC1Cos/n11156 ));
  CIC1Cos_SLICE_1160 \CIC1Cos/SLICE_1160 ( .B1(\CIC1Cos/d3_11 ), 
    .A1(\CIC1Cos/d2_11 ), .B0(\CIC1Cos/d3_10 ), .A0(\CIC1Cos/d2_10 ), 
    .DI1(\CIC1Cos/d3_71_N_562_11 ), .DI0(\CIC1Cos/d3_71_N_562_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11154 ), .F0(\CIC1Cos/d3_71_N_562_10 ), 
    .Q0(\CIC1Cos/d3_10 ), .F1(\CIC1Cos/d3_71_N_562_11 ), .Q1(\CIC1Cos/d3_11 ), 
    .FCO(\CIC1Cos/n11155 ));
  CIC1Cos_SLICE_1161 \CIC1Cos/SLICE_1161 ( .B1(\CIC1Cos/d3_9 ), 
    .A1(\CIC1Cos/d2_9 ), .B0(\CIC1Cos/d3_8 ), .A0(\CIC1Cos/d2_8 ), 
    .DI1(\CIC1Cos/d3_71_N_562_9 ), .DI0(\CIC1Cos/d3_71_N_562_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11153 ), .F0(\CIC1Cos/d3_71_N_562_8 ), 
    .Q0(\CIC1Cos/d3_8 ), .F1(\CIC1Cos/d3_71_N_562_9 ), .Q1(\CIC1Cos/d3_9 ), 
    .FCO(\CIC1Cos/n11154 ));
  CIC1Cos_SLICE_1162 \CIC1Cos/SLICE_1162 ( .B1(\CIC1Cos/d3_7 ), 
    .A1(\CIC1Cos/d2_7 ), .B0(\CIC1Cos/d3_6 ), .A0(\CIC1Cos/d2_6 ), 
    .DI1(\CIC1Cos/d3_71_N_562_7 ), .DI0(\CIC1Cos/d3_71_N_562_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11152 ), .F0(\CIC1Cos/d3_71_N_562_6 ), 
    .Q0(\CIC1Cos/d3_6 ), .F1(\CIC1Cos/d3_71_N_562_7 ), .Q1(\CIC1Cos/d3_7 ), 
    .FCO(\CIC1Cos/n11153 ));
  CIC1Cos_SLICE_1163 \CIC1Cos/SLICE_1163 ( .B1(\CIC1Cos/d3_5 ), 
    .A1(\CIC1Cos/d2_5 ), .B0(\CIC1Cos/d3_4 ), .A0(\CIC1Cos/d2_4 ), 
    .DI1(\CIC1Cos/d3_71_N_562_5 ), .DI0(\CIC1Cos/d3_71_N_562_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11151 ), .F0(\CIC1Cos/d3_71_N_562_4 ), 
    .Q0(\CIC1Cos/d3_4 ), .F1(\CIC1Cos/d3_71_N_562_5 ), .Q1(\CIC1Cos/d3_5 ), 
    .FCO(\CIC1Cos/n11152 ));
  CIC1Cos_SLICE_1164 \CIC1Cos/SLICE_1164 ( .B1(\CIC1Cos/d3_3 ), 
    .A1(\CIC1Cos/d2_3 ), .B0(\CIC1Cos/d3_2 ), .A0(\CIC1Cos/d2_2 ), 
    .DI1(\CIC1Cos/d3_71_N_562_3 ), .DI0(\CIC1Cos/d3_71_N_562_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11150 ), .F0(\CIC1Cos/d3_71_N_562_2 ), 
    .Q0(\CIC1Cos/d3_2 ), .F1(\CIC1Cos/d3_71_N_562_3 ), .Q1(\CIC1Cos/d3_3 ), 
    .FCO(\CIC1Cos/n11151 ));
  CIC1Cos_SLICE_1165 \CIC1Cos/SLICE_1165 ( .B1(\CIC1Cos/d3_1 ), 
    .A1(\CIC1Cos/d2_1 ), .B0(\CIC1Cos/d3_0 ), .A0(\CIC1Cos/d2_0 ), 
    .DI1(\CIC1Cos/d3_71_N_562_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d3_71_N_562_1 ), 
    .Q1(\CIC1Cos/d3_1 ), .FCO(\CIC1Cos/n11150 ));
  CIC1Cos_SLICE_1166 \CIC1Cos/SLICE_1166 ( .FCI(\CIC1Cos/n11148 ), 
    .F0(\CIC1Cos/n5188 ));
  CIC1Cos_SLICE_1167 \CIC1Cos/SLICE_1167 ( .B1(\CIC1Cos/d2_35 ), 
    .A1(\CIC1Cos/d1_35 ), .B0(\CIC1Cos/d2_34 ), .A0(\CIC1Cos/d1_34 ), 
    .DI1(\CIC1Cos/d2_71_N_490_35 ), .DI0(\CIC1Cos/d2_71_N_490_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11147 ), .F0(\CIC1Cos/d2_71_N_490_34 ), 
    .Q0(\CIC1Cos/d2_34 ), .F1(\CIC1Cos/d2_71_N_490_35 ), .Q1(\CIC1Cos/d2_35 ), 
    .FCO(\CIC1Cos/n11148 ));
  CIC1Cos_SLICE_1168 \CIC1Cos/SLICE_1168 ( .B1(\CIC1Cos/d2_33 ), 
    .A1(\CIC1Cos/d1_33 ), .B0(\CIC1Cos/d2_32 ), .A0(\CIC1Cos/d1_32 ), 
    .DI1(\CIC1Cos/d2_71_N_490_33 ), .DI0(\CIC1Cos/d2_71_N_490_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11146 ), .F0(\CIC1Cos/d2_71_N_490_32 ), 
    .Q0(\CIC1Cos/d2_32 ), .F1(\CIC1Cos/d2_71_N_490_33 ), .Q1(\CIC1Cos/d2_33 ), 
    .FCO(\CIC1Cos/n11147 ));
  CIC1Cos_SLICE_1169 \CIC1Cos/SLICE_1169 ( .B1(\CIC1Cos/d2_31 ), 
    .A1(\CIC1Cos/d1_31 ), .B0(\CIC1Cos/d2_30 ), .A0(\CIC1Cos/d1_30 ), 
    .DI1(\CIC1Cos/d2_71_N_490_31 ), .DI0(\CIC1Cos/d2_71_N_490_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11145 ), .F0(\CIC1Cos/d2_71_N_490_30 ), 
    .Q0(\CIC1Cos/d2_30 ), .F1(\CIC1Cos/d2_71_N_490_31 ), .Q1(\CIC1Cos/d2_31 ), 
    .FCO(\CIC1Cos/n11146 ));
  CIC1Cos_SLICE_1170 \CIC1Cos/SLICE_1170 ( .B1(\CIC1Cos/d2_29 ), 
    .A1(\CIC1Cos/d1_29 ), .B0(\CIC1Cos/d2_28 ), .A0(\CIC1Cos/d1_28 ), 
    .DI1(\CIC1Cos/d2_71_N_490_29 ), .DI0(\CIC1Cos/d2_71_N_490_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11144 ), .F0(\CIC1Cos/d2_71_N_490_28 ), 
    .Q0(\CIC1Cos/d2_28 ), .F1(\CIC1Cos/d2_71_N_490_29 ), .Q1(\CIC1Cos/d2_29 ), 
    .FCO(\CIC1Cos/n11145 ));
  CIC1Cos_SLICE_1171 \CIC1Cos/SLICE_1171 ( .B1(\CIC1Cos/d2_27 ), 
    .A1(\CIC1Cos/d1_27 ), .B0(\CIC1Cos/d2_26 ), .A0(\CIC1Cos/d1_26 ), 
    .DI1(\CIC1Cos/d2_71_N_490_27 ), .DI0(\CIC1Cos/d2_71_N_490_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11143 ), .F0(\CIC1Cos/d2_71_N_490_26 ), 
    .Q0(\CIC1Cos/d2_26 ), .F1(\CIC1Cos/d2_71_N_490_27 ), .Q1(\CIC1Cos/d2_27 ), 
    .FCO(\CIC1Cos/n11144 ));
  CIC1Cos_SLICE_1172 \CIC1Cos/SLICE_1172 ( .B1(\CIC1Cos/d2_25 ), 
    .A1(\CIC1Cos/d1_25 ), .B0(\CIC1Cos/d2_24 ), .A0(\CIC1Cos/d1_24 ), 
    .DI1(\CIC1Cos/d2_71_N_490_25 ), .DI0(\CIC1Cos/d2_71_N_490_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11142 ), .F0(\CIC1Cos/d2_71_N_490_24 ), 
    .Q0(\CIC1Cos/d2_24 ), .F1(\CIC1Cos/d2_71_N_490_25 ), .Q1(\CIC1Cos/d2_25 ), 
    .FCO(\CIC1Cos/n11143 ));
  CIC1Cos_SLICE_1173 \CIC1Cos/SLICE_1173 ( .B1(\CIC1Cos/d2_23 ), 
    .A1(\CIC1Cos/d1_23 ), .B0(\CIC1Cos/d2_22 ), .A0(\CIC1Cos/d1_22 ), 
    .DI1(\CIC1Cos/d2_71_N_490_23 ), .DI0(\CIC1Cos/d2_71_N_490_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11141 ), .F0(\CIC1Cos/d2_71_N_490_22 ), 
    .Q0(\CIC1Cos/d2_22 ), .F1(\CIC1Cos/d2_71_N_490_23 ), .Q1(\CIC1Cos/d2_23 ), 
    .FCO(\CIC1Cos/n11142 ));
  CIC1Cos_SLICE_1174 \CIC1Cos/SLICE_1174 ( .B1(\CIC1Cos/d2_21 ), 
    .A1(\CIC1Cos/d1_21 ), .B0(\CIC1Cos/d2_20 ), .A0(\CIC1Cos/d1_20 ), 
    .DI1(\CIC1Cos/d2_71_N_490_21 ), .DI0(\CIC1Cos/d2_71_N_490_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11140 ), .F0(\CIC1Cos/d2_71_N_490_20 ), 
    .Q0(\CIC1Cos/d2_20 ), .F1(\CIC1Cos/d2_71_N_490_21 ), .Q1(\CIC1Cos/d2_21 ), 
    .FCO(\CIC1Cos/n11141 ));
  CIC1Cos_SLICE_1175 \CIC1Cos/SLICE_1175 ( .B1(\CIC1Cos/d2_19 ), 
    .A1(\CIC1Cos/d1_19 ), .B0(\CIC1Cos/d2_18 ), .A0(\CIC1Cos/d1_18 ), 
    .DI1(\CIC1Cos/d2_71_N_490_19 ), .DI0(\CIC1Cos/d2_71_N_490_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11139 ), .F0(\CIC1Cos/d2_71_N_490_18 ), 
    .Q0(\CIC1Cos/d2_18 ), .F1(\CIC1Cos/d2_71_N_490_19 ), .Q1(\CIC1Cos/d2_19 ), 
    .FCO(\CIC1Cos/n11140 ));
  CIC1Cos_SLICE_1176 \CIC1Cos/SLICE_1176 ( .B1(\CIC1Cos/d2_17 ), 
    .A1(\CIC1Cos/d1_17 ), .B0(\CIC1Cos/d2_16 ), .A0(\CIC1Cos/d1_16 ), 
    .DI1(\CIC1Cos/d2_71_N_490_17 ), .DI0(\CIC1Cos/d2_71_N_490_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11138 ), .F0(\CIC1Cos/d2_71_N_490_16 ), 
    .Q0(\CIC1Cos/d2_16 ), .F1(\CIC1Cos/d2_71_N_490_17 ), .Q1(\CIC1Cos/d2_17 ), 
    .FCO(\CIC1Cos/n11139 ));
  CIC1Cos_SLICE_1177 \CIC1Cos/SLICE_1177 ( .B1(\CIC1Cos/d2_15 ), 
    .A1(\CIC1Cos/d1_15 ), .B0(\CIC1Cos/d2_14 ), .A0(\CIC1Cos/d1_14 ), 
    .DI1(\CIC1Cos/d2_71_N_490_15 ), .DI0(\CIC1Cos/d2_71_N_490_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11137 ), .F0(\CIC1Cos/d2_71_N_490_14 ), 
    .Q0(\CIC1Cos/d2_14 ), .F1(\CIC1Cos/d2_71_N_490_15 ), .Q1(\CIC1Cos/d2_15 ), 
    .FCO(\CIC1Cos/n11138 ));
  CIC1Cos_SLICE_1178 \CIC1Cos/SLICE_1178 ( .B1(\CIC1Cos/d2_13 ), 
    .A1(\CIC1Cos/d1_13 ), .B0(\CIC1Cos/d2_12 ), .A0(\CIC1Cos/d1_12 ), 
    .DI1(\CIC1Cos/d2_71_N_490_13 ), .DI0(\CIC1Cos/d2_71_N_490_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11136 ), .F0(\CIC1Cos/d2_71_N_490_12 ), 
    .Q0(\CIC1Cos/d2_12 ), .F1(\CIC1Cos/d2_71_N_490_13 ), .Q1(\CIC1Cos/d2_13 ), 
    .FCO(\CIC1Cos/n11137 ));
  CIC1Cos_SLICE_1179 \CIC1Cos/SLICE_1179 ( .B1(\CIC1Cos/d2_11 ), 
    .A1(\CIC1Cos/d1_11 ), .B0(\CIC1Cos/d2_10 ), .A0(\CIC1Cos/d1_10 ), 
    .DI1(\CIC1Cos/d2_71_N_490_11 ), .DI0(\CIC1Cos/d2_71_N_490_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11135 ), .F0(\CIC1Cos/d2_71_N_490_10 ), 
    .Q0(\CIC1Cos/d2_10 ), .F1(\CIC1Cos/d2_71_N_490_11 ), .Q1(\CIC1Cos/d2_11 ), 
    .FCO(\CIC1Cos/n11136 ));
  CIC1Cos_SLICE_1180 \CIC1Cos/SLICE_1180 ( .B1(\CIC1Cos/d2_9 ), 
    .A1(\CIC1Cos/d1_9 ), .B0(\CIC1Cos/d2_8 ), .A0(\CIC1Cos/d1_8 ), 
    .DI1(\CIC1Cos/d2_71_N_490_9 ), .DI0(\CIC1Cos/d2_71_N_490_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11134 ), .F0(\CIC1Cos/d2_71_N_490_8 ), 
    .Q0(\CIC1Cos/d2_8 ), .F1(\CIC1Cos/d2_71_N_490_9 ), .Q1(\CIC1Cos/d2_9 ), 
    .FCO(\CIC1Cos/n11135 ));
  CIC1Cos_SLICE_1181 \CIC1Cos/SLICE_1181 ( .B1(\CIC1Cos/d2_7 ), 
    .A1(\CIC1Cos/d1_7 ), .B0(\CIC1Cos/d2_6 ), .A0(\CIC1Cos/d1_6 ), 
    .DI1(\CIC1Cos/d2_71_N_490_7 ), .DI0(\CIC1Cos/d2_71_N_490_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11133 ), .F0(\CIC1Cos/d2_71_N_490_6 ), 
    .Q0(\CIC1Cos/d2_6 ), .F1(\CIC1Cos/d2_71_N_490_7 ), .Q1(\CIC1Cos/d2_7 ), 
    .FCO(\CIC1Cos/n11134 ));
  CIC1Cos_SLICE_1182 \CIC1Cos/SLICE_1182 ( .B1(\CIC1Cos/d2_5 ), 
    .A1(\CIC1Cos/d1_5 ), .B0(\CIC1Cos/d2_4 ), .A0(\CIC1Cos/d1_4 ), 
    .DI1(\CIC1Cos/d2_71_N_490_5 ), .DI0(\CIC1Cos/d2_71_N_490_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11132 ), .F0(\CIC1Cos/d2_71_N_490_4 ), 
    .Q0(\CIC1Cos/d2_4 ), .F1(\CIC1Cos/d2_71_N_490_5 ), .Q1(\CIC1Cos/d2_5 ), 
    .FCO(\CIC1Cos/n11133 ));
  CIC1Cos_SLICE_1183 \CIC1Cos/SLICE_1183 ( .B1(\CIC1Cos/d2_3 ), 
    .A1(\CIC1Cos/d1_3 ), .B0(\CIC1Cos/d2_2 ), .A0(\CIC1Cos/d1_2 ), 
    .DI1(\CIC1Cos/d2_71_N_490_3 ), .DI0(\CIC1Cos/d2_71_N_490_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11131 ), .F0(\CIC1Cos/d2_71_N_490_2 ), 
    .Q0(\CIC1Cos/d2_2 ), .F1(\CIC1Cos/d2_71_N_490_3 ), .Q1(\CIC1Cos/d2_3 ), 
    .FCO(\CIC1Cos/n11132 ));
  CIC1Cos_SLICE_1184 \CIC1Cos/SLICE_1184 ( .B1(\CIC1Cos/d2_1 ), 
    .A1(\CIC1Cos/d1_1 ), .B0(\CIC1Cos/d2_0 ), .A0(\CIC1Cos/d1_0 ), 
    .DI1(\CIC1Cos/d2_71_N_490_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d2_71_N_490_1 ), 
    .Q1(\CIC1Cos/d2_1 ), .FCO(\CIC1Cos/n11131 ));
  CIC1Cos_SLICE_1185 \CIC1Cos/SLICE_1185 ( .FCI(\CIC1Cos/n11091 ), 
    .F0(\CIC1Cos/n5036 ));
  CIC1Cos_SLICE_1186 \CIC1Cos/SLICE_1186 ( .B1(\CIC1Cos/d1_35 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_34 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_35 ), .DI0(\CIC1Cos/d1_71_N_418_34 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11090 ), .F0(\CIC1Cos/d1_71_N_418_34 ), 
    .Q0(\CIC1Cos/d1_34 ), .F1(\CIC1Cos/d1_71_N_418_35 ), .Q1(\CIC1Cos/d1_35 ), 
    .FCO(\CIC1Cos/n11091 ));
  CIC1Cos_SLICE_1187 \CIC1Cos/SLICE_1187 ( .B1(\CIC1Cos/d1_33 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_32 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_33 ), .DI0(\CIC1Cos/d1_71_N_418_32 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11089 ), .F0(\CIC1Cos/d1_71_N_418_32 ), 
    .Q0(\CIC1Cos/d1_32 ), .F1(\CIC1Cos/d1_71_N_418_33 ), .Q1(\CIC1Cos/d1_33 ), 
    .FCO(\CIC1Cos/n11090 ));
  CIC1Cos_SLICE_1188 \CIC1Cos/SLICE_1188 ( .B1(\CIC1Cos/d1_31 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_30 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_31 ), .DI0(\CIC1Cos/d1_71_N_418_30 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11088 ), .F0(\CIC1Cos/d1_71_N_418_30 ), 
    .Q0(\CIC1Cos/d1_30 ), .F1(\CIC1Cos/d1_71_N_418_31 ), .Q1(\CIC1Cos/d1_31 ), 
    .FCO(\CIC1Cos/n11089 ));
  CIC1Cos_SLICE_1189 \CIC1Cos/SLICE_1189 ( .B1(\CIC1Cos/d1_29 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_28 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_29 ), .DI0(\CIC1Cos/d1_71_N_418_28 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11087 ), .F0(\CIC1Cos/d1_71_N_418_28 ), 
    .Q0(\CIC1Cos/d1_28 ), .F1(\CIC1Cos/d1_71_N_418_29 ), .Q1(\CIC1Cos/d1_29 ), 
    .FCO(\CIC1Cos/n11088 ));
  CIC1Cos_SLICE_1190 \CIC1Cos/SLICE_1190 ( .B1(\CIC1Cos/d1_27 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_26 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_27 ), .DI0(\CIC1Cos/d1_71_N_418_26 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11086 ), .F0(\CIC1Cos/d1_71_N_418_26 ), 
    .Q0(\CIC1Cos/d1_26 ), .F1(\CIC1Cos/d1_71_N_418_27 ), .Q1(\CIC1Cos/d1_27 ), 
    .FCO(\CIC1Cos/n11087 ));
  CIC1Cos_SLICE_1191 \CIC1Cos/SLICE_1191 ( .B1(\CIC1Cos/d1_25 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_24 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_25 ), .DI0(\CIC1Cos/d1_71_N_418_24 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11085 ), .F0(\CIC1Cos/d1_71_N_418_24 ), 
    .Q0(\CIC1Cos/d1_24 ), .F1(\CIC1Cos/d1_71_N_418_25 ), .Q1(\CIC1Cos/d1_25 ), 
    .FCO(\CIC1Cos/n11086 ));
  CIC1Cos_SLICE_1192 \CIC1Cos/SLICE_1192 ( .B1(\CIC1Cos/d1_23 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_22 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_23 ), .DI0(\CIC1Cos/d1_71_N_418_22 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11084 ), .F0(\CIC1Cos/d1_71_N_418_22 ), 
    .Q0(\CIC1Cos/d1_22 ), .F1(\CIC1Cos/d1_71_N_418_23 ), .Q1(\CIC1Cos/d1_23 ), 
    .FCO(\CIC1Cos/n11085 ));
  CIC1Cos_SLICE_1193 \CIC1Cos/SLICE_1193 ( .B1(\CIC1Cos/d1_21 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_20 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_21 ), .DI0(\CIC1Cos/d1_71_N_418_20 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11083 ), .F0(\CIC1Cos/d1_71_N_418_20 ), 
    .Q0(\CIC1Cos/d1_20 ), .F1(\CIC1Cos/d1_71_N_418_21 ), .Q1(\CIC1Cos/d1_21 ), 
    .FCO(\CIC1Cos/n11084 ));
  CIC1Cos_SLICE_1194 \CIC1Cos/SLICE_1194 ( .B1(\CIC1Cos/d1_19 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_18 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_19 ), .DI0(\CIC1Cos/d1_71_N_418_18 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11082 ), .F0(\CIC1Cos/d1_71_N_418_18 ), 
    .Q0(\CIC1Cos/d1_18 ), .F1(\CIC1Cos/d1_71_N_418_19 ), .Q1(\CIC1Cos/d1_19 ), 
    .FCO(\CIC1Cos/n11083 ));
  CIC1Cos_SLICE_1195 \CIC1Cos/SLICE_1195 ( .B1(\CIC1Cos/d1_17 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_16 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_17 ), .DI0(\CIC1Cos/d1_71_N_418_16 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11081 ), .F0(\CIC1Cos/d1_71_N_418_16 ), 
    .Q0(\CIC1Cos/d1_16 ), .F1(\CIC1Cos/d1_71_N_418_17 ), .Q1(\CIC1Cos/d1_17 ), 
    .FCO(\CIC1Cos/n11082 ));
  CIC1Cos_SLICE_1196 \CIC1Cos/SLICE_1196 ( .B1(\CIC1Cos/d1_15 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_14 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_15 ), .DI0(\CIC1Cos/d1_71_N_418_14 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11080 ), .F0(\CIC1Cos/d1_71_N_418_14 ), 
    .Q0(\CIC1Cos/d1_14 ), .F1(\CIC1Cos/d1_71_N_418_15 ), .Q1(\CIC1Cos/d1_15 ), 
    .FCO(\CIC1Cos/n11081 ));
  CIC1Cos_SLICE_1197 \CIC1Cos/SLICE_1197 ( .B1(\CIC1Cos/d1_13 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_12 ), .A0(MixerOutCos_11), 
    .DI1(\CIC1Cos/d1_71_N_418_13 ), .DI0(\CIC1Cos/d1_71_N_418_12 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11079 ), .F0(\CIC1Cos/d1_71_N_418_12 ), 
    .Q0(\CIC1Cos/d1_12 ), .F1(\CIC1Cos/d1_71_N_418_13 ), .Q1(\CIC1Cos/d1_13 ), 
    .FCO(\CIC1Cos/n11080 ));
  CIC1Cos_SLICE_1198 \CIC1Cos/SLICE_1198 ( .B1(\CIC1Cos/d1_11 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_10 ), .A0(MixerOutCos_10), 
    .DI1(\CIC1Cos/d1_71_N_418_11 ), .DI0(\CIC1Cos/d1_71_N_418_10 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11078 ), .F0(\CIC1Cos/d1_71_N_418_10 ), 
    .Q0(\CIC1Cos/d1_10 ), .F1(\CIC1Cos/d1_71_N_418_11 ), .Q1(\CIC1Cos/d1_11 ), 
    .FCO(\CIC1Cos/n11079 ));
  CIC1Cos_SLICE_1199 \CIC1Cos/SLICE_1199 ( .B1(\CIC1Cos/d1_9 ), 
    .A1(MixerOutCos_9), .B0(\CIC1Cos/d1_8 ), .A0(MixerOutCos_8), 
    .DI1(\CIC1Cos/d1_71_N_418_9 ), .DI0(\CIC1Cos/d1_71_N_418_8 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11077 ), .F0(\CIC1Cos/d1_71_N_418_8 ), 
    .Q0(\CIC1Cos/d1_8 ), .F1(\CIC1Cos/d1_71_N_418_9 ), .Q1(\CIC1Cos/d1_9 ), 
    .FCO(\CIC1Cos/n11078 ));
  CIC1Cos_SLICE_1200 \CIC1Cos/SLICE_1200 ( .B1(\CIC1Cos/d1_7 ), 
    .A1(MixerOutCos_7), .B0(\CIC1Cos/d1_6 ), .A0(MixerOutCos_6), 
    .DI1(\CIC1Cos/d1_71_N_418_7 ), .DI0(\CIC1Cos/d1_71_N_418_6 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11076 ), .F0(\CIC1Cos/d1_71_N_418_6 ), 
    .Q0(\CIC1Cos/d1_6 ), .F1(\CIC1Cos/d1_71_N_418_7 ), .Q1(\CIC1Cos/d1_7 ), 
    .FCO(\CIC1Cos/n11077 ));
  CIC1Cos_SLICE_1201 \CIC1Cos/SLICE_1201 ( .B1(\CIC1Cos/d1_5 ), 
    .A1(MixerOutCos_5), .B0(\CIC1Cos/d1_4 ), .A0(MixerOutCos_4), 
    .DI1(\CIC1Cos/d1_71_N_418_5 ), .DI0(\CIC1Cos/d1_71_N_418_4 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11075 ), .F0(\CIC1Cos/d1_71_N_418_4 ), 
    .Q0(\CIC1Cos/d1_4 ), .F1(\CIC1Cos/d1_71_N_418_5 ), .Q1(\CIC1Cos/d1_5 ), 
    .FCO(\CIC1Cos/n11076 ));
  CIC1Cos_SLICE_1202 \CIC1Cos/SLICE_1202 ( .B1(\CIC1Cos/d1_3 ), 
    .A1(MixerOutCos_3), .B0(\CIC1Cos/d1_2 ), .A0(MixerOutCos_2), 
    .DI1(\CIC1Cos/d1_71_N_418_3 ), .DI0(\CIC1Cos/d1_71_N_418_2 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11074 ), .F0(\CIC1Cos/d1_71_N_418_2 ), 
    .Q0(\CIC1Cos/d1_2 ), .F1(\CIC1Cos/d1_71_N_418_3 ), .Q1(\CIC1Cos/d1_3 ), 
    .FCO(\CIC1Cos/n11075 ));
  CIC1Cos_SLICE_1203 \CIC1Cos/SLICE_1203 ( .B1(\CIC1Cos/d1_1 ), 
    .A1(MixerOutCos_1), .B0(\CIC1Cos/d1_0 ), .A0(MixerOutCos_0), 
    .DI1(\CIC1Cos/d1_71_N_418_1 ), .CLK(osc_clk), .F1(\CIC1Cos/d1_71_N_418_1 ), 
    .Q1(\CIC1Cos/d1_1 ), .FCO(\CIC1Cos/n11074 ));
  CIC1Cos_SLICE_1204 \CIC1Cos/SLICE_1204 ( .B0(\CIC1Cos/d_d9_35 ), 
    .A0(\CIC1Cos/d9_35 ), .FCI(\CIC1Cos/n11745 ), .F1(\CIC1Cos/n6708 ));
  CIC1Cos_SLICE_1205 \CIC1Cos/SLICE_1205 ( .B1(\CIC1Cos/d_d9_34 ), 
    .A1(\CIC1Cos/d9_34 ), .B0(\CIC1Cos/d_d9_33 ), .A0(\CIC1Cos/d9_33 ), 
    .FCI(\CIC1Cos/n11744 ), .FCO(\CIC1Cos/n11745 ));
  CIC1Cos_SLICE_1206 \CIC1Cos/SLICE_1206 ( .B1(\CIC1Cos/d_d9_32 ), 
    .A1(\CIC1Cos/d9_32 ), .B0(\CIC1Cos/d_d9_31 ), .A0(\CIC1Cos/d9_31 ), 
    .FCI(\CIC1Cos/n11743 ), .FCO(\CIC1Cos/n11744 ));
  CIC1Cos_SLICE_1207 \CIC1Cos/SLICE_1207 ( .B1(\CIC1Cos/d_d9_30 ), 
    .A1(\CIC1Cos/d9_30 ), .B0(\CIC1Cos/d_d9_29 ), .A0(\CIC1Cos/d9_29 ), 
    .FCI(\CIC1Cos/n11742 ), .FCO(\CIC1Cos/n11743 ));
  CIC1Cos_SLICE_1208 \CIC1Cos/SLICE_1208 ( .B1(\CIC1Cos/d_d9_28 ), 
    .A1(\CIC1Cos/d9_28 ), .B0(\CIC1Cos/d_d9_27 ), .A0(\CIC1Cos/d9_27 ), 
    .FCI(\CIC1Cos/n11741 ), .FCO(\CIC1Cos/n11742 ));
  CIC1Cos_SLICE_1209 \CIC1Cos/SLICE_1209 ( .B1(\CIC1Cos/d_d9_26 ), 
    .A1(\CIC1Cos/d9_26 ), .B0(\CIC1Cos/d_d9_25 ), .A0(\CIC1Cos/d9_25 ), 
    .FCI(\CIC1Cos/n11740 ), .FCO(\CIC1Cos/n11741 ));
  CIC1Cos_SLICE_1210 \CIC1Cos/SLICE_1210 ( .B1(\CIC1Cos/d_d9_24 ), 
    .A1(\CIC1Cos/d9_24 ), .B0(\CIC1Cos/d_d9_23 ), .A0(\CIC1Cos/d9_23 ), 
    .FCI(\CIC1Cos/n11739 ), .FCO(\CIC1Cos/n11740 ));
  CIC1Cos_SLICE_1211 \CIC1Cos/SLICE_1211 ( .B1(\CIC1Cos/d_d9_22 ), 
    .A1(\CIC1Cos/d9_22 ), .B0(\CIC1Cos/d_d9_21 ), .A0(\CIC1Cos/d9_21 ), 
    .FCI(\CIC1Cos/n11738 ), .FCO(\CIC1Cos/n11739 ));
  CIC1Cos_SLICE_1212 \CIC1Cos/SLICE_1212 ( .B1(\CIC1Cos/d_d9_20 ), 
    .A1(\CIC1Cos/d9_20 ), .B0(\CIC1Cos/d_d9_19 ), .A0(\CIC1Cos/d9_19 ), 
    .FCI(\CIC1Cos/n11737 ), .FCO(\CIC1Cos/n11738 ));
  CIC1Cos_SLICE_1213 \CIC1Cos/SLICE_1213 ( .B1(\CIC1Cos/d_d9_18 ), 
    .A1(\CIC1Cos/d9_18 ), .B0(\CIC1Cos/d_d9_17 ), .A0(\CIC1Cos/d9_17 ), 
    .FCI(\CIC1Cos/n11736 ), .FCO(\CIC1Cos/n11737 ));
  CIC1Cos_SLICE_1214 \CIC1Cos/SLICE_1214 ( .B1(\CIC1Cos/d_d9_16 ), 
    .A1(\CIC1Cos/d9_16 ), .B0(\CIC1Cos/d_d9_15 ), .A0(\CIC1Cos/d9_15 ), 
    .FCI(\CIC1Cos/n11735 ), .FCO(\CIC1Cos/n11736 ));
  CIC1Cos_SLICE_1215 \CIC1Cos/SLICE_1215 ( .B1(\CIC1Cos/d_d9_14 ), 
    .A1(\CIC1Cos/d9_14 ), .B0(\CIC1Cos/d_d9_13 ), .A0(\CIC1Cos/d9_13 ), 
    .FCI(\CIC1Cos/n11734 ), .FCO(\CIC1Cos/n11735 ));
  CIC1Cos_SLICE_1216 \CIC1Cos/SLICE_1216 ( .B1(\CIC1Cos/d_d9_12 ), 
    .A1(\CIC1Cos/d9_12 ), .B0(\CIC1Cos/d_d9_11 ), .A0(\CIC1Cos/d9_11 ), 
    .FCI(\CIC1Cos/n11733 ), .FCO(\CIC1Cos/n11734 ));
  CIC1Cos_SLICE_1217 \CIC1Cos/SLICE_1217 ( .B1(\CIC1Cos/d_d9_10 ), 
    .A1(\CIC1Cos/d9_10 ), .B0(\CIC1Cos/d_d9_9 ), .A0(\CIC1Cos/d9_9 ), 
    .FCI(\CIC1Cos/n11732 ), .FCO(\CIC1Cos/n11733 ));
  CIC1Cos_SLICE_1218 \CIC1Cos/SLICE_1218 ( .B1(\CIC1Cos/d_d9_8 ), 
    .A1(\CIC1Cos/d9_8 ), .B0(\CIC1Cos/d_d9_7 ), .A0(\CIC1Cos/d9_7 ), 
    .FCI(\CIC1Cos/n11731 ), .FCO(\CIC1Cos/n11732 ));
  CIC1Cos_SLICE_1219 \CIC1Cos/SLICE_1219 ( .B1(\CIC1Cos/d_d9_6 ), 
    .A1(\CIC1Cos/d9_6 ), .B0(\CIC1Cos/d_d9_5 ), .A0(\CIC1Cos/d9_5 ), 
    .FCI(\CIC1Cos/n11730 ), .FCO(\CIC1Cos/n11731 ));
  CIC1Cos_SLICE_1220 \CIC1Cos/SLICE_1220 ( .B1(\CIC1Cos/d_d9_4 ), 
    .A1(\CIC1Cos/d9_4 ), .B0(\CIC1Cos/d_d9_3 ), .A0(\CIC1Cos/d9_3 ), 
    .FCI(\CIC1Cos/n11729 ), .FCO(\CIC1Cos/n11730 ));
  CIC1Cos_SLICE_1221 \CIC1Cos/SLICE_1221 ( .B1(\CIC1Cos/d_d9_2 ), 
    .A1(\CIC1Cos/d9_2 ), .B0(\CIC1Cos/d_d9_1 ), .A0(\CIC1Cos/d9_1 ), 
    .FCI(\CIC1Cos/n11728 ), .FCO(\CIC1Cos/n11729 ));
  CIC1Cos_SLICE_1222 \CIC1Cos/SLICE_1222 ( .B1(\CIC1Cos/d_d9_0 ), 
    .A1(\CIC1Cos/d9_0 ), .FCO(\CIC1Cos/n11728 ));
  CIC1Cos_SLICE_1223 \CIC1Cos/SLICE_1223 ( .B0(\CIC1Cos/d_d8_35 ), 
    .A0(\CIC1Cos/d8_35 ), .DI0(\CIC1Cos/d9_71_N_1675_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11727 ), 
    .F0(\CIC1Cos/d9_71_N_1675_35 ), .Q0(\CIC1Cos/d9_35 ), .F1(\CIC1Cos/n6556 ));
  CIC1Cos_SLICE_1224 \CIC1Cos/SLICE_1224 ( .B1(\CIC1Cos/d_d8_34 ), 
    .A1(\CIC1Cos/d8_34 ), .B0(\CIC1Cos/d_d8_33 ), .A0(\CIC1Cos/d8_33 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_34 ), .DI0(\CIC1Cos/d9_71_N_1675_33 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11726 ), 
    .F0(\CIC1Cos/d9_71_N_1675_33 ), .Q0(\CIC1Cos/d9_33 ), 
    .F1(\CIC1Cos/d9_71_N_1675_34 ), .Q1(\CIC1Cos/d9_34 ), 
    .FCO(\CIC1Cos/n11727 ));
  CIC1Cos_SLICE_1225 \CIC1Cos/SLICE_1225 ( .B1(\CIC1Cos/d_d8_32 ), 
    .A1(\CIC1Cos/d8_32 ), .B0(\CIC1Cos/d_d8_31 ), .A0(\CIC1Cos/d8_31 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_32 ), .DI0(\CIC1Cos/d9_71_N_1675_31 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11725 ), 
    .F0(\CIC1Cos/d9_71_N_1675_31 ), .Q0(\CIC1Cos/d9_31 ), 
    .F1(\CIC1Cos/d9_71_N_1675_32 ), .Q1(\CIC1Cos/d9_32 ), 
    .FCO(\CIC1Cos/n11726 ));
  CIC1Cos_SLICE_1226 \CIC1Cos/SLICE_1226 ( .B1(\CIC1Cos/d_d8_30 ), 
    .A1(\CIC1Cos/d8_30 ), .B0(\CIC1Cos/d_d8_29 ), .A0(\CIC1Cos/d8_29 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_30 ), .DI0(\CIC1Cos/d9_71_N_1675_29 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11724 ), 
    .F0(\CIC1Cos/d9_71_N_1675_29 ), .Q0(\CIC1Cos/d9_29 ), 
    .F1(\CIC1Cos/d9_71_N_1675_30 ), .Q1(\CIC1Cos/d9_30 ), 
    .FCO(\CIC1Cos/n11725 ));
  CIC1Cos_SLICE_1227 \CIC1Cos/SLICE_1227 ( .B1(\CIC1Cos/d_d8_28 ), 
    .A1(\CIC1Cos/d8_28 ), .B0(\CIC1Cos/d_d8_27 ), .A0(\CIC1Cos/d8_27 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_28 ), .DI0(\CIC1Cos/d9_71_N_1675_27 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11723 ), 
    .F0(\CIC1Cos/d9_71_N_1675_27 ), .Q0(\CIC1Cos/d9_27 ), 
    .F1(\CIC1Cos/d9_71_N_1675_28 ), .Q1(\CIC1Cos/d9_28 ), 
    .FCO(\CIC1Cos/n11724 ));
  CIC1Cos_SLICE_1228 \CIC1Cos/SLICE_1228 ( .B1(\CIC1Cos/d_d8_26 ), 
    .A1(\CIC1Cos/d8_26 ), .B0(\CIC1Cos/d_d8_25 ), .A0(\CIC1Cos/d8_25 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_26 ), .DI0(\CIC1Cos/d9_71_N_1675_25 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11722 ), 
    .F0(\CIC1Cos/d9_71_N_1675_25 ), .Q0(\CIC1Cos/d9_25 ), 
    .F1(\CIC1Cos/d9_71_N_1675_26 ), .Q1(\CIC1Cos/d9_26 ), 
    .FCO(\CIC1Cos/n11723 ));
  CIC1Cos_SLICE_1229 \CIC1Cos/SLICE_1229 ( .B1(\CIC1Cos/d_d8_24 ), 
    .A1(\CIC1Cos/d8_24 ), .B0(\CIC1Cos/d_d8_23 ), .A0(\CIC1Cos/d8_23 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_24 ), .DI0(\CIC1Cos/d9_71_N_1675_23 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11721 ), 
    .F0(\CIC1Cos/d9_71_N_1675_23 ), .Q0(\CIC1Cos/d9_23 ), 
    .F1(\CIC1Cos/d9_71_N_1675_24 ), .Q1(\CIC1Cos/d9_24 ), 
    .FCO(\CIC1Cos/n11722 ));
  CIC1Cos_SLICE_1230 \CIC1Cos/SLICE_1230 ( .B1(\CIC1Cos/d_d8_22 ), 
    .A1(\CIC1Cos/d8_22 ), .B0(\CIC1Cos/d_d8_21 ), .A0(\CIC1Cos/d8_21 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_22 ), .DI0(\CIC1Cos/d9_71_N_1675_21 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11720 ), 
    .F0(\CIC1Cos/d9_71_N_1675_21 ), .Q0(\CIC1Cos/d9_21 ), 
    .F1(\CIC1Cos/d9_71_N_1675_22 ), .Q1(\CIC1Cos/d9_22 ), 
    .FCO(\CIC1Cos/n11721 ));
  CIC1Cos_SLICE_1231 \CIC1Cos/SLICE_1231 ( .B1(\CIC1Cos/d_d8_20 ), 
    .A1(\CIC1Cos/d8_20 ), .B0(\CIC1Cos/d_d8_19 ), .A0(\CIC1Cos/d8_19 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_20 ), .DI0(\CIC1Cos/d9_71_N_1675_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11719 ), 
    .F0(\CIC1Cos/d9_71_N_1675_19 ), .Q0(\CIC1Cos/d9_19 ), 
    .F1(\CIC1Cos/d9_71_N_1675_20 ), .Q1(\CIC1Cos/d9_20 ), 
    .FCO(\CIC1Cos/n11720 ));
  CIC1Cos_SLICE_1232 \CIC1Cos/SLICE_1232 ( .B1(\CIC1Cos/d_d8_18 ), 
    .A1(\CIC1Cos/d8_18 ), .B0(\CIC1Cos/d_d8_17 ), .A0(\CIC1Cos/d8_17 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_18 ), .DI0(\CIC1Cos/d9_71_N_1675_17 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11718 ), 
    .F0(\CIC1Cos/d9_71_N_1675_17 ), .Q0(\CIC1Cos/d9_17 ), 
    .F1(\CIC1Cos/d9_71_N_1675_18 ), .Q1(\CIC1Cos/d9_18 ), 
    .FCO(\CIC1Cos/n11719 ));
  CIC1Cos_SLICE_1233 \CIC1Cos/SLICE_1233 ( .B1(\CIC1Cos/d_d8_16 ), 
    .A1(\CIC1Cos/d8_16 ), .B0(\CIC1Cos/d_d8_15 ), .A0(\CIC1Cos/d8_15 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_16 ), .DI0(\CIC1Cos/d9_71_N_1675_15 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11717 ), 
    .F0(\CIC1Cos/d9_71_N_1675_15 ), .Q0(\CIC1Cos/d9_15 ), 
    .F1(\CIC1Cos/d9_71_N_1675_16 ), .Q1(\CIC1Cos/d9_16 ), 
    .FCO(\CIC1Cos/n11718 ));
  CIC1Cos_SLICE_1234 \CIC1Cos/SLICE_1234 ( .B1(\CIC1Cos/d_d8_14 ), 
    .A1(\CIC1Cos/d8_14 ), .B0(\CIC1Cos/d_d8_13 ), .A0(\CIC1Cos/d8_13 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_14 ), .DI0(\CIC1Cos/d9_71_N_1675_13 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11716 ), 
    .F0(\CIC1Cos/d9_71_N_1675_13 ), .Q0(\CIC1Cos/d9_13 ), 
    .F1(\CIC1Cos/d9_71_N_1675_14 ), .Q1(\CIC1Cos/d9_14 ), 
    .FCO(\CIC1Cos/n11717 ));
  CIC1Cos_SLICE_1235 \CIC1Cos/SLICE_1235 ( .B1(\CIC1Cos/d_d8_12 ), 
    .A1(\CIC1Cos/d8_12 ), .B0(\CIC1Cos/d_d8_11 ), .A0(\CIC1Cos/d8_11 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_12 ), .DI0(\CIC1Cos/d9_71_N_1675_11 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11715 ), 
    .F0(\CIC1Cos/d9_71_N_1675_11 ), .Q0(\CIC1Cos/d9_11 ), 
    .F1(\CIC1Cos/d9_71_N_1675_12 ), .Q1(\CIC1Cos/d9_12 ), 
    .FCO(\CIC1Cos/n11716 ));
  CIC1Cos_SLICE_1236 \CIC1Cos/SLICE_1236 ( .B1(\CIC1Cos/d_d8_10 ), 
    .A1(\CIC1Cos/d8_10 ), .B0(\CIC1Cos/d_d8_9 ), .A0(\CIC1Cos/d8_9 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_10 ), .DI0(\CIC1Cos/d9_71_N_1675_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11714 ), 
    .F0(\CIC1Cos/d9_71_N_1675_9 ), .Q0(\CIC1Cos/d9_9 ), 
    .F1(\CIC1Cos/d9_71_N_1675_10 ), .Q1(\CIC1Cos/d9_10 ), 
    .FCO(\CIC1Cos/n11715 ));
  CIC1Cos_SLICE_1237 \CIC1Cos/SLICE_1237 ( .B1(\CIC1Cos/d_d8_8 ), 
    .A1(\CIC1Cos/d8_8 ), .B0(\CIC1Cos/d_d8_7 ), .A0(\CIC1Cos/d8_7 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_8 ), .DI0(\CIC1Cos/d9_71_N_1675_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11713 ), 
    .F0(\CIC1Cos/d9_71_N_1675_7 ), .Q0(\CIC1Cos/d9_7 ), 
    .F1(\CIC1Cos/d9_71_N_1675_8 ), .Q1(\CIC1Cos/d9_8 ), .FCO(\CIC1Cos/n11714 ));
  CIC1Cos_SLICE_1238 \CIC1Cos/SLICE_1238 ( .B1(\CIC1Cos/d_d8_6 ), 
    .A1(\CIC1Cos/d8_6 ), .B0(\CIC1Cos/d_d8_5 ), .A0(\CIC1Cos/d8_5 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_6 ), .DI0(\CIC1Cos/d9_71_N_1675_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11712 ), 
    .F0(\CIC1Cos/d9_71_N_1675_5 ), .Q0(\CIC1Cos/d9_5 ), 
    .F1(\CIC1Cos/d9_71_N_1675_6 ), .Q1(\CIC1Cos/d9_6 ), .FCO(\CIC1Cos/n11713 ));
  CIC1Cos_SLICE_1239 \CIC1Cos/SLICE_1239 ( .B1(\CIC1Cos/d_d8_4 ), 
    .A1(\CIC1Cos/d8_4 ), .B0(\CIC1Cos/d_d8_3 ), .A0(\CIC1Cos/d8_3 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_4 ), .DI0(\CIC1Cos/d9_71_N_1675_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11711 ), 
    .F0(\CIC1Cos/d9_71_N_1675_3 ), .Q0(\CIC1Cos/d9_3 ), 
    .F1(\CIC1Cos/d9_71_N_1675_4 ), .Q1(\CIC1Cos/d9_4 ), .FCO(\CIC1Cos/n11712 ));
  CIC1Cos_SLICE_1240 \CIC1Cos/SLICE_1240 ( .B1(\CIC1Cos/d_d8_2 ), 
    .A1(\CIC1Cos/d8_2 ), .B0(\CIC1Cos/d_d8_1 ), .A0(\CIC1Cos/d8_1 ), 
    .DI1(\CIC1Cos/d9_71_N_1675_2 ), .DI0(\CIC1Cos/d9_71_N_1675_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11710 ), 
    .F0(\CIC1Cos/d9_71_N_1675_1 ), .Q0(\CIC1Cos/d9_1 ), 
    .F1(\CIC1Cos/d9_71_N_1675_2 ), .Q1(\CIC1Cos/d9_2 ), .FCO(\CIC1Cos/n11711 ));
  CIC1Cos_SLICE_1241 \CIC1Cos/SLICE_1241 ( .B1(\CIC1Cos/d_d8_0 ), 
    .A1(\CIC1Cos/d8_0 ), .DI1(\CIC1Cos/d9_71_N_1675_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d9_71_N_1675_0 ), .Q1(\CIC1Cos/d9_0 ), .FCO(\CIC1Cos/n11710 ));
  CIC1Cos_SLICE_1242 \CIC1Cos/SLICE_1242 ( .B0(\CIC1Cos/d_d7_35 ), 
    .A0(\CIC1Cos/d7_35 ), .DI0(\CIC1Cos/d8_71_N_1603_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11709 ), 
    .F0(\CIC1Cos/d8_71_N_1603_35 ), .Q0(\CIC1Cos/d8_35 ), .F1(\CIC1Cos/n6404 ));
  CIC1Cos_SLICE_1243 \CIC1Cos/SLICE_1243 ( .B1(\CIC1Cos/d_d7_34 ), 
    .A1(\CIC1Cos/d7_34 ), .B0(\CIC1Cos/d_d7_33 ), .A0(\CIC1Cos/d7_33 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_34 ), .DI0(\CIC1Cos/d8_71_N_1603_33 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11708 ), 
    .F0(\CIC1Cos/d8_71_N_1603_33 ), .Q0(\CIC1Cos/d8_33 ), 
    .F1(\CIC1Cos/d8_71_N_1603_34 ), .Q1(\CIC1Cos/d8_34 ), 
    .FCO(\CIC1Cos/n11709 ));
  CIC1Cos_SLICE_1244 \CIC1Cos/SLICE_1244 ( .B1(\CIC1Cos/d_d7_32 ), 
    .A1(\CIC1Cos/d7_32 ), .B0(\CIC1Cos/d_d7_31 ), .A0(\CIC1Cos/d7_31 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_32 ), .DI0(\CIC1Cos/d8_71_N_1603_31 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11707 ), 
    .F0(\CIC1Cos/d8_71_N_1603_31 ), .Q0(\CIC1Cos/d8_31 ), 
    .F1(\CIC1Cos/d8_71_N_1603_32 ), .Q1(\CIC1Cos/d8_32 ), 
    .FCO(\CIC1Cos/n11708 ));
  CIC1Cos_SLICE_1245 \CIC1Cos/SLICE_1245 ( .B1(\CIC1Cos/d_d7_30 ), 
    .A1(\CIC1Cos/d7_30 ), .B0(\CIC1Cos/d_d7_29 ), .A0(\CIC1Cos/d7_29 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_30 ), .DI0(\CIC1Cos/d8_71_N_1603_29 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11706 ), 
    .F0(\CIC1Cos/d8_71_N_1603_29 ), .Q0(\CIC1Cos/d8_29 ), 
    .F1(\CIC1Cos/d8_71_N_1603_30 ), .Q1(\CIC1Cos/d8_30 ), 
    .FCO(\CIC1Cos/n11707 ));
  CIC1Cos_SLICE_1246 \CIC1Cos/SLICE_1246 ( .B1(\CIC1Cos/d_d7_28 ), 
    .A1(\CIC1Cos/d7_28 ), .B0(\CIC1Cos/d_d7_27 ), .A0(\CIC1Cos/d7_27 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_28 ), .DI0(\CIC1Cos/d8_71_N_1603_27 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11705 ), 
    .F0(\CIC1Cos/d8_71_N_1603_27 ), .Q0(\CIC1Cos/d8_27 ), 
    .F1(\CIC1Cos/d8_71_N_1603_28 ), .Q1(\CIC1Cos/d8_28 ), 
    .FCO(\CIC1Cos/n11706 ));
  CIC1Cos_SLICE_1247 \CIC1Cos/SLICE_1247 ( .B1(\CIC1Cos/d_d7_26 ), 
    .A1(\CIC1Cos/d7_26 ), .B0(\CIC1Cos/d_d7_25 ), .A0(\CIC1Cos/d7_25 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_26 ), .DI0(\CIC1Cos/d8_71_N_1603_25 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11704 ), 
    .F0(\CIC1Cos/d8_71_N_1603_25 ), .Q0(\CIC1Cos/d8_25 ), 
    .F1(\CIC1Cos/d8_71_N_1603_26 ), .Q1(\CIC1Cos/d8_26 ), 
    .FCO(\CIC1Cos/n11705 ));
  CIC1Cos_SLICE_1248 \CIC1Cos/SLICE_1248 ( .B1(\CIC1Cos/d_d7_24 ), 
    .A1(\CIC1Cos/d7_24 ), .B0(\CIC1Cos/d_d7_23 ), .A0(\CIC1Cos/d7_23 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_24 ), .DI0(\CIC1Cos/d8_71_N_1603_23 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11703 ), 
    .F0(\CIC1Cos/d8_71_N_1603_23 ), .Q0(\CIC1Cos/d8_23 ), 
    .F1(\CIC1Cos/d8_71_N_1603_24 ), .Q1(\CIC1Cos/d8_24 ), 
    .FCO(\CIC1Cos/n11704 ));
  CIC1Cos_SLICE_1249 \CIC1Cos/SLICE_1249 ( .B1(\CIC1Cos/d_d7_22 ), 
    .A1(\CIC1Cos/d7_22 ), .B0(\CIC1Cos/d_d7_21 ), .A0(\CIC1Cos/d7_21 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_22 ), .DI0(\CIC1Cos/d8_71_N_1603_21 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11702 ), 
    .F0(\CIC1Cos/d8_71_N_1603_21 ), .Q0(\CIC1Cos/d8_21 ), 
    .F1(\CIC1Cos/d8_71_N_1603_22 ), .Q1(\CIC1Cos/d8_22 ), 
    .FCO(\CIC1Cos/n11703 ));
  CIC1Cos_SLICE_1250 \CIC1Cos/SLICE_1250 ( .B1(\CIC1Cos/d_d7_20 ), 
    .A1(\CIC1Cos/d7_20 ), .B0(\CIC1Cos/d_d7_19 ), .A0(\CIC1Cos/d7_19 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_20 ), .DI0(\CIC1Cos/d8_71_N_1603_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11701 ), 
    .F0(\CIC1Cos/d8_71_N_1603_19 ), .Q0(\CIC1Cos/d8_19 ), 
    .F1(\CIC1Cos/d8_71_N_1603_20 ), .Q1(\CIC1Cos/d8_20 ), 
    .FCO(\CIC1Cos/n11702 ));
  CIC1Cos_SLICE_1251 \CIC1Cos/SLICE_1251 ( .B1(\CIC1Cos/d_d7_18 ), 
    .A1(\CIC1Cos/d7_18 ), .B0(\CIC1Cos/d_d7_17 ), .A0(\CIC1Cos/d7_17 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_18 ), .DI0(\CIC1Cos/d8_71_N_1603_17 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11700 ), 
    .F0(\CIC1Cos/d8_71_N_1603_17 ), .Q0(\CIC1Cos/d8_17 ), 
    .F1(\CIC1Cos/d8_71_N_1603_18 ), .Q1(\CIC1Cos/d8_18 ), 
    .FCO(\CIC1Cos/n11701 ));
  CIC1Cos_SLICE_1252 \CIC1Cos/SLICE_1252 ( .B1(\CIC1Cos/d_d7_16 ), 
    .A1(\CIC1Cos/d7_16 ), .B0(\CIC1Cos/d_d7_15 ), .A0(\CIC1Cos/d7_15 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_16 ), .DI0(\CIC1Cos/d8_71_N_1603_15 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11699 ), 
    .F0(\CIC1Cos/d8_71_N_1603_15 ), .Q0(\CIC1Cos/d8_15 ), 
    .F1(\CIC1Cos/d8_71_N_1603_16 ), .Q1(\CIC1Cos/d8_16 ), 
    .FCO(\CIC1Cos/n11700 ));
  CIC1Cos_SLICE_1253 \CIC1Cos/SLICE_1253 ( .B1(\CIC1Cos/d_d7_14 ), 
    .A1(\CIC1Cos/d7_14 ), .B0(\CIC1Cos/d_d7_13 ), .A0(\CIC1Cos/d7_13 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_14 ), .DI0(\CIC1Cos/d8_71_N_1603_13 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11698 ), 
    .F0(\CIC1Cos/d8_71_N_1603_13 ), .Q0(\CIC1Cos/d8_13 ), 
    .F1(\CIC1Cos/d8_71_N_1603_14 ), .Q1(\CIC1Cos/d8_14 ), 
    .FCO(\CIC1Cos/n11699 ));
  CIC1Cos_SLICE_1254 \CIC1Cos/SLICE_1254 ( .B1(\CIC1Cos/d_d7_12 ), 
    .A1(\CIC1Cos/d7_12 ), .B0(\CIC1Cos/d_d7_11 ), .A0(\CIC1Cos/d7_11 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_12 ), .DI0(\CIC1Cos/d8_71_N_1603_11 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11697 ), 
    .F0(\CIC1Cos/d8_71_N_1603_11 ), .Q0(\CIC1Cos/d8_11 ), 
    .F1(\CIC1Cos/d8_71_N_1603_12 ), .Q1(\CIC1Cos/d8_12 ), 
    .FCO(\CIC1Cos/n11698 ));
  CIC1Cos_SLICE_1255 \CIC1Cos/SLICE_1255 ( .B1(\CIC1Cos/d_d7_10 ), 
    .A1(\CIC1Cos/d7_10 ), .B0(\CIC1Cos/d_d7_9 ), .A0(\CIC1Cos/d7_9 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_10 ), .DI0(\CIC1Cos/d8_71_N_1603_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11696 ), 
    .F0(\CIC1Cos/d8_71_N_1603_9 ), .Q0(\CIC1Cos/d8_9 ), 
    .F1(\CIC1Cos/d8_71_N_1603_10 ), .Q1(\CIC1Cos/d8_10 ), 
    .FCO(\CIC1Cos/n11697 ));
  CIC1Cos_SLICE_1256 \CIC1Cos/SLICE_1256 ( .B1(\CIC1Cos/d_d7_8 ), 
    .A1(\CIC1Cos/d7_8 ), .B0(\CIC1Cos/d_d7_7 ), .A0(\CIC1Cos/d7_7 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_8 ), .DI0(\CIC1Cos/d8_71_N_1603_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11695 ), 
    .F0(\CIC1Cos/d8_71_N_1603_7 ), .Q0(\CIC1Cos/d8_7 ), 
    .F1(\CIC1Cos/d8_71_N_1603_8 ), .Q1(\CIC1Cos/d8_8 ), .FCO(\CIC1Cos/n11696 ));
  CIC1Cos_SLICE_1257 \CIC1Cos/SLICE_1257 ( .B1(\CIC1Cos/d_d7_6 ), 
    .A1(\CIC1Cos/d7_6 ), .B0(\CIC1Cos/d_d7_5 ), .A0(\CIC1Cos/d7_5 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_6 ), .DI0(\CIC1Cos/d8_71_N_1603_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11694 ), 
    .F0(\CIC1Cos/d8_71_N_1603_5 ), .Q0(\CIC1Cos/d8_5 ), 
    .F1(\CIC1Cos/d8_71_N_1603_6 ), .Q1(\CIC1Cos/d8_6 ), .FCO(\CIC1Cos/n11695 ));
  CIC1Cos_SLICE_1258 \CIC1Cos/SLICE_1258 ( .B1(\CIC1Cos/d_d7_4 ), 
    .A1(\CIC1Cos/d7_4 ), .B0(\CIC1Cos/d_d7_3 ), .A0(\CIC1Cos/d7_3 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_4 ), .DI0(\CIC1Cos/d8_71_N_1603_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11693 ), 
    .F0(\CIC1Cos/d8_71_N_1603_3 ), .Q0(\CIC1Cos/d8_3 ), 
    .F1(\CIC1Cos/d8_71_N_1603_4 ), .Q1(\CIC1Cos/d8_4 ), .FCO(\CIC1Cos/n11694 ));
  CIC1Cos_SLICE_1259 \CIC1Cos/SLICE_1259 ( .B1(\CIC1Cos/d_d7_2 ), 
    .A1(\CIC1Cos/d7_2 ), .B0(\CIC1Cos/d_d7_1 ), .A0(\CIC1Cos/d7_1 ), 
    .DI1(\CIC1Cos/d8_71_N_1603_2 ), .DI0(\CIC1Cos/d8_71_N_1603_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11692 ), 
    .F0(\CIC1Cos/d8_71_N_1603_1 ), .Q0(\CIC1Cos/d8_1 ), 
    .F1(\CIC1Cos/d8_71_N_1603_2 ), .Q1(\CIC1Cos/d8_2 ), .FCO(\CIC1Cos/n11693 ));
  CIC1Cos_SLICE_1260 \CIC1Cos/SLICE_1260 ( .B1(\CIC1Cos/d_d7_0 ), 
    .A1(\CIC1Cos/d7_0 ), .DI1(\CIC1Cos/d8_71_N_1603_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d8_71_N_1603_0 ), .Q1(\CIC1Cos/d8_0 ), .FCO(\CIC1Cos/n11692 ));
  CIC1Cos_SLICE_1261 \CIC1Cos/SLICE_1261 ( .B0(\CIC1Cos/d_d6_35 ), 
    .A0(\CIC1Cos/d6_35 ), .DI0(\CIC1Cos/d7_71_N_1531_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_1034 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11691 ), 
    .F0(\CIC1Cos/d7_71_N_1531_35 ), .Q0(\CIC1Cos/d7_35 ), .F1(\CIC1Cos/n6252 ));
  CIC1Cos_SLICE_1262 \CIC1Cos/SLICE_1262 ( .B1(\CIC1Cos/d_d6_34 ), 
    .A1(\CIC1Cos/d6_34 ), .B0(\CIC1Cos/d_d6_33 ), .A0(\CIC1Cos/d6_33 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_34 ), .DI0(\CIC1Cos/d7_71_N_1531_33 ), 
    .CE(\CIC1Cos/osc_clk_enable_1034 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11690 ), 
    .F0(\CIC1Cos/d7_71_N_1531_33 ), .Q0(\CIC1Cos/d7_33 ), 
    .F1(\CIC1Cos/d7_71_N_1531_34 ), .Q1(\CIC1Cos/d7_34 ), 
    .FCO(\CIC1Cos/n11691 ));
  CIC1Cos_SLICE_1263 \CIC1Cos/SLICE_1263 ( .B1(\CIC1Cos/d_d6_32 ), 
    .A1(\CIC1Cos/d6_32 ), .B0(\CIC1Cos/d_d6_31 ), .A0(\CIC1Cos/d6_31 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_32 ), .DI0(\CIC1Cos/d7_71_N_1531_31 ), 
    .CE(\CIC1Cos/osc_clk_enable_1034 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11689 ), 
    .F0(\CIC1Cos/d7_71_N_1531_31 ), .Q0(\CIC1Cos/d7_31 ), 
    .F1(\CIC1Cos/d7_71_N_1531_32 ), .Q1(\CIC1Cos/d7_32 ), 
    .FCO(\CIC1Cos/n11690 ));
  CIC1Cos_SLICE_1264 \CIC1Cos/SLICE_1264 ( .B1(\CIC1Cos/d_d6_30 ), 
    .A1(\CIC1Cos/d6_30 ), .B0(\CIC1Cos/d_d6_29 ), .A0(\CIC1Cos/d6_29 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_30 ), .DI0(\CIC1Cos/d7_71_N_1531_29 ), 
    .CE(\CIC1Cos/osc_clk_enable_1034 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11688 ), 
    .F0(\CIC1Cos/d7_71_N_1531_29 ), .Q0(\CIC1Cos/d7_29 ), 
    .F1(\CIC1Cos/d7_71_N_1531_30 ), .Q1(\CIC1Cos/d7_30 ), 
    .FCO(\CIC1Cos/n11689 ));
  CIC1Cos_SLICE_1265 \CIC1Cos/SLICE_1265 ( .B1(\CIC1Cos/d_d6_28 ), 
    .A1(\CIC1Cos/d6_28 ), .B0(\CIC1Cos/d_d6_27 ), .A0(\CIC1Cos/d6_27 ), 
    .DI0(\CIC1Cos/d7_71_N_1531_27 ), .CE(\CIC1Cos/osc_clk_enable_984 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11687 ), .F0(\CIC1Cos/d7_71_N_1531_27 ), 
    .Q0(\CIC1Cos/d7_27 ), .F1(\CIC1Cos/d7_71_N_1531_28 ), 
    .FCO(\CIC1Cos/n11688 ));
  CIC1Cos_SLICE_1266 \CIC1Cos/SLICE_1266 ( .B1(\CIC1Cos/d_d6_26 ), 
    .A1(\CIC1Cos/d6_26 ), .B0(\CIC1Cos/d_d6_25 ), .A0(\CIC1Cos/d6_25 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_26 ), .DI0(\CIC1Cos/d7_71_N_1531_25 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11686 ), 
    .F0(\CIC1Cos/d7_71_N_1531_25 ), .Q0(\CIC1Cos/d7_25 ), 
    .F1(\CIC1Cos/d7_71_N_1531_26 ), .Q1(\CIC1Cos/d7_26 ), 
    .FCO(\CIC1Cos/n11687 ));
  CIC1Cos_SLICE_1267 \CIC1Cos/SLICE_1267 ( .B1(\CIC1Cos/d_d6_24 ), 
    .A1(\CIC1Cos/d6_24 ), .B0(\CIC1Cos/d_d6_23 ), .A0(\CIC1Cos/d6_23 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_24 ), .DI0(\CIC1Cos/d7_71_N_1531_23 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11685 ), 
    .F0(\CIC1Cos/d7_71_N_1531_23 ), .Q0(\CIC1Cos/d7_23 ), 
    .F1(\CIC1Cos/d7_71_N_1531_24 ), .Q1(\CIC1Cos/d7_24 ), 
    .FCO(\CIC1Cos/n11686 ));
  CIC1Cos_SLICE_1268 \CIC1Cos/SLICE_1268 ( .B1(\CIC1Cos/d_d6_22 ), 
    .A1(\CIC1Cos/d6_22 ), .B0(\CIC1Cos/d_d6_21 ), .A0(\CIC1Cos/d6_21 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_22 ), .DI0(\CIC1Cos/d7_71_N_1531_21 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11684 ), 
    .F0(\CIC1Cos/d7_71_N_1531_21 ), .Q0(\CIC1Cos/d7_21 ), 
    .F1(\CIC1Cos/d7_71_N_1531_22 ), .Q1(\CIC1Cos/d7_22 ), 
    .FCO(\CIC1Cos/n11685 ));
  CIC1Cos_SLICE_1269 \CIC1Cos/SLICE_1269 ( .B1(\CIC1Cos/d_d6_20 ), 
    .A1(\CIC1Cos/d6_20 ), .B0(\CIC1Cos/d_d6_19 ), .A0(\CIC1Cos/d6_19 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_20 ), .DI0(\CIC1Cos/d7_71_N_1531_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11683 ), 
    .F0(\CIC1Cos/d7_71_N_1531_19 ), .Q0(\CIC1Cos/d7_19 ), 
    .F1(\CIC1Cos/d7_71_N_1531_20 ), .Q1(\CIC1Cos/d7_20 ), 
    .FCO(\CIC1Cos/n11684 ));
  CIC1Cos_SLICE_1270 \CIC1Cos/SLICE_1270 ( .B1(\CIC1Cos/d_d6_18 ), 
    .A1(\CIC1Cos/d6_18 ), .B0(\CIC1Cos/d_d6_17 ), .A0(\CIC1Cos/d6_17 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_18 ), .DI0(\CIC1Cos/d7_71_N_1531_17 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11682 ), 
    .F0(\CIC1Cos/d7_71_N_1531_17 ), .Q0(\CIC1Cos/d7_17 ), 
    .F1(\CIC1Cos/d7_71_N_1531_18 ), .Q1(\CIC1Cos/d7_18 ), 
    .FCO(\CIC1Cos/n11683 ));
  CIC1Cos_SLICE_1271 \CIC1Cos/SLICE_1271 ( .B1(\CIC1Cos/d_d6_16 ), 
    .A1(\CIC1Cos/d6_16 ), .B0(\CIC1Cos/d_d6_15 ), .A0(\CIC1Cos/d6_15 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_16 ), .DI0(\CIC1Cos/d7_71_N_1531_15 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11681 ), 
    .F0(\CIC1Cos/d7_71_N_1531_15 ), .Q0(\CIC1Cos/d7_15 ), 
    .F1(\CIC1Cos/d7_71_N_1531_16 ), .Q1(\CIC1Cos/d7_16 ), 
    .FCO(\CIC1Cos/n11682 ));
  CIC1Cos_SLICE_1272 \CIC1Cos/SLICE_1272 ( .B1(\CIC1Cos/d_d6_14 ), 
    .A1(\CIC1Cos/d6_14 ), .B0(\CIC1Cos/d_d6_13 ), .A0(\CIC1Cos/d6_13 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_14 ), .DI0(\CIC1Cos/d7_71_N_1531_13 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11680 ), 
    .F0(\CIC1Cos/d7_71_N_1531_13 ), .Q0(\CIC1Cos/d7_13 ), 
    .F1(\CIC1Cos/d7_71_N_1531_14 ), .Q1(\CIC1Cos/d7_14 ), 
    .FCO(\CIC1Cos/n11681 ));
  CIC1Cos_SLICE_1273 \CIC1Cos/SLICE_1273 ( .B1(\CIC1Cos/d_d6_12 ), 
    .A1(\CIC1Cos/d6_12 ), .B0(\CIC1Cos/d_d6_11 ), .A0(\CIC1Cos/d6_11 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_12 ), .DI0(\CIC1Cos/d7_71_N_1531_11 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11679 ), 
    .F0(\CIC1Cos/d7_71_N_1531_11 ), .Q0(\CIC1Cos/d7_11 ), 
    .F1(\CIC1Cos/d7_71_N_1531_12 ), .Q1(\CIC1Cos/d7_12 ), 
    .FCO(\CIC1Cos/n11680 ));
  CIC1Cos_SLICE_1274 \CIC1Cos/SLICE_1274 ( .B1(\CIC1Cos/d_d6_10 ), 
    .A1(\CIC1Cos/d6_10 ), .B0(\CIC1Cos/d_d6_9 ), .A0(\CIC1Cos/d6_9 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_10 ), .DI0(\CIC1Cos/d7_71_N_1531_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11678 ), 
    .F0(\CIC1Cos/d7_71_N_1531_9 ), .Q0(\CIC1Cos/d7_9 ), 
    .F1(\CIC1Cos/d7_71_N_1531_10 ), .Q1(\CIC1Cos/d7_10 ), 
    .FCO(\CIC1Cos/n11679 ));
  CIC1Cos_SLICE_1275 \CIC1Cos/SLICE_1275 ( .B1(\CIC1Cos/d_d6_8 ), 
    .A1(\CIC1Cos/d6_8 ), .B0(\CIC1Cos/d_d6_7 ), .A0(\CIC1Cos/d6_7 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_8 ), .DI0(\CIC1Cos/d7_71_N_1531_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11677 ), 
    .F0(\CIC1Cos/d7_71_N_1531_7 ), .Q0(\CIC1Cos/d7_7 ), 
    .F1(\CIC1Cos/d7_71_N_1531_8 ), .Q1(\CIC1Cos/d7_8 ), .FCO(\CIC1Cos/n11678 ));
  CIC1Cos_SLICE_1276 \CIC1Cos/SLICE_1276 ( .B1(\CIC1Cos/d_d6_6 ), 
    .A1(\CIC1Cos/d6_6 ), .B0(\CIC1Cos/d_d6_5 ), .A0(\CIC1Cos/d6_5 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_6 ), .DI0(\CIC1Cos/d7_71_N_1531_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11676 ), 
    .F0(\CIC1Cos/d7_71_N_1531_5 ), .Q0(\CIC1Cos/d7_5 ), 
    .F1(\CIC1Cos/d7_71_N_1531_6 ), .Q1(\CIC1Cos/d7_6 ), .FCO(\CIC1Cos/n11677 ));
  CIC1Cos_SLICE_1277 \CIC1Cos/SLICE_1277 ( .B1(\CIC1Cos/d_d6_4 ), 
    .A1(\CIC1Cos/d6_4 ), .B0(\CIC1Cos/d_d6_3 ), .A0(\CIC1Cos/d6_3 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_4 ), .DI0(\CIC1Cos/d7_71_N_1531_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11675 ), 
    .F0(\CIC1Cos/d7_71_N_1531_3 ), .Q0(\CIC1Cos/d7_3 ), 
    .F1(\CIC1Cos/d7_71_N_1531_4 ), .Q1(\CIC1Cos/d7_4 ), .FCO(\CIC1Cos/n11676 ));
  CIC1Cos_SLICE_1278 \CIC1Cos/SLICE_1278 ( .B1(\CIC1Cos/d_d6_2 ), 
    .A1(\CIC1Cos/d6_2 ), .B0(\CIC1Cos/d_d6_1 ), .A0(\CIC1Cos/d6_1 ), 
    .DI1(\CIC1Cos/d7_71_N_1531_2 ), .DI0(\CIC1Cos/d7_71_N_1531_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11674 ), 
    .F0(\CIC1Cos/d7_71_N_1531_1 ), .Q0(\CIC1Cos/d7_1 ), 
    .F1(\CIC1Cos/d7_71_N_1531_2 ), .Q1(\CIC1Cos/d7_2 ), .FCO(\CIC1Cos/n11675 ));
  CIC1Cos_SLICE_1279 \CIC1Cos/SLICE_1279 ( .B1(\CIC1Cos/d_d6_0 ), 
    .A1(\CIC1Cos/d6_0 ), .DI1(\CIC1Cos/d7_71_N_1531_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d7_71_N_1531_0 ), .Q1(\CIC1Cos/d7_0 ), .FCO(\CIC1Cos/n11674 ));
  CIC1Cos_SLICE_1280 \CIC1Cos/SLICE_1280 ( .B0(\CIC1Cos/d_d_tmp_35 ), 
    .A0(\CIC1Cos/d_tmp_35 ), .DI0(\CIC1Cos/d6_71_N_1459_35 ), 
    .CE(\CIC1Cos/osc_clk_enable_884 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11673 ), 
    .F0(\CIC1Cos/d6_71_N_1459_35 ), .Q0(\CIC1Cos/d6_35 ), .F1(\CIC1Cos/n6100 ));
  CIC1Cos_SLICE_1281 \CIC1Cos/SLICE_1281 ( .B1(\CIC1Cos/d_d_tmp_34 ), 
    .A1(\CIC1Cos/d_tmp_34 ), .B0(\CIC1Cos/d_d_tmp_33 ), 
    .A0(\CIC1Cos/d_tmp_33 ), .DI1(\CIC1Cos/d6_71_N_1459_34 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_33 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11672 ), .F0(\CIC1Cos/d6_71_N_1459_33 ), 
    .Q0(\CIC1Cos/d6_33 ), .F1(\CIC1Cos/d6_71_N_1459_34 ), .Q1(\CIC1Cos/d6_34 ), 
    .FCO(\CIC1Cos/n11673 ));
  CIC1Cos_SLICE_1282 \CIC1Cos/SLICE_1282 ( .B1(\CIC1Cos/d_d_tmp_32 ), 
    .A1(\CIC1Cos/d_tmp_32 ), .B0(\CIC1Cos/d_d_tmp_31 ), 
    .A0(\CIC1Cos/d_tmp_31 ), .DI1(\CIC1Cos/d6_71_N_1459_32 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_31 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11671 ), .F0(\CIC1Cos/d6_71_N_1459_31 ), 
    .Q0(\CIC1Cos/d6_31 ), .F1(\CIC1Cos/d6_71_N_1459_32 ), .Q1(\CIC1Cos/d6_32 ), 
    .FCO(\CIC1Cos/n11672 ));
  CIC1Cos_SLICE_1283 \CIC1Cos/SLICE_1283 ( .B1(\CIC1Cos/d_d_tmp_30 ), 
    .A1(\CIC1Cos/d_tmp_30 ), .B0(\CIC1Cos/d_d_tmp_29 ), 
    .A0(\CIC1Cos/d_tmp_29 ), .DI1(\CIC1Cos/d6_71_N_1459_30 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_29 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11670 ), .F0(\CIC1Cos/d6_71_N_1459_29 ), 
    .Q0(\CIC1Cos/d6_29 ), .F1(\CIC1Cos/d6_71_N_1459_30 ), .Q1(\CIC1Cos/d6_30 ), 
    .FCO(\CIC1Cos/n11671 ));
  CIC1Cos_SLICE_1284 \CIC1Cos/SLICE_1284 ( .B1(\CIC1Cos/d_d_tmp_28 ), 
    .A1(\CIC1Cos/d_tmp_28 ), .B0(\CIC1Cos/d_d_tmp_27 ), 
    .A0(\CIC1Cos/d_tmp_27 ), .DI1(\CIC1Cos/d6_71_N_1459_28 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_27 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11669 ), .F0(\CIC1Cos/d6_71_N_1459_27 ), 
    .Q0(\CIC1Cos/d6_27 ), .F1(\CIC1Cos/d6_71_N_1459_28 ), .Q1(\CIC1Cos/d6_28 ), 
    .FCO(\CIC1Cos/n11670 ));
  CIC1Cos_SLICE_1285 \CIC1Cos/SLICE_1285 ( .B1(\CIC1Cos/d_d_tmp_26 ), 
    .A1(\CIC1Cos/d_tmp_26 ), .B0(\CIC1Cos/d_d_tmp_25 ), 
    .A0(\CIC1Cos/d_tmp_25 ), .DI1(\CIC1Cos/d6_71_N_1459_26 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_25 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11668 ), .F0(\CIC1Cos/d6_71_N_1459_25 ), 
    .Q0(\CIC1Cos/d6_25 ), .F1(\CIC1Cos/d6_71_N_1459_26 ), .Q1(\CIC1Cos/d6_26 ), 
    .FCO(\CIC1Cos/n11669 ));
  CIC1Cos_SLICE_1286 \CIC1Cos/SLICE_1286 ( .B1(\CIC1Cos/d_d_tmp_24 ), 
    .A1(\CIC1Cos/d_tmp_24 ), .B0(\CIC1Cos/d_d_tmp_23 ), 
    .A0(\CIC1Cos/d_tmp_23 ), .DI1(\CIC1Cos/d6_71_N_1459_24 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_23 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11667 ), .F0(\CIC1Cos/d6_71_N_1459_23 ), 
    .Q0(\CIC1Cos/d6_23 ), .F1(\CIC1Cos/d6_71_N_1459_24 ), .Q1(\CIC1Cos/d6_24 ), 
    .FCO(\CIC1Cos/n11668 ));
  CIC1Cos_SLICE_1287 \CIC1Cos/SLICE_1287 ( .B1(\CIC1Cos/d_d_tmp_22 ), 
    .A1(\CIC1Cos/d_tmp_22 ), .B0(\CIC1Cos/d_d_tmp_21 ), 
    .A0(\CIC1Cos/d_tmp_21 ), .DI1(\CIC1Cos/d6_71_N_1459_22 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_21 ), .CE(\CIC1Cos/osc_clk_enable_884 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11666 ), .F0(\CIC1Cos/d6_71_N_1459_21 ), 
    .Q0(\CIC1Cos/d6_21 ), .F1(\CIC1Cos/d6_71_N_1459_22 ), .Q1(\CIC1Cos/d6_22 ), 
    .FCO(\CIC1Cos/n11667 ));
  CIC1Cos_SLICE_1288 \CIC1Cos/SLICE_1288 ( .B1(\CIC1Cos/d_d_tmp_20 ), 
    .A1(\CIC1Cos/d_tmp_20 ), .B0(\CIC1Cos/d_d_tmp_19 ), 
    .A0(\CIC1Cos/d_tmp_19 ), .DI0(\CIC1Cos/d6_71_N_1459_19 ), 
    .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11665 ), 
    .F0(\CIC1Cos/d6_71_N_1459_19 ), .Q0(\CIC1Cos/d6_19 ), 
    .F1(\CIC1Cos/d6_71_N_1459_20 ), .FCO(\CIC1Cos/n11666 ));
  CIC1Cos_SLICE_1289 \CIC1Cos/SLICE_1289 ( .B1(\CIC1Cos/d_d_tmp_18 ), 
    .A1(\CIC1Cos/d_tmp_18 ), .B0(\CIC1Cos/d_d_tmp_17 ), 
    .A0(\CIC1Cos/d_tmp_17 ), .DI1(\CIC1Cos/d6_71_N_1459_18 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_17 ), .CE(\CIC1Cos/osc_clk_enable_834 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11664 ), .F0(\CIC1Cos/d6_71_N_1459_17 ), 
    .Q0(\CIC1Cos/d6_17 ), .F1(\CIC1Cos/d6_71_N_1459_18 ), .Q1(\CIC1Cos/d6_18 ), 
    .FCO(\CIC1Cos/n11665 ));
  CIC1Cos_SLICE_1290 \CIC1Cos/SLICE_1290 ( .B1(\CIC1Cos/d_d_tmp_16 ), 
    .A1(\CIC1Cos/d_tmp_16 ), .B0(\CIC1Cos/d_d_tmp_15 ), 
    .A0(\CIC1Cos/d_tmp_15 ), .DI1(\CIC1Cos/d6_71_N_1459_16 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_15 ), .CE(\CIC1Cos/osc_clk_enable_834 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11663 ), .F0(\CIC1Cos/d6_71_N_1459_15 ), 
    .Q0(\CIC1Cos/d6_15 ), .F1(\CIC1Cos/d6_71_N_1459_16 ), .Q1(\CIC1Cos/d6_16 ), 
    .FCO(\CIC1Cos/n11664 ));
  CIC1Cos_SLICE_1291 \CIC1Cos/SLICE_1291 ( .B1(\CIC1Cos/d_d_tmp_14 ), 
    .A1(\CIC1Cos/d_tmp_14 ), .B0(\CIC1Cos/d_d_tmp_13 ), 
    .A0(\CIC1Cos/d_tmp_13 ), .DI1(\CIC1Cos/d6_71_N_1459_14 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_13 ), .CE(\CIC1Cos/osc_clk_enable_834 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11662 ), .F0(\CIC1Cos/d6_71_N_1459_13 ), 
    .Q0(\CIC1Cos/d6_13 ), .F1(\CIC1Cos/d6_71_N_1459_14 ), .Q1(\CIC1Cos/d6_14 ), 
    .FCO(\CIC1Cos/n11663 ));
  CIC1Cos_SLICE_1292 \CIC1Cos/SLICE_1292 ( .B1(\CIC1Cos/d_d_tmp_12 ), 
    .A1(\CIC1Cos/d_tmp_12 ), .B0(\CIC1Cos/d_d_tmp_11 ), 
    .A0(\CIC1Cos/d_tmp_11 ), .DI1(\CIC1Cos/d6_71_N_1459_12 ), 
    .DI0(\CIC1Cos/d6_71_N_1459_11 ), .CE(\CIC1Cos/osc_clk_enable_834 ), 
    .CLK(osc_clk), .FCI(\CIC1Cos/n11661 ), .F0(\CIC1Cos/d6_71_N_1459_11 ), 
    .Q0(\CIC1Cos/d6_11 ), .F1(\CIC1Cos/d6_71_N_1459_12 ), .Q1(\CIC1Cos/d6_12 ), 
    .FCO(\CIC1Cos/n11662 ));
  CIC1Cos_SLICE_1293 \CIC1Cos/SLICE_1293 ( .B1(\CIC1Cos/d_d_tmp_10 ), 
    .A1(\CIC1Cos/d_tmp_10 ), .B0(\CIC1Cos/d_d_tmp_9 ), .A0(\CIC1Cos/d_tmp_9 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_10 ), .DI0(\CIC1Cos/d6_71_N_1459_9 ), 
    .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11660 ), 
    .F0(\CIC1Cos/d6_71_N_1459_9 ), .Q0(\CIC1Cos/d6_9 ), 
    .F1(\CIC1Cos/d6_71_N_1459_10 ), .Q1(\CIC1Cos/d6_10 ), 
    .FCO(\CIC1Cos/n11661 ));
  CIC1Cos_SLICE_1294 \CIC1Cos/SLICE_1294 ( .B1(\CIC1Cos/d_d_tmp_8 ), 
    .A1(\CIC1Cos/d_tmp_8 ), .B0(\CIC1Cos/d_d_tmp_7 ), .A0(\CIC1Cos/d_tmp_7 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_8 ), .DI0(\CIC1Cos/d6_71_N_1459_7 ), 
    .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11659 ), 
    .F0(\CIC1Cos/d6_71_N_1459_7 ), .Q0(\CIC1Cos/d6_7 ), 
    .F1(\CIC1Cos/d6_71_N_1459_8 ), .Q1(\CIC1Cos/d6_8 ), .FCO(\CIC1Cos/n11660 ));
  CIC1Cos_SLICE_1295 \CIC1Cos/SLICE_1295 ( .B1(\CIC1Cos/d_d_tmp_6 ), 
    .A1(\CIC1Cos/d_tmp_6 ), .B0(\CIC1Cos/d_d_tmp_5 ), .A0(\CIC1Cos/d_tmp_5 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_6 ), .DI0(\CIC1Cos/d6_71_N_1459_5 ), 
    .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11658 ), 
    .F0(\CIC1Cos/d6_71_N_1459_5 ), .Q0(\CIC1Cos/d6_5 ), 
    .F1(\CIC1Cos/d6_71_N_1459_6 ), .Q1(\CIC1Cos/d6_6 ), .FCO(\CIC1Cos/n11659 ));
  CIC1Cos_SLICE_1296 \CIC1Cos/SLICE_1296 ( .B1(\CIC1Cos/d_d_tmp_4 ), 
    .A1(\CIC1Cos/d_tmp_4 ), .B0(\CIC1Cos/d_d_tmp_3 ), .A0(\CIC1Cos/d_tmp_3 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_4 ), .DI0(\CIC1Cos/d6_71_N_1459_3 ), 
    .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11657 ), 
    .F0(\CIC1Cos/d6_71_N_1459_3 ), .Q0(\CIC1Cos/d6_3 ), 
    .F1(\CIC1Cos/d6_71_N_1459_4 ), .Q1(\CIC1Cos/d6_4 ), .FCO(\CIC1Cos/n11658 ));
  CIC1Cos_SLICE_1297 \CIC1Cos/SLICE_1297 ( .B1(\CIC1Cos/d_d_tmp_2 ), 
    .A1(\CIC1Cos/d_tmp_2 ), .B0(\CIC1Cos/d_d_tmp_1 ), .A0(\CIC1Cos/d_tmp_1 ), 
    .DI1(\CIC1Cos/d6_71_N_1459_2 ), .DI0(\CIC1Cos/d6_71_N_1459_1 ), 
    .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), .FCI(\CIC1Cos/n11656 ), 
    .F0(\CIC1Cos/d6_71_N_1459_1 ), .Q0(\CIC1Cos/d6_1 ), 
    .F1(\CIC1Cos/d6_71_N_1459_2 ), .Q1(\CIC1Cos/d6_2 ), .FCO(\CIC1Cos/n11657 ));
  CIC1Cos_SLICE_1298 \CIC1Cos/SLICE_1298 ( .B1(\CIC1Cos/d_d_tmp_0 ), 
    .A1(\CIC1Cos/d_tmp_0 ), .DI1(\CIC1Cos/d6_71_N_1459_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .F1(\CIC1Cos/d6_71_N_1459_0 ), .Q1(\CIC1Cos/d6_0 ), .FCO(\CIC1Cos/n11656 ));
  CIC1Cos_SLICE_1299 \CIC1Cos/SLICE_1299 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5058 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_51 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5059 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_50 ), .DI1(\CIC1Cos/d1_71_N_418_51 ), 
    .DI0(\CIC1Cos/d1_71_N_418_50 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12055 ), 
    .F0(\CIC1Cos/d1_71_N_418_50 ), .Q0(\CIC1Cos/d1_50 ), 
    .F1(\CIC1Cos/d1_71_N_418_51 ), .Q1(\CIC1Cos/d1_51 ), 
    .FCO(\CIC1Cos/n12056 ));
  CIC1Cos_SLICE_1300 \CIC1Cos/SLICE_1300 ( .B1(\CIC1Cos/d5_53 ), 
    .A1(\CIC1Cos/d4_53 ), .B0(\CIC1Cos/d5_52 ), .A0(\CIC1Cos/d4_52 ), 
    .FCI(\CIC1Cos/n11911 ), .F0(\CIC1Cos/n5665 ), .F1(\CIC1Cos/n5664 ), 
    .FCO(\CIC1Cos/n11912 ));
  CIC1Cos_SLICE_1301 \CIC1Cos/SLICE_1301 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5050 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_59 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5051 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_58 ), .DI1(\CIC1Cos/d1_71_N_418_59 ), 
    .DI0(\CIC1Cos/d1_71_N_418_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12059 ), 
    .F0(\CIC1Cos/d1_71_N_418_58 ), .Q0(\CIC1Cos/d1_58 ), 
    .F1(\CIC1Cos/d1_71_N_418_59 ), .Q1(\CIC1Cos/d1_59 ), 
    .FCO(\CIC1Cos/n12060 ));
  CIC1Cos_SLICE_1302 \CIC1Cos/SLICE_1302 ( .B1(\CIC1Cos/d5_51 ), 
    .A1(\CIC1Cos/d4_51 ), .B0(\CIC1Cos/d5_50 ), .A0(\CIC1Cos/d4_50 ), 
    .FCI(\CIC1Cos/n11910 ), .F0(\CIC1Cos/n5667 ), .F1(\CIC1Cos/n5666 ), 
    .FCO(\CIC1Cos/n11911 ));
  CIC1Cos_SLICE_1303 \CIC1Cos/SLICE_1303 ( .B1(\CIC1Cos/d1_45 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_44 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12071 ), .F0(\CIC1Cos/n5065 ), .F1(\CIC1Cos/n5064 ), 
    .FCO(\CIC1Cos/n12072 ));
  CIC1Cos_SLICE_1304 \CIC1Cos/SLICE_1304 ( .B1(\CIC1Cos/d1_43 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_42 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12070 ), .F0(\CIC1Cos/n5067 ), .F1(\CIC1Cos/n5066 ), 
    .FCO(\CIC1Cos/n12071 ));
  CIC1Cos_SLICE_1305 \CIC1Cos/SLICE_1305 ( .B1(\CIC1Cos/d1_41 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_40 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12069 ), .F0(\CIC1Cos/n5069 ), .F1(\CIC1Cos/n5068 ), 
    .FCO(\CIC1Cos/n12070 ));
  CIC1Cos_SLICE_1306 \CIC1Cos/SLICE_1306 ( .B1(\CIC1Cos/d1_39 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_38 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12068 ), .F0(\CIC1Cos/n5071 ), .F1(\CIC1Cos/n5070 ), 
    .FCO(\CIC1Cos/n12069 ));
  CIC1Cos_SLICE_1307 \CIC1Cos/SLICE_1307 ( .B1(\CIC1Cos/d1_37 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_36 ), .A0(MixerOutCos_11), 
    .F1(\CIC1Cos/n5072 ), .FCO(\CIC1Cos/n12068 ));
  CIC1Cos_SLICE_1308 \CIC1Cos/SLICE_1308 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5038 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_71 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5039 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_70 ), .DI1(\CIC1Cos/d1_71_N_418_71 ), 
    .DI0(\CIC1Cos/d1_71_N_418_70 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12065 ), 
    .F0(\CIC1Cos/d1_71_N_418_70 ), .Q0(\CIC1Cos/d1_70 ), 
    .F1(\CIC1Cos/d1_71_N_418_71 ), .Q1(\CIC1Cos/d1_71 ));
  CIC1Cos_SLICE_1309 \CIC1Cos/SLICE_1309 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5040 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_69 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5041 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_68 ), .DI1(\CIC1Cos/d1_71_N_418_69 ), 
    .DI0(\CIC1Cos/d1_71_N_418_68 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12064 ), 
    .F0(\CIC1Cos/d1_71_N_418_68 ), .Q0(\CIC1Cos/d1_68 ), 
    .F1(\CIC1Cos/d1_71_N_418_69 ), .Q1(\CIC1Cos/d1_69 ), 
    .FCO(\CIC1Cos/n12065 ));
  CIC1Cos_SLICE_1310 \CIC1Cos/SLICE_1310 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5042 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_67 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5043 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_66 ), .DI1(\CIC1Cos/d1_71_N_418_67 ), 
    .DI0(\CIC1Cos/d1_71_N_418_66 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12063 ), 
    .F0(\CIC1Cos/d1_71_N_418_66 ), .Q0(\CIC1Cos/d1_66 ), 
    .F1(\CIC1Cos/d1_71_N_418_67 ), .Q1(\CIC1Cos/d1_67 ), 
    .FCO(\CIC1Cos/n12064 ));
  CIC1Cos_SLICE_1311 \CIC1Cos/SLICE_1311 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5044 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_65 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5045 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_64 ), .DI1(\CIC1Cos/d1_71_N_418_65 ), 
    .DI0(\CIC1Cos/d1_71_N_418_64 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12062 ), 
    .F0(\CIC1Cos/d1_71_N_418_64 ), .Q0(\CIC1Cos/d1_64 ), 
    .F1(\CIC1Cos/d1_71_N_418_65 ), .Q1(\CIC1Cos/d1_65 ), 
    .FCO(\CIC1Cos/n12063 ));
  CIC1Cos_SLICE_1312 \CIC1Cos/SLICE_1312 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5052 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_57 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5053 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_56 ), .DI1(\CIC1Cos/d1_71_N_418_57 ), 
    .DI0(\CIC1Cos/d1_71_N_418_56 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12058 ), 
    .F0(\CIC1Cos/d1_71_N_418_56 ), .Q0(\CIC1Cos/d1_56 ), 
    .F1(\CIC1Cos/d1_71_N_418_57 ), .Q1(\CIC1Cos/d1_57 ), 
    .FCO(\CIC1Cos/n12059 ));
  CIC1Cos_SLICE_1313 \CIC1Cos/SLICE_1313 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5054 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_55 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5055 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_54 ), .DI1(\CIC1Cos/d1_71_N_418_55 ), 
    .DI0(\CIC1Cos/d1_71_N_418_54 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12057 ), 
    .F0(\CIC1Cos/d1_71_N_418_54 ), .Q0(\CIC1Cos/d1_54 ), 
    .F1(\CIC1Cos/d1_71_N_418_55 ), .Q1(\CIC1Cos/d1_55 ), 
    .FCO(\CIC1Cos/n12058 ));
  CIC1Cos_SLICE_1314 \CIC1Cos/SLICE_1314 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5056 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_53 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5057 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_52 ), .DI1(\CIC1Cos/d1_71_N_418_53 ), 
    .DI0(\CIC1Cos/d1_71_N_418_52 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12056 ), 
    .F0(\CIC1Cos/d1_71_N_418_52 ), .Q0(\CIC1Cos/d1_52 ), 
    .F1(\CIC1Cos/d1_71_N_418_53 ), .Q1(\CIC1Cos/d1_53 ), 
    .FCO(\CIC1Cos/n12057 ));
  CIC1Cos_SLICE_1315 \CIC1Cos/SLICE_1315 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5046 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_63 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5047 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_62 ), .DI1(\CIC1Cos/d1_71_N_418_63 ), 
    .DI0(\CIC1Cos/d1_71_N_418_62 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12061 ), 
    .F0(\CIC1Cos/d1_71_N_418_62 ), .Q0(\CIC1Cos/d1_62 ), 
    .F1(\CIC1Cos/d1_71_N_418_63 ), .Q1(\CIC1Cos/d1_63 ), 
    .FCO(\CIC1Cos/n12062 ));
  CIC1Cos_SLICE_1316 \CIC1Cos/SLICE_1316 ( .D1(MixerOutCos_11), 
    .C1(\CIC1Cos/n5048 ), .B1(\CIC1Cos/n5036 ), .A1(\CIC1Cos/d1_61 ), 
    .D0(MixerOutCos_11), .C0(\CIC1Cos/n5049 ), .B0(\CIC1Cos/n5036 ), 
    .A0(\CIC1Cos/d1_60 ), .DI1(\CIC1Cos/d1_71_N_418_61 ), 
    .DI0(\CIC1Cos/d1_71_N_418_60 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12060 ), 
    .F0(\CIC1Cos/d1_71_N_418_60 ), .Q0(\CIC1Cos/d1_60 ), 
    .F1(\CIC1Cos/d1_71_N_418_61 ), .Q1(\CIC1Cos/d1_61 ), 
    .FCO(\CIC1Cos/n12061 ));
  CIC1Cos_SLICE_1317 \CIC1Cos/SLICE_1317 ( .D1(\CIC1Cos/d1_59 ), 
    .C1(\CIC1Cos/n5202 ), .B1(\CIC1Cos/n5188 ), .A1(\CIC1Cos/d2_59 ), 
    .D0(\CIC1Cos/d1_58 ), .C0(\CIC1Cos/n5203 ), .B0(\CIC1Cos/n5188 ), 
    .A0(\CIC1Cos/d2_58 ), .DI1(\CIC1Cos/d2_71_N_490_59 ), 
    .DI0(\CIC1Cos/d2_71_N_490_58 ), .CLK(osc_clk), .FCI(\CIC1Cos/n12018 ), 
    .F0(\CIC1Cos/d2_71_N_490_58 ), .Q0(\CIC1Cos/d2_58 ), 
    .F1(\CIC1Cos/d2_71_N_490_59 ), .Q1(\CIC1Cos/d2_59 ), 
    .FCO(\CIC1Cos/n12019 ));
  CIC1Cos_SLICE_1318 \CIC1Cos/SLICE_1318 ( .B1(\CIC1Cos/d1_71 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_70 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12084 ), .F0(\CIC1Cos/n5039 ), .F1(\CIC1Cos/n5038 ));
  CIC1Cos_SLICE_1319 \CIC1Cos/SLICE_1319 ( .B1(\CIC1Cos/d1_69 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_68 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12083 ), .F0(\CIC1Cos/n5041 ), .F1(\CIC1Cos/n5040 ), 
    .FCO(\CIC1Cos/n12084 ));
  CIC1Cos_SLICE_1320 \CIC1Cos/SLICE_1320 ( .B1(\CIC1Cos/d1_67 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_66 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12082 ), .F0(\CIC1Cos/n5043 ), .F1(\CIC1Cos/n5042 ), 
    .FCO(\CIC1Cos/n12083 ));
  CIC1Cos_SLICE_1321 \CIC1Cos/SLICE_1321 ( .B1(\CIC1Cos/d1_65 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_64 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12081 ), .F0(\CIC1Cos/n5045 ), .F1(\CIC1Cos/n5044 ), 
    .FCO(\CIC1Cos/n12082 ));
  CIC1Cos_SLICE_1322 \CIC1Cos/SLICE_1322 ( .B1(\CIC1Cos/d1_63 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_62 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12080 ), .F0(\CIC1Cos/n5047 ), .F1(\CIC1Cos/n5046 ), 
    .FCO(\CIC1Cos/n12081 ));
  CIC1Cos_SLICE_1323 \CIC1Cos/SLICE_1323 ( .B1(\CIC1Cos/d1_61 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_60 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12079 ), .F0(\CIC1Cos/n5049 ), .F1(\CIC1Cos/n5048 ), 
    .FCO(\CIC1Cos/n12080 ));
  CIC1Cos_SLICE_1324 \CIC1Cos/SLICE_1324 ( .B1(\CIC1Cos/d1_59 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_58 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12078 ), .F0(\CIC1Cos/n5051 ), .F1(\CIC1Cos/n5050 ), 
    .FCO(\CIC1Cos/n12079 ));
  CIC1Cos_SLICE_1325 \CIC1Cos/SLICE_1325 ( .B1(\CIC1Cos/d1_57 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_56 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12077 ), .F0(\CIC1Cos/n5053 ), .F1(\CIC1Cos/n5052 ), 
    .FCO(\CIC1Cos/n12078 ));
  CIC1Cos_SLICE_1326 \CIC1Cos/SLICE_1326 ( .B1(\CIC1Cos/d1_55 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_54 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12076 ), .F0(\CIC1Cos/n5055 ), .F1(\CIC1Cos/n5054 ), 
    .FCO(\CIC1Cos/n12077 ));
  CIC1Cos_SLICE_1327 \CIC1Cos/SLICE_1327 ( .B1(\CIC1Cos/d1_53 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_52 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12075 ), .F0(\CIC1Cos/n5057 ), .F1(\CIC1Cos/n5056 ), 
    .FCO(\CIC1Cos/n12076 ));
  CIC1Cos_SLICE_1328 \CIC1Cos/SLICE_1328 ( .B1(\CIC1Cos/d1_51 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_50 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12074 ), .F0(\CIC1Cos/n5059 ), .F1(\CIC1Cos/n5058 ), 
    .FCO(\CIC1Cos/n12075 ));
  CIC1Cos_SLICE_1329 \CIC1Cos/SLICE_1329 ( .B1(\CIC1Cos/d1_49 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_48 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12073 ), .F0(\CIC1Cos/n5061 ), .F1(\CIC1Cos/n5060 ), 
    .FCO(\CIC1Cos/n12074 ));
  CIC1Cos_SLICE_1330 \CIC1Cos/SLICE_1330 ( .B1(\CIC1Cos/d1_47 ), 
    .A1(MixerOutCos_11), .B0(\CIC1Cos/d1_46 ), .A0(MixerOutCos_11), 
    .FCI(\CIC1Cos/n12072 ), .F0(\CIC1Cos/n5063 ), .F1(\CIC1Cos/n5062 ), 
    .FCO(\CIC1Cos/n12073 ));
  AMDemodulator1_SLICE_1331 \AMDemodulator1/SLICE_1331 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1873 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1873 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n11796 ), 
    .F0(\AMDemodulator1/n438 ), .F1(\AMDemodulator1/d_out_d_11_N_1876_17 ));
  AMDemodulator1_SLICE_1332 \AMDemodulator1/SLICE_1332 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A1(\AMDemodulator1/n380 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A0(\AMDemodulator1/n381 ), 
    .FCI(\AMDemodulator1/n11795 ), .F0(\AMDemodulator1/n440 ), 
    .F1(\AMDemodulator1/n439 ), .FCO(\AMDemodulator1/n11796 ));
  AMDemodulator1_SLICE_1333 \AMDemodulator1/SLICE_1333 ( 
    .C1(\AMDemodulator1/n382 ), .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n383 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11794 ), 
    .F0(\AMDemodulator1/n442 ), .F1(\AMDemodulator1/n441 ), 
    .FCO(\AMDemodulator1/n11795 ));
  AMDemodulator1_SLICE_1334 \AMDemodulator1/SLICE_1334 ( 
    .C1(\AMDemodulator1/n384 ), .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A0(\AMDemodulator1/n385 ), 
    .FCI(\AMDemodulator1/n11793 ), .F0(\AMDemodulator1/n444 ), 
    .F1(\AMDemodulator1/n443 ), .FCO(\AMDemodulator1/n11794 ));
  AMDemodulator1_SLICE_1335 \AMDemodulator1/SLICE_1335 ( 
    .C1(\AMDemodulator1/n386 ), .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .A0(\AMDemodulator1/n387 ), 
    .FCI(\AMDemodulator1/n11792 ), .F0(\AMDemodulator1/n446 ), 
    .F1(\AMDemodulator1/n445 ), .FCO(\AMDemodulator1/n11793 ));
  AMDemodulator1_SLICE_1336 \AMDemodulator1/SLICE_1336 ( 
    .A1(\AMDemodulator1/ISquare_19 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .A0(\AMDemodulator1/ISquare_18 ), .FCI(\AMDemodulator1/n11791 ), 
    .F1(\AMDemodulator1/n447 ), .FCO(\AMDemodulator1/n11792 ));
  AMDemodulator1_SLICE_1337 \AMDemodulator1/SLICE_1337 ( 
    .FCI(\AMDemodulator1/n12451 ), .F0(\AMDemodulator1/d_out_d_11_N_1872_17 ));
  AMDemodulator1_SLICE_1338 \AMDemodulator1/SLICE_1338 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCO(\AMDemodulator1/n11791 ));
  AMDemodulator1_SLICE_1339 \AMDemodulator1/SLICE_1339 ( 
    .A1(\AMDemodulator1/n912 ), .B0(\AMDemodulator1/ISquare_31 ), 
    .A0(\AMDemodulator1/n913 ), .FCI(\AMDemodulator1/n11785 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_2335_17 ));
  AMDemodulator1_SLICE_1340 \AMDemodulator1/SLICE_1340 ( 
    .B0(\AMDemodulator1/MultResult2_23 ), .A0(\AMDemodulator1/MultResult1_23 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_24 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11244 ), .F0(\AMDemodulator1/ISquare_31_N_1895_24 ), 
    .Q0(\AMDemodulator1/ISquare_31 ));
  AMDemodulator1_SLICE_1341 \AMDemodulator1/SLICE_1341 ( 
    .B1(\AMDemodulator1/MultResult2_23 ), .A1(\AMDemodulator1/MultResult1_23 ), 
    .B0(\AMDemodulator1/MultResult2_22 ), .A0(\AMDemodulator1/MultResult1_22 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_23 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_22 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11243 ), .F0(\AMDemodulator1/ISquare_31_N_1895_22 ), 
    .Q0(\AMDemodulator1/ISquare_22 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_23 ), 
    .Q1(\AMDemodulator1/ISquare_23 ), .FCO(\AMDemodulator1/n11244 ));
  AMDemodulator1_SLICE_1342 \AMDemodulator1/SLICE_1342 ( 
    .B1(\AMDemodulator1/MultResult2_21 ), .A1(\AMDemodulator1/MultResult1_21 ), 
    .B0(\AMDemodulator1/MultResult2_20 ), .A0(\AMDemodulator1/MultResult1_20 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_21 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_20 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11242 ), .F0(\AMDemodulator1/ISquare_31_N_1895_20 ), 
    .Q0(\AMDemodulator1/ISquare_20 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_21 ), 
    .Q1(\AMDemodulator1/ISquare_21 ), .FCO(\AMDemodulator1/n11243 ));
  AMDemodulator1_SLICE_1343 \AMDemodulator1/SLICE_1343 ( 
    .B1(\AMDemodulator1/MultResult2_19 ), .A1(\AMDemodulator1/MultResult1_19 ), 
    .B0(\AMDemodulator1/MultResult2_18 ), .A0(\AMDemodulator1/MultResult1_18 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_19 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_18 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11241 ), .F0(\AMDemodulator1/ISquare_31_N_1895_18 ), 
    .Q0(\AMDemodulator1/ISquare_18 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_19 ), 
    .Q1(\AMDemodulator1/ISquare_19 ), .FCO(\AMDemodulator1/n11242 ));
  AMDemodulator1_SLICE_1344 \AMDemodulator1/SLICE_1344 ( 
    .B1(\AMDemodulator1/MultResult2_17 ), .A1(\AMDemodulator1/MultResult1_17 ), 
    .B0(\AMDemodulator1/MultResult2_16 ), .A0(\AMDemodulator1/MultResult1_16 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_17 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_16 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11240 ), .F0(\AMDemodulator1/ISquare_31_N_1895_16 ), 
    .Q0(\AMDemodulator1/ISquare_16 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_17 ), 
    .Q1(\AMDemodulator1/ISquare_17 ), .FCO(\AMDemodulator1/n11241 ));
  AMDemodulator1_SLICE_1345 \AMDemodulator1/SLICE_1345 ( 
    .B1(\AMDemodulator1/MultResult2_15 ), .A1(\AMDemodulator1/MultResult1_15 ), 
    .B0(\AMDemodulator1/MultResult2_14 ), .A0(\AMDemodulator1/MultResult1_14 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_15 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_14 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11239 ), .F0(\AMDemodulator1/ISquare_31_N_1895_14 ), 
    .Q0(\AMDemodulator1/ISquare_14 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_15 ), 
    .Q1(\AMDemodulator1/ISquare_15 ), .FCO(\AMDemodulator1/n11240 ));
  AMDemodulator1_SLICE_1346 \AMDemodulator1/SLICE_1346 ( 
    .B1(\AMDemodulator1/MultResult2_13 ), .A1(\AMDemodulator1/MultResult1_13 ), 
    .B0(\AMDemodulator1/MultResult2_12 ), .A0(\AMDemodulator1/MultResult1_12 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_13 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_12 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11238 ), .F0(\AMDemodulator1/ISquare_31_N_1895_12 ), 
    .Q0(\AMDemodulator1/ISquare_12 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_13 ), 
    .Q1(\AMDemodulator1/ISquare_13 ), .FCO(\AMDemodulator1/n11239 ));
  AMDemodulator1_SLICE_1347 \AMDemodulator1/SLICE_1347 ( 
    .B1(\AMDemodulator1/MultResult2_11 ), .A1(\AMDemodulator1/MultResult1_11 ), 
    .B0(\AMDemodulator1/MultResult2_10 ), .A0(\AMDemodulator1/MultResult1_10 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_11 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_10 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11237 ), .F0(\AMDemodulator1/ISquare_31_N_1895_10 ), 
    .Q0(\AMDemodulator1/ISquare_10 ), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_11 ), 
    .Q1(\AMDemodulator1/ISquare_11 ), .FCO(\AMDemodulator1/n11238 ));
  AMDemodulator1_SLICE_1348 \AMDemodulator1/SLICE_1348 ( 
    .B1(\AMDemodulator1/MultResult2_9 ), .A1(\AMDemodulator1/MultResult1_9 ), 
    .B0(\AMDemodulator1/MultResult2_8 ), .A0(\AMDemodulator1/MultResult1_8 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_9 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_8 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11236 ), .F0(\AMDemodulator1/ISquare_31_N_1895_8 ), 
    .Q0(\AMDemodulator1/ISquare_8 ), .F1(\AMDemodulator1/ISquare_31_N_1895_9 ), 
    .Q1(\AMDemodulator1/ISquare_9 ), .FCO(\AMDemodulator1/n11237 ));
  AMDemodulator1_SLICE_1349 \AMDemodulator1/SLICE_1349 ( 
    .B1(\AMDemodulator1/MultResult2_7 ), .A1(\AMDemodulator1/MultResult1_7 ), 
    .B0(\AMDemodulator1/MultResult2_6 ), .A0(\AMDemodulator1/MultResult1_6 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_7 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_6 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11235 ), .F0(\AMDemodulator1/ISquare_31_N_1895_6 ), 
    .Q0(\AMDemodulator1/ISquare_6 ), .F1(\AMDemodulator1/ISquare_31_N_1895_7 ), 
    .Q1(\AMDemodulator1/ISquare_7 ), .FCO(\AMDemodulator1/n11236 ));
  AMDemodulator1_SLICE_1350 \AMDemodulator1/SLICE_1350 ( 
    .B1(\AMDemodulator1/MultResult2_5 ), .A1(\AMDemodulator1/MultResult1_5 ), 
    .B0(\AMDemodulator1/MultResult2_4 ), .A0(\AMDemodulator1/MultResult1_4 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_5 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_4 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11234 ), .F0(\AMDemodulator1/ISquare_31_N_1895_4 ), 
    .Q0(\AMDemodulator1/ISquare_4 ), .F1(\AMDemodulator1/ISquare_31_N_1895_5 ), 
    .Q1(\AMDemodulator1/ISquare_5 ), .FCO(\AMDemodulator1/n11235 ));
  AMDemodulator1_SLICE_1351 \AMDemodulator1/SLICE_1351 ( 
    .B1(\AMDemodulator1/MultResult2_3 ), .A1(\AMDemodulator1/MultResult1_3 ), 
    .B0(\AMDemodulator1/MultResult2_2 ), .A0(\AMDemodulator1/MultResult1_2 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_3 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_2 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/n11233 ), .F0(\AMDemodulator1/ISquare_31_N_1895_2 ), 
    .Q0(\AMDemodulator1/ISquare_2 ), .F1(\AMDemodulator1/ISquare_31_N_1895_3 ), 
    .Q1(\AMDemodulator1/ISquare_3 ), .FCO(\AMDemodulator1/n11234 ));
  AMDemodulator1_SLICE_1352 \AMDemodulator1/SLICE_1352 ( 
    .B1(\AMDemodulator1/MultResult2_1 ), .A1(\AMDemodulator1/MultResult1_1 ), 
    .B0(\AMDemodulator1/MultResult2_0 ), .A0(\AMDemodulator1/MultResult1_0 ), 
    .DI1(\AMDemodulator1/ISquare_31_N_1895_1 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/ISquare_31_N_1895_1 ), .Q1(\AMDemodulator1/ISquare_1 ), 
    .FCO(\AMDemodulator1/n11233 ));
  AMDemodulator1_SLICE_1353 \AMDemodulator1/SLICE_1353 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1871 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1871 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n10995 ), 
    .F0(\AMDemodulator1/n380 ), .F1(\AMDemodulator1/d_out_d_11_N_1874_17 ));
  AMDemodulator1_SLICE_1354 \AMDemodulator1/SLICE_1354 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .A1(\AMDemodulator1/n322 ), 
    .C0(\AMDemodulator1/n323 ), .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n10994 ), 
    .F0(\AMDemodulator1/n382 ), .F1(\AMDemodulator1/n381 ), 
    .FCO(\AMDemodulator1/n10995 ));
  AMDemodulator1_SLICE_1355 \AMDemodulator1/SLICE_1355 ( 
    .C1(\AMDemodulator1/n324 ), .B1(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n325 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n10993 ), 
    .F0(\AMDemodulator1/n384 ), .F1(\AMDemodulator1/n383 ), 
    .FCO(\AMDemodulator1/n10994 ));
  AMDemodulator1_SLICE_1356 \AMDemodulator1/SLICE_1356 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .A1(\AMDemodulator1/n326 ), 
    .A0(\AMDemodulator1/n12447 ), .FCI(\AMDemodulator1/n10992 ), 
    .F0(\AMDemodulator1/n386 ), .F1(\AMDemodulator1/n385 ), 
    .FCO(\AMDemodulator1/n10993 ));
  AMDemodulator1_SLICE_1357 \AMDemodulator1/SLICE_1357 ( 
    .A1(\AMDemodulator1/ISquare_21 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/ISquare_20 ), .FCI(\AMDemodulator1/n10991 ), 
    .F1(\AMDemodulator1/n387 ), .FCO(\AMDemodulator1/n10992 ));
  AMDemodulator1_SLICE_1358 \AMDemodulator1/SLICE_1358 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCO(\AMDemodulator1/n10991 ));
  AMDemodulator1_SLICE_1359 \AMDemodulator1/SLICE_1359 ( 
    .B0(\AMDemodulator1/ISquare_31 ), .A0(\AMDemodulator1/n209 ), 
    .FCI(\AMDemodulator1/n12450 ), .F0(\AMDemodulator1/n323 ), 
    .F1(\AMDemodulator1/n322 ), .FCO(\AMDemodulator1/n12451 ));
  AMDemodulator1_SLICE_1360 \AMDemodulator1/SLICE_1360 ( 
    .A1(\AMDemodulator1/ISquare_31 ), .B0(\AMDemodulator1/ISquare_31 ), 
    .A0(\AMDemodulator1/n209 ), .FCI(\AMDemodulator1/n12449 ), 
    .F0(\AMDemodulator1/n325 ), .F1(\AMDemodulator1/n324 ), 
    .FCO(\AMDemodulator1/n12450 ));
  AMDemodulator1_SLICE_1361 \AMDemodulator1/SLICE_1361 ( 
    .B0(\AMDemodulator1/ISquare_22 ), .A0(\AMDemodulator1/ISquare_23 ), 
    .F1(\AMDemodulator1/n326 ), .FCO(\AMDemodulator1/n12449 ));
  AMDemodulator1_SLICE_1362 \AMDemodulator1/SLICE_1362 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1877 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1877 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCI(\AMDemodulator1/n12445 ), 
    .F0(\AMDemodulator1/n554 ), .F1(\AMDemodulator1/d_out_d_11_N_1880_17 ));
  AMDemodulator1_SLICE_1363 \AMDemodulator1/SLICE_1363 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A1(\AMDemodulator1/n496 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A0(\AMDemodulator1/n497 ), 
    .FCI(\AMDemodulator1/n12444 ), .F0(\AMDemodulator1/n556 ), 
    .F1(\AMDemodulator1/n555 ), .FCO(\AMDemodulator1/n12445 ));
  AMDemodulator1_SLICE_1364 \AMDemodulator1/SLICE_1364 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A1(\AMDemodulator1/n498 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A0(\AMDemodulator1/n499 ), 
    .FCI(\AMDemodulator1/n12443 ), .F0(\AMDemodulator1/n558 ), 
    .F1(\AMDemodulator1/n557 ), .FCO(\AMDemodulator1/n12444 ));
  AMDemodulator1_SLICE_1365 \AMDemodulator1/SLICE_1365 ( 
    .C1(\AMDemodulator1/n500 ), .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n501 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12442 ), 
    .F0(\AMDemodulator1/n560 ), .F1(\AMDemodulator1/n559 ), 
    .FCO(\AMDemodulator1/n12443 ));
  AMDemodulator1_SLICE_1366 \AMDemodulator1/SLICE_1366 ( 
    .B1(\AMDemodulator1/ISquare_31 ), .A1(\AMDemodulator1/n914 ), 
    .B0(\AMDemodulator1/ISquare_31 ), .A0(\AMDemodulator1/n915 ), 
    .FCI(\AMDemodulator1/n11784 ), .FCO(\AMDemodulator1/n11785 ));
  AMDemodulator1_SLICE_1367 \AMDemodulator1/SLICE_1367 ( 
    .C1(\AMDemodulator1/n502 ), .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A0(\AMDemodulator1/n503 ), 
    .FCI(\AMDemodulator1/n12441 ), .F0(\AMDemodulator1/n562 ), 
    .F1(\AMDemodulator1/n561 ), .FCO(\AMDemodulator1/n12442 ));
  AMDemodulator1_SLICE_1368 \AMDemodulator1/SLICE_1368 ( 
    .C1(\AMDemodulator1/n504 ), .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .C0(\AMDemodulator1/n505 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n12440 ), 
    .F0(\AMDemodulator1/n564 ), .F1(\AMDemodulator1/n563 ), 
    .FCO(\AMDemodulator1/n12441 ));
  AMDemodulator1_SLICE_1369 \AMDemodulator1/SLICE_1369 ( 
    .C1(\AMDemodulator1/n506 ), .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A0(\AMDemodulator1/n507 ), 
    .FCI(\AMDemodulator1/n12439 ), .F0(\AMDemodulator1/n566 ), 
    .F1(\AMDemodulator1/n565 ), .FCO(\AMDemodulator1/n12440 ));
  AMDemodulator1_SLICE_1370 \AMDemodulator1/SLICE_1370 ( 
    .A1(\AMDemodulator1/ISquare_15 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .A0(\AMDemodulator1/ISquare_14 ), .FCI(\AMDemodulator1/n12438 ), 
    .F1(\AMDemodulator1/n567 ), .FCO(\AMDemodulator1/n12439 ));
  AMDemodulator1_SLICE_1371 \AMDemodulator1/SLICE_1371 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCO(\AMDemodulator1/n12438 ));
  AMDemodulator1_SLICE_1372 \AMDemodulator1/SLICE_1372 ( 
    .A1(\AMDemodulator1/n912 ), .B0(\AMDemodulator1/ISquare_31 ), 
    .A0(\AMDemodulator1/n913 ), .FCI(\AMDemodulator1/n12432 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_2353_17 ));
  AMDemodulator1_SLICE_1373 \AMDemodulator1/SLICE_1373 ( 
    .B1(\AMDemodulator1/ISquare_31 ), .A1(\AMDemodulator1/n914 ), 
    .B0(\AMDemodulator1/ISquare_31 ), .A0(\AMDemodulator1/n915 ), 
    .FCI(\AMDemodulator1/n12431 ), .FCO(\AMDemodulator1/n12432 ));
  AMDemodulator1_SLICE_1374 \AMDemodulator1/SLICE_1374 ( 
    .A1(\AMDemodulator1/n916 ), .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/n917 ), .FCI(\AMDemodulator1/n12430 ), 
    .FCO(\AMDemodulator1/n12431 ));
  AMDemodulator1_SLICE_1375 \AMDemodulator1/SLICE_1375 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A1(\AMDemodulator1/n918 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A0(\AMDemodulator1/n919 ), 
    .FCI(\AMDemodulator1/n12429 ), .FCO(\AMDemodulator1/n12430 ));
  AMDemodulator1_SLICE_1376 \AMDemodulator1/SLICE_1376 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A1(\AMDemodulator1/n920 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n921 ), 
    .FCI(\AMDemodulator1/n12428 ), .FCO(\AMDemodulator1/n12429 ));
  AMDemodulator1_SLICE_1377 \AMDemodulator1/SLICE_1377 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n922 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n923 ), 
    .FCI(\AMDemodulator1/n12427 ), .FCO(\AMDemodulator1/n12428 ));
  AMDemodulator1_SLICE_1378 \AMDemodulator1/SLICE_1378 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A1(\AMDemodulator1/n924 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A0(\AMDemodulator1/n925 ), 
    .FCI(\AMDemodulator1/n12426 ), .FCO(\AMDemodulator1/n12427 ));
  AMDemodulator1_SLICE_1379 \AMDemodulator1/SLICE_1379 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A1(\AMDemodulator1/n926 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1892_17 ), .A0(\AMDemodulator1/n927 ), 
    .FCI(\AMDemodulator1/n12425 ), .FCO(\AMDemodulator1/n12426 ));
  AMDemodulator1_SLICE_1380 \AMDemodulator1/SLICE_1380 ( 
    .A1(\AMDemodulator1/n916 ), .B0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .A0(\AMDemodulator1/n917 ), .FCI(\AMDemodulator1/n11783 ), 
    .FCO(\AMDemodulator1/n11784 ));
  AMDemodulator1_SLICE_1381 \AMDemodulator1/SLICE_1381 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1892_17 ), 
    .A1(\AMDemodulator1/ISquare_1 ), .A0(\AMDemodulator1/ISquare_0 ), 
    .FCO(\AMDemodulator1/n12425 ));
  AMDemodulator1_SLICE_1382 \AMDemodulator1/SLICE_1382 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A1(\AMDemodulator1/n918 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A0(\AMDemodulator1/n919 ), 
    .FCI(\AMDemodulator1/n11782 ), .FCO(\AMDemodulator1/n11783 ));
  AMDemodulator1_SLICE_1383 \AMDemodulator1/SLICE_1383 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A1(\AMDemodulator1/n920 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n921 ), 
    .FCI(\AMDemodulator1/n11781 ), .FCO(\AMDemodulator1/n11782 ));
  AMDemodulator1_SLICE_1384 \AMDemodulator1/SLICE_1384 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n922 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n923 ), 
    .FCI(\AMDemodulator1/n11780 ), .FCO(\AMDemodulator1/n11781 ));
  AMDemodulator1_SLICE_1385 \AMDemodulator1/SLICE_1385 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A1(\AMDemodulator1/n924 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A0(\AMDemodulator1/n925 ), 
    .FCI(\AMDemodulator1/n11779 ), .FCO(\AMDemodulator1/n11780 ));
  AMDemodulator1_SLICE_1386 \AMDemodulator1/SLICE_1386 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A1(\AMDemodulator1/n926 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1892_17 ), .A0(\AMDemodulator1/n927 ), 
    .FCI(\AMDemodulator1/n11778 ), .FCO(\AMDemodulator1/n11779 ));
  AMDemodulator1_SLICE_1387 \AMDemodulator1/SLICE_1387 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1892_17 ), 
    .A1(\AMDemodulator1/ISquare_1 ), .A0(\AMDemodulator1/ISquare_0 ), 
    .FCO(\AMDemodulator1/n11778 ));
  AMDemodulator1_SLICE_1388 \AMDemodulator1/SLICE_1388 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A1(\AMDemodulator1/n732 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A0(\AMDemodulator1/n733 ), 
    .FCI(\AMDemodulator1/n11758 ), .F0(\AMDemodulator1/n792 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1888_17 ));
  AMDemodulator1_SLICE_1389 \AMDemodulator1/SLICE_1389 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A1(\AMDemodulator1/n734 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A0(\AMDemodulator1/n735 ), 
    .FCI(\AMDemodulator1/n11757 ), .F0(\AMDemodulator1/n794 ), 
    .F1(\AMDemodulator1/n793 ), .FCO(\AMDemodulator1/n11758 ));
  AMDemodulator1_SLICE_1390 \AMDemodulator1/SLICE_1390 ( 
    .C1(\AMDemodulator1/n736 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n737 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11756 ), 
    .F0(\AMDemodulator1/n796 ), .F1(\AMDemodulator1/n795 ), 
    .FCO(\AMDemodulator1/n11757 ));
  AMDemodulator1_SLICE_1391 \AMDemodulator1/SLICE_1391 ( 
    .C1(\AMDemodulator1/n738 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A0(\AMDemodulator1/n739 ), 
    .FCI(\AMDemodulator1/n11755 ), .F0(\AMDemodulator1/n798 ), 
    .F1(\AMDemodulator1/n797 ), .FCO(\AMDemodulator1/n11756 ));
  AMDemodulator1_SLICE_1392 \AMDemodulator1/SLICE_1392 ( 
    .C1(\AMDemodulator1/n740 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .C0(\AMDemodulator1/n741 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n11754 ), 
    .F0(\AMDemodulator1/n800 ), .F1(\AMDemodulator1/n799 ), 
    .FCO(\AMDemodulator1/n11755 ));
  AMDemodulator1_SLICE_1393 \AMDemodulator1/SLICE_1393 ( 
    .C1(\AMDemodulator1/n742 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .C0(\AMDemodulator1/n743 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCI(\AMDemodulator1/n11753 ), 
    .F0(\AMDemodulator1/n802 ), .F1(\AMDemodulator1/n801 ), 
    .FCO(\AMDemodulator1/n11754 ));
  AMDemodulator1_SLICE_1394 \AMDemodulator1/SLICE_1394 ( 
    .C1(\AMDemodulator1/n744 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .C0(\AMDemodulator1/n745 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .FCI(\AMDemodulator1/n11752 ), 
    .F0(\AMDemodulator1/n804 ), .F1(\AMDemodulator1/n803 ), 
    .FCO(\AMDemodulator1/n11753 ));
  AMDemodulator1_SLICE_1395 \AMDemodulator1/SLICE_1395 ( 
    .C1(\AMDemodulator1/n746 ), .B1(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n747 ), 
    .FCI(\AMDemodulator1/n11751 ), .F0(\AMDemodulator1/n806 ), 
    .F1(\AMDemodulator1/n805 ), .FCO(\AMDemodulator1/n11752 ));
  AMDemodulator1_SLICE_1396 \AMDemodulator1/SLICE_1396 ( 
    .A1(\AMDemodulator1/ISquare_7 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .A0(\AMDemodulator1/ISquare_6 ), .FCI(\AMDemodulator1/n11750 ), 
    .F1(\AMDemodulator1/n807 ), .FCO(\AMDemodulator1/n11751 ));
  AMDemodulator1_SLICE_1397 \AMDemodulator1/SLICE_1397 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .FCO(\AMDemodulator1/n11750 ));
  AMDemodulator1_SLICE_1398 \AMDemodulator1/SLICE_1398 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1879 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1879 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .FCI(\AMDemodulator1/n11654 ), 
    .F0(\AMDemodulator1/n612 ), .F1(\AMDemodulator1/d_out_d_11_N_1882_17 ));
  AMDemodulator1_SLICE_1399 \AMDemodulator1/SLICE_1399 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A1(\AMDemodulator1/n554 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n555 ), 
    .FCI(\AMDemodulator1/n11653 ), .F0(\AMDemodulator1/n614 ), 
    .F1(\AMDemodulator1/n613 ), .FCO(\AMDemodulator1/n11654 ));
  AMDemodulator1_SLICE_1400 \AMDemodulator1/SLICE_1400 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A1(\AMDemodulator1/n556 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n557 ), 
    .FCI(\AMDemodulator1/n11652 ), .F0(\AMDemodulator1/n616 ), 
    .F1(\AMDemodulator1/n615 ), .FCO(\AMDemodulator1/n11653 ));
  AMDemodulator1_SLICE_1401 \AMDemodulator1/SLICE_1401 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A1(\AMDemodulator1/n558 ), 
    .C0(\AMDemodulator1/n559 ), .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11651 ), 
    .F0(\AMDemodulator1/n618 ), .F1(\AMDemodulator1/n617 ), 
    .FCO(\AMDemodulator1/n11652 ));
  AMDemodulator1_SLICE_1402 \AMDemodulator1/SLICE_1402 ( 
    .C1(\AMDemodulator1/n560 ), .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n561 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n11650 ), 
    .F0(\AMDemodulator1/n620 ), .F1(\AMDemodulator1/n619 ), 
    .FCO(\AMDemodulator1/n11651 ));
  AMDemodulator1_SLICE_1403 \AMDemodulator1/SLICE_1403 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A1(\AMDemodulator1/n562 ), 
    .C0(\AMDemodulator1/n563 ), .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n11649 ), 
    .F0(\AMDemodulator1/n622 ), .F1(\AMDemodulator1/n621 ), 
    .FCO(\AMDemodulator1/n11650 ));
  AMDemodulator1_SLICE_1404 \AMDemodulator1/SLICE_1404 ( 
    .C1(\AMDemodulator1/n564 ), .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .C0(\AMDemodulator1/n565 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCI(\AMDemodulator1/n11648 ), 
    .F0(\AMDemodulator1/n624 ), .F1(\AMDemodulator1/n623 ), 
    .FCO(\AMDemodulator1/n11649 ));
  AMDemodulator1_SLICE_1405 \AMDemodulator1/SLICE_1405 ( 
    .C1(\AMDemodulator1/n566 ), .B1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .A0(\AMDemodulator1/n567 ), 
    .FCI(\AMDemodulator1/n11647 ), .F0(\AMDemodulator1/n626 ), 
    .F1(\AMDemodulator1/n625 ), .FCO(\AMDemodulator1/n11648 ));
  AMDemodulator1_SLICE_1406 \AMDemodulator1/SLICE_1406 ( 
    .A1(\AMDemodulator1/ISquare_13 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/ISquare_12 ), .FCI(\AMDemodulator1/n11646 ), 
    .F1(\AMDemodulator1/n627 ), .FCO(\AMDemodulator1/n11647 ));
  AMDemodulator1_SLICE_1407 \AMDemodulator1/SLICE_1407 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .FCO(\AMDemodulator1/n11646 ));
  AMDemodulator1_SLICE_1408 \AMDemodulator1/SLICE_1408 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A1(\AMDemodulator1/n672 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n673 ), 
    .FCI(\AMDemodulator1/n12397 ), .F0(\AMDemodulator1/n732 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1886_17 ));
  AMDemodulator1_SLICE_1409 \AMDemodulator1/SLICE_1409 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A1(\AMDemodulator1/n674 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A0(\AMDemodulator1/n675 ), 
    .FCI(\AMDemodulator1/n12396 ), .F0(\AMDemodulator1/n734 ), 
    .F1(\AMDemodulator1/n733 ), .FCO(\AMDemodulator1/n12397 ));
  AMDemodulator1_SLICE_1410 \AMDemodulator1/SLICE_1410 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A1(\AMDemodulator1/n676 ), 
    .C0(\AMDemodulator1/n677 ), .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12395 ), 
    .F0(\AMDemodulator1/n736 ), .F1(\AMDemodulator1/n735 ), 
    .FCO(\AMDemodulator1/n12396 ));
  AMDemodulator1_SLICE_1411 \AMDemodulator1/SLICE_1411 ( 
    .C1(\AMDemodulator1/n678 ), .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n679 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12394 ), 
    .F0(\AMDemodulator1/n738 ), .F1(\AMDemodulator1/n737 ), 
    .FCO(\AMDemodulator1/n12395 ));
  AMDemodulator1_SLICE_1412 \AMDemodulator1/SLICE_1412 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .A1(\AMDemodulator1/n680 ), 
    .C0(\AMDemodulator1/n681 ), .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n12393 ), 
    .F0(\AMDemodulator1/n740 ), .F1(\AMDemodulator1/n739 ), 
    .FCO(\AMDemodulator1/n12394 ));
  AMDemodulator1_SLICE_1413 \AMDemodulator1/SLICE_1413 ( 
    .C1(\AMDemodulator1/n682 ), .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .C0(\AMDemodulator1/n683 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCI(\AMDemodulator1/n12392 ), 
    .F0(\AMDemodulator1/n742 ), .F1(\AMDemodulator1/n741 ), 
    .FCO(\AMDemodulator1/n12393 ));
  AMDemodulator1_SLICE_1414 \AMDemodulator1/SLICE_1414 ( 
    .C1(\AMDemodulator1/n684 ), .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .C0(\AMDemodulator1/n685 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .FCI(\AMDemodulator1/n12391 ), 
    .F0(\AMDemodulator1/n744 ), .F1(\AMDemodulator1/n743 ), 
    .FCO(\AMDemodulator1/n12392 ));
  AMDemodulator1_SLICE_1415 \AMDemodulator1/SLICE_1415 ( 
    .C1(\AMDemodulator1/n686 ), .B1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n687 ), 
    .FCI(\AMDemodulator1/n12390 ), .F0(\AMDemodulator1/n746 ), 
    .F1(\AMDemodulator1/n745 ), .FCO(\AMDemodulator1/n12391 ));
  AMDemodulator1_SLICE_1416 \AMDemodulator1/SLICE_1416 ( 
    .A1(\AMDemodulator1/ISquare_9 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/ISquare_8 ), .FCI(\AMDemodulator1/n12389 ), 
    .F1(\AMDemodulator1/n747 ), .FCO(\AMDemodulator1/n12390 ));
  AMDemodulator1_SLICE_1417 \AMDemodulator1/SLICE_1417 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .FCO(\AMDemodulator1/n12389 ));
  AMDemodulator1_SLICE_1418 \AMDemodulator1/SLICE_1418 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n612 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n613 ), 
    .FCI(\AMDemodulator1/n12383 ), .F0(\AMDemodulator1/n672 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1884_17 ));
  AMDemodulator1_SLICE_1419 \AMDemodulator1/SLICE_1419 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n614 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n615 ), 
    .FCI(\AMDemodulator1/n12382 ), .F0(\AMDemodulator1/n674 ), 
    .F1(\AMDemodulator1/n673 ), .FCO(\AMDemodulator1/n12383 ));
  AMDemodulator1_SLICE_1420 \AMDemodulator1/SLICE_1420 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A1(\AMDemodulator1/n616 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n617 ), 
    .FCI(\AMDemodulator1/n12381 ), .F0(\AMDemodulator1/n676 ), 
    .F1(\AMDemodulator1/n675 ), .FCO(\AMDemodulator1/n12382 ));
  AMDemodulator1_SLICE_1421 \AMDemodulator1/SLICE_1421 ( 
    .C1(\AMDemodulator1/n618 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n619 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12380 ), 
    .F0(\AMDemodulator1/n678 ), .F1(\AMDemodulator1/n677 ), 
    .FCO(\AMDemodulator1/n12381 ));
  AMDemodulator1_SLICE_1422 \AMDemodulator1/SLICE_1422 ( 
    .C1(\AMDemodulator1/n620 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .A0(\AMDemodulator1/n621 ), 
    .FCI(\AMDemodulator1/n12379 ), .F0(\AMDemodulator1/n680 ), 
    .F1(\AMDemodulator1/n679 ), .FCO(\AMDemodulator1/n12380 ));
  AMDemodulator1_SLICE_1423 \AMDemodulator1/SLICE_1423 ( 
    .C1(\AMDemodulator1/n622 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .C0(\AMDemodulator1/n623 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n12378 ), 
    .F0(\AMDemodulator1/n682 ), .F1(\AMDemodulator1/n681 ), 
    .FCO(\AMDemodulator1/n12379 ));
  AMDemodulator1_SLICE_1424 \AMDemodulator1/SLICE_1424 ( 
    .C1(\AMDemodulator1/n624 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .C0(\AMDemodulator1/n625 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCI(\AMDemodulator1/n12377 ), 
    .F0(\AMDemodulator1/n684 ), .F1(\AMDemodulator1/n683 ), 
    .FCO(\AMDemodulator1/n12378 ));
  AMDemodulator1_SLICE_1425 \AMDemodulator1/SLICE_1425 ( 
    .C1(\AMDemodulator1/n626 ), .B1(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .A0(\AMDemodulator1/n627 ), 
    .FCI(\AMDemodulator1/n12376 ), .F0(\AMDemodulator1/n686 ), 
    .F1(\AMDemodulator1/n685 ), .FCO(\AMDemodulator1/n12377 ));
  AMDemodulator1_SLICE_1426 \AMDemodulator1/SLICE_1426 ( 
    .A1(\AMDemodulator1/ISquare_11 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .A0(\AMDemodulator1/ISquare_10 ), .FCI(\AMDemodulator1/n12375 ), 
    .F1(\AMDemodulator1/n687 ), .FCO(\AMDemodulator1/n12376 ));
  AMDemodulator1_SLICE_1427 \AMDemodulator1/SLICE_1427 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .FCO(\AMDemodulator1/n12375 ));
  AMDemodulator1_SLICE_1428 \AMDemodulator1/SLICE_1428 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A1(\AMDemodulator1/n852 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A0(\AMDemodulator1/n853 ), 
    .FCI(\AMDemodulator1/n12369 ), .F0(\AMDemodulator1/n912 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1892_17 ));
  AMDemodulator1_SLICE_1429 \AMDemodulator1/SLICE_1429 ( 
    .C1(\AMDemodulator1/n854 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n855 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12368 ), 
    .F0(\AMDemodulator1/n914 ), .F1(\AMDemodulator1/n913 ), 
    .FCO(\AMDemodulator1/n12369 ));
  AMDemodulator1_SLICE_1430 \AMDemodulator1/SLICE_1430 ( 
    .C1(\AMDemodulator1/n856 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), .A0(\AMDemodulator1/n857 ), 
    .FCI(\AMDemodulator1/n12367 ), .F0(\AMDemodulator1/n916 ), 
    .F1(\AMDemodulator1/n915 ), .FCO(\AMDemodulator1/n12368 ));
  AMDemodulator1_SLICE_1431 \AMDemodulator1/SLICE_1431 ( 
    .C1(\AMDemodulator1/n858 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1872_17 ), .C0(\AMDemodulator1/n859 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), .FCI(\AMDemodulator1/n12366 ), 
    .F0(\AMDemodulator1/n918 ), .F1(\AMDemodulator1/n917 ), 
    .FCO(\AMDemodulator1/n12367 ));
  AMDemodulator1_SLICE_1432 \AMDemodulator1/SLICE_1432 ( 
    .C1(\AMDemodulator1/n860 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .C0(\AMDemodulator1/n861 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), .FCI(\AMDemodulator1/n12365 ), 
    .F0(\AMDemodulator1/n920 ), .F1(\AMDemodulator1/n919 ), 
    .FCO(\AMDemodulator1/n12366 ));
  AMDemodulator1_SLICE_1433 \AMDemodulator1/SLICE_1433 ( 
    .C1(\AMDemodulator1/n862 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), .C0(\AMDemodulator1/n863 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1882_17 ), .FCI(\AMDemodulator1/n12364 ), 
    .F0(\AMDemodulator1/n922 ), .F1(\AMDemodulator1/n921 ), 
    .FCO(\AMDemodulator1/n12365 ));
  AMDemodulator1_SLICE_1434 \AMDemodulator1/SLICE_1434 ( 
    .C1(\AMDemodulator1/n864 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1884_17 ), .C0(\AMDemodulator1/n865 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1886_17 ), .FCI(\AMDemodulator1/n12363 ), 
    .F0(\AMDemodulator1/n924 ), .F1(\AMDemodulator1/n923 ), 
    .FCO(\AMDemodulator1/n12364 ));
  AMDemodulator1_SLICE_1435 \AMDemodulator1/SLICE_1435 ( 
    .C1(\AMDemodulator1/n866 ), .B1(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A0(\AMDemodulator1/n867 ), 
    .FCI(\AMDemodulator1/n12362 ), .F0(\AMDemodulator1/n926 ), 
    .F1(\AMDemodulator1/n925 ), .FCO(\AMDemodulator1/n12363 ));
  AMDemodulator1_SLICE_1436 \AMDemodulator1/SLICE_1436 ( 
    .A1(\AMDemodulator1/ISquare_3 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .A0(\AMDemodulator1/ISquare_2 ), .FCI(\AMDemodulator1/n12361 ), 
    .F1(\AMDemodulator1/n927 ), .FCO(\AMDemodulator1/n12362 ));
  AMDemodulator1_SLICE_1437 \AMDemodulator1/SLICE_1437 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1890_17 ), .FCO(\AMDemodulator1/n12361 ));
  AMDemodulator1_SLICE_1438 \AMDemodulator1/SLICE_1438 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A1(\AMDemodulator1/n792 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A0(\AMDemodulator1/n793 ), 
    .FCI(\AMDemodulator1/n12355 ), .F0(\AMDemodulator1/n852 ), 
    .F1(\AMDemodulator1/d_out_d_11_N_1890_17 ));
  AMDemodulator1_SLICE_1439 \AMDemodulator1/SLICE_1439 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A1(\AMDemodulator1/n794 ), 
    .C0(\AMDemodulator1/n795 ), .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12354 ), 
    .F0(\AMDemodulator1/n854 ), .F1(\AMDemodulator1/n853 ), 
    .FCO(\AMDemodulator1/n12355 ));
  AMDemodulator1_SLICE_1440 \AMDemodulator1/SLICE_1440 ( 
    .C1(\AMDemodulator1/n796 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n797 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12353 ), 
    .F0(\AMDemodulator1/n856 ), .F1(\AMDemodulator1/n855 ), 
    .FCO(\AMDemodulator1/n12354 ));
  AMDemodulator1_SLICE_1441 \AMDemodulator1/SLICE_1441 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .A1(\AMDemodulator1/n798 ), 
    .C0(\AMDemodulator1/n799 ), .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n12352 ), 
    .F0(\AMDemodulator1/n858 ), .F1(\AMDemodulator1/n857 ), 
    .FCO(\AMDemodulator1/n12353 ));
  AMDemodulator1_SLICE_1442 \AMDemodulator1/SLICE_1442 ( 
    .C1(\AMDemodulator1/n800 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .C0(\AMDemodulator1/n801 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCI(\AMDemodulator1/n12351 ), 
    .F0(\AMDemodulator1/n860 ), .F1(\AMDemodulator1/n859 ), 
    .FCO(\AMDemodulator1/n12352 ));
  AMDemodulator1_SLICE_1443 \AMDemodulator1/SLICE_1443 ( 
    .C1(\AMDemodulator1/n802 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1878_17 ), .C0(\AMDemodulator1/n803 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1880_17 ), .FCI(\AMDemodulator1/n12350 ), 
    .F0(\AMDemodulator1/n862 ), .F1(\AMDemodulator1/n861 ), 
    .FCO(\AMDemodulator1/n12351 ));
  AMDemodulator1_SLICE_1444 \AMDemodulator1/SLICE_1444 ( 
    .C1(\AMDemodulator1/n804 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1882_17 ), .C0(\AMDemodulator1/n805 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1884_17 ), .FCI(\AMDemodulator1/n12349 ), 
    .F0(\AMDemodulator1/n864 ), .F1(\AMDemodulator1/n863 ), 
    .FCO(\AMDemodulator1/n12350 ));
  AMDemodulator1_SLICE_1445 \AMDemodulator1/SLICE_1445 ( 
    .C1(\AMDemodulator1/n806 ), .B1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1886_17 ), .A0(\AMDemodulator1/n807 ), 
    .FCI(\AMDemodulator1/n12348 ), .F0(\AMDemodulator1/n866 ), 
    .F1(\AMDemodulator1/n865 ), .FCO(\AMDemodulator1/n12349 ));
  AMDemodulator1_SLICE_1446 \AMDemodulator1/SLICE_1446 ( 
    .A1(\AMDemodulator1/ISquare_5 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/ISquare_4 ), .FCI(\AMDemodulator1/n12347 ), 
    .F1(\AMDemodulator1/n867 ), .FCO(\AMDemodulator1/n12348 ));
  AMDemodulator1_SLICE_1447 \AMDemodulator1/SLICE_1447 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1888_17 ), .FCO(\AMDemodulator1/n12347 ));
  AMDemodulator1_SLICE_1448 \AMDemodulator1/SLICE_1448 ( 
    .B1(\AMDemodulator1/d_out_d_11__N_1875 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .B0(\AMDemodulator1/d_out_d_11__N_1875 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCI(\AMDemodulator1/n12341 ), 
    .F0(\AMDemodulator1/n496 ), .F1(\AMDemodulator1/d_out_d_11_N_1878_17 ));
  AMDemodulator1_SLICE_1449 \AMDemodulator1/SLICE_1449 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A1(\AMDemodulator1/n438 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A0(\AMDemodulator1/n439 ), 
    .FCI(\AMDemodulator1/n12340 ), .F0(\AMDemodulator1/n498 ), 
    .F1(\AMDemodulator1/n497 ), .FCO(\AMDemodulator1/n12341 ));
  AMDemodulator1_SLICE_1450 \AMDemodulator1/SLICE_1450 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A1(\AMDemodulator1/n440 ), 
    .C0(\AMDemodulator1/n441 ), .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12339 ), 
    .F0(\AMDemodulator1/n500 ), .F1(\AMDemodulator1/n499 ), 
    .FCO(\AMDemodulator1/n12340 ));
  AMDemodulator1_SLICE_1451 \AMDemodulator1/SLICE_1451 ( 
    .C1(\AMDemodulator1/n442 ), .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A1(\AMDemodulator1/ISquare_31 ), .C0(\AMDemodulator1/n443 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/ISquare_31 ), .FCI(\AMDemodulator1/n12338 ), 
    .F0(\AMDemodulator1/n502 ), .F1(\AMDemodulator1/n501 ), 
    .FCO(\AMDemodulator1/n12339 ));
  AMDemodulator1_SLICE_1452 \AMDemodulator1/SLICE_1452 ( 
    .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .A1(\AMDemodulator1/n444 ), 
    .C0(\AMDemodulator1/n445 ), .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), .FCI(\AMDemodulator1/n12337 ), 
    .F0(\AMDemodulator1/n504 ), .F1(\AMDemodulator1/n503 ), 
    .FCO(\AMDemodulator1/n12338 ));
  AMDemodulator1_SLICE_1453 \AMDemodulator1/SLICE_1453 ( 
    .C1(\AMDemodulator1/n446 ), .B1(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A1(\AMDemodulator1/d_out_d_11_N_1874_17 ), .A0(\AMDemodulator1/n447 ), 
    .FCI(\AMDemodulator1/n12336 ), .F0(\AMDemodulator1/n506 ), 
    .F1(\AMDemodulator1/n505 ), .FCO(\AMDemodulator1/n12337 ));
  AMDemodulator1_SLICE_1454 \AMDemodulator1/SLICE_1454 ( 
    .A1(\AMDemodulator1/ISquare_17 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/ISquare_16 ), .FCI(\AMDemodulator1/n12335 ), 
    .F1(\AMDemodulator1/n507 ), .FCO(\AMDemodulator1/n12336 ));
  AMDemodulator1_SLICE_1455 \AMDemodulator1/SLICE_1455 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), .FCO(\AMDemodulator1/n12335 ));
  AMDemodulator1_Multiplier2_SLICE_1456 
    \AMDemodulator1/Multiplier2/SLICE_1456 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_0 ));
  AMDemodulator1_Multiplier2_SLICE_1457 
    \AMDemodulator1/Multiplier2/SLICE_1457 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_13 ));
  AMDemodulator1_Multiplier2_SLICE_1458 
    \AMDemodulator1/Multiplier2/SLICE_1458 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_2 ));
  AMDemodulator1_Multiplier2_SLICE_1459 
    \AMDemodulator1/Multiplier2/SLICE_1459 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_1 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_15 ));
  AMDemodulator1_Multiplier2_SLICE_1460 
    \AMDemodulator1/Multiplier2/SLICE_1460 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_4 ));
  AMDemodulator1_Multiplier2_SLICE_1461 
    \AMDemodulator1/Multiplier2/SLICE_1461 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_17 ));
  AMDemodulator1_Multiplier2_SLICE_1462 
    \AMDemodulator1/Multiplier2/SLICE_1462 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_6 ));
  AMDemodulator1_Multiplier2_SLICE_1463 
    \AMDemodulator1/Multiplier2/SLICE_1463 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_3 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_19 ));
  AMDemodulator1_Multiplier2_SLICE_1464 
    \AMDemodulator1/Multiplier2/SLICE_1464 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_8 ));
  AMDemodulator1_Multiplier2_SLICE_1465 
    \AMDemodulator1/Multiplier2/SLICE_1465 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_21 ));
  AMDemodulator1_Multiplier2_SLICE_1466 
    \AMDemodulator1/Multiplier2/SLICE_1466 ( 
    .FCO(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_10 ));
  AMDemodulator1_Multiplier2_SLICE_1467 
    \AMDemodulator1/Multiplier2/SLICE_1467 ( 
    .FCI(\AMDemodulator1/Multiplier2/mfco_5 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_23 ));
  AMDemodulator1_Multiplier2_SLICE_1468 
    \AMDemodulator1/Multiplier2/SLICE_1468 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_2 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_2 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_2 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_2 ), 
    .Q1(\AMDemodulator1/Multiplier2/rego_o_2 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_1 ));
  AMDemodulator1_Multiplier2_SLICE_1469 
    \AMDemodulator1/Multiplier2/SLICE_1469 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_4 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_4 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_3 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_3 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_4 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_3 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_1 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_3 ), 
    .Q0(\AMDemodulator1/Multiplier2/rego_o_3 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_4 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_2 ));
  AMDemodulator1_Multiplier2_SLICE_1470 
    \AMDemodulator1/Multiplier2/SLICE_1470 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_6 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_6 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_5 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_6 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_2 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_5 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_5 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_6 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_3 ));
  AMDemodulator1_Multiplier2_SLICE_1471 
    \AMDemodulator1/Multiplier2/SLICE_1471 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_8 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_8 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_7 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_7 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_8 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_7 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_7 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_8 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_4 ));
  AMDemodulator1_Multiplier2_SLICE_1472 
    \AMDemodulator1/Multiplier2/SLICE_1472 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_10 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_10 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_9 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_9 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_10 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_9 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_9 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_5 ));
  AMDemodulator1_Multiplier2_SLICE_1473 
    \AMDemodulator1/Multiplier2/SLICE_1473 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_12 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_12 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_11 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_11 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_12 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_6 ));
  AMDemodulator1_Multiplier2_SLICE_1474 
    \AMDemodulator1/Multiplier2/SLICE_1474 ( 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_14 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_13 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_13 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_14 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_7 ));
  AMDemodulator1_Multiplier2_SLICE_1475 
    \AMDemodulator1/Multiplier2/SLICE_1475 ( 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_15 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_16 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_8 ));
  AMDemodulator1_Multiplier2_SLICE_1476 
    \AMDemodulator1/Multiplier2/SLICE_1476 ( 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_0_8 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_0_17 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_17 ));
  AMDemodulator1_Multiplier2_SLICE_1477 
    \AMDemodulator1/Multiplier2/SLICE_1477 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_6 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_6 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_6 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_6 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_1 ));
  AMDemodulator1_Multiplier2_SLICE_1478 
    \AMDemodulator1/Multiplier2/SLICE_1478 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_8 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_8 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_7 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_7 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_8 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_1 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_7 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_7 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_8 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_2 ));
  AMDemodulator1_Multiplier2_SLICE_1479 
    \AMDemodulator1/Multiplier2/SLICE_1479 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_10 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_10 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_9 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_9 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_10 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_2 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_9 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_9 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_3 ));
  AMDemodulator1_Multiplier2_SLICE_1480 
    \AMDemodulator1/Multiplier2/SLICE_1480 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_12 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_12 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_11 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_11 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_12 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_4 ));
  AMDemodulator1_Multiplier2_SLICE_1481 
    \AMDemodulator1/Multiplier2/SLICE_1481 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_14 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_14 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_13 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_13 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_14 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_5 ));
  AMDemodulator1_Multiplier2_SLICE_1482 
    \AMDemodulator1/Multiplier2/SLICE_1482 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_16 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_16 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_15 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_15 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_16 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_6 ));
  AMDemodulator1_Multiplier2_SLICE_1483 
    \AMDemodulator1/Multiplier2/SLICE_1483 ( 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_18 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_17 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_18 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_17 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_17 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_18 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_7 ));
  AMDemodulator1_Multiplier2_SLICE_1484 
    \AMDemodulator1/Multiplier2/SLICE_1484 ( 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_20 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_19 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_19 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_20 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_8 ));
  AMDemodulator1_Multiplier2_SLICE_1485 
    \AMDemodulator1/Multiplier2/SLICE_1485 ( 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_1_8 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_1_21 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_21 ));
  AMDemodulator1_Multiplier2_SLICE_1486 
    \AMDemodulator1/Multiplier2/SLICE_1486 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_10 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_10 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_10 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_1 ));
  AMDemodulator1_Multiplier2_SLICE_1487 
    \AMDemodulator1/Multiplier2/SLICE_1487 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_12 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_12 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_11 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_1 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_11 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_12 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_2 ));
  AMDemodulator1_Multiplier2_SLICE_1488 
    \AMDemodulator1/Multiplier2/SLICE_1488 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_14 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_14 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_13 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_2 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_13 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_14 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_3 ));
  AMDemodulator1_Multiplier2_SLICE_1489 
    \AMDemodulator1/Multiplier2/SLICE_1489 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_16 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_16 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_15 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_15 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_16 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_4 ));
  AMDemodulator1_Multiplier2_SLICE_1490 
    \AMDemodulator1/Multiplier2/SLICE_1490 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_18 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_18 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_17 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_17 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_18 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_17 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_17 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_18 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_5 ));
  AMDemodulator1_Multiplier2_SLICE_1491 
    \AMDemodulator1/Multiplier2/SLICE_1491 ( 
    .B1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_20 ), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_20 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_19 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_19 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_20 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_19 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_19 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_20 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_6 ));
  AMDemodulator1_Multiplier2_SLICE_1492 
    \AMDemodulator1/Multiplier2/SLICE_1492 ( 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_22 ), 
    .B0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_21 ), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_21 ), 
    .DI1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_22 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_21 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_21 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_22 ), 
    .Q1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_7 ));
  AMDemodulator1_Multiplier2_SLICE_1493 
    \AMDemodulator1/Multiplier2/SLICE_1493 ( 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_23 ), 
    .DI0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_23 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_2_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_2_23 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_23 ));
  AMDemodulator1_Multiplier2_SLICE_1494 
    \AMDemodulator1/Multiplier2/SLICE_1494 ( 
    .B1(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_4 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_4 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_4 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_4 ), 
    .Q1(\AMDemodulator1/MultResult2_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_1 ));
  AMDemodulator1_Multiplier2_SLICE_1495 
    \AMDemodulator1/Multiplier2/SLICE_1495 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_6 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_6 ), 
    .B0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_5 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_6 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_5 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_1 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_5 ), 
    .Q0(\AMDemodulator1/MultResult2_5 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_6 ), 
    .Q1(\AMDemodulator1/MultResult2_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_2 ));
  AMDemodulator1_Multiplier2_SLICE_1496 
    \AMDemodulator1/Multiplier2/SLICE_1496 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_8 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_8 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_7 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_7 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_7 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_2 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_7 ), 
    .Q0(\AMDemodulator1/MultResult2_7 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_3 ));
  AMDemodulator1_Multiplier2_SLICE_1497 
    \AMDemodulator1/Multiplier2/SLICE_1497 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_10 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_10 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_9 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_9 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_3 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_9 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_4 ));
  AMDemodulator1_Multiplier2_SLICE_1498 
    \AMDemodulator1/Multiplier2/SLICE_1498 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_12 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_12 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_11 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_11 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_4 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_11 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_5 ));
  AMDemodulator1_Multiplier2_SLICE_1499 
    \AMDemodulator1/Multiplier2/SLICE_1499 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_14 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_14 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_13 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_13 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_5 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_13 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_6 ));
  AMDemodulator1_Multiplier2_SLICE_1500 
    \AMDemodulator1/Multiplier2/SLICE_1500 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_16 ), 
    .A1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_16 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_15 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_15 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_6 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_15 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_7 ));
  AMDemodulator1_Multiplier2_SLICE_1501 
    \AMDemodulator1/Multiplier2/SLICE_1501 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_18 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_17 ), 
    .A0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_0_17 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_7 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_17 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_8 ));
  AMDemodulator1_Multiplier2_SLICE_1502 
    \AMDemodulator1/Multiplier2/SLICE_1502 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_20 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_19 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_8 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_19 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_9 ));
  AMDemodulator1_Multiplier2_SLICE_1503 
    \AMDemodulator1/Multiplier2/SLICE_1503 ( 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_1_21 ), 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_9 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_21 ), 
    .F1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_10 ));
  AMDemodulator1_Multiplier2_SLICE_1504 
    \AMDemodulator1/Multiplier2/SLICE_1504 ( 
    .FCI(\AMDemodulator1/Multiplier2/co_Multiplier_0_3_10 ), 
    .F0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_23 ));
  AMDemodulator1_Multiplier2_SLICE_1505 
    \AMDemodulator1/Multiplier2/SLICE_1505 ( 
    .B1(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_8 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_8 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_8 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_8 ), 
    .Q1(\AMDemodulator1/MultResult2_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_1 ));
  AMDemodulator1_Multiplier2_SLICE_1506 
    \AMDemodulator1/Multiplier2/SLICE_1506 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_10 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_10 ), 
    .B0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_9 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_9 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_10 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_9 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_1 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_9 ), 
    .Q0(\AMDemodulator1/MultResult2_9 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_10 ), 
    .Q1(\AMDemodulator1/MultResult2_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_2 ));
  AMDemodulator1_Multiplier2_SLICE_1507 
    \AMDemodulator1/Multiplier2/SLICE_1507 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_12 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_12 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_11 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_11 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_12 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_11 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_2 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_11 ), 
    .Q0(\AMDemodulator1/MultResult2_11 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_12 ), 
    .Q1(\AMDemodulator1/MultResult2_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_3 ));
  AMDemodulator1_Multiplier2_SLICE_1508 
    \AMDemodulator1/Multiplier2/SLICE_1508 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_14 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_14 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_13 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_13 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_14 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_13 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_3 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_13 ), 
    .Q0(\AMDemodulator1/MultResult2_13 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_14 ), 
    .Q1(\AMDemodulator1/MultResult2_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_4 ));
  AMDemodulator1_Multiplier2_SLICE_1509 
    \AMDemodulator1/Multiplier2/SLICE_1509 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_16 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_16 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_15 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_15 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_16 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_15 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_4 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_15 ), 
    .Q0(\AMDemodulator1/MultResult2_15 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_16 ), 
    .Q1(\AMDemodulator1/MultResult2_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_5 ));
  AMDemodulator1_Multiplier2_SLICE_1510 
    \AMDemodulator1/Multiplier2/SLICE_1510 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_18 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_18 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_17 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_18 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_17 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_5 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_17 ), 
    .Q0(\AMDemodulator1/MultResult2_17 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_18 ), 
    .Q1(\AMDemodulator1/MultResult2_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_6 ));
  AMDemodulator1_Multiplier2_SLICE_1511 
    \AMDemodulator1/Multiplier2/SLICE_1511 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_20 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_20 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_19 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_20 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_19 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_6 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_19 ), 
    .Q0(\AMDemodulator1/MultResult2_19 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_20 ), 
    .Q1(\AMDemodulator1/MultResult2_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_7 ));
  AMDemodulator1_Multiplier2_SLICE_1512 
    \AMDemodulator1/Multiplier2/SLICE_1512 ( 
    .B1(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_22 ), 
    .A1(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_22 ), 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_21 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_21 ), 
    .DI1(\AMDemodulator1/Multiplier2/rego_o_22 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_21 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_7 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_21 ), 
    .Q0(\AMDemodulator1/MultResult2_21 ), 
    .F1(\AMDemodulator1/Multiplier2/rego_o_22 ), 
    .Q1(\AMDemodulator1/MultResult2_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_8 ));
  AMDemodulator1_Multiplier2_SLICE_1513 
    \AMDemodulator1/Multiplier2/SLICE_1513 ( 
    .B0(\AMDemodulator1/Multiplier2/f_s_Multiplier_0_2_23 ), 
    .A0(\AMDemodulator1/Multiplier2/s_Multiplier_0_3_23 ), 
    .DI0(\AMDemodulator1/Multiplier2/rego_o_23 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/co_t_Multiplier_0_4_8 ), 
    .F0(\AMDemodulator1/Multiplier2/rego_o_23 ), 
    .Q0(\AMDemodulator1/MultResult2_23 ));
  AMDemodulator1_Multiplier2_SLICE_1514 
    \AMDemodulator1/Multiplier2/SLICE_1514 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_1 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_1 ), 
    .Q0(\AMDemodulator1/Multiplier2/rego_o_1 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_2 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco ));
  AMDemodulator1_Multiplier2_SLICE_1515 
    \AMDemodulator1/Multiplier2/SLICE_1515 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_3 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_1 ));
  AMDemodulator1_Multiplier2_SLICE_1516 
    \AMDemodulator1/Multiplier2/SLICE_1516 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_1 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_5 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_2 ));
  AMDemodulator1_Multiplier2_SLICE_1517 
    \AMDemodulator1/Multiplier2/SLICE_1517 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_3 ));
  AMDemodulator1_Multiplier2_SLICE_1518 
    \AMDemodulator1/Multiplier2/SLICE_1518 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_3 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_4 ));
  AMDemodulator1_Multiplier2_SLICE_1519 
    \AMDemodulator1/Multiplier2/SLICE_1519 ( .D1(VCC_net), .C1(VCC_net), 
    .B1(VCC_net), .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n1 ), 
    .D0(VCC_net), .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco ));
  AMDemodulator1_Multiplier2_SLICE_1520 
    \AMDemodulator1/Multiplier2/SLICE_1520 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_3 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_4 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_5 ));
  AMDemodulator1_Multiplier2_SLICE_1521 
    \AMDemodulator1/Multiplier2/SLICE_1521 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_5 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_5 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_6 ));
  AMDemodulator1_Multiplier2_SLICE_1522 
    \AMDemodulator1/Multiplier2/SLICE_1522 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_6 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_7 ));
  AMDemodulator1_Multiplier2_SLICE_1523 
    \AMDemodulator1/Multiplier2/SLICE_1523 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_7 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_8 ));
  AMDemodulator1_Multiplier2_SLICE_1524 
    \AMDemodulator1/Multiplier2/SLICE_1524 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_8 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_9 ));
  AMDemodulator1_Multiplier2_SLICE_1525 
    \AMDemodulator1/Multiplier2/SLICE_1525 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_9 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_1 ));
  AMDemodulator1_Multiplier2_SLICE_1526 
    \AMDemodulator1/Multiplier2/SLICE_1526 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_5 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_5 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_6 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_10 ));
  AMDemodulator1_Multiplier2_SLICE_1527 
    \AMDemodulator1/Multiplier2/SLICE_1527 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_10 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_11 ));
  AMDemodulator1_Multiplier2_SLICE_1528 
    \AMDemodulator1/Multiplier2/SLICE_1528 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_12 ));
  AMDemodulator1_Multiplier2_SLICE_1529 
    \AMDemodulator1/Multiplier2/SLICE_1529 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_12 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_13 ));
  AMDemodulator1_Multiplier2_SLICE_1530 
    \AMDemodulator1/Multiplier2/SLICE_1530 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_13 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_14 ));
  AMDemodulator1_Multiplier2_SLICE_1531 
    \AMDemodulator1/Multiplier2/SLICE_1531 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_14 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_2 ));
  AMDemodulator1_Multiplier2_SLICE_1532 
    \AMDemodulator1/Multiplier2/SLICE_1532 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_6 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_7 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_15 ));
  AMDemodulator1_Multiplier2_SLICE_1533 
    \AMDemodulator1/Multiplier2/SLICE_1533 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_15 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_16 ));
  AMDemodulator1_Multiplier2_SLICE_1534 
    \AMDemodulator1/Multiplier2/SLICE_1534 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_16 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_17 ));
  AMDemodulator1_Multiplier2_SLICE_1535 
    \AMDemodulator1/Multiplier2/SLICE_1535 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_17 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_18 ));
  AMDemodulator1_Multiplier2_SLICE_1536 
    \AMDemodulator1/Multiplier2/SLICE_1536 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_18 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_19 ));
  AMDemodulator1_Multiplier2_SLICE_1537 
    \AMDemodulator1/Multiplier2/SLICE_1537 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_19 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_17 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_3 ));
  AMDemodulator1_Multiplier2_SLICE_1538 
    \AMDemodulator1/Multiplier2/SLICE_1538 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_8 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_9 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_9 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_10 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_20 ));
  AMDemodulator1_Multiplier2_SLICE_1539 
    \AMDemodulator1/Multiplier2/SLICE_1539 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_20 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_21 ));
  AMDemodulator1_Multiplier2_SLICE_1540 
    \AMDemodulator1/Multiplier2/SLICE_1540 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_21 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_22 ));
  AMDemodulator1_Multiplier2_SLICE_1541 
    \AMDemodulator1/Multiplier2/SLICE_1541 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_22 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_23 ));
  AMDemodulator1_Multiplier2_SLICE_1542 
    \AMDemodulator1/Multiplier2/SLICE_1542 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_23 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_17 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_24 ));
  AMDemodulator1_Multiplier2_SLICE_1543 
    \AMDemodulator1/Multiplier2/SLICE_1543 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_24 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_19 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_4 ));
  AMDemodulator1_Multiplier2_SLICE_1544 
    \AMDemodulator1/Multiplier2/SLICE_1544 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_1 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_10 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_11 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_12 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_25 ));
  AMDemodulator1_Multiplier2_SLICE_1545 
    \AMDemodulator1/Multiplier2/SLICE_1545 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_3 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_25 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_13 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_14 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_26 ));
  AMDemodulator1_Multiplier2_SLICE_1546 
    \AMDemodulator1/Multiplier2/SLICE_1546 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_5 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_26 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_15 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_16 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_27 ));
  AMDemodulator1_Multiplier2_SLICE_1547 
    \AMDemodulator1/Multiplier2/SLICE_1547 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_7 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_27 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_17 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_18 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_28 ));
  AMDemodulator1_Multiplier2_SLICE_1548 
    \AMDemodulator1/Multiplier2/SLICE_1548 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier2/rega_a_10 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n1 ), 
    .D0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier2/rega_a_9 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_28 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_19 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_20 ), 
    .FCO(\AMDemodulator1/Multiplier2/mco_29 ));
  AMDemodulator1_Multiplier2_SLICE_1549 
    \AMDemodulator1/Multiplier2/SLICE_1549 ( 
    .D1(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .B1(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A1(\AMDemodulator1/Multiplier2/rega_a_11 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n2 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n0 ), 
    .FCI(\AMDemodulator1/Multiplier2/mco_29 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_21 ), 
    .F1(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_22 ), 
    .FCO(\AMDemodulator1/Multiplier2/mfco_5 ));
  AMDemodulator1_Multiplier1_SLICE_1550 
    \AMDemodulator1/Multiplier1/SLICE_1550 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_0 ));
  AMDemodulator1_Multiplier1_SLICE_1551 
    \AMDemodulator1/Multiplier1/SLICE_1551 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_13 ));
  AMDemodulator1_Multiplier1_SLICE_1552 
    \AMDemodulator1/Multiplier1/SLICE_1552 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_2 ));
  AMDemodulator1_Multiplier1_SLICE_1553 
    \AMDemodulator1/Multiplier1/SLICE_1553 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_1 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_15 ));
  AMDemodulator1_Multiplier1_SLICE_1554 
    \AMDemodulator1/Multiplier1/SLICE_1554 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_4 ));
  AMDemodulator1_Multiplier1_SLICE_1555 
    \AMDemodulator1/Multiplier1/SLICE_1555 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_17 ));
  AMDemodulator1_Multiplier1_SLICE_1556 
    \AMDemodulator1/Multiplier1/SLICE_1556 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_6 ));
  AMDemodulator1_Multiplier1_SLICE_1557 
    \AMDemodulator1/Multiplier1/SLICE_1557 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_3 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_19 ));
  AMDemodulator1_Multiplier1_SLICE_1558 
    \AMDemodulator1/Multiplier1/SLICE_1558 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_8 ));
  AMDemodulator1_Multiplier1_SLICE_1559 
    \AMDemodulator1/Multiplier1/SLICE_1559 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_21 ));
  AMDemodulator1_Multiplier1_SLICE_1560 
    \AMDemodulator1/Multiplier1/SLICE_1560 ( 
    .FCO(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_10 ));
  AMDemodulator1_Multiplier1_SLICE_1561 
    \AMDemodulator1/Multiplier1/SLICE_1561 ( 
    .FCI(\AMDemodulator1/Multiplier1/mfco_5 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_23 ));
  AMDemodulator1_Multiplier1_SLICE_1562 
    \AMDemodulator1/Multiplier1/SLICE_1562 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_2 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_2 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_2 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_2 ), 
    .Q1(\AMDemodulator1/Multiplier1/rego_o_2 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_1 ));
  AMDemodulator1_Multiplier1_SLICE_1563 
    \AMDemodulator1/Multiplier1/SLICE_1563 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_4 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_4 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_3 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_3 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_4 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_3 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_1 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_3 ), 
    .Q0(\AMDemodulator1/Multiplier1/rego_o_3 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_4 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_2 ));
  AMDemodulator1_Multiplier1_SLICE_1564 
    \AMDemodulator1/Multiplier1/SLICE_1564 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_6 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_6 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_5 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_6 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_2 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_5 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_5 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_6 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_3 ));
  AMDemodulator1_Multiplier1_SLICE_1565 
    \AMDemodulator1/Multiplier1/SLICE_1565 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_8 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_8 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_7 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_7 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_8 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_7 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_7 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_8 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_4 ));
  AMDemodulator1_Multiplier1_SLICE_1566 
    \AMDemodulator1/Multiplier1/SLICE_1566 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_10 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_10 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_9 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_9 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_10 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_9 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_9 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_5 ));
  AMDemodulator1_Multiplier1_SLICE_1567 
    \AMDemodulator1/Multiplier1/SLICE_1567 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_12 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_12 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_11 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_11 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_12 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_6 ));
  AMDemodulator1_Multiplier1_SLICE_1568 
    \AMDemodulator1/Multiplier1/SLICE_1568 ( 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_14 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_13 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_13 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_14 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_7 ));
  AMDemodulator1_Multiplier1_SLICE_1569 
    \AMDemodulator1/Multiplier1/SLICE_1569 ( 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_15 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_16 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_8 ));
  AMDemodulator1_Multiplier1_SLICE_1570 
    \AMDemodulator1/Multiplier1/SLICE_1570 ( 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_0_8 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_0_17 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_17 ));
  AMDemodulator1_Multiplier1_SLICE_1571 
    \AMDemodulator1/Multiplier1/SLICE_1571 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_6 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_6 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_6 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_6 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_1 ));
  AMDemodulator1_Multiplier1_SLICE_1572 
    \AMDemodulator1/Multiplier1/SLICE_1572 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_8 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_8 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_7 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_7 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_8 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_7 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_1 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_7 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_7 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_8 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_2 ));
  AMDemodulator1_Multiplier1_SLICE_1573 
    \AMDemodulator1/Multiplier1/SLICE_1573 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_10 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_10 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_9 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_9 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_10 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_2 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_9 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_9 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_3 ));
  AMDemodulator1_Multiplier1_SLICE_1574 
    \AMDemodulator1/Multiplier1/SLICE_1574 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_12 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_12 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_11 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_11 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_12 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_4 ));
  AMDemodulator1_Multiplier1_SLICE_1575 
    \AMDemodulator1/Multiplier1/SLICE_1575 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_14 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_14 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_13 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_13 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_14 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_5 ));
  AMDemodulator1_Multiplier1_SLICE_1576 
    \AMDemodulator1/Multiplier1/SLICE_1576 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_16 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_16 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_15 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_15 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_16 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_6 ));
  AMDemodulator1_Multiplier1_SLICE_1577 
    \AMDemodulator1/Multiplier1/SLICE_1577 ( 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_18 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_17 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_18 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_17 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_17 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_18 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_7 ));
  AMDemodulator1_Multiplier1_SLICE_1578 
    \AMDemodulator1/Multiplier1/SLICE_1578 ( 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_20 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_19 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_19 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_20 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_8 ));
  AMDemodulator1_Multiplier1_SLICE_1579 
    \AMDemodulator1/Multiplier1/SLICE_1579 ( 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_1_8 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_1_21 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_21 ));
  AMDemodulator1_Multiplier1_SLICE_1580 
    \AMDemodulator1/Multiplier1/SLICE_1580 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_10 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_10 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_10 ), 
    .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_1 ));
  AMDemodulator1_Multiplier1_SLICE_1581 
    \AMDemodulator1/Multiplier1/SLICE_1581 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_12 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_12 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_11 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_11 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_1 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_11 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_12 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_2 ));
  AMDemodulator1_Multiplier1_SLICE_1582 
    \AMDemodulator1/Multiplier1/SLICE_1582 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_14 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_14 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_13 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_13 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_2 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_13 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_14 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_3 ));
  AMDemodulator1_Multiplier1_SLICE_1583 
    \AMDemodulator1/Multiplier1/SLICE_1583 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_16 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_16 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_15 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_15 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_15 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_16 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_4 ));
  AMDemodulator1_Multiplier1_SLICE_1584 
    \AMDemodulator1/Multiplier1/SLICE_1584 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_18 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_18 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_17 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_17 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_18 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_17 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_17 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_17 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_18 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_5 ));
  AMDemodulator1_Multiplier1_SLICE_1585 
    \AMDemodulator1/Multiplier1/SLICE_1585 ( 
    .B1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_20 ), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_20 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_19 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_19 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_20 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_19 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_19 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_19 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_20 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_6 ));
  AMDemodulator1_Multiplier1_SLICE_1586 
    \AMDemodulator1/Multiplier1/SLICE_1586 ( 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_22 ), 
    .B0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_21 ), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_21 ), 
    .DI1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_22 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_21 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_21 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_21 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_22 ), 
    .Q1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_7 ));
  AMDemodulator1_Multiplier1_SLICE_1587 
    \AMDemodulator1/Multiplier1/SLICE_1587 ( 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_23 ), 
    .DI0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_23 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_2_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_2_23 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_23 ));
  AMDemodulator1_Multiplier1_SLICE_1588 
    \AMDemodulator1/Multiplier1/SLICE_1588 ( 
    .B1(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_4 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_4 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_4 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_4 ), 
    .Q1(\AMDemodulator1/MultResult1_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_1 ));
  AMDemodulator1_Multiplier1_SLICE_1589 
    \AMDemodulator1/Multiplier1/SLICE_1589 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_6 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_6 ), 
    .B0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_5 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_5 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_6 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_5 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_1 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_5 ), 
    .Q0(\AMDemodulator1/MultResult1_5 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_6 ), 
    .Q1(\AMDemodulator1/MultResult1_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_2 ));
  AMDemodulator1_Multiplier1_SLICE_1590 
    \AMDemodulator1/Multiplier1/SLICE_1590 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_8 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_8 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_7 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_7 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_7 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_2 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_7 ), 
    .Q0(\AMDemodulator1/MultResult1_7 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_3 ));
  AMDemodulator1_Multiplier1_SLICE_1591 
    \AMDemodulator1/Multiplier1/SLICE_1591 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_10 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_10 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_9 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_9 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_3 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_9 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_4 ));
  AMDemodulator1_Multiplier1_SLICE_1592 
    \AMDemodulator1/Multiplier1/SLICE_1592 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_12 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_12 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_11 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_11 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_4 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_11 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_5 ));
  AMDemodulator1_Multiplier1_SLICE_1593 
    \AMDemodulator1/Multiplier1/SLICE_1593 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_14 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_14 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_13 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_13 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_5 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_13 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_6 ));
  AMDemodulator1_Multiplier1_SLICE_1594 
    \AMDemodulator1/Multiplier1/SLICE_1594 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_16 ), 
    .A1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_16 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_15 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_15 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_6 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_15 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_7 ));
  AMDemodulator1_Multiplier1_SLICE_1595 
    \AMDemodulator1/Multiplier1/SLICE_1595 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_18 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_17 ), 
    .A0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_0_17 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_7 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_17 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_8 ));
  AMDemodulator1_Multiplier1_SLICE_1596 
    \AMDemodulator1/Multiplier1/SLICE_1596 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_20 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_19 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_8 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_19 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_9 ));
  AMDemodulator1_Multiplier1_SLICE_1597 
    \AMDemodulator1/Multiplier1/SLICE_1597 ( 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_1_21 ), 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_9 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_21 ), 
    .F1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_10 ));
  AMDemodulator1_Multiplier1_SLICE_1598 
    \AMDemodulator1/Multiplier1/SLICE_1598 ( 
    .FCI(\AMDemodulator1/Multiplier1/co_Multiplier_0_3_10 ), 
    .F0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_23 ));
  AMDemodulator1_Multiplier1_SLICE_1599 
    \AMDemodulator1/Multiplier1/SLICE_1599 ( 
    .B1(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_8 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_8 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_8 ), .CLK(CIC1_out_clkSin), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_8 ), 
    .Q1(\AMDemodulator1/MultResult1_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_1 ));
  AMDemodulator1_Multiplier1_SLICE_1600 
    \AMDemodulator1/Multiplier1/SLICE_1600 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_10 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_10 ), 
    .B0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_9 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_9 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_10 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_9 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_1 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_9 ), 
    .Q0(\AMDemodulator1/MultResult1_9 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_10 ), 
    .Q1(\AMDemodulator1/MultResult1_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_2 ));
  AMDemodulator1_Multiplier1_SLICE_1601 
    \AMDemodulator1/Multiplier1/SLICE_1601 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_12 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_12 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_11 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_11 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_12 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_11 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_2 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_11 ), 
    .Q0(\AMDemodulator1/MultResult1_11 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_12 ), 
    .Q1(\AMDemodulator1/MultResult1_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_3 ));
  AMDemodulator1_Multiplier1_SLICE_1602 
    \AMDemodulator1/Multiplier1/SLICE_1602 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_14 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_14 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_13 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_13 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_14 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_13 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_3 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_13 ), 
    .Q0(\AMDemodulator1/MultResult1_13 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_14 ), 
    .Q1(\AMDemodulator1/MultResult1_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_4 ));
  AMDemodulator1_Multiplier1_SLICE_1603 
    \AMDemodulator1/Multiplier1/SLICE_1603 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_16 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_16 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_15 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_15 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_16 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_15 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_4 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_15 ), 
    .Q0(\AMDemodulator1/MultResult1_15 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_16 ), 
    .Q1(\AMDemodulator1/MultResult1_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_5 ));
  AMDemodulator1_Multiplier1_SLICE_1604 
    \AMDemodulator1/Multiplier1/SLICE_1604 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_18 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_18 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_17 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_17 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_18 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_17 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_5 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_17 ), 
    .Q0(\AMDemodulator1/MultResult1_17 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_18 ), 
    .Q1(\AMDemodulator1/MultResult1_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_6 ));
  AMDemodulator1_Multiplier1_SLICE_1605 
    \AMDemodulator1/Multiplier1/SLICE_1605 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_20 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_20 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_19 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_19 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_20 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_19 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_6 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_19 ), 
    .Q0(\AMDemodulator1/MultResult1_19 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_20 ), 
    .Q1(\AMDemodulator1/MultResult1_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_7 ));
  AMDemodulator1_Multiplier1_SLICE_1606 
    \AMDemodulator1/Multiplier1/SLICE_1606 ( 
    .B1(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_22 ), 
    .A1(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_22 ), 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_21 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_21 ), 
    .DI1(\AMDemodulator1/Multiplier1/rego_o_22 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_21 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_7 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_21 ), 
    .Q0(\AMDemodulator1/MultResult1_21 ), 
    .F1(\AMDemodulator1/Multiplier1/rego_o_22 ), 
    .Q1(\AMDemodulator1/MultResult1_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_8 ));
  AMDemodulator1_Multiplier1_SLICE_1607 
    \AMDemodulator1/Multiplier1/SLICE_1607 ( 
    .B0(\AMDemodulator1/Multiplier1/f_s_Multiplier_0_2_23 ), 
    .A0(\AMDemodulator1/Multiplier1/s_Multiplier_0_3_23 ), 
    .DI0(\AMDemodulator1/Multiplier1/rego_o_23 ), .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/co_t_Multiplier_0_4_8 ), 
    .F0(\AMDemodulator1/Multiplier1/rego_o_23 ), 
    .Q0(\AMDemodulator1/MultResult1_23 ));
  AMDemodulator1_Multiplier1_SLICE_1608 
    \AMDemodulator1/Multiplier1/SLICE_1608 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_1 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_1 ), 
    .Q0(\AMDemodulator1/Multiplier1/rego_o_1 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_2 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco ));
  AMDemodulator1_Multiplier1_SLICE_1609 
    \AMDemodulator1/Multiplier1/SLICE_1609 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_3 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_1 ));
  AMDemodulator1_Multiplier1_SLICE_1610 
    \AMDemodulator1/Multiplier1/SLICE_1610 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_1 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_5 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_2 ));
  AMDemodulator1_Multiplier1_SLICE_1611 
    \AMDemodulator1/Multiplier1/SLICE_1611 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_3 ));
  AMDemodulator1_Multiplier1_SLICE_1612 
    \AMDemodulator1/Multiplier1/SLICE_1612 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_3 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_4 ));
  AMDemodulator1_Multiplier1_SLICE_1613 
    \AMDemodulator1/Multiplier1/SLICE_1613 ( .D1(VCC_net), .C1(VCC_net), 
    .B1(VCC_net), .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n1 ), 
    .D0(VCC_net), .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_0_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco ));
  AMDemodulator1_Multiplier1_SLICE_1614 
    \AMDemodulator1/Multiplier1/SLICE_1614 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_3 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_4 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_5 ));
  AMDemodulator1_Multiplier1_SLICE_1615 
    \AMDemodulator1/Multiplier1/SLICE_1615 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_5 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_5 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_6 ));
  AMDemodulator1_Multiplier1_SLICE_1616 
    \AMDemodulator1/Multiplier1/SLICE_1616 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_6 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_7 ));
  AMDemodulator1_Multiplier1_SLICE_1617 
    \AMDemodulator1/Multiplier1/SLICE_1617 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_7 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_8 ));
  AMDemodulator1_Multiplier1_SLICE_1618 
    \AMDemodulator1/Multiplier1/SLICE_1618 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_8 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_9 ));
  AMDemodulator1_Multiplier1_SLICE_1619 
    \AMDemodulator1/Multiplier1/SLICE_1619 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_9 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_1 ));
  AMDemodulator1_Multiplier1_SLICE_1620 
    \AMDemodulator1/Multiplier1/SLICE_1620 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_5 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_5 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_5 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_6 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_10 ));
  AMDemodulator1_Multiplier1_SLICE_1621 
    \AMDemodulator1/Multiplier1/SLICE_1621 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_10 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_11 ));
  AMDemodulator1_Multiplier1_SLICE_1622 
    \AMDemodulator1/Multiplier1/SLICE_1622 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_12 ));
  AMDemodulator1_Multiplier1_SLICE_1623 
    \AMDemodulator1/Multiplier1/SLICE_1623 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_12 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_13 ));
  AMDemodulator1_Multiplier1_SLICE_1624 
    \AMDemodulator1/Multiplier1/SLICE_1624 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_13 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_14 ));
  AMDemodulator1_Multiplier1_SLICE_1625 
    \AMDemodulator1/Multiplier1/SLICE_1625 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_14 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_2 ));
  AMDemodulator1_Multiplier1_SLICE_1626 
    \AMDemodulator1/Multiplier1/SLICE_1626 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_6 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_7 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_8 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_15 ));
  AMDemodulator1_Multiplier1_SLICE_1627 
    \AMDemodulator1/Multiplier1/SLICE_1627 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_15 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_16 ));
  AMDemodulator1_Multiplier1_SLICE_1628 
    \AMDemodulator1/Multiplier1/SLICE_1628 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_16 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_17 ));
  AMDemodulator1_Multiplier1_SLICE_1629 
    \AMDemodulator1/Multiplier1/SLICE_1629 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_17 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_18 ));
  AMDemodulator1_Multiplier1_SLICE_1630 
    \AMDemodulator1/Multiplier1/SLICE_1630 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_18 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_19 ));
  AMDemodulator1_Multiplier1_SLICE_1631 
    \AMDemodulator1/Multiplier1/SLICE_1631 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_19 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_17 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_3 ));
  AMDemodulator1_Multiplier1_SLICE_1632 
    \AMDemodulator1/Multiplier1/SLICE_1632 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_9 ), 
    .CLK(CIC1_out_clkSin), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_8 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_9 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_9 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_10 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_20 ));
  AMDemodulator1_Multiplier1_SLICE_1633 
    \AMDemodulator1/Multiplier1/SLICE_1633 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_20 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_21 ));
  AMDemodulator1_Multiplier1_SLICE_1634 
    \AMDemodulator1/Multiplier1/SLICE_1634 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_21 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_22 ));
  AMDemodulator1_Multiplier1_SLICE_1635 
    \AMDemodulator1/Multiplier1/SLICE_1635 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_22 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_23 ));
  AMDemodulator1_Multiplier1_SLICE_1636 
    \AMDemodulator1/Multiplier1/SLICE_1636 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_23 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_17 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_24 ));
  AMDemodulator1_Multiplier1_SLICE_1637 
    \AMDemodulator1/Multiplier1/SLICE_1637 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n1 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n2 ), 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_24 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_19 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_4 ));
  AMDemodulator1_Multiplier1_SLICE_1638 
    \AMDemodulator1/Multiplier1/SLICE_1638 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_2 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_1 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_10 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_11 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_12 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_25 ));
  AMDemodulator1_Multiplier1_SLICE_1639 
    \AMDemodulator1/Multiplier1/SLICE_1639 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_4 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_3 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_25 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_13 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_14 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_26 ));
  AMDemodulator1_Multiplier1_SLICE_1640 
    \AMDemodulator1/Multiplier1/SLICE_1640 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_6 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_5 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_26 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_15 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_16 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_27 ));
  AMDemodulator1_Multiplier1_SLICE_1641 
    \AMDemodulator1/Multiplier1/SLICE_1641 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_8 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_7 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_27 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_17 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_18 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_28 ));
  AMDemodulator1_Multiplier1_SLICE_1642 
    \AMDemodulator1/Multiplier1/SLICE_1642 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C1(\AMDemodulator1/Multiplier1/rega_a_10 ), .B1(VCC_net), 
    .A1(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n1 ), 
    .D0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .C0(\AMDemodulator1/Multiplier1/rega_a_9 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_28 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_19 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_20 ), 
    .FCO(\AMDemodulator1/Multiplier1/mco_29 ));
  AMDemodulator1_Multiplier1_SLICE_1643 
    \AMDemodulator1/Multiplier1/SLICE_1643 ( 
    .D1(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .B1(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A1(\AMDemodulator1/Multiplier1/rega_a_11 ), .D0(VCC_net), 
    .C0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n2 ), .B0(VCC_net), 
    .A0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n0 ), 
    .FCI(\AMDemodulator1/Multiplier1/mco_29 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_21 ), 
    .F1(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_22 ), 
    .FCO(\AMDemodulator1/Multiplier1/mfco_5 ));
  AMDemodulator1_SLICE_1644 \AMDemodulator1/SLICE_1644 ( 
    .B0(\AMDemodulator1/MultResult2_0 ), .A0(\AMDemodulator1/MultResult1_0 ), 
    .DI0(\AMDemodulator1/ISquare_31_N_1895_0 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/ISquare_31_N_1895_0 ), .Q0(\AMDemodulator1/ISquare_0 ));
  AMDemodulator1_SLICE_1645 \AMDemodulator1/SLICE_1645 ( .M1(CIC1_outSin_1), 
    .M0(CIC1_outSin_0), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataB_0 ), .Q1(\AMDemodulator1/MultDataB_1 ));
  AMDemodulator1_SLICE_1646 \AMDemodulator1/SLICE_1646 ( .M1(CIC1_outSin_3), 
    .M0(CIC1_outSin_2), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataB_2 ), .Q1(\AMDemodulator1/MultDataB_3 ));
  AMDemodulator1_SLICE_1647 \AMDemodulator1/SLICE_1647 ( .M1(CIC1_outSin_5), 
    .M0(CIC1_outSin_4), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataB_4 ), .Q1(\AMDemodulator1/MultDataB_5 ));
  AMDemodulator1_SLICE_1648 \AMDemodulator1/SLICE_1648 ( .M1(MYLED_c_1), 
    .M0(MYLED_c_0), .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/MultDataB_6 ), 
    .Q1(\AMDemodulator1/MultDataB_7 ));
  AMDemodulator1_SLICE_1649 \AMDemodulator1/SLICE_1649 ( .M1(MYLED_c_3), 
    .M0(MYLED_c_2), .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/MultDataB_8 ), 
    .Q1(\AMDemodulator1/MultDataB_9 ));
  AMDemodulator1_SLICE_1650 \AMDemodulator1/SLICE_1650 ( .M1(MYLED_c_5), 
    .M0(MYLED_c_4), .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/MultDataB_10 ), 
    .Q1(\AMDemodulator1/MultDataB_11 ));
  AMDemodulator1_SLICE_1651 \AMDemodulator1/SLICE_1651 ( .M1(CIC1_outCos_1), 
    .M0(CIC1_outCos_0), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_0 ), .Q1(\AMDemodulator1/MultDataC_1 ));
  AMDemodulator1_SLICE_1652 \AMDemodulator1/SLICE_1652 ( .M1(CIC1_outCos_3), 
    .M0(CIC1_outCos_2), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_2 ), .Q1(\AMDemodulator1/MultDataC_3 ));
  AMDemodulator1_SLICE_1653 \AMDemodulator1/SLICE_1653 ( .M1(CIC1_outCos_5), 
    .M0(CIC1_outCos_4), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_4 ), .Q1(\AMDemodulator1/MultDataC_5 ));
  AMDemodulator1_SLICE_1654 \AMDemodulator1/SLICE_1654 ( .M1(CIC1_outCos_7), 
    .M0(CIC1_outCos_6), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_6 ), .Q1(\AMDemodulator1/MultDataC_7 ));
  AMDemodulator1_SLICE_1655 \AMDemodulator1/SLICE_1655 ( .M1(CIC1_outCos_9), 
    .M0(CIC1_outCos_8), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_8 ), .Q1(\AMDemodulator1/MultDataC_9 ));
  AMDemodulator1_SLICE_1656 \AMDemodulator1/SLICE_1656 ( .M1(CIC1_outCos_11), 
    .M0(CIC1_outCos_10), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultDataC_10 ), .Q1(\AMDemodulator1/MultDataC_11 ));
  AMDemodulator1_Multiplier1_SLICE_1657 
    \AMDemodulator1/Multiplier1/SLICE_1657 ( 
    .M1(\AMDemodulator1/Multiplier1/rego_o_1 ), 
    .M0(\AMDemodulator1/Multiplier1/rego_o_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult1_0 ), .Q1(\AMDemodulator1/MultResult1_1 ));
  AMDemodulator1_Multiplier1_SLICE_1658 
    \AMDemodulator1/Multiplier1/SLICE_1658 ( 
    .M1(\AMDemodulator1/Multiplier1/rego_o_3 ), 
    .M0(\AMDemodulator1/Multiplier1/rego_o_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult1_2 ), .Q1(\AMDemodulator1/MultResult1_3 ));
  AMDemodulator1_Multiplier2_SLICE_1659 
    \AMDemodulator1/Multiplier2/SLICE_1659 ( 
    .M1(\AMDemodulator1/Multiplier2/rego_o_1 ), 
    .M0(\AMDemodulator1/Multiplier2/rego_o_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult2_0 ), .Q1(\AMDemodulator1/MultResult2_1 ));
  AMDemodulator1_Multiplier2_SLICE_1660 
    \AMDemodulator1/Multiplier2/SLICE_1660 ( 
    .M1(\AMDemodulator1/Multiplier2/rego_o_3 ), 
    .M0(\AMDemodulator1/Multiplier2/rego_o_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/MultResult2_2 ), .Q1(\AMDemodulator1/MultResult2_3 ));
  AMDemodulator1_Multiplier1_SLICE_1661 
    \AMDemodulator1/Multiplier1/SLICE_1661 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_4 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_2_4 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_2_4 ));
  AMDemodulator1_Multiplier1_SLICE_1662 
    \AMDemodulator1/Multiplier1/SLICE_1662 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_8 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_4_8 ), 
    .Q0(\AMDemodulator1/Multiplier1/f_Multiplier_0_pp_4_8 ));
  AMDemodulator1_Multiplier1_SLICE_1663 
    \AMDemodulator1/Multiplier1/SLICE_1663 ( .M1(\AMDemodulator1/MultDataB_2 ), 
    .M0(\AMDemodulator1/MultDataB_1 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_2 ));
  AMDemodulator1_Multiplier1_SLICE_1664 
    \AMDemodulator1/Multiplier1/SLICE_1664 ( .M1(\AMDemodulator1/MultDataB_4 ), 
    .M0(\AMDemodulator1/MultDataB_3 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_4 ));
  AMDemodulator1_Multiplier1_SLICE_1665 
    \AMDemodulator1/Multiplier1/SLICE_1665 ( .M1(\AMDemodulator1/MultDataB_6 ), 
    .M0(\AMDemodulator1/MultDataB_5 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_6 ));
  AMDemodulator1_Multiplier1_SLICE_1666 
    \AMDemodulator1/Multiplier1/SLICE_1666 ( .M1(\AMDemodulator1/MultDataB_8 ), 
    .M0(\AMDemodulator1/MultDataB_7 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_8 ));
  AMDemodulator1_Multiplier1_SLICE_1667 
    \AMDemodulator1/Multiplier1/SLICE_1667 ( 
    .M1(\AMDemodulator1/MultDataB_10 ), .M0(\AMDemodulator1/MultDataB_9 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .Q1(\AMDemodulator1/Multiplier1/rega_a_10 ));
  AMDemodulator1_Multiplier1_SLICE_1669 
    \AMDemodulator1/Multiplier1/SLICE_1669 ( .M1(\AMDemodulator1/MultDataB_1 ), 
    .M0(\AMDemodulator1/MultDataB_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_1 ));
  AMDemodulator1_Multiplier1_SLICE_1670 
    \AMDemodulator1/Multiplier1/SLICE_1670 ( .M1(\AMDemodulator1/MultDataB_3 ), 
    .M0(\AMDemodulator1/MultDataB_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_3 ));
  AMDemodulator1_Multiplier1_SLICE_1671 
    \AMDemodulator1/Multiplier1/SLICE_1671 ( .M1(\AMDemodulator1/MultDataB_5 ), 
    .M0(\AMDemodulator1/MultDataB_4 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_5 ));
  AMDemodulator1_Multiplier1_SLICE_1672 
    \AMDemodulator1/Multiplier1/SLICE_1672 ( .M1(\AMDemodulator1/MultDataB_7 ), 
    .M0(\AMDemodulator1/MultDataB_6 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_7 ));
  AMDemodulator1_Multiplier1_SLICE_1673 
    \AMDemodulator1/Multiplier1/SLICE_1673 ( .M1(\AMDemodulator1/MultDataB_9 ), 
    .M0(\AMDemodulator1/MultDataB_8 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_9 ));
  AMDemodulator1_Multiplier1_SLICE_1674 
    \AMDemodulator1/Multiplier1/SLICE_1674 ( 
    .M1(\AMDemodulator1/MultDataB_11 ), .M0(\AMDemodulator1/MultDataB_10 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .Q1(\AMDemodulator1/Multiplier1/regb_b_11 ));
  AMDemodulator1_Multiplier1_SLICE_1675 
    \AMDemodulator1/Multiplier1/SLICE_1675 ( 
    .M0(\AMDemodulator1/Multiplier1/regb_b_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier1/rego_o_0 ));
  AMDemodulator1_Multiplier2_SLICE_1676 
    \AMDemodulator1/Multiplier2/SLICE_1676 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_4 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_2_4 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_2_4 ));
  AMDemodulator1_Multiplier2_SLICE_1677 
    \AMDemodulator1/Multiplier2/SLICE_1677 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .DI0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_8 ), 
    .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_4_8 ), 
    .Q0(\AMDemodulator1/Multiplier2/f_Multiplier_0_pp_4_8 ));
  AMDemodulator1_Multiplier2_SLICE_1678 
    \AMDemodulator1/Multiplier2/SLICE_1678 ( .M1(\AMDemodulator1/MultDataC_2 ), 
    .M0(\AMDemodulator1/MultDataC_1 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_2 ));
  AMDemodulator1_Multiplier2_SLICE_1679 
    \AMDemodulator1/Multiplier2/SLICE_1679 ( .M1(\AMDemodulator1/MultDataC_4 ), 
    .M0(\AMDemodulator1/MultDataC_3 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_4 ));
  AMDemodulator1_Multiplier2_SLICE_1680 
    \AMDemodulator1/Multiplier2/SLICE_1680 ( .M1(\AMDemodulator1/MultDataC_6 ), 
    .M0(\AMDemodulator1/MultDataC_5 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_6 ));
  AMDemodulator1_Multiplier2_SLICE_1681 
    \AMDemodulator1/Multiplier2/SLICE_1681 ( .M1(\AMDemodulator1/MultDataC_8 ), 
    .M0(\AMDemodulator1/MultDataC_7 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_8 ));
  AMDemodulator1_Multiplier2_SLICE_1682 
    \AMDemodulator1/Multiplier2/SLICE_1682 ( 
    .M1(\AMDemodulator1/MultDataC_10 ), .M0(\AMDemodulator1/MultDataC_9 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .Q1(\AMDemodulator1/Multiplier2/rega_a_10 ));
  AMDemodulator1_Multiplier2_SLICE_1684 
    \AMDemodulator1/Multiplier2/SLICE_1684 ( .M1(\AMDemodulator1/MultDataC_1 ), 
    .M0(\AMDemodulator1/MultDataC_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_1 ));
  AMDemodulator1_Multiplier2_SLICE_1685 
    \AMDemodulator1/Multiplier2/SLICE_1685 ( .M1(\AMDemodulator1/MultDataC_3 ), 
    .M0(\AMDemodulator1/MultDataC_2 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_3 ));
  AMDemodulator1_Multiplier2_SLICE_1686 
    \AMDemodulator1/Multiplier2/SLICE_1686 ( .M1(\AMDemodulator1/MultDataC_5 ), 
    .M0(\AMDemodulator1/MultDataC_4 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_5 ));
  AMDemodulator1_Multiplier2_SLICE_1687 
    \AMDemodulator1/Multiplier2/SLICE_1687 ( .M1(\AMDemodulator1/MultDataC_7 ), 
    .M0(\AMDemodulator1/MultDataC_6 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_7 ));
  AMDemodulator1_Multiplier2_SLICE_1688 
    \AMDemodulator1/Multiplier2/SLICE_1688 ( .M1(\AMDemodulator1/MultDataC_9 ), 
    .M0(\AMDemodulator1/MultDataC_8 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_9 ));
  AMDemodulator1_Multiplier2_SLICE_1689 
    \AMDemodulator1/Multiplier2/SLICE_1689 ( 
    .M1(\AMDemodulator1/MultDataC_11 ), .M0(\AMDemodulator1/MultDataC_10 ), 
    .CLK(CIC1_out_clkSin), .Q0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .Q1(\AMDemodulator1/Multiplier2/regb_b_11 ));
  AMDemodulator1_Multiplier2_SLICE_1690 
    \AMDemodulator1/Multiplier2/SLICE_1690 ( 
    .M0(\AMDemodulator1/Multiplier2/regb_b_0 ), .CLK(CIC1_out_clkSin), 
    .Q0(\AMDemodulator1/Multiplier2/rego_o_0 ));
  AMDemodulator1_SLICE_1691 \AMDemodulator1/SLICE_1691 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1892_17 ), 
    .C0(\AMDemodulator1/d_out_d_11_N_1892_17 ), 
    .B0(\AMDemodulator1/d_out_d_11_N_2353_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_2335_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1891 ), 
    .DI0(\AMDemodulator1/d_out_d_11_N_1894_17 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11_N_1894_17 ), 
    .Q0(\AMDemodulator1/d_out_d_0 ), .F1(\AMDemodulator1/d_out_d_11__N_1891 ), 
    .Q1(\AMDemodulator1/d_out_d_1 ));
  AMDemodulator1_SLICE_1692 \AMDemodulator1/SLICE_1692 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1888_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1890_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1887 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1889 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1889 ), .Q0(\AMDemodulator1/d_out_d_2 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1887 ), .Q1(\AMDemodulator1/d_out_d_3 ));
  AMDemodulator1_SLICE_1693 \AMDemodulator1/SLICE_1693 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1884_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1886_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1883 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1885 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1885 ), .Q0(\AMDemodulator1/d_out_d_4 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1883 ), .Q1(\AMDemodulator1/d_out_d_5 ));
  AMDemodulator1_SLICE_1694 \AMDemodulator1/SLICE_1694 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1880_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1882_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1879 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1881 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1881 ), .Q0(\AMDemodulator1/d_out_d_6 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1879 ), .Q1(\AMDemodulator1/d_out_d_7 ));
  AMDemodulator1_SLICE_1695 \AMDemodulator1/SLICE_1695 ( 
    .A1(\AMDemodulator1/d_out_d_11_N_1876_17 ), 
    .A0(\AMDemodulator1/d_out_d_11_N_1878_17 ), 
    .DI1(\AMDemodulator1/d_out_d_11__N_1875 ), 
    .DI0(\AMDemodulator1/d_out_d_11__N_1877 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/d_out_d_11__N_1877 ), .Q0(\AMDemodulator1/d_out_d_8 ), 
    .F1(\AMDemodulator1/d_out_d_11__N_1875 ), .Q1(\AMDemodulator1/d_out_d_9 ));
  CIC1Cos_SLICE_1696 \CIC1Cos/SLICE_1696 ( .B1(\CIC1Cos/count_7 ), 
    .A1(\CIC1Cos/count_8 ), .B0(\CIC1Cos/n31 ), .A0(\CIC1Cos/n391 ), 
    .DI0(\CIC1Cos/count_15_N_1442_0 ), .LSR(\CIC1Cos/osc_clk_enable_744 ), 
    .CLK(osc_clk), .F0(\CIC1Cos/count_15_N_1442_0 ), .Q0(\CIC1Cos/count_0 ), 
    .F1(\CIC1Cos/n15 ));
  CIC1Cos_SLICE_1697 \CIC1Cos/SLICE_1697 ( .D1(\CIC1Cos/n16 ), 
    .C1(\CIC1Cos/n15 ), .B1(\CIC1Cos/n19 ), .A1(\CIC1Cos/n21 ), 
    .B0(\CIC1Cos/n31 ), .A0(\CIC1Cos/n380 ), 
    .DI0(\CIC1Cos/count_15_N_1442_11 ), .LSR(\CIC1Cos/count_15__N_1458 ), 
    .CLK(osc_clk), .F0(\CIC1Cos/count_15_N_1442_11 ), .Q0(\CIC1Cos/count_11 ), 
    .F1(\CIC1Cos/n31 ));
  CIC1Cos_SLICE_1698 \CIC1Cos/SLICE_1698 ( .C0(\CIC1Cos/n6708 ), 
    .B0(\CIC1Cos/n6762 ), .A0(\CIC1Cos/n6724 ), 
    .DI0(\CIC1Cos/d10_71_N_1747_57 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), 
    .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_57 ), .Q0(\CIC1Cos/d10_57 ));
  CIC1Cos_SLICE_1699 \CIC1Cos/SLICE_1699 ( .C0(\CIC1Cos/n6708 ), 
    .B0(\CIC1Cos/n6761 ), .A0(\CIC1Cos/n6723 ), 
    .DI0(\CIC1Cos/d10_71_N_1747_58 ), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d10_71_N_1747_58 ), .Q0(\CIC1Cos/d10_58 ));
  CIC1Cos_SLICE_1700 \CIC1Cos/SLICE_1700 ( .B0(\CIC1Cos/d1_0 ), 
    .A0(MixerOutCos_0), .DI0(\CIC1Cos/d1_71_N_418_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d1_71_N_418_0 ), .Q0(\CIC1Cos/d1_0 ));
  CIC1Cos_SLICE_1701 \CIC1Cos/SLICE_1701 ( .B0(\CIC1Cos/d2_0 ), 
    .A0(\CIC1Cos/d1_0 ), .DI0(\CIC1Cos/d2_71_N_490_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d2_71_N_490_0 ), .Q0(\CIC1Cos/d2_0 ));
  CIC1Cos_SLICE_1702 \CIC1Cos/SLICE_1702 ( .B0(\CIC1Cos/d3_0 ), 
    .A0(\CIC1Cos/d2_0 ), .DI0(\CIC1Cos/d3_71_N_562_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d3_71_N_562_0 ), .Q0(\CIC1Cos/d3_0 ));
  CIC1Cos_SLICE_1703 \CIC1Cos/SLICE_1703 ( .B0(\CIC1Cos/d4_0 ), 
    .A0(\CIC1Cos/d3_0 ), .DI0(\CIC1Cos/d4_71_N_634_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d4_71_N_634_0 ), .Q0(\CIC1Cos/d4_0 ));
  CIC1Cos_SLICE_1704 \CIC1Cos/SLICE_1704 ( .B0(\CIC1Cos/d5_0 ), 
    .A0(\CIC1Cos/d4_0 ), .DI0(\CIC1Cos/d5_71_N_706_0 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d5_71_N_706_0 ), .Q0(\CIC1Cos/d5_0 ));
  CIC1Cos_SLICE_1705 \CIC1Cos/SLICE_1705 ( .M0(\CIC1Cos/d6_71_N_1459_20 ), 
    .CE(\CIC1Cos/osc_clk_enable_884 ), .CLK(osc_clk), .Q0(\CIC1Cos/d6_20 ));
  CIC1Cos_SLICE_1706 \CIC1Cos/SLICE_1706 ( .M0(\CIC1Cos/d7_71_N_1531_28 ), 
    .CE(\CIC1Cos/osc_clk_enable_1034 ), .CLK(osc_clk), .Q0(\CIC1Cos/d7_28 ));
  CIC1Cos_SLICE_1707 \CIC1Cos/SLICE_1707 ( .M0(\CIC1Cos/d6_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d6_0 ));
  CIC1Cos_SLICE_1708 \CIC1Cos/SLICE_1708 ( .M1(\CIC1Cos/d6_2 ), 
    .M0(\CIC1Cos/d6_1 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_1 ), .Q1(\CIC1Cos/d_d6_2 ));
  CIC1Cos_SLICE_1709 \CIC1Cos/SLICE_1709 ( .M1(\CIC1Cos/d6_4 ), 
    .M0(\CIC1Cos/d6_3 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_3 ), .Q1(\CIC1Cos/d_d6_4 ));
  CIC1Cos_SLICE_1710 \CIC1Cos/SLICE_1710 ( .M1(\CIC1Cos/d6_6 ), 
    .M0(\CIC1Cos/d6_5 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_5 ), .Q1(\CIC1Cos/d_d6_6 ));
  CIC1Cos_SLICE_1711 \CIC1Cos/SLICE_1711 ( .M1(\CIC1Cos/d6_8 ), 
    .M0(\CIC1Cos/d6_7 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_7 ), .Q1(\CIC1Cos/d_d6_8 ));
  CIC1Cos_SLICE_1712 \CIC1Cos/SLICE_1712 ( .M1(\CIC1Cos/d6_10 ), 
    .M0(\CIC1Cos/d6_9 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_9 ), .Q1(\CIC1Cos/d_d6_10 ));
  CIC1Cos_SLICE_1713 \CIC1Cos/SLICE_1713 ( .M1(\CIC1Cos/d6_12 ), 
    .M0(\CIC1Cos/d6_11 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_11 ), .Q1(\CIC1Cos/d_d6_12 ));
  CIC1Cos_SLICE_1714 \CIC1Cos/SLICE_1714 ( .M1(\CIC1Cos/d6_14 ), 
    .M0(\CIC1Cos/d6_13 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_13 ), .Q1(\CIC1Cos/d_d6_14 ));
  CIC1Cos_SLICE_1715 \CIC1Cos/SLICE_1715 ( .M1(\CIC1Cos/d6_16 ), 
    .M0(\CIC1Cos/d6_15 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_15 ), .Q1(\CIC1Cos/d_d6_16 ));
  CIC1Cos_SLICE_1716 \CIC1Cos/SLICE_1716 ( .M1(\CIC1Cos/d6_18 ), 
    .M0(\CIC1Cos/d6_17 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_17 ), .Q1(\CIC1Cos/d_d6_18 ));
  CIC1Cos_SLICE_1717 \CIC1Cos/SLICE_1717 ( .M1(\CIC1Cos/d6_20 ), 
    .M0(\CIC1Cos/d6_19 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_19 ), .Q1(\CIC1Cos/d_d6_20 ));
  CIC1Cos_SLICE_1718 \CIC1Cos/SLICE_1718 ( .M1(\CIC1Cos/d6_22 ), 
    .M0(\CIC1Cos/d6_21 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_21 ), .Q1(\CIC1Cos/d_d6_22 ));
  CIC1Cos_SLICE_1719 \CIC1Cos/SLICE_1719 ( .M1(\CIC1Cos/d6_24 ), 
    .M0(\CIC1Cos/d6_23 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_23 ), .Q1(\CIC1Cos/d_d6_24 ));
  CIC1Cos_SLICE_1720 \CIC1Cos/SLICE_1720 ( .M1(\CIC1Cos/d6_26 ), 
    .M0(\CIC1Cos/d6_25 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_25 ), .Q1(\CIC1Cos/d_d6_26 ));
  CIC1Cos_SLICE_1721 \CIC1Cos/SLICE_1721 ( .M1(\CIC1Cos/d6_28 ), 
    .M0(\CIC1Cos/d6_27 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_27 ), .Q1(\CIC1Cos/d_d6_28 ));
  CIC1Cos_SLICE_1722 \CIC1Cos/SLICE_1722 ( .M1(\CIC1Cos/d6_30 ), 
    .M0(\CIC1Cos/d6_29 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_29 ), .Q1(\CIC1Cos/d_d6_30 ));
  CIC1Cos_SLICE_1723 \CIC1Cos/SLICE_1723 ( .M1(\CIC1Cos/d6_32 ), 
    .M0(\CIC1Cos/d6_31 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_31 ), .Q1(\CIC1Cos/d_d6_32 ));
  CIC1Cos_SLICE_1724 \CIC1Cos/SLICE_1724 ( .M1(\CIC1Cos/d6_34 ), 
    .M0(\CIC1Cos/d6_33 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_33 ), .Q1(\CIC1Cos/d_d6_34 ));
  CIC1Cos_SLICE_1725 \CIC1Cos/SLICE_1725 ( .M1(\CIC1Cos/d6_36 ), 
    .M0(\CIC1Cos/d6_35 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_35 ), .Q1(\CIC1Cos/d_d6_36 ));
  CIC1Cos_SLICE_1726 \CIC1Cos/SLICE_1726 ( .M1(\CIC1Cos/d6_38 ), 
    .M0(\CIC1Cos/d6_37 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_37 ), .Q1(\CIC1Cos/d_d6_38 ));
  CIC1Cos_SLICE_1727 \CIC1Cos/SLICE_1727 ( .M1(\CIC1Cos/d6_40 ), 
    .M0(\CIC1Cos/d6_39 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_39 ), .Q1(\CIC1Cos/d_d6_40 ));
  CIC1Cos_SLICE_1728 \CIC1Cos/SLICE_1728 ( .M1(\CIC1Cos/d6_42 ), 
    .M0(\CIC1Cos/d6_41 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_41 ), .Q1(\CIC1Cos/d_d6_42 ));
  CIC1Cos_SLICE_1729 \CIC1Cos/SLICE_1729 ( .M1(\CIC1Cos/d6_44 ), 
    .M0(\CIC1Cos/d6_43 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_43 ), .Q1(\CIC1Cos/d_d6_44 ));
  CIC1Cos_SLICE_1730 \CIC1Cos/SLICE_1730 ( .M1(\CIC1Cos/d6_46 ), 
    .M0(\CIC1Cos/d6_45 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_45 ), .Q1(\CIC1Cos/d_d6_46 ));
  CIC1Cos_SLICE_1731 \CIC1Cos/SLICE_1731 ( .M1(\CIC1Cos/d6_48 ), 
    .M0(\CIC1Cos/d6_47 ), .CE(\CIC1Cos/osc_clk_enable_934 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_47 ), .Q1(\CIC1Cos/d_d6_48 ));
  CIC1Cos_SLICE_1732 \CIC1Cos/SLICE_1732 ( .M1(\CIC1Cos/d6_50 ), 
    .M0(\CIC1Cos/d6_49 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_49 ), .Q1(\CIC1Cos/d_d6_50 ));
  CIC1Cos_SLICE_1733 \CIC1Cos/SLICE_1733 ( .M1(\CIC1Cos/d6_52 ), 
    .M0(\CIC1Cos/d6_51 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_51 ), .Q1(\CIC1Cos/d_d6_52 ));
  CIC1Cos_SLICE_1734 \CIC1Cos/SLICE_1734 ( .M1(\CIC1Cos/d6_54 ), 
    .M0(\CIC1Cos/d6_53 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_53 ), .Q1(\CIC1Cos/d_d6_54 ));
  CIC1Cos_SLICE_1735 \CIC1Cos/SLICE_1735 ( .M1(\CIC1Cos/d6_56 ), 
    .M0(\CIC1Cos/d6_55 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_55 ), .Q1(\CIC1Cos/d_d6_56 ));
  CIC1Cos_SLICE_1736 \CIC1Cos/SLICE_1736 ( .M1(\CIC1Cos/d6_58 ), 
    .M0(\CIC1Cos/d6_57 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_57 ), .Q1(\CIC1Cos/d_d6_58 ));
  CIC1Cos_SLICE_1737 \CIC1Cos/SLICE_1737 ( .M1(\CIC1Cos/d6_60 ), 
    .M0(\CIC1Cos/d6_59 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_59 ), .Q1(\CIC1Cos/d_d6_60 ));
  CIC1Cos_SLICE_1738 \CIC1Cos/SLICE_1738 ( .M1(\CIC1Cos/d6_62 ), 
    .M0(\CIC1Cos/d6_61 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_61 ), .Q1(\CIC1Cos/d_d6_62 ));
  CIC1Cos_SLICE_1739 \CIC1Cos/SLICE_1739 ( .M1(\CIC1Cos/d6_64 ), 
    .M0(\CIC1Cos/d6_63 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_63 ), .Q1(\CIC1Cos/d_d6_64 ));
  CIC1Cos_SLICE_1740 \CIC1Cos/SLICE_1740 ( .M1(\CIC1Cos/d6_66 ), 
    .M0(\CIC1Cos/d6_65 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_65 ), .Q1(\CIC1Cos/d_d6_66 ));
  CIC1Cos_SLICE_1741 \CIC1Cos/SLICE_1741 ( .M1(\CIC1Cos/d6_68 ), 
    .M0(\CIC1Cos/d6_67 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_67 ), .Q1(\CIC1Cos/d_d6_68 ));
  CIC1Cos_SLICE_1742 \CIC1Cos/SLICE_1742 ( .M1(\CIC1Cos/d6_70 ), 
    .M0(\CIC1Cos/d6_69 ), .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d6_69 ), .Q1(\CIC1Cos/d_d6_70 ));
  CIC1Cos_SLICE_1743 \CIC1Cos/SLICE_1743 ( .M0(\CIC1Cos/d6_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_984 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d6_71 ));
  CIC1Cos_SLICE_1744 \CIC1Cos/SLICE_1744 ( .M0(\CIC1Cos/d7_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d7_0 ));
  CIC1Cos_SLICE_1745 \CIC1Cos/SLICE_1745 ( .M1(\CIC1Cos/d7_2 ), 
    .M0(\CIC1Cos/d7_1 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_1 ), .Q1(\CIC1Cos/d_d7_2 ));
  CIC1Cos_SLICE_1746 \CIC1Cos/SLICE_1746 ( .M1(\CIC1Cos/d7_4 ), 
    .M0(\CIC1Cos/d7_3 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_3 ), .Q1(\CIC1Cos/d_d7_4 ));
  CIC1Cos_SLICE_1747 \CIC1Cos/SLICE_1747 ( .M1(\CIC1Cos/d7_6 ), 
    .M0(\CIC1Cos/d7_5 ), .CE(\CIC1Cos/osc_clk_enable_1034 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_5 ), .Q1(\CIC1Cos/d_d7_6 ));
  CIC1Cos_SLICE_1748 \CIC1Cos/SLICE_1748 ( .M1(\CIC1Cos/d7_8 ), 
    .M0(\CIC1Cos/d7_7 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_7 ), .Q1(\CIC1Cos/d_d7_8 ));
  CIC1Cos_SLICE_1749 \CIC1Cos/SLICE_1749 ( .M1(\CIC1Cos/d7_10 ), 
    .M0(\CIC1Cos/d7_9 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_9 ), .Q1(\CIC1Cos/d_d7_10 ));
  CIC1Cos_SLICE_1750 \CIC1Cos/SLICE_1750 ( .M1(\CIC1Cos/d7_12 ), 
    .M0(\CIC1Cos/d7_11 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_11 ), .Q1(\CIC1Cos/d_d7_12 ));
  CIC1Cos_SLICE_1751 \CIC1Cos/SLICE_1751 ( .M1(\CIC1Cos/d7_14 ), 
    .M0(\CIC1Cos/d7_13 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_13 ), .Q1(\CIC1Cos/d_d7_14 ));
  CIC1Cos_SLICE_1752 \CIC1Cos/SLICE_1752 ( .M1(\CIC1Cos/d7_16 ), 
    .M0(\CIC1Cos/d7_15 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_15 ), .Q1(\CIC1Cos/d_d7_16 ));
  CIC1Cos_SLICE_1753 \CIC1Cos/SLICE_1753 ( .M1(\CIC1Cos/d7_18 ), 
    .M0(\CIC1Cos/d7_17 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_17 ), .Q1(\CIC1Cos/d_d7_18 ));
  CIC1Cos_SLICE_1754 \CIC1Cos/SLICE_1754 ( .M1(\CIC1Cos/d7_20 ), 
    .M0(\CIC1Cos/d7_19 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_19 ), .Q1(\CIC1Cos/d_d7_20 ));
  CIC1Cos_SLICE_1755 \CIC1Cos/SLICE_1755 ( .M1(\CIC1Cos/d7_22 ), 
    .M0(\CIC1Cos/d7_21 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_21 ), .Q1(\CIC1Cos/d_d7_22 ));
  CIC1Cos_SLICE_1756 \CIC1Cos/SLICE_1756 ( .M1(\CIC1Cos/d7_24 ), 
    .M0(\CIC1Cos/d7_23 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_23 ), .Q1(\CIC1Cos/d_d7_24 ));
  CIC1Cos_SLICE_1757 \CIC1Cos/SLICE_1757 ( .M1(\CIC1Cos/d7_26 ), 
    .M0(\CIC1Cos/d7_25 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_25 ), .Q1(\CIC1Cos/d_d7_26 ));
  CIC1Cos_SLICE_1758 \CIC1Cos/SLICE_1758 ( .M1(\CIC1Cos/d7_28 ), 
    .M0(\CIC1Cos/d7_27 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_27 ), .Q1(\CIC1Cos/d_d7_28 ));
  CIC1Cos_SLICE_1759 \CIC1Cos/SLICE_1759 ( .M1(\CIC1Cos/d7_30 ), 
    .M0(\CIC1Cos/d7_29 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_29 ), .Q1(\CIC1Cos/d_d7_30 ));
  CIC1Cos_SLICE_1760 \CIC1Cos/SLICE_1760 ( .M1(\CIC1Cos/d7_32 ), 
    .M0(\CIC1Cos/d7_31 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_31 ), .Q1(\CIC1Cos/d_d7_32 ));
  CIC1Cos_SLICE_1761 \CIC1Cos/SLICE_1761 ( .M1(\CIC1Cos/d7_34 ), 
    .M0(\CIC1Cos/d7_33 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_33 ), .Q1(\CIC1Cos/d_d7_34 ));
  CIC1Cos_SLICE_1762 \CIC1Cos/SLICE_1762 ( .M1(\CIC1Cos/d7_36 ), 
    .M0(\CIC1Cos/d7_35 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_35 ), .Q1(\CIC1Cos/d_d7_36 ));
  CIC1Cos_SLICE_1763 \CIC1Cos/SLICE_1763 ( .M1(\CIC1Cos/d7_38 ), 
    .M0(\CIC1Cos/d7_37 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_37 ), .Q1(\CIC1Cos/d_d7_38 ));
  CIC1Cos_SLICE_1764 \CIC1Cos/SLICE_1764 ( .M1(\CIC1Cos/d7_40 ), 
    .M0(\CIC1Cos/d7_39 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_39 ), .Q1(\CIC1Cos/d_d7_40 ));
  CIC1Cos_SLICE_1765 \CIC1Cos/SLICE_1765 ( .M1(\CIC1Cos/d7_42 ), 
    .M0(\CIC1Cos/d7_41 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_41 ), .Q1(\CIC1Cos/d_d7_42 ));
  CIC1Cos_SLICE_1766 \CIC1Cos/SLICE_1766 ( .M1(\CIC1Cos/d7_44 ), 
    .M0(\CIC1Cos/d7_43 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_43 ), .Q1(\CIC1Cos/d_d7_44 ));
  CIC1Cos_SLICE_1767 \CIC1Cos/SLICE_1767 ( .M1(\CIC1Cos/d7_46 ), 
    .M0(\CIC1Cos/d7_45 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_45 ), .Q1(\CIC1Cos/d_d7_46 ));
  CIC1Cos_SLICE_1768 \CIC1Cos/SLICE_1768 ( .M1(\CIC1Cos/d7_48 ), 
    .M0(\CIC1Cos/d7_47 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_47 ), .Q1(\CIC1Cos/d_d7_48 ));
  CIC1Cos_SLICE_1769 \CIC1Cos/SLICE_1769 ( .M1(\CIC1Cos/d7_50 ), 
    .M0(\CIC1Cos/d7_49 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_49 ), .Q1(\CIC1Cos/d_d7_50 ));
  CIC1Cos_SLICE_1770 \CIC1Cos/SLICE_1770 ( .M1(\CIC1Cos/d7_52 ), 
    .M0(\CIC1Cos/d7_51 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_51 ), .Q1(\CIC1Cos/d_d7_52 ));
  CIC1Cos_SLICE_1771 \CIC1Cos/SLICE_1771 ( .M1(\CIC1Cos/d7_54 ), 
    .M0(\CIC1Cos/d7_53 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_53 ), .Q1(\CIC1Cos/d_d7_54 ));
  CIC1Cos_SLICE_1772 \CIC1Cos/SLICE_1772 ( .M1(\CIC1Cos/d7_56 ), 
    .M0(\CIC1Cos/d7_55 ), .CE(\CIC1Cos/osc_clk_enable_1084 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_55 ), .Q1(\CIC1Cos/d_d7_56 ));
  CIC1Cos_SLICE_1773 \CIC1Cos/SLICE_1773 ( .M1(\CIC1Cos/d7_58 ), 
    .M0(\CIC1Cos/d7_57 ), .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_57 ), .Q1(\CIC1Cos/d_d7_58 ));
  CIC1Cos_SLICE_1774 \CIC1Cos/SLICE_1774 ( .M1(\CIC1Cos/d7_60 ), 
    .M0(\CIC1Cos/d7_59 ), .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_59 ), .Q1(\CIC1Cos/d_d7_60 ));
  CIC1Cos_SLICE_1775 \CIC1Cos/SLICE_1775 ( .M1(\CIC1Cos/d7_62 ), 
    .M0(\CIC1Cos/d7_61 ), .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_61 ), .Q1(\CIC1Cos/d_d7_62 ));
  CIC1Cos_SLICE_1776 \CIC1Cos/SLICE_1776 ( .M1(\CIC1Cos/d7_64 ), 
    .M0(\CIC1Cos/d7_63 ), .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_63 ), .Q1(\CIC1Cos/d_d7_64 ));
  CIC1Cos_SLICE_1777 \CIC1Cos/SLICE_1777 ( .M1(\CIC1Cos/d7_66 ), 
    .M0(\CIC1Cos/d7_65 ), .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_65 ), .Q1(\CIC1Cos/d_d7_66 ));
  CIC1Cos_SLICE_1778 \CIC1Cos/SLICE_1778 ( .M1(\CIC1Cos/d7_68 ), 
    .M0(\CIC1Cos/d7_67 ), .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_67 ), .Q1(\CIC1Cos/d_d7_68 ));
  CIC1Cos_SLICE_1779 \CIC1Cos/SLICE_1779 ( .M1(\CIC1Cos/d7_70 ), 
    .M0(\CIC1Cos/d7_69 ), .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d7_69 ), .Q1(\CIC1Cos/d_d7_70 ));
  CIC1Cos_SLICE_1780 \CIC1Cos/SLICE_1780 ( .M0(\CIC1Cos/d7_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_1134 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d7_71 ));
  CIC1Cos_SLICE_1781 \CIC1Cos/SLICE_1781 ( .M0(\CIC1Cos/d8_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d8_0 ));
  CIC1Cos_SLICE_1782 \CIC1Cos/SLICE_1782 ( .M1(\CIC1Cos/d8_2 ), 
    .M0(\CIC1Cos/d8_1 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_1 ), .Q1(\CIC1Cos/d_d8_2 ));
  CIC1Cos_SLICE_1783 \CIC1Cos/SLICE_1783 ( .M1(\CIC1Cos/d8_4 ), 
    .M0(\CIC1Cos/d8_3 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_3 ), .Q1(\CIC1Cos/d_d8_4 ));
  CIC1Cos_SLICE_1784 \CIC1Cos/SLICE_1784 ( .M1(\CIC1Cos/d8_6 ), 
    .M0(\CIC1Cos/d8_5 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_5 ), .Q1(\CIC1Cos/d_d8_6 ));
  CIC1Cos_SLICE_1785 \CIC1Cos/SLICE_1785 ( .M1(\CIC1Cos/d8_8 ), 
    .M0(\CIC1Cos/d8_7 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_7 ), .Q1(\CIC1Cos/d_d8_8 ));
  CIC1Cos_SLICE_1786 \CIC1Cos/SLICE_1786 ( .M1(\CIC1Cos/d8_10 ), 
    .M0(\CIC1Cos/d8_9 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_9 ), .Q1(\CIC1Cos/d_d8_10 ));
  CIC1Cos_SLICE_1787 \CIC1Cos/SLICE_1787 ( .M1(\CIC1Cos/d8_12 ), 
    .M0(\CIC1Cos/d8_11 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_11 ), .Q1(\CIC1Cos/d_d8_12 ));
  CIC1Cos_SLICE_1788 \CIC1Cos/SLICE_1788 ( .M1(\CIC1Cos/d8_14 ), 
    .M0(\CIC1Cos/d8_13 ), .CE(\CIC1Cos/osc_clk_enable_1184 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_13 ), .Q1(\CIC1Cos/d_d8_14 ));
  CIC1Cos_SLICE_1789 \CIC1Cos/SLICE_1789 ( .M1(\CIC1Cos/d8_16 ), 
    .M0(\CIC1Cos/d8_15 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_15 ), .Q1(\CIC1Cos/d_d8_16 ));
  CIC1Cos_SLICE_1790 \CIC1Cos/SLICE_1790 ( .M1(\CIC1Cos/d8_18 ), 
    .M0(\CIC1Cos/d8_17 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_17 ), .Q1(\CIC1Cos/d_d8_18 ));
  CIC1Cos_SLICE_1791 \CIC1Cos/SLICE_1791 ( .M1(\CIC1Cos/d8_20 ), 
    .M0(\CIC1Cos/d8_19 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_19 ), .Q1(\CIC1Cos/d_d8_20 ));
  CIC1Cos_SLICE_1792 \CIC1Cos/SLICE_1792 ( .M1(\CIC1Cos/d8_22 ), 
    .M0(\CIC1Cos/d8_21 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_21 ), .Q1(\CIC1Cos/d_d8_22 ));
  CIC1Cos_SLICE_1793 \CIC1Cos/SLICE_1793 ( .M1(\CIC1Cos/d8_24 ), 
    .M0(\CIC1Cos/d8_23 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_23 ), .Q1(\CIC1Cos/d_d8_24 ));
  CIC1Cos_SLICE_1794 \CIC1Cos/SLICE_1794 ( .M1(\CIC1Cos/d8_26 ), 
    .M0(\CIC1Cos/d8_25 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_25 ), .Q1(\CIC1Cos/d_d8_26 ));
  CIC1Cos_SLICE_1795 \CIC1Cos/SLICE_1795 ( .M1(\CIC1Cos/d8_28 ), 
    .M0(\CIC1Cos/d8_27 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_27 ), .Q1(\CIC1Cos/d_d8_28 ));
  CIC1Cos_SLICE_1796 \CIC1Cos/SLICE_1796 ( .M1(\CIC1Cos/d8_30 ), 
    .M0(\CIC1Cos/d8_29 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_29 ), .Q1(\CIC1Cos/d_d8_30 ));
  CIC1Cos_SLICE_1797 \CIC1Cos/SLICE_1797 ( .M1(\CIC1Cos/d8_32 ), 
    .M0(\CIC1Cos/d8_31 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_31 ), .Q1(\CIC1Cos/d_d8_32 ));
  CIC1Cos_SLICE_1798 \CIC1Cos/SLICE_1798 ( .M1(\CIC1Cos/d8_34 ), 
    .M0(\CIC1Cos/d8_33 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_33 ), .Q1(\CIC1Cos/d_d8_34 ));
  CIC1Cos_SLICE_1799 \CIC1Cos/SLICE_1799 ( .M1(\CIC1Cos/d8_36 ), 
    .M0(\CIC1Cos/d8_35 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_35 ), .Q1(\CIC1Cos/d_d8_36 ));
  CIC1Cos_SLICE_1800 \CIC1Cos/SLICE_1800 ( .M1(\CIC1Cos/d8_38 ), 
    .M0(\CIC1Cos/d8_37 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_37 ), .Q1(\CIC1Cos/d_d8_38 ));
  CIC1Cos_SLICE_1801 \CIC1Cos/SLICE_1801 ( .M1(\CIC1Cos/d8_40 ), 
    .M0(\CIC1Cos/d8_39 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_39 ), .Q1(\CIC1Cos/d_d8_40 ));
  CIC1Cos_SLICE_1802 \CIC1Cos/SLICE_1802 ( .M1(\CIC1Cos/d8_42 ), 
    .M0(\CIC1Cos/d8_41 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_41 ), .Q1(\CIC1Cos/d_d8_42 ));
  CIC1Cos_SLICE_1803 \CIC1Cos/SLICE_1803 ( .M1(\CIC1Cos/d8_44 ), 
    .M0(\CIC1Cos/d8_43 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_43 ), .Q1(\CIC1Cos/d_d8_44 ));
  CIC1Cos_SLICE_1804 \CIC1Cos/SLICE_1804 ( .M1(\CIC1Cos/d8_46 ), 
    .M0(\CIC1Cos/d8_45 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_45 ), .Q1(\CIC1Cos/d_d8_46 ));
  CIC1Cos_SLICE_1805 \CIC1Cos/SLICE_1805 ( .M1(\CIC1Cos/d8_48 ), 
    .M0(\CIC1Cos/d8_47 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_47 ), .Q1(\CIC1Cos/d_d8_48 ));
  CIC1Cos_SLICE_1806 \CIC1Cos/SLICE_1806 ( .M1(\CIC1Cos/d8_50 ), 
    .M0(\CIC1Cos/d8_49 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_49 ), .Q1(\CIC1Cos/d_d8_50 ));
  CIC1Cos_SLICE_1807 \CIC1Cos/SLICE_1807 ( .M1(\CIC1Cos/d8_52 ), 
    .M0(\CIC1Cos/d8_51 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_51 ), .Q1(\CIC1Cos/d_d8_52 ));
  CIC1Cos_SLICE_1808 \CIC1Cos/SLICE_1808 ( .M1(\CIC1Cos/d8_54 ), 
    .M0(\CIC1Cos/d8_53 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_53 ), .Q1(\CIC1Cos/d_d8_54 ));
  CIC1Cos_SLICE_1809 \CIC1Cos/SLICE_1809 ( .M1(\CIC1Cos/d8_56 ), 
    .M0(\CIC1Cos/d8_55 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_55 ), .Q1(\CIC1Cos/d_d8_56 ));
  CIC1Cos_SLICE_1810 \CIC1Cos/SLICE_1810 ( .M1(\CIC1Cos/d8_58 ), 
    .M0(\CIC1Cos/d8_57 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_57 ), .Q1(\CIC1Cos/d_d8_58 ));
  CIC1Cos_SLICE_1811 \CIC1Cos/SLICE_1811 ( .M1(\CIC1Cos/d8_60 ), 
    .M0(\CIC1Cos/d8_59 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_59 ), .Q1(\CIC1Cos/d_d8_60 ));
  CIC1Cos_SLICE_1812 \CIC1Cos/SLICE_1812 ( .M1(\CIC1Cos/d8_62 ), 
    .M0(\CIC1Cos/d8_61 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_61 ), .Q1(\CIC1Cos/d_d8_62 ));
  CIC1Cos_SLICE_1813 \CIC1Cos/SLICE_1813 ( .M1(\CIC1Cos/d8_64 ), 
    .M0(\CIC1Cos/d8_63 ), .CE(\CIC1Cos/osc_clk_enable_1234 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_63 ), .Q1(\CIC1Cos/d_d8_64 ));
  CIC1Cos_SLICE_1814 \CIC1Cos/SLICE_1814 ( .M1(\CIC1Cos/d8_66 ), 
    .M0(\CIC1Cos/d8_65 ), .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_65 ), .Q1(\CIC1Cos/d_d8_66 ));
  CIC1Cos_SLICE_1815 \CIC1Cos/SLICE_1815 ( .M1(\CIC1Cos/d8_68 ), 
    .M0(\CIC1Cos/d8_67 ), .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_67 ), .Q1(\CIC1Cos/d_d8_68 ));
  CIC1Cos_SLICE_1816 \CIC1Cos/SLICE_1816 ( .M1(\CIC1Cos/d8_70 ), 
    .M0(\CIC1Cos/d8_69 ), .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d8_69 ), .Q1(\CIC1Cos/d_d8_70 ));
  CIC1Cos_SLICE_1817 \CIC1Cos/SLICE_1817 ( .M0(\CIC1Cos/d8_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_1284 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d8_71 ));
  CIC1Cos_SLICE_1818 \CIC1Cos/SLICE_1818 ( .M0(\CIC1Cos/d9_0 ), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d9_0 ));
  CIC1Cos_SLICE_1819 \CIC1Cos/SLICE_1819 ( .M1(\CIC1Cos/d9_2 ), 
    .M0(\CIC1Cos/d9_1 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_1 ), .Q1(\CIC1Cos/d_d9_2 ));
  CIC1Cos_SLICE_1820 \CIC1Cos/SLICE_1820 ( .M1(\CIC1Cos/d9_4 ), 
    .M0(\CIC1Cos/d9_3 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_3 ), .Q1(\CIC1Cos/d_d9_4 ));
  CIC1Cos_SLICE_1821 \CIC1Cos/SLICE_1821 ( .M1(\CIC1Cos/d9_6 ), 
    .M0(\CIC1Cos/d9_5 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_5 ), .Q1(\CIC1Cos/d_d9_6 ));
  CIC1Cos_SLICE_1822 \CIC1Cos/SLICE_1822 ( .M1(\CIC1Cos/d9_8 ), 
    .M0(\CIC1Cos/d9_7 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_7 ), .Q1(\CIC1Cos/d_d9_8 ));
  CIC1Cos_SLICE_1823 \CIC1Cos/SLICE_1823 ( .M1(\CIC1Cos/d9_10 ), 
    .M0(\CIC1Cos/d9_9 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_9 ), .Q1(\CIC1Cos/d_d9_10 ));
  CIC1Cos_SLICE_1824 \CIC1Cos/SLICE_1824 ( .M1(\CIC1Cos/d9_12 ), 
    .M0(\CIC1Cos/d9_11 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_11 ), .Q1(\CIC1Cos/d_d9_12 ));
  CIC1Cos_SLICE_1825 \CIC1Cos/SLICE_1825 ( .M1(\CIC1Cos/d9_14 ), 
    .M0(\CIC1Cos/d9_13 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_13 ), .Q1(\CIC1Cos/d_d9_14 ));
  CIC1Cos_SLICE_1826 \CIC1Cos/SLICE_1826 ( .M1(\CIC1Cos/d9_16 ), 
    .M0(\CIC1Cos/d9_15 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_15 ), .Q1(\CIC1Cos/d_d9_16 ));
  CIC1Cos_SLICE_1827 \CIC1Cos/SLICE_1827 ( .M1(\CIC1Cos/d9_18 ), 
    .M0(\CIC1Cos/d9_17 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_17 ), .Q1(\CIC1Cos/d_d9_18 ));
  CIC1Cos_SLICE_1828 \CIC1Cos/SLICE_1828 ( .M1(\CIC1Cos/d9_20 ), 
    .M0(\CIC1Cos/d9_19 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_19 ), .Q1(\CIC1Cos/d_d9_20 ));
  CIC1Cos_SLICE_1829 \CIC1Cos/SLICE_1829 ( .M1(\CIC1Cos/d9_22 ), 
    .M0(\CIC1Cos/d9_21 ), .CE(\CIC1Cos/osc_clk_enable_1334 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_21 ), .Q1(\CIC1Cos/d_d9_22 ));
  CIC1Cos_SLICE_1830 \CIC1Cos/SLICE_1830 ( .M1(\CIC1Cos/d9_24 ), 
    .M0(\CIC1Cos/d9_23 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_23 ), .Q1(\CIC1Cos/d_d9_24 ));
  CIC1Cos_SLICE_1831 \CIC1Cos/SLICE_1831 ( .M1(\CIC1Cos/d9_26 ), 
    .M0(\CIC1Cos/d9_25 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_25 ), .Q1(\CIC1Cos/d_d9_26 ));
  CIC1Cos_SLICE_1832 \CIC1Cos/SLICE_1832 ( .M1(\CIC1Cos/d9_28 ), 
    .M0(\CIC1Cos/d9_27 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_27 ), .Q1(\CIC1Cos/d_d9_28 ));
  CIC1Cos_SLICE_1833 \CIC1Cos/SLICE_1833 ( .M1(\CIC1Cos/d9_30 ), 
    .M0(\CIC1Cos/d9_29 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_29 ), .Q1(\CIC1Cos/d_d9_30 ));
  CIC1Cos_SLICE_1834 \CIC1Cos/SLICE_1834 ( .M1(\CIC1Cos/d9_32 ), 
    .M0(\CIC1Cos/d9_31 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_31 ), .Q1(\CIC1Cos/d_d9_32 ));
  CIC1Cos_SLICE_1835 \CIC1Cos/SLICE_1835 ( .M1(\CIC1Cos/d9_34 ), 
    .M0(\CIC1Cos/d9_33 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_33 ), .Q1(\CIC1Cos/d_d9_34 ));
  CIC1Cos_SLICE_1836 \CIC1Cos/SLICE_1836 ( .M1(\CIC1Cos/d9_36 ), 
    .M0(\CIC1Cos/d9_35 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_35 ), .Q1(\CIC1Cos/d_d9_36 ));
  CIC1Cos_SLICE_1837 \CIC1Cos/SLICE_1837 ( .M1(\CIC1Cos/d9_38 ), 
    .M0(\CIC1Cos/d9_37 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_37 ), .Q1(\CIC1Cos/d_d9_38 ));
  CIC1Cos_SLICE_1838 \CIC1Cos/SLICE_1838 ( .M1(\CIC1Cos/d9_40 ), 
    .M0(\CIC1Cos/d9_39 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_39 ), .Q1(\CIC1Cos/d_d9_40 ));
  CIC1Cos_SLICE_1839 \CIC1Cos/SLICE_1839 ( .M1(\CIC1Cos/d9_42 ), 
    .M0(\CIC1Cos/d9_41 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_41 ), .Q1(\CIC1Cos/d_d9_42 ));
  CIC1Cos_SLICE_1840 \CIC1Cos/SLICE_1840 ( .M1(\CIC1Cos/d9_44 ), 
    .M0(\CIC1Cos/d9_43 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_43 ), .Q1(\CIC1Cos/d_d9_44 ));
  CIC1Cos_SLICE_1841 \CIC1Cos/SLICE_1841 ( .M1(\CIC1Cos/d9_46 ), 
    .M0(\CIC1Cos/d9_45 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_45 ), .Q1(\CIC1Cos/d_d9_46 ));
  CIC1Cos_SLICE_1842 \CIC1Cos/SLICE_1842 ( .M1(\CIC1Cos/d9_48 ), 
    .M0(\CIC1Cos/d9_47 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_47 ), .Q1(\CIC1Cos/d_d9_48 ));
  CIC1Cos_SLICE_1843 \CIC1Cos/SLICE_1843 ( .M1(\CIC1Cos/d9_50 ), 
    .M0(\CIC1Cos/d9_49 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_49 ), .Q1(\CIC1Cos/d_d9_50 ));
  CIC1Cos_SLICE_1844 \CIC1Cos/SLICE_1844 ( .M1(\CIC1Cos/d9_52 ), 
    .M0(\CIC1Cos/d9_51 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_51 ), .Q1(\CIC1Cos/d_d9_52 ));
  CIC1Cos_SLICE_1845 \CIC1Cos/SLICE_1845 ( .M1(\CIC1Cos/d9_54 ), 
    .M0(\CIC1Cos/d9_53 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_53 ), .Q1(\CIC1Cos/d_d9_54 ));
  CIC1Cos_SLICE_1846 \CIC1Cos/SLICE_1846 ( .M1(\CIC1Cos/d9_56 ), 
    .M0(\CIC1Cos/d9_55 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_55 ), .Q1(\CIC1Cos/d_d9_56 ));
  CIC1Cos_SLICE_1847 \CIC1Cos/SLICE_1847 ( .M1(\CIC1Cos/d9_58 ), 
    .M0(\CIC1Cos/d9_57 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_57 ), .Q1(\CIC1Cos/d_d9_58 ));
  CIC1Cos_SLICE_1848 \CIC1Cos/SLICE_1848 ( .M1(\CIC1Cos/d9_60 ), 
    .M0(\CIC1Cos/d9_59 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_59 ), .Q1(\CIC1Cos/d_d9_60 ));
  CIC1Cos_SLICE_1849 \CIC1Cos/SLICE_1849 ( .M1(\CIC1Cos/d9_62 ), 
    .M0(\CIC1Cos/d9_61 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_61 ), .Q1(\CIC1Cos/d_d9_62 ));
  CIC1Cos_SLICE_1850 \CIC1Cos/SLICE_1850 ( .M1(\CIC1Cos/d9_64 ), 
    .M0(\CIC1Cos/d9_63 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_63 ), .Q1(\CIC1Cos/d_d9_64 ));
  CIC1Cos_SLICE_1851 \CIC1Cos/SLICE_1851 ( .M1(\CIC1Cos/d9_66 ), 
    .M0(\CIC1Cos/d9_65 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_65 ), .Q1(\CIC1Cos/d_d9_66 ));
  CIC1Cos_SLICE_1852 \CIC1Cos/SLICE_1852 ( .M1(\CIC1Cos/d9_68 ), 
    .M0(\CIC1Cos/d9_67 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_67 ), .Q1(\CIC1Cos/d_d9_68 ));
  CIC1Cos_SLICE_1853 \CIC1Cos/SLICE_1853 ( .M1(\CIC1Cos/d9_70 ), 
    .M0(\CIC1Cos/d9_69 ), .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d9_69 ), .Q1(\CIC1Cos/d_d9_70 ));
  CIC1Cos_SLICE_1854 \CIC1Cos/SLICE_1854 ( .M0(\CIC1Cos/d9_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_1384 ), .CLK(osc_clk), .Q0(\CIC1Cos/d_d9_71 ));
  CIC1Cos_SLICE_1855 \CIC1Cos/SLICE_1855 ( .M1(\CIC1Cos/d_tmp_1 ), 
    .M0(\CIC1Cos/d_tmp_0 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_0 ), .Q1(\CIC1Cos/d_d_tmp_1 ));
  CIC1Cos_SLICE_1856 \CIC1Cos/SLICE_1856 ( .M1(\CIC1Cos/d_tmp_3 ), 
    .M0(\CIC1Cos/d_tmp_2 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_2 ), .Q1(\CIC1Cos/d_d_tmp_3 ));
  CIC1Cos_SLICE_1857 \CIC1Cos/SLICE_1857 ( .M1(\CIC1Cos/d_tmp_5 ), 
    .M0(\CIC1Cos/d_tmp_4 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_4 ), .Q1(\CIC1Cos/d_d_tmp_5 ));
  CIC1Cos_SLICE_1858 \CIC1Cos/SLICE_1858 ( .M1(\CIC1Cos/d_tmp_7 ), 
    .M0(\CIC1Cos/d_tmp_6 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_6 ), .Q1(\CIC1Cos/d_d_tmp_7 ));
  CIC1Cos_SLICE_1859 \CIC1Cos/SLICE_1859 ( .M1(\CIC1Cos/d_tmp_9 ), 
    .M0(\CIC1Cos/d_tmp_8 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_8 ), .Q1(\CIC1Cos/d_d_tmp_9 ));
  CIC1Cos_SLICE_1860 \CIC1Cos/SLICE_1860 ( .M1(\CIC1Cos/d_tmp_11 ), 
    .M0(\CIC1Cos/d_tmp_10 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_10 ), .Q1(\CIC1Cos/d_d_tmp_11 ));
  CIC1Cos_SLICE_1861 \CIC1Cos/SLICE_1861 ( .M1(\CIC1Cos/d_tmp_13 ), 
    .M0(\CIC1Cos/d_tmp_12 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_12 ), .Q1(\CIC1Cos/d_d_tmp_13 ));
  CIC1Cos_SLICE_1862 \CIC1Cos/SLICE_1862 ( .M1(\CIC1Cos/d_tmp_15 ), 
    .M0(\CIC1Cos/d_tmp_14 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_14 ), .Q1(\CIC1Cos/d_d_tmp_15 ));
  CIC1Cos_SLICE_1863 \CIC1Cos/SLICE_1863 ( .M1(\CIC1Cos/d_tmp_17 ), 
    .M0(\CIC1Cos/d_tmp_16 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_16 ), .Q1(\CIC1Cos/d_d_tmp_17 ));
  CIC1Cos_SLICE_1864 \CIC1Cos/SLICE_1864 ( .M1(\CIC1Cos/d_tmp_19 ), 
    .M0(\CIC1Cos/d_tmp_18 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_18 ), .Q1(\CIC1Cos/d_d_tmp_19 ));
  CIC1Cos_SLICE_1865 \CIC1Cos/SLICE_1865 ( .M1(\CIC1Cos/d_tmp_21 ), 
    .M0(\CIC1Cos/d_tmp_20 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_20 ), .Q1(\CIC1Cos/d_d_tmp_21 ));
  CIC1Cos_SLICE_1866 \CIC1Cos/SLICE_1866 ( .M1(\CIC1Cos/d_tmp_23 ), 
    .M0(\CIC1Cos/d_tmp_22 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_22 ), .Q1(\CIC1Cos/d_d_tmp_23 ));
  CIC1Cos_SLICE_1867 \CIC1Cos/SLICE_1867 ( .M1(\CIC1Cos/d_tmp_25 ), 
    .M0(\CIC1Cos/d_tmp_24 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_24 ), .Q1(\CIC1Cos/d_d_tmp_25 ));
  CIC1Cos_SLICE_1868 \CIC1Cos/SLICE_1868 ( .M1(\CIC1Cos/d_tmp_27 ), 
    .M0(\CIC1Cos/d_tmp_26 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_26 ), .Q1(\CIC1Cos/d_d_tmp_27 ));
  CIC1Cos_SLICE_1869 \CIC1Cos/SLICE_1869 ( .M1(\CIC1Cos/d_tmp_29 ), 
    .M0(\CIC1Cos/d_tmp_28 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_28 ), .Q1(\CIC1Cos/d_d_tmp_29 ));
  CIC1Cos_SLICE_1870 \CIC1Cos/SLICE_1870 ( .M1(\CIC1Cos/d_tmp_31 ), 
    .M0(\CIC1Cos/d_tmp_30 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_30 ), .Q1(\CIC1Cos/d_d_tmp_31 ));
  CIC1Cos_SLICE_1871 \CIC1Cos/SLICE_1871 ( .M1(\CIC1Cos/d_tmp_33 ), 
    .M0(\CIC1Cos/d_tmp_32 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_32 ), .Q1(\CIC1Cos/d_d_tmp_33 ));
  CIC1Cos_SLICE_1872 \CIC1Cos/SLICE_1872 ( .M1(\CIC1Cos/d_tmp_35 ), 
    .M0(\CIC1Cos/d_tmp_34 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_34 ), .Q1(\CIC1Cos/d_d_tmp_35 ));
  CIC1Cos_SLICE_1873 \CIC1Cos/SLICE_1873 ( .M1(\CIC1Cos/d_tmp_37 ), 
    .M0(\CIC1Cos/d_tmp_36 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_36 ), .Q1(\CIC1Cos/d_d_tmp_37 ));
  CIC1Cos_SLICE_1874 \CIC1Cos/SLICE_1874 ( .M1(\CIC1Cos/d_tmp_39 ), 
    .M0(\CIC1Cos/d_tmp_38 ), .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_38 ), .Q1(\CIC1Cos/d_d_tmp_39 ));
  CIC1Cos_SLICE_1875 \CIC1Cos/SLICE_1875 ( .M0(\CIC1Cos/d_tmp_40 ), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_40 ));
  CIC1Cos_SLICE_1876 \CIC1Cos/SLICE_1876 ( .M1(\CIC1Cos/d_tmp_42 ), 
    .M0(\CIC1Cos/d_tmp_41 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_41 ), .Q1(\CIC1Cos/d_d_tmp_42 ));
  CIC1Cos_SLICE_1877 \CIC1Cos/SLICE_1877 ( .M1(\CIC1Cos/d_tmp_44 ), 
    .M0(\CIC1Cos/d_tmp_43 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_43 ), .Q1(\CIC1Cos/d_d_tmp_44 ));
  CIC1Cos_SLICE_1878 \CIC1Cos/SLICE_1878 ( .M1(\CIC1Cos/d_tmp_46 ), 
    .M0(\CIC1Cos/d_tmp_45 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_45 ), .Q1(\CIC1Cos/d_d_tmp_46 ));
  CIC1Cos_SLICE_1879 \CIC1Cos/SLICE_1879 ( .M1(\CIC1Cos/d_tmp_48 ), 
    .M0(\CIC1Cos/d_tmp_47 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_47 ), .Q1(\CIC1Cos/d_d_tmp_48 ));
  CIC1Cos_SLICE_1880 \CIC1Cos/SLICE_1880 ( .M1(\CIC1Cos/d_tmp_50 ), 
    .M0(\CIC1Cos/d_tmp_49 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_49 ), .Q1(\CIC1Cos/d_d_tmp_50 ));
  CIC1Cos_SLICE_1881 \CIC1Cos/SLICE_1881 ( .M1(\CIC1Cos/d_tmp_52 ), 
    .M0(\CIC1Cos/d_tmp_51 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_51 ), .Q1(\CIC1Cos/d_d_tmp_52 ));
  CIC1Cos_SLICE_1882 \CIC1Cos/SLICE_1882 ( .M1(\CIC1Cos/d_tmp_54 ), 
    .M0(\CIC1Cos/d_tmp_53 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_53 ), .Q1(\CIC1Cos/d_d_tmp_54 ));
  CIC1Cos_SLICE_1883 \CIC1Cos/SLICE_1883 ( .M1(\CIC1Cos/d_tmp_56 ), 
    .M0(\CIC1Cos/d_tmp_55 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_55 ), .Q1(\CIC1Cos/d_d_tmp_56 ));
  CIC1Cos_SLICE_1884 \CIC1Cos/SLICE_1884 ( .M1(\CIC1Cos/d_tmp_58 ), 
    .M0(\CIC1Cos/d_tmp_57 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_57 ), .Q1(\CIC1Cos/d_d_tmp_58 ));
  CIC1Cos_SLICE_1885 \CIC1Cos/SLICE_1885 ( .M1(\CIC1Cos/d_tmp_60 ), 
    .M0(\CIC1Cos/d_tmp_59 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_59 ), .Q1(\CIC1Cos/d_d_tmp_60 ));
  CIC1Cos_SLICE_1886 \CIC1Cos/SLICE_1886 ( .M1(\CIC1Cos/d_tmp_62 ), 
    .M0(\CIC1Cos/d_tmp_61 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_61 ), .Q1(\CIC1Cos/d_d_tmp_62 ));
  CIC1Cos_SLICE_1887 \CIC1Cos/SLICE_1887 ( .M1(\CIC1Cos/d_tmp_64 ), 
    .M0(\CIC1Cos/d_tmp_63 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_63 ), .Q1(\CIC1Cos/d_d_tmp_64 ));
  CIC1Cos_SLICE_1888 \CIC1Cos/SLICE_1888 ( .M1(\CIC1Cos/d_tmp_66 ), 
    .M0(\CIC1Cos/d_tmp_65 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_65 ), .Q1(\CIC1Cos/d_d_tmp_66 ));
  CIC1Cos_SLICE_1889 \CIC1Cos/SLICE_1889 ( .M1(\CIC1Cos/d_tmp_68 ), 
    .M0(\CIC1Cos/d_tmp_67 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_67 ), .Q1(\CIC1Cos/d_d_tmp_68 ));
  CIC1Cos_SLICE_1890 \CIC1Cos/SLICE_1890 ( .M1(\CIC1Cos/d_tmp_70 ), 
    .M0(\CIC1Cos/d_tmp_69 ), .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_69 ), .Q1(\CIC1Cos/d_d_tmp_70 ));
  CIC1Cos_SLICE_1891 \CIC1Cos/SLICE_1891 ( .M0(\CIC1Cos/d_tmp_71 ), 
    .CE(\CIC1Cos/osc_clk_enable_834 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_d_tmp_71 ));
  CIC1Cos_SLICE_1892 \CIC1Cos/SLICE_1892 ( .M1(\CIC1Cos/d5_1 ), 
    .M0(\CIC1Cos/d5_0 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_0 ), .Q1(\CIC1Cos/d_tmp_1 ));
  CIC1Cos_SLICE_1893 \CIC1Cos/SLICE_1893 ( .M1(\CIC1Cos/d5_3 ), 
    .M0(\CIC1Cos/d5_2 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_2 ), .Q1(\CIC1Cos/d_tmp_3 ));
  CIC1Cos_SLICE_1894 \CIC1Cos/SLICE_1894 ( .M1(\CIC1Cos/d5_5 ), 
    .M0(\CIC1Cos/d5_4 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_4 ), .Q1(\CIC1Cos/d_tmp_5 ));
  CIC1Cos_SLICE_1895 \CIC1Cos/SLICE_1895 ( .M1(\CIC1Cos/d5_7 ), 
    .M0(\CIC1Cos/d5_6 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_6 ), .Q1(\CIC1Cos/d_tmp_7 ));
  CIC1Cos_SLICE_1896 \CIC1Cos/SLICE_1896 ( .M1(\CIC1Cos/d5_9 ), 
    .M0(\CIC1Cos/d5_8 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_8 ), .Q1(\CIC1Cos/d_tmp_9 ));
  CIC1Cos_SLICE_1897 \CIC1Cos/SLICE_1897 ( .M1(\CIC1Cos/d5_11 ), 
    .M0(\CIC1Cos/d5_10 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_10 ), .Q1(\CIC1Cos/d_tmp_11 ));
  CIC1Cos_SLICE_1898 \CIC1Cos/SLICE_1898 ( .M1(\CIC1Cos/d5_13 ), 
    .M0(\CIC1Cos/d5_12 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_12 ), .Q1(\CIC1Cos/d_tmp_13 ));
  CIC1Cos_SLICE_1899 \CIC1Cos/SLICE_1899 ( .M1(\CIC1Cos/d5_15 ), 
    .M0(\CIC1Cos/d5_14 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_14 ), .Q1(\CIC1Cos/d_tmp_15 ));
  CIC1Cos_SLICE_1900 \CIC1Cos/SLICE_1900 ( .M1(\CIC1Cos/d5_17 ), 
    .M0(\CIC1Cos/d5_16 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_16 ), .Q1(\CIC1Cos/d_tmp_17 ));
  CIC1Cos_SLICE_1901 \CIC1Cos/SLICE_1901 ( .M1(\CIC1Cos/d5_19 ), 
    .M0(\CIC1Cos/d5_18 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_18 ), .Q1(\CIC1Cos/d_tmp_19 ));
  CIC1Cos_SLICE_1902 \CIC1Cos/SLICE_1902 ( .M1(\CIC1Cos/d5_21 ), 
    .M0(\CIC1Cos/d5_20 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_20 ), .Q1(\CIC1Cos/d_tmp_21 ));
  CIC1Cos_SLICE_1903 \CIC1Cos/SLICE_1903 ( .M1(\CIC1Cos/d5_23 ), 
    .M0(\CIC1Cos/d5_22 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_22 ), .Q1(\CIC1Cos/d_tmp_23 ));
  CIC1Cos_SLICE_1904 \CIC1Cos/SLICE_1904 ( .M1(\CIC1Cos/d5_25 ), 
    .M0(\CIC1Cos/d5_24 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_24 ), .Q1(\CIC1Cos/d_tmp_25 ));
  CIC1Cos_SLICE_1905 \CIC1Cos/SLICE_1905 ( .M1(\CIC1Cos/d5_27 ), 
    .M0(\CIC1Cos/d5_26 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_26 ), .Q1(\CIC1Cos/d_tmp_27 ));
  CIC1Cos_SLICE_1906 \CIC1Cos/SLICE_1906 ( .M1(\CIC1Cos/d5_29 ), 
    .M0(\CIC1Cos/d5_28 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_28 ), .Q1(\CIC1Cos/d_tmp_29 ));
  CIC1Cos_SLICE_1907 \CIC1Cos/SLICE_1907 ( .M1(\CIC1Cos/d5_31 ), 
    .M0(\CIC1Cos/d5_30 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_30 ), .Q1(\CIC1Cos/d_tmp_31 ));
  CIC1Cos_SLICE_1908 \CIC1Cos/SLICE_1908 ( .M1(\CIC1Cos/d5_33 ), 
    .M0(\CIC1Cos/d5_32 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_32 ), .Q1(\CIC1Cos/d_tmp_33 ));
  CIC1Cos_SLICE_1909 \CIC1Cos/SLICE_1909 ( .M1(\CIC1Cos/d5_35 ), 
    .M0(\CIC1Cos/d5_34 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_34 ), .Q1(\CIC1Cos/d_tmp_35 ));
  CIC1Cos_SLICE_1910 \CIC1Cos/SLICE_1910 ( .M1(\CIC1Cos/d5_37 ), 
    .M0(\CIC1Cos/d5_36 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_36 ), .Q1(\CIC1Cos/d_tmp_37 ));
  CIC1Cos_SLICE_1911 \CIC1Cos/SLICE_1911 ( .M1(\CIC1Cos/d5_39 ), 
    .M0(\CIC1Cos/d5_38 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_38 ), .Q1(\CIC1Cos/d_tmp_39 ));
  CIC1Cos_SLICE_1912 \CIC1Cos/SLICE_1912 ( .M1(\CIC1Cos/d5_41 ), 
    .M0(\CIC1Cos/d5_40 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_40 ), .Q1(\CIC1Cos/d_tmp_41 ));
  CIC1Cos_SLICE_1913 \CIC1Cos/SLICE_1913 ( .M1(\CIC1Cos/d5_43 ), 
    .M0(\CIC1Cos/d5_42 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_42 ), .Q1(\CIC1Cos/d_tmp_43 ));
  CIC1Cos_SLICE_1914 \CIC1Cos/SLICE_1914 ( .M1(\CIC1Cos/d5_45 ), 
    .M0(\CIC1Cos/d5_44 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_44 ), .Q1(\CIC1Cos/d_tmp_45 ));
  CIC1Cos_SLICE_1915 \CIC1Cos/SLICE_1915 ( .M1(\CIC1Cos/d5_47 ), 
    .M0(\CIC1Cos/d5_46 ), .CE(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_46 ), .Q1(\CIC1Cos/d_tmp_47 ));
  CIC1Cos_SLICE_1916 \CIC1Cos/SLICE_1916 ( .M1(\CIC1Cos/d5_49 ), 
    .M0(\CIC1Cos/d5_48 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_48 ), .Q1(\CIC1Cos/d_tmp_49 ));
  CIC1Cos_SLICE_1917 \CIC1Cos/SLICE_1917 ( .M1(\CIC1Cos/d5_51 ), 
    .M0(\CIC1Cos/d5_50 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_50 ), .Q1(\CIC1Cos/d_tmp_51 ));
  CIC1Cos_SLICE_1918 \CIC1Cos/SLICE_1918 ( .M1(\CIC1Cos/d5_53 ), 
    .M0(\CIC1Cos/d5_52 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_52 ), .Q1(\CIC1Cos/d_tmp_53 ));
  CIC1Cos_SLICE_1919 \CIC1Cos/SLICE_1919 ( .M1(\CIC1Cos/d5_55 ), 
    .M0(\CIC1Cos/d5_54 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_54 ), .Q1(\CIC1Cos/d_tmp_55 ));
  CIC1Cos_SLICE_1920 \CIC1Cos/SLICE_1920 ( .M1(\CIC1Cos/d5_57 ), 
    .M0(\CIC1Cos/d5_56 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_56 ), .Q1(\CIC1Cos/d_tmp_57 ));
  CIC1Cos_SLICE_1921 \CIC1Cos/SLICE_1921 ( .M1(\CIC1Cos/d5_59 ), 
    .M0(\CIC1Cos/d5_58 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_58 ), .Q1(\CIC1Cos/d_tmp_59 ));
  CIC1Cos_SLICE_1922 \CIC1Cos/SLICE_1922 ( .M1(\CIC1Cos/d5_61 ), 
    .M0(\CIC1Cos/d5_60 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_60 ), .Q1(\CIC1Cos/d_tmp_61 ));
  CIC1Cos_SLICE_1923 \CIC1Cos/SLICE_1923 ( .M1(\CIC1Cos/d5_63 ), 
    .M0(\CIC1Cos/d5_62 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_62 ), .Q1(\CIC1Cos/d_tmp_63 ));
  CIC1Cos_SLICE_1924 \CIC1Cos/SLICE_1924 ( .M1(\CIC1Cos/d5_65 ), 
    .M0(\CIC1Cos/d5_64 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_64 ), .Q1(\CIC1Cos/d_tmp_65 ));
  CIC1Cos_SLICE_1925 \CIC1Cos/SLICE_1925 ( .M1(\CIC1Cos/d5_67 ), 
    .M0(\CIC1Cos/d5_66 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_66 ), .Q1(\CIC1Cos/d_tmp_67 ));
  CIC1Cos_SLICE_1926 \CIC1Cos/SLICE_1926 ( .M1(\CIC1Cos/d5_69 ), 
    .M0(\CIC1Cos/d5_68 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_68 ), .Q1(\CIC1Cos/d_tmp_69 ));
  CIC1Cos_SLICE_1927 \CIC1Cos/SLICE_1927 ( .M1(\CIC1Cos/d5_71 ), 
    .M0(\CIC1Cos/d5_70 ), .CE(\CIC1Cos/count_15__N_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/d_tmp_70 ), .Q1(\CIC1Cos/d_tmp_71 ));
  CIC1Cos_SLICE_1928 \CIC1Cos/SLICE_1928 ( .D1(\CIC1Cos/count_7 ), 
    .C1(\CIC1Cos/count_8 ), .B1(\CIC1Cos/count_9 ), .A1(\CIC1Cos/count_1 ), 
    .D0(\CIC1Cos/n13103 ), .C0(\CIC1Cos/n13123 ), .B0(\CIC1Cos/n13 ), 
    .A0(\CIC1Cos/n13121 ), .DI0(\CIC1Cos/osc_clk_enable_744 ), 
    .M1(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .F0(\CIC1Cos/osc_clk_enable_744 ), .Q0(\CIC1Cos/osc_clk_enable_784 ), 
    .F1(\CIC1Cos/n13121 ), .Q1(\CIC1Cos/osc_clk_enable_834 ));
  CIC1Cos_SLICE_1929 \CIC1Cos/SLICE_1929 ( .M1(\CIC1Cos/osc_clk_enable_744 ), 
    .M0(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_884 ), .Q1(\CIC1Cos/osc_clk_enable_934 ));
  CIC1Cos_SLICE_1930 \CIC1Cos/SLICE_1930 ( .M1(\CIC1Cos/osc_clk_enable_744 ), 
    .M0(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_984 ), .Q1(\CIC1Cos/osc_clk_enable_1034 ));
  CIC1Cos_SLICE_1931 \CIC1Cos/SLICE_1931 ( .M1(\CIC1Cos/osc_clk_enable_744 ), 
    .M0(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_1084 ), .Q1(\CIC1Cos/osc_clk_enable_1134 ));
  CIC1Cos_SLICE_1932 \CIC1Cos/SLICE_1932 ( .M1(\CIC1Cos/osc_clk_enable_744 ), 
    .M0(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_1184 ), .Q1(\CIC1Cos/osc_clk_enable_1234 ));
  CIC1Cos_SLICE_1933 \CIC1Cos/SLICE_1933 ( .M1(\CIC1Cos/osc_clk_enable_744 ), 
    .M0(\CIC1Cos/osc_clk_enable_744 ), .CLK(osc_clk), 
    .Q0(\CIC1Cos/osc_clk_enable_1284 ), .Q1(\CIC1Cos/osc_clk_enable_1334 ));
  CIC1Cos_SLICE_1934 \CIC1Cos/SLICE_1934 ( .M0(\CIC1Cos/osc_clk_enable_744 ), 
    .CLK(osc_clk), .Q0(\CIC1Cos/osc_clk_enable_1384 ));
  CIC1Cos_SLICE_1935 \CIC1Cos/SLICE_1935 ( .M0(\CIC1Cos/osc_clk_enable_744 ), 
    .CLK(osc_clk), .Q0(\CIC1Cos/v_comb ));
  CIC1Sin_SLICE_1936 \CIC1Sin/SLICE_1936 ( .D1(\CIC1Sin/count_0 ), 
    .C1(\CIC1Sin/count_4 ), .B1(\CIC1Sin/count_3 ), .A1(\CIC1Sin/count_9 ), 
    .B0(\CIC1Sin/n31 ), .A0(\CIC1Sin/n391 ), .DI0(\CIC1Sin/count_15_N_1442_0 ), 
    .LSR(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/count_15_N_1442_0 ), .Q0(\CIC1Sin/count_0 ), 
    .F1(\CIC1Sin/n21 ));
  CIC1Sin_SLICE_1937 \CIC1Sin/SLICE_1937 ( .D1(\CIC1Sin/count_6 ), 
    .C1(\CIC1Sin/count_5 ), .B1(\CIC1Sin/count_1 ), .A1(\CIC1Sin/count_10 ), 
    .B0(\CIC1Sin/n31 ), .A0(\CIC1Sin/n380 ), 
    .DI0(\CIC1Sin/count_15_N_1442_11 ), .LSR(\CIC1Sin/d_clk_tmp_N_1831 ), 
    .CLK(osc_clk), .F0(\CIC1Sin/count_15_N_1442_11 ), .Q0(\CIC1Sin/count_11 ), 
    .F1(\CIC1Sin/n19 ));
  CIC1Sin_SLICE_1938 \CIC1Sin/SLICE_1938 ( .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n6002 ), .A0(\CIC1Sin/n5964 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_57 ), .CE(\CIC1Sin/osc_clk_enable_697 ), 
    .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_57 ), .Q0(\CIC1Sin/d10_57 ));
  CIC1Sin_SLICE_1939 \CIC1Sin/SLICE_1939 ( .C1(\CIC1Sin/n5948 ), 
    .B1(\CIC1Sin/n5998 ), .A1(\CIC1Sin/n5960 ), .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n6001 ), .A0(\CIC1Sin/n5963 ), 
    .DI1(\CIC1Sin/d10_71_N_1747_61 ), .DI0(\CIC1Sin/d10_71_N_1747_58 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_58 ), 
    .Q0(\CIC1Sin/d10_58 ), .F1(\CIC1Sin/d10_71_N_1747_61 ), 
    .Q1(\CIC1Sin/d10_61 ));
  CIC1Sin_SLICE_1940 \CIC1Sin/SLICE_1940 ( .C1(\CIC1Sin/n5948 ), 
    .B1(\CIC1Sin/n5996 ), .A1(\CIC1Sin/n5958 ), .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n5997 ), .A0(\CIC1Sin/n5959 ), 
    .DI1(\CIC1Sin/d10_71_N_1747_63 ), .DI0(\CIC1Sin/d10_71_N_1747_62 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_62 ), 
    .Q0(\CIC1Sin/d10_62 ), .F1(\CIC1Sin/d10_71_N_1747_63 ), 
    .Q1(\CIC1Sin/d10_63 ));
  CIC1Sin_SLICE_1941 \CIC1Sin/SLICE_1941 ( .C1(\CIC1Sin/n5948 ), 
    .B1(\CIC1Sin/n5992 ), .A1(\CIC1Sin/n5954 ), .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n5995 ), .A0(\CIC1Sin/n5957 ), 
    .DI1(\CIC1Sin/d10_71_N_1747_67 ), .DI0(\CIC1Sin/d10_71_N_1747_64 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_64 ), 
    .Q0(\CIC1Sin/d10_64 ), .F1(\CIC1Sin/d10_71_N_1747_67 ), 
    .Q1(\CIC1Sin/d10_67 ));
  CIC1Sin_SLICE_1942 \CIC1Sin/SLICE_1942 ( .C1(\CIC1Sin/n5948 ), 
    .B1(\CIC1Sin/n5990 ), .A1(\CIC1Sin/n5952 ), .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n5991 ), .A0(\CIC1Sin/n5953 ), 
    .DI1(\CIC1Sin/d10_71_N_1747_69 ), .DI0(\CIC1Sin/d10_71_N_1747_68 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_68 ), 
    .Q0(\CIC1Sin/d10_68 ), .F1(\CIC1Sin/d10_71_N_1747_69 ), 
    .Q1(\CIC1Sin/d10_69 ));
  CIC1Sin_SLICE_1943 \CIC1Sin/SLICE_1943 ( .C1(\CIC1Sin/n5948 ), 
    .B1(\CIC1Sin/n5988 ), .A1(\CIC1Sin/n5950 ), .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n5989 ), .A0(\CIC1Sin/n5951 ), 
    .DI1(\CIC1Sin/d10_71_N_1747_71 ), .DI0(\CIC1Sin/d10_71_N_1747_70 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d10_71_N_1747_70 ), 
    .Q0(\CIC1Sin/d10_70 ), .F1(\CIC1Sin/d10_71_N_1747_71 ), 
    .Q1(\CIC1Sin/d10_71 ));
  CIC1Sin_SLICE_1944 \CIC1Sin/SLICE_1944 ( .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n6000 ), .A0(\CIC1Sin/n5962 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_59 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_59 ), .Q0(\CIC1Sin/d10_59_adj_2522 ));
  CIC1Sin_SLICE_1945 \CIC1Sin/SLICE_1945 ( .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n5999 ), .A0(\CIC1Sin/n5961 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_60 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_60 ), .Q0(\CIC1Sin/d10_60_adj_2520 ));
  CIC1Sin_SLICE_1946 \CIC1Sin/SLICE_1946 ( .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n5994 ), .A0(\CIC1Sin/n5956 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_65 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_65 ), .Q0(\CIC1Sin/d10_65_adj_2513 ));
  CIC1Sin_SLICE_1947 \CIC1Sin/SLICE_1947 ( .C0(\CIC1Sin/n5948 ), 
    .B0(\CIC1Sin/n5993 ), .A0(\CIC1Sin/n5955 ), 
    .DI0(\CIC1Sin/d10_71_N_1747_66 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d10_71_N_1747_66 ), .Q0(\CIC1Sin/d10_66_adj_2519 ));
  CIC1Sin_SLICE_1948 \CIC1Sin/SLICE_1948 ( .B0(\CIC1Sin/d1_0 ), 
    .A0(MixerOutSin_0), .DI0(\CIC1Sin/d1_71_N_418_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d1_71_N_418_0 ), .Q0(\CIC1Sin/d1_0 ));
  CIC1Sin_SLICE_1949 \CIC1Sin/SLICE_1949 ( .B0(\CIC1Sin/d2_0 ), 
    .A0(\CIC1Sin/d1_0 ), .DI0(\CIC1Sin/d2_71_N_490_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d2_71_N_490_0 ), .Q0(\CIC1Sin/d2_0 ));
  CIC1Sin_SLICE_1950 \CIC1Sin/SLICE_1950 ( .B0(\CIC1Sin/d3_0 ), 
    .A0(\CIC1Sin/d2_0 ), .DI0(\CIC1Sin/d3_71_N_562_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d3_71_N_562_0 ), .Q0(\CIC1Sin/d3_0 ));
  CIC1Sin_SLICE_1951 \CIC1Sin/SLICE_1951 ( .B0(\CIC1Sin/d4_0 ), 
    .A0(\CIC1Sin/d3_0 ), .DI0(\CIC1Sin/d4_71_N_634_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d4_71_N_634_0 ), .Q0(\CIC1Sin/d4_0 ));
  CIC1Sin_SLICE_1952 \CIC1Sin/SLICE_1952 ( .B0(\CIC1Sin/d5_0 ), 
    .A0(\CIC1Sin/d4_0 ), .DI0(\CIC1Sin/d5_71_N_706_0 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d5_71_N_706_0 ), .Q0(\CIC1Sin/d5_0 ));
  CIC1Sin_SLICE_1953 \CIC1Sin/SLICE_1953 ( .M0(\CIC1Sin/d6_71_N_1459_20 ), 
    .CE(\CIC1Sin/osc_clk_enable_197 ), .CLK(osc_clk), .Q0(\CIC1Sin/d6_20 ));
  CIC1Sin_SLICE_1954 \CIC1Sin/SLICE_1954 ( .M0(\CIC1Sin/d7_71_N_1531_28 ), 
    .CE(\CIC1Sin/osc_clk_enable_347 ), .CLK(osc_clk), .Q0(\CIC1Sin/d7_28 ));
  CIC1Sin_SLICE_1955 \CIC1Sin/SLICE_1955 ( .B1(\CIC1Sin/count_7 ), 
    .A1(\CIC1Sin/count_8 ), .B0(\CIC1Sin/d_clk_tmp ), .A0(\CIC1Sin/n31 ), 
    .DI0(\CIC1Sin/n8356 ), .LSR(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/n8356 ), .Q0(\CIC1Sin/d_clk_tmp ), .F1(\CIC1Sin/n15 ));
  CIC1Sin_SLICE_1956 \CIC1Sin/SLICE_1956 ( .M0(\CIC1Sin/d6_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d6_0 ));
  CIC1Sin_SLICE_1957 \CIC1Sin/SLICE_1957 ( .M1(\CIC1Sin/d6_2 ), 
    .M0(\CIC1Sin/d6_1 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_1 ), .Q1(\CIC1Sin/d_d6_2 ));
  CIC1Sin_SLICE_1958 \CIC1Sin/SLICE_1958 ( .M1(\CIC1Sin/d6_4 ), 
    .M0(\CIC1Sin/d6_3 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_3 ), .Q1(\CIC1Sin/d_d6_4 ));
  CIC1Sin_SLICE_1959 \CIC1Sin/SLICE_1959 ( .M1(\CIC1Sin/d6_6 ), 
    .M0(\CIC1Sin/d6_5 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_5 ), .Q1(\CIC1Sin/d_d6_6 ));
  CIC1Sin_SLICE_1960 \CIC1Sin/SLICE_1960 ( .M1(\CIC1Sin/d6_8 ), 
    .M0(\CIC1Sin/d6_7 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_7 ), .Q1(\CIC1Sin/d_d6_8 ));
  CIC1Sin_SLICE_1961 \CIC1Sin/SLICE_1961 ( .M1(\CIC1Sin/d6_10 ), 
    .M0(\CIC1Sin/d6_9 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_9 ), .Q1(\CIC1Sin/d_d6_10 ));
  CIC1Sin_SLICE_1962 \CIC1Sin/SLICE_1962 ( .M1(\CIC1Sin/d6_12 ), 
    .M0(\CIC1Sin/d6_11 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_11 ), .Q1(\CIC1Sin/d_d6_12 ));
  CIC1Sin_SLICE_1963 \CIC1Sin/SLICE_1963 ( .M1(\CIC1Sin/d6_14 ), 
    .M0(\CIC1Sin/d6_13 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_13 ), .Q1(\CIC1Sin/d_d6_14 ));
  CIC1Sin_SLICE_1964 \CIC1Sin/SLICE_1964 ( .M1(\CIC1Sin/d6_16 ), 
    .M0(\CIC1Sin/d6_15 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_15 ), .Q1(\CIC1Sin/d_d6_16 ));
  CIC1Sin_SLICE_1965 \CIC1Sin/SLICE_1965 ( .M1(\CIC1Sin/d6_18 ), 
    .M0(\CIC1Sin/d6_17 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_17 ), .Q1(\CIC1Sin/d_d6_18 ));
  CIC1Sin_SLICE_1966 \CIC1Sin/SLICE_1966 ( .M1(\CIC1Sin/d6_20 ), 
    .M0(\CIC1Sin/d6_19 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_19 ), .Q1(\CIC1Sin/d_d6_20 ));
  CIC1Sin_SLICE_1967 \CIC1Sin/SLICE_1967 ( .M1(\CIC1Sin/d6_22 ), 
    .M0(\CIC1Sin/d6_21 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_21 ), .Q1(\CIC1Sin/d_d6_22 ));
  CIC1Sin_SLICE_1968 \CIC1Sin/SLICE_1968 ( .M1(\CIC1Sin/d6_24 ), 
    .M0(\CIC1Sin/d6_23 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_23 ), .Q1(\CIC1Sin/d_d6_24 ));
  CIC1Sin_SLICE_1969 \CIC1Sin/SLICE_1969 ( .M1(\CIC1Sin/d6_26 ), 
    .M0(\CIC1Sin/d6_25 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_25 ), .Q1(\CIC1Sin/d_d6_26 ));
  CIC1Sin_SLICE_1970 \CIC1Sin/SLICE_1970 ( .M1(\CIC1Sin/d6_28 ), 
    .M0(\CIC1Sin/d6_27 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_27 ), .Q1(\CIC1Sin/d_d6_28 ));
  CIC1Sin_SLICE_1971 \CIC1Sin/SLICE_1971 ( .M1(\CIC1Sin/d6_30 ), 
    .M0(\CIC1Sin/d6_29 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_29 ), .Q1(\CIC1Sin/d_d6_30 ));
  CIC1Sin_SLICE_1972 \CIC1Sin/SLICE_1972 ( .M1(\CIC1Sin/d6_32 ), 
    .M0(\CIC1Sin/d6_31 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_31 ), .Q1(\CIC1Sin/d_d6_32 ));
  CIC1Sin_SLICE_1973 \CIC1Sin/SLICE_1973 ( .M1(\CIC1Sin/d6_34 ), 
    .M0(\CIC1Sin/d6_33 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_33 ), .Q1(\CIC1Sin/d_d6_34 ));
  CIC1Sin_SLICE_1974 \CIC1Sin/SLICE_1974 ( .M1(\CIC1Sin/d6_36 ), 
    .M0(\CIC1Sin/d6_35 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_35 ), .Q1(\CIC1Sin/d_d6_36 ));
  CIC1Sin_SLICE_1975 \CIC1Sin/SLICE_1975 ( .M1(\CIC1Sin/d6_38 ), 
    .M0(\CIC1Sin/d6_37 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_37 ), .Q1(\CIC1Sin/d_d6_38 ));
  CIC1Sin_SLICE_1976 \CIC1Sin/SLICE_1976 ( .M1(\CIC1Sin/d6_40 ), 
    .M0(\CIC1Sin/d6_39 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_39 ), .Q1(\CIC1Sin/d_d6_40 ));
  CIC1Sin_SLICE_1977 \CIC1Sin/SLICE_1977 ( .M1(\CIC1Sin/d6_42 ), 
    .M0(\CIC1Sin/d6_41 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_41 ), .Q1(\CIC1Sin/d_d6_42 ));
  CIC1Sin_SLICE_1978 \CIC1Sin/SLICE_1978 ( .M1(\CIC1Sin/d6_44 ), 
    .M0(\CIC1Sin/d6_43 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_43 ), .Q1(\CIC1Sin/d_d6_44 ));
  CIC1Sin_SLICE_1979 \CIC1Sin/SLICE_1979 ( .M1(\CIC1Sin/d6_46 ), 
    .M0(\CIC1Sin/d6_45 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_45 ), .Q1(\CIC1Sin/d_d6_46 ));
  CIC1Sin_SLICE_1980 \CIC1Sin/SLICE_1980 ( .M1(\CIC1Sin/d6_48 ), 
    .M0(\CIC1Sin/d6_47 ), .CE(\CIC1Sin/osc_clk_enable_247 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_47 ), .Q1(\CIC1Sin/d_d6_48 ));
  CIC1Sin_SLICE_1981 \CIC1Sin/SLICE_1981 ( .M1(\CIC1Sin/d6_50 ), 
    .M0(\CIC1Sin/d6_49 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_49 ), .Q1(\CIC1Sin/d_d6_50 ));
  CIC1Sin_SLICE_1982 \CIC1Sin/SLICE_1982 ( .M1(\CIC1Sin/d6_52 ), 
    .M0(\CIC1Sin/d6_51 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_51 ), .Q1(\CIC1Sin/d_d6_52 ));
  CIC1Sin_SLICE_1983 \CIC1Sin/SLICE_1983 ( .M1(\CIC1Sin/d6_54 ), 
    .M0(\CIC1Sin/d6_53 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_53 ), .Q1(\CIC1Sin/d_d6_54 ));
  CIC1Sin_SLICE_1984 \CIC1Sin/SLICE_1984 ( .M1(\CIC1Sin/d6_56 ), 
    .M0(\CIC1Sin/d6_55 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_55 ), .Q1(\CIC1Sin/d_d6_56 ));
  CIC1Sin_SLICE_1985 \CIC1Sin/SLICE_1985 ( .M1(\CIC1Sin/d6_58 ), 
    .M0(\CIC1Sin/d6_57 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_57 ), .Q1(\CIC1Sin/d_d6_58 ));
  CIC1Sin_SLICE_1986 \CIC1Sin/SLICE_1986 ( .M1(\CIC1Sin/d6_60 ), 
    .M0(\CIC1Sin/d6_59 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_59 ), .Q1(\CIC1Sin/d_d6_60 ));
  CIC1Sin_SLICE_1987 \CIC1Sin/SLICE_1987 ( .M1(\CIC1Sin/d6_62 ), 
    .M0(\CIC1Sin/d6_61 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_61 ), .Q1(\CIC1Sin/d_d6_62 ));
  CIC1Sin_SLICE_1988 \CIC1Sin/SLICE_1988 ( .M1(\CIC1Sin/d6_64 ), 
    .M0(\CIC1Sin/d6_63 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_63 ), .Q1(\CIC1Sin/d_d6_64 ));
  CIC1Sin_SLICE_1989 \CIC1Sin/SLICE_1989 ( .M1(\CIC1Sin/d6_66 ), 
    .M0(\CIC1Sin/d6_65 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_65 ), .Q1(\CIC1Sin/d_d6_66 ));
  CIC1Sin_SLICE_1990 \CIC1Sin/SLICE_1990 ( .M1(\CIC1Sin/d6_68 ), 
    .M0(\CIC1Sin/d6_67 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_67 ), .Q1(\CIC1Sin/d_d6_68 ));
  CIC1Sin_SLICE_1991 \CIC1Sin/SLICE_1991 ( .M1(\CIC1Sin/d6_70 ), 
    .M0(\CIC1Sin/d6_69 ), .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d6_69 ), .Q1(\CIC1Sin/d_d6_70 ));
  CIC1Sin_SLICE_1992 \CIC1Sin/SLICE_1992 ( .M0(\CIC1Sin/d6_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_297 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d6_71 ));
  CIC1Sin_SLICE_1993 \CIC1Sin/SLICE_1993 ( .M0(\CIC1Sin/d7_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d7_0 ));
  CIC1Sin_SLICE_1994 \CIC1Sin/SLICE_1994 ( .M1(\CIC1Sin/d7_2 ), 
    .M0(\CIC1Sin/d7_1 ), .CE(\CIC1Sin/osc_clk_enable_347 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_1 ), .Q1(\CIC1Sin/d_d7_2 ));
  CIC1Sin_SLICE_1995 \CIC1Sin/SLICE_1995 ( .M1(\CIC1Sin/d7_4 ), 
    .M0(\CIC1Sin/d7_3 ), .CE(\CIC1Sin/osc_clk_enable_347 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_3 ), .Q1(\CIC1Sin/d_d7_4 ));
  CIC1Sin_SLICE_1996 \CIC1Sin/SLICE_1996 ( .M1(\CIC1Sin/d7_6 ), 
    .M0(\CIC1Sin/d7_5 ), .CE(\CIC1Sin/osc_clk_enable_347 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_5 ), .Q1(\CIC1Sin/d_d7_6 ));
  CIC1Sin_SLICE_1997 \CIC1Sin/SLICE_1997 ( .M1(\CIC1Sin/d7_8 ), 
    .M0(\CIC1Sin/d7_7 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_7 ), .Q1(\CIC1Sin/d_d7_8 ));
  CIC1Sin_SLICE_1998 \CIC1Sin/SLICE_1998 ( .M1(\CIC1Sin/d7_10 ), 
    .M0(\CIC1Sin/d7_9 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_9 ), .Q1(\CIC1Sin/d_d7_10 ));
  CIC1Sin_SLICE_1999 \CIC1Sin/SLICE_1999 ( .M1(\CIC1Sin/d7_12 ), 
    .M0(\CIC1Sin/d7_11 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_11 ), .Q1(\CIC1Sin/d_d7_12 ));
  CIC1Sin_SLICE_2000 \CIC1Sin/SLICE_2000 ( .M1(\CIC1Sin/d7_14 ), 
    .M0(\CIC1Sin/d7_13 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_13 ), .Q1(\CIC1Sin/d_d7_14 ));
  CIC1Sin_SLICE_2001 \CIC1Sin/SLICE_2001 ( .M1(\CIC1Sin/d7_16 ), 
    .M0(\CIC1Sin/d7_15 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_15 ), .Q1(\CIC1Sin/d_d7_16 ));
  CIC1Sin_SLICE_2002 \CIC1Sin/SLICE_2002 ( .M1(\CIC1Sin/d7_18 ), 
    .M0(\CIC1Sin/d7_17 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_17 ), .Q1(\CIC1Sin/d_d7_18 ));
  CIC1Sin_SLICE_2003 \CIC1Sin/SLICE_2003 ( .M1(\CIC1Sin/d7_20 ), 
    .M0(\CIC1Sin/d7_19 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_19 ), .Q1(\CIC1Sin/d_d7_20 ));
  CIC1Sin_SLICE_2004 \CIC1Sin/SLICE_2004 ( .M1(\CIC1Sin/d7_22 ), 
    .M0(\CIC1Sin/d7_21 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_21 ), .Q1(\CIC1Sin/d_d7_22 ));
  CIC1Sin_SLICE_2005 \CIC1Sin/SLICE_2005 ( .M1(\CIC1Sin/d7_24 ), 
    .M0(\CIC1Sin/d7_23 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_23 ), .Q1(\CIC1Sin/d_d7_24 ));
  CIC1Sin_SLICE_2006 \CIC1Sin/SLICE_2006 ( .M1(\CIC1Sin/d7_26 ), 
    .M0(\CIC1Sin/d7_25 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_25 ), .Q1(\CIC1Sin/d_d7_26 ));
  CIC1Sin_SLICE_2007 \CIC1Sin/SLICE_2007 ( .M1(\CIC1Sin/d7_28 ), 
    .M0(\CIC1Sin/d7_27 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_27 ), .Q1(\CIC1Sin/d_d7_28 ));
  CIC1Sin_SLICE_2008 \CIC1Sin/SLICE_2008 ( .M1(\CIC1Sin/d7_30 ), 
    .M0(\CIC1Sin/d7_29 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_29 ), .Q1(\CIC1Sin/d_d7_30 ));
  CIC1Sin_SLICE_2009 \CIC1Sin/SLICE_2009 ( .M1(\CIC1Sin/d7_32 ), 
    .M0(\CIC1Sin/d7_31 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_31 ), .Q1(\CIC1Sin/d_d7_32 ));
  CIC1Sin_SLICE_2010 \CIC1Sin/SLICE_2010 ( .M1(\CIC1Sin/d7_34 ), 
    .M0(\CIC1Sin/d7_33 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_33 ), .Q1(\CIC1Sin/d_d7_34 ));
  CIC1Sin_SLICE_2011 \CIC1Sin/SLICE_2011 ( .M1(\CIC1Sin/d7_36 ), 
    .M0(\CIC1Sin/d7_35 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_35 ), .Q1(\CIC1Sin/d_d7_36 ));
  CIC1Sin_SLICE_2012 \CIC1Sin/SLICE_2012 ( .M1(\CIC1Sin/d7_38 ), 
    .M0(\CIC1Sin/d7_37 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_37 ), .Q1(\CIC1Sin/d_d7_38 ));
  CIC1Sin_SLICE_2013 \CIC1Sin/SLICE_2013 ( .M1(\CIC1Sin/d7_40 ), 
    .M0(\CIC1Sin/d7_39 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_39 ), .Q1(\CIC1Sin/d_d7_40 ));
  CIC1Sin_SLICE_2014 \CIC1Sin/SLICE_2014 ( .M1(\CIC1Sin/d7_42 ), 
    .M0(\CIC1Sin/d7_41 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_41 ), .Q1(\CIC1Sin/d_d7_42 ));
  CIC1Sin_SLICE_2015 \CIC1Sin/SLICE_2015 ( .M1(\CIC1Sin/d7_44 ), 
    .M0(\CIC1Sin/d7_43 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_43 ), .Q1(\CIC1Sin/d_d7_44 ));
  CIC1Sin_SLICE_2016 \CIC1Sin/SLICE_2016 ( .M1(\CIC1Sin/d7_46 ), 
    .M0(\CIC1Sin/d7_45 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_45 ), .Q1(\CIC1Sin/d_d7_46 ));
  CIC1Sin_SLICE_2017 \CIC1Sin/SLICE_2017 ( .M1(\CIC1Sin/d7_48 ), 
    .M0(\CIC1Sin/d7_47 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_47 ), .Q1(\CIC1Sin/d_d7_48 ));
  CIC1Sin_SLICE_2018 \CIC1Sin/SLICE_2018 ( .M1(\CIC1Sin/d7_50 ), 
    .M0(\CIC1Sin/d7_49 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_49 ), .Q1(\CIC1Sin/d_d7_50 ));
  CIC1Sin_SLICE_2019 \CIC1Sin/SLICE_2019 ( .M1(\CIC1Sin/d7_52 ), 
    .M0(\CIC1Sin/d7_51 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_51 ), .Q1(\CIC1Sin/d_d7_52 ));
  CIC1Sin_SLICE_2020 \CIC1Sin/SLICE_2020 ( .M1(\CIC1Sin/d7_54 ), 
    .M0(\CIC1Sin/d7_53 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_53 ), .Q1(\CIC1Sin/d_d7_54 ));
  CIC1Sin_SLICE_2021 \CIC1Sin/SLICE_2021 ( .M1(\CIC1Sin/d7_56 ), 
    .M0(\CIC1Sin/d7_55 ), .CE(\CIC1Sin/osc_clk_enable_397 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_55 ), .Q1(\CIC1Sin/d_d7_56 ));
  CIC1Sin_SLICE_2022 \CIC1Sin/SLICE_2022 ( .M1(\CIC1Sin/d7_58 ), 
    .M0(\CIC1Sin/d7_57 ), .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_57 ), .Q1(\CIC1Sin/d_d7_58 ));
  CIC1Sin_SLICE_2023 \CIC1Sin/SLICE_2023 ( .M1(\CIC1Sin/d7_60 ), 
    .M0(\CIC1Sin/d7_59 ), .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_59 ), .Q1(\CIC1Sin/d_d7_60 ));
  CIC1Sin_SLICE_2024 \CIC1Sin/SLICE_2024 ( .M1(\CIC1Sin/d7_62 ), 
    .M0(\CIC1Sin/d7_61 ), .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_61 ), .Q1(\CIC1Sin/d_d7_62 ));
  CIC1Sin_SLICE_2025 \CIC1Sin/SLICE_2025 ( .M1(\CIC1Sin/d7_64 ), 
    .M0(\CIC1Sin/d7_63 ), .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_63 ), .Q1(\CIC1Sin/d_d7_64 ));
  CIC1Sin_SLICE_2026 \CIC1Sin/SLICE_2026 ( .M1(\CIC1Sin/d7_66 ), 
    .M0(\CIC1Sin/d7_65 ), .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_65 ), .Q1(\CIC1Sin/d_d7_66 ));
  CIC1Sin_SLICE_2027 \CIC1Sin/SLICE_2027 ( .M1(\CIC1Sin/d7_68 ), 
    .M0(\CIC1Sin/d7_67 ), .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_67 ), .Q1(\CIC1Sin/d_d7_68 ));
  CIC1Sin_SLICE_2028 \CIC1Sin/SLICE_2028 ( .M1(\CIC1Sin/d7_70 ), 
    .M0(\CIC1Sin/d7_69 ), .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d7_69 ), .Q1(\CIC1Sin/d_d7_70 ));
  CIC1Sin_SLICE_2029 \CIC1Sin/SLICE_2029 ( .M0(\CIC1Sin/d7_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_447 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d7_71 ));
  CIC1Sin_SLICE_2030 \CIC1Sin/SLICE_2030 ( .M0(\CIC1Sin/d8_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d8_0 ));
  CIC1Sin_SLICE_2031 \CIC1Sin/SLICE_2031 ( .M1(\CIC1Sin/d8_2 ), 
    .M0(\CIC1Sin/d8_1 ), .CE(\CIC1Sin/osc_clk_enable_497 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_1 ), .Q1(\CIC1Sin/d_d8_2 ));
  CIC1Sin_SLICE_2032 \CIC1Sin/SLICE_2032 ( .M1(\CIC1Sin/d8_4 ), 
    .M0(\CIC1Sin/d8_3 ), .CE(\CIC1Sin/osc_clk_enable_497 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_3 ), .Q1(\CIC1Sin/d_d8_4 ));
  CIC1Sin_SLICE_2033 \CIC1Sin/SLICE_2033 ( .M1(\CIC1Sin/d8_6 ), 
    .M0(\CIC1Sin/d8_5 ), .CE(\CIC1Sin/osc_clk_enable_497 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_5 ), .Q1(\CIC1Sin/d_d8_6 ));
  CIC1Sin_SLICE_2034 \CIC1Sin/SLICE_2034 ( .M1(\CIC1Sin/d8_8 ), 
    .M0(\CIC1Sin/d8_7 ), .CE(\CIC1Sin/osc_clk_enable_497 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_7 ), .Q1(\CIC1Sin/d_d8_8 ));
  CIC1Sin_SLICE_2035 \CIC1Sin/SLICE_2035 ( .M1(\CIC1Sin/d8_10 ), 
    .M0(\CIC1Sin/d8_9 ), .CE(\CIC1Sin/osc_clk_enable_497 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_9 ), .Q1(\CIC1Sin/d_d8_10 ));
  CIC1Sin_SLICE_2036 \CIC1Sin/SLICE_2036 ( .M1(\CIC1Sin/d8_12 ), 
    .M0(\CIC1Sin/d8_11 ), .CE(\CIC1Sin/osc_clk_enable_497 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_11 ), .Q1(\CIC1Sin/d_d8_12 ));
  CIC1Sin_SLICE_2037 \CIC1Sin/SLICE_2037 ( .M1(\CIC1Sin/d8_14 ), 
    .M0(\CIC1Sin/d8_13 ), .CE(\CIC1Sin/osc_clk_enable_497 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_13 ), .Q1(\CIC1Sin/d_d8_14 ));
  CIC1Sin_SLICE_2038 \CIC1Sin/SLICE_2038 ( .M1(\CIC1Sin/d8_16 ), 
    .M0(\CIC1Sin/d8_15 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_15 ), .Q1(\CIC1Sin/d_d8_16 ));
  CIC1Sin_SLICE_2039 \CIC1Sin/SLICE_2039 ( .M1(\CIC1Sin/d8_18 ), 
    .M0(\CIC1Sin/d8_17 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_17 ), .Q1(\CIC1Sin/d_d8_18 ));
  CIC1Sin_SLICE_2040 \CIC1Sin/SLICE_2040 ( .M1(\CIC1Sin/d8_20 ), 
    .M0(\CIC1Sin/d8_19 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_19 ), .Q1(\CIC1Sin/d_d8_20 ));
  CIC1Sin_SLICE_2041 \CIC1Sin/SLICE_2041 ( .M1(\CIC1Sin/d8_22 ), 
    .M0(\CIC1Sin/d8_21 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_21 ), .Q1(\CIC1Sin/d_d8_22 ));
  CIC1Sin_SLICE_2042 \CIC1Sin/SLICE_2042 ( .M1(\CIC1Sin/d8_24 ), 
    .M0(\CIC1Sin/d8_23 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_23 ), .Q1(\CIC1Sin/d_d8_24 ));
  CIC1Sin_SLICE_2043 \CIC1Sin/SLICE_2043 ( .M1(\CIC1Sin/d8_26 ), 
    .M0(\CIC1Sin/d8_25 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_25 ), .Q1(\CIC1Sin/d_d8_26 ));
  CIC1Sin_SLICE_2044 \CIC1Sin/SLICE_2044 ( .M1(\CIC1Sin/d8_28 ), 
    .M0(\CIC1Sin/d8_27 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_27 ), .Q1(\CIC1Sin/d_d8_28 ));
  CIC1Sin_SLICE_2045 \CIC1Sin/SLICE_2045 ( .M1(\CIC1Sin/d8_30 ), 
    .M0(\CIC1Sin/d8_29 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_29 ), .Q1(\CIC1Sin/d_d8_30 ));
  CIC1Sin_SLICE_2046 \CIC1Sin/SLICE_2046 ( .M1(\CIC1Sin/d8_32 ), 
    .M0(\CIC1Sin/d8_31 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_31 ), .Q1(\CIC1Sin/d_d8_32 ));
  CIC1Sin_SLICE_2047 \CIC1Sin/SLICE_2047 ( .M1(\CIC1Sin/d8_34 ), 
    .M0(\CIC1Sin/d8_33 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_33 ), .Q1(\CIC1Sin/d_d8_34 ));
  CIC1Sin_SLICE_2048 \CIC1Sin/SLICE_2048 ( .M1(\CIC1Sin/d8_36 ), 
    .M0(\CIC1Sin/d8_35 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_35 ), .Q1(\CIC1Sin/d_d8_36 ));
  CIC1Sin_SLICE_2049 \CIC1Sin/SLICE_2049 ( .M1(\CIC1Sin/d8_38 ), 
    .M0(\CIC1Sin/d8_37 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_37 ), .Q1(\CIC1Sin/d_d8_38 ));
  CIC1Sin_SLICE_2050 \CIC1Sin/SLICE_2050 ( .M1(\CIC1Sin/d8_40 ), 
    .M0(\CIC1Sin/d8_39 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_39 ), .Q1(\CIC1Sin/d_d8_40 ));
  CIC1Sin_SLICE_2051 \CIC1Sin/SLICE_2051 ( .M1(\CIC1Sin/d8_42 ), 
    .M0(\CIC1Sin/d8_41 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_41 ), .Q1(\CIC1Sin/d_d8_42 ));
  CIC1Sin_SLICE_2052 \CIC1Sin/SLICE_2052 ( .M1(\CIC1Sin/d8_44 ), 
    .M0(\CIC1Sin/d8_43 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_43 ), .Q1(\CIC1Sin/d_d8_44 ));
  CIC1Sin_SLICE_2053 \CIC1Sin/SLICE_2053 ( .M1(\CIC1Sin/d8_46 ), 
    .M0(\CIC1Sin/d8_45 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_45 ), .Q1(\CIC1Sin/d_d8_46 ));
  CIC1Sin_SLICE_2054 \CIC1Sin/SLICE_2054 ( .M1(\CIC1Sin/d8_48 ), 
    .M0(\CIC1Sin/d8_47 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_47 ), .Q1(\CIC1Sin/d_d8_48 ));
  CIC1Sin_SLICE_2055 \CIC1Sin/SLICE_2055 ( .M1(\CIC1Sin/d8_50 ), 
    .M0(\CIC1Sin/d8_49 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_49 ), .Q1(\CIC1Sin/d_d8_50 ));
  CIC1Sin_SLICE_2056 \CIC1Sin/SLICE_2056 ( .M1(\CIC1Sin/d8_52 ), 
    .M0(\CIC1Sin/d8_51 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_51 ), .Q1(\CIC1Sin/d_d8_52 ));
  CIC1Sin_SLICE_2057 \CIC1Sin/SLICE_2057 ( .M1(\CIC1Sin/d8_54 ), 
    .M0(\CIC1Sin/d8_53 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_53 ), .Q1(\CIC1Sin/d_d8_54 ));
  CIC1Sin_SLICE_2058 \CIC1Sin/SLICE_2058 ( .M1(\CIC1Sin/d8_56 ), 
    .M0(\CIC1Sin/d8_55 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_55 ), .Q1(\CIC1Sin/d_d8_56 ));
  CIC1Sin_SLICE_2059 \CIC1Sin/SLICE_2059 ( .M1(\CIC1Sin/d8_58 ), 
    .M0(\CIC1Sin/d8_57 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_57 ), .Q1(\CIC1Sin/d_d8_58 ));
  CIC1Sin_SLICE_2060 \CIC1Sin/SLICE_2060 ( .M1(\CIC1Sin/d8_60 ), 
    .M0(\CIC1Sin/d8_59 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_59 ), .Q1(\CIC1Sin/d_d8_60 ));
  CIC1Sin_SLICE_2061 \CIC1Sin/SLICE_2061 ( .M1(\CIC1Sin/d8_62 ), 
    .M0(\CIC1Sin/d8_61 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_61 ), .Q1(\CIC1Sin/d_d8_62 ));
  CIC1Sin_SLICE_2062 \CIC1Sin/SLICE_2062 ( .M1(\CIC1Sin/d8_64 ), 
    .M0(\CIC1Sin/d8_63 ), .CE(\CIC1Sin/osc_clk_enable_547 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_63 ), .Q1(\CIC1Sin/d_d8_64 ));
  CIC1Sin_SLICE_2063 \CIC1Sin/SLICE_2063 ( .M1(\CIC1Sin/d8_66 ), 
    .M0(\CIC1Sin/d8_65 ), .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_65 ), .Q1(\CIC1Sin/d_d8_66 ));
  CIC1Sin_SLICE_2064 \CIC1Sin/SLICE_2064 ( .M1(\CIC1Sin/d8_68 ), 
    .M0(\CIC1Sin/d8_67 ), .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_67 ), .Q1(\CIC1Sin/d_d8_68 ));
  CIC1Sin_SLICE_2065 \CIC1Sin/SLICE_2065 ( .M1(\CIC1Sin/d8_70 ), 
    .M0(\CIC1Sin/d8_69 ), .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d8_69 ), .Q1(\CIC1Sin/d_d8_70 ));
  CIC1Sin_SLICE_2066 \CIC1Sin/SLICE_2066 ( .M0(\CIC1Sin/d8_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_597 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d8_71 ));
  CIC1Sin_SLICE_2067 \CIC1Sin/SLICE_2067 ( .M0(\CIC1Sin/d9_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d9_0 ));
  CIC1Sin_SLICE_2068 \CIC1Sin/SLICE_2068 ( .M1(\CIC1Sin/d9_2 ), 
    .M0(\CIC1Sin/d9_1 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_1 ), .Q1(\CIC1Sin/d_d9_2 ));
  CIC1Sin_SLICE_2069 \CIC1Sin/SLICE_2069 ( .M1(\CIC1Sin/d9_4 ), 
    .M0(\CIC1Sin/d9_3 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_3 ), .Q1(\CIC1Sin/d_d9_4 ));
  CIC1Sin_SLICE_2070 \CIC1Sin/SLICE_2070 ( .M1(\CIC1Sin/d9_6 ), 
    .M0(\CIC1Sin/d9_5 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_5 ), .Q1(\CIC1Sin/d_d9_6 ));
  CIC1Sin_SLICE_2071 \CIC1Sin/SLICE_2071 ( .M1(\CIC1Sin/d9_8 ), 
    .M0(\CIC1Sin/d9_7 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_7 ), .Q1(\CIC1Sin/d_d9_8 ));
  CIC1Sin_SLICE_2072 \CIC1Sin/SLICE_2072 ( .M1(\CIC1Sin/d9_10 ), 
    .M0(\CIC1Sin/d9_9 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_9 ), .Q1(\CIC1Sin/d_d9_10 ));
  CIC1Sin_SLICE_2073 \CIC1Sin/SLICE_2073 ( .M1(\CIC1Sin/d9_12 ), 
    .M0(\CIC1Sin/d9_11 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_11 ), .Q1(\CIC1Sin/d_d9_12 ));
  CIC1Sin_SLICE_2074 \CIC1Sin/SLICE_2074 ( .M1(\CIC1Sin/d9_14 ), 
    .M0(\CIC1Sin/d9_13 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_13 ), .Q1(\CIC1Sin/d_d9_14 ));
  CIC1Sin_SLICE_2075 \CIC1Sin/SLICE_2075 ( .M1(\CIC1Sin/d9_16 ), 
    .M0(\CIC1Sin/d9_15 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_15 ), .Q1(\CIC1Sin/d_d9_16 ));
  CIC1Sin_SLICE_2076 \CIC1Sin/SLICE_2076 ( .M1(\CIC1Sin/d9_18 ), 
    .M0(\CIC1Sin/d9_17 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_17 ), .Q1(\CIC1Sin/d_d9_18 ));
  CIC1Sin_SLICE_2077 \CIC1Sin/SLICE_2077 ( .M1(\CIC1Sin/d9_20 ), 
    .M0(\CIC1Sin/d9_19 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_19 ), .Q1(\CIC1Sin/d_d9_20 ));
  CIC1Sin_SLICE_2078 \CIC1Sin/SLICE_2078 ( .M1(\CIC1Sin/d9_22 ), 
    .M0(\CIC1Sin/d9_21 ), .CE(\CIC1Sin/osc_clk_enable_647 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_21 ), .Q1(\CIC1Sin/d_d9_22 ));
  CIC1Sin_SLICE_2079 \CIC1Sin/SLICE_2079 ( .M1(\CIC1Sin/d9_24 ), 
    .M0(\CIC1Sin/d9_23 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_23 ), .Q1(\CIC1Sin/d_d9_24 ));
  CIC1Sin_SLICE_2080 \CIC1Sin/SLICE_2080 ( .M1(\CIC1Sin/d9_26 ), 
    .M0(\CIC1Sin/d9_25 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_25 ), .Q1(\CIC1Sin/d_d9_26 ));
  CIC1Sin_SLICE_2081 \CIC1Sin/SLICE_2081 ( .M1(\CIC1Sin/d9_28 ), 
    .M0(\CIC1Sin/d9_27 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_27 ), .Q1(\CIC1Sin/d_d9_28 ));
  CIC1Sin_SLICE_2082 \CIC1Sin/SLICE_2082 ( .M1(\CIC1Sin/d9_30 ), 
    .M0(\CIC1Sin/d9_29 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_29 ), .Q1(\CIC1Sin/d_d9_30 ));
  CIC1Sin_SLICE_2083 \CIC1Sin/SLICE_2083 ( .M1(\CIC1Sin/d9_32 ), 
    .M0(\CIC1Sin/d9_31 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_31 ), .Q1(\CIC1Sin/d_d9_32 ));
  CIC1Sin_SLICE_2084 \CIC1Sin/SLICE_2084 ( .M1(\CIC1Sin/d9_34 ), 
    .M0(\CIC1Sin/d9_33 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_33 ), .Q1(\CIC1Sin/d_d9_34 ));
  CIC1Sin_SLICE_2085 \CIC1Sin/SLICE_2085 ( .M1(\CIC1Sin/d9_36 ), 
    .M0(\CIC1Sin/d9_35 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_35 ), .Q1(\CIC1Sin/d_d9_36 ));
  CIC1Sin_SLICE_2086 \CIC1Sin/SLICE_2086 ( .M1(\CIC1Sin/d9_38 ), 
    .M0(\CIC1Sin/d9_37 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_37 ), .Q1(\CIC1Sin/d_d9_38 ));
  CIC1Sin_SLICE_2087 \CIC1Sin/SLICE_2087 ( .M1(\CIC1Sin/d9_40 ), 
    .M0(\CIC1Sin/d9_39 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_39 ), .Q1(\CIC1Sin/d_d9_40 ));
  CIC1Sin_SLICE_2088 \CIC1Sin/SLICE_2088 ( .M1(\CIC1Sin/d9_42 ), 
    .M0(\CIC1Sin/d9_41 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_41 ), .Q1(\CIC1Sin/d_d9_42 ));
  CIC1Sin_SLICE_2089 \CIC1Sin/SLICE_2089 ( .M1(\CIC1Sin/d9_44 ), 
    .M0(\CIC1Sin/d9_43 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_43 ), .Q1(\CIC1Sin/d_d9_44 ));
  CIC1Sin_SLICE_2090 \CIC1Sin/SLICE_2090 ( .M1(\CIC1Sin/d9_46 ), 
    .M0(\CIC1Sin/d9_45 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_45 ), .Q1(\CIC1Sin/d_d9_46 ));
  CIC1Sin_SLICE_2091 \CIC1Sin/SLICE_2091 ( .M1(\CIC1Sin/d9_48 ), 
    .M0(\CIC1Sin/d9_47 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_47 ), .Q1(\CIC1Sin/d_d9_48 ));
  CIC1Sin_SLICE_2092 \CIC1Sin/SLICE_2092 ( .M1(\CIC1Sin/d9_50 ), 
    .M0(\CIC1Sin/d9_49 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_49 ), .Q1(\CIC1Sin/d_d9_50 ));
  CIC1Sin_SLICE_2093 \CIC1Sin/SLICE_2093 ( .M1(\CIC1Sin/d9_52 ), 
    .M0(\CIC1Sin/d9_51 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_51 ), .Q1(\CIC1Sin/d_d9_52 ));
  CIC1Sin_SLICE_2094 \CIC1Sin/SLICE_2094 ( .M1(\CIC1Sin/d9_54 ), 
    .M0(\CIC1Sin/d9_53 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_53 ), .Q1(\CIC1Sin/d_d9_54 ));
  CIC1Sin_SLICE_2095 \CIC1Sin/SLICE_2095 ( .M1(\CIC1Sin/d9_56 ), 
    .M0(\CIC1Sin/d9_55 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_55 ), .Q1(\CIC1Sin/d_d9_56 ));
  CIC1Sin_SLICE_2096 \CIC1Sin/SLICE_2096 ( .M1(\CIC1Sin/d9_58 ), 
    .M0(\CIC1Sin/d9_57 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_57 ), .Q1(\CIC1Sin/d_d9_58 ));
  CIC1Sin_SLICE_2097 \CIC1Sin/SLICE_2097 ( .M1(\CIC1Sin/d9_60 ), 
    .M0(\CIC1Sin/d9_59 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_59 ), .Q1(\CIC1Sin/d_d9_60 ));
  CIC1Sin_SLICE_2098 \CIC1Sin/SLICE_2098 ( .M1(\CIC1Sin/d9_62 ), 
    .M0(\CIC1Sin/d9_61 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_61 ), .Q1(\CIC1Sin/d_d9_62 ));
  CIC1Sin_SLICE_2099 \CIC1Sin/SLICE_2099 ( .M1(\CIC1Sin/d9_64 ), 
    .M0(\CIC1Sin/d9_63 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_63 ), .Q1(\CIC1Sin/d_d9_64 ));
  CIC1Sin_SLICE_2100 \CIC1Sin/SLICE_2100 ( .M1(\CIC1Sin/d9_66 ), 
    .M0(\CIC1Sin/d9_65 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_65 ), .Q1(\CIC1Sin/d_d9_66 ));
  CIC1Sin_SLICE_2101 \CIC1Sin/SLICE_2101 ( .M1(\CIC1Sin/d9_68 ), 
    .M0(\CIC1Sin/d9_67 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_67 ), .Q1(\CIC1Sin/d_d9_68 ));
  CIC1Sin_SLICE_2102 \CIC1Sin/SLICE_2102 ( .M1(\CIC1Sin/d9_70 ), 
    .M0(\CIC1Sin/d9_69 ), .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d9_69 ), .Q1(\CIC1Sin/d_d9_70 ));
  CIC1Sin_SLICE_2103 \CIC1Sin/SLICE_2103 ( .M0(\CIC1Sin/d9_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_697 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d9_71 ));
  CIC1Sin_SLICE_2104 \CIC1Sin/SLICE_2104 ( .M0(\CIC1Sin/d_tmp_0 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d_tmp_0 ));
  CIC1Sin_SLICE_2105 \CIC1Sin/SLICE_2105 ( .M1(\CIC1Sin/d_tmp_2 ), 
    .M0(\CIC1Sin/d_tmp_1 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_1 ), .Q1(\CIC1Sin/d_d_tmp_2 ));
  CIC1Sin_SLICE_2106 \CIC1Sin/SLICE_2106 ( .M1(\CIC1Sin/d_tmp_4 ), 
    .M0(\CIC1Sin/d_tmp_3 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_3 ), .Q1(\CIC1Sin/d_d_tmp_4 ));
  CIC1Sin_SLICE_2107 \CIC1Sin/SLICE_2107 ( .M1(\CIC1Sin/d_tmp_6 ), 
    .M0(\CIC1Sin/d_tmp_5 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_5 ), .Q1(\CIC1Sin/d_d_tmp_6 ));
  CIC1Sin_SLICE_2108 \CIC1Sin/SLICE_2108 ( .M1(\CIC1Sin/d_tmp_8 ), 
    .M0(\CIC1Sin/d_tmp_7 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_7 ), .Q1(\CIC1Sin/d_d_tmp_8 ));
  CIC1Sin_SLICE_2109 \CIC1Sin/SLICE_2109 ( .M1(\CIC1Sin/d_tmp_10 ), 
    .M0(\CIC1Sin/d_tmp_9 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_9 ), .Q1(\CIC1Sin/d_d_tmp_10 ));
  CIC1Sin_SLICE_2110 \CIC1Sin/SLICE_2110 ( .M1(\CIC1Sin/d_tmp_12 ), 
    .M0(\CIC1Sin/d_tmp_11 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_11 ), .Q1(\CIC1Sin/d_d_tmp_12 ));
  CIC1Sin_SLICE_2111 \CIC1Sin/SLICE_2111 ( .M1(\CIC1Sin/d_tmp_14 ), 
    .M0(\CIC1Sin/d_tmp_13 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_13 ), .Q1(\CIC1Sin/d_d_tmp_14 ));
  CIC1Sin_SLICE_2112 \CIC1Sin/SLICE_2112 ( .M1(\CIC1Sin/d_tmp_16 ), 
    .M0(\CIC1Sin/d_tmp_15 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_15 ), .Q1(\CIC1Sin/d_d_tmp_16 ));
  CIC1Sin_SLICE_2113 \CIC1Sin/SLICE_2113 ( .M1(\CIC1Sin/d_tmp_18 ), 
    .M0(\CIC1Sin/d_tmp_17 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_17 ), .Q1(\CIC1Sin/d_d_tmp_18 ));
  CIC1Sin_SLICE_2114 \CIC1Sin/SLICE_2114 ( .M1(\CIC1Sin/d_tmp_20 ), 
    .M0(\CIC1Sin/d_tmp_19 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_19 ), .Q1(\CIC1Sin/d_d_tmp_20 ));
  CIC1Sin_SLICE_2115 \CIC1Sin/SLICE_2115 ( .M1(\CIC1Sin/d_tmp_22 ), 
    .M0(\CIC1Sin/d_tmp_21 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_21 ), .Q1(\CIC1Sin/d_d_tmp_22 ));
  CIC1Sin_SLICE_2116 \CIC1Sin/SLICE_2116 ( .M1(\CIC1Sin/d_tmp_24 ), 
    .M0(\CIC1Sin/d_tmp_23 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_23 ), .Q1(\CIC1Sin/d_d_tmp_24 ));
  CIC1Sin_SLICE_2117 \CIC1Sin/SLICE_2117 ( .M0(\CIC1Sin/d_tmp_25 ), 
    .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_25 ));
  CIC1Sin_SLICE_2118 \CIC1Sin/SLICE_2118 ( .M1(\CIC1Sin/d_tmp_27 ), 
    .M0(\CIC1Sin/d_tmp_26 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_26 ), .Q1(\CIC1Sin/d_d_tmp_27 ));
  CIC1Sin_SLICE_2119 \CIC1Sin/SLICE_2119 ( .M1(\CIC1Sin/d_tmp_29 ), 
    .M0(\CIC1Sin/d_tmp_28 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_28 ), .Q1(\CIC1Sin/d_d_tmp_29 ));
  CIC1Sin_SLICE_2120 \CIC1Sin/SLICE_2120 ( .M1(\CIC1Sin/d_tmp_31 ), 
    .M0(\CIC1Sin/d_tmp_30 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_30 ), .Q1(\CIC1Sin/d_d_tmp_31 ));
  CIC1Sin_SLICE_2121 \CIC1Sin/SLICE_2121 ( .M0(\CIC1Sin/d_tmp_32 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d_tmp_32 ));
  CIC1Sin_SLICE_2122 \CIC1Sin/SLICE_2122 ( .M1(\CIC1Sin/d_tmp_34 ), 
    .M0(\CIC1Sin/d_tmp_33 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_33 ), .Q1(\CIC1Sin/d_d_tmp_34 ));
  CIC1Sin_SLICE_2123 \CIC1Sin/SLICE_2123 ( .M1(\CIC1Sin/d_tmp_36 ), 
    .M0(\CIC1Sin/d_tmp_35 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_35 ), .Q1(\CIC1Sin/d_d_tmp_36 ));
  CIC1Sin_SLICE_2124 \CIC1Sin/SLICE_2124 ( .M1(\CIC1Sin/d_tmp_38 ), 
    .M0(\CIC1Sin/d_tmp_37 ), .CE(\CIC1Sin/osc_clk_enable_147 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_37 ), .Q1(\CIC1Sin/d_d_tmp_38 ));
  CIC1Sin_SLICE_2125 \CIC1Sin/SLICE_2125 ( .M1(\CIC1Sin/d_tmp_40 ), 
    .M0(\CIC1Sin/d_tmp_39 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_39 ), .Q1(\CIC1Sin/d_d_tmp_40 ));
  CIC1Sin_SLICE_2126 \CIC1Sin/SLICE_2126 ( .M1(\CIC1Sin/d_tmp_42 ), 
    .M0(\CIC1Sin/d_tmp_41 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_41 ), .Q1(\CIC1Sin/d_d_tmp_42 ));
  CIC1Sin_SLICE_2127 \CIC1Sin/SLICE_2127 ( .M1(\CIC1Sin/d_tmp_44 ), 
    .M0(\CIC1Sin/d_tmp_43 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_43 ), .Q1(\CIC1Sin/d_d_tmp_44 ));
  CIC1Sin_SLICE_2128 \CIC1Sin/SLICE_2128 ( .M1(\CIC1Sin/d_tmp_46 ), 
    .M0(\CIC1Sin/d_tmp_45 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_45 ), .Q1(\CIC1Sin/d_d_tmp_46 ));
  CIC1Sin_SLICE_2129 \CIC1Sin/SLICE_2129 ( .M1(\CIC1Sin/d_tmp_48 ), 
    .M0(\CIC1Sin/d_tmp_47 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_47 ), .Q1(\CIC1Sin/d_d_tmp_48 ));
  CIC1Sin_SLICE_2130 \CIC1Sin/SLICE_2130 ( .M1(\CIC1Sin/d_tmp_50 ), 
    .M0(\CIC1Sin/d_tmp_49 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_49 ), .Q1(\CIC1Sin/d_d_tmp_50 ));
  CIC1Sin_SLICE_2131 \CIC1Sin/SLICE_2131 ( .M1(\CIC1Sin/d_tmp_52 ), 
    .M0(\CIC1Sin/d_tmp_51 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_51 ), .Q1(\CIC1Sin/d_d_tmp_52 ));
  CIC1Sin_SLICE_2132 \CIC1Sin/SLICE_2132 ( .M1(\CIC1Sin/d_tmp_54 ), 
    .M0(\CIC1Sin/d_tmp_53 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_53 ), .Q1(\CIC1Sin/d_d_tmp_54 ));
  CIC1Sin_SLICE_2133 \CIC1Sin/SLICE_2133 ( .M1(\CIC1Sin/d_tmp_56 ), 
    .M0(\CIC1Sin/d_tmp_55 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_55 ), .Q1(\CIC1Sin/d_d_tmp_56 ));
  CIC1Sin_SLICE_2134 \CIC1Sin/SLICE_2134 ( .M1(\CIC1Sin/d_tmp_58 ), 
    .M0(\CIC1Sin/d_tmp_57 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_57 ), .Q1(\CIC1Sin/d_d_tmp_58 ));
  CIC1Sin_SLICE_2135 \CIC1Sin/SLICE_2135 ( .M1(\CIC1Sin/d_tmp_60 ), 
    .M0(\CIC1Sin/d_tmp_59 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_59 ), .Q1(\CIC1Sin/d_d_tmp_60 ));
  CIC1Sin_SLICE_2136 \CIC1Sin/SLICE_2136 ( .M1(\CIC1Sin/d_tmp_62 ), 
    .M0(\CIC1Sin/d_tmp_61 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_61 ), .Q1(\CIC1Sin/d_d_tmp_62 ));
  CIC1Sin_SLICE_2137 \CIC1Sin/SLICE_2137 ( .M1(\CIC1Sin/d_tmp_64 ), 
    .M0(\CIC1Sin/d_tmp_63 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_63 ), .Q1(\CIC1Sin/d_d_tmp_64 ));
  CIC1Sin_SLICE_2138 \CIC1Sin/SLICE_2138 ( .M1(\CIC1Sin/d_tmp_66 ), 
    .M0(\CIC1Sin/d_tmp_65 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_65 ), .Q1(\CIC1Sin/d_d_tmp_66 ));
  CIC1Sin_SLICE_2139 \CIC1Sin/SLICE_2139 ( .M1(\CIC1Sin/d_tmp_68 ), 
    .M0(\CIC1Sin/d_tmp_67 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_67 ), .Q1(\CIC1Sin/d_d_tmp_68 ));
  CIC1Sin_SLICE_2140 \CIC1Sin/SLICE_2140 ( .M1(\CIC1Sin/d_tmp_70 ), 
    .M0(\CIC1Sin/d_tmp_69 ), .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_d_tmp_69 ), .Q1(\CIC1Sin/d_d_tmp_70 ));
  CIC1Sin_SLICE_2141 \CIC1Sin/SLICE_2141 ( .M0(\CIC1Sin/d_tmp_71 ), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_d_tmp_71 ));
  CIC1Sin_SLICE_2142 \CIC1Sin/SLICE_2142 ( .M1(\CIC1Sin/d5_1 ), 
    .M0(\CIC1Sin/d5_0 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_0 ), .Q1(\CIC1Sin/d_tmp_1 ));
  CIC1Sin_SLICE_2143 \CIC1Sin/SLICE_2143 ( .M1(\CIC1Sin/d5_3 ), 
    .M0(\CIC1Sin/d5_2 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_2 ), .Q1(\CIC1Sin/d_tmp_3 ));
  CIC1Sin_SLICE_2144 \CIC1Sin/SLICE_2144 ( .M1(\CIC1Sin/d5_5 ), 
    .M0(\CIC1Sin/d5_4 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_4 ), .Q1(\CIC1Sin/d_tmp_5 ));
  CIC1Sin_SLICE_2145 \CIC1Sin/SLICE_2145 ( .M1(\CIC1Sin/d5_7 ), 
    .M0(\CIC1Sin/d5_6 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_6 ), .Q1(\CIC1Sin/d_tmp_7 ));
  CIC1Sin_SLICE_2146 \CIC1Sin/SLICE_2146 ( .M1(\CIC1Sin/d5_9 ), 
    .M0(\CIC1Sin/d5_8 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_8 ), .Q1(\CIC1Sin/d_tmp_9 ));
  CIC1Sin_SLICE_2147 \CIC1Sin/SLICE_2147 ( .M1(\CIC1Sin/d5_11 ), 
    .M0(\CIC1Sin/d5_10 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_10 ), .Q1(\CIC1Sin/d_tmp_11 ));
  CIC1Sin_SLICE_2148 \CIC1Sin/SLICE_2148 ( .M1(\CIC1Sin/d5_13 ), 
    .M0(\CIC1Sin/d5_12 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_12 ), .Q1(\CIC1Sin/d_tmp_13 ));
  CIC1Sin_SLICE_2149 \CIC1Sin/SLICE_2149 ( .M1(\CIC1Sin/d5_15 ), 
    .M0(\CIC1Sin/d5_14 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_14 ), .Q1(\CIC1Sin/d_tmp_15 ));
  CIC1Sin_SLICE_2150 \CIC1Sin/SLICE_2150 ( .M1(\CIC1Sin/d5_17 ), 
    .M0(\CIC1Sin/d5_16 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_16 ), .Q1(\CIC1Sin/d_tmp_17 ));
  CIC1Sin_SLICE_2151 \CIC1Sin/SLICE_2151 ( .M1(\CIC1Sin/d5_19 ), 
    .M0(\CIC1Sin/d5_18 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_18 ), .Q1(\CIC1Sin/d_tmp_19 ));
  CIC1Sin_SLICE_2152 \CIC1Sin/SLICE_2152 ( .M0(\CIC1Sin/d5_20 ), 
    .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_tmp_20 ));
  CIC1Sin_SLICE_2153 \CIC1Sin/SLICE_2153 ( .M1(\CIC1Sin/d5_22 ), 
    .M0(\CIC1Sin/d5_21 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_21 ), .Q1(\CIC1Sin/d_tmp_22 ));
  CIC1Sin_SLICE_2154 \CIC1Sin/SLICE_2154 ( .M1(\CIC1Sin/d5_24 ), 
    .M0(\CIC1Sin/d5_23 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_23 ), .Q1(\CIC1Sin/d_tmp_24 ));
  CIC1Sin_SLICE_2155 \CIC1Sin/SLICE_2155 ( .M1(\CIC1Sin/d5_26 ), 
    .M0(\CIC1Sin/d5_25 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_25 ), .Q1(\CIC1Sin/d_tmp_26 ));
  CIC1Sin_SLICE_2156 \CIC1Sin/SLICE_2156 ( .M1(\CIC1Sin/d5_28 ), 
    .M0(\CIC1Sin/d5_27 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_27 ), .Q1(\CIC1Sin/d_tmp_28 ));
  CIC1Sin_SLICE_2157 \CIC1Sin/SLICE_2157 ( .M1(\CIC1Sin/d5_30 ), 
    .M0(\CIC1Sin/d5_29 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_29 ), .Q1(\CIC1Sin/d_tmp_30 ));
  CIC1Sin_SLICE_2158 \CIC1Sin/SLICE_2158 ( .M1(\CIC1Sin/d5_32 ), 
    .M0(\CIC1Sin/d5_31 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_31 ), .Q1(\CIC1Sin/d_tmp_32 ));
  CIC1Sin_SLICE_2159 \CIC1Sin/SLICE_2159 ( .M1(\CIC1Sin/d5_34 ), 
    .M0(\CIC1Sin/d5_33 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_33 ), .Q1(\CIC1Sin/d_tmp_34 ));
  CIC1Sin_SLICE_2160 \CIC1Sin/SLICE_2160 ( .M1(\CIC1Sin/d5_36 ), 
    .M0(\CIC1Sin/d5_35 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_35 ), .Q1(\CIC1Sin/d_tmp_36 ));
  CIC1Sin_SLICE_2161 \CIC1Sin/SLICE_2161 ( .M1(\CIC1Sin/d5_38 ), 
    .M0(\CIC1Sin/d5_37 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_37 ), .Q1(\CIC1Sin/d_tmp_38 ));
  CIC1Sin_SLICE_2162 \CIC1Sin/SLICE_2162 ( .M1(\CIC1Sin/d5_40 ), 
    .M0(\CIC1Sin/d5_39 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_39 ), .Q1(\CIC1Sin/d_tmp_40 ));
  CIC1Sin_SLICE_2163 \CIC1Sin/SLICE_2163 ( .M1(\CIC1Sin/d5_42 ), 
    .M0(\CIC1Sin/d5_41 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_41 ), .Q1(\CIC1Sin/d_tmp_42 ));
  CIC1Sin_SLICE_2164 \CIC1Sin/SLICE_2164 ( .M1(\CIC1Sin/d5_44 ), 
    .M0(\CIC1Sin/d5_43 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_43 ), .Q1(\CIC1Sin/d_tmp_44 ));
  CIC1Sin_SLICE_2165 \CIC1Sin/SLICE_2165 ( .M1(\CIC1Sin/d5_46 ), 
    .M0(\CIC1Sin/d5_45 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_45 ), .Q1(\CIC1Sin/d_tmp_46 ));
  CIC1Sin_SLICE_2166 \CIC1Sin/SLICE_2166 ( .M1(\CIC1Sin/d5_48 ), 
    .M0(\CIC1Sin/d5_47 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_47 ), .Q1(\CIC1Sin/d_tmp_48 ));
  CIC1Sin_SLICE_2167 \CIC1Sin/SLICE_2167 ( .M1(\CIC1Sin/d5_50 ), 
    .M0(\CIC1Sin/d5_49 ), .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_49 ), .Q1(\CIC1Sin/d_tmp_50 ));
  CIC1Sin_SLICE_2168 \CIC1Sin/SLICE_2168 ( .M0(\CIC1Sin/d5_51 ), 
    .CE(\CIC1Sin/d_clk_tmp_N_1831 ), .CLK(osc_clk), .Q0(\CIC1Sin/d_tmp_51 ));
  CIC1Sin_SLICE_2169 \CIC1Sin/SLICE_2169 ( .M1(\CIC1Sin/d5_53 ), 
    .M0(\CIC1Sin/d5_52 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_52 ), .Q1(\CIC1Sin/d_tmp_53 ));
  CIC1Sin_SLICE_2170 \CIC1Sin/SLICE_2170 ( .M1(\CIC1Sin/d5_55 ), 
    .M0(\CIC1Sin/d5_54 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_54 ), .Q1(\CIC1Sin/d_tmp_55 ));
  CIC1Sin_SLICE_2171 \CIC1Sin/SLICE_2171 ( .M1(\CIC1Sin/d5_57 ), 
    .M0(\CIC1Sin/d5_56 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_56 ), .Q1(\CIC1Sin/d_tmp_57 ));
  CIC1Sin_SLICE_2172 \CIC1Sin/SLICE_2172 ( .M1(\CIC1Sin/d5_59 ), 
    .M0(\CIC1Sin/d5_58 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_58 ), .Q1(\CIC1Sin/d_tmp_59 ));
  CIC1Sin_SLICE_2173 \CIC1Sin/SLICE_2173 ( .M1(\CIC1Sin/d5_61 ), 
    .M0(\CIC1Sin/d5_60 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_60 ), .Q1(\CIC1Sin/d_tmp_61 ));
  CIC1Sin_SLICE_2174 \CIC1Sin/SLICE_2174 ( .M1(\CIC1Sin/d5_63 ), 
    .M0(\CIC1Sin/d5_62 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_62 ), .Q1(\CIC1Sin/d_tmp_63 ));
  CIC1Sin_SLICE_2175 \CIC1Sin/SLICE_2175 ( .M1(\CIC1Sin/d5_65 ), 
    .M0(\CIC1Sin/d5_64 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_64 ), .Q1(\CIC1Sin/d_tmp_65 ));
  CIC1Sin_SLICE_2176 \CIC1Sin/SLICE_2176 ( .M1(\CIC1Sin/d5_67 ), 
    .M0(\CIC1Sin/d5_66 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_66 ), .Q1(\CIC1Sin/d_tmp_67 ));
  CIC1Sin_SLICE_2177 \CIC1Sin/SLICE_2177 ( .M1(\CIC1Sin/d5_69 ), 
    .M0(\CIC1Sin/d5_68 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_68 ), .Q1(\CIC1Sin/d_tmp_69 ));
  CIC1Sin_SLICE_2178 \CIC1Sin/SLICE_2178 ( .M1(\CIC1Sin/d5_71 ), 
    .M0(\CIC1Sin/d5_70 ), .CE(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/d_tmp_70 ), .Q1(\CIC1Sin/d_tmp_71 ));
  CIC1Sin_SLICE_2179 \CIC1Sin/SLICE_2179 ( .D1(\CIC1Sin/count_7 ), 
    .C1(\CIC1Sin/count_9 ), .B1(\CIC1Sin/count_4 ), .A1(\CIC1Sin/count_5 ), 
    .D0(\CIC1Sin/n13113 ), .C0(\CIC1Sin/n13127 ), .B0(\CIC1Sin/n13 ), 
    .A0(\CIC1Sin/n13125 ), .DI0(\CIC1Sin/osc_clk_enable_1458 ), 
    .M1(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .F0(\CIC1Sin/osc_clk_enable_1458 ), .Q0(\CIC1Sin/osc_clk_enable_75 ), 
    .F1(\CIC1Sin/n13127 ), .Q1(\CIC1Sin/osc_clk_enable_147 ));
  CIC1Sin_SLICE_2180 \CIC1Sin/SLICE_2180 ( .M1(\CIC1Sin/osc_clk_enable_1458 ), 
    .M0(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_197 ), .Q1(\CIC1Sin/osc_clk_enable_247 ));
  CIC1Sin_SLICE_2181 \CIC1Sin/SLICE_2181 ( .M1(\CIC1Sin/osc_clk_enable_1458 ), 
    .M0(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_297 ), .Q1(\CIC1Sin/osc_clk_enable_347 ));
  CIC1Sin_SLICE_2182 \CIC1Sin/SLICE_2182 ( .M1(\CIC1Sin/osc_clk_enable_1458 ), 
    .M0(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_397 ), .Q1(\CIC1Sin/osc_clk_enable_447 ));
  CIC1Sin_SLICE_2183 \CIC1Sin/SLICE_2183 ( .M1(\CIC1Sin/osc_clk_enable_1458 ), 
    .M0(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_497 ), .Q1(\CIC1Sin/osc_clk_enable_547 ));
  CIC1Sin_SLICE_2184 \CIC1Sin/SLICE_2184 ( .M1(\CIC1Sin/osc_clk_enable_1458 ), 
    .M0(\CIC1Sin/osc_clk_enable_1458 ), .CLK(osc_clk), 
    .Q0(\CIC1Sin/osc_clk_enable_597 ), .Q1(\CIC1Sin/osc_clk_enable_647 ));
  CIC1Sin_SLICE_2185 \CIC1Sin/SLICE_2185 ( .M0(\CIC1Sin/osc_clk_enable_1458 ), 
    .CLK(osc_clk), .Q0(\CIC1Sin/osc_clk_enable_697 ));
  CIC1Sin_SLICE_2186 \CIC1Sin/SLICE_2186 ( .M0(\CIC1Sin/osc_clk_enable_1458 ), 
    .CLK(osc_clk), .Q0(\CIC1Sin/v_comb ));
  CIC1Cos_SLICE_2187 \CIC1Cos/SLICE_2187 ( .C1(\CIC1Cos/d10_57 ), .B1(d10_59), 
    .A1(CICGain_1), .C0(\CIC1Cos/d10_58 ), .B0(CICGain_1), .A0(n61), 
    .DI0(\CIC1Cos/d_out_11_N_1819_0 ), .M0(CICGain_0), 
    .CE(\CIC1Cos/osc_clk_enable_784 ), .CLK(osc_clk), 
    .OFX0(\CIC1Cos/d_out_11_N_1819_0 ), .Q0(CIC1_outCos_0));
  CIC1Cos_SLICE_2188 \CIC1Cos/SLICE_2188 ( .C1(\CIC1Cos/d10_58 ), .B1(d10_60), 
    .A1(CICGain_1), .C0(d10_59), .B0(CICGain_1), .A0(n62), 
    .DI0(\CIC1Cos/d_out_11_N_1819_1 ), .M0(CICGain_0), .CE(\CIC1Cos/v_comb ), 
    .CLK(osc_clk), .OFX0(\CIC1Cos/d_out_11_N_1819_1 ), .Q0(CIC1_outCos_1));
  SLICE_2189 SLICE_2189( .D1(\CIC1Sin/n132_adj_2491 ), .C1(n64), 
    .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n131_adj_2488 ), .C0(n63), 
    .B0(CICGain_0), .A0(CICGain_1), .DI1(d_out_11_N_1819_3), 
    .DI0(d_out_11_N_1819_2), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1819_2), .Q0(CIC1_outCos_2), .F1(d_out_11_N_1819_3), 
    .Q1(CIC1_outCos_3));
  SLICE_2190 SLICE_2190( .D1(\CIC1Sin/n134_adj_2497 ), .C1(n66), 
    .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n133_adj_2494 ), .C0(n65), 
    .B0(CICGain_0), .A0(CICGain_1), .DI1(d_out_11_N_1819_5), 
    .DI0(d_out_11_N_1819_4), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1819_4), .Q0(CIC1_outCos_4), .F1(d_out_11_N_1819_5), 
    .Q1(CIC1_outCos_5));
  SLICE_2191 SLICE_2191( .D1(\CIC1Sin/n136_adj_2502 ), .C1(n68), 
    .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n135_adj_2499 ), .C0(n67), 
    .B0(CICGain_0), .A0(CICGain_1), .DI1(d_out_11_N_1819_7), 
    .DI0(d_out_11_N_1819_6), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1819_6), .Q0(CIC1_outCos_6), .F1(d_out_11_N_1819_7), 
    .Q1(CIC1_outCos_7));
  SLICE_2192 SLICE_2192( .D1(\CIC1Sin/n138_adj_2509 ), .C1(n70), 
    .B1(CICGain_0), .A1(CICGain_1), .D0(d10_68), .C0(\CIC1Sin/n137_adj_2504 ), 
    .B0(CICGain_0), .A0(CICGain_1), .DI1(d_out_11_N_1819_9), 
    .DI0(d_out_11_N_1819_8), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1819_8), .Q0(CIC1_outCos_8), .F1(d_out_11_N_1819_9), 
    .Q1(CIC1_outCos_9));
  SLICE_2193 SLICE_2193( .C1(d10_68), .B1(d10_67), .A1(CICGain_0), .C0(d10_70), 
    .B0(d10_69), .A0(CICGain_0), .DI0(d_out_11_N_1819_10), .M0(CICGain_1), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .OFX0(d_out_11_N_1819_10), 
    .Q0(CIC1_outCos_10));
  SLICE_2194 SLICE_2194( .D1(d10_68), .C1(n70), .B1(CICGain_0), .A1(CICGain_1), 
    .D0(\CIC1Sin/n140_adj_2508 ), .C0(d10_71), .B0(CICGain_0), .A0(CICGain_1), 
    .DI0(d_out_11_N_1819_11), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(d_out_11_N_1819_11), .Q0(CIC1_outCos_11), .F1(\CIC1Sin/n140_adj_2508 ));
  CIC1Sin_SLICE_2195 \CIC1Sin/SLICE_2195 ( .C1(\CIC1Sin/d10_57 ), 
    .B1(\CIC1Sin/d10_59_adj_2522 ), .A1(CICGain_1), .C0(\CIC1Sin/d10_58 ), 
    .B0(CICGain_1), .A0(\CIC1Sin/n61_adj_2521 ), 
    .DI0(\CIC1Sin/d_out_11_N_1819_0 ), .M0(CICGain_0), 
    .CE(\CIC1Sin/osc_clk_enable_75 ), .CLK(osc_clk), 
    .OFX0(\CIC1Sin/d_out_11_N_1819_0 ), .Q0(CIC1_outSin_0));
  CIC1Sin_SLICE_2196 \CIC1Sin/SLICE_2196 ( .C1(\CIC1Sin/d10_58 ), 
    .B1(\CIC1Sin/d10_60_adj_2520 ), .A1(CICGain_1), 
    .C0(\CIC1Sin/d10_59_adj_2522 ), .B0(CICGain_1), .A0(\CIC1Sin/n62 ), 
    .DI0(\CIC1Sin/d_out_11_N_1819_1 ), .M0(CICGain_0), .CE(\CIC1Sin/v_comb ), 
    .CLK(osc_clk), .OFX0(\CIC1Sin/d_out_11_N_1819_1 ), .Q0(CIC1_outSin_1));
  CIC1Sin_SLICE_2197 \CIC1Sin/SLICE_2197 ( .D1(\CIC1Sin/n132 ), 
    .C1(\CIC1Sin/n64 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n131 ), 
    .C0(\CIC1Sin/n63 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI1(\CIC1Sin/d_out_11_N_1819_3 ), .DI0(\CIC1Sin/d_out_11_N_1819_2 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d_out_11_N_1819_2 ), 
    .Q0(CIC1_outSin_2), .F1(\CIC1Sin/d_out_11_N_1819_3 ), .Q1(CIC1_outSin_3));
  CIC1Sin_SLICE_2198 \CIC1Sin/SLICE_2198 ( .D1(\CIC1Sin/n134 ), 
    .C1(\CIC1Sin/n66 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n133 ), 
    .C0(\CIC1Sin/n65 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI1(\CIC1Sin/d_out_11_N_1819_5 ), .DI0(\CIC1Sin/d_out_11_N_1819_4 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d_out_11_N_1819_4 ), 
    .Q0(CIC1_outSin_4), .F1(\CIC1Sin/d_out_11_N_1819_5 ), .Q1(CIC1_outSin_5));
  CIC1Sin_SLICE_2199 \CIC1Sin/SLICE_2199 ( .M0(\CIC1Sin/d_clk_tmp ), 
    .CLK(osc_clk), .Q0(CIC1_out_clkSin));
  SLICE_2200 SLICE_2200( .M1(n7349), .M0(o_Rx_Byte_c_0), 
    .CE(osc_clk_enable_1394), .CLK(osc_clk), .Q0(CICGain_0), .Q1(CICGain_1));
  AMDemodulator1_SLICE_2201 \AMDemodulator1/SLICE_2201 ( 
    .M1(\AMDemodulator1/d_out_d_1 ), .M0(\AMDemodulator1/d_out_d_0 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1856_0), 
    .Q1(DataInReg_11_N_1856_1));
  AMDemodulator1_SLICE_2202 \AMDemodulator1/SLICE_2202 ( 
    .M1(\AMDemodulator1/d_out_d_3 ), .M0(\AMDemodulator1/d_out_d_2 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1856_2), 
    .Q1(DataInReg_11_N_1856_3));
  AMDemodulator1_SLICE_2203 \AMDemodulator1/SLICE_2203 ( 
    .M1(\AMDemodulator1/d_out_d_5 ), .M0(\AMDemodulator1/d_out_d_4 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1856_4), 
    .Q1(DataInReg_11_N_1856_5));
  AMDemodulator1_SLICE_2204 \AMDemodulator1/SLICE_2204 ( 
    .M1(\AMDemodulator1/d_out_d_7 ), .M0(\AMDemodulator1/d_out_d_6 ), 
    .CLK(CIC1_out_clkSin), .Q0(DataInReg_11_N_1856_6), 
    .Q1(DataInReg_11_N_1856_7));
  AMDemodulator1_SLICE_2205 \AMDemodulator1/SLICE_2205 ( 
    .M0(\AMDemodulator1/d_out_d_8 ), .CLK(CIC1_out_clkSin), 
    .Q0(DataInReg_11_N_1856_8));
  AMDemodulator1_SLICE_2206 \AMDemodulator1/SLICE_2206 ( 
    .M0(\AMDemodulator1/d_out_d_9 ), .CLK(CIC1_out_clkSin), .Q0(DemodOut_9));
  SinCos1_SLICE_2208 \SinCos1/SLICE_2208 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_2 ), 
    .A1(\SinCos1/rom_dout_15 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_1 ), 
    .A0(\SinCos1/rom_dout_14 ), .DI1(\SinCos1/cosout_pre_2 ), 
    .DI0(\SinCos1/cosout_pre_1 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_1 ), 
    .Q0(LOCosine_1), .F1(\SinCos1/cosout_pre_2 ), .Q1(LOCosine_2));
  SinCos1_SLICE_2209 \SinCos1/SLICE_2209 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_4 ), 
    .A1(\SinCos1/rom_dout_17 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_3 ), 
    .A0(\SinCos1/rom_dout_16 ), .DI1(\SinCos1/cosout_pre_4 ), 
    .DI0(\SinCos1/cosout_pre_3 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_3 ), 
    .Q0(LOCosine_3), .F1(\SinCos1/cosout_pre_4 ), .Q1(LOCosine_4));
  SinCos1_SLICE_2210 \SinCos1/SLICE_2210 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_6 ), 
    .A1(\SinCos1/rom_dout_19 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_5 ), 
    .A0(\SinCos1/rom_dout_18 ), .DI1(\SinCos1/cosout_pre_6 ), 
    .DI0(\SinCos1/cosout_pre_5 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_5 ), 
    .Q0(LOCosine_5), .F1(\SinCos1/cosout_pre_6 ), .Q1(LOCosine_6));
  SinCos1_SLICE_2211 \SinCos1/SLICE_2211 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_8 ), 
    .A1(\SinCos1/rom_dout_21 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_7 ), 
    .A0(\SinCos1/rom_dout_20 ), .DI1(\SinCos1/cosout_pre_8 ), 
    .DI0(\SinCos1/cosout_pre_7 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_7 ), 
    .Q0(LOCosine_7), .F1(\SinCos1/cosout_pre_8 ), .Q1(LOCosine_8));
  SinCos1_SLICE_2212 \SinCos1/SLICE_2212 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_10 ), 
    .A1(\SinCos1/rom_dout_23 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_9 ), 
    .A0(\SinCos1/rom_dout_22 ), .DI1(\SinCos1/cosout_pre_10 ), 
    .DI0(\SinCos1/cosout_pre_9 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_9 ), 
    .Q0(LOCosine_9), .F1(\SinCos1/cosout_pre_10 ), .Q1(LOCosine_10));
  SinCos1_SLICE_2213 \SinCos1/SLICE_2213 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/cosromoutsel ), .B1(\SinCos1/rom_dout_c_n_12 ), 
    .A1(\SinCos1/rom_dout_25 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/cosromoutsel ), .B0(\SinCos1/rom_dout_c_n_11 ), 
    .A0(\SinCos1/rom_dout_24 ), .DI1(\SinCos1/cosout_pre_12 ), 
    .DI0(\SinCos1/cosout_pre_11 ), .CLK(osc_clk), .F0(\SinCos1/cosout_pre_11 ), 
    .Q0(LOCosine_11), .F1(\SinCos1/cosout_pre_12 ), .Q1(LOCosine_12));
  SinCos1_SLICE_2214 \SinCos1/SLICE_2214 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_2 ), 
    .A1(\SinCos1/rom_dout_2 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_1 ), 
    .A0(\SinCos1/rom_dout_1 ), .DI1(\SinCos1/sinout_pre_2 ), 
    .DI0(\SinCos1/sinout_pre_1 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_1 ), 
    .Q0(LOSine_1), .F1(\SinCos1/sinout_pre_2 ), .Q1(LOSine_2));
  SinCos1_SLICE_2215 \SinCos1/SLICE_2215 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_4 ), 
    .A1(\SinCos1/rom_dout_4 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_3 ), 
    .A0(\SinCos1/rom_dout_3 ), .DI1(\SinCos1/sinout_pre_4 ), 
    .DI0(\SinCos1/sinout_pre_3 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_3 ), 
    .Q0(LOSine_3), .F1(\SinCos1/sinout_pre_4 ), .Q1(LOSine_4));
  SinCos1_SLICE_2216 \SinCos1/SLICE_2216 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_6 ), 
    .A1(\SinCos1/rom_dout_6 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_5 ), 
    .A0(\SinCos1/rom_dout_5 ), .DI1(\SinCos1/sinout_pre_6 ), 
    .DI0(\SinCos1/sinout_pre_5 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_5 ), 
    .Q0(LOSine_5), .F1(\SinCos1/sinout_pre_6 ), .Q1(LOSine_6));
  SinCos1_SLICE_2217 \SinCos1/SLICE_2217 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_8 ), 
    .A1(\SinCos1/rom_dout_8 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_7 ), 
    .A0(\SinCos1/rom_dout_7 ), .DI1(\SinCos1/sinout_pre_8 ), 
    .DI0(\SinCos1/sinout_pre_7 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_7 ), 
    .Q0(LOSine_7), .F1(\SinCos1/sinout_pre_8 ), .Q1(LOSine_8));
  SinCos1_SLICE_2218 \SinCos1/SLICE_2218 ( .D1(\SinCos1/out_sel ), 
    .C1(\SinCos1/sinromoutsel ), .B1(\SinCos1/rom_dout_s_n_10 ), 
    .A1(\SinCos1/rom_dout_10 ), .D0(\SinCos1/out_sel ), 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_9 ), 
    .A0(\SinCos1/rom_dout_9 ), .DI1(\SinCos1/sinout_pre_10 ), 
    .DI0(\SinCos1/sinout_pre_9 ), .CLK(osc_clk), .F0(\SinCos1/sinout_pre_9 ), 
    .Q0(LOSine_9), .F1(\SinCos1/sinout_pre_10 ), .Q1(LOSine_10));
  SinCos1_SLICE_2219 \SinCos1/SLICE_2219 ( .C1(\SinCos1/out_sel ), 
    .B1(\SinCos1/mx_ctrl_r_1 ), .A1(\SinCos1/rom_dout_s_12 ), 
    .D0(\SinCos1/out_sel ), .C0(\SinCos1/sinromoutsel ), 
    .B0(\SinCos1/rom_dout_s_n_11 ), .A0(\SinCos1/rom_dout_11 ), 
    .DI1(\SinCos1/sinout_pre_12 ), .DI0(\SinCos1/sinout_pre_11 ), 
    .CLK(osc_clk), .F0(\SinCos1/sinout_pre_11 ), .Q0(LOSine_11), 
    .F1(\SinCos1/sinout_pre_12 ), .Q1(LOSine_12));
  CIC1Sin_SLICE_2220 \CIC1Sin/SLICE_2220 ( .D1(\CIC1Sin/n136 ), 
    .C1(\CIC1Sin/n68 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n135 ), 
    .C0(\CIC1Sin/n13488 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI1(\CIC1Sin/d_out_11_N_1819_7 ), .DI0(\CIC1Sin/d_out_11_N_1819_6 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d_out_11_N_1819_6 ), 
    .Q0(MYLED_c_0), .F1(\CIC1Sin/d_out_11_N_1819_7 ), .Q1(MYLED_c_1));
  CIC1Sin_SLICE_2221 \CIC1Sin/SLICE_2221 ( .D1(\CIC1Sin/n138 ), 
    .C1(\CIC1Sin/n70 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/d10_68 ), 
    .C0(\CIC1Sin/n137 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI1(\CIC1Sin/d_out_11_N_1819_9 ), .DI0(\CIC1Sin/d_out_11_N_1819_8 ), 
    .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), .F0(\CIC1Sin/d_out_11_N_1819_8 ), 
    .Q0(MYLED_c_2), .F1(\CIC1Sin/d_out_11_N_1819_9 ), .Q1(MYLED_c_3));
  CIC1Sin_SLICE_2222 \CIC1Sin/SLICE_2222 ( .C1(\CIC1Sin/d10_68 ), 
    .B1(\CIC1Sin/d10_67 ), .A1(CICGain_0), .C0(\CIC1Sin/d10_70 ), 
    .B0(\CIC1Sin/d10_69 ), .A0(CICGain_0), .DI0(\CIC1Sin/d_out_11_N_1819_10 ), 
    .M0(CICGain_1), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .OFX0(\CIC1Sin/d_out_11_N_1819_10 ), .Q0(MYLED_c_4));
  CIC1Sin_SLICE_2223 \CIC1Sin/SLICE_2223 ( .D1(\CIC1Sin/d10_68 ), 
    .C1(\CIC1Sin/n70 ), .B1(CICGain_0), .A1(CICGain_1), .D0(\CIC1Sin/n140 ), 
    .C0(\CIC1Sin/d10_71 ), .B0(CICGain_0), .A0(CICGain_1), 
    .DI0(\CIC1Sin/d_out_11_N_1819_11 ), .CE(\CIC1Sin/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Sin/d_out_11_N_1819_11 ), .Q0(MYLED_c_5), .F1(\CIC1Sin/n140 ));
  Mixer1_SLICE_2224 \Mixer1/SLICE_2224 ( .M1(RFIn_c), .M0(DiffOut_c), 
    .CLK(osc_clk), .Q0(\Mixer1/RFInR ), .Q1(DiffOut_c));
  Mixer1_SLICE_2225 \Mixer1/SLICE_2225 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_1 ), .A1(LOCosine_2), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_250_0 ), .A0(LOCosine_1), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_1 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_0 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_0 ), .Q0(MixerOutCos_0), 
    .F1(\Mixer1/MixerOutCos_11_N_224_1 ), .Q1(MixerOutCos_1));
  Mixer1_SLICE_2226 \Mixer1/SLICE_2226 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_3 ), .A1(LOCosine_4), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_250_2 ), .A0(LOCosine_3), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_3 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_2 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_2 ), .Q0(MixerOutCos_2), 
    .F1(\Mixer1/MixerOutCos_11_N_224_3 ), .Q1(MixerOutCos_3));
  Mixer1_SLICE_2227 \Mixer1/SLICE_2227 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_5 ), .A1(LOCosine_6), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_250_4 ), .A0(LOCosine_5), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_5 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_4 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_4 ), .Q0(MixerOutCos_4), 
    .F1(\Mixer1/MixerOutCos_11_N_224_5 ), .Q1(MixerOutCos_5));
  Mixer1_SLICE_2228 \Mixer1/SLICE_2228 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_7 ), .A1(LOCosine_8), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutCos_11_N_250_6 ), .A0(LOCosine_7), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_7 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_6 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_6 ), .Q0(MixerOutCos_6), 
    .F1(\Mixer1/MixerOutCos_11_N_224_7 ), .Q1(MixerOutCos_7));
  Mixer1_SLICE_2229 \Mixer1/SLICE_2229 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_9 ), .A1(LOCosine_10), 
    .C0(\Mixer1/RFInR ), .B0(\Mixer1/MixerOutCos_11_N_250_8 ), .A0(LOCosine_9), 
    .DI1(\Mixer1/MixerOutCos_11_N_224_9 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_8 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_8 ), .Q0(MixerOutCos_8), 
    .F1(\Mixer1/MixerOutCos_11_N_224_9 ), .Q1(MixerOutCos_9));
  Mixer1_SLICE_2230 \Mixer1/SLICE_2230 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutCos_11_N_250_11 ), .A1(LOCosine_12), 
    .C0(\Mixer1/RFInR ), .B0(\Mixer1/MixerOutCos_11_N_250_10 ), 
    .A0(LOCosine_11), .DI1(\Mixer1/MixerOutCos_11_N_224_11 ), 
    .DI0(\Mixer1/MixerOutCos_11_N_224_10 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutCos_11_N_224_10 ), .Q0(MixerOutCos_10), 
    .F1(\Mixer1/MixerOutCos_11_N_224_11 ), .Q1(MixerOutCos_11));
  Mixer1_SLICE_2231 \Mixer1/SLICE_2231 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_1 ), .A1(LOSine_2), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_0 ), .A0(LOSine_1), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_1 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_0 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_0 ), .Q0(MixerOutSin_0), 
    .F1(\Mixer1/MixerOutSin_11_N_212_1 ), .Q1(MixerOutSin_1));
  Mixer1_SLICE_2232 \Mixer1/SLICE_2232 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_3 ), .A1(LOSine_4), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_2 ), .A0(LOSine_3), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_3 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_2 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_2 ), .Q0(MixerOutSin_2), 
    .F1(\Mixer1/MixerOutSin_11_N_212_3 ), .Q1(MixerOutSin_3));
  Mixer1_SLICE_2233 \Mixer1/SLICE_2233 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_5 ), .A1(LOSine_6), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_4 ), .A0(LOSine_5), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_5 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_4 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_4 ), .Q0(MixerOutSin_4), 
    .F1(\Mixer1/MixerOutSin_11_N_212_5 ), .Q1(MixerOutSin_5));
  Mixer1_SLICE_2234 \Mixer1/SLICE_2234 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_7 ), .A1(LOSine_8), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_6 ), .A0(LOSine_7), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_7 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_6 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_6 ), .Q0(MixerOutSin_6), 
    .F1(\Mixer1/MixerOutSin_11_N_212_7 ), .Q1(MixerOutSin_7));
  Mixer1_SLICE_2235 \Mixer1/SLICE_2235 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_9 ), .A1(LOSine_10), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_8 ), .A0(LOSine_9), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_9 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_8 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_8 ), .Q0(MixerOutSin_8), 
    .F1(\Mixer1/MixerOutSin_11_N_212_9 ), .Q1(MixerOutSin_9));
  Mixer1_SLICE_2236 \Mixer1/SLICE_2236 ( .C1(\Mixer1/RFInR ), 
    .B1(\Mixer1/MixerOutSin_11_N_236_11 ), .A1(LOSine_12), .C0(\Mixer1/RFInR ), 
    .B0(\Mixer1/MixerOutSin_11_N_236_10 ), .A0(LOSine_11), 
    .DI1(\Mixer1/MixerOutSin_11_N_212_11 ), 
    .DI0(\Mixer1/MixerOutSin_11_N_212_10 ), .CLK(osc_clk), 
    .F0(\Mixer1/MixerOutSin_11_N_212_10 ), .Q0(MixerOutSin_10), 
    .F1(\Mixer1/MixerOutSin_11_N_212_11 ), .Q1(MixerOutSin_11));
  PWM1_SLICE_2237 \PWM1/SLICE_2237 ( .M1(DataInReg_11_N_1856_1), 
    .M0(DataInReg_11_N_1856_0), .CE(\PWM1/osc_clk_enable_1393 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_0 ), .Q1(\PWM1/DataInReg_1 ));
  PWM1_SLICE_2238 \PWM1/SLICE_2238 ( .M1(DataInReg_11_N_1856_3), 
    .M0(DataInReg_11_N_1856_2), .CE(\PWM1/osc_clk_enable_1393 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_2 ), .Q1(\PWM1/DataInReg_3 ));
  PWM1_SLICE_2239 \PWM1/SLICE_2239 ( .M1(DataInReg_11_N_1856_5), 
    .M0(DataInReg_11_N_1856_4), .CE(\PWM1/osc_clk_enable_1393 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_4 ), .Q1(\PWM1/DataInReg_5 ));
  PWM1_SLICE_2240 \PWM1/SLICE_2240 ( .M1(DataInReg_11_N_1856_7), 
    .M0(DataInReg_11_N_1856_6), .CE(\PWM1/osc_clk_enable_1393 ), .CLK(osc_clk), 
    .Q0(\PWM1/DataInReg_6 ), .Q1(\PWM1/DataInReg_7 ));
  PWM1_SLICE_2241 \PWM1/SLICE_2241 ( .M0(DataInReg_11_N_1856_8), 
    .CE(\PWM1/osc_clk_enable_1393 ), .CLK(osc_clk), .Q0(\PWM1/DataInReg_8 ));
  PWM1_SLICE_2242 \PWM1/SLICE_2242 ( .A0(DemodOut_9), .DI0(\PWM1/n3929 ), 
    .CE(\PWM1/osc_clk_enable_1393 ), .CLK(osc_clk), .F0(\PWM1/n3929 ), 
    .Q0(\PWM1/DataInReg_9 ));
  SinCos1_SLICE_2243 \SinCos1/SLICE_2243 ( .B0(\SinCos1/mx_ctrl_r_1 ), 
    .A0(\SinCos1/mx_ctrl_r ), .DI0(\SinCos1/cosromoutsel_i ), .CLK(osc_clk), 
    .F0(\SinCos1/cosromoutsel_i ), .Q0(\SinCos1/cosromoutsel ));
  SinCos1_SLICE_2246 \SinCos1/SLICE_2246 ( .C1(\SinCos1/mx_ctrl_r ), 
    .B1(\SinCos1/rom_addr0_r_n_4 ), .A1(\SinCos1/rom_addr0_r_4 ), 
    .D0(\SinCos1/mx_ctrl_r ), .C0(\SinCos1/func_or_inet ), 
    .B0(\SinCos1/rom_addr0_r_10 ), .A0(\SinCos1/rom_addr0_r_11 ), 
    .DI0(\SinCos1/out_sel_i ), .CLK(osc_clk), .F0(\SinCos1/out_sel_i ), 
    .Q0(\SinCos1/out_sel ), .F1(\SinCos1/rom_addr0_r_10 ));
  SinCos1_SLICE_2247 \SinCos1/SLICE_2247 ( .M1(phase_accum_59), 
    .M0(phase_accum_57), .CLK(osc_clk), .Q0(\SinCos1/rom_addr0_r_1 ), 
    .Q1(\SinCos1/rom_addr0_r_3 ));
  SinCos1_SLICE_2248 \SinCos1/SLICE_2248 ( .M0(phase_accum_61), .CLK(osc_clk), 
    .Q0(\SinCos1/rom_addr0_r_5 ));
  SinCos1_SLICE_2249 \SinCos1/SLICE_2249 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_13_1_f5b ), .FXA(\SinCos1/triglut_1_0_13_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_13_1_f5b ), 
    .Q1(\SinCos1/rom_dout ), .OFX1(\SinCos1/rom_dout_ffin ));
  SinCos1_SLICE_2250 \SinCos1/SLICE_2250 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_1_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_14_1_f5b ), .FXA(\SinCos1/triglut_1_0_14_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_14_1_f5b ), 
    .Q1(\SinCos1/rom_dout_1 ), .OFX1(\SinCos1/rom_dout_1_ffin ));
  SinCos1_SLICE_2251 \SinCos1/SLICE_2251 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_2_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_15_1_f5b ), .FXA(\SinCos1/triglut_1_0_15_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_15_1_f5b ), 
    .Q1(\SinCos1/rom_dout_2 ), .OFX1(\SinCos1/rom_dout_2_ffin ));
  SinCos1_SLICE_2252 \SinCos1/SLICE_2252 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_3_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_16_1_f5b ), .FXA(\SinCos1/triglut_1_0_16_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_16_1_f5b ), 
    .Q1(\SinCos1/rom_dout_3 ), .OFX1(\SinCos1/rom_dout_3_ffin ));
  SinCos1_SLICE_2253 \SinCos1/SLICE_2253 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_4_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_17_1_f5b ), .FXA(\SinCos1/triglut_1_0_17_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_17_1_f5b ), 
    .Q1(\SinCos1/rom_dout_4 ), .OFX1(\SinCos1/rom_dout_4_ffin ));
  SinCos1_SLICE_2254 \SinCos1/SLICE_2254 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_5_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_18_1_f5b ), .FXA(\SinCos1/triglut_1_0_18_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_18_1_f5b ), 
    .Q1(\SinCos1/rom_dout_5 ), .OFX1(\SinCos1/rom_dout_5_ffin ));
  SinCos1_SLICE_2255 \SinCos1/SLICE_2255 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_6_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_19_1_f5b ), .FXA(\SinCos1/triglut_1_0_19_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_19_1_f5b ), 
    .Q1(\SinCos1/rom_dout_6 ), .OFX1(\SinCos1/rom_dout_6_ffin ));
  SinCos1_SLICE_2256 \SinCos1/SLICE_2256 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_7_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_20_1_f5b ), .FXA(\SinCos1/triglut_1_0_20_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_20_1_f5b ), 
    .Q1(\SinCos1/rom_dout_7 ), .OFX1(\SinCos1/rom_dout_7_ffin ));
  SinCos1_SLICE_2257 \SinCos1/SLICE_2257 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_8_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_21_1_f5b ), .FXA(\SinCos1/triglut_1_0_21_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_21_1_f5b ), 
    .Q1(\SinCos1/rom_dout_8 ), .OFX1(\SinCos1/rom_dout_8_ffin ));
  SinCos1_SLICE_2258 \SinCos1/SLICE_2258 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_9_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_22_1_f5b ), .FXA(\SinCos1/triglut_1_0_22_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_22_1_f5b ), 
    .Q1(\SinCos1/rom_dout_9 ), .OFX1(\SinCos1/rom_dout_9_ffin ));
  SinCos1_SLICE_2259 \SinCos1/SLICE_2259 ( .DI1(\SinCos1/rom_dout_10_ffin ), 
    .M1(\SinCos1/rom_addr0_r_11 ), .FXB(\SinCos1/triglut_1_0_23_1_f5b ), 
    .FXA(\SinCos1/triglut_1_0_23_0_f5a ), .CLK(osc_clk), 
    .OFX0(\SinCos1/triglut_1_0_23_1_f5b ), .Q1(\SinCos1/rom_dout_10 ), 
    .OFX1(\SinCos1/rom_dout_10_ffin ));
  SinCos1_SLICE_2260 \SinCos1/SLICE_2260 ( .CLK(osc_clk), 
    .Q0(\SinCos1/rom_dout_11 ), .Q1(\SinCos1/rom_dout_12 ));
  SinCos1_SLICE_2261 \SinCos1/SLICE_2261 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_13_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_0_1_f5b ), .FXA(\SinCos1/triglut_1_0_0_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_0_1_f5b ), 
    .Q1(\SinCos1/rom_dout_13 ), .OFX1(\SinCos1/rom_dout_13_ffin ));
  SinCos1_SLICE_2262 \SinCos1/SLICE_2262 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_14_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_1_1_f5b ), .FXA(\SinCos1/triglut_1_0_1_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_1_1_f5b ), 
    .Q1(\SinCos1/rom_dout_14 ), .OFX1(\SinCos1/rom_dout_14_ffin ));
  SinCos1_SLICE_2263 \SinCos1/SLICE_2263 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_15_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_2_1_f5b ), .FXA(\SinCos1/triglut_1_0_2_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_2_1_f5b ), 
    .Q1(\SinCos1/rom_dout_15 ), .OFX1(\SinCos1/rom_dout_15_ffin ));
  SinCos1_SLICE_2264 \SinCos1/SLICE_2264 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_16_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_3_1_f5b ), .FXA(\SinCos1/triglut_1_0_3_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_3_1_f5b ), 
    .Q1(\SinCos1/rom_dout_16 ), .OFX1(\SinCos1/rom_dout_16_ffin ));
  SinCos1_SLICE_2265 \SinCos1/SLICE_2265 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_17_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_4_1_f5b ), .FXA(\SinCos1/triglut_1_0_4_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_4_1_f5b ), 
    .Q1(\SinCos1/rom_dout_17 ), .OFX1(\SinCos1/rom_dout_17_ffin ));
  SinCos1_SLICE_2266 \SinCos1/SLICE_2266 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_18_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_5_1_f5b ), .FXA(\SinCos1/triglut_1_0_5_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_5_1_f5b ), 
    .Q1(\SinCos1/rom_dout_18 ), .OFX1(\SinCos1/rom_dout_18_ffin ));
  SinCos1_SLICE_2267 \SinCos1/SLICE_2267 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_19_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_6_1_f5b ), .FXA(\SinCos1/triglut_1_0_6_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_6_1_f5b ), 
    .Q1(\SinCos1/rom_dout_19 ), .OFX1(\SinCos1/rom_dout_19_ffin ));
  SinCos1_SLICE_2268 \SinCos1/SLICE_2268 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_20_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_7_1_f5b ), .FXA(\SinCos1/triglut_1_0_7_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_7_1_f5b ), 
    .Q1(\SinCos1/rom_dout_20 ), .OFX1(\SinCos1/rom_dout_20_ffin ));
  SinCos1_SLICE_2269 \SinCos1/SLICE_2269 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_21_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_8_1_f5b ), .FXA(\SinCos1/triglut_1_0_8_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_8_1_f5b ), 
    .Q1(\SinCos1/rom_dout_21 ), .OFX1(\SinCos1/rom_dout_21_ffin ));
  SinCos1_SLICE_2270 \SinCos1/SLICE_2270 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_22_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_9_1_f5b ), .FXA(\SinCos1/triglut_1_0_9_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_9_1_f5b ), 
    .Q1(\SinCos1/rom_dout_22 ), .OFX1(\SinCos1/rom_dout_22_ffin ));
  SinCos1_SLICE_2271 \SinCos1/SLICE_2271 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .DI1(\SinCos1/rom_dout_23_ffin ), 
    .M1(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .FXB(\SinCos1/triglut_1_0_10_1_f5b ), .FXA(\SinCos1/triglut_1_0_10_0_f5a ), 
    .CLK(osc_clk), .OFX0(\SinCos1/triglut_1_0_10_1_f5b ), 
    .Q1(\SinCos1/rom_dout_23 ), .OFX1(\SinCos1/rom_dout_23_ffin ));
  SinCos1_SLICE_2272 \SinCos1/SLICE_2272 ( .DI1(\SinCos1/rom_dout_24_ffin ), 
    .M1(\SinCos1/rom_addr0_r_11 ), .FXB(\SinCos1/triglut_1_0_11_1_f5b ), 
    .FXA(\SinCos1/triglut_1_0_11_0_f5a ), .CLK(osc_clk), 
    .OFX0(\SinCos1/triglut_1_0_11_1_f5b ), .Q1(\SinCos1/rom_dout_24 ), 
    .OFX1(\SinCos1/rom_dout_24_ffin ));
  SinCos1_SLICE_2273 \SinCos1/SLICE_2273 ( .CLK(osc_clk), 
    .Q0(\SinCos1/rom_dout_25 ));
  SinCos1_SLICE_2274 \SinCos1/SLICE_2274 ( .M1(phase_accum_63), 
    .M0(\SinCos1/mx_ctrl_r_1 ), .CLK(osc_clk), .Q0(\SinCos1/sinromoutsel ), 
    .Q1(\SinCos1/mx_ctrl_r_1 ));
  CIC1Cos_SLICE_2275 \CIC1Cos/SLICE_2275 ( .C1(\CIC1Cos/n6708 ), 
    .B1(\CIC1Cos/n6759 ), .A1(\CIC1Cos/n6721 ), .C0(\CIC1Cos/n6708 ), 
    .B0(\CIC1Cos/n6760 ), .A0(\CIC1Cos/n6722 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_60 ), .DI0(\CIC1Cos/d10_71_N_1747_59 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_59 ), 
    .Q0(d10_59), .F1(\CIC1Cos/d10_71_N_1747_60 ), .Q1(d10_60));
  CIC1Cos_SLICE_2276 \CIC1Cos/SLICE_2276 ( .C1(\CIC1Cos/n6708 ), 
    .B1(\CIC1Cos/n6757 ), .A1(\CIC1Cos/n6719 ), .C0(\CIC1Cos/n6708 ), 
    .B0(\CIC1Cos/n6758 ), .A0(\CIC1Cos/n6720 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_62 ), .DI0(\CIC1Cos/d10_71_N_1747_61 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_61 ), 
    .Q0(d10_61), .F1(\CIC1Cos/d10_71_N_1747_62 ), .Q1(d10_62));
  CIC1Cos_SLICE_2277 \CIC1Cos/SLICE_2277 ( .C1(\CIC1Cos/n6708 ), 
    .B1(\CIC1Cos/n6755 ), .A1(\CIC1Cos/n6717 ), .C0(\CIC1Cos/n6708 ), 
    .B0(\CIC1Cos/n6756 ), .A0(\CIC1Cos/n6718 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_64 ), .DI0(\CIC1Cos/d10_71_N_1747_63 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_63 ), 
    .Q0(d10_63), .F1(\CIC1Cos/d10_71_N_1747_64 ), .Q1(d10_64));
  CIC1Cos_SLICE_2278 \CIC1Cos/SLICE_2278 ( .C1(\CIC1Cos/n6708 ), 
    .B1(\CIC1Cos/n6753 ), .A1(\CIC1Cos/n6715 ), .C0(\CIC1Cos/n6708 ), 
    .B0(\CIC1Cos/n6754 ), .A0(\CIC1Cos/n6716 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_66 ), .DI0(\CIC1Cos/d10_71_N_1747_65 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_65 ), 
    .Q0(d10_65), .F1(\CIC1Cos/d10_71_N_1747_66 ), .Q1(d10_66));
  CIC1Cos_SLICE_2279 \CIC1Cos/SLICE_2279 ( .C1(\CIC1Cos/n6708 ), 
    .B1(\CIC1Cos/n6751 ), .A1(\CIC1Cos/n6713 ), .C0(\CIC1Cos/n6708 ), 
    .B0(\CIC1Cos/n6752 ), .A0(\CIC1Cos/n6714 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_68 ), .DI0(\CIC1Cos/d10_71_N_1747_67 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_67 ), 
    .Q0(d10_67), .F1(\CIC1Cos/d10_71_N_1747_68 ), .Q1(d10_68));
  CIC1Cos_SLICE_2280 \CIC1Cos/SLICE_2280 ( .C1(\CIC1Cos/n6708 ), 
    .B1(\CIC1Cos/n6749 ), .A1(\CIC1Cos/n6711 ), .C0(\CIC1Cos/n6708 ), 
    .B0(\CIC1Cos/n6750 ), .A0(\CIC1Cos/n6712 ), 
    .DI1(\CIC1Cos/d10_71_N_1747_70 ), .DI0(\CIC1Cos/d10_71_N_1747_69 ), 
    .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), .F0(\CIC1Cos/d10_71_N_1747_69 ), 
    .Q0(d10_69), .F1(\CIC1Cos/d10_71_N_1747_70 ), .Q1(d10_70));
  CIC1Cos_SLICE_2281 \CIC1Cos/SLICE_2281 ( .C0(\CIC1Cos/n6708 ), 
    .B0(\CIC1Cos/n6748 ), .A0(\CIC1Cos/n6710 ), 
    .DI0(\CIC1Cos/d10_71_N_1747_71 ), .CE(\CIC1Cos/v_comb ), .CLK(osc_clk), 
    .F0(\CIC1Cos/d10_71_N_1747_71 ), .Q0(d10_71));
  ncoGen_SLICE_2283 \ncoGen/SLICE_2283 ( .B0(phase_inc_carrGen1_0), 
    .A0(\ncoGen/phase_accum_0 ), .DI0(\ncoGen/phase_accum_63_N_146_0 ), 
    .CLK(osc_clk), .F0(\ncoGen/phase_accum_63_N_146_0 ), 
    .Q0(\ncoGen/phase_accum_0 ));
  uart_rx1_SLICE_2284 \uart_rx1/SLICE_2284 ( .M1(\uart_rx1/r_Rx_Byte_2 ), 
    .M0(\uart_rx1/r_Rx_Byte_0 ), .CE(\uart_rx1/r_Rx_DV_N_2484 ), 
    .CLK(\uart_rx1/UartClk[2] ), .Q0(o_Rx_Byte_c_0), .Q1(o_Rx_Byte_c_2));
  uart_rx1_SLICE_2285 \uart_rx1/SLICE_2285 ( .M1(\uart_rx1/r_Rx_Byte_4 ), 
    .M0(\uart_rx1/r_Rx_Byte_3 ), .CE(\uart_rx1/r_Rx_DV_N_2484 ), 
    .CLK(\uart_rx1/UartClk[2] ), .Q0(o_Rx_Byte_c_3), .Q1(o_Rx_Byte_c_4));
  uart_rx1_SLICE_2286 \uart_rx1/SLICE_2286 ( .M1(\uart_rx1/r_Rx_Byte_6 ), 
    .M0(\uart_rx1/r_Rx_Byte_5 ), .CE(\uart_rx1/r_Rx_DV_N_2484 ), 
    .CLK(\uart_rx1/UartClk[2] ), .Q0(o_Rx_Byte_c_5), .Q1(o_Rx_Byte_c_6));
  uart_rx1_SLICE_2288 \uart_rx1/SLICE_2288 ( .A0(\uart_rx1/r_Rx_DV_last ), 
    .DI0(\uart_rx1/r_Rx_DV_last_N_2483 ), .LSR(\uart_rx1/r_Rx_DV ), 
    .CLK(osc_clk), .F0(\uart_rx1/r_Rx_DV_last_N_2483 ), .Q0(o_Rx_DV_c));
  SLICE_2289 SLICE_2289( .M1(phase_inc_carrGen_1), .M0(phase_inc_carrGen_0), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_0), .Q1(phase_inc_carrGen1_1));
  SLICE_2290 SLICE_2290( .M1(phase_inc_carrGen_3), .M0(phase_inc_carrGen_2), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_2), .Q1(phase_inc_carrGen1_3));
  SLICE_2291 SLICE_2291( .M1(phase_inc_carrGen_5), .M0(phase_inc_carrGen_4), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_4), .Q1(phase_inc_carrGen1_5));
  SLICE_2292 SLICE_2292( .M1(phase_inc_carrGen_7), .M0(phase_inc_carrGen_6), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_6), .Q1(phase_inc_carrGen1_7));
  SLICE_2293 SLICE_2293( .M1(phase_inc_carrGen_9), .M0(phase_inc_carrGen_8), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_8), .Q1(phase_inc_carrGen1_9));
  SLICE_2294 SLICE_2294( .M1(phase_inc_carrGen_11), .M0(phase_inc_carrGen_10), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_10), .Q1(phase_inc_carrGen1_11));
  SLICE_2295 SLICE_2295( .M1(phase_inc_carrGen_13), .M0(phase_inc_carrGen_12), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_12), .Q1(phase_inc_carrGen1_13));
  SLICE_2296 SLICE_2296( .M1(phase_inc_carrGen_15), .M0(phase_inc_carrGen_14), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_14), .Q1(phase_inc_carrGen1_15));
  SLICE_2297 SLICE_2297( .M1(phase_inc_carrGen_17), .M0(phase_inc_carrGen_16), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_16), .Q1(phase_inc_carrGen1_17));
  SLICE_2298 SLICE_2298( .M1(phase_inc_carrGen_19), .M0(phase_inc_carrGen_18), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_18), .Q1(phase_inc_carrGen1_19));
  SLICE_2299 SLICE_2299( .M1(phase_inc_carrGen_21), .M0(phase_inc_carrGen_20), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_20), .Q1(phase_inc_carrGen1_21));
  SLICE_2300 SLICE_2300( .M1(phase_inc_carrGen_23), .M0(phase_inc_carrGen_22), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_22), .Q1(phase_inc_carrGen1_23));
  SLICE_2301 SLICE_2301( .M1(phase_inc_carrGen_25), .M0(phase_inc_carrGen_24), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_24), .Q1(phase_inc_carrGen1_25));
  SLICE_2302 SLICE_2302( .M1(phase_inc_carrGen_27), .M0(phase_inc_carrGen_26), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_26), .Q1(phase_inc_carrGen1_27));
  SLICE_2303 SLICE_2303( .M1(phase_inc_carrGen_29), .M0(phase_inc_carrGen_28), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_28), .Q1(phase_inc_carrGen1_29));
  SLICE_2304 SLICE_2304( .M1(phase_inc_carrGen_31), .M0(phase_inc_carrGen_30), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_30), .Q1(phase_inc_carrGen1_31));
  SLICE_2305 SLICE_2305( .M1(phase_inc_carrGen_33), .M0(phase_inc_carrGen_32), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_32), .Q1(phase_inc_carrGen1_33));
  SLICE_2306 SLICE_2306( .M1(phase_inc_carrGen_35), .M0(phase_inc_carrGen_34), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_34), .Q1(phase_inc_carrGen1_35));
  SLICE_2307 SLICE_2307( .M1(phase_inc_carrGen_37), .M0(phase_inc_carrGen_36), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_36), .Q1(phase_inc_carrGen1_37));
  SLICE_2308 SLICE_2308( .M1(phase_inc_carrGen_39), .M0(phase_inc_carrGen_38), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_38), .Q1(phase_inc_carrGen1_39));
  SLICE_2309 SLICE_2309( .M1(phase_inc_carrGen_41), .M0(phase_inc_carrGen_40), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_40), .Q1(phase_inc_carrGen1_41));
  SLICE_2310 SLICE_2310( .M1(phase_inc_carrGen_43), .M0(phase_inc_carrGen_42), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_42), .Q1(phase_inc_carrGen1_43));
  SLICE_2311 SLICE_2311( .M1(phase_inc_carrGen_45), .M0(phase_inc_carrGen_44), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_44), .Q1(phase_inc_carrGen1_45));
  SLICE_2312 SLICE_2312( .M1(phase_inc_carrGen_47), .M0(phase_inc_carrGen_46), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_46), .Q1(phase_inc_carrGen1_47));
  SLICE_2313 SLICE_2313( .M1(phase_inc_carrGen_49), .M0(phase_inc_carrGen_48), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_48), .Q1(phase_inc_carrGen1_49));
  SLICE_2314 SLICE_2314( .M1(phase_inc_carrGen_51), .M0(phase_inc_carrGen_50), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_50), .Q1(phase_inc_carrGen1_51));
  SLICE_2315 SLICE_2315( .M1(phase_inc_carrGen_53), .M0(phase_inc_carrGen_52), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_52), .Q1(phase_inc_carrGen1_53));
  SLICE_2316 SLICE_2316( .M1(phase_inc_carrGen_55), .M0(phase_inc_carrGen_54), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_54), .Q1(phase_inc_carrGen1_55));
  SLICE_2317 SLICE_2317( .M1(phase_inc_carrGen_57), .M0(phase_inc_carrGen_56), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_56), .Q1(phase_inc_carrGen1_57));
  SLICE_2318 SLICE_2318( .M1(phase_inc_carrGen_59), .M0(phase_inc_carrGen_58), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_58), .Q1(phase_inc_carrGen1_59));
  SLICE_2319 SLICE_2319( .M1(phase_inc_carrGen_61), .M0(phase_inc_carrGen_60), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_60), .Q1(phase_inc_carrGen1_61));
  SLICE_2320 SLICE_2320( .M1(phase_inc_carrGen_63), .M0(phase_inc_carrGen_62), 
    .CLK(osc_clk), .Q0(phase_inc_carrGen1_62), .Q1(phase_inc_carrGen1_63));
  SLICE_2321 SLICE_2321( .M0(n2859), .CE(osc_clk_enable_1397), .CLK(osc_clk), 
    .Q0(phase_inc_carrGen_1));
  uart_rx1_SLICE_2322 \uart_rx1/SLICE_2322 ( .C1(\uart_rx1/r_Bit_Index_1 ), 
    .B1(\uart_rx1/n13379 ), .A1(\uart_rx1/r_Bit_Index_0 ), 
    .D0(\uart_rx1/r_Bit_Index_0 ), .C0(\uart_rx1/r_SM_Main_1 ), 
    .B0(\uart_rx1/r_SM_Main_2_N_2418_2 ), .A0(\uart_rx1/r_SM_Main_0 ), 
    .DI1(\uart_rx1/n12822 ), .DI0(\uart_rx1/n12821 ), 
    .CE(\uart_rx1/UartClk_2_enable_25 ), .CLK(\uart_rx1/UartClk[2] ), 
    .F0(\uart_rx1/n12821 ), .Q0(\uart_rx1/r_Bit_Index_0 ), 
    .F1(\uart_rx1/n12822 ), .Q1(\uart_rx1/r_Bit_Index_1 ));
  uart_rx1_SLICE_2323 \uart_rx1/SLICE_2323 ( .C1(\uart_rx1/r_Bit_Index_0 ), 
    .B1(\uart_rx1/r_Bit_Index_1 ), .A1(\uart_rx1/r_Bit_Index_2 ), 
    .D0(\uart_rx1/r_SM_Main_2_N_2418_2 ), .C0(\uart_rx1/r_SM_Main_1 ), 
    .B0(\uart_rx1/r_SM_Main_0 ), .A0(\uart_rx1/n13338 ), 
    .DI0(\uart_rx1/n13014 ), .CE(\uart_rx1/UartClk_2_enable_25 ), 
    .CLK(\uart_rx1/UartClk[2] ), .F0(\uart_rx1/n13014 ), 
    .Q0(\uart_rx1/r_Bit_Index_2 ), .F1(\uart_rx1/n13338 ));
  uart_rx1_SLICE_2324 \uart_rx1/SLICE_2324 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_18 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_0 ));
  uart_rx1_SLICE_2325 \uart_rx1/SLICE_2325 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_5 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_1 ));
  uart_rx1_SLICE_2326 \uart_rx1/SLICE_2326 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_4 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_2 ));
  uart_rx1_SLICE_2327 \uart_rx1/SLICE_2327 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_3 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_3 ));
  uart_rx1_SLICE_2328 \uart_rx1/SLICE_2328 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_1 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_4 ));
  uart_rx1_SLICE_2329 \uart_rx1/SLICE_2329 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_28 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_5 ));
  uart_rx1_SLICE_2330 \uart_rx1/SLICE_2330 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_27 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_6 ));
  uart_rx1_SLICE_2331 \uart_rx1/SLICE_2331 ( .M0(\uart_rx1/r_Rx_Data ), 
    .CE(\uart_rx1/UartClk_2_enable_26 ), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Byte_7 ));
  uart_rx1_SLICE_2332 \uart_rx1/SLICE_2332 ( .D1(\uart_rx1/r_SM_Main_1 ), 
    .C1(\uart_rx1/r_SM_Main_2 ), .B1(\uart_rx1/r_SM_Main_2_N_2418_2 ), 
    .A1(\uart_rx1/r_SM_Main_0 ), .D0(\uart_rx1/r_SM_Main_2_N_2418_2 ), 
    .C0(\uart_rx1/r_SM_Main_0 ), .B0(\uart_rx1/r_SM_Main_1 ), 
    .A0(\uart_rx1/r_SM_Main_2 ), .DI0(\uart_rx1/r_Rx_DV_N_2484 ), 
    .CE(\uart_rx1/UartClk_2_enable_11 ), .CLK(\uart_rx1/UartClk[2] ), 
    .F0(\uart_rx1/r_Rx_DV_N_2484 ), .Q0(\uart_rx1/r_Rx_DV ), 
    .F1(\uart_rx1/UartClk_2_enable_25 ));
  uart_rx1_SLICE_2333 \uart_rx1/SLICE_2333 ( .M0(\uart_rx1/r_Rx_DV ), 
    .CLK(osc_clk), .Q0(\uart_rx1/r_Rx_DV_last ));
  uart_rx1_SLICE_2335 \uart_rx1/SLICE_2335 ( .M1(\uart_rx1/r_Rx_Data_R ), 
    .M0(i_Rx_Serial_c), .CLK(\uart_rx1/UartClk[2] ), 
    .Q0(\uart_rx1/r_Rx_Data_R ), .Q1(\uart_rx1/r_Rx_Data ));
  uart_rx1_SLICE_2336 \uart_rx1/SLICE_2336 ( 
    .D1(\uart_rx1/r_SM_Main_2_N_2418_2 ), .C1(\uart_rx1/n13386 ), 
    .B1(\uart_rx1/r_Bit_Index_1 ), .A1(\uart_rx1/r_SM_Main_0 ), 
    .D0(\uart_rx1/n13387 ), .C0(\uart_rx1/n12511 ), 
    .B0(\uart_rx1/r_SM_Main_0 ), .A0(\uart_rx1/r_Rx_Data ), 
    .DI0(\uart_rx1/n3 ), .M0(\uart_rx1/r_SM_Main_1 ), 
    .LSR(\uart_rx1/r_SM_Main_2 ), .CLK(\uart_rx1/UartClk[2] ), 
    .OFX0(\uart_rx1/n3 ), .Q0(\uart_rx1/r_SM_Main_0 ));
  uart_rx1_SLICE_2337 \uart_rx1/SLICE_2337 ( .C1(\uart_rx1/r_SM_Main_1 ), 
    .B1(\uart_rx1/r_SM_Main_2_N_2418_2 ), .A1(\uart_rx1/r_SM_Main_0 ), 
    .D0(\uart_rx1/r_Rx_Data ), .C0(\uart_rx1/r_SM_Main_1 ), 
    .B0(\uart_rx1/r_SM_Main_2_N_2418_2 ), .A0(\uart_rx1/r_SM_Main_0 ), 
    .DI0(\uart_rx1/n13414 ), .M0(\uart_rx1/n13377 ), 
    .LSR(\uart_rx1/r_SM_Main_2 ), .CLK(\uart_rx1/UartClk[2] ), 
    .OFX0(\uart_rx1/n13414 ), .Q0(\uart_rx1/r_SM_Main_1 ));
  uart_rx1_SLICE_2338 \uart_rx1/SLICE_2338 ( .D1(\uart_rx1/r_Clock_Count_2 ), 
    .C1(\uart_rx1/r_Clock_Count_3 ), .B1(\uart_rx1/r_Clock_Count_4 ), 
    .A1(\uart_rx1/r_Clock_Count_1 ), .D0(\uart_rx1/r_Clock_Count_5 ), 
    .C0(\uart_rx1/r_Clock_Count_6 ), .B0(\uart_rx1/n12796 ), 
    .A0(\uart_rx1/n9085 ), .DI0(\uart_rx1/r_SM_Main_2_N_2418_2 ), 
    .LSR(\uart_rx1/n12819 ), .CLK(\uart_rx1/UartClk[2] ), 
    .F0(\uart_rx1/r_SM_Main_2_N_2418_2 ), .Q0(\uart_rx1/r_SM_Main_2 ), 
    .F1(\uart_rx1/n9085 ));
  uart_rx1_i5804_SLICE_2339 \uart_rx1/i5804/SLICE_2339 ( .D1(o_Rx_Byte_c_4), 
    .C1(n1128), .B1(o_Rx_Byte_c_3), .A1(n1067), .C0(n13381), 
    .B0(o_Rx_Byte_c_3), .A0(n1067), .M0(n12803), .OFX0(n13411));
  SinCos1_SLICE_2340 \SinCos1/SLICE_2340 ( .C1(\SinCos1/mx_ctrl_r ), 
    .B1(\SinCos1/rom_addr0_r_n_1 ), .A1(\SinCos1/rom_addr0_r_1 ), 
    .D0(\SinCos1/rom_addr0_r_10 ), .C0(\SinCos1/rom_addr0_r_9 ), 
    .B0(\SinCos1/rom_addr0_r_8 ), .A0(\SinCos1/rom_addr0_r_7 ), 
    .OFX0(\SinCos1/triglut_1_0_23_0_f5a ), .F1(\SinCos1/rom_addr0_r_7 ));
  SinCos1_SLICE_2341 \SinCos1/SLICE_2341 ( .C1(\SinCos1/rom_addr0_r_9 ), 
    .B1(\SinCos1/rom_addr0_r_8 ), .A1(\SinCos1/rom_addr0_r_10 ), 
    .D0(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/rom_addr0_r_8 ), 
    .B0(\SinCos1/rom_addr0_r_7 ), .A0(\SinCos1/rom_addr0_r_10 ), 
    .M0(\SinCos1/rom_addr0_r_11 ), .OFX0(\SinCos1/triglut_1_0_22_0_f5a ));
  SinCos1_SLICE_2342 \SinCos1/SLICE_2342 ( .C1(\SinCos1/rom_addr0_r_9 ), 
    .B1(\SinCos1/rom_addr0_r_8 ), .A1(\SinCos1/rom_addr0_r_10 ), 
    .D0(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/rom_addr0_r_8 ), 
    .B0(\SinCos1/rom_addr0_r_7 ), .A0(\SinCos1/rom_addr0_r_10 ), 
    .M0(\SinCos1/rom_addr0_r_11 ), .OFX0(\SinCos1/triglut_1_0_21_0_f5a ));
  SinCos1_SLICE_2343 \SinCos1/SLICE_2343 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_20_0_f5a ));
  SinCos1_SLICE_2344 \SinCos1/SLICE_2344 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_19_0_f5a ));
  SinCos1_SLICE_2345 \SinCos1/SLICE_2345 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_18_0_f5a ));
  SinCos1_SLICE_2346 \SinCos1/SLICE_2346 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_17_0_f5a ));
  SinCos1_SLICE_2347 \SinCos1/SLICE_2347 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_16_0_f5a ));
  SinCos1_SLICE_2348 \SinCos1/SLICE_2348 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_15_0_f5a ));
  SinCos1_SLICE_2349 \SinCos1/SLICE_2349 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_14_0_f5a ));
  SinCos1_SLICE_2350 \SinCos1/SLICE_2350 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_13_0_f5a ));
  SinCos1_SLICE_2351 \SinCos1/SLICE_2351 ( .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_6 ), .M0(\SinCos1/rom_addr0_r_10 ), 
    .OFX0(\SinCos1/triglut_1_0_11_0_f5a ));
  SinCos1_SLICE_2352 \SinCos1/SLICE_2352 ( .C1(\SinCos1/rom_addr0_r_9 ), 
    .B1(\SinCos1/rom_addr0_r_8 ), .A1(\SinCos1/rom_addr0_r_10 ), 
    .D0(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/rom_addr0_r_8 ), 
    .B0(\SinCos1/rom_addr0_r_7 ), .A0(\SinCos1/rom_addr0_r_10 ), 
    .M0(\SinCos1/rom_addr0_r_11 ), .OFX0(\SinCos1/triglut_1_0_10_0_f5a ));
  SinCos1_SLICE_2353 \SinCos1/SLICE_2353 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_9_0_f5a ));
  SinCos1_SLICE_2354 \SinCos1/SLICE_2354 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_8_0_f5a ));
  SinCos1_SLICE_2355 \SinCos1/SLICE_2355 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_7_0_f5a ));
  SinCos1_SLICE_2356 \SinCos1/SLICE_2356 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_6_0_f5a ));
  SinCos1_SLICE_2357 \SinCos1/SLICE_2357 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_5_0_f5a ));
  SinCos1_SLICE_2358 \SinCos1/SLICE_2358 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_4_0_f5a ));
  SinCos1_SLICE_2359 \SinCos1/SLICE_2359 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_3_0_f5a ));
  SinCos1_SLICE_2360 \SinCos1/SLICE_2360 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_2_0_f5a ));
  SinCos1_SLICE_2361 \SinCos1/SLICE_2361 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_1_0_f5a ));
  SinCos1_SLICE_2362 \SinCos1/SLICE_2362 ( .D1(\SinCos1/rom_addr0_r_9 ), 
    .C1(\SinCos1/rom_addr0_r_8 ), .B1(\SinCos1/rom_addr0_r_7 ), 
    .A1(\SinCos1/rom_addr0_r_10 ), .D0(\SinCos1/rom_addr0_r_9 ), 
    .C0(\SinCos1/rom_addr0_r_8 ), .B0(\SinCos1/rom_addr0_r_7 ), 
    .A0(\SinCos1/rom_addr0_r_10 ), .M0(\SinCos1/rom_addr0_r_11 ), 
    .OFX0(\SinCos1/triglut_1_0_0_0_f5a ));
  SLICE_2363 SLICE_2363( .D1(o_Rx_Byte_c_4), .C1(n13381), .B1(n12803), 
    .A1(o_Rx_Byte_c_3), .D0(o_Rx_Byte_c_4), .C0(n8225), .B0(n7349), 
    .A0(o_Rx_Byte_c_0), .F0(n13381), .F1(n7970));
  SLICE_2364 SLICE_2364( .D1(n8225), .C1(o_Rx_Byte_c_2), 
    .B1(\uart_rx1/n13286 ), .A1(\uart_rx1/n13287 ), .C0(n2795), 
    .B0(o_Rx_Byte_c_4), .A0(o_Rx_Byte_c_2), .F0(n3632), .F1(n2795));
  uart_rx1_SLICE_2365 \uart_rx1/SLICE_2365 ( .D1(n13381), .C1(n13380), 
    .B1(o_Rx_Byte_c_2), .A1(o_Rx_Byte_c_3), .D0(n13383), .C0(n1132), 
    .B0(n2608), .A0(o_Rx_Byte_c_3), .F0(n2339), .F1(n2608));
  SLICE_2366 SLICE_2366( .D1(n13380), .C1(n13376), .B1(n1133), 
    .A1(o_Rx_Byte_c_3), .C0(o_Rx_Byte_c_4), .B0(n12803), .A0(o_Rx_Byte_c_3), 
    .F0(n13376), .F1(n2340));
  CIC1Sin_SLICE_2367 \CIC1Sin/SLICE_2367 ( .D1(\CIC1Sin/d10_60_adj_2520 ), 
    .C1(\CIC1Sin/n62 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_62 ), .A0(\CIC1Sin/d10_61 ), .F0(\CIC1Sin/n62 ), 
    .F1(\CIC1Sin/n132 ));
  CIC1Sin_SLICE_2368 \CIC1Sin/SLICE_2368 ( .D1(\CIC1Sin/d10_61 ), 
    .C1(\CIC1Sin/n63 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_63 ), .A0(\CIC1Sin/d10_62 ), .F0(\CIC1Sin/n63 ), 
    .F1(\CIC1Sin/n133 ));
  CIC1Sin_SLICE_2369 \CIC1Sin/SLICE_2369 ( .D1(\CIC1Sin/d10_62 ), 
    .C1(\CIC1Sin/n64 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_64 ), .A0(\CIC1Sin/d10_63 ), .F0(\CIC1Sin/n64 ), 
    .F1(\CIC1Sin/n134 ));
  SLICE_2370 SLICE_2370( .C1(CICGain_0), .B1(d10_67), .A1(d10_66), .D0(d10_65), 
    .C0(n67), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n137_adj_2504 ), 
    .F1(n67));
  SLICE_2371 SLICE_2371( .C1(CICGain_0), .B1(d10_68), .A1(d10_67), .D0(d10_66), 
    .C0(n68), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n138_adj_2509 ), 
    .F1(n68));
  CIC1Sin_SLICE_2372 \CIC1Sin/SLICE_2372 ( .D1(\CIC1Sin/d10_63 ), 
    .C1(\CIC1Sin/n65 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_65_adj_2513 ), .A0(\CIC1Sin/d10_64 ), .F0(\CIC1Sin/n65 ), 
    .F1(\CIC1Sin/n135 ));
  SLICE_2373 SLICE_2373( .C1(CICGain_0), .B1(d10_65), .A1(d10_64), .D0(d10_63), 
    .C0(n65), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n135_adj_2499 ), 
    .F1(n65));
  SLICE_2374 SLICE_2374( .C1(CICGain_0), .B1(d10_66), .A1(d10_65), .D0(d10_64), 
    .C0(n66), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n136_adj_2502 ), 
    .F1(n66));
  SLICE_2375 SLICE_2375( .C1(CICGain_0), .B1(d10_63), .A1(d10_62), .D0(d10_61), 
    .C0(n63), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n133_adj_2494 ), 
    .F1(n63));
  SLICE_2376 SLICE_2376( .C1(CICGain_0), .B1(d10_64), .A1(d10_63), .D0(d10_62), 
    .C0(n64), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n134_adj_2497 ), 
    .F1(n64));
  SLICE_2377 SLICE_2377( .C1(CICGain_0), .B1(d10_61), .A1(d10_60), .D0(d10_59), 
    .C0(n61), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n131_adj_2488 ), 
    .F1(n61));
  SLICE_2378 SLICE_2378( .C1(CICGain_0), .B1(d10_62), .A1(d10_61), .D0(d10_60), 
    .C0(n62), .B0(CICGain_0), .A0(CICGain_1), .F0(\CIC1Sin/n132_adj_2491 ), 
    .F1(n62));
  CIC1Sin_SLICE_2379 \CIC1Sin/SLICE_2379 ( .C1(CICGain_0), 
    .B1(\CIC1Sin/d10_68 ), .A1(\CIC1Sin/d10_67 ), 
    .D0(\CIC1Sin/d10_66_adj_2519 ), .C0(\CIC1Sin/n68 ), .B0(CICGain_0), 
    .A0(CICGain_1), .F0(\CIC1Sin/n138 ), .F1(\CIC1Sin/n68 ));
  CIC1Sin_SLICE_2380 \CIC1Sin/SLICE_2380 ( .C1(CICGain_0), 
    .B1(\CIC1Sin/d10_67 ), .A1(\CIC1Sin/d10_66_adj_2519 ), 
    .D0(\CIC1Sin/d10_65_adj_2513 ), .C0(\CIC1Sin/n13488 ), .B0(CICGain_0), 
    .A0(CICGain_1), .F0(\CIC1Sin/n137 ), .F1(\CIC1Sin/n13488 ));
  CIC1Sin_SLICE_2381 \CIC1Sin/SLICE_2381 ( .D1(\CIC1Sin/d10_64 ), 
    .C1(\CIC1Sin/n66 ), .B1(CICGain_0), .A1(CICGain_1), .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_66_adj_2519 ), .A0(\CIC1Sin/d10_65_adj_2513 ), 
    .F0(\CIC1Sin/n66 ), .F1(\CIC1Sin/n136 ));
  CIC1Sin_SLICE_2382 \CIC1Sin/SLICE_2382 ( .D1(\CIC1Sin/d10_59_adj_2522 ), 
    .C1(\CIC1Sin/n61_adj_2521 ), .B1(CICGain_0), .A1(CICGain_1), 
    .C0(CICGain_0), .B0(\CIC1Sin/d10_61 ), .A0(\CIC1Sin/d10_60_adj_2520 ), 
    .F0(\CIC1Sin/n61_adj_2521 ), .F1(\CIC1Sin/n131 ));
  PWM1_SLICE_2383 \PWM1/SLICE_2383 ( .B1(\PWM1/counter_8 ), 
    .A1(\PWM1/counter_7 ), .D0(\PWM1/n12 ), .C0(\PWM1/n11 ), .B0(\PWM1/n15 ), 
    .A0(\PWM1/n17 ), .F0(\PWM1/osc_clk_enable_1393 ), .F1(\PWM1/n12 ));
  SLICE_2384 SLICE_2384( .C1(o_Rx_Byte_c_4), .B1(n12803), .A1(o_Rx_Byte_c_3), 
    .D0(n13375), .C0(n13376), .B0(n1081), .A0(n7819), .F0(n2288), .F1(n13375));
  SLICE_2385 SLICE_2385( .D1(n13375), .C1(n13376), .B1(n1075), .A1(n7829), 
    .D0(n1014), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7829), .F1(n2282));
  SLICE_2386 SLICE_2386( .D1(n13375), .C1(n13376), .B1(n1077), .A1(n7825), 
    .D0(n1016), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7825), .F1(n2284));
  SLICE_2387 SLICE_2387( .B1(o_Rx_Byte_c_3), .A1(n1019), .D0(n7970), 
    .C0(n13376), .B0(n1080), .A0(n2353), .F0(n2287), .F1(n2353));
  SLICE_2388 SLICE_2388( .B1(n12803), .A1(o_Rx_Byte_c_4), .D0(n13383), 
    .C0(o_Rx_Byte_c_3), .B0(n1022), .A0(n1083), .F0(n8010), .F1(n13383));
  SLICE_2389 SLICE_2389( .D1(n13375), .C1(n13376), .B1(n1076), .A1(n7827), 
    .D0(n1015), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7827), .F1(n2283));
  SLICE_2390 SLICE_2390( .D1(n13375), .C1(n13376), .B1(n1105), .A1(n7777), 
    .D0(n1044), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7777), .F1(n2312));
  SLICE_2391 SLICE_2391( .D1(n13375), .C1(n13376), .B1(n1088), .A1(n7807), 
    .D0(n1027), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7807), .F1(n2295));
  SLICE_2392 SLICE_2392( .D1(n1031), .C1(o_Rx_Byte_c_3), .B1(n13381), 
    .A1(o_Rx_Byte_c_2), .D0(n13375), .C0(n13376), .B0(n1092), .A0(n7801), 
    .F0(n2299), .F1(n7801));
  SLICE_2393 SLICE_2393( .D1(n1021), .C1(o_Rx_Byte_c_3), .B1(n13381), 
    .A1(o_Rx_Byte_c_2), .D0(n13375), .C0(n13376), .B0(n1082), .A0(n7817), 
    .F0(n2289), .F1(n7817));
  SLICE_2394 SLICE_2394( .B1(o_Rx_Byte_c_3), .A1(n1024), .D0(n13375), 
    .C0(n13376), .B0(n1085), .A0(n2492), .F0(n2292), .F1(n2492));
  SLICE_2395 SLICE_2395( .D1(n13381), .C1(o_Rx_Byte_c_3), .B1(n1023), 
    .A1(o_Rx_Byte_c_2), .D0(n13375), .C0(n13376), .B0(n1084), .A0(n7813), 
    .F0(n2291), .F1(n7813));
  SLICE_2396 SLICE_2396( .C1(n13381), .B1(n1034), .A1(o_Rx_Byte_c_3), .D0(n30), 
    .C0(n13376), .B0(n1095), .A0(n13375), .F0(n2302), .F1(n30));
  SLICE_2397 SLICE_2397( .D1(n13375), .C1(n13376), .B1(n1103), .A1(n7781), 
    .D0(n1042), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7781), .F1(n2310));
  SLICE_2398 SLICE_2398( .D1(n13375), .C1(n13376), .B1(n1102), .A1(n7783), 
    .D0(n1041), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7783), .F1(n2309));
  SLICE_2399 SLICE_2399( .D1(n13375), .C1(n13376), .B1(n1098), .A1(n7791), 
    .D0(n1037), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7791), .F1(n2305));
  SLICE_2400 SLICE_2400( .D1(n13375), .C1(n13376), .B1(n1093), .A1(n7799), 
    .D0(n1032), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7799), .F1(n2300));
  SLICE_2401 SLICE_2401( .D1(n1026), .C1(o_Rx_Byte_c_3), .B1(n13381), 
    .A1(o_Rx_Byte_c_2), .D0(n13375), .C0(n13376), .B0(n1087), .A0(n7809), 
    .F0(n2294), .F1(n7809));
  SLICE_2402 SLICE_2402( .B1(o_Rx_Byte_c_3), .A1(n1025), .D0(n7970), 
    .C0(n13376), .B0(n1086), .A0(n2359), .F0(n2293), .F1(n2359));
  SLICE_2403 SLICE_2403( .D1(o_Rx_Byte_c_2), .C1(n8225), .B1(n13372), 
    .A1(n13384), .C0(o_Rx_Byte_c_4), .B0(n7349), .A0(o_Rx_Byte_c_0), 
    .F0(n13384), .F1(n9000));
  SLICE_2404 SLICE_2404( .D1(n13375), .C1(n13376), .B1(n1134), .A1(n8341), 
    .D0(n13385), .C0(o_Rx_Byte_c_3), .B0(n8225), .A0(o_Rx_Byte_c_0), 
    .F0(n8341), .F1(n2341));
  SLICE_2405 SLICE_2405( .D1(n12931), .C1(n12919), .B1(n7349), 
    .A1(o_Rx_Byte_c_3), .D0(o_Rx_Byte_c_4), .C0(o_Rx_Byte_c_2), .B0(n8225), 
    .A0(o_Rx_Byte_c_0), .F0(n12919), .F1(n13372));
  SLICE_2406 SLICE_2406( .D1(n6), .C1(o_Rx_Byte_c_6), .B1(n13390), 
    .A1(o_Rx_Byte_c_2), .C0(o_Rx_Byte_c_5), .B0(o_Rx_DV_c), .A0(o_Rx_Byte_c_7), 
    .F0(n13390), .F1(osc_clk_enable_1394));
  SLICE_2407 SLICE_2407( .D1(n13375), .C1(n13376), .B1(n1109), .A1(n7769), 
    .D0(n1048), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7769), .F1(n2316));
  SLICE_2408 SLICE_2408( .D1(n7349), .C1(o_Rx_Byte_c_0), .B1(n8225), 
    .A1(o_Rx_Byte_c_2), .D0(o_Rx_Byte_c_6), .C0(o_Rx_Byte_c_5), .B0(o_Rx_DV_c), 
    .A0(o_Rx_Byte_c_7), .M0(\uart_rx1/r_Rx_Byte_7 ), 
    .CE(\uart_rx1/r_Rx_DV_N_2484 ), .CLK(\uart_rx1/UartClk[2] ), .F0(n8225), 
    .Q0(o_Rx_Byte_c_7), .F1(n12803));
  SLICE_2409 SLICE_2409( .D1(n13375), .C1(n13376), .B1(n1119), .A1(n7751), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1058), .A0(o_Rx_Byte_c_2), 
    .F0(n7751), .F1(n2326));
  SLICE_2410 SLICE_2410( .D1(n1028), .C1(o_Rx_Byte_c_3), .B1(n13381), 
    .A1(o_Rx_Byte_c_2), .D0(n13375), .C0(n13376), .B0(n1089), .A0(n7805), 
    .F0(n2296), .F1(n7805));
  SLICE_2411 SLICE_2411( .D1(n13375), .C1(n13376), .B1(n1100), .A1(n7787), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1039), .A0(o_Rx_Byte_c_2), 
    .F0(n7787), .F1(n2307));
  SLICE_2412 SLICE_2412( .D1(n13375), .C1(n13376), .B1(n1099), .A1(n7789), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1038), .A0(o_Rx_Byte_c_2), 
    .F0(n7789), .F1(n2306));
  SLICE_2413 SLICE_2413( .D1(n13375), .C1(n13376), .B1(n1108), .A1(n7771), 
    .D0(n1047), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7771), .F1(n2315));
  SLICE_2414 SLICE_2414( .B1(n1030), .A1(o_Rx_Byte_c_3), .D0(n7970), 
    .C0(n13376), .B0(n1091), .A0(n2364), .F0(n2298), .F1(n2364));
  SLICE_2415 SLICE_2415( .D1(n13375), .C1(n13376), .B1(n1125), .A1(n7743), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1064), .A0(o_Rx_Byte_c_2), 
    .F0(n7743), .F1(n2332));
  SLICE_2416 SLICE_2416( .D1(n13375), .C1(n13376), .B1(n1096), .A1(n7795), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1035), .A0(o_Rx_Byte_c_2), 
    .F0(n7795), .F1(n2303));
  SLICE_2417 SLICE_2417( .D1(n13375), .C1(n13376), .B1(n1107), .A1(n7773), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1046), .A0(o_Rx_Byte_c_2), 
    .F0(n7773), .F1(n2314));
  SLICE_2418 SLICE_2418( .D1(n13381), .C1(o_Rx_Byte_c_3), .B1(n1029), 
    .A1(o_Rx_Byte_c_2), .D0(n13375), .C0(n13376), .B0(n1090), .A0(n7803), 
    .F0(n2297), .F1(n7803));
  SLICE_2419 SLICE_2419( .D1(n13375), .C1(n13376), .B1(n1110), .A1(n7767), 
    .D0(n1049), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7767), .F1(n2317));
  SLICE_2420 SLICE_2420( .D1(n13375), .C1(n13376), .B1(n1104), .A1(n7779), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1043), .A0(o_Rx_Byte_c_2), 
    .F0(n7779), .F1(n2311));
  SLICE_2421 SLICE_2421( .D1(n13375), .C1(n13376), .B1(n1131), .A1(n7733), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1070), .A0(o_Rx_Byte_c_2), 
    .F0(n7733), .F1(n2338));
  SLICE_2422 SLICE_2422( .D1(n13375), .C1(n13376), .B1(n1097), .A1(n7793), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1036), .A0(o_Rx_Byte_c_2), 
    .F0(n7793), .F1(n2304));
  SLICE_2423 SLICE_2423( .D1(n13375), .C1(n13376), .B1(n1112), .A1(n7763), 
    .D0(n13381), .C0(o_Rx_Byte_c_3), .B0(n1051), .A0(o_Rx_Byte_c_2), 
    .F0(n7763), .F1(n2319));
  SLICE_2424 SLICE_2424( .D1(n13375), .C1(n13376), .B1(n1115), .A1(n7759), 
    .D0(n1054), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7759), .F1(n2322));
  SLICE_2425 SLICE_2425( .D1(n13375), .C1(n13376), .B1(n1111), .A1(n7765), 
    .D0(n1050), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7765), .F1(n2318));
  SLICE_2426 SLICE_2426( .D1(n13375), .C1(n13376), .B1(n1121), .A1(n7749), 
    .D0(n1060), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7749), .F1(n2328));
  uart_rx1_SLICE_2427 \uart_rx1/SLICE_2427 ( 
    .D1(\uart_rx1/r_SM_Main_2_N_2418_2 ), .C1(\uart_rx1/r_SM_Main_0 ), 
    .B1(\uart_rx1/r_SM_Main_1 ), .A1(\uart_rx1/r_SM_Main_2 ), 
    .D0(\uart_rx1/r_Bit_Index_2 ), .C0(\uart_rx1/r_Bit_Index_0 ), 
    .B0(\uart_rx1/n13374 ), .A0(\uart_rx1/r_Bit_Index_1 ), 
    .F0(\uart_rx1/UartClk_2_enable_18 ), .F1(\uart_rx1/n13374 ));
  SLICE_2428 SLICE_2428( .C1(n9000), .B1(n13523), .A1(o_Rx_Byte_c_3), 
    .D0(n12970), .C0(n8225), .B0(n13291), .A0(o_Rx_Byte_c_4), .F0(n13523), 
    .F1(osc_clk_enable_1397));
  SLICE_2429 SLICE_2429( .D1(o_Rx_Byte_c_3), .C1(n7349), .B1(n12879), 
    .A1(o_Rx_Byte_c_2), .D0(n12970), .C0(n8225), .B0(n13291), 
    .A0(o_Rx_Byte_c_4), .M0(\uart_rx1/r_Rx_Byte_1 ), 
    .CE(\uart_rx1/r_Rx_DV_N_2484 ), .CLK(\uart_rx1/UartClk[2] ), 
    .F0(osc_clk_enable_1447), .Q0(n7349), .F1(n12970));
  SLICE_2430 SLICE_2430( .D1(o_Rx_Byte_c_3), .C1(n7349), .B1(o_Rx_Byte_c_2), 
    .A1(o_Rx_Byte_c_0), .D0(n12970), .C0(n8225), .B0(n13291), 
    .A0(o_Rx_Byte_c_4), .F0(osc_clk_enable_1457), .F1(n13291));
  uart_rx1_SLICE_2431 \uart_rx1/SLICE_2431 ( .D1(\uart_rx1/r_Bit_Index_1 ), 
    .C1(\uart_rx1/n12841 ), .B1(\uart_rx1/n13378 ), 
    .A1(\uart_rx1/r_SM_Main_0 ), .B0(\uart_rx1/r_Bit_Index_2 ), 
    .A0(\uart_rx1/r_Bit_Index_0 ), .F0(\uart_rx1/n12841 ), 
    .F1(\uart_rx1/UartClk_2_enable_1 ));
  SLICE_2432 SLICE_2432( .D1(n13375), .C1(n13376), .B1(n1079), .A1(n2486), 
    .B0(n1018), .A0(o_Rx_Byte_c_3), .F0(n2486), .F1(n2286));
  SLICE_2433 SLICE_2433( .D1(n28), .C1(n13376), .B1(n1113), .A1(n13375), 
    .C0(n13381), .B0(n1052), .A0(o_Rx_Byte_c_3), .F0(n28), .F1(n2320));
  SLICE_2434 SLICE_2434( .D1(n13375), .C1(n13376), .B1(n1106), .A1(n2513), 
    .B0(n1045), .A0(o_Rx_Byte_c_3), .F0(n2513), .F1(n2313));
  SLICE_2435 SLICE_2435( .D1(n29), .C1(n13376), .B1(n1120), .A1(n13375), 
    .C0(n13381), .B0(n1059), .A0(o_Rx_Byte_c_3), .F0(n29), .F1(n2327));
  uart_rx1_SLICE_2436 \uart_rx1/SLICE_2436 ( .B1(\uart_rx1/r_Clock_Count_12 ), 
    .A1(\uart_rx1/r_Clock_Count_9 ), .D0(\uart_rx1/n13059 ), 
    .C0(\uart_rx1/n13055 ), .B0(\uart_rx1/n13063 ), .A0(\uart_rx1/n13061 ), 
    .F0(\uart_rx1/n12796 ), .F1(\uart_rx1/n13059 ));
  uart_rx1_SLICE_2437 \uart_rx1/SLICE_2437 ( .D1(\uart_rx1/r_SM_Main_0 ), 
    .C1(\uart_rx1/n12511 ), .B1(\uart_rx1/n13387 ), .A1(\uart_rx1/r_Rx_Data ), 
    .D0(\uart_rx1/r_Clock_Count_6 ), .C0(\uart_rx1/n13073 ), 
    .B0(\uart_rx1/n12796 ), .A0(\uart_rx1/r_Clock_Count_1 ), 
    .F0(\uart_rx1/n12511 ), .F1(\uart_rx1/n24 ));
  uart_rx1_SLICE_2438 \uart_rx1/SLICE_2438 ( 
    .C1(\uart_rx1/r_SM_Main_2_N_2418_2 ), .B1(\uart_rx1/r_SM_Main_1 ), 
    .A1(\uart_rx1/r_SM_Main_2 ), .D0(\uart_rx1/r_Bit_Index_1 ), 
    .C0(\uart_rx1/n13386 ), .B0(\uart_rx1/n13378 ), 
    .A0(\uart_rx1/r_SM_Main_0 ), .F0(\uart_rx1/UartClk_2_enable_26 ), 
    .F1(\uart_rx1/n13378 ));
  uart_rx1_SLICE_2439 \uart_rx1/SLICE_2439 ( .B1(\uart_rx1/r_Bit_Index_0 ), 
    .A1(\uart_rx1/r_Bit_Index_2 ), .D0(\uart_rx1/r_Bit_Index_1 ), 
    .C0(\uart_rx1/n13386 ), .B0(\uart_rx1/n13378 ), 
    .A0(\uart_rx1/r_SM_Main_0 ), .F0(\uart_rx1/UartClk_2_enable_28 ), 
    .F1(\uart_rx1/n13386 ));
  SLICE_2440 SLICE_2440( .D1(n13375), .C1(n13376), .B1(n1123), .A1(n2530), 
    .D0(n1062), .C0(o_Rx_Byte_c_3), .B0(n13384), .A0(n8225), .F0(n2530), 
    .F1(n2330));
  uart_rx1_SLICE_2441 \uart_rx1/SLICE_2441 ( .D1(\uart_rx1/n13079 ), 
    .C1(\uart_rx1/n13377 ), .B1(\uart_rx1/r_SM_Main_1 ), 
    .A1(\uart_rx1/r_SM_Main_2 ), .D0(\uart_rx1/n12511 ), 
    .C0(\uart_rx1/r_Clock_Count_0 ), .B0(\uart_rx1/r_Clock_Count_5 ), 
    .A0(\uart_rx1/r_Clock_Count_3 ), .F0(\uart_rx1/n13377 ), 
    .F1(\uart_rx1/UartClk_2_enable_23 ));
  SLICE_2442 SLICE_2442( .D1(n13375), .C1(n13376), .B1(n1117), .A1(n7755), 
    .D0(n1056), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7755), .F1(n2324));
  SLICE_2443 SLICE_2443( .D1(n13375), .C1(n13376), .B1(n1127), .A1(n7739), 
    .D0(n1066), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7739), .F1(n2334));
  SLICE_2444 SLICE_2444( .D1(n13375), .C1(n13376), .B1(n1126), .A1(n7741), 
    .D0(n1065), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7741), .F1(n2333));
  SLICE_2445 SLICE_2445( .D1(n13375), .C1(n13376), .B1(n1130), .A1(n7735), 
    .D0(n1069), .C0(o_Rx_Byte_c_3), .B0(n13381), .A0(o_Rx_Byte_c_2), 
    .F0(n7735), .F1(n2337));
  SLICE_2446 SLICE_2446( .D1(n1040), .C1(o_Rx_Byte_c_3), .B1(n13381), 
    .A1(o_Rx_Byte_c_2), .D0(n13375), .C0(n13376), .B0(n1101), .A0(n7785), 
    .F0(n2308), .F1(n7785));
  SLICE_2447 SLICE_2447( .D1(n13383), .C1(o_Rx_Byte_c_3), .B1(n1068), 
    .A1(n1129), .C0(n9000), .B0(n8000), .A0(phase_inc_carrGen_6), .F0(n9589), 
    .F1(n8000));
  SinCos1_SLICE_2448 \SinCos1/SLICE_2448 ( .D1(\SinCos1/rom_addr0_r_6 ), 
    .C1(\SinCos1/rom_addr0_r_7 ), .B1(\SinCos1/rom_addr0_r_8 ), 
    .A1(\SinCos1/rom_addr0_r_9 ), .C0(\SinCos1/mx_ctrl_r ), 
    .B0(\SinCos1/rom_addr0_r_n ), .A0(\SinCos1/rom_addr0_r ), 
    .F0(\SinCos1/rom_addr0_r_6 ), .F1(\SinCos1/func_or_inet ));
  SLICE_2449 SLICE_2449( .B1(o_Rx_Byte_c_3), .A1(n1053), .D0(n13375), 
    .C0(n13376), .B0(n1114), .A0(n2521), .F0(n2321), .F1(n2521));
  SLICE_2450 SLICE_2450( .D1(n13383), .C1(o_Rx_Byte_c_3), .B1(n1055), 
    .A1(n1116), .C0(n9000), .B0(n8006), .A0(phase_inc_carrGen_19), .F0(n9563), 
    .F1(n8006));
  SLICE_2451 SLICE_2451( .B1(o_Rx_Byte_c_3), .A1(n1063), .D0(n13375), 
    .C0(n13376), .B0(n1124), .A0(n2531), .F0(n2331), .F1(n2531));
  SLICE_2452 SLICE_2452( .B1(o_Rx_Byte_c_3), .A1(n1017), .D0(n13375), 
    .C0(n13376), .B0(n1078), .A0(n2485), .F0(n2285), .F1(n2485));
  CIC1Sin_SLICE_2453 \CIC1Sin/SLICE_2453 ( .B1(\CIC1Sin/count_3 ), 
    .A1(\CIC1Sin/n12793 ), .D0(\CIC1Sin/n13113 ), .C0(\CIC1Sin/n13127 ), 
    .B0(\CIC1Sin/n13 ), .A0(\CIC1Sin/n13125 ), .F0(\CIC1Sin/n13505 ), 
    .F1(\CIC1Sin/n13 ));
  CIC1Sin_SLICE_2454 \CIC1Sin/SLICE_2454 ( .D1(\CIC1Sin/n13113 ), 
    .C1(\CIC1Sin/n13127 ), .B1(\CIC1Sin/n13 ), .A1(\CIC1Sin/n13125 ), 
    .B0(\CIC1Sin/count_2 ), .A0(\CIC1Sin/count_10 ), .F0(\CIC1Sin/n13113 ), 
    .F1(\CIC1Sin/d_clk_tmp_N_1831 ));
  CIC1Sin_SLICE_2455 \CIC1Sin/SLICE_2455 ( .B1(\CIC1Sin/count_2 ), 
    .A1(\CIC1Sin/n12793 ), .D0(\CIC1Sin/count_14 ), .C0(\CIC1Sin/count_11 ), 
    .B0(\CIC1Sin/count_15 ), .A0(\CIC1Sin/n7 ), .F0(\CIC1Sin/n12793 ), 
    .F1(\CIC1Sin/n16 ));
  CIC1Sin_SLICE_2456 \CIC1Sin/SLICE_2456 ( .D1(\CIC1Sin/n16 ), 
    .C1(\CIC1Sin/n15 ), .B1(\CIC1Sin/n19 ), .A1(\CIC1Sin/n21 ), 
    .B0(\CIC1Sin/n13505 ), .A0(\CIC1Sin/n31 ), .F0(\CIC1Sin/n8376 ), 
    .F1(\CIC1Sin/n31 ));
  CIC1Cos_SLICE_2457 \CIC1Cos/SLICE_2457 ( .B1(\CIC1Cos/count_5 ), 
    .A1(\CIC1Cos/count_10 ), .D0(\CIC1Cos/n13103 ), .C0(\CIC1Cos/n13123 ), 
    .B0(\CIC1Cos/n13 ), .A0(\CIC1Cos/n13121 ), .F0(\CIC1Cos/count_15__N_1458 ), 
    .F1(\CIC1Cos/n13103 ));
  CIC1Cos_SLICE_2458 \CIC1Cos/SLICE_2458 ( .D1(\CIC1Cos/n13103 ), 
    .C1(\CIC1Cos/n13123 ), .B1(\CIC1Cos/n13 ), .A1(\CIC1Cos/n13121 ), 
    .B0(\CIC1Cos/count_3 ), .A0(\CIC1Cos/n12790 ), .F0(\CIC1Cos/n13 ), 
    .F1(\CIC1Cos/n13507 ));
  CIC1Cos_SLICE_2459 \CIC1Cos/SLICE_2459 ( .B1(\CIC1Cos/count_2 ), 
    .A1(\CIC1Cos/n12790 ), .D0(\CIC1Cos/count_14 ), .C0(\CIC1Cos/count_11 ), 
    .B0(\CIC1Cos/count_15 ), .A0(\CIC1Cos/n7 ), .F0(\CIC1Cos/n12790 ), 
    .F1(\CIC1Cos/n16 ));
  uart_rx1_SLICE_2460 \uart_rx1/SLICE_2460 ( .D1(\uart_rx1/r_Bit_Index_2 ), 
    .C1(\uart_rx1/r_Bit_Index_0 ), .B1(\uart_rx1/n13374 ), 
    .A1(\uart_rx1/r_Bit_Index_1 ), .D0(\uart_rx1/r_Bit_Index_2 ), 
    .C0(\uart_rx1/r_Bit_Index_0 ), .B0(\uart_rx1/n13374 ), 
    .A0(\uart_rx1/r_Bit_Index_1 ), .F0(\uart_rx1/UartClk_2_enable_3 ), 
    .F1(\uart_rx1/UartClk_2_enable_4 ));
  uart_rx1_SLICE_2461 \uart_rx1/SLICE_2461 ( .D1(o_Rx_Byte_c_0), 
    .C1(o_Rx_Byte_c_4), .B1(n7349), .A1(o_Rx_Byte_c_3), .D0(o_Rx_Byte_c_0), 
    .C0(n7349), .B0(o_Rx_Byte_c_3), .A0(o_Rx_Byte_c_4), .F0(\uart_rx1/n13286 ), 
    .F1(\uart_rx1/n13287 ));
  SLICE_2462 SLICE_2462( .C1(o_Rx_Byte_c_2), .B1(n2795), .A1(o_Rx_Byte_c_4), 
    .C0(o_Rx_Byte_c_4), .B0(n2795), .A0(o_Rx_Byte_c_2), .F0(n3663), .F1(n3628));
  uart_rx1_SLICE_2463 \uart_rx1/SLICE_2463 ( 
    .D1(\uart_rx1/r_SM_Main_2_N_2418_2 ), .C1(\uart_rx1/r_SM_Main_0 ), 
    .B1(\uart_rx1/r_SM_Main_2 ), .A1(\uart_rx1/r_SM_Main_1 ), 
    .C0(\uart_rx1/r_SM_Main_1 ), .B0(\uart_rx1/r_SM_Main_2_N_2418_2 ), 
    .A0(\uart_rx1/r_SM_Main_0 ), .F0(\uart_rx1/n13379 ), 
    .F1(\uart_rx1/UartClk_2_enable_11 ));
  uart_rx1_SLICE_2464 \uart_rx1/SLICE_2464 ( .C1(\uart_rx1/r_Clock_Count_15 ), 
    .B1(\uart_rx1/r_Clock_Count_8 ), .A1(\uart_rx1/r_Clock_Count_13 ), 
    .B0(\uart_rx1/r_Clock_Count_11 ), .A0(\uart_rx1/r_Clock_Count_14 ), 
    .F0(\uart_rx1/n13055 ), .F1(\uart_rx1/n13063 ));
  PWM1_SLICE_2465 \PWM1/SLICE_2465 ( .B1(\PWM1/counter_4 ), 
    .A1(\PWM1/counter_6 ), .B0(\PWM1/counter_5 ), .A0(\PWM1/counter_0 ), 
    .F0(\PWM1/n11 ), .F1(\PWM1/n15 ));
  uart_rx1_SLICE_2466 \uart_rx1/SLICE_2466 ( .C1(\uart_rx1/r_Clock_Count_0 ), 
    .B1(\uart_rx1/r_Clock_Count_5 ), .A1(\uart_rx1/r_Clock_Count_3 ), 
    .B0(\uart_rx1/r_Clock_Count_4 ), .A0(\uart_rx1/r_Clock_Count_2 ), 
    .F0(\uart_rx1/n13073 ), .F1(\uart_rx1/n13387 ));
  CIC1Cos_SLICE_2467 \CIC1Cos/SLICE_2467 ( .D1(\CIC1Cos/count_0 ), 
    .C1(\CIC1Cos/count_2 ), .B1(\CIC1Cos/count_6 ), .A1(\CIC1Cos/count_4 ), 
    .B0(\CIC1Cos/n13507 ), .A0(\CIC1Cos/n31 ), .F0(\CIC1Cos/n8387 ), 
    .F1(\CIC1Cos/n13123 ));
  CIC1Cos_SLICE_2468 \CIC1Cos/SLICE_2468 ( .D1(\CIC1Cos/count_0 ), 
    .C1(\CIC1Cos/count_4 ), .B1(\CIC1Cos/count_3 ), .A1(\CIC1Cos/count_9 ), 
    .D0(\CIC1Cos/count_6 ), .C0(\CIC1Cos/count_5 ), .B0(\CIC1Cos/count_1 ), 
    .A0(\CIC1Cos/count_10 ), .F0(\CIC1Cos/n19 ), .F1(\CIC1Cos/n21 ));
  uart_rx1_SLICE_2469 \uart_rx1/SLICE_2469 ( .B1(\uart_rx1/r_SM_Main_0 ), 
    .A1(\uart_rx1/r_Rx_Data ), .D0(\uart_rx1/r_SM_Main_1 ), 
    .C0(\uart_rx1/r_SM_Main_2_N_2418_2 ), .B0(\uart_rx1/n24 ), 
    .A0(\uart_rx1/r_SM_Main_2 ), .F0(\uart_rx1/n8374 ), .F1(\uart_rx1/n13079 ));
  SinCos1_SLICE_2470 \SinCos1/SLICE_2470 ( .C1(\SinCos1/mx_ctrl_r ), 
    .B1(\SinCos1/rom_addr0_r_n_2 ), .A1(\SinCos1/rom_addr0_r_2 ), 
    .C0(\SinCos1/mx_ctrl_r ), .B0(\SinCos1/rom_addr0_r_n_3 ), 
    .A0(\SinCos1/rom_addr0_r_3 ), .F0(\SinCos1/rom_addr0_r_9 ), 
    .F1(\SinCos1/rom_addr0_r_8 ));
  uart_rx1_SLICE_2471 \uart_rx1/SLICE_2471 ( .C1(\uart_rx1/r_SM_Main_0 ), 
    .B1(\uart_rx1/r_SM_Main_2 ), .A1(\uart_rx1/r_SM_Main_1 ), 
    .D0(\uart_rx1/r_Bit_Index_2 ), .C0(\uart_rx1/r_Bit_Index_0 ), 
    .B0(\uart_rx1/n13374 ), .A0(\uart_rx1/r_Bit_Index_1 ), 
    .F0(\uart_rx1/UartClk_2_enable_5 ), .F1(\uart_rx1/n12819 ));
  SLICE_2472 SLICE_2472( .C1(n9000), .B1(n2309), .A1(phase_inc_carrGen_33), 
    .C0(n9000), .B0(n2327), .A0(phase_inc_carrGen_15), .F0(n9571), .F1(n9535));
  SLICE_2473 SLICE_2473( .C1(n9000), .B1(n2305), .A1(phase_inc_carrGen_37), 
    .C0(n9000), .B0(n2315), .A0(phase_inc_carrGen_27), .F0(n9547), .F1(n9527));
  SLICE_2474 SLICE_2474( .D1(n13383), .C1(n9000), .B1(o_Rx_Byte_c_3), 
    .A1(n13523), .C0(n9000), .B0(n2337), .A0(phase_inc_carrGen_5), .F0(n9591), 
    .F1(osc_clk_enable_128));
  SLICE_2475 SLICE_2475( .D1(n13390), .C1(o_Rx_Byte_c_6), .B1(o_Rx_Byte_c_0), 
    .A1(o_Rx_Byte_c_2), .C0(n9000), .B0(n2338), .A0(phase_inc_carrGen_4), 
    .F0(n9593), .F1(n12931));
  PWM1_SLICE_2476 \PWM1/SLICE_2476 ( .D0(\PWM1/counter_9 ), 
    .C0(\PWM1/counter_1 ), .B0(\PWM1/counter_2 ), .A0(\PWM1/counter_3 ), 
    .F0(\PWM1/n17 ));
  SLICE_2477 SLICE_2477( .D0(n1020), .C0(o_Rx_Byte_c_3), .B0(n13381), 
    .A0(o_Rx_Byte_c_2), .F0(n7819));
  SLICE_2478 SLICE_2478( .D0(n13383), .C0(o_Rx_Byte_c_3), .B0(n1033), 
    .A0(n1094), .F0(n8008));
  SLICE_2479 SLICE_2479( .B0(n2795), .A0(o_Rx_Byte_c_4), .F0(n3653));
  uart_rx1_SLICE_2480 \uart_rx1/SLICE_2480 ( .B0(n2795), .A0(o_Rx_Byte_c_4), 
    .F0(n3614));
  uart_rx1_SLICE_2481 \uart_rx1/SLICE_2481 ( .B0(o_Rx_Byte_c_3), 
    .A0(o_Rx_Byte_c_4), .F0(n6));
  uart_rx1_SLICE_2482 \uart_rx1/SLICE_2482 ( .B0(n12803), .A0(o_Rx_Byte_c_4), 
    .F0(n13380));
  uart_rx1_SLICE_2483 \uart_rx1/SLICE_2483 ( .B0(n7349), .A0(o_Rx_Byte_c_4), 
    .F0(n13385));
  uart_rx1_SLICE_2484 \uart_rx1/SLICE_2484 ( .B0(\uart_rx1/r_Clock_Count_10 ), 
    .A0(\uart_rx1/r_Clock_Count_7 ), .F0(\uart_rx1/n13061 ));
  uart_rx1_SLICE_2485 \uart_rx1/SLICE_2485 ( .D0(\uart_rx1/r_Bit_Index_1 ), 
    .C0(\uart_rx1/n12841 ), .B0(\uart_rx1/n13378 ), 
    .A0(\uart_rx1/r_SM_Main_0 ), .F0(\uart_rx1/UartClk_2_enable_27 ));
  SLICE_2486 SLICE_2486( .A0(PWMOutP4_c), .F0(PWMOutN4_c));
  SinCos1_SLICE_2487 \SinCos1/SLICE_2487 ( .C0(\SinCos1/mx_ctrl_r ), 
    .B0(\SinCos1/rom_addr0_r_n_5 ), .A0(\SinCos1/rom_addr0_r_5 ), 
    .M0(phase_accum_62), .CLK(osc_clk), .F0(\SinCos1/rom_addr0_r_11 ), 
    .Q0(\SinCos1/mx_ctrl_r ));
  SinCos1_muxb_39_SLICE_2488 \SinCos1/muxb_39/SLICE_2488 ( 
    .C0(\SinCos1/sinromoutsel ), .B0(\SinCos1/rom_dout_s_n_12 ), 
    .A0(\SinCos1/rom_dout_12 ), .F0(\SinCos1/rom_dout_s_12 ));
  SLICE_2489 SLICE_2489( .B0(o_Rx_Byte_c_0), .A0(o_Rx_Byte_c_4), .F0(n12879));
  SLICE_2490 SLICE_2490( .D0(n13383), .C0(o_Rx_Byte_c_3), .B0(n1057), 
    .A0(n1118), .F0(n8004));
  SLICE_2491 SLICE_2491( .D0(n13383), .C0(o_Rx_Byte_c_3), .B0(n1012), 
    .A0(n1073), .F0(n8014));
  SLICE_2492 SLICE_2492( .D0(n13383), .C0(o_Rx_Byte_c_3), .B0(n1011), 
    .A0(n1072), .F0(n8016));
  SLICE_2493 SLICE_2493( .D0(n13383), .C0(o_Rx_Byte_c_3), .B0(n1013), 
    .A0(n1074), .F0(n8012));
  SLICE_2494 SLICE_2494( .D0(n13383), .C0(o_Rx_Byte_c_3), .B0(n1061), 
    .A0(n1122), .F0(n8002));
  ncoGen_SLICE_2495 \ncoGen/SLICE_2495 ( .A0(phase_accum_63), .F0(sinGen_c));
  CIC1Sin_SLICE_2496 \CIC1Sin/SLICE_2496 ( .C0(CICGain_0), 
    .B0(\CIC1Sin/d10_70 ), .A0(\CIC1Sin/d10_69 ), .F0(\CIC1Sin/n70 ));
  CIC1Sin_SLICE_2497 \CIC1Sin/SLICE_2497 ( .B0(\CIC1Sin/count_12 ), 
    .A0(\CIC1Sin/count_13 ), .F0(\CIC1Sin/n7 ));
  CIC1Sin_SLICE_2498 \CIC1Sin/SLICE_2498 ( .B0(\CIC1Sin/d1_36 ), 
    .A0(MixerOutSin_11), .F0(\CIC1Sin/n4313 ));
  CIC1Sin_SLICE_2499 \CIC1Sin/SLICE_2499 ( .B0(\CIC1Sin/d2_36 ), 
    .A0(\CIC1Sin/d1_36 ), .F0(\CIC1Sin/n4465 ));
  CIC1Sin_SLICE_2500 \CIC1Sin/SLICE_2500 ( .B0(\CIC1Sin/d3_36 ), 
    .A0(\CIC1Sin/d2_36 ), .F0(\CIC1Sin/n4617 ));
  CIC1Sin_SLICE_2501 \CIC1Sin/SLICE_2501 ( .D0(\CIC1Sin/count_8 ), 
    .C0(\CIC1Sin/count_0 ), .B0(\CIC1Sin/count_1 ), .A0(\CIC1Sin/count_6 ), 
    .F0(\CIC1Sin/n13125 ));
  CIC1Sin_SLICE_2502 \CIC1Sin/SLICE_2502 ( .B0(\CIC1Sin/d4_36 ), 
    .A0(\CIC1Sin/d3_36 ), .F0(\CIC1Sin/n4769 ));
  CIC1Sin_SLICE_2503 \CIC1Sin/SLICE_2503 ( .B0(\CIC1Sin/d5_36 ), 
    .A0(\CIC1Sin/d4_36 ), .F0(\CIC1Sin/n4921 ));
  CIC1Cos_SLICE_2504 \CIC1Cos/SLICE_2504 ( .B0(\CIC1Cos/count_12 ), 
    .A0(\CIC1Cos/count_13 ), .F0(\CIC1Cos/n7 ));
  CIC1Cos_SLICE_2505 \CIC1Cos/SLICE_2505 ( .B0(\CIC1Cos/d3_36 ), 
    .A0(\CIC1Cos/d2_36 ), .F0(\CIC1Cos/n5377 ));
  CIC1Cos_SLICE_2506 \CIC1Cos/SLICE_2506 ( .B0(\CIC1Cos/d5_36 ), 
    .A0(\CIC1Cos/d4_36 ), .F0(\CIC1Cos/n5681 ));
  CIC1Cos_SLICE_2507 \CIC1Cos/SLICE_2507 ( .B0(\CIC1Cos/d2_36 ), 
    .A0(\CIC1Cos/d1_36 ), .F0(\CIC1Cos/n5225 ));
  CIC1Cos_SLICE_2508 \CIC1Cos/SLICE_2508 ( .B0(\CIC1Cos/d1_36 ), 
    .A0(MixerOutCos_11), .F0(\CIC1Cos/n5073 ));
  CIC1Cos_SLICE_2509 \CIC1Cos/SLICE_2509 ( .C0(CICGain_0), .B0(d10_70), 
    .A0(d10_69), .F0(n70));
  CIC1Cos_SLICE_2510 \CIC1Cos/SLICE_2510 ( .B0(\CIC1Cos/d4_36 ), 
    .A0(\CIC1Cos/d3_36 ), .F0(\CIC1Cos/n5529 ));
  AMDemodulator1_SLICE_2511 \AMDemodulator1/SLICE_2511 ( 
    .A0(\AMDemodulator1/d_out_d_11_N_1874_17 ), 
    .F0(\AMDemodulator1/d_out_d_11__N_1873 ));
  AMDemodulator1_SLICE_2512 \AMDemodulator1/SLICE_2512 ( 
    .A0(\AMDemodulator1/d_out_d_11_N_1872_17 ), 
    .F0(\AMDemodulator1/d_out_d_11__N_1871 ));
  AMDemodulator1_SLICE_2513 \AMDemodulator1/SLICE_2513 ( 
    .B0(\AMDemodulator1/ISquare_22 ), .A0(\AMDemodulator1/ISquare_23 ), 
    .F0(\AMDemodulator1/n12447 ));
  AMDemodulator1_SLICE_2514 \AMDemodulator1/SLICE_2514 ( 
    .A0(\AMDemodulator1/ISquare_31 ), .F0(\AMDemodulator1/n209 ));
  AMDemodulator1_Multiplier2_SLICE_2515 
    \AMDemodulator1/Multiplier2/SLICE_2515 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2516 
    \AMDemodulator1/Multiplier2/SLICE_2516 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_1_2 ));
  AMDemodulator1_Multiplier2_SLICE_2517 
    \AMDemodulator1/Multiplier2/SLICE_2517 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2518 
    \AMDemodulator1/Multiplier2/SLICE_2518 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2519 
    \AMDemodulator1/Multiplier2/SLICE_2519 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_3_6 ));
  AMDemodulator1_Multiplier2_SLICE_2520 
    \AMDemodulator1/Multiplier2/SLICE_2520 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2521 
    \AMDemodulator1/Multiplier2/SLICE_2521 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2522 
    \AMDemodulator1/Multiplier2/SLICE_2522 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_pp_5_10 ));
  AMDemodulator1_Multiplier2_SLICE_2523 
    \AMDemodulator1/Multiplier2/SLICE_2523 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2524 
    \AMDemodulator1/Multiplier2/SLICE_2524 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_3 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2525 
    \AMDemodulator1/Multiplier2/SLICE_2525 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_2 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2526 
    \AMDemodulator1/Multiplier2/SLICE_2526 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_5 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2527 
    \AMDemodulator1/Multiplier2/SLICE_2527 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_4 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2528 
    \AMDemodulator1/Multiplier2/SLICE_2528 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_7 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2529 
    \AMDemodulator1/Multiplier2/SLICE_2529 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_6 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2530 
    \AMDemodulator1/Multiplier2/SLICE_2530 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_9 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n1 ));
  AMDemodulator1_Multiplier2_SLICE_2531 
    \AMDemodulator1/Multiplier2/SLICE_2531 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_8 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2532 
    \AMDemodulator1/Multiplier2/SLICE_2532 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2533 
    \AMDemodulator1/Multiplier2/SLICE_2533 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_10 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5_n0 ));
  AMDemodulator1_Multiplier2_SLICE_2534 
    \AMDemodulator1/Multiplier2/SLICE_2534 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_0 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2535 
    \AMDemodulator1/Multiplier2/SLICE_2535 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2536 
    \AMDemodulator1/Multiplier2/SLICE_2536 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2537 
    \AMDemodulator1/Multiplier2/SLICE_2537 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5_n2 ));
  AMDemodulator1_Multiplier2_SLICE_2538 
    \AMDemodulator1/Multiplier2/SLICE_2538 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_11 ), 
    .M0(\AMDemodulator1/MultDataC_11 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5_n2 ), 
    .Q0(\AMDemodulator1/Multiplier2/rega_a_11 ));
  AMDemodulator1_Multiplier2_SLICE_2539 
    \AMDemodulator1/Multiplier2/SLICE_2539 ( 
    .B0(\AMDemodulator1/Multiplier2/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier2/rega_a_1 ), 
    .F0(\AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2540 
    \AMDemodulator1/Multiplier1/SLICE_2540 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_1 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2541 
    \AMDemodulator1/Multiplier1/SLICE_2541 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_1_2 ));
  AMDemodulator1_Multiplier1_SLICE_2542 
    \AMDemodulator1/Multiplier1/SLICE_2542 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_3 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2543 
    \AMDemodulator1/Multiplier1/SLICE_2543 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_5 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2544 
    \AMDemodulator1/Multiplier1/SLICE_2544 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_3_6 ));
  AMDemodulator1_Multiplier1_SLICE_2545 
    \AMDemodulator1/Multiplier1/SLICE_2545 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_7 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2546 
    \AMDemodulator1/Multiplier1/SLICE_2546 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_9 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2547 
    \AMDemodulator1/Multiplier1/SLICE_2547 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_pp_5_10 ));
  AMDemodulator1_Multiplier1_SLICE_2548 
    \AMDemodulator1/Multiplier1/SLICE_2548 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2549 
    \AMDemodulator1/Multiplier1/SLICE_2549 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_3 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2550 
    \AMDemodulator1/Multiplier1/SLICE_2550 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_2 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2551 
    \AMDemodulator1/Multiplier1/SLICE_2551 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_5 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2552 
    \AMDemodulator1/Multiplier1/SLICE_2552 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_4 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2553 
    \AMDemodulator1/Multiplier1/SLICE_2553 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_7 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2554 
    \AMDemodulator1/Multiplier1/SLICE_2554 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_6 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2555 
    \AMDemodulator1/Multiplier1/SLICE_2555 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_9 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n1 ));
  AMDemodulator1_Multiplier1_SLICE_2556 
    \AMDemodulator1/Multiplier1/SLICE_2556 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_8 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2557 
    \AMDemodulator1/Multiplier1/SLICE_2557 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_10 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2558 
    \AMDemodulator1/Multiplier1/SLICE_2558 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_10 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5_n0 ));
  AMDemodulator1_Multiplier1_SLICE_2559 
    \AMDemodulator1/Multiplier1/SLICE_2559 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_0 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2560 
    \AMDemodulator1/Multiplier1/SLICE_2560 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_2 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2561 
    \AMDemodulator1/Multiplier1/SLICE_2561 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_4 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2562 
    \AMDemodulator1/Multiplier1/SLICE_2562 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_6 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5_n2 ));
  AMDemodulator1_Multiplier1_SLICE_2563 
    \AMDemodulator1/Multiplier1/SLICE_2563 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_8 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_11 ), 
    .M0(\AMDemodulator1/MultDataB_11 ), .CLK(CIC1_out_clkSin), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5_n2 ), 
    .Q0(\AMDemodulator1/Multiplier1/rega_a_11 ));
  AMDemodulator1_Multiplier1_SLICE_2564 
    \AMDemodulator1/Multiplier1/SLICE_2564 ( 
    .B0(\AMDemodulator1/Multiplier1/regb_b_11 ), 
    .A0(\AMDemodulator1/Multiplier1/rega_a_1 ), 
    .F0(\AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0_n1 ));
  SLICE_2565 SLICE_2565( .F0(VCC_net));
  SLICE_2566 SLICE_2566( .F0(GND_net));
  o_Rx_Byte_7_ \o_Rx_Byte[7]_I ( .PADDO(o_Rx_Byte_c_7), 
    .oRxByte7(o_Rx_Byte[7]));
  o_Rx_Byte_6_ \o_Rx_Byte[6]_I ( .PADDO(o_Rx_Byte_c_6), 
    .oRxByte6(o_Rx_Byte[6]));
  o_Rx_DV o_Rx_DV_I( .PADDO(o_Rx_DV_c), .o_Rx_DV(o_Rx_DV));
  o_Tx_Serial o_Tx_Serial_I( .PADDO(GND_net), .o_Tx_Serial(o_Tx_Serial));
  o_Rx_Byte_5_ \o_Rx_Byte[5]_I ( .PADDO(o_Rx_Byte_c_5), 
    .oRxByte5(o_Rx_Byte[5]));
  o_Rx_Byte_4_ \o_Rx_Byte[4]_I ( .PADDO(o_Rx_Byte_c_4), 
    .oRxByte4(o_Rx_Byte[4]));
  o_Rx_Byte_3_ \o_Rx_Byte[3]_I ( .PADDO(o_Rx_Byte_c_3), 
    .oRxByte3(o_Rx_Byte[3]));
  o_Rx_Byte_2_ \o_Rx_Byte[2]_I ( .PADDO(o_Rx_Byte_c_2), 
    .oRxByte2(o_Rx_Byte[2]));
  o_Rx_Byte_1_ \o_Rx_Byte[1]_I ( .PADDO(n7349), .oRxByte1(o_Rx_Byte[1]));
  o_Rx_Byte_0_ \o_Rx_Byte[0]_I ( .PADDO(o_Rx_Byte_c_0), 
    .oRxByte0(o_Rx_Byte[0]));
  MYLED_7_ \MYLED[7]_I ( .PADDO(GND_net), .MYLED7(MYLED[7]));
  MYLED_6_ \MYLED[6]_I ( .PADDO(n7349), .MYLED6(MYLED[6]));
  MYLED_5_ \MYLED[5]_I ( .PADDO(MYLED_c_5), .MYLED5(MYLED[5]));
  MYLED_4_ \MYLED[4]_I ( .PADDO(MYLED_c_4), .MYLED4(MYLED[4]));
  MYLED_3_ \MYLED[3]_I ( .PADDO(MYLED_c_3), .MYLED3(MYLED[3]));
  MYLED_2_ \MYLED[2]_I ( .PADDO(MYLED_c_2), .MYLED2(MYLED[2]));
  MYLED_1_ \MYLED[1]_I ( .PADDO(MYLED_c_1), .MYLED1(MYLED[1]));
  MYLED_0_ \MYLED[0]_I ( .PADDO(MYLED_c_0), .MYLED0(MYLED[0]));
  XOut XOut_I( .PADDO(GND_net), .XOut(XOut));
  DiffOut DiffOut_I( .PADDO(DiffOut_c), .DiffOut(DiffOut));
  PWMOut PWMOut_I( .PADDO(PWMOutP4_c), .PWMOut(PWMOut));
  PWMOutP1 PWMOutP1_I( .PADDO(PWMOutP4_c), .PWMOutP1(PWMOutP1));
  PWMOutP2 PWMOutP2_I( .PADDO(PWMOutP4_c), .PWMOutP2(PWMOutP2));
  PWMOutP3 PWMOutP3_I( .PADDO(PWMOutP4_c), .PWMOutP3(PWMOutP3));
  PWMOutP4 PWMOutP4_I( .PADDO(PWMOutP4_c), .PWMOutP4(PWMOutP4));
  PWMOutN1 PWMOutN1_I( .PADDO(PWMOutN4_c), .PWMOutN1(PWMOutN1));
  PWMOutN2 PWMOutN2_I( .PADDO(PWMOutN4_c), .PWMOutN2(PWMOutN2));
  PWMOutN3 PWMOutN3_I( .PADDO(PWMOutN4_c), .PWMOutN3(PWMOutN3));
  PWMOutN4 PWMOutN4_I( .PADDO(PWMOutN4_c), .PWMOutN4(PWMOutN4));
  sinGen sinGen_I( .PADDO(sinGen_c), .sinGen(sinGen));
  sin_out sin_out_I( .PADDO(GND_net), .sin_out(sin_out));
  CIC_out_clkSin CIC_out_clkSin_I( .PADDO(GND_net), 
    .CIC_out_clkSin(CIC_out_clkSin));
  i_Rx_Serial i_Rx_Serial_I( .PADDI(i_Rx_Serial_c), .i_Rx_Serial(i_Rx_Serial));
  RFIn RFIn_I( .PADDI(RFIn_c), .RFIn(RFIn));
  OSCH_inst OSCH_inst( .OSC(osc_clk));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCC_net));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module PWM1_SLICE_0 ( input A0, DI0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \PWM1/counter_999__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu2 \PWM1/counter_999_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_1 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_999__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_999__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \PWM1/counter_999_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_2 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_999__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_999__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \PWM1/counter_999_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_3 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_999__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_999__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \PWM1/counter_999_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_4 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \PWM1/counter_999__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/counter_999__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \PWM1/counter_999_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_5 ( input A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \PWM1/counter_999__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20002 \PWM1/counter_999_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_6 ( input B0, A0, DI1, CLK, FCI, output F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \PWM1/PWMOut_15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \PWM1/sub_761_add_2_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_7 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_761_add_2_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM1_SLICE_8 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_761_add_2_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_9 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_761_add_2_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_10 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \PWM1/sub_761_add_2_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_11 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \PWM1/sub_761_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module uart_rx1_SLICE_12 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \uart_rx1/UartClk_1000_1022__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/UartClk_1000_1022__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \uart_rx1/UartClk_1000_1022_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_13 ( input A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \uart_rx1/UartClk_1000_1022__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20002 \uart_rx1/UartClk_1000_1022_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_14 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \uart_rx1/r_Clock_Count_1002_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0006 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module uart_rx1_SLICE_15 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1002_add_4_15 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_16 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1002_add_4_13 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_17 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1002_add_4_11 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_18 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1002_add_4_9 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_19 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1002_add_4_7 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_20 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1002_add_4_5 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_21 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \uart_rx1/r_Clock_Count_1002_add_4_3 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_22 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0006 \uart_rx1/r_Clock_Count_1002__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \uart_rx1/r_Clock_Count_1002_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_23 ( input A1, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20007 sub_42_add_2_63( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_24 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_61( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_25 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_59( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_26 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_57( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_27 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_55( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_28 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_53( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_29 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_42_add_2_51( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_30 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_49( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_31 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_47( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_32 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_45( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_33 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_43( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_34 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_41( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_35 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_39( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_36 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_37( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_37 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_35( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_38 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_42_add_2_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_39 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_40 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_41 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_42 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_42_add_2_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_43 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_42_add_2_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_45 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_46 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_47 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_42_add_2_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_48 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_42_add_2_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_49 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_42_add_2_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_50 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_42_add_2_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_51 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_42_add_2_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_52 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_42_add_2_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_53 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_42_add_2_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_54 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20011 sub_42_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_55 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i63( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i62( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_65( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h74b8;
  defparam inst1.INIT1 = 16'h74b8;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_56 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i61( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i60( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_63( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_57 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i59( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i58( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_61( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_58 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i57( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i56( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_59( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_59 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i55( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i54( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_57( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_60 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i53( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i52( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_55( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_61 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i51( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i50( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_53( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_62 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i49( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i48( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_51( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_63 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i47( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i46( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 add_745_49( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hb874;
  defparam inst1.INIT1 = 16'hb874;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_64 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i45( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i44( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_47( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_65 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i43( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i42( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 add_745_45( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h74b8;
  defparam inst1.INIT1 = 16'hb874;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_66 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i41( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i40( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 add_745_43( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_67 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i39( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i38( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_41( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_68 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i37( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i36( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_745_39( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h74b8;
  defparam inst1.INIT1 = 16'h5a9a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_69 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i35( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i34( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_37( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_70 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i33( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i32( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_745_35( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i31( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i30( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_33( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i29( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i28( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20016 add_745_31( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hb874;
  defparam inst1.INIT1 = 16'h74b8;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_73 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i27( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i26( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_745_29( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i25( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i24( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_27( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_75 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i23( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i22( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_25( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_76 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i21( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i20( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_23( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i19( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i18( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_745_21( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_78 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i17( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i16( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 add_745_19( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i15( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i14( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 add_745_17( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_80 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i13( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_15( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_81 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 add_745_13( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_82 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i9( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i8( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20016 add_745_11( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20017 add_745_9( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5a9a;
  defparam inst1.INIT1 = 16'h74b8;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_84 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20018 add_745_7( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5a9a;
  defparam inst1.INIT1 = 16'h5a9a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_85 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen_i0_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 add_745_5( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_86 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20012 add_745_3( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_87 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20019 add_745_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h7777;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_88 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20020 sub_41_add_2_61( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_89 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_59( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_90 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_57( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_91 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_55( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_92 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_53( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_93 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_51( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_94 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_49( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_95 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_41_add_2_47( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_96 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_41_add_2_45( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_97 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_43( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_98 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_41_add_2_41( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_99 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_41_add_2_39( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_100 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_41_add_2_37( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_101 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_41_add_2_35( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_102 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_41_add_2_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_103 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_41_add_2_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_104 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_41_add_2_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_105 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_41_add_2_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_106 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_41_add_2_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_107 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_108 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_109 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_41_add_2_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_110 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_41_add_2_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_111 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_112 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 sub_41_add_2_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_113 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_41_add_2_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_114 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_41_add_2_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_115 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_41_add_2_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_116 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_41_add_2_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_117 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 sub_41_add_2_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_118 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20011 sub_41_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_119 ( input A1, M1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, A1_NOTIN, M1_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \SinCos1/neg_rom_addr0_r_n_0 ( .A0(GNDI), .A1(A1_NOTIN), .B0(GNDI), 
    .B1(VCCI), .CI(), .S0(), .S1(F1), .CO1(FCO));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module alu2_mult ( input A0, A1, B0, B1, CI, output S0, S1, CO1 );

  FADD2B INST01( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(CI), .COUT(CO1), 
    .S0(S0), .S1(S1));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SinCos1_SLICE_120 ( input A1, A0, M1, CLK, FCI, output F0, F1, Q1, FCO );
  wire   VCCI, GNDI, A0_NOTIN, A1_NOTIN, M1_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \SinCos1/neg_rom_addr0_r_n_1 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_121 ( input A1, A0, M1, CLK, FCI, output F0, F1, Q1, FCO );
  wire   VCCI, GNDI, A0_NOTIN, A1_NOTIN, M1_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \SinCos1/neg_rom_addr0_r_n_2 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_122 ( input A0, FCI, output F0 );
  wire   A0_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_addr0_r_n_3 ( .A0(A0_NOTIN), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_123 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_1 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_124 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_2 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_125 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_3 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_126 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_4 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_127 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_5 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_128 ( input A1, A0, FCI, output F0, F1 );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_6 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_129 ( input A1, output FCO );
  wire   GNDI, A1_NOTIN, VCCI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_0 ( .A0(GNDI), .A1(A1_NOTIN), .B0(GNDI), 
    .B1(VCCI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_130 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_1 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_131 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_2 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_132 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_3 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_133 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_4 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_134 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_5 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_135 ( input A1, A0, FCI, output F0, F1 );
  wire   A0_NOTIN, A1_NOTIN, GNDI;

  alu2_mult \SinCos1/neg_rom_dout_c_n_6 ( .A0(A0_NOTIN), .A1(A1_NOTIN), 
    .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  inverter A0_INVERTERIN( .I(A0), .Z(A0_NOTIN));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_136 ( input A1, output FCO );
  wire   GNDI, A1_NOTIN, VCCI;

  alu2_mult \SinCos1/neg_rom_dout_s_n_0 ( .A0(GNDI), .A1(A1_NOTIN), .B0(GNDI), 
    .B1(VCCI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter A1_INVERTERIN( .I(A1), .Z(A1_NOTIN));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_137 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20021 \Mixer1/unary_minus_7_add_3_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20021 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module Mixer1_SLICE_138 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_7_add_3_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20022 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module Mixer1_SLICE_139 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_7_add_3_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_140 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_7_add_3_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_141 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_7_add_3_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_142 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_7_add_3_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_143 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \Mixer1/unary_minus_7_add_3_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module Mixer1_SLICE_144 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20021 \Mixer1/unary_minus_6_add_3_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_145 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_6_add_3_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_146 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_6_add_3_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_147 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_6_add_3_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_148 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_6_add_3_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_149 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20022 \Mixer1/unary_minus_6_add_3_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_150 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20023 \Mixer1/unary_minus_6_add_3_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_151 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_64 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20024 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module ncoGen_SLICE_152 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_62 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_153 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_60 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_154 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_58 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_155 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_56 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_156 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_54 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_157 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_52 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_158 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_50 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_159 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_48 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_160 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_46 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_161 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_44 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_162 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_42 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_163 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_40 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_164 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_38 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_165 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_36 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_166 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_34 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_167 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_32 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_168 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_30 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_169 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_28 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_170 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_26 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_171 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_24 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_172 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_22 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_173 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_20 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_174 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_18 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_175 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_16 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_176 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_14 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_177 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_12 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_178 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_179 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_180 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_181 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \ncoGen/phase_accum_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \ncoGen/phase_accum_63__I_0_12_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_182 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \ncoGen/phase_accum_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \ncoGen/phase_accum_63__I_0_12_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20025 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_183 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_184 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_185 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_186 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_187 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_188 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_189 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_190 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_191 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_192 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_193 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_194 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_195 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_196 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_197 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1045_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_198 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_199 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_200 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_201 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_202 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Sin/add_1098_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_203 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1094_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_204 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_205 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_206 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_207 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_208 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_209 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_210 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_211 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_212 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_213 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_214 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_215 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_216 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_217 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_218 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_219 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_220 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_221 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_222 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_223 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_224 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1099_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20026 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_225 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1100_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_226 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_227 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_228 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_229 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_230 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_231 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_232 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_233 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_234 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_235 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_236 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_237 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_238 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_239 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1094_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_240 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1094_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_241 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_242 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_243 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_244 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_245 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_246 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_247 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_248 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_249 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_250 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_251 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_252 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_253 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_254 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_255 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_256 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_257 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_258 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_259 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_260 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_261 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_262 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_263 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_264 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_265 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_266 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_267 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1100_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_268 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Sin/add_1100_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_269 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_270 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_271 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_272 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_273 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_274 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_275 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_276 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_277 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_278 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_279 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_280 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_281 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_282 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_283 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_284 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_285 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_286 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1049_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_287 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1049_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_288 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_289 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_290 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_291 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_292 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_293 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_294 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_295 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_296 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_297 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_298 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_299 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_300 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_301 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_302 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_303 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_304 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_305 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1050_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_306 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1050_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_307 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1095_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_308 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_309 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_310 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_311 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_312 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_313 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1129_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_314 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_315 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_316 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_317 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_318 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_319 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_320 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_321 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_322 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_323 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_324 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_325 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_326 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_327 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_328 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_329 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_330 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1129_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_331 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1129_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_332 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_333 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_334 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_335 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_336 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_337 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_338 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_339 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_340 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_341 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_342 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_343 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_344 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_345 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_346 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_347 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_348 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_349 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1130_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_350 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1130_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_351 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1134_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_352 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_353 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_354 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_355 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_356 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_357 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_358 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_359 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_360 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_361 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_362 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_363 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_364 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_365 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_366 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_367 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_368 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1134_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_369 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1134_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_370 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_371 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_372 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_373 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_374 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_375 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_376 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_377 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_378 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_379 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_380 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_381 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_382 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_383 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_384 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_385 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_386 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_387 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1135_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_388 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1135_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_389 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1038_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_390 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_391 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_392 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_393 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_394 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_395 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_396 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_397 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Sin/add_1038_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_398 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_399 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_400 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_401 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_402 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_403 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_404 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_405 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_406 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1038_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_407 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1038_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_408 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1093_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_409 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_410 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_411 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_412 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_413 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_414 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_415 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_416 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_417 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_418 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_419 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_420 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_421 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_422 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_423 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_424 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_425 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d9_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1093_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_426 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d9_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1093_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_427 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20027 \CIC1Sin/add_10_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20027 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_428 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_429 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20008 \CIC1Sin/add_10_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_430 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_431 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_432 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_433 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_434 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Sin/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Sin/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Sin/add_10_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_435 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20011 \CIC1Sin/add_10_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_436 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1063_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20028 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CIC1Sin_SLICE_437 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_438 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_439 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_440 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_441 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_442 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_443 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_444 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_445 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_446 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_447 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_448 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_449 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_450 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_451 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_452 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_453 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1063_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_454 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d5_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1063_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_455 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1058_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_456 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_457 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_458 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_459 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_460 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_461 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_462 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_463 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_464 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_465 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_466 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_467 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_468 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_469 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_470 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_471 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_472 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1058_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_473 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d4_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1058_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_474 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1053_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_475 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_476 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_477 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_478 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_479 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_480 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_481 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_482 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_483 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_484 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_485 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_486 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_487 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_488 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_489 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_490 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_491 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1053_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_492 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d3_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1053_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_493 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1048_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_494 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_495 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_496 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_497 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_498 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_499 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_500 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_501 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_502 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_503 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_504 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_505 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_506 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_507 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_508 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_509 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_510 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d2_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1048_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_511 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d2_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1048_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_512 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Sin/add_1043_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_513 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_514 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_515 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_516 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_517 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_518 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_519 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_520 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_521 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_522 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_523 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_524 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_525 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_526 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_527 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_528 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_529 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Sin/add_1043_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_530 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d1_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Sin/add_1043_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_531 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1133_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_532 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_533 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_534 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Sin/add_1128_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_535 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_536 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_537 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_538 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_539 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_540 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_541 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_542 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_543 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_544 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_545 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_546 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_547 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_548 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_549 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_550 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_551 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d8_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1128_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_552 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d8_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1128_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_553 ( input B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1098_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_554 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_555 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_556 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_557 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_558 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_559 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_560 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_561 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_562 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_563 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_564 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_565 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1098_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_566 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_567 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Sin/add_1133_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_568 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_569 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_570 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_571 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_572 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_573 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_574 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_575 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_576 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_577 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_578 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_579 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_580 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d7_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Sin/add_1133_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_581 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Sin/add_1133_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_582 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_583 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_584 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_585 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_586 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_587 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_588 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_589 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_590 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_591 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_592 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_593 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_594 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_595 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_596 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1054_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_597 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1054_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_598 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_599 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_600 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_601 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_602 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_603 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_604 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_605 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_606 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_607 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_608 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_609 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_610 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_611 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_612 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_613 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_614 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_615 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d3_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1055_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_616 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1055_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_617 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_618 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_619 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_620 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_621 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_622 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_623 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_624 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_625 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_626 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_627 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_628 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_629 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_630 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_631 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_632 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_633 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1059_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_634 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1059_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_635 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_636 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_637 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1039_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_638 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_639 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_640 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_641 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_642 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_643 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_644 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_645 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_646 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_647 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_648 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_649 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_650 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_651 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_652 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_653 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_654 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_655 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_656 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_657 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_658 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_659 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_660 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1039_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_661 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Sin/add_1039_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_662 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_663 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_664 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_665 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_666 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_667 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_668 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_669 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_670 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_671 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_672 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_673 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_674 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_675 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_676 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_677 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_678 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_679 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_680 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_681 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d6_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Sin/add_1040_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_682 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1040_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_683 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_684 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_685 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_686 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_687 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_688 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_689 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Sin/add_1099_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_690 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1095_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_691 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Sin/add_1099_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_692 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_693 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_694 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_695 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_696 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_697 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_698 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_699 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_700 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_701 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_702 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_703 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_704 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_705 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_706 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_707 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_708 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d4_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1060_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_709 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1060_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_710 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_711 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_712 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_713 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_714 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_715 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_716 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_717 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_718 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_719 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_720 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_721 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_722 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_723 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_724 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_725 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_726 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1064_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_727 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1064_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_728 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_729 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Sin/add_1044_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_730 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Sin/add_1044_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_731 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_732 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_733 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_734 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_735 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_736 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_737 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_738 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_739 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_740 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_741 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_742 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_743 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_744 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_745 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_746 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_747 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_748 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d5_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1065_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_749 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Sin/add_1065_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_750 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_751 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_752 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_753 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_754 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_755 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_756 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Sin/d1_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Sin/add_1045_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_757 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_758 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_759 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_760 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_761 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_762 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_763 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_764 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_765 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_766 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_767 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_768 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_769 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_770 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_771 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_772 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_773 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_774 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_775 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_776 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_777 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_778 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_779 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_780 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_781 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_782 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_783 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_784 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_785 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_786 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_787 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_788 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_789 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_790 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_791 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_792 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_793 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_794 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_795 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_796 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_797 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_798 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1104_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_799 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_800 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_801 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_802 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_803 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_804 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_805 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_806 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_807 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_808 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_809 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_810 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_811 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_812 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_813 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_814 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_815 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_816 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_817 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_818 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1080_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_819 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_820 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_821 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1079_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_822 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_823 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_824 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1080_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_825 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_826 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_827 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_828 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_829 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_830 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_831 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_832 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_833 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_834 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_835 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_836 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_837 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1090_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_838 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_839 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_840 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_841 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_842 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1089_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_843 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1074_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_844 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_845 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_846 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_847 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_848 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_849 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_850 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_851 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_852 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_853 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_854 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_855 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_856 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_857 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_858 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_859 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_860 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_861 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_862 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_863 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_864 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_865 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_866 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_867 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_868 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_869 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_870 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1075_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_871 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_872 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_873 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_874 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_875 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_876 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1070_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_877 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1079_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_878 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1074_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_879 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1090_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_880 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_881 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_882 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_883 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_884 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_885 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_886 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_887 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_888 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_889 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_890 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_891 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_892 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_893 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_894 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1084_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_895 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1084_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_896 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_897 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_898 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_899 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_900 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_901 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_902 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_903 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_904 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_905 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_906 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_907 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_908 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_909 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_910 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_911 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_912 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_913 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1085_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_914 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1085_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_915 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_916 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_917 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_918 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_919 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_920 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_921 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_922 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_923 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_924 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_925 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_926 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_927 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1104_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_928 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1104_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_929 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_930 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_931 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_932 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_933 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_934 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_935 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_936 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_937 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_938 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_939 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_940 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_941 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_942 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_943 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_944 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_945 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_946 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1105_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_947 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1105_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_948 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1109_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_949 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_950 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_951 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_952 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_953 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_954 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_955 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_956 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_957 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_958 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_959 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_960 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_961 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_962 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_963 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_964 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_965 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1109_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_966 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1109_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_967 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_968 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_969 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_970 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_971 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_972 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_973 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_974 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_975 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_976 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_977 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_978 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_979 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_980 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_981 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_982 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_983 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_984 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1110_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_985 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1110_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_986 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1114_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_987 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_988 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_989 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_990 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_991 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_992 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_993 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_994 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_995 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_996 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_997 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_998 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_999 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1000 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1001 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1002 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1003 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1114_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1004 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1114_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1005 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1006 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1007 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1008 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1009 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1010 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1011 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1012 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1013 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1014 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1015 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1016 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1017 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1018 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1019 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1020 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1021 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1022 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1115_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1023 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1115_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1024 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1119_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1025 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1026 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1027 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1028 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1029 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1030 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1031 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1032 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1033 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1034 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1035 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1036 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1037 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1038 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1039 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1040 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1041 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1119_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1042 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1119_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1043 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1044 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1045 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1046 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1047 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1048 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1049 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1050 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1051 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1052 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1053 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1054 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i48 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1055 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i46 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1056 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i44 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1057 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1058 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i41 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1059 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i38 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1060 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CIC1Cos/add_1120_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1061 ( input A1, output FCO );
  wire   GNDI;

  ccu20002 \CIC1Cos/add_1120_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1062 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1124_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1063 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1064 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1065 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1066 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1067 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1068 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1069 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1070 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1071 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1072 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1073 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1074 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1075 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1076 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1077 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1078 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1079 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1124_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1080 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20026 \CIC1Cos/add_1124_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1081 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1125_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1082 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1083 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1084 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1085 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1086 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1087 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1088 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1089 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1090 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1091 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1092 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1093 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1094 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1095 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1096 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1097 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1098 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1125_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1099 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Cos/add_1125_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1100 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20027 \CIC1Cos/add_10_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1101 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1102 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20008 \CIC1Cos/add_10_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1103 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1104 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1105 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1106 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1107 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0006 \CIC1Cos/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CIC1Cos/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20008 \CIC1Cos/add_10_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1108 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20011 \CIC1Cos/add_10_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1109 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1088_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1110 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1111 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1112 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1113 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1114 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1115 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1116 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1117 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1118 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1119 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1120 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1121 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1122 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1123 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1124 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1125 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1126 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d5_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1088_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1127 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d5_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1088_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1128 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1083_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1129 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1130 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1131 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1132 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1133 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1134 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1135 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1136 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1137 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1138 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1139 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1140 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1141 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1142 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1143 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1144 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1145 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d4_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1083_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1146 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d4_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1083_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1147 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1078_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1148 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1149 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1150 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1151 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1152 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1153 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1154 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1155 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1156 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1157 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1158 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1159 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1160 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1161 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1162 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1163 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1164 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d3_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1078_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1165 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d3_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1078_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1166 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1073_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1167 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1168 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1169 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1170 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1171 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1172 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1173 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1174 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1175 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1176 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1177 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1178 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1179 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1180 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1181 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1182 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1183 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1073_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1184 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d2_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1073_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1185 ( input FCI, output F0 );
  wire   GNDI;

  ccu20028 \CIC1Cos/add_1068_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1186 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1187 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1188 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i30 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1189 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1190 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i27 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1191 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i25 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1192 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1193 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1194 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1195 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1196 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1197 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1198 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1199 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1200 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1201 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1202 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \CIC1Cos/add_1068_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1203 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \CIC1Cos/d1_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \CIC1Cos/add_1068_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1204 ( input B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20003 \CIC1Cos/add_1123_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1205 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1206 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1207 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1208 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1209 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1210 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1211 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1212 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1213 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1214 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1215 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1216 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1217 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1218 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1219 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1220 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1221 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \CIC1Cos/add_1123_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1222 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20005 \CIC1Cos/add_1123_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1223 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1118_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1224 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1225 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1226 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1227 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1228 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1229 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1230 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1231 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1232 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1233 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1234 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1235 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1236 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1237 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1238 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1239 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1240 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d9_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1118_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1241 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d9_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1118_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1242 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1113_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1243 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1244 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1245 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1246 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1247 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1248 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1249 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1250 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1251 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1252 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1253 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1254 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1255 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1256 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1257 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1258 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1259 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d8_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1113_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1260 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d8_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1113_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1261 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1108_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1262 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1263 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1264 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1265 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Cos/add_1108_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1266 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1267 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1268 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1269 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1270 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1271 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1272 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1273 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1274 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1275 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1276 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1277 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1278 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d7_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1108_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1279 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1108_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1280 ( input B0, A0, DI0, CE, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CIC1Cos/add_1103_37 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1281 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_35 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1282 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_33 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1283 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_31 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1284 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_29 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1285 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_27 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1286 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_25 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1287 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_23 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1288 ( input B1, A1, B0, A0, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20004 \CIC1Cos/add_1103_21 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1289 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1290 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1291 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1292 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1293 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1294 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1295 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1296 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1297 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d6_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CIC1Cos/add_1103_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1298 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \CIC1Cos/add_1103_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1299 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i50 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1300 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1301 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1302 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1089_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1303 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1304 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1305 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1306 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1307 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20025 \CIC1Cos/add_1069_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1308 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i71 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i70 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_37 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1309 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i69 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i68 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_35 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1310 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i67 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i66 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_33 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1311 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i65 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_31 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1312 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i57 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_23 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1313 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i55 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i54 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_21 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1314 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i53 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_19 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1315 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i63 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_29 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1316 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d1_i61 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i60 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1070_27 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1317 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \CIC1Cos/d2_i59 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \CIC1Cos/add_1075_25 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1318 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_36 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1319 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_34 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1320 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_32 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1321 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_30 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1322 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1323 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1324 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1325 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1326 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1327 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1328 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1329 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1330 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 \CIC1Cos/add_1069_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1331 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \AMDemodulator1/add_453_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1332 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_453_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1333 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_453_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20029 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h6969;
  defparam inst1.INIT1 = 16'h6969;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1334 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_453_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20030 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h6969;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1335 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_453_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20031 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1336 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_453_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20032 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1337 ( input FCI, output F0 );
  wire   GNDI;

  ccu20033 \AMDemodulator1/add_3441_8 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20033 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0fff;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1338 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_453_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1339 ( input A1, B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20034 \AMDemodulator1/sub_78_add_2_18 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20034 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1340 ( input B0, A0, DI0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/ISquare_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20035 \AMDemodulator1/MultResult1_23__I_0_26 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20035 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1341 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_24 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1342 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_22 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1343 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_20 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1344 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_18 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1345 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_16 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1346 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_14 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1347 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_12 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1348 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_10 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1349 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1350 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1351 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/ISquare_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \AMDemodulator1/MultResult1_23__I_0_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1352 ( input B1, A1, B0, A0, DI1, CLK, output F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/ISquare_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20025 \AMDemodulator1/MultResult1_23__I_0_2 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1353 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \AMDemodulator1/add_513_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1354 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20036 \AMDemodulator1/add_513_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20036 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h6969;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1355 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_513_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1356 ( input B1, A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20037 \AMDemodulator1/add_513_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20037 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1357 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_513_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1358 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_513_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1359 ( input B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20038 \AMDemodulator1/add_3441_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20038 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1360 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20039 \AMDemodulator1/add_3441_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20039 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1361 ( input B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20040 \AMDemodulator1/add_3441_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20040 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1000;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1362 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \AMDemodulator1/add_413_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1363 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_413_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1364 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_413_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1365 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_413_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1366 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/sub_78_add_2_16 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1367 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_413_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1368 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_413_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20041 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1369 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_413_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1370 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_413_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1371 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_413_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1372 ( input A1, B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20042 \AMDemodulator1/add_140_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20042 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1373 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20024 \AMDemodulator1/add_140_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1374 ( input A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20043 \AMDemodulator1/add_140_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20043 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1375 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_140_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1376 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_140_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1377 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_140_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1378 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_140_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1379 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_140_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1380 ( input A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/sub_78_add_2_14 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1381 ( input B1, A1, A0, output FCO );
  wire   GNDI;

  ccu20044 \AMDemodulator1/add_140_1 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20044 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1382 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20024 \AMDemodulator1/sub_78_add_2_12 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1383 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20024 \AMDemodulator1/sub_78_add_2_10 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1384 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20024 \AMDemodulator1/sub_78_add_2_8 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1385 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20024 \AMDemodulator1/sub_78_add_2_6 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1386 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20024 \AMDemodulator1/sub_78_add_2_4 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1387 ( input B1, A1, A0, output FCO );
  wire   GNDI;

  ccu20045 \AMDemodulator1/sub_78_add_2_2 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20045 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1388 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_573_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1389 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_573_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1390 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_573_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1391 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_573_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1392 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_573_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1393 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_573_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1394 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_573_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1395 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_573_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1396 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_573_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1397 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_573_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1398 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \AMDemodulator1/add_493_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1399 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_493_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1400 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_493_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1401 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20036 \AMDemodulator1/add_493_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1402 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_493_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1403 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_493_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20046 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module AMDemodulator1_SLICE_1404 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_493_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1405 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_493_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1406 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_493_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1407 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_493_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1408 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_613_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1409 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_613_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1410 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20036 \AMDemodulator1/add_613_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1411 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_613_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1412 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_613_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1413 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_613_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1414 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_613_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1415 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_613_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1416 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_613_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1417 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_613_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1418 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_653_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1419 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_653_17 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1420 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_653_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1421 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_653_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1422 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_653_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1423 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_653_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1424 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_653_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1425 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_653_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1426 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_653_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1427 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_653_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1428 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_533_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1429 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_533_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1430 ( input C1, B1, A1, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20030 \AMDemodulator1/add_533_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1431 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_533_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1432 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_533_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1433 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_533_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1434 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_533_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1435 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_533_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1436 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_533_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1437 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_533_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1438 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_553_19 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1439 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20036 \AMDemodulator1/add_553_17 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1440 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_553_15 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1441 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_553_13 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1442 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_553_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1443 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_553_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1444 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20041 \AMDemodulator1/add_553_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1445 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_553_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1446 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_553_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1447 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_553_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1448 ( input B1, A1, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20024 \AMDemodulator1/add_433_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1449 ( input B1, A1, B0, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20004 \AMDemodulator1/add_433_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1450 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20036 \AMDemodulator1/add_433_11 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1451 ( input C1, B1, A1, C0, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20029 \AMDemodulator1/add_433_9 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1452 ( input B1, A1, C0, B0, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20046 \AMDemodulator1/add_433_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1453 ( input C1, B1, A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20031 \AMDemodulator1/add_433_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1454 ( input A1, B0, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20032 \AMDemodulator1/add_433_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1455 ( input A1, output FCO );
  wire   GNDI;

  ccu20023 \AMDemodulator1/add_433_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1456 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_0 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1457 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_0_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1458 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_2 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1459 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_2_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1460 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_4 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1461 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_4_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1462 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1463 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_6_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1464 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_8 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1465 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_8_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1466 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_cin_lr_add_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1467 ( input FCI, output F0 );
  wire   VCCI, GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_Cadd_10_6 ( .A0(VCCI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1468 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_49 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_0_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1469 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_47 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_48 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1470 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_45 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_46 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1471 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_43 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_44 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1472 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_41 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_42 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1473 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_39 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_40 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1474 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_37 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_38 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1475 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_35 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_36 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_0_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1476 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_34 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_0_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1477 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_31 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_1_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1478 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_29 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_30 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1479 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_27 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_28 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1480 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_25 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_26 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1481 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1482 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1483 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1484 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_1_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1485 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_1_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1486 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_2_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1487 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1488 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1489 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1490 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1491 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1492 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1493 ( input A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_2_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1494 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_71 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_3_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1495 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_69 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_70 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1496 ( input B1, A1, B0, A0, DI0, CLK, 
    FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_68 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1497 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1498 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1499 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1500 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1501 ( input B1, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_8 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1502 ( input B1, B0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1503 ( input B0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Multiplier_0_add_3_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1504 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier2/Cadd_Multiplier_0_3_11 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1505 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_67 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/Cadd_t_Multiplier_0_4_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1506 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_65 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_66 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1507 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_63 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_64 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1508 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_61 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_62 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1509 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_59 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_60 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1510 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_57 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_58 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1511 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_55 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_56 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1512 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_53 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_54 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_8 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1513 ( input B0, A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_52 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier2/t_Multiplier_0_add_4_9 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1514 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_50 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module alu2_mult0047 ( input A0, A1, C0, C1, B0, B1, D0, D1, CI, output S0, S1, 
    CO1 );

  MULT2 INST01( .A0(A0), .A1(C0), .A2(A1), .A3(C1), .B0(B0), .B1(D0), .B2(B1), 
    .B3(D1), .CI(CI), .P0(S0), .P1(S1), .CO(CO1));
endmodule

module AMDemodulator1_Multiplier2_SLICE_1515 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1516 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1517 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1518 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1519 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_0_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1520 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1521 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1522 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1523 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1524 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1525 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_2_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1526 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_32 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1527 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1528 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1529 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1530 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1531 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_4_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1532 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1533 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1534 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1535 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1536 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1537 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_6_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1538 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1539 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1540 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1541 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1542 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1543 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_8_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1544 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1545 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1546 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1547 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1548 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1549 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier2/Multiplier_0_mult_10_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1550 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_0 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1551 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_0_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1552 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_2 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1553 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_2_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1554 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_4 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1555 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_4_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1556 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1557 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_6_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1558 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_8 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1559 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_8_6 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1560 ( output FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_cin_lr_add_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1561 ( input FCI, output F0 );
  wire   VCCI, GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_Cadd_10_6 ( .A0(VCCI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1562 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_49 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_0_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1563 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_47 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_48 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1564 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_45 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_46 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1565 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_43 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_44 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1566 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_41 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_42 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1567 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_39 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_40 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1568 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_37 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_38 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1569 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_35 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_36 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_0_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1570 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_34 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_0_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1571 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_31 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_1_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1572 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_29 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_30 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1573 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_27 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_28 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1574 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_25 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_26 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1575 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_23 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_24 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1576 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_21 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_22 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1577 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_19 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_20 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1578 ( input A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_17 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_18 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_1_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1579 ( input DI0, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_16 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_1_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1580 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_2_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1581 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1582 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1583 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1584 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1585 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1586 ( input A1, B0, A0, DI1, DI0, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1587 ( input A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_2_8 ( .A0(A0), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1588 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_71 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_3_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1589 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_69 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_70 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1590 ( input B1, A1, B0, A0, DI0, CLK, 
    FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_68 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1591 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1592 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1593 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1594 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1595 ( input B1, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_8 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1596 ( input B1, B0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_9 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1597 ( input B0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Multiplier_0_add_3_10 ( .A0(GNDI), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1598 ( input FCI, output F0 );
  wire   GNDI;

  alu2_mult \AMDemodulator1/Multiplier1/Cadd_Multiplier_0_3_11 ( .A0(GNDI), 
    .A1(GNDI), .B0(GNDI), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1599 ( input B1, A1, DI1, CLK, output 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_67 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/Cadd_t_Multiplier_0_4_1 ( .A0(GNDI), 
    .A1(A1), .B0(GNDI), .B1(B1), .CI(), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1600 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_65 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_66 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_2 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1601 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_63 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_64 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_3 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1602 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_61 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_62 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_4 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1603 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_59 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_60 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_5 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1604 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_57 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_58 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_6 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1605 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_55 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_56 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_7 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1606 ( input B1, A1, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_53 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_54 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_8 ( .A0(A0), 
    .A1(A1), .B0(B0), .B1(B1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1607 ( input B0, A0, DI0, CLK, FCI, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_52 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult \AMDemodulator1/Multiplier1/t_Multiplier_0_add_4_9 ( .A0(A0), 
    .A1(GNDI), .B0(B0), .B1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1608 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_50 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1609 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1610 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1611 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1612 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1613 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_0_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1614 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1615 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1616 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1617 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1618 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1619 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_2_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1620 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_32 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1621 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1622 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1623 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1624 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1625 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_4_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1626 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1627 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1628 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1629 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1630 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1631 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_6_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1632 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1633 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1634 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1635 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1636 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1637 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_8_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1638 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_0 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1639 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_1 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1640 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_2 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1641 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_3 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1642 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_4 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(C1), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1643 ( input D1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0047 \AMDemodulator1/Multiplier1/Multiplier_0_mult_10_5 ( .A0(A0), 
    .A1(A1), .C0(C0), .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1644 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \AMDemodulator1/i4917_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/ISquare_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_SLICE_1645 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1646 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1647 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1648 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1649 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1650 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataB_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataB_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1651 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1652 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1653 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1654 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1655 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1656 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/MultDataC_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/MultDataC_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1657 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_74 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_75 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1658 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_72 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_73 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1659 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_74 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_75 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1660 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_72 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_73 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1661 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40048 \AMDemodulator1/Multiplier1/AND2_t21 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_Multiplier1_SLICE_1662 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40048 \AMDemodulator1/Multiplier1/AND2_t15 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1663 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_97 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_98 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1664 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_95 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_96 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1665 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_93 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_94 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1666 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_91 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_92 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1667 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_89 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_90 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1669 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_86 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_87 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1670 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_84 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_85 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1671 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_82 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_83 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1672 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_80 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_81 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1673 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_78 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_79 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1674 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_76 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_77 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_1675 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier1/FF_51 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1676 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40048 \AMDemodulator1/Multiplier2/AND2_t21 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1677 ( input B0, A0, DI0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40048 \AMDemodulator1/Multiplier2/AND2_t15 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1678 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_97 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_98 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1679 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_95 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_96 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1680 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_93 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_94 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1681 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_91 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_92 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1682 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_89 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_90 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1684 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_86 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_87 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1685 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_84 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_85 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1686 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_82 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_83 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1687 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_80 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_81 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1688 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_78 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_79 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1689 ( input M1, M0, CLK, output Q0, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_76 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_77 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_1690 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/Multiplier2/FF_51 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1691 ( input A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40049 \AMDemodulator1/d_out_d_11__I_10_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \AMDemodulator1/mux_78_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3535) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_SLICE_1692 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40049 \AMDemodulator1/d_out_d_11__I_8_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \AMDemodulator1/d_out_d_11__I_9_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1693 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40049 \AMDemodulator1/d_out_d_11__I_6_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \AMDemodulator1/d_out_d_11__I_7_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1694 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40049 \AMDemodulator1/d_out_d_11__I_4_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \AMDemodulator1/d_out_d_11__I_5_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_1695 ( input A1, A0, DI1, DI0, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40049 \AMDemodulator1/d_out_d_11__I_2_1_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \AMDemodulator1/d_out_d_11__I_3_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \AMDemodulator1/d_out_d__0_i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \AMDemodulator1/d_out_d__0_i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1696 ( input B1, A1, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40051 \CIC1Cos/i3_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \CIC1Cos/i2851_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CIC1Cos/count__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1697 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40053 \CIC1Cos/i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \CIC1Cos/i2906_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CIC1Cos/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1698 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \CIC1Cos/mux_1236_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d10__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1699 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \CIC1Cos/mux_1236_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d10__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1700 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4912_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d1_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1701 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4913_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d2_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1702 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4914_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d3_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1703 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4915_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d4_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1704 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Cos/i4916_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d5_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1705 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d6_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1706 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d7_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1707 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1708 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1709 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1710 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1711 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1712 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1713 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1714 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1715 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1716 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1717 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1718 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1719 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1720 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1721 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1722 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1723 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1724 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1725 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1726 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1727 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1728 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1729 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1730 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1731 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1732 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1733 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1734 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1735 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1736 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1737 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1738 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1739 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1740 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1741 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1742 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d6_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1743 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d6_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1744 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1745 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1746 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1747 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1748 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1749 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1750 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1751 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1752 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1753 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1754 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1755 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1756 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1757 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1758 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1759 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1760 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1761 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1762 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1763 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1764 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1765 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1766 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1767 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1768 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1769 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1770 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1771 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1772 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1773 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1774 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1775 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1776 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1777 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1778 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1779 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d7_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1780 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d7_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1781 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1782 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1783 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1784 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1785 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1786 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1787 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1788 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1789 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1790 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1791 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1792 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1793 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1794 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1795 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1796 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1797 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1798 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1799 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1800 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1801 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1802 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1803 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1804 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1805 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1806 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1807 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1808 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1809 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1810 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1811 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1812 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1813 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1814 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1815 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1816 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d8_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1817 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d8_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1818 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1819 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1820 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1821 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1822 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1823 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1824 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1825 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1826 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1827 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1828 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1829 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1830 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1831 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1832 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1833 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1834 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1835 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1836 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1837 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1838 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1839 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1840 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1841 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1842 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1843 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1844 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1845 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1846 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1847 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1848 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1849 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1850 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1851 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1852 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1853 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d9_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1854 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d9_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1855 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1856 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1857 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1858 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1859 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1860 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1861 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1862 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1863 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1864 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i19 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i18 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1865 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1866 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i23 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1867 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i25 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i24 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1868 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1869 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1870 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i30 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1871 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i33 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1872 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i34 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1873 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1874 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1875 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1876 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1877 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1878 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1879 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1880 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1881 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1882 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1883 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1884 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1885 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1886 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1887 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1888 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1889 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1890 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_d_tmp_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1891 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_d_tmp_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1892 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1893 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1894 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1895 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1896 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1897 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1898 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1899 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1900 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1901 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i19 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i18 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1902 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1903 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i23 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1904 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i25 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i24 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1905 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1906 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1907 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i30 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1908 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i33 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1909 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i34 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1910 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1911 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1912 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i41 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1913 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i43 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i42 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1914 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i45 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i44 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1915 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i47 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i46 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1916 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i49 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i48 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1917 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i51 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i50 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1918 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i53 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i52 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1919 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i54 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1920 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i57 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1921 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i58 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1922 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i61 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1923 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i63 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i62 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1924 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i65 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i64 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1925 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1926 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1927 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Cos/d_tmp_i0_i71 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_tmp_i0_i70 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1928 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40055 \CIC1Cos/i5653_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \CIC1Cos/i5686_4_lut_rep_98 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \CIC1Cos/v_comb_66_rep_101 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_100 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_1929 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_103 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_102 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1930 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_105 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_104 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1931 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_107 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_106 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1932 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_109 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_108 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1933 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_111 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/v_comb_66_rep_110 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1934 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Cos/v_comb_66_rep_112 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_1935 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Cos/v_comb_66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1936 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40053 \CIC1Sin/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \CIC1Sin/i2849_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CIC1Sin/count__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1937 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40053 \CIC1Sin/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \CIC1Sin/i2905_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CIC1Sin/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1938 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1939 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Sin/mux_1237_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1940 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i8_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Sin/mux_1237_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1941 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i12_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Sin/mux_1237_i9_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1942 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i14_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Sin/mux_1237_i13_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1943 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i16_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Sin/mux_1237_i15_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Sin/d10__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Sin/d10__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1944 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i4_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1945 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i5_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1946 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1947 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \CIC1Sin/mux_1237_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d10__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1948 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4904_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d1_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1949 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4908_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d2_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1950 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4909_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d3_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1951 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4910_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d4_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1952 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \CIC1Sin/i4911_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d5_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1953 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d6_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1954 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d7_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1955 ( input B1, A1, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40051 \CIC1Sin/i3_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \CIC1Sin/i2321_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0057 \CIC1Sin/d_clk_tmp_65 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0057 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module CIC1Sin_SLICE_1956 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1957 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1958 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1959 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1960 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1961 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1962 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1963 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1964 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1965 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1966 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1967 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1968 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1969 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1970 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1971 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1972 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1973 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1974 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1975 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1976 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1977 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1978 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1979 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1980 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1981 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1982 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1983 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1984 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1985 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1986 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1987 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1988 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1989 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1990 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1991 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d6_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1992 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d6_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1993 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1994 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1995 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1996 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1997 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1998 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_1999 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2000 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2001 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2002 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2003 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2004 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2005 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2006 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2007 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2008 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2009 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2010 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2011 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2012 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2013 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2014 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2015 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2016 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2017 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2018 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2019 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2020 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2021 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2022 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2023 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2024 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2025 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2026 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2027 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2028 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d7_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2029 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d7_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2030 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2031 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2032 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2033 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2034 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2035 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2036 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2037 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2038 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2039 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2040 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2041 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2042 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2043 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2044 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2045 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2046 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2047 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2048 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2049 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2050 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2051 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2052 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2053 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2054 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2055 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2056 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2057 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2058 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2059 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2060 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2061 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2062 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2063 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2064 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2065 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d8_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2066 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d8_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2067 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2068 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2069 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2070 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2071 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2072 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2073 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2074 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2075 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2076 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2077 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2078 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2079 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2080 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2081 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2082 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2083 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2084 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2085 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2086 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2087 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2088 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2089 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2090 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2091 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2092 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2093 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2094 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2095 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2096 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2097 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2098 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2099 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2100 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2101 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2102 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d9_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2103 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d9_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2104 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2105 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2106 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2107 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2108 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2109 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2110 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2111 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2112 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2113 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2114 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i20 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2115 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2116 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2117 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2118 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2119 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2120 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i30 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2121 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2122 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2123 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2124 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2125 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2126 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2127 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2128 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2129 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2130 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2131 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2132 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2133 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2134 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2135 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2136 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2137 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i64 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i63 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2138 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i66 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i65 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2139 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2140 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_d_tmp_i0_i69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2141 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_d_tmp_i0_i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2142 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2143 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2144 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2145 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2146 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2147 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2148 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2149 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2150 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i17 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i16 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2151 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i19 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i18 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2152 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2153 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i22 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2154 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i24 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i23 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2155 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i26 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i25 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2156 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i28 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2157 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i29 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2158 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2159 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2160 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2161 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2162 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2163 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i42 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i41 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2164 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i44 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i43 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2165 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i46 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i45 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2166 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i48 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i47 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2167 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i49 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2168 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2169 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i53 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i52 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2170 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i54 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2171 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i57 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2172 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i58 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2173 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i61 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2174 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i63 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i62 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2175 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i65 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i64 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2176 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2177 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2178 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \CIC1Sin/d_tmp_i0_i71 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_tmp_i0_i70 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2179 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40055 \CIC1Sin/i5659_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \CIC1Sin/i5704_4_lut_rep_96 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \CIC1Sin/v_comb_66_rep_83 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_82 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2180 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_85 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_84 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2181 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_87 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_86 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2182 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_89 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_88 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2183 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_91 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_90 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2184 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_93 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/v_comb_66_rep_92 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2185 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Sin/v_comb_66_rep_94 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2186 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Sin/v_comb_66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2187 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Cos/SLICE_2187/CIC1Cos/SLICE_2187_K1_H1 , 
         \CIC1Cos/SLICE_2187/CIC1Cos/i5800/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40058 \CIC1Cos/SLICE_2187_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2187/CIC1Cos/SLICE_2187_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Cos/i5800/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2187/CIC1Cos/i5800/GATE_H0 ));
  vmuxregsre \CIC1Cos/d_out_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Cos/SLICE_2187_K0K1MUX ( 
    .D0(\CIC1Cos/SLICE_2187/CIC1Cos/i5800/GATE_H0 ), 
    .D1(\CIC1Cos/SLICE_2187/CIC1Cos/SLICE_2187_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module CIC1Cos_SLICE_2188 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Cos/SLICE_2188/CIC1Cos/SLICE_2188_K1_H1 , 
         \CIC1Cos/SLICE_2188/CIC1Cos/i5802/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40058 \CIC1Cos/SLICE_2188_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2188/CIC1Cos/SLICE_2188_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Cos/i5802/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Cos/SLICE_2188/CIC1Cos/i5802/GATE_H0 ));
  vmuxregsre \CIC1Cos/d_out_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Cos/SLICE_2188_K0K1MUX ( 
    .D0(\CIC1Cos/SLICE_2188/CIC1Cos/i5802/GATE_H0 ), 
    .D1(\CIC1Cos/SLICE_2188/CIC1Cos/SLICE_2188_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2189 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40060 \CIC1Sin/shift_right_31_i204_3_lut_4_lut_adj_26 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i203_3_lut_4_lut_adj_25 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2190 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40060 \CIC1Sin/shift_right_31_i206_3_lut_4_lut_adj_28 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i205_3_lut_4_lut_adj_27 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2191 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40060 \CIC1Sin/shift_right_31_i208_3_lut_4_lut_adj_30 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i207_3_lut_4_lut_adj_29 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2192 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40060 \CIC1Sin/shift_right_31_i210_3_lut_4_lut_adj_32 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40061 \CIC1Sin/shift_right_31_i141_3_lut_4_lut_adj_31 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d_out_i0_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2193 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   GNDI, \SLICE_2193/SLICE_2193_K1_H1 , 
         \SLICE_2193/CIC1Sin/i5796/GATE_H0 , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40062 SLICE_2193_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_2193/SLICE_2193_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/i5796/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_2193/CIC1Sin/i5796/GATE_H0 ));
  vmuxregsre \CIC1Cos/d_out_i0_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_2193_K0K1MUX( .D0(\SLICE_2193/CIC1Sin/i5796/GATE_H0 ), 
    .D1(\SLICE_2193/SLICE_2193_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2194 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40063 \CIC1Sin/shift_right_31_i140_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i212_3_lut_4_lut_adj_33 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \CIC1Cos/d_out_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF960) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2195 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Sin/SLICE_2195/CIC1Sin/SLICE_2195_K1_H1 , 
         \CIC1Sin/SLICE_2195/CIC1Sin/i5794/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40058 \CIC1Sin/SLICE_2195_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2195/CIC1Sin/SLICE_2195_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Sin/i5794/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2195/CIC1Sin/i5794/GATE_H0 ));
  vmuxregsre \CIC1Sin/d_out_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Sin/SLICE_2195_K0K1MUX ( 
    .D0(\CIC1Sin/SLICE_2195/CIC1Sin/i5794/GATE_H0 ), 
    .D1(\CIC1Sin/SLICE_2195/CIC1Sin/SLICE_2195_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2196 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Sin/SLICE_2196/CIC1Sin/SLICE_2196_K1_H1 , 
         \CIC1Sin/SLICE_2196/CIC1Sin/i5792/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40058 \CIC1Sin/SLICE_2196_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2196/CIC1Sin/SLICE_2196_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \CIC1Sin/i5792/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2196/CIC1Sin/i5792/GATE_H0 ));
  vmuxregsre \CIC1Sin/d_out_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Sin/SLICE_2196_K0K1MUX ( 
    .D0(\CIC1Sin/SLICE_2196/CIC1Sin/i5792/GATE_H0 ), 
    .D1(\CIC1Sin/SLICE_2196/CIC1Sin/SLICE_2196_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2197 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40060 \CIC1Sin/shift_right_31_i204_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i203_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2198 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40060 \CIC1Sin/shift_right_31_i206_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i205_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2199 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \CIC1Sin/d_clk_67 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2200 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre CICGain__i2( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre CICGain__i1( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2201 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2202 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2203 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2204 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \AMDemodulator1/d_out_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/d_out_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2205 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/d_out_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2206 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \AMDemodulator1/d_out_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2208 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_10/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_11/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2209 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_8/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_9/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2210 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_6/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_7/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2211 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_4/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_5/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2212 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_2/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2213 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_0/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_1/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2214 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_23/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_24/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_23 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_24 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2215 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_21/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_22/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_21 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_22 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2216 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_19/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_20/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2217 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_17/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_18/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2218 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \SinCos1/muxb_15/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \SinCos1/muxb_16/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2219 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \SinCos1/muxb_13/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \SinCos1/muxb_14/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \SinCos1/FF_14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2220 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40060 \CIC1Sin/shift_right_31_i208_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i207_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2221 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40060 \CIC1Sin/shift_right_31_i210_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40061 \CIC1Sin/shift_right_31_i141_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Sin/d_out_i0_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2222 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \CIC1Sin/SLICE_2222/CIC1Sin/SLICE_2222_K1_H1 , 
         \CIC1Sin/SLICE_2222/CIC1Sin/i5798/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40062 \CIC1Sin/SLICE_2222_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2222/CIC1Sin/SLICE_2222_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \CIC1Sin/i5798/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CIC1Sin/SLICE_2222/CIC1Sin/i5798/GATE_H0 ));
  vmuxregsre \CIC1Sin/d_out_i0_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CIC1Sin/SLICE_2222_K0K1MUX ( 
    .D0(\CIC1Sin/SLICE_2222/CIC1Sin/i5798/GATE_H0 ), 
    .D1(\CIC1Sin/SLICE_2222/CIC1Sin/SLICE_2222_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2223 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40063 \CIC1Sin/shift_right_31_i140_3_lut_4_lut_adj_34 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40060 \CIC1Sin/shift_right_31_i212_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \CIC1Sin/d_out_i0_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2224 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0066 \Mixer1/RFInR1_13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0066 \Mixer1/RFInR_14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0066 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module Mixer1_SLICE_2225 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutCos_11__I_0_i2_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutCos_11__I_0_i1_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2226 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutCos_11__I_0_i4_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutCos_11__I_0_i3_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2227 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutCos_11__I_0_i6_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutCos_11__I_0_i5_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2228 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutCos_11__I_0_i8_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutCos_11__I_0_i7_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2229 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutCos_11__I_0_i10_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutCos_11__I_0_i9_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2230 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutCos_11__I_0_i12_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutCos_11__I_0_i11_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutCos_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutCos_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2231 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutSin_11__I_0_i2_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutSin_11__I_0_i1_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2232 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutSin_11__I_0_i4_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutSin_11__I_0_i3_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2233 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutSin_11__I_0_i6_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutSin_11__I_0_i5_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2234 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutSin_11__I_0_i8_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutSin_11__I_0_i7_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2235 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutSin_11__I_0_i10_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutSin_11__I_0_i9_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module Mixer1_SLICE_2236 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \Mixer1/MixerOutSin_11__I_0_i12_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \Mixer1/MixerOutSin_11__I_0_i11_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \Mixer1/MixerOutSin_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \Mixer1/MixerOutSin_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2237 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2238 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2239 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2240 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2241 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \PWM1/DataInReg__i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2242 ( input A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40049 \PWM1/i1147_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \PWM1/DataInReg__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2243 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \SinCos1/XOR2_t1 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2246 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40054 \SinCos1/muxb_53/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \SinCos1/AND2_t0 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \SinCos1/FF_26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2247 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \SinCos1/FF_59 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2248 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \SinCos1/FF_57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2249 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2249/SinCos1/triglut_1_0_13_1_H1 , 
         \SinCos1/SLICE_2249/SinCos1/SLICE_2249_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40068 \SinCos1/triglut_1_0_13_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2249/SinCos1/triglut_1_0_13_1_H1 ));
  lut40069 \SinCos1/SLICE_2249_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2249/SinCos1/SLICE_2249_K0_H0 ));
  vmuxregsre \SinCos1/FF_42 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2249_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2249/SinCos1/SLICE_2249_K0_H0 ), 
    .D1(\SinCos1/SLICE_2249/SinCos1/triglut_1_0_13_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2249_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h981F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h433C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2250 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2250/SinCos1/triglut_1_0_14_1_H1 , 
         \SinCos1/SLICE_2250/SinCos1/SLICE_2250_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40070 \SinCos1/triglut_1_0_14_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2250/SinCos1/triglut_1_0_14_1_H1 ));
  lut40071 \SinCos1/SLICE_2250_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2250/SinCos1/SLICE_2250_K0_H0 ));
  vmuxregsre \SinCos1/FF_43 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2250_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2250/SinCos1/SLICE_2250_K0_H0 ), 
    .D1(\SinCos1/SLICE_2250/SinCos1/triglut_1_0_14_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2250_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3657) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2251 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2251/SinCos1/triglut_1_0_15_1_H1 , 
         \SinCos1/SLICE_2251/SinCos1/SLICE_2251_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40072 \SinCos1/triglut_1_0_15_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2251/SinCos1/triglut_1_0_15_1_H1 ));
  lut40073 \SinCos1/SLICE_2251_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2251/SinCos1/SLICE_2251_K0_H0 ));
  vmuxregsre \SinCos1/FF_44 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2251_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2251/SinCos1/SLICE_2251_K0_H0 ), 
    .D1(\SinCos1/SLICE_2251/SinCos1/triglut_1_0_15_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2251_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h94B6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8846) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2252 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2252/SinCos1/triglut_1_0_16_1_H1 , 
         \SinCos1/SLICE_2252/SinCos1/SLICE_2252_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40074 \SinCos1/triglut_1_0_16_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2252/SinCos1/triglut_1_0_16_1_H1 ));
  lut40075 \SinCos1/SLICE_2252_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2252/SinCos1/SLICE_2252_K0_H0 ));
  vmuxregsre \SinCos1/FF_45 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2252_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2252/SinCos1/SLICE_2252_K0_H0 ), 
    .D1(\SinCos1/SLICE_2252/SinCos1/triglut_1_0_16_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2252_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0DD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2ADA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2253 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2253/SinCos1/triglut_1_0_17_1_H1 , 
         \SinCos1/SLICE_2253/SinCos1/SLICE_2253_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40076 \SinCos1/triglut_1_0_17_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2253/SinCos1/triglut_1_0_17_1_H1 ));
  lut40077 \SinCos1/SLICE_2253_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2253/SinCos1/SLICE_2253_K0_H0 ));
  vmuxregsre \SinCos1/FF_46 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2253_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2253/SinCos1/SLICE_2253_K0_H0 ), 
    .D1(\SinCos1/SLICE_2253/SinCos1/triglut_1_0_17_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2253_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEC2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h227F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2254 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2254/SinCos1/triglut_1_0_18_1_H1 , 
         \SinCos1/SLICE_2254/SinCos1/SLICE_2254_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40078 \SinCos1/triglut_1_0_18_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2254/SinCos1/triglut_1_0_18_1_H1 ));
  lut40079 \SinCos1/SLICE_2254_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2254/SinCos1/SLICE_2254_K0_H0 ));
  vmuxregsre \SinCos1/FF_47 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2254_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2254/SinCos1/SLICE_2254_K0_H0 ), 
    .D1(\SinCos1/SLICE_2254/SinCos1/triglut_1_0_18_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2254_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2255 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2255/SinCos1/triglut_1_0_19_1_H1 , 
         \SinCos1/SLICE_2255/SinCos1/SLICE_2255_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40080 \SinCos1/triglut_1_0_19_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2255/SinCos1/triglut_1_0_19_1_H1 ));
  lut40081 \SinCos1/SLICE_2255_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2255/SinCos1/SLICE_2255_K0_H0 ));
  vmuxregsre \SinCos1/FF_48 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2255_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2255/SinCos1/SLICE_2255_K0_H0 ), 
    .D1(\SinCos1/SLICE_2255/SinCos1/triglut_1_0_19_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2255_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEF93) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h49F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2256 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2256/SinCos1/triglut_1_0_20_1_H1 , 
         \SinCos1/SLICE_2256/SinCos1/SLICE_2256_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40082 \SinCos1/triglut_1_0_20_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2256/SinCos1/triglut_1_0_20_1_H1 ));
  lut40083 \SinCos1/SLICE_2256_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2256/SinCos1/SLICE_2256_K0_H0 ));
  vmuxregsre \SinCos1/FF_49 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2256_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2256/SinCos1/SLICE_2256_K0_H0 ), 
    .D1(\SinCos1/SLICE_2256/SinCos1/triglut_1_0_20_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2256_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFE9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDB3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2257 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2257/SinCos1/triglut_1_0_21_1_H1 , 
         \SinCos1/SLICE_2257/SinCos1/SLICE_2257_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40084 \SinCos1/triglut_1_0_21_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2257/SinCos1/triglut_1_0_21_1_H1 ));
  lut40085 \SinCos1/SLICE_2257_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2257/SinCos1/SLICE_2257_K0_H0 ));
  vmuxregsre \SinCos1/FF_50 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2257_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2257/SinCos1/SLICE_2257_K0_H0 ), 
    .D1(\SinCos1/SLICE_2257/SinCos1/triglut_1_0_21_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2257_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAAB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA16A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2258 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2258/SinCos1/triglut_1_0_22_1_H1 , 
         \SinCos1/SLICE_2258/SinCos1/SLICE_2258_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40086 \SinCos1/triglut_1_0_22_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2258/SinCos1/triglut_1_0_22_1_H1 ));
  lut40087 \SinCos1/SLICE_2258_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2258/SinCos1/SLICE_2258_K0_H0 ));
  vmuxregsre \SinCos1/FF_51 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2258_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2258/SinCos1/SLICE_2258_K0_H0 ), 
    .D1(\SinCos1/SLICE_2258/SinCos1/triglut_1_0_22_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2258_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h542A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2259 ( input DI1, M1, FXB, FXA, CLK, output OFX0, Q1, 
    OFX1 );
  wire   GNDI, \SinCos1/SLICE_2259/SinCos1/triglut_1_0_23_1_H0 , VCCI, DI1_dly, 
         CLK_dly;

  lut40088 \SinCos1/triglut_1_0_23_1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2259/SinCos1/triglut_1_0_23_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_52 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux20089 \SinCos1/SLICE_2259_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2259/SinCos1/triglut_1_0_23_1_H0 ), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2259_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux20089 ( input D0, output Z );

  BUFBA INST1( .A(D0), .Z(Z));
endmodule

module SinCos1_SLICE_2260 ( input CLK, output Q0, Q1 );
  wire   GNDI, VCCI;

  vmuxregsre \SinCos1/FF_54 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \SinCos1/FF_53 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2261 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2261/SinCos1/triglut_1_0_0_1_H1 , 
         \SinCos1/SLICE_2261/SinCos1/SLICE_2261_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40090 \SinCos1/triglut_1_0_0_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2261/SinCos1/triglut_1_0_0_1_H1 ));
  lut40091 \SinCos1/SLICE_2261_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2261/SinCos1/SLICE_2261_K0_H0 ));
  vmuxregsre \SinCos1/FF_29 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2261_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2261/SinCos1/SLICE_2261_K0_H0 ), 
    .D1(\SinCos1/SLICE_2261/SinCos1/triglut_1_0_0_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2261_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3CC2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF819) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2262 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2262/SinCos1/triglut_1_0_1_1_H1 , 
         \SinCos1/SLICE_2262/SinCos1/SLICE_2262_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40092 \SinCos1/triglut_1_0_1_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2262/SinCos1/triglut_1_0_1_1_H1 ));
  lut40093 \SinCos1/SLICE_2262_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2262/SinCos1/SLICE_2262_K0_H0 ));
  vmuxregsre \SinCos1/FF_30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2262_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2262/SinCos1/SLICE_2262_K0_H0 ), 
    .D1(\SinCos1/SLICE_2262/SinCos1/triglut_1_0_1_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2262_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEA6C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFE5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2263 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2263/SinCos1/triglut_1_0_2_1_H1 , 
         \SinCos1/SLICE_2263/SinCos1/SLICE_2263_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40094 \SinCos1/triglut_1_0_2_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2263/SinCos1/triglut_1_0_2_1_H1 ));
  lut40095 \SinCos1/SLICE_2263_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2263/SinCos1/SLICE_2263_K0_H0 ));
  vmuxregsre \SinCos1/FF_31 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2263_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2263/SinCos1/SLICE_2263_K0_H0 ), 
    .D1(\SinCos1/SLICE_2263/SinCos1/triglut_1_0_2_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2263_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6211) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6D29) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2264 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2264/SinCos1/triglut_1_0_3_1_H1 , 
         \SinCos1/SLICE_2264/SinCos1/SLICE_2264_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40096 \SinCos1/triglut_1_0_3_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2264/SinCos1/triglut_1_0_3_1_H1 ));
  lut40097 \SinCos1/SLICE_2264_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2264/SinCos1/SLICE_2264_K0_H0 ));
  vmuxregsre \SinCos1/FF_32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2264_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2264/SinCos1/SLICE_2264_K0_H0 ), 
    .D1(\SinCos1/SLICE_2264/SinCos1/triglut_1_0_3_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2264_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5B54) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2265 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2265/SinCos1/triglut_1_0_4_1_H1 , 
         \SinCos1/SLICE_2265/SinCos1/SLICE_2265_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40098 \SinCos1/triglut_1_0_4_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2265/SinCos1/triglut_1_0_4_1_H1 ));
  lut40099 \SinCos1/SLICE_2265_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2265/SinCos1/SLICE_2265_K0_H0 ));
  vmuxregsre \SinCos1/FF_33 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2265_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2265/SinCos1/SLICE_2265_K0_H0 ), 
    .D1(\SinCos1/SLICE_2265/SinCos1/triglut_1_0_4_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2265_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5437) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2266 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2266/SinCos1/triglut_1_0_5_1_H1 , 
         \SinCos1/SLICE_2266/SinCos1/SLICE_2266_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40100 \SinCos1/triglut_1_0_5_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2266/SinCos1/triglut_1_0_5_1_H1 ));
  lut40101 \SinCos1/SLICE_2266_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2266/SinCos1/SLICE_2266_K0_H0 ));
  vmuxregsre \SinCos1/FF_34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2266_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2266/SinCos1/SLICE_2266_K0_H0 ), 
    .D1(\SinCos1/SLICE_2266/SinCos1/triglut_1_0_5_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2266_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC36) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h447D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2267 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2267/SinCos1/triglut_1_0_6_1_H1 , 
         \SinCos1/SLICE_2267/SinCos1/SLICE_2267_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40102 \SinCos1/triglut_1_0_6_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2267/SinCos1/triglut_1_0_6_1_H1 ));
  lut40103 \SinCos1/SLICE_2267_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2267/SinCos1/SLICE_2267_K0_H0 ));
  vmuxregsre \SinCos1/FF_35 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2267_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2267/SinCos1/SLICE_2267_K0_H0 ), 
    .D1(\SinCos1/SLICE_2267/SinCos1/triglut_1_0_6_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2267_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F92) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC9F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2268 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2268/SinCos1/triglut_1_0_7_1_H1 , 
         \SinCos1/SLICE_2268/SinCos1/SLICE_2268_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40104 \SinCos1/triglut_1_0_7_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2268/SinCos1/triglut_1_0_7_1_H1 ));
  lut40105 \SinCos1/SLICE_2268_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2268/SinCos1/SLICE_2268_K0_H0 ));
  vmuxregsre \SinCos1/FF_36 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2268_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2268/SinCos1/SLICE_2268_K0_H0 ), 
    .D1(\SinCos1/SLICE_2268/SinCos1/triglut_1_0_7_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2268_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3CDB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h97F5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2269 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2269/SinCos1/triglut_1_0_8_1_H1 , 
         \SinCos1/SLICE_2269/SinCos1/SLICE_2269_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40106 \SinCos1/triglut_1_0_8_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2269/SinCos1/triglut_1_0_8_1_H1 ));
  lut40107 \SinCos1/SLICE_2269_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2269/SinCos1/SLICE_2269_K0_H0 ));
  vmuxregsre \SinCos1/FF_37 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2269_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2269/SinCos1/SLICE_2269_K0_H0 ), 
    .D1(\SinCos1/SLICE_2269/SinCos1/triglut_1_0_8_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2269_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5685) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD55F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2270 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, 
    FXB, FXA, CLK, output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2270/SinCos1/triglut_1_0_9_1_H1 , 
         \SinCos1/SLICE_2270/SinCos1/SLICE_2270_K0_H0 , VCCI, GNDI, DI1_dly, 
         CLK_dly;

  lut40087 \SinCos1/triglut_1_0_9_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2270/SinCos1/triglut_1_0_9_1_H1 ));
  lut40108 \SinCos1/SLICE_2270_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2270/SinCos1/SLICE_2270_K0_H0 ));
  vmuxregsre \SinCos1/FF_38 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \SinCos1/SLICE_2270_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2270/SinCos1/SLICE_2270_K0_H0 ), 
    .D1(\SinCos1/SLICE_2270/SinCos1/triglut_1_0_9_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2270_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2271 ( input D1, C1, B1, A1, DI1, M1, M0, FXB, FXA, CLK, 
    output OFX0, Q1, OFX1 );
  wire   \SinCos1/SLICE_2271/SinCos1/triglut_1_0_10_1_H1 , GNDI, 
         \SinCos1/SLICE_2271/SinCos1/SLICE_2271_K0_H0 , VCCI, DI1_dly, CLK_dly;

  lut40109 \SinCos1/triglut_1_0_10_1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2271/SinCos1/triglut_1_0_10_1_H1 ));
  lut40088 \SinCos1/SLICE_2271_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2271/SinCos1/SLICE_2271_K0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_39 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \SinCos1/SLICE_2271_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2271/SinCos1/SLICE_2271_K0_H0 ), 
    .D1(\SinCos1/SLICE_2271/SinCos1/triglut_1_0_10_1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2271_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0155) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2272 ( input DI1, M1, FXB, FXA, CLK, output OFX0, Q1, 
    OFX1 );
  wire   GNDI, \SinCos1/SLICE_2272/SinCos1/triglut_1_0_11_1_H0 , VCCI, DI1_dly, 
         CLK_dly;

  lut40110 \SinCos1/triglut_1_0_11_1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2272/SinCos1/triglut_1_0_11_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_40 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux20089 \SinCos1/SLICE_2272_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2272/SinCos1/triglut_1_0_11_1_H0 ), .Z(OFX0));
  selmux2 \SinCos1/SLICE_2272_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2273 ( input CLK, output Q0 );
  wire   GNDI, VCCI;

  vmuxregsre \SinCos1/FF_41 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK), .LSR(GNDI), .Q(Q0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2274 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre \SinCos1/FF_55 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2275 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Cos/mux_1236_i5_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Cos/mux_1236_i4_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2276 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Cos/mux_1236_i7_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Cos/mux_1236_i6_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2277 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Cos/mux_1236_i9_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Cos/mux_1236_i8_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2278 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Cos/mux_1236_i11_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Cos/mux_1236_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2279 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Cos/mux_1236_i13_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Cos/mux_1236_i12_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2280 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 \CIC1Cos/mux_1236_i15_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CIC1Cos/mux_1236_i14_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CIC1Cos/d10__i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CIC1Cos/d10__i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2281 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40054 \CIC1Cos/mux_1236_i16_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CIC1Cos/d10__i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_2283 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \ncoGen/i4905_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \ncoGen/phase_accum_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2284 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2285 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2286 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_rx1/o_Rx_Byte_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_rx1/o_Rx_Byte_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2288 ( input A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40049 \uart_rx1/r_Rx_DV_last_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \uart_rx1/o_Rx_DV_59 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2289 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i1( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2290 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i2( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2291 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i5( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i4( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2292 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i7( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i6( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2293 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i9( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i8( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2294 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i11( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i10( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2295 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i13( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i12( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2296 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i15( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i14( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2297 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i17( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i16( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2298 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i19( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i18( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2299 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i21( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i20( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2300 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i23( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i22( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2301 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i25( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i24( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2302 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i27( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i26( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2303 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i29( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i28( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2304 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i31( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i30( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2305 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i33( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i32( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2306 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i35( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i34( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2307 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i37( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i36( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2308 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i39( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i38( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2309 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i41( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i40( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2310 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i43( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i42( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2311 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i45( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i44( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2312 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i47( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i46( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2313 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i49( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i48( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2314 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i51( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i50( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2315 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i53( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i52( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2316 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i55( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i54( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2317 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i57( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i56( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2318 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i59( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i58( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2319 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i61( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i60( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2320 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre phase_inc_carrGen1_i63( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre phase_inc_carrGen1_i62( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2321 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre phase_inc_carrGen_i0_i1( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2322 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40111 \uart_rx1/i1_3_lut_adj_55 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40112 \uart_rx1/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/r_Bit_Index_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_rx1/r_Bit_Index_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4848) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2323 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40113 \uart_rx1/r_Bit_Index_2__bdd_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \uart_rx1/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/r_Bit_Index_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6A6A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2324 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2325 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2326 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2327 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2328 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2329 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2330 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2331 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart_rx1/r_Rx_Byte_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2332 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40114 \uart_rx1/i1_4_lut_adj_52 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40115 \uart_rx1/i5739_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \uart_rx1/r_Rx_DV_64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0405) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2333 ( input M0, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \uart_rx1/r_Rx_DV_last_60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2335 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0066 \uart_rx1/r_Rx_Data_62 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0066 \uart_rx1/r_Rx_Data_R_61 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2336 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, 
    LSR, CLK, output OFX0, Q0 );
  wire   \uart_rx1/SLICE_2336/uart_rx1/SLICE_2336_K1_H1 , 
         \uart_rx1/SLICE_2336/uart_rx1/r_SM_Main_2__I_0_69_Mux_0_i3/GATE_H0 , 
         VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40116 \uart_rx1/SLICE_2336_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\uart_rx1/SLICE_2336/uart_rx1/SLICE_2336_K1_H1 ));
  lut40117 \uart_rx1/r_SM_Main_2__I_0_69_Mux_0_i3/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\uart_rx1/SLICE_2336/uart_rx1/r_SM_Main_2__I_0_69_Mux_0_i3/GATE_H0 ));
  vmuxregsre0006 \uart_rx1/r_SM_Main_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \uart_rx1/SLICE_2336_K0K1MUX ( 
    .D0(\uart_rx1/SLICE_2336/uart_rx1/r_SM_Main_2__I_0_69_Mux_0_i3/GATE_H0 ), 
    .D1(\uart_rx1/SLICE_2336/uart_rx1/SLICE_2336_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h40AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD1DD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2337 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, LSR, 
    CLK, output OFX0, Q0 );
  wire   GNDI, \uart_rx1/SLICE_2337/uart_rx1/SLICE_2337_K1_H1 , 
         \uart_rx1/SLICE_2337/uart_rx1/i5806/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         LSR_dly;

  lut40118 \uart_rx1/SLICE_2337_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\uart_rx1/SLICE_2337/uart_rx1/SLICE_2337_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40119 \uart_rx1/i5806/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\uart_rx1/SLICE_2337/uart_rx1/i5806/GATE_H0 ));
  vmuxregsre0006 \uart_rx1/r_SM_Main_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \uart_rx1/SLICE_2337_K0K1MUX ( 
    .D0(\uart_rx1/SLICE_2337/uart_rx1/i5806/GATE_H0 ), 
    .D1(\uart_rx1/SLICE_2337/uart_rx1/SLICE_2337_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7070) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h707A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2338 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40120 \uart_rx1/i3055_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40121 \uart_rx1/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \uart_rx1/r_SM_Main_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_i5804_SLICE_2339 ( input D1, C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   \uart_rx1/i5804/SLICE_2339/uart_rx1/i5804/SLICE_2339_K1_H1 , GNDI, 
         \uart_rx1/i5804/SLICE_2339/uart_rx1/i5804/GATE_H0 ;

  lut40122 \uart_rx1/i5804/SLICE_2339_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\uart_rx1/i5804/SLICE_2339/uart_rx1/i5804/SLICE_2339_K1_H1 ));
  lut40123 \uart_rx1/i5804/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\uart_rx1/i5804/SLICE_2339/uart_rx1/i5804/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \uart_rx1/i5804/SLICE_2339_K0K1MUX ( 
    .D0(\uart_rx1/i5804/SLICE_2339/uart_rx1/i5804/GATE_H0 ), 
    .D1(\uart_rx1/i5804/SLICE_2339/uart_rx1/i5804/SLICE_2339_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8BB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8B8B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2340 ( input C1, B1, A1, D0, C0, B0, A0, output OFX0, F1 );
  wire   GNDI, \SinCos1/SLICE_2340/SinCos1/triglut_1_0_23_0_H0 ;

  lut40054 \SinCos1/muxb_56/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40124 \SinCos1/triglut_1_0_23_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2340/SinCos1/triglut_1_0_23_0_H0 ));
  selmux20089 \SinCos1/SLICE_2340_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2340/SinCos1/triglut_1_0_23_0_H0 ), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2341 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2341/SinCos1/SLICE_2341_K1_H1 , 
         \SinCos1/SLICE_2341/SinCos1/triglut_1_0_22_0_H0 ;

  lut40125 \SinCos1/SLICE_2341_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SinCos1/SLICE_2341/SinCos1/SLICE_2341_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40126 \SinCos1/triglut_1_0_22_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2341/SinCos1/triglut_1_0_22_0_H0 ));
  selmux2 \SinCos1/SLICE_2341_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2341/SinCos1/triglut_1_0_22_0_H0 ), 
    .D1(\SinCos1/SLICE_2341/SinCos1/SLICE_2341_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h502A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2342 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2342/SinCos1/SLICE_2342_K1_H1 , 
         \SinCos1/SLICE_2342/SinCos1/triglut_1_0_21_0_H0 ;

  lut40127 \SinCos1/SLICE_2342_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SinCos1/SLICE_2342/SinCos1/SLICE_2342_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40128 \SinCos1/triglut_1_0_21_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2342/SinCos1/triglut_1_0_21_0_H0 ));
  selmux2 \SinCos1/SLICE_2342_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2342/SinCos1/triglut_1_0_21_0_H0 ), 
    .D1(\SinCos1/SLICE_2342/SinCos1/SLICE_2342_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEBEB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA56A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2343 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2343/SinCos1/SLICE_2343_K1_H1 , 
         \SinCos1/SLICE_2343/SinCos1/triglut_1_0_20_0_H0 ;

  lut40129 \SinCos1/SLICE_2343_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2343/SinCos1/SLICE_2343_K1_H1 ));
  lut40130 \SinCos1/triglut_1_0_20_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2343/SinCos1/triglut_1_0_20_0_H0 ));
  selmux2 \SinCos1/SLICE_2343_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2343/SinCos1/triglut_1_0_20_0_H0 ), 
    .D1(\SinCos1/SLICE_2343/SinCos1/SLICE_2343_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFAD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4D30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2344 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2344/SinCos1/SLICE_2344_K1_H1 , 
         \SinCos1/SLICE_2344/SinCos1/triglut_1_0_19_0_H0 ;

  lut40131 \SinCos1/SLICE_2344_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2344/SinCos1/SLICE_2344_K1_H1 ));
  lut40132 \SinCos1/triglut_1_0_19_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2344/SinCos1/triglut_1_0_19_0_H0 ));
  selmux2 \SinCos1/SLICE_2344_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2344/SinCos1/triglut_1_0_19_0_H0 ), 
    .D1(\SinCos1/SLICE_2344/SinCos1/SLICE_2344_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEC6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9E3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2345 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2345/SinCos1/SLICE_2345_K1_H1 , 
         \SinCos1/SLICE_2345/SinCos1/triglut_1_0_18_0_H0 ;

  lut40133 \SinCos1/SLICE_2345_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2345/SinCos1/SLICE_2345_K1_H1 ));
  lut40134 \SinCos1/triglut_1_0_18_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2345/SinCos1/triglut_1_0_18_0_H0 ));
  selmux2 \SinCos1/SLICE_2345_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2345/SinCos1/triglut_1_0_18_0_H0 ), 
    .D1(\SinCos1/SLICE_2345/SinCos1/SLICE_2345_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE977) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h464C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2346 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2346/SinCos1/SLICE_2346_K1_H1 , 
         \SinCos1/SLICE_2346/SinCos1/triglut_1_0_17_0_H0 ;

  lut40135 \SinCos1/SLICE_2346_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2346/SinCos1/SLICE_2346_K1_H1 ));
  lut40136 \SinCos1/triglut_1_0_17_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2346/SinCos1/triglut_1_0_17_0_H0 ));
  selmux2 \SinCos1/SLICE_2346_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2346/SinCos1/triglut_1_0_17_0_H0 ), 
    .D1(\SinCos1/SLICE_2346/SinCos1/SLICE_2346_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE600) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF782) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2347 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2347/SinCos1/SLICE_2347_K1_H1 , 
         \SinCos1/SLICE_2347/SinCos1/triglut_1_0_16_0_H0 ;

  lut40137 \SinCos1/SLICE_2347_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2347/SinCos1/SLICE_2347_K1_H1 ));
  lut40138 \SinCos1/triglut_1_0_16_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2347/SinCos1/triglut_1_0_16_0_H0 ));
  selmux2 \SinCos1/SLICE_2347_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2347/SinCos1/triglut_1_0_16_0_H0 ), 
    .D1(\SinCos1/SLICE_2347/SinCos1/SLICE_2347_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDE7D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h80D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2348 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2348/SinCos1/SLICE_2348_K1_H1 , 
         \SinCos1/SLICE_2348/SinCos1/triglut_1_0_15_0_H0 ;

  lut40139 \SinCos1/SLICE_2348_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2348/SinCos1/SLICE_2348_K1_H1 ));
  lut40140 \SinCos1/triglut_1_0_15_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2348/SinCos1/triglut_1_0_15_0_H0 ));
  selmux2 \SinCos1/SLICE_2348_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2348/SinCos1/triglut_1_0_15_0_H0 ), 
    .D1(\SinCos1/SLICE_2348/SinCos1/SLICE_2348_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB556) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2349 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2349/SinCos1/SLICE_2349_K1_H1 , 
         \SinCos1/SLICE_2349/SinCos1/triglut_1_0_14_0_H0 ;

  lut40141 \SinCos1/SLICE_2349_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2349/SinCos1/SLICE_2349_K1_H1 ));
  lut40142 \SinCos1/triglut_1_0_14_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2349/SinCos1/triglut_1_0_14_0_H0 ));
  selmux2 \SinCos1/SLICE_2349_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2349/SinCos1/triglut_1_0_14_0_H0 ), 
    .D1(\SinCos1/SLICE_2349/SinCos1/SLICE_2349_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF990) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF600) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2350 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2350/SinCos1/SLICE_2350_K1_H1 , 
         \SinCos1/SLICE_2350/SinCos1/triglut_1_0_13_0_H0 ;

  lut40143 \SinCos1/SLICE_2350_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2350/SinCos1/SLICE_2350_K1_H1 ));
  lut40144 \SinCos1/triglut_1_0_13_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2350/SinCos1/triglut_1_0_13_0_H0 ));
  selmux2 \SinCos1/SLICE_2350_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2350/SinCos1/triglut_1_0_13_0_H0 ), 
    .D1(\SinCos1/SLICE_2350/SinCos1/SLICE_2350_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h47D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2351 ( input D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2351/SinCos1/SLICE_2351_K1_H1 , 
         \SinCos1/SLICE_2351/SinCos1/triglut_1_0_11_0_H0 ;

  lut40110 \SinCos1/SLICE_2351_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SinCos1/SLICE_2351/SinCos1/SLICE_2351_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40145 \SinCos1/triglut_1_0_11_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2351/SinCos1/triglut_1_0_11_0_H0 ));
  selmux2 \SinCos1/SLICE_2351_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2351/SinCos1/triglut_1_0_11_0_H0 ), 
    .D1(\SinCos1/SLICE_2351/SinCos1/SLICE_2351_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2352 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SinCos1/SLICE_2352/SinCos1/SLICE_2352_K1_H1 , 
         \SinCos1/SLICE_2352/SinCos1/triglut_1_0_10_0_H0 ;

  lut40146 \SinCos1/SLICE_2352_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SinCos1/SLICE_2352/SinCos1/SLICE_2352_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 \SinCos1/triglut_1_0_10_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2352/SinCos1/triglut_1_0_10_0_H0 ));
  selmux2 \SinCos1/SLICE_2352_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2352/SinCos1/triglut_1_0_10_0_H0 ), 
    .D1(\SinCos1/SLICE_2352/SinCos1/SLICE_2352_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1515) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2353 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2353/SinCos1/SLICE_2353_K1_H1 , 
         \SinCos1/SLICE_2353/SinCos1/triglut_1_0_9_0_H0 ;

  lut40126 \SinCos1/SLICE_2353_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2353/SinCos1/SLICE_2353_K1_H1 ));
  lut40147 \SinCos1/triglut_1_0_9_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2353/SinCos1/triglut_1_0_9_0_H0 ));
  selmux2 \SinCos1/SLICE_2353_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2353/SinCos1/triglut_1_0_9_0_H0 ), 
    .D1(\SinCos1/SLICE_2353/SinCos1/SLICE_2353_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2354 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2354/SinCos1/SLICE_2354_K1_H1 , 
         \SinCos1/SLICE_2354/SinCos1/triglut_1_0_8_0_H0 ;

  lut40148 \SinCos1/SLICE_2354_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2354/SinCos1/SLICE_2354_K1_H1 ));
  lut40149 \SinCos1/triglut_1_0_8_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2354/SinCos1/triglut_1_0_8_0_H0 ));
  selmux2 \SinCos1/SLICE_2354_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2354/SinCos1/triglut_1_0_8_0_H0 ), 
    .D1(\SinCos1/SLICE_2354/SinCos1/SLICE_2354_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A97) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD57E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2355 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2355/SinCos1/SLICE_2355_K1_H1 , 
         \SinCos1/SLICE_2355/SinCos1/triglut_1_0_7_0_H0 ;

  lut40150 \SinCos1/SLICE_2355_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2355/SinCos1/SLICE_2355_K1_H1 ));
  lut40151 \SinCos1/triglut_1_0_7_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2355/SinCos1/triglut_1_0_7_0_H0 ));
  selmux2 \SinCos1/SLICE_2355_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2355/SinCos1/triglut_1_0_7_0_H0 ), 
    .D1(\SinCos1/SLICE_2355/SinCos1/SLICE_2355_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h32C9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD7D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2356 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2356/SinCos1/SLICE_2356_K1_H1 , 
         \SinCos1/SLICE_2356/SinCos1/triglut_1_0_6_0_H0 ;

  lut40152 \SinCos1/SLICE_2356_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2356/SinCos1/SLICE_2356_K1_H1 ));
  lut40153 \SinCos1/triglut_1_0_6_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2356/SinCos1/triglut_1_0_6_0_H0 ));
  selmux2 \SinCos1/SLICE_2356_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2356/SinCos1/triglut_1_0_6_0_H0 ), 
    .D1(\SinCos1/SLICE_2356/SinCos1/SLICE_2356_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8DD6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2357 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2357/SinCos1/SLICE_2357_K1_H1 , 
         \SinCos1/SLICE_2357/SinCos1/triglut_1_0_5_0_H0 ;

  lut40154 \SinCos1/SLICE_2357_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2357/SinCos1/SLICE_2357_K1_H1 ));
  lut40155 \SinCos1/triglut_1_0_5_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2357/SinCos1/triglut_1_0_5_0_H0 ));
  selmux2 \SinCos1/SLICE_2357_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2357/SinCos1/triglut_1_0_5_0_H0 ), 
    .D1(\SinCos1/SLICE_2357/SinCos1/SLICE_2357_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC989) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBA5E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2358 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2358/SinCos1/SLICE_2358_K1_H1 , 
         \SinCos1/SLICE_2358/SinCos1/triglut_1_0_4_0_H0 ;

  lut40156 \SinCos1/SLICE_2358_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2358/SinCos1/SLICE_2358_K1_H1 ));
  lut40157 \SinCos1/triglut_1_0_4_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2358/SinCos1/triglut_1_0_4_0_H0 ));
  selmux2 \SinCos1/SLICE_2358_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2358/SinCos1/triglut_1_0_4_0_H0 ), 
    .D1(\SinCos1/SLICE_2358/SinCos1/SLICE_2358_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h07BE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h019C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2359 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2359/SinCos1/SLICE_2359_K1_H1 , 
         \SinCos1/SLICE_2359/SinCos1/triglut_1_0_3_0_H0 ;

  lut40158 \SinCos1/SLICE_2359_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2359/SinCos1/SLICE_2359_K1_H1 ));
  lut40159 \SinCos1/triglut_1_0_3_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2359/SinCos1/triglut_1_0_3_0_H0 ));
  selmux2 \SinCos1/SLICE_2359_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2359/SinCos1/triglut_1_0_3_0_H0 ), 
    .D1(\SinCos1/SLICE_2359/SinCos1/SLICE_2359_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF9EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2360 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2360/SinCos1/SLICE_2360_K1_H1 , 
         \SinCos1/SLICE_2360/SinCos1/triglut_1_0_2_0_H0 ;

  lut40160 \SinCos1/SLICE_2360_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2360/SinCos1/SLICE_2360_K1_H1 ));
  lut40161 \SinCos1/triglut_1_0_2_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2360/SinCos1/triglut_1_0_2_0_H0 ));
  selmux2 \SinCos1/SLICE_2360_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2360/SinCos1/triglut_1_0_2_0_H0 ), 
    .D1(\SinCos1/SLICE_2360/SinCos1/SLICE_2360_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDC44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAB6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2361 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2361/SinCos1/SLICE_2361_K1_H1 , 
         \SinCos1/SLICE_2361/SinCos1/triglut_1_0_1_0_H0 ;

  lut40162 \SinCos1/SLICE_2361_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2361/SinCos1/SLICE_2361_K1_H1 ));
  lut40163 \SinCos1/triglut_1_0_1_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2361/SinCos1/triglut_1_0_1_0_H0 ));
  selmux2 \SinCos1/SLICE_2361_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2361/SinCos1/triglut_1_0_1_0_H0 ), 
    .D1(\SinCos1/SLICE_2361/SinCos1/SLICE_2361_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h01BC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h267C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2362 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \SinCos1/SLICE_2362/SinCos1/SLICE_2362_K1_H1 , 
         \SinCos1/SLICE_2362/SinCos1/triglut_1_0_0_0_H0 ;

  lut40164 \SinCos1/SLICE_2362_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SinCos1/SLICE_2362/SinCos1/SLICE_2362_K1_H1 ));
  lut40165 \SinCos1/triglut_1_0_0_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SinCos1/SLICE_2362/SinCos1/triglut_1_0_0_0_H0 ));
  selmux2 \SinCos1/SLICE_2362_K0K1MUX ( 
    .D0(\SinCos1/SLICE_2362/SinCos1/triglut_1_0_0_0_H0 ), 
    .D1(\SinCos1/SLICE_2362/SinCos1/SLICE_2362_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3C34) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAF88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2363 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40166 \uart_rx1/i1940_3_lut_4_lut_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40112 i1_2_lut_rep_70_3_lut_4_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5054) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2364 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40167 \uart_rx1/n13287_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 mux_743_i3_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2365 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40168 \uart_rx1/i1_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40169 \uart_rx1/mux_318_i4_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2366 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40170 mux_318_i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 \uart_rx1/i1_2_lut_rep_65_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2367 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 \CIC1Sin/shift_right_31_i132_3_lut_4_lut_adj_39 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40054 \CIC1Sin/shift_right_31_i62_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2368 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 \CIC1Sin/shift_right_31_i133_3_lut_4_lut_adj_37 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40054 \CIC1Sin/shift_right_31_i63_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2369 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 \CIC1Sin/shift_right_31_i134_3_lut_4_lut_adj_41 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40054 \CIC1Sin/shift_right_31_i64_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2370 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Cos/shift_right_31_i67_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i137_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2371 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Cos/shift_right_31_i68_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i138_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2372 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 \CIC1Sin/shift_right_31_i135_3_lut_4_lut_adj_40 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40054 \CIC1Sin/shift_right_31_i65_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2373 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Cos/shift_right_31_i65_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i135_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2374 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Cos/shift_right_31_i66_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i136_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2375 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Cos/shift_right_31_i63_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i133_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2376 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Cos/shift_right_31_i64_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i134_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2377 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Cos/shift_right_31_i61_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i131_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2378 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Cos/shift_right_31_i62_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i132_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2379 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Sin/shift_right_31_i68_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i138_3_lut_4_lut_adj_35 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2380 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \CIC1Sin/shift_right_31_i67_3_lut_rep_80 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CIC1Sin/shift_right_31_i137_3_lut_4_lut_adj_36 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2381 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 \CIC1Sin/shift_right_31_i136_3_lut_4_lut_adj_38 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40054 \CIC1Sin/shift_right_31_i66_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2382 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 \CIC1Sin/shift_right_31_i131_3_lut_4_lut_adj_42 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40054 \CIC1Sin/shift_right_31_i61_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2383 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 \PWM1/i2_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40172 \PWM1/i5754_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2384 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40173 \uart_rx1/i352_2_lut_rep_64_3_lut_3_lut_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 mux_318_i55_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2385 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i61_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1806_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFB0B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2386 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i59_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1802_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2387 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 i2967_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 mux_318_i56_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2388 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 i1_2_lut_rep_72( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 i1975_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2389 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i60_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1804_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2390 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i31_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1754_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2391 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i48_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1784_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2392 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 i1778_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_318_i44_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2393 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40179 i1794_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_318_i54_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF707) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2394 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 i3027_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 mux_318_i51_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2395 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 i1790_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_318_i52_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2396 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40181 \uart_rx1/i1_3_lut_4_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 mux_318_i41_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8D8D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2397 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i33_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1758_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2398 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i34_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1760_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2399 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i38_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40179 i1768_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2400 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i43_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1776_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2401 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40178 i1786_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_318_i49_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2402 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 i2966_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 mux_318_i50_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2403 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40182 i5699_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40173 i1_2_lut_rep_73_3_lut_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1333) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2404 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40183 mux_318_i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40184 i2306_2_lut_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2405 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40185 \uart_rx1/n12931_bdd_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40186 i1_4_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5140) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00C4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2406 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40187 i5751_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 i1_3_lut_rep_79( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2407 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i27_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1746_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2408 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40112 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40115 i1_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/o_Rx_Byte_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2409 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i17_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1728_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2410 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40179 i1782_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 mux_318_i47_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2411 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i36_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1764_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2412 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i37_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1766_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2413 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i28_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40179 i1748_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2414 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40188 \uart_rx1/i2965_2_lut_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40175 mux_318_i45_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2415 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i11_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1720_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2416 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i40_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1772_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2417 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i29_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1750_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2418 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40180 i1780_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40174 mux_318_i46_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2419 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i26_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1744_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2420 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i32_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1756_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2421 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i5_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1710_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2422 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i39_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1770_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2423 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i24_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 i1740_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2424 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i21_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40179 i1736_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2425 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i25_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1742_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2426 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i15_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1726_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2427 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40189 \uart_rx1/i1_2_lut_rep_63_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40172 \uart_rx1/i5683_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2428 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40190 i5737_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40191 \uart_rx1/i5743_4_lut_4_lut_rep_113 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC4C4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h40F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2429 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40192 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40191 \uart_rx1/i5743_4_lut_4_lut_rep_114 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \uart_rx1/o_Rx_Byte_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2430 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40193 o_Rx_Byte_c_0_bdd_4_lut_5762( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40191 \uart_rx1/i5743_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC9D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2431 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40172 \uart_rx1/i5719_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \uart_rx1/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2432 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40175 mux_318_i57_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40188 \uart_rx1/i3032_2_lut_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2433 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40174 mux_318_i23_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40181 \uart_rx1/i1_3_lut_4_lut_3_lut_adj_44 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2434 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40175 mux_318_i30_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40188 \uart_rx1/i3023_2_lut_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2435 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40174 mux_318_i16_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40181 \uart_rx1/i1_3_lut_4_lut_3_lut_adj_45 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2436 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 \uart_rx1/i1_2_lut_adj_50 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \uart_rx1/i1_4_lut_adj_46 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2437 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40194 \uart_rx1/i1_4_lut_4_lut_adj_56 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40195 \uart_rx1/i1_4_lut_adj_48 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h04FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2438 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40196 \uart_rx1/i1_2_lut_rep_67_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40197 \uart_rx1/i5726_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2439 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \uart_rx1/i1_2_lut_rep_75 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40198 \uart_rx1/i5721_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2440 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i13_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 \uart_rx1/i3089_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2441 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40199 \uart_rx1/i5746_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40200 \uart_rx1/i1_2_lut_rep_66_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5455) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2442 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40175 mux_318_i19_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 i1732_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2443 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i9_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1716_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2444 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i10_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40179 i1718_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2445 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 mux_318_i6_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40178 i1712_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2446 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40178 i1762_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40174 mux_318_i35_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2447 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40201 i1965_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40202 i3558_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2448 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \SinCos1/LUT4_1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 \SinCos1/muxb_57/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2449 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 i3022_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 mux_318_i22_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2450 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40177 i1971_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40202 i3532_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2451 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 i3017_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 mux_318_i12_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2452 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 i3033_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 mux_318_i58_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2453 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \CIC1Sin/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \CIC1Sin/i5704_4_lut_rep_95 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2454 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 \CIC1Sin/i5704_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 \CIC1Sin/i5645_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2455 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 \CIC1Sin/i4_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40203 \CIC1Sin/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Sin_SLICE_2456 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40053 \CIC1Sin/i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40188 \CIC1Sin/i5706_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2457 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \CIC1Cos/i5635_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \CIC1Cos/i5686_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2458 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 \CIC1Cos/i5686_4_lut_rep_97 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \CIC1Cos/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2459 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 \CIC1Cos/i4_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40203 \CIC1Cos/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2460 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40204 \uart_rx1/i5714_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40205 \uart_rx1/i5716_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2461 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40198 \uart_rx1/n2632_bdd_4_lut_5779_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40115 \uart_rx1/n2632_bdd_4_lut_5756_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2462 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40206 \uart_rx1/mux_743_i22_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40207 mux_743_i2_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7474) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD1D1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2463 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40208 \uart_rx1/i21_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40171 \uart_rx1/i1_3_lut_rep_68 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2464 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40209 \uart_rx1/i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \uart_rx1/i1_2_lut_adj_49 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module PWM1_SLICE_2465 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40051 \PWM1/i5_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \PWM1/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2466 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40210 \uart_rx1/i1_3_lut_rep_76 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \uart_rx1/i1_2_lut_adj_51 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CIC1Cos_SLICE_2467 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 \CIC1Cos/i5655_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40188 \CIC1Cos/i5728_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2468 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40053 \CIC1Cos/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \CIC1Cos/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2469 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \uart_rx1/i1_2_lut_adj_53 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40211 \uart_rx1/i1_4_lut_adj_54 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SinCos1_SLICE_2470 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 \SinCos1/muxb_55/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \SinCos1/muxb_54/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2471 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40212 \uart_rx1/i5709_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40198 \uart_rx1/i5711_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2472 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40202 i3504_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40202 i3540_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2473 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40202 i3496_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40202 i3516_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2474 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40213 \uart_rx1/i5734_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40202 i3560_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2475 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40115 i1_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40202 i3562_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWM1_SLICE_2476 ( input D0, C0, B0, A0, output F0 );

  lut40053 \PWM1/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2477 ( input D0, C0, B0, A0, output F0 );

  lut40176 i1796_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2478 ( input D0, C0, B0, A0, output F0 );

  lut40177 i1973_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2479 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40048 i2884_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2480 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40214 \uart_rx1/i2874_2_lut_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_rx1_SLICE_2481 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40188 \uart_rx1/i1_2_lut_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2482 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40214 \uart_rx1/i1_2_lut_rep_69_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2483 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40214 \uart_rx1/i1_2_lut_rep_74_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2484 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40051 \uart_rx1/i1_2_lut_adj_47 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx1_SLICE_2485 ( input D0, C0, B0, A0, output F0 );

  lut40215 \uart_rx1/i5724_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_2486 ( input A0, output F0 );
  wire   GNDI;

  lut40049 PWMOut_I_0_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SinCos1_SLICE_2487 ( input C0, B0, A0, M0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40054 \SinCos1/muxb_52/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \SinCos1/FF_56 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SinCos1_muxb_39_SLICE_2488 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40054 \SinCos1/muxb_39/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2489 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40051 i5413_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2490 ( input D0, C0, B0, A0, output F0 );

  lut40177 i1969_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2491 ( input D0, C0, B0, A0, output F0 );

  lut40177 i1979_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2492 ( input D0, C0, B0, A0, output F0 );

  lut40177 i1981_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2493 ( input D0, C0, B0, A0, output F0 );

  lut40177 i1977_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2494 ( input D0, C0, B0, A0, output F0 );

  lut40177 i1967_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ncoGen_SLICE_2495 ( input A0, output F0 );
  wire   GNDI;

  lut40049 \ncoGen/phase_accum_63__I_0_13_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2496 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40054 \CIC1Sin/shift_right_31_i70_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2497 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40051 \CIC1Sin/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2498 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4969_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2499 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4966_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2500 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4963_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2501 ( input D0, C0, B0, A0, output F0 );

  lut40055 \CIC1Sin/i5657_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2502 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4960_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Sin_SLICE_2503 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Sin/i4957_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2504 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40051 \CIC1Cos/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2505 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4948_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2506 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4942_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2507 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4951_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2508 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4954_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2509 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40054 \CIC1Cos/shift_right_31_i70_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC1Cos_SLICE_2510 ( input B0, A0, output F0 );
  wire   GNDI;

  lut4 \CIC1Cos/i4945_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2511 ( input A0, output F0 );
  wire   GNDI;

  lut40049 \AMDemodulator1/d_out_d_11__I_1_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2512 ( input A0, output F0 );
  wire   GNDI;

  lut40049 \AMDemodulator1/d_out_d_11__I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_SLICE_2513 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40216 \AMDemodulator1/i4984_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_SLICE_2514 ( input A0, output F0 );
  wire   GNDI;

  lut40049 \AMDemodulator1/i1328_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2515 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t25 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40217 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module AMDemodulator1_Multiplier2_SLICE_2516 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40048 \AMDemodulator1/Multiplier2/AND2_t24 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2517 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t22 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2518 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t19 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2519 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40048 \AMDemodulator1/Multiplier2/AND2_t18 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2520 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t16 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2521 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t13 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2522 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40048 \AMDemodulator1/Multiplier2/AND2_t12 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2523 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t10 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2524 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t9 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2525 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t8 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2526 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t7 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2527 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t6 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2528 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t5 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2529 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t4 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2530 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t3 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2531 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t2 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2532 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t1 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2533 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t0 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2534 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t26 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2535 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t23 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2536 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t20 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2537 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t17 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2538 ( input B0, A0, M0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t14 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier2/FF_88 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier2_SLICE_2539 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier2/ND2_t11 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2540 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t25 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2541 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40048 \AMDemodulator1/Multiplier1/AND2_t24 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2542 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t22 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2543 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t19 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2544 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40048 \AMDemodulator1/Multiplier1/AND2_t18 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2545 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t16 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2546 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t13 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2547 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40048 \AMDemodulator1/Multiplier1/AND2_t12 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2548 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t10 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2549 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t9 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2550 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t8 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2551 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t7 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2552 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t6 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2553 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t5 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2554 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t4 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2555 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t3 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2556 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t2 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2557 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t1 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2558 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t0 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2559 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t26 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2560 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t23 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2561 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t20 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2562 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t17 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2563 ( input B0, A0, M0, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t14 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \AMDemodulator1/Multiplier1/FF_88 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module AMDemodulator1_Multiplier1_SLICE_2564 ( input B0, A0, output F0 );
  wire   GNDI;

  lut40217 \AMDemodulator1/Multiplier1/ND2_t11 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_2565 ( output F0 );
  wire   GNDI;

  lut40088 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_2566 ( output F0 );
  wire   GNDI;

  lut40110 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module o_Rx_Byte_7_ ( input PADDO, output oRxByte7 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_7( .I(PADDO), .T(GNDI), .PAD(oRxByte7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte7) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module o_Rx_Byte_6_ ( input PADDO, output oRxByte6 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_6( .I(PADDO), .T(GNDI), .PAD(oRxByte6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte6) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_DV ( input PADDO, output o_Rx_DV );
  wire   GNDI;

  xo2iobuf o_Rx_DV_pad( .I(PADDO), .T(GNDI), .PAD(o_Rx_DV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_Rx_DV) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Tx_Serial ( input PADDO, output o_Tx_Serial );
  wire   GNDI;

  xo2iobuf0218 o_Tx_Serial_pad( .I(PADDO), .T(GNDI), .PAD(o_Tx_Serial));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => o_Tx_Serial) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0218 ( input I, T, output PAD );

  OBZPU INST5( .I(I), .T(T), .O(PAD));
endmodule

module o_Rx_Byte_5_ ( input PADDO, output oRxByte5 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_5( .I(PADDO), .T(GNDI), .PAD(oRxByte5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte5) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_4_ ( input PADDO, output oRxByte4 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_4( .I(PADDO), .T(GNDI), .PAD(oRxByte4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte4) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_3_ ( input PADDO, output oRxByte3 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_3( .I(PADDO), .T(GNDI), .PAD(oRxByte3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte3) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_2_ ( input PADDO, output oRxByte2 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_2( .I(PADDO), .T(GNDI), .PAD(oRxByte2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte2) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_1_ ( input PADDO, output oRxByte1 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_1( .I(PADDO), .T(GNDI), .PAD(oRxByte1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte1) = (0:0:0,0:0:0);
  endspecify

endmodule

module o_Rx_Byte_0_ ( input PADDO, output oRxByte0 );
  wire   GNDI;

  xo2iobuf o_Rx_Byte_pad_0( .I(PADDO), .T(GNDI), .PAD(oRxByte0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => oRxByte0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_7_ ( input PADDO, output MYLED7 );
  wire   GNDI;

  xo2iobuf0219 MYLED_pad_7( .I(PADDO), .T(GNDI), .PAD(MYLED7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED7) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0219 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module MYLED_6_ ( input PADDO, output MYLED6 );
  wire   GNDI;

  xo2iobuf0219 MYLED_pad_6( .I(PADDO), .T(GNDI), .PAD(MYLED6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED6) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_5_ ( input PADDO, output MYLED5 );
  wire   GNDI;

  xo2iobuf0219 MYLED_pad_5( .I(PADDO), .T(GNDI), .PAD(MYLED5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED5) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_4_ ( input PADDO, output MYLED4 );
  wire   GNDI;

  xo2iobuf0219 MYLED_pad_4( .I(PADDO), .T(GNDI), .PAD(MYLED4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED4) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_3_ ( input PADDO, output MYLED3 );
  wire   GNDI;

  xo2iobuf0219 MYLED_pad_3( .I(PADDO), .T(GNDI), .PAD(MYLED3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED3) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_2_ ( input PADDO, output MYLED2 );
  wire   GNDI;

  xo2iobuf0219 MYLED_pad_2( .I(PADDO), .T(GNDI), .PAD(MYLED2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED2) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_1_ ( input PADDO, output MYLED1 );
  wire   GNDI;

  xo2iobuf0219 MYLED_pad_1( .I(PADDO), .T(GNDI), .PAD(MYLED1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED1) = (0:0:0,0:0:0);
  endspecify

endmodule

module MYLED_0_ ( input PADDO, output MYLED0 );
  wire   GNDI;

  xo2iobuf0219 MYLED_pad_0( .I(PADDO), .T(GNDI), .PAD(MYLED0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MYLED0) = (0:0:0,0:0:0);
  endspecify

endmodule

module XOut ( input PADDO, output XOut );
  wire   GNDI;

  xo2iobuf XOut_pad( .I(PADDO), .T(GNDI), .PAD(XOut));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => XOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module DiffOut ( input PADDO, output DiffOut );
  wire   GNDI;

  xo2iobuf DiffOut_pad( .I(PADDO), .T(GNDI), .PAD(DiffOut));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => DiffOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOut ( input PADDO, output PWMOut );
  wire   GNDI;

  xo2iobuf PWMOut_pad( .I(PADDO), .T(GNDI), .PAD(PWMOut));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutP1 ( input PADDO, output PWMOutP1 );
  wire   GNDI;

  xo2iobuf PWMOutP1_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutP1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutP1) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutP2 ( input PADDO, output PWMOutP2 );
  wire   GNDI;

  xo2iobuf PWMOutP2_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutP2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutP2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutP3 ( input PADDO, output PWMOutP3 );
  wire   GNDI;

  xo2iobuf PWMOutP3_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutP3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutP3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutP4 ( input PADDO, output PWMOutP4 );
  wire   GNDI;

  xo2iobuf PWMOutP4_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutP4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutP4) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutN1 ( input PADDO, output PWMOutN1 );
  wire   GNDI;

  xo2iobuf PWMOutN1_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutN1) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutN2 ( input PADDO, output PWMOutN2 );
  wire   GNDI;

  xo2iobuf PWMOutN2_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutN2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutN2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutN3 ( input PADDO, output PWMOutN3 );
  wire   GNDI;

  xo2iobuf PWMOutN3_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutN3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutN3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PWMOutN4 ( input PADDO, output PWMOutN4 );
  wire   GNDI;

  xo2iobuf PWMOutN4_pad( .I(PADDO), .T(GNDI), .PAD(PWMOutN4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PWMOutN4) = (0:0:0,0:0:0);
  endspecify

endmodule

module sinGen ( input PADDO, output sinGen );
  wire   GNDI;

  xo2iobuf sinGen_pad( .I(PADDO), .T(GNDI), .PAD(sinGen));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sinGen) = (0:0:0,0:0:0);
  endspecify

endmodule

module sin_out ( input PADDO, output sin_out );
  wire   GNDI;

  xo2iobuf sin_out_pad( .I(PADDO), .T(GNDI), .PAD(sin_out));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sin_out) = (0:0:0,0:0:0);
  endspecify

endmodule

module CIC_out_clkSin ( input PADDO, output CIC_out_clkSin );
  wire   GNDI;

  xo2iobuf CIC_out_clkSin_pad( .I(PADDO), .T(GNDI), .PAD(CIC_out_clkSin));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => CIC_out_clkSin) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_Rx_Serial ( output PADDI, input i_Rx_Serial );

  xo2iobuf0220 i_Rx_Serial_pad( .Z(PADDI), .PAD(i_Rx_Serial));

  specify
    (i_Rx_Serial => PADDI) = (0:0:0,0:0:0);
    $width (posedge i_Rx_Serial, 0:0:0);
    $width (negedge i_Rx_Serial, 0:0:0);
  endspecify

endmodule

module xo2iobuf0220 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module RFIn ( output PADDI, input RFIn );

  xo2iobuf0221 RFIn_pad( .Z(PADDI), .PAD(RFIn));

  specify
    (RFIn => PADDI) = (0:0:0,0:0:0);
    $width (posedge RFIn, 0:0:0);
    $width (negedge RFIn, 0:0:0);
  endspecify

endmodule

module xo2iobuf0221 ( output Z, input PAD );

  IB INST1( .I(PAD), .O(Z));
endmodule

module OSCH_inst ( output OSC );
  wire   GNDI;

  OSCH_B OSCH_inst_OSCH( .STDBY(GNDI), .OSC(OSC), .SEDSTDBY());
  gnd DRIVEGND( .PWR0(GNDI));
endmodule

module OSCH_B ( input STDBY, output OSC, SEDSTDBY );

  OSCH INST10( .STDBY(STDBY), .SEDSTDBY(SEDSTDBY), .OSC(OSC));
  defparam INST10.NOM_FREQ = "88.67";
endmodule
